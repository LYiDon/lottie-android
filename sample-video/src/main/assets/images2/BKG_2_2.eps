%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 2.eps)%%CreationDate: 03.10.18 13:09%%Canvassize: 16383%%BoundingBox: 107 -2157 3835 1%%HiResBoundingBox: 107.6318 -2156.9258 3834.0107 0.289551%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -741.4468 408.3306 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 76 8%%BeginData: 4982 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFFCFFFFFFFCFFFCFFD2BFFCFFFFFFFCFCFCFFFCFFD38FFCFFD%0CFFCFFFFFCAFFFFCFCFFD2AFFCFCFFFFFFFC9FFFFFFCAFD05FFCAFD30FF%C9CFCFFD0BFFCFFFCFCFFFFFCAFD27FFCFFFFFFFCFCFFFFFFFCFFFFFCFFF%FFCFCACFCFCFCACFFD2FFFCACFC9CFCAFD07FFCACFFFCFCAFFC9FD25FFCA%CFCACFCACFCAFFCAFFFFFFC9FFFFCFC9CFCAFD05FFCACFFD30FFCFCACFCF%FD07FFCFFFCAFFCFFD26FFCFFD06FFCACFCFFFFFCFFFFFC9FD07FFCFCFFD%32FFCFCACFC9CFCAFFFFFFCAFFCFCFCACFFD26FFCAFD07FFCACFFFFFC9FF%CACFFD06FFCFCFCFFD23FFCAFD10FFFD04CFCAFFFFCFCACFCFCFFD28FFC9%FD07FFFD04CFCACFFD06FFCACFFD21FFCFFFFFCFCFCAFD10FFCACFCACFC9%CFCACFC9CFFD2AFFC9CFFD06FFC9CFCACFCAFFFFFFCACFCAFD22FFCFCAFF%C9FFFFFFCAFD12FFCFCFFD04FFCFCFCFFD27FFCFFFC9CFCFFD08FFCFFFCF%CFCFC9CFFD0EFFCFFD13FFCFFFFFCFFFFFCFFD14FFCACFCFFFFFCFCFFFC9%FD25FFCACFCAFFCFCFCACFCACFC9FFFFFFCAFFCFFFFFFFCFCFCAFD0BFFCA%FFCAFD10FFCFCACFCFFFCAFFFFCFCFFD14FFC9CFCACFC9FFFFCFFD24FFCA%FD0AFFCFCAFFCFCFCFFD06FFCFCFFD09FFCFFFFFCFFD12FFCFCFCFFFCFCF%CFFD12FFCFCFCACFCACFFFFFC9CFCFFD24FFCFCAFD05FFCFFFCACFCFCFC9%FFCFCFCAFD05FFCFCFFD06FFCACFC9CFCACFCAFD0FFFCFCFCACFC9CEC9CF%CACFCAFD11FFCFCFFFCAFFCFFD2BFFFD06CFC9FFFFFFCFCFFFFFCFCFCFFF%CFFFFFFFCFFD06FFCFFFCFC9FD12FFCFCFFFFFCFC9CFCFFFCFCFFD10FFCF%CAFFCFCFFFCFFD2EFFCFFFCACFFFFFFFCFC9FFFFFFCAFFCFCFCACFCAFD07%FFCACFCAFD12FFCFCAFFCFCFC9FFCAFFCAFD11FFCFCFFFFFCFFFFFCAFD2F%FFCFCFFD04FFCACFFFFFFFCFCFFD21FFCFCFCACFFFCFCFCFFD12FFCFC9FF%FFCFC9FFFFCFCFFD2EFFCFCAFFFFFFCACFCAFFFFFFCACFFD26FFCACFCAFD%12FFCAFFFFFFC9CFFFFFCFFD2FFFCFFD04FFCFFFFFCFFFFFFFCFFD3AFFCF%CFFFFFCACFCAFFCFCFFD2EFFCAFD04FFCFCAFFCFCFFFFFCFCFFD3BFFCFCF%CAFFCFFFFFFFCFFD33FFCFFFFFFFCFFFFFFFCFFD3CFFCFFFFFFFCAFFC9FD%2FFFCAFFFFFFC9FD05FFCACFCAFD42FFCAFD30FFCFFFFFCFFD07FFCFFD74%FFCACFCACFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDE1FFCAFD7EFFC9CFFD7EFFCFCFFD7CFFCACFC9CFFD7CFFCFCFCFC9%FD7CFFCFCFCAFD7DFFCFCFFFCAFD08FFCAFD73FFCACFC9CFFD7EFFCFCAFD%08FFCAFD74FFCFCACFFD08FFCFFD74FFCAFD09FFCFCAFD73FFCACFFD09FF%CFFD74FFCFFD04FFCFC9FFFFFFCAFD75FFCACFCACFFFCFFFCAFFFFCFFD74%FFCFCFFFFFCAFFFFCAFFCACFCAFD74FFCFC9CFC9FFFFFFFD04CFFD43FFCF%FD31FFCFCFCFFD04FFCFCFC9FD43FFCACFFD31FFCFCFFD07FFCFFD43FFCF%CFFFCFCFFD2EFFCFFD08FFCAFD43FFCAFFC9FFCAFD2DFFCACFFD07FFCFFD%33FFCFFFFFCFCFFD0BFFCFFFCFFD30FFCFFD09FFCAFFFFFFCFFD2DFFCACF%CACFCACFFD0CFFCFCFFFCFCAFD2DFFC9FD09FFCFFFFFCACFCFFD2DFFCAFF%C9FFCFFD0BFFCFCFCFFFCAFFCFFD2BFFCFFD0AFFCACFCAFFCACFFD2DFFCF%CACFC9CFCAFD0BFFC9CEC9CFC9FD2BFFCACFFD0AFFCFC9FFCFCFFD2CFFFD%04CFC9CFC9CFFD07FFCFCFFFCFCFCFFFCFCFCFFD2AFFCFFD07FFC9CFCFFF%CAFD21FFCACFCAFD0BFFCACFCFCFC9CFCACFCAFD07FFCACFCACFCACFCAFF%CACFCAFD28FFCFCAFD07FFCFCFCFFFCFFD20FFCFCFC9CFCFFD0BFFCAFD06%CFFD09FFCACFCFFFFFFFCFCFCFFD28FFCFCFFD08FFCFCFCACFCAFD1FFFCF%CFCAFFCFCFFFCFCAFD0BFFCACFCACFCFFD09FFC9FD2FFFC9FD0AFFCFCFC9%FD21FFCAFFFFFFCAFFCFCFFD0BFFCFCAFD19FFCFFD1DFFCFFFFFFFCAFD0C%FFCACFFD20FFCACFCAFFCACFC9CFCAFD18FFCFCAFD0BFFCAFFCAFD1CFFCF%CAFFCACFCACFFD0AFFCFCFFD21FFCFCFCFFFFFCFC9FD17FFC9FFCFCFC9FD%0BFFCACFFD0EFFCAFD0DFFCFCFCACFFFCFCAFD0AFFCAFD25FFCAFFC9C9CA%FD16FFC9C9CFC9CFCAFD0AFFCFCAFD0BFFCFFFCACFCACFFD0CFFC9C9CACF%CAFD0AFFCFFD15FFCFFFCFFD0DFFCFCFC9CFCAFD18FFCFC9FD0DFFCFCFCA%FD09FFCFCFFFCFCFFFCFFD0CFFCFCAFD0CFFCFCFFD12FFCACFCACFC9CFCF%FD0DFFCAFFFFCFCFFD17FFCFCFFD0CFFC9CEC9CFFD09FFCFC9CECAFFCAFD%0DFFCAFD0EFFCAFD11FFFD06CFCAFD11FFCFFD19FFCAFD0DFFCFCFCFFD0A%FFCFC9CFFD0FFFCFFD0DFFCFCFFD12FFCAFFCACEC9CFCACFCFFD0EFFCFCF%FD17FFCACFFD0EFFCACFFD0AFFCAFD11FFCAFD0CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Layer 3) Ln0 Au*u1 D0 O0.00238 0.11249 0.431525 0 1 0.878431 0.623529 Xa0 J 0 j 1 w 10 M []0 d0 XR745.5942 0.289551 m745.5356 -1.52979 745.4722 -3.34863 745.3418 -5.17041 c744.9023 -11.3179 744.166 -17.4507 742.8955 -23.481 c740.3779 -35.4243 736.6968 -47.2148 731.9199 -58.4478 c727.9053 -67.8892 723.3027 -78.1279 716.7271 -86.0781 c708.8579 -95.5918 700.2354 -104.5605 692.0938 -113.8682 c676.1577 -132.0869 659.0522 -149.3589 642.228 -166.7573 c633.8901 -175.3794 625.355 -183.9478 615.6104 -190.9834 c610.8403 -194.4272 605.8643 -197.5859 600.9058 -200.748 c598.8379 -202.0674 596.4966 -203.5967 594.0415 -204.6362 C592.7637 -203.0889 590.7432 -202.0752 588.687 -202.0039 C592.1299 -196.4937 595.7266 -191.0796 599.332 -185.6709 c605.0889 -177.0342 608.7949 -166.2046 612.5537 -156.584 c620.7368 -135.6362 625.4014 -113.4009 634.4229 -92.7524 c638.5083 -83.4023 643.4106 -74.4448 647.3267 -65.0146 c651.4463 -55.0933 653.8462 -44.6807 658.6548 -35.021 c663.3506 -25.5874 670.0015 -17.1978 676.0874 -8.64844 c678.0112 -5.94531 680.5571 -2.8877 681.9277 0.289551 C666.6445 0.289551 L666.3696 -0.015137 666.1025 -0.326172 665.8652 -0.662598 c663.1636 -4.49854 660.396 -8.2876 657.6768 -12.1108 c651.8794 -20.2612 646.9956 -28.6904 643.1113 -37.9121 c639.3682 -46.7974 637.2207 -56.2427 633.251 -65.0513 c629.0381 -74.3984 624.2266 -83.4302 620.3496 -92.9341 c612.3408 -112.5645 607.6147 -133.3579 600.0176 -153.1279 c596.5967 -162.0317 592.6313 -170.7129 588.1064 -179.1094 c583.2676 -188.0898 576.7778 -196.2793 571.665 -205.1646 C569.7842 -204.6182 567.8994 -204.1162 566.0376 -203.708 c561.8228 -202.7847 557.7778 -201.3398 553.7002 -199.9858 C552.0137 -197.9961 552.2852 -195.3696 551.7524 -192.7109 c550.9238 -188.5786 551.1611 -184.1899 551.4355 -180.0142 c552.0483 -170.6846 552.9043 -161.3008 553.8379 -151.9917 c555.7471 -132.959 558.689 -114.0625 560.1841 -94.9834 c560.8901 -85.9756 561.4248 -76.9585 562.3716 -67.9707 c563.3916 -58.2861 565.6592 -48.8945 567.4995 -39.3545 c569.2559 -30.2466 570.1768 -20.5996 572.9585 -11.7529 c574.2349 -7.69336 575.4346 -3.72852 576.1055 0.289551 C563.1709 0.289551 L562.0239 -4.90381 559.7383 -10.0884 558.834 -15.0562 c557.1318 -24.4111 555.4106 -33.7622 553.5566 -43.0884 c549.6162 -62.9043 548.3638 -82.6147 546.5327 -102.7012 c544.7959 -121.7515 541.7515 -140.6543 540.1187 -159.7148 c539.3447 -168.7476 538.123 -178.0029 538.2393 -187.0698 c538.2764 -189.9502 538.4043 -193.2529 538.9004 -196.5142 C533.2505 -195.8828 527.5767 -195.8867 521.873 -195.6304 c514.1763 -195.2842 506.5278 -194.6304 498.8247 -195.2241 c491.0391 -195.8242 484.0518 -198.1719 477.9717 -202.1138 C477.9175 -202.0903 477.8657 -202.0645 477.8115 -202.042 c475.5122 -201.1025 474.6196 -198.374 472.312 -197.1401 c469.9087 -195.8555 467.4956 -194.4561 465.4463 -192.6592 c459.8076 -187.7144 453.0542 -184.4546 446.2329 -181.5127 c439.7163 -178.7021 433.4302 -175.3462 426.9092 -172.583 c420.1211 -169.707 412.8018 -168.4683 406.2207 -165.1021 c400.0581 -161.9502 393.9932 -158.624 387.6489 -155.8423 c380.6172 -152.7593 373.186 -153.0513 365.791 -151.6099 c360.3433 -150.5479 354.2729 -148.6514 348.3735 -148.2554 C348.0122 -147.2056 347.3887 -146.2471 346.5015 -145.5054 C346.2612 -144.9941 346.002 -144.4937 345.729 -144 c341.4976 -136.3438 333.5156 -130.7905 326.4536 -125.9976 c320.5708 -122.0054 315.0342 -117.5854 308.8931 -113.9731 c302.9839 -110.4976 296.3545 -108.1362 289.9507 -105.7598 c277.667 -101.2021 265.8677 -95.689 252.8589 -93.5894 c248.9121 -92.9521 242.9468 -91.5171 237.79 -91.7334 C237.4155 -90.3569 236.5703 -89.0571 235.1216 -88.0522 c227.2017 -82.5591 218.6631 -77.9805 210.6973 -72.4756 c202.4512 -66.7773 194.6587 -60.9326 185.3638 -57.0313 c176.7856 -53.4307 166.9673 -52.2349 157.7822 -51.2046 c153.7622 -50.7534 147.666 -50.0151 144.501 -53.1802 c141.478 -56.2031 141.9263 -61.0938 142.6187 -64.894 c143.9204 -72.0366 148.9629 -79.0493 153.5483 -84.4346 c159.606 -91.5479 167.9004 -97.1465 176.29 -101.1152 c185.0063 -105.2393 194.3286 -107.291 203.8193 -108.6558 c209.1621 -109.4243 214.5239 -110.0386 219.8535 -110.8989 c223.2549 -111.4478 226.5151 -112.4429 229.834 -113.1924 C232.2686 -119.0132 236.1953 -124.3511 239.8257 -129.4321 c247.3877 -140.0171 257.5479 -146.3945 269.2949 -151.5464 c274.8032 -153.9619 280.4038 -156.1479 285.8193 -158.7729 c291.0586 -161.313 296.2603 -164.1533 301.7979 -166.0024 c308.6436 -168.2876 315.9233 -169.4209 322.917 -171.1895 c325.2495 -171.7793 327.5649 -172.4746 329.8784 -173.1826 C330.8062 -175.6543 332.1641 -178.0298 333.8315 -180.3228 c337.4658 -185.3203 340.3784 -189.9478 345.4336 -193.7246 c350.3291 -197.3813 355.8105 -200.0278 361.1489 -202.9565 c367.4019 -206.3862 373.3486 -210.3823 379.4937 -213.999 c385.7856 -217.7017 392.8086 -219.2632 399.3457 -222.3481 c405.4829 -225.2437 411.3335 -228.9116 417.3618 -232.0479 c424.5425 -235.7842 432.6489 -236.625 440.2334 -239.0732 c447.1045 -241.2915 454.6045 -243.8667 461.9907 -245.062 C466.7935 -258.1982 478.0308 -270.2246 488.6987 -278.1958 c491.4712 -280.2676 494.2949 -282.0664 497.1914 -283.6567 C496.7939 -283.959 496.397 -284.2568 495.999 -284.5684 c489.917 -289.3252 484.0166 -294.3091 477.8657 -298.978 c465.5693 -308.312 453.4429 -317.6685 441.6592 -327.6597 c429.9585 -337.5806 417.6938 -346.9668 406.4321 -357.3794 c395.502 -367.4858 385.6401 -378.7085 375.979 -390.0112 c356.5518 -412.7402 337.1616 -435.8457 322.4199 -461.9746 c315.5537 -474.144 309.9985 -487.6597 310.5029 -501.8579 c310.9395 -514.1416 316.248 -527.0059 327.0923 -533.458 c335.873 -538.6826 347.311 -539.2949 357.2085 -538.1362 c370.7529 -536.5513 381.8301 -529.0054 393.0151 -521.6816 c404.2979 -514.2935 414.585 -504.7705 422.8438 -494.1221 c427.124 -488.6035 432.1763 -484.0566 437.0479 -479.0649 c442.3032 -473.6797 446.8408 -467.478 451.272 -461.4102 c454.8613 -456.4961 458.5342 -451.6777 462.2026 -446.8389 C461.8813 -448.6182 461.5723 -450.3691 461.2354 -452.0464 c459.709 -459.6484 458.6304 -467.2778 457.4136 -474.9282 c454.9497 -490.417 452.6426 -505.6221 452.6367 -521.3398 c452.6343 -528.248 452.7104 -535.1641 453.7788 -542.0063 c454.915 -549.2803 457.7466 -555.7734 460.106 -562.6855 c462.0742 -568.4531 464.0732 -573.5684 468.519 -577.8789 c473.6768 -582.8804 478.395 -585.457 484.9902 -588.084 c491.0269 -590.4888 498.1602 -593.0625 504.5054 -590.4844 c510.4546 -588.0674 514.7979 -582.6851 519.0903 -578.1064 c528.894 -567.6489 535.9795 -556.02 540.7134 -542.5352 c545.8379 -527.9365 552.5532 -514.2378 555.7729 -498.9756 c558.9951 -483.6987 561.4648 -468.3657 563.8662 -452.9409 c566.2217 -437.8091 566.9551 -422.4873 567.4771 -407.1934 c567.7324 -399.7129 568.2734 -392.251 568.3184 -384.7632 c568.3647 -377.0088 567.3667 -369.1587 567.3281 -361.3682 c567.252 -346.1533 565.9463 -330.9629 562.355 -316.1431 c561.2778 -311.6982 560.3701 -306.9673 559.2783 -302.252 C565.8999 -302.8657 572.5693 -302.9346 579.2598 -303.2798 c584.4507 -303.5474 589.0962 -305.4194 594.2515 -303.7017 c599.2397 -302.0391 604.3574 -299.7344 609.6699 -299.5474 c609.7764 -299.5435 609.876 -299.7568 609.98 -299.749 C610.7261 -300.2437 611.6328 -300.7207 612.6992 -300.9106 C614.2026 -309.2852 616.4404 -317.0449 623.9785 -322.6426 c628.7017 -326.1494 635.1855 -327.8999 640.6099 -329.9897 c647.1538 -332.5107 653.8145 -334.1128 660.7886 -334.8271 c672.8906 -336.0669 687.626 -331.9404 696.6958 -323.7163 c706.582 -314.7524 710.5259 -300.2178 713.6348 -287.8037 c715.145 -281.7749 716.6133 -274.7627 716.0962 -268.5479 c715.5449 -261.917 712.2246 -255.6738 709.0864 -249.9292 c702.603 -238.0605 693.1738 -230.6655 679.9468 -227.874 c667.5571 -225.2598 655.8477 -226.1582 644.2188 -231.2236 c637.188 -234.2861 630.1094 -239.8071 624.4829 -246.2163 C621.293 -241.2505 617.5381 -236.6279 614.043 -232.4492 c610.1826 -227.8335 606.1963 -223.0889 601.8027 -218.9692 c600.9507 -218.1704 600.0313 -217.4663 599.0688 -216.8242 C606.4688 -213.7974 613.5908 -208.1143 619.2935 -204.2246 c630.1494 -196.8198 639.5996 -187.939 648.8145 -178.6167 c668.4717 -158.73 687.9702 -138.4634 706.2769 -117.3257 c714.8252 -107.4561 724.6226 -98.3579 731.7471 -87.356 c738.8457 -76.394 744.0859 -63.7471 748.4814 -51.5015 c753.0176 -38.8652 756.0811 -25.855 757.625 -12.5317 c758.1206 -8.25391 758.3008 -3.98584 758.5132 0.289551 C745.5942 0.289551 Lf0 D227.6626 -99.2261 m223.335 -98.1865 218.8696 -97.6626 214.4639 -97.0767 c204.4932 -95.7495 194.9014 -94.2476 185.3774 -90.9175 c177.2002 -88.0586 169.7202 -82.5649 163.7681 -76.375 c161.4995 -74.0161 156.9956 -68.5845 155.5435 -63.937 C156.7959 -64.061 158.041 -64.2622 159.2363 -64.459 c163.0776 -65.0908 166.9482 -65.5322 170.7734 -66.2603 c177.9556 -67.6274 184.5522 -70.4009 190.6777 -74.355 c197.2871 -78.6206 203.5513 -83.4131 210.1177 -87.748 c215.897 -91.563 222.0483 -94.8628 227.7651 -98.7427 C227.7314 -98.9043 227.6904 -99.0576 227.6626 -99.2261 Cf329.6689 -159.4043 m324.3047 -157.9897 318.8242 -156.9326 313.4331 -155.6396 c303.4722 -153.25 294.9907 -148.5308 285.6616 -144.4795 c276.5234 -140.5107 266.6621 -137.146 258.7212 -130.9448 c254.3647 -127.543 251.106 -123.1172 248.0781 -118.5503 c246.8154 -116.6465 244.8618 -114.4224 243.3647 -112.0859 C244.4131 -110.019 244.3213 -107.2988 243.0947 -105.2178 C246.3276 -105.6045 249.5488 -106.1309 252.752 -106.6836 c263.9243 -108.6108 274.2573 -113.8013 284.8394 -117.686 c296.2358 -121.8696 305.9058 -127.1108 315.7227 -134.251 c321.8018 -138.6724 332.1719 -143.9785 334.9692 -151.5142 C332.4292 -153.4956 330.7227 -156.2949 329.6689 -159.4043 Cf466.3535 -212.9922 m461.8408 -218.9097 459.812 -225.083 459.6055 -231.2358 C455.9639 -230.2505 452.3594 -228.9702 448.8477 -228.0093 c441.7803 -226.0757 434.5981 -224.4248 427.6162 -222.1714 c420.936 -220.0151 414.8525 -215.8335 408.6084 -212.666 c402.7705 -209.7051 396.7017 -207.8169 390.7041 -205.2373 c384.2852 -202.4766 378.377 -198.1016 372.4131 -194.4917 c367.2422 -191.3618 361.8047 -188.7222 356.6113 -185.6362 c352.2192 -183.0273 349.7373 -179.876 346.9434 -176.209 C351.8628 -173.8403 352.8486 -165.4531 346.2197 -164.1597 c344.7324 -163.8691 343.271 -163.4937 341.8208 -163.0796 C342.1553 -162.4565 342.6553 -161.8994 343.4058 -161.4585 c345.8711 -160.0093 351.1895 -161.8462 353.6792 -162.3896 c358.792 -163.5054 363.9087 -164.5322 369.1025 -165.1616 c376.3516 -166.0396 382.0322 -167.3311 388.6094 -170.6079 c394.916 -173.75 400.9854 -177.436 407.6177 -179.8628 c414.0063 -182.2002 420.3311 -183.729 426.4668 -186.7563 c433.0356 -189.9971 439.9746 -192.4829 446.4961 -195.7969 c452.2153 -198.7031 456.6484 -203.0562 462.0957 -206.2056 c463.3208 -206.9136 464.5254 -207.6567 465.7505 -208.3652 c463.5806 -207.1108 466.2896 -209.1743 466.835 -209.8779 c467.1611 -210.2988 467.5356 -210.6733 467.9287 -211.0288 C467.3921 -211.6655 466.8667 -212.3193 466.3535 -212.9922 cf632.2695 -269.8472 m632.4082 -266.2129 631.8379 -262.6587 630.7729 -259.2075 C640.1763 -245.3369 656.8555 -237.4307 673.5972 -239.8989 c677.9087 -240.5342 682.2534 -241.5576 686.1714 -243.4985 c691.0425 -245.9121 694.2036 -250.4556 696.9766 -254.9604 c699.5688 -259.1724 701.9614 -263.8608 703.0796 -268.6943 c704.1216 -273.1978 702.3198 -279.9458 701.0996 -284.3408 c698.2207 -294.707 695.7852 -305.0205 688.5723 -313.4038 c682.3701 -320.6128 669.668 -322.3828 660.7886 -321.7993 c651.1611 -321.167 639.8398 -316.7891 631.5435 -311.9624 c628.3086 -310.0806 627.335 -307.0103 626.4795 -303.5669 c625.7124 -300.4775 625.1953 -297.3989 624.6953 -294.3037 C630.3042 -288.0679 631.9155 -279.1226 632.2695 -269.8472 cf461.7969 -424.5469 m458.1563 -431.1885 453.4453 -437.2153 448.5591 -442.9722 c443.501 -448.9312 439.5752 -455.8555 434.6025 -461.9136 c430.1221 -467.3716 425.4409 -472.3594 420.3428 -477.2578 c415.0771 -482.3169 411.124 -488.4644 406.0981 -493.7773 c396.0938 -504.354 384.3442 -511.4663 372.2383 -519.2578 c362.75 -525.3647 351.2529 -527.0547 340.2402 -524.6509 c327.8052 -521.937 323.4321 -510.4316 323.4478 -498.6323 c323.4629 -487.417 329.1348 -476.5298 334.5059 -467.0098 c340.7642 -455.9175 348.3613 -445.564 355.6431 -435.1567 c362.4629 -425.4102 370.5229 -416.5405 378.1802 -407.4575 c386.2891 -397.8384 394.4502 -388.2642 403.0693 -379.0947 c420.1479 -360.9248 440.2583 -345.646 459.3608 -329.6821 c469.3154 -321.3633 479.8169 -313.8472 490.04 -305.8813 c494.6738 -302.27 499.2012 -298.5225 503.7964 -294.8628 c506.1973 -292.9507 508.6084 -291.2607 511.0762 -289.6616 C512.8408 -290.2568 514.6387 -290.8149 516.4756 -291.3423 c518.1431 -291.8208 519.7783 -292.3799 521.4033 -292.9658 C520.9082 -294.2959 520.3418 -295.5986 519.7432 -296.8882 C517.2334 -297.7881 515.811 -300.2349 515.4419 -303.0166 c515.3198 -303.9365 515.166 -304.8521 514.9868 -305.7637 C513.8164 -307.7539 512.625 -309.7271 511.4697 -311.6987 c503.9604 -324.5171 499.3306 -338.1196 494.0781 -351.917 c491.6851 -358.2026 488.4229 -364.1504 486.0962 -370.5093 c483.4722 -377.6787 480.6138 -384.7954 478.124 -392.0073 c477.6143 -393.4844 477.1758 -394.9834 476.7734 -396.4917 C471.9741 -405.9473 466.8799 -415.2734 461.7969 -424.5469 cf555.1626 -392.2397 m554.8882 -400.2852 554.8979 -408.5347 554.1455 -416.5396 c553.4614 -423.8193 553.3081 -431.1426 552.7964 -438.4351 c552.229 -446.52 550.5459 -454.5923 549.3154 -462.6001 c546.9648 -477.8994 544.4668 -493.4033 539.9229 -508.2256 c537.7251 -515.395 534.8809 -522.269 531.9561 -529.1577 c529.0513 -535.999 527.27 -543.376 523.7476 -549.9302 c520.5576 -555.8652 516.5503 -561.3105 512.1587 -566.4019 c510.0361 -568.8633 507.7471 -571.167 505.4805 -573.4937 c503.5884 -575.436 501.3662 -578.6997 498.3486 -578.5703 c495.0303 -578.4287 491.4932 -576.7319 488.4463 -575.5483 c485.6167 -574.4492 483.1494 -573.6763 480.8071 -571.6514 c478.917 -570.0176 476.7285 -568.1235 475.3091 -566.0581 c473.5322 -563.4727 472.6353 -559.2441 471.6348 -556.2485 c469.8379 -550.8667 467.6279 -545.916 466.5859 -540.2881 c465.5405 -534.6426 465.6538 -528.729 465.6372 -523.0103 c465.6011 -510.2183 466.8936 -497.9292 468.8354 -485.3037 c470.645 -473.5347 472.4033 -461.7842 474.8804 -450.1318 c477.2036 -439.1997 482.0005 -429.3032 484.3828 -418.4287 c484.9365 -415.9009 485.5952 -413.3296 486.6816 -410.9727 c487.8823 -408.3672 488.0327 -405.2393 488.6655 -402.4414 c488.8647 -401.5605 489.0928 -400.6909 489.334 -399.8257 C491.7002 -395.2827 494.0981 -390.7656 496.1021 -386.0225 c498.8018 -379.6338 500.8306 -373.1069 503.8804 -366.8594 c507.2031 -360.0532 511.2031 -353.6372 514.2666 -346.6997 c519.292 -335.3164 524.3564 -323.0547 527.0732 -310.6865 C527.9712 -309.1187 528.8579 -307.5444 529.7056 -305.9468 c530.9131 -303.6719 532.0361 -301.3374 532.9951 -298.9463 c533.2251 -298.373 533.4966 -297.793 533.7651 -297.2095 C537.4893 -298.2163 541.2915 -298.9663 545.0537 -299.8247 C545.3594 -301.0044 545.6489 -302.1816 545.9287 -303.3374 c547.6553 -310.4717 549.4341 -317.6157 551.0239 -324.7817 c554.3545 -339.7949 554.0923 -355.0444 554.4458 -370.3076 c554.6162 -377.6523 555.4136 -384.8892 555.1626 -392.2397 cf611.9316 -250.9512 m613.5908 -253.3926 615.085 -255.8242 616.2847 -258.334 C616.1997 -258.5103 616.1025 -258.6865 616.0205 -258.8623 c614.2437 -262.6768 616.2266 -266.2471 619.0781 -267.8696 C619.1992 -269.0469 619.25 -270.2524 619.2021 -271.5005 c619.0293 -276.0313 618.5674 -281.8374 615.437 -285.3535 C614.3477 -285.7212 613.4536 -286.3628 612.7734 -287.1855 C611.9121 -286.75 610.8833 -286.5044 609.6699 -286.5474 c603.0264 -286.7813 597.0356 -289.0859 590.7954 -291.166 c587.6953 -292.1992 584.167 -290.6504 581.0142 -290.3936 c576.8623 -290.0552 572.6821 -290.0195 568.5205 -289.8896 c564.0034 -289.749 559.5405 -289.2959 555.125 -288.5977 C553.6377 -285.0083 551.7969 -281.623 549.3818 -278.6196 c549.0781 -278.2412 548.7744 -277.8633 548.4702 -277.4854 c543.7236 -271.582 535.8105 -278.5693 538.1587 -284.7417 C537.8027 -284.6382 537.4482 -284.5298 537.0928 -284.4238 C535.7515 -282.3135 533.3193 -280.9512 530.1831 -281.7949 c529.959 -281.8555 529.7515 -281.9277 529.5405 -281.9976 C528.0781 -281.4951 526.6191 -280.98 525.1655 -280.4473 c524.2417 -280.1089 523.3145 -279.7959 522.3853 -279.4946 C522.3975 -275.0518 517.7139 -270.5464 512.6797 -273.4785 c511.604 -274.105 510.5547 -274.7305 509.5151 -275.3579 C507.9424 -274.7441 506.3887 -274.0601 504.8672 -273.2466 c498.5928 -269.8911 493.064 -265.4429 488.0024 -260.4771 c482.8115 -255.3843 477.1519 -248.9775 474.3667 -241.8696 C474.7676 -241.042 475 -240.1392 475 -239.2139 c475 -238.8813 475 -239 475 -238 c475 -235.8184 474.0298 -234.2363 472.6235 -233.2446 C472.6191 -231.4512 472.8428 -229.6323 473.354 -227.7944 c476.7441 -215.6118 488.7109 -209.0039 500.564 -208.0903 c507.6406 -207.5449 514.8052 -208.2651 521.873 -208.6304 c530.1782 -209.0591 538.0815 -209.0591 546.2241 -211.0684 c552.585 -212.6377 559.1436 -214.9302 565.3628 -216.999 c568.231 -217.9526 571.1211 -218.8052 574.0474 -219.562 c577.6284 -220.4888 581.0996 -222.9658 584.5151 -224.3994 c587.2402 -225.543 590.2544 -226.2739 592.6104 -228.1616 c594.6797 -229.8193 596.4531 -232.127 598.2197 -234.0908 c603.0771 -239.4897 607.8442 -244.9355 611.9316 -250.9512 cf*U*u1 D130.8379 -1901.7715 m137.3896 -1913.4922 144.4619 -1924.7754 155.6753 -1932.498 c161.0391 -1936.1924 165.7676 -1940.7705 171.1602 -1944.4688 c174.0767 -1946.4688 177.2383 -1947.8535 180.4248 -1949.3438 c184.0215 -1951.0254 188.3989 -1953.2324 192.2314 -1954.1836 c195.3091 -1954.9482 198.3813 -1955.623 201.5015 -1956.0313 C201.6924 -1956.249 201.8975 -1956.4531 202.1099 -1956.6475 C199.0103 -1961.7373 195.7534 -1966.7461 192.7397 -1971.8867 c189.0005 -1978.2646 185.3687 -1984.707 181.7998 -1991.1816 c178.2046 -1997.7051 175.5933 -2004.6357 171.938 -2011.1064 c168.9194 -2016.4512 165.9106 -2021.7676 163.0171 -2027.1729 c159.8037 -2033.1738 158.2969 -2039.8281 155.3159 -2045.8867 c149.5049 -2057.6973 141.5298 -2068.1738 138.2065 -2081.1191 c136.5063 -2087.7402 136.3726 -2095.1572 135.8784 -2101.957 c135.3594 -2109.1084 135.3398 -2116.2783 135.9795 -2123.4209 c136.6401 -2130.7949 138.4912 -2137.2744 140.9355 -2144.1836 c142.0845 -2147.4307 142.5591 -2150.8594 143.9453 -2154.0234 c144.3872 -2155.0313 144.958 -2155.9834 145.5449 -2156.9258 C160.0801 -2156.9258 L159.0474 -2154.5371 157.8062 -2152.3799 156.4634 -2150.1289 c154.8115 -2147.3604 154.4277 -2143.7842 153.4712 -2140.7275 c152.3799 -2137.2402 150.8921 -2134.0547 150.0859 -2130.4609 c149.1719 -2126.3887 148.8208 -2122.2373 148.5986 -2118.0791 c148.2163 -2110.9326 148.6807 -2103.748 149.3066 -2096.6309 c149.9614 -2089.1914 150.8242 -2082.2158 153.9375 -2075.3496 c156.6235 -2069.4258 160.1758 -2063.9053 163.4023 -2058.2705 c167.0942 -2051.8242 169.3779 -2045.2168 172.0659 -2038.3486 c174.4775 -2032.1865 178.1978 -2026.0977 181.5439 -2020.4033 c185.2632 -2014.0742 187.8096 -2007.3281 191.2964 -2000.9043 c198.5801 -1987.4824 206.1265 -1974.1328 214.4307 -1961.3164 c218.2314 -1955.4512 221.0068 -1948.9707 225.4722 -1943.5391 c230.0391 -1937.9844 232.7524 -1930.8721 234.9209 -1924.0996 c239.627 -1909.4043 241.1665 -1893.9756 244.9404 -1879.0693 c248.2871 -1865.8516 249.5137 -1852.2188 250.6636 -1838.6533 C251.6445 -1838.6045 252.5967 -1838.3398 253.4321 -1837.8369 C257.7065 -1838.8203 262.0293 -1838.9785 266.6602 -1838.834 c270.0112 -1838.7305 273.2373 -1839.832 276.5415 -1840.3154 c280.7949 -1840.9375 285.0806 -1840.7686 289.3672 -1840.7686 c304.6387 -1840.7686 319.8315 -1840.0078 334.8164 -1836.8613 c341.3301 -1835.4932 348.3042 -1834.3408 354.3838 -1831.5371 c360.7847 -1828.5869 366.6313 -1824.4063 372.5059 -1820.541 c383.2163 -1813.4951 390.9785 -1802.6689 389.8994 -1789.4541 c389.4199 -1783.5791 387.9448 -1777.4766 386.6494 -1771.7295 c385.6001 -1767.0752 382.6157 -1761.6738 377.417 -1760.1563 c372.4131 -1758.6943 367.5073 -1759.8125 362.437 -1759.9785 c359.1694 -1760.085 355.8857 -1761.4141 352.6235 -1761.8008 c348.6436 -1762.2744 344.5059 -1761.9727 340.5049 -1761.9727 c326.5747 -1761.9727 311.5576 -1767.8994 300.3384 -1775.8193 c288.7734 -1783.9834 277.8203 -1793.0742 266.981 -1802.2314 c261.7109 -1806.6836 257.1069 -1811.5137 252.5283 -1816.6475 c252.165 -1817.0547 251.8037 -1817.4551 251.4438 -1817.8525 C251.3125 -1815.4023 251.0879 -1812.957 250.7222 -1810.5215 c250.1973 -1807.0273 249.3271 -1803.6172 248.7021 -1800.1406 c247.9971 -1796.2197 248.5107 -1792.2129 247.8633 -1788.2773 c246.6177 -1780.7041 244.7236 -1773.2246 243.3896 -1765.6563 c242.0796 -1758.2256 239.1802 -1751.207 238.2344 -1743.6914 c237.3945 -1737.0176 236.123 -1730.4648 235.6055 -1723.7402 c234.9736 -1715.5391 235.4482 -1707.2236 236.0264 -1699.0332 c237.1475 -1683.1631 239.9927 -1667.4805 243.1772 -1651.9268 c249.3184 -1621.9355 266.4976 -1596.5146 285.0566 -1572.7324 c289.3208 -1567.2686 294.1802 -1562.3027 298.3486 -1556.7734 c302.4648 -1551.3125 305.0122 -1545.1143 308.6089 -1539.3486 c312.2158 -1533.5654 313.2437 -1526.4873 314.8721 -1519.9756 c315.7144 -1516.6055 317.625 -1513.623 319.2012 -1510.5625 c321.0508 -1506.9707 322.4312 -1503.0928 324.188 -1499.4453 c326.9521 -1493.7051 330.519 -1488.4951 333.0566 -1482.6289 c335.769 -1476.3594 338.3149 -1470.3848 341.7651 -1464.4697 c345.2354 -1458.5195 347.7529 -1452.3789 349.959 -1445.8721 c352.2275 -1439.1816 352.9526 -1432.0596 354.8726 -1425.2695 c356.8711 -1418.2012 359.3779 -1411.3848 360.9272 -1404.1846 c362.4053 -1397.3145 363.7241 -1390.499 365.561 -1383.7109 c369.3413 -1369.7373 373.5361 -1355.3779 368.7051 -1341.0645 c366.0391 -1333.165 353.4805 -1336.5547 356.1689 -1344.5195 c361.2207 -1359.4863 353.9502 -1374.1709 350.7983 -1388.7031 c349.3071 -1395.5801 348.1821 -1402.5107 346.3003 -1409.3008 c344.1455 -1417.0752 341.4785 -1424.5098 339.8848 -1432.4473 c338.5513 -1439.0898 336.7554 -1445.7842 333.8145 -1451.9092 c330.6162 -1458.5703 326.54 -1464.5967 323.6973 -1471.4531 c321.0234 -1477.9023 317.8569 -1483.7314 314.5181 -1489.8389 c310.9092 -1496.4395 308.1035 -1503.501 304.7441 -1510.2324 c301.6577 -1516.417 300.9067 -1523.4307 298.8838 -1529.9766 c298.0137 -1532.793 295.6519 -1535.4814 294.0195 -1537.8965 c292.0225 -1540.8496 291.0752 -1544.6104 289.002 -1547.6641 c285.167 -1553.3115 280.1069 -1558.1836 275.8643 -1563.54 c271.0942 -1569.5625 266.6074 -1575.8008 262.2139 -1582.1006 c255.5469 -1591.6592 249.3672 -1601.1191 244.019 -1611.2705 C242.918 -1606.5488 241.3135 -1601.9043 240.1035 -1597.2705 c239.2754 -1594.0977 237.3237 -1590.9023 235.999 -1587.9043 c234.2896 -1584.0371 232.8013 -1580.0996 231.5879 -1576.0488 c229.2007 -1568.0801 226.9321 -1560.668 222.6821 -1553.46 c218.8589 -1546.9766 216.2095 -1539.7598 211.5151 -1533.8486 c206.8975 -1528.0332 203.1987 -1521.1064 197.8306 -1516.0098 c192.5083 -1510.958 186.5801 -1505.459 179.9189 -1502.293 c174.4526 -1499.6943 169.2119 -1496.3672 163.0552 -1495.7969 c160.9302 -1495.6006 158.3965 -1497.1494 157.4424 -1499.0166 c154.2007 -1505.3633 155.6719 -1512.7236 155.333 -1519.6289 c154.8965 -1528.5332 154.4941 -1536.7578 155.8457 -1545.6104 c157.0781 -1553.6836 158.0088 -1561.9355 160.1616 -1569.8027 c162.2729 -1577.5195 163.7744 -1585.6797 167.0923 -1592.9941 c170.002 -1599.4082 174.0747 -1604.9805 178.8218 -1610.1426 c184.2139 -1616.0078 189.0215 -1621.8467 195.4082 -1626.708 c198.4453 -1629.0195 201.9541 -1630.7285 205.3564 -1632.4229 c208.7324 -1634.1035 211.9238 -1636.2373 215.4556 -1637.5723 c220.4307 -1639.4531 225.8911 -1640.4824 231.2954 -1641.0078 C230.9292 -1642.5449 231.168 -1643.8818 231.8013 -1644.9648 C230.3447 -1651.3281 229.4409 -1657.832 227.5684 -1664.0635 c225.3838 -1671.332 225.0488 -1679.7773 224.1509 -1687.3008 c223.1431 -1695.7402 222.5737 -1704.2256 222.3862 -1712.7217 c222.0747 -1726.8262 223.8735 -1741.9082 227.3613 -1755.5791 c229.1646 -1762.6465 230.8364 -1769.583 232.3486 -1776.7256 c233.1528 -1780.5225 233.9517 -1784.3086 234.5464 -1788.1445 c235.1685 -1792.1582 235.1982 -1796.1436 235.6792 -1800.1904 c236.5562 -1807.5723 238.4736 -1814.502 238.5981 -1822.002 c238.7388 -1830.4707 237.5796 -1838.9443 236.7822 -1847.3584 c236.1016 -1854.5391 235.3438 -1861.5889 233.9556 -1868.6777 c232.438 -1876.4277 230.1973 -1883.9316 228.8901 -1891.7314 c226.4907 -1906.0498 224.0371 -1921.8506 216.1748 -1934.332 c215.5986 -1935.2461 215.0068 -1936.1426 214.4189 -1937.043 C213.8838 -1929.6523 211.5454 -1922.3184 208.1924 -1915.7275 c206.6602 -1912.7168 204.8579 -1910.0137 203.7207 -1906.8105 c202.4912 -1903.3457 200.3008 -1900.7715 198.2012 -1897.7803 c193.6714 -1891.3262 189.9409 -1884.4355 185.2026 -1878.0771 c183.1035 -1875.2607 180.8481 -1872.4902 178.8955 -1869.5713 c177.1011 -1866.8906 175.9585 -1863.9063 173.7944 -1861.4482 c168.9521 -1855.9482 163.064 -1851.3359 157.0205 -1847.2373 c145.3242 -1839.3047 131.3501 -1834.6465 117.1646 -1834.7539 c102.1187 -1834.8672 108.5674 -1855.1455 111.8867 -1863.1396 c117.3823 -1876.375 123.8438 -1889.2627 130.8379 -1901.7715 cf0 D264.522 -1822.5479 m269.1816 -1817.1084 274.8208 -1812.5313 280.3022 -1807.9609 c290.2847 -1799.6357 300.2686 -1791.0215 311.2881 -1784.125 c322.9526 -1776.8242 336.0098 -1774.9727 349.4771 -1774.9727 c355.396 -1774.9727 361.1377 -1773.2178 366.9893 -1772.6152 c367.9175 -1772.5195 371.9971 -1772.1016 372.687 -1772.0723 C372.7197 -1772.2793 373.2734 -1773.1738 373.4336 -1773.7373 c373.7368 -1774.8027 374.2427 -1775.7578 374.4858 -1776.8359 c375.6074 -1781.8125 376.8818 -1787.1699 377.0659 -1792.2686 c377.2749 -1798.0527 373.6104 -1802.7451 369.6025 -1806.5469 c365.5166 -1810.4219 359.9629 -1813.2422 355.2324 -1816.2656 c349.3892 -1820.001 343.5215 -1821.6621 336.7832 -1823.0156 c322.6055 -1825.8633 308.96 -1827.6416 294.4526 -1827.7637 c287.2554 -1827.8242 280.1992 -1828.1074 273.1616 -1826.4307 c269.3232 -1825.5166 265.2456 -1826.0645 261.2734 -1826 C262.396 -1824.834 263.5347 -1823.7002 264.522 -1822.5479 cf232.3408 -1628.0098 m221.7666 -1626.6719 212.4492 -1622.2656 203.3174 -1616.4189 c198.2192 -1613.1563 194.2002 -1608.1533 190.3218 -1603.5947 c186.0103 -1598.5283 181.9907 -1593.9365 178.9917 -1587.9189 c176.2388 -1582.3955 175.2021 -1575.6934 173.6172 -1569.7617 c171.6797 -1562.5068 170.5542 -1555.3262 169.3228 -1547.9229 c168.0278 -1540.1348 167.5225 -1533.0313 168.0024 -1525.1494 c168.2266 -1521.4697 168.4478 -1517.7939 168.5415 -1514.1074 c168.5669 -1513.1084 168.4067 -1511.8789 168.2817 -1510.6221 C170.5781 -1511.8066 172.8662 -1513.2852 174.7651 -1514.1875 c177.9233 -1515.6885 180.5376 -1518.1797 183.2002 -1520.4004 c185.7236 -1522.5029 189.2983 -1524.8936 191.0903 -1527.6777 c194.2661 -1532.6113 197.6753 -1537.1875 201.3262 -1541.7852 c205.5806 -1547.1445 208.062 -1554.0762 211.457 -1560.0215 c214.7666 -1565.8164 216.5708 -1571.4688 218.5957 -1577.7959 c220.7754 -1584.6094 223.2798 -1591.1221 226.1929 -1597.665 c228.981 -1603.9277 231.2314 -1611.4854 232.1226 -1618.3096 c232.5371 -1621.4863 232.3979 -1624.7803 232.3408 -1628.0098 Cf123.644 -1848.0244 m126.3052 -1848.4619 129.0181 -1849.1221 131.6641 -1849.6943 c137.9678 -1851.0576 143.4731 -1854.0488 148.896 -1857.4434 c153.9077 -1860.5801 158.2305 -1864.3496 162.5107 -1868.3975 c164.4731 -1870.2539 165.6465 -1872.4521 166.9131 -1874.8086 c168.5186 -1877.793 170.8311 -1880.4043 172.8442 -1883.1191 c176.5308 -1888.0889 180.2202 -1893.0195 183.3618 -1898.3604 c184.8628 -1900.9121 186.3203 -1903.4082 188.0254 -1905.8369 c190.1372 -1908.8457 191.4668 -1911.4785 192.9575 -1914.8096 c195.4956 -1920.4814 198.9072 -1925.3936 200.5947 -1931.4658 c201.4834 -1934.666 201.9658 -1939.0361 201.6064 -1943.002 C191.0273 -1941.4102 180.6157 -1935.5527 172.3174 -1929.3438 c163.2202 -1922.5361 154.8682 -1915.8193 148.5947 -1906.2393 c142.2964 -1896.6201 136.8872 -1886.2764 131.9814 -1875.8965 c129.4438 -1870.5264 126.5957 -1865.21 124.4224 -1859.6836 c122.895 -1855.7988 120.8672 -1851.9248 120.562 -1847.7617 C121.5942 -1847.79 122.6245 -1847.8564 123.644 -1848.0244 cf*U*u1 D699.4316 -2142.8086 m703.29 -2147.0244 709.1089 -2148.6523 713.8999 -2151.54 c718.5356 -2154.334 723.124 -2155.3613 728.1182 -2156.9258 C770.665 -2156.9258 L769.7017 -2155.1055 767.8794 -2153.7607 765.188 -2153.7578 c760.478 -2153.7529 755.9248 -2153.7266 751.333 -2152.5908 c746.7612 -2151.46 743.2007 -2147.8721 738.6357 -2146.6445 c734.7246 -2145.5938 730.9536 -2144.0762 727.0396 -2143.0244 c722.5171 -2141.8086 718.8745 -2139.3193 714.6357 -2137.1992 c710.9463 -2135.3545 708.8037 -2133.7236 705.9819 -2130.7383 c702.3911 -2126.9404 698.2876 -2123.9805 695.0161 -2119.7734 c693.7183 -2118.1035 692.5234 -2117.7803 693.5117 -2115.6885 c694.2871 -2114.0479 696.9189 -2112.5908 698.3047 -2111.4902 c701.6924 -2108.7998 705.8433 -2108.0361 709.9517 -2106.9766 c718.9004 -2104.666 729.062 -2106.5508 737.6919 -2109.3672 c744.9297 -2111.7285 751.4746 -2115.0371 758.0293 -2118.5898 C759.8887 -2123.6211 761.9229 -2128.5869 764.0586 -2133.3828 c767.3115 -2140.6885 769.6401 -2150.21 774.7607 -2156.9258 C789.8438 -2156.9258 L790.2095 -2155.1523 789.6729 -2153.2422 787.7285 -2151.6738 c782.356 -2147.3438 780.9424 -2140.7227 778.4766 -2134.2441 C780.9619 -2137.3291 783.1396 -2140.6221 784.9307 -2143.873 c787.1162 -2147.8398 788.7261 -2152.0391 790.7358 -2156.0771 c790.876 -2156.3584 791.0098 -2156.6426 791.1465 -2156.9258 C824.5337 -2156.9258 L830.8301 -2150.6143 838.2266 -2143.8467 846.9346 -2142.832 c849.8555 -2142.4922 853.0366 -2142.832 855.9805 -2142.832 c859.3335 -2142.832 862.2856 -2141.7275 865.5459 -2141.0762 c871.981 -2139.792 878.5762 -2140.9199 884.9131 -2142.084 c891.2393 -2143.2441 897.4668 -2144.5566 903.7461 -2145.957 c906.8384 -2146.6465 909.7754 -2146.4629 912.771 -2146.5488 C912.0645 -2147.0938 911.3525 -2147.6309 910.6709 -2148.1885 c906.6909 -2151.4463 900.0801 -2154.0898 895.0518 -2154.9873 c893.4448 -2155.2744 892.29 -2155.9844 891.5234 -2156.9258 C921.0649 -2156.9258 L924.7539 -2154.1387 928.4058 -2149.8672 929.062 -2145.958 c930.2129 -2139.1035 924.5488 -2134.9795 918.394 -2134.1084 c915.6597 -2133.7207 912.9819 -2133.6826 910.2275 -2133.7803 c906.4819 -2133.9131 902.4194 -2132.2969 898.7949 -2131.4512 c891.3145 -2129.7051 883.4067 -2128.3047 875.749 -2127.6504 c867.2383 -2126.9238 859.0947 -2129.832 850.6636 -2129.832 c846.4385 -2129.832 842.5225 -2130.5527 838.8452 -2131.8047 C841.71 -2127.6104 845.0454 -2123.7764 848.0054 -2119.6377 c851.436 -2114.8408 854.418 -2109.7236 857.5313 -2104.7207 c866.4067 -2090.46 874.8408 -2063.3438 858.3506 -2051.0176 c850.1772 -2044.9082 838.5894 -2052.9502 832.2656 -2058.0205 c827.8032 -2061.5977 824.355 -2066.251 820.6694 -2070.5732 c816.8267 -2075.0801 813.6846 -2079.4365 811.4399 -2084.9287 c810.5137 -2087.1953 809.6685 -2089.5059 808.8716 -2091.8418 C806.9873 -2087.585 804.8066 -2083.5059 802.0566 -2079.7373 c798.9619 -2075.4971 794.9028 -2072.1143 791.3057 -2068.3164 c787.5981 -2064.4023 783.4141 -2060.7363 778.6167 -2058.2227 c773.79 -2055.6934 768.1079 -2055.9023 762.8306 -2056.04 c759.6372 -2056.124 755.0962 -2055.207 752.2705 -2057.1904 c748.2246 -2060.0313 747.7207 -2063.7588 747.7227 -2068.4277 c747.7246 -2073.8408 747.877 -2079.2227 748.4707 -2084.6064 c749.0859 -2090.1816 750.9546 -2095.6445 752.437 -2101.0605 C749.2202 -2099.7197 745.9907 -2098.4883 742.8066 -2097.3926 c730.7446 -2093.2402 717.561 -2091.585 705.1001 -2094.8008 c696.1377 -2097.1133 682.8149 -2102.9121 680.3081 -2113.1689 c677.1836 -2125.9531 692.0508 -2134.7441 699.4316 -2142.8086 cf0 D815.9678 -2117.3535 m817.1699 -2110.6855 818.7148 -2104.0967 820.668 -2097.6709 c821.9268 -2093.5293 823.2432 -2088.9805 825.5596 -2085.3086 c828.1011 -2081.2813 831.5835 -2077.8174 834.583 -2074.1348 c837.3472 -2070.7412 840.5581 -2067.7031 844.1782 -2065.2461 c845.6758 -2064.2295 850.3008 -2060.8916 851.9575 -2062.4883 c856.2134 -2066.5879 854.5415 -2076.835 853.4551 -2081.5879 c851.2915 -2091.0498 845.7148 -2099.2305 840.6123 -2107.3145 c835.5869 -2115.2773 829.3545 -2122.2842 824.4126 -2130.3096 c821.4966 -2135.0449 818.4351 -2139.6904 815.3296 -2144.3105 C816.9399 -2135.4248 817.1104 -2126.3115 815.9678 -2117.3535 Cf764.457 -2068.998 m768.3647 -2068.8945 771.5664 -2068.8535 774.8667 -2071.1641 c778.436 -2073.6641 781.3462 -2076.6895 784.3301 -2079.8545 c787.1592 -2082.8555 790.2529 -2085.3359 792.5786 -2088.791 c795.0088 -2092.4014 796.896 -2096.4258 798.4688 -2100.4697 c800.4771 -2105.6348 801.9121 -2110.9785 802.7695 -2116.3984 C801.1802 -2125.7695 800.2773 -2135.291 799.8506 -2144.6436 C799.6123 -2144.165 799.3867 -2143.7031 799.1821 -2143.2646 c793.9351 -2132.0186 785.752 -2120.9277 775.6035 -2113.6309 c773.373 -2112.0273 771.0195 -2110.5176 768.5972 -2109.0811 C768.2627 -2108.3008 767.9297 -2107.5195 767.585 -2106.7451 c765.9526 -2103.0781 765.2793 -2098.7324 764.2476 -2094.8623 c763.0146 -2090.2393 761.5347 -2085.7344 761.1055 -2080.959 c760.749 -2076.9961 760.7222 -2073.0059 760.7217 -2069.0264 C761.9658 -2069.0352 763.209 -2069.0313 764.457 -2068.998 cf*U*u1 D1175.8516 -1986.835 m1183.3301 -1992.7969 1194.4731 -1996.4141 1203.7109 -1997.9688 c1217.6318 -2000.3115 1233.0605 -2000.1289 1246.9155 -1997.4619 c1261.0181 -1994.748 1274.3096 -1987.0479 1287.0273 -1980.707 c1297.1846 -1975.6426 1306.0625 -1969.6172 1314.7773 -1962.7617 C1318.5791 -1969.2705 1323.6118 -1975.3926 1327.833 -1981.6025 c1332.7456 -1988.8291 1337.9224 -1996.4316 1343.7109 -2002.9707 c1346.4331 -2006.0469 1346.6221 -2010.6758 1348.748 -2014.002 c1351.1143 -2017.7031 1353.3389 -2021.542 1355.5215 -2025.3535 c1356.9883 -2027.915 1358.251 -2030.6494 1359.3809 -2033.4609 C1354.0908 -2032.4004 1348.8125 -2031.292 1343.395 -2031.1377 c1335.3364 -2030.9082 1327.3223 -2030.3154 1319.252 -2030.4102 c1304.7881 -2030.5801 1290.3203 -2033.3311 1276.8213 -2038.5547 c1268.5479 -2041.7559 1254.1157 -2051.9785 1257.792 -2062.7217 c1259.731 -2068.3887 1265.9517 -2070.0742 1271.2295 -2070.9102 c1278.3408 -2072.0371 1285.1484 -2072.1104 1292.3755 -2071.8652 c1307.6143 -2071.3506 1321.7524 -2067.2949 1336.4033 -2063.5537 c1346.957 -2060.8594 1356 -2055.6172 1364.332 -2048.9619 C1364.4707 -2049.4883 1364.6133 -2050.0176 1364.748 -2050.5391 c1367.2075 -2060.0791 1368.542 -2069.8682 1370.3203 -2079.5449 c1372.1089 -2089.2803 1374.7769 -2099.3701 1374.7773 -2109.3105 c1374.7783 -2119.3916 1374.8589 -2129.4688 1375.4917 -2139.5332 c1375.8486 -2145.2188 1376.2993 -2151.1035 1376.2881 -2156.9258 C1389.3047 -2156.9258 L1389.3262 -2151.124 1388.8916 -2145.2598 1388.4917 -2139.5986 c1387.7803 -2129.5459 1387.7832 -2119.416 1387.7773 -2109.3438 c1387.7725 -2099.5098 1385.3525 -2089.4346 1383.5469 -2079.8066 c1381.6113 -2069.4873 1380.0991 -2059.0781 1377.7139 -2048.8477 c1377.3018 -2047.0801 1376.834 -2045.332 1376.3374 -2043.5918 C1376.8496 -2042.9805 1377.2773 -2042.2451 1377.5762 -2041.3594 c1378.3398 -2039.0986 1380.4585 -2037.5234 1382.1514 -2035.958 c1384.5098 -2033.7773 1386.167 -2030.7129 1387.7627 -2027.959 c1391.5815 -2021.3672 1395.104 -2014.4609 1398.3032 -2007.5479 c1404.5679 -1994.0127 1408.8208 -1980.0537 1410.542 -1965.2373 c1411.4043 -1957.8164 1410.8296 -1950.2529 1410.7173 -1942.8066 c1410.5977 -1934.8779 1408.7769 -1928.1348 1406.2871 -1920.667 c1404.4502 -1915.1563 1402.7427 -1909.1875 1396.4482 -1907.3945 c1391.1172 -1905.876 1385.9331 -1907.2813 1381.0654 -1909.5771 c1376.457 -1911.751 1373.2793 -1915.7451 1371.208 -1920.2861 c1369.9482 -1923.0469 1369.0488 -1925.915 1368.3281 -1928.8564 c1367.3345 -1932.9141 1365.2412 -1936.7793 1363.7949 -1940.7051 c1358.6226 -1954.7451 1358.0449 -1970.4141 1357.1929 -1985.1855 c1356.8809 -1990.5938 1357.1455 -1996.0918 1357.6592 -2001.5195 C1357.1426 -2000.4844 1356.5962 -1999.4629 1355.9863 -1998.4697 c1351.6328 -1991.3809 1346.1484 -1984.7773 1341.188 -1978.0313 c1338.3325 -1974.1484 1335.7305 -1970.0791 1333.0571 -1966.0693 c1330.4668 -1962.1836 1327.3232 -1958.7178 1325.082 -1954.6055 c1324.8135 -1954.1133 1324.5107 -1953.6875 1324.1841 -1953.3145 C1325.7441 -1951.6787 1326.6104 -1949.3135 1325.7373 -1947.1855 c1323.4619 -1941.6387 1325.1821 -1934.5547 1324.3721 -1928.6182 c1323.4863 -1922.127 1321.7432 -1916.1094 1319.8022 -1909.8789 c1316.2212 -1898.3867 1311.4956 -1887.3506 1301.9629 -1879.5615 c1296.6758 -1875.2412 1291.7568 -1870.5508 1286.2471 -1866.4951 c1280.9438 -1862.5928 1274.084 -1859.8389 1268.1465 -1857.0166 c1264.9175 -1855.4824 1261.6572 -1854.2764 1258.2085 -1853.3379 c1255.2075 -1852.5225 1253.6113 -1851.9111 1250.9771 -1850.1631 c1246.0918 -1846.9199 1239.5386 -1845.0186 1233.7349 -1844.7158 c1230.2886 -1844.5361 1227.1094 -1847.8086 1227.2349 -1851.2158 c1227.5762 -1860.4629 1232.3965 -1870.7354 1237.0991 -1878.6074 c1239.8218 -1883.166 1243.7764 -1887.1055 1247.2827 -1891.0547 c1248.1899 -1892.0771 1249.0986 -1893.0918 1249.957 -1894.1445 C1247.437 -1893.4512 1244.9512 -1892.5625 1242.6787 -1892.0391 c1235.0234 -1890.2744 1227.3267 -1889.0283 1219.4712 -1888.6504 c1207.6675 -1888.083 1193.7471 -1887.4189 1183.5996 -1894.4521 c1172.7383 -1901.9795 1183.9131 -1916.1943 1190.1113 -1923.0117 c1194.0371 -1927.3281 1199.4526 -1932.4033 1204.6084 -1935.1592 c1206.7598 -1936.3096 1208.7627 -1937.6953 1210.9639 -1938.7461 C1201.9355 -1946.8906 1195.854 -1959.1367 1184.8887 -1964.6963 c1179.8364 -1967.2578 1173.9209 -1969.6572 1171.6299 -1975.2676 c1169.8491 -1979.6289 1172.4844 -1984.1504 1175.8516 -1986.835 cf0 D1337.2686 -2050.0137 m1323.1094 -2053.8359 1308.9116 -2057.9951 1294.1963 -2058.7871 c1287.6787 -2059.1377 1281.1309 -2059.3652 1274.6855 -2058.375 c1273.6025 -2058.209 1272.5327 -2058.0078 1271.4634 -2057.7852 C1272.4043 -2056.75 1273.6074 -2055.7666 1274.2588 -2055.0469 c1278.1787 -2050.7148 1284.9297 -2049.417 1290.293 -2047.8936 c1298.1045 -2045.6758 1305.6587 -2044.1016 1313.7881 -2043.6016 c1321.7593 -2043.1123 1329.7744 -2043.4629 1337.7412 -2043.8457 c1341.2861 -2044.0166 1344.7168 -2044.3809 1348.126 -2044.8496 C1344.7026 -2047.0908 1341.0449 -2048.9941 1337.2686 -2050.0137 cf1370.1221 -1987.0254 m1370.2686 -1979.4043 1370.7388 -1971.4541 1371.834 -1963.9063 c1373.083 -1955.2959 1375.0952 -1946.9951 1378.3555 -1938.9277 c1379.8247 -1935.291 1380.8828 -1931.7822 1382.0498 -1928.0527 c1382.7495 -1925.8164 1383.79 -1923.2422 1385.7764 -1921.8643 c1387.5352 -1920.6436 1389.6294 -1919.8086 1391.7651 -1919.6992 c1392.0811 -1919.6836 1392.3398 -1919.7656 1392.2524 -1919.5586 C1393.3384 -1921.1982 1393.749 -1924.1172 1394.3496 -1925.918 c1395.6396 -1929.7871 1397.1045 -1933.5254 1397.5586 -1937.6143 c1398.0215 -1941.7773 1397.7744 -1946.0977 1397.877 -1950.2842 c1398.3008 -1967.5898 1394.6992 -1983.4473 1387.834 -1999.2998 c1384.5537 -2006.875 1380.502 -2014.165 1376.5371 -2021.3975 c1375.9814 -2022.4111 1375.3501 -2023.3555 1374.6807 -2024.2617 C1373.6372 -2018.9023 1372.6182 -2013.5615 1371.5229 -2008.1797 c1370.1367 -2001.3701 1369.9888 -1993.9551 1370.1221 -1987.0254 cf1195.7573 -1973.4883 m1201.668 -1969.75 1206.1709 -1963.127 1210.916 -1958.0693 c1213.3013 -1955.5273 1215.6948 -1953.0557 1217.9307 -1950.376 c1220.0527 -1947.834 1222.3872 -1946.3984 1224.873 -1944.2881 c1229.6787 -1940.208 1228.0059 -1933.1729 1223.46 -1929.9131 c1221.645 -1928.6113 1219.0977 -1928.2471 1217.0776 -1927.3506 c1214.3096 -1926.1221 1211.3184 -1924.2871 1208.9785 -1922.3799 c1203.9941 -1918.3164 1198.8745 -1914.3008 1195.4834 -1908.7471 c1194.5479 -1907.2139 1193.3584 -1905.7598 1192.5332 -1904.1455 C1193.7119 -1903.5303 1194.9609 -1903.1172 1196.2578 -1902.7285 c1201.6514 -1901.1104 1207.5918 -1901.4883 1213.1519 -1901.5596 c1220.9692 -1901.6602 1228.4941 -1902.2031 1236.1479 -1903.8955 c1244.6548 -1905.7764 1253.6074 -1909.6152 1262.3794 -1907.3291 c1264.4932 -1906.7783 1266.4209 -1904.9473 1266.9189 -1902.7891 c1268.8413 -1894.4697 1260.2261 -1886.0889 1255.2788 -1880.5146 c1251.2598 -1875.9873 1247.7661 -1871.6729 1245.2446 -1866.1289 c1244.4292 -1864.3369 1243.5137 -1862.4355 1242.689 -1860.4834 C1244.0278 -1861.1953 1245.3174 -1861.9844 1246.5293 -1862.8096 c1251.4517 -1866.1611 1257.8037 -1866.4443 1263.1865 -1869.0029 c1268.6738 -1871.6113 1274.688 -1874.2666 1279.6855 -1877.7207 c1284.7773 -1881.2402 1289.1514 -1885.7969 1293.938 -1889.707 c1302.0225 -1896.3135 1305.1563 -1906.4736 1308.1187 -1916.084 c1309.9541 -1922.0381 1311.5039 -1927.8252 1311.9272 -1934.084 c1312.2549 -1938.9277 1311.3228 -1943.6377 1312.4561 -1948.3125 C1311.9209 -1948.5596 1311.3936 -1948.8799 1310.8853 -1949.3008 c1306.335 -1953.0674 1301.8779 -1956.9473 1296.9521 -1960.248 c1290.1025 -1964.8369 1282.7998 -1968.2871 1275.4639 -1971.9951 c1262.1274 -1978.7354 1248.6992 -1985.2031 1233.5688 -1986.1172 c1226.5752 -1986.5391 1219.4541 -1986.373 1212.4648 -1985.958 c1205.4116 -1985.5391 1199.2725 -1983.5488 1192.6885 -1981.209 c1190.6045 -1980.4688 1188.3306 -1979.5928 1186.3359 -1978.4307 C1189.3867 -1976.626 1192.7441 -1975.3926 1195.7573 -1973.4883 cf*U*u1 D1865.7031 -1807.1865 m1859.5205 -1802.8281 1852.2354 -1800.9922 1844.7607 -1800.7168 c1835.7021 -1800.3828 1826.752 -1801.583 1818.5269 -1804.6152 C1819.0566 -1803.5566 1819.5508 -1802.4814 1820.0059 -1801.3896 c1822.7734 -1794.7471 1825.624 -1788.4619 1829.2456 -1782.2236 c1832.7754 -1776.1426 1836.8711 -1770.4814 1840.0054 -1764.166 c1845.9683 -1752.1494 1850.2031 -1738.0752 1851.1758 -1724.6641 c1852.0801 -1712.1924 1841.1543 -1704.3496 1829.7993 -1703.2793 c1818.1318 -1702.1797 1809.7173 -1707.5947 1802.6143 -1716.499 c1799.4863 -1720.4209 1796.166 -1724.5156 1793.374 -1728.668 c1789.4966 -1734.4336 1787.1465 -1741.293 1785.1216 -1747.8945 c1783.0264 -1754.7266 1781.2554 -1761.4834 1781.7314 -1768.6563 c1781.8926 -1771.084 1782.0229 -1773.4961 1782.1377 -1775.9053 C1781.123 -1774.21 1779.9814 -1772.5586 1778.6509 -1770.9287 c1774.5454 -1765.8994 1772.4551 -1759.8994 1768.8535 -1754.499 c1761.3008 -1743.1729 1749.7778 -1734.2832 1738.0205 -1727.6777 c1732.2637 -1724.4434 1725.9521 -1722.0127 1719.542 -1720.4648 c1716.377 -1719.7012 1713.0791 -1719.3408 1709.8359 -1719.1387 c1706.8652 -1718.9541 1702.8101 -1718.2227 1700.1973 -1720.1211 c1689.5249 -1727.873 1691.1494 -1742.0273 1695.9365 -1752.9727 c1701.6182 -1765.9639 1710.2363 -1777.1709 1718.5771 -1788.5273 c1722.5117 -1793.8848 1725.8589 -1799.5 1730.4209 -1804.3867 c1732.6279 -1806.75 1735.0942 -1808.8691 1737.562 -1810.9512 c1740.7129 -1813.6113 1744.8091 -1815.208 1747.7305 -1818.1299 c1749.7451 -1820.1445 1751.8125 -1821.9443 1753.96 -1823.6182 C1750.3774 -1823.4121 1746.7959 -1823.208 1743.2285 -1823.1113 c1727.793 -1822.6924 1712.3223 -1822.8916 1696.8843 -1822.7002 c1683.897 -1822.5391 1667.3701 -1822.1455 1656.6738 -1830.7627 c1652.2578 -1834.3203 1649.0674 -1839.6582 1646.0098 -1844.3682 c1642.0068 -1850.5352 1641.1318 -1857.8359 1640.9712 -1865.0176 c1640.2749 -1896.1572 1688.4517 -1891.8008 1707.7788 -1885.5527 c1714.3906 -1883.415 1720.6172 -1880.2207 1727.1943 -1877.9697 c1734.4756 -1875.4775 1741.29 -1872.5146 1747.4336 -1867.7949 c1750.4185 -1865.502 1753.8501 -1863.7764 1757.2773 -1862.0234 C1755.0146 -1866.1758 1752.9146 -1870.4082 1750.5391 -1874.5195 c1746.6421 -1881.2656 1745.4146 -1888.4844 1743.3154 -1895.8408 c1739.7876 -1908.2041 1739.1792 -1921.8525 1742.2754 -1934.3213 c1744.9966 -1945.2803 1757.3018 -1955.2588 1768.1768 -1957.2617 c1780.5269 -1959.5371 1790.041 -1947.2148 1794.2695 -1937.1211 c1799.7441 -1924.0527 1801.9292 -1910.3115 1802.9277 -1896.2734 c1803.1021 -1893.8203 1803.2969 -1891.3457 1803.4893 -1888.8613 C1811.2437 -1898.0908 1821.9863 -1903.624 1831.7168 -1910.4541 c1838.668 -1915.333 1850.8066 -1922.2852 1858.0747 -1913.8613 c1873.7505 -1895.6934 1860.9941 -1869.1221 1848.6841 -1853.0273 C1854.1465 -1852.9697 1859.1357 -1851.5771 1863.6323 -1847.0811 c1866.1621 -1844.5518 1867.6641 -1841.2715 1870.002 -1838.5693 c1872.9785 -1835.1318 1875.6802 -1831.4121 1876.2256 -1826.7871 c1877.1309 -1819.1133 1871.6914 -1811.4092 1865.7031 -1807.1865 cf0 D1744.252 -1799.6172 m1739.7197 -1795.6816 1735.8818 -1791.291 1732.8174 -1786.1279 c1726.7822 -1775.958 1718.5161 -1767.1563 1712.4683 -1756.916 c1709.6797 -1752.1943 1707.1621 -1747.1836 1705.5908 -1741.918 c1704.917 -1739.6602 1705.1265 -1737.2705 1705.3208 -1734.9609 c1705.415 -1733.8438 1705.8789 -1732.9248 1706.2974 -1731.8906 C1717.3418 -1731.9258 1727.749 -1736.2383 1736.8838 -1742.1846 c1746.4883 -1748.4375 1755.4053 -1756.1338 1760.8145 -1766.4004 c1763.1914 -1770.9111 1764.958 -1775.2383 1768.4663 -1779.0508 c1772.2715 -1783.1846 1773.6831 -1788.125 1775.0913 -1793.4512 c1777.7646 -1803.5645 1781.6094 -1812.9014 1782.4395 -1823.3848 C1781.2891 -1822.9922 1780.106 -1822.4336 1779.0254 -1822.1709 c1776.418 -1821.5371 1774.0786 -1820.8564 1771.6514 -1819.6631 c1766.7285 -1817.2422 1761.9829 -1813.9961 1758.1191 -1810.1328 c1753.9478 -1805.9629 1748.6777 -1803.4609 1744.252 -1799.6172 cf1744.0889 -1854.7891 m1737.7344 -1858.1914 1732.4033 -1862.4717 1725.4766 -1864.8867 c1712.7334 -1869.3281 1700.4668 -1875.999 1686.73 -1876.5635 c1680.0811 -1876.8369 1673.0488 -1876.9814 1666.4922 -1875.7578 c1662.3174 -1874.9785 1655.7144 -1873.5625 1654.0737 -1868.9561 c1653.3579 -1866.9453 1653.9863 -1863.7813 1654.0762 -1861.6836 c1654.2168 -1858.4111 1654.8965 -1855.2578 1656.397 -1852.3418 c1658.4551 -1848.3428 1661.8081 -1842.8604 1665.5757 -1840.251 c1670.3057 -1836.9736 1677.2446 -1836.417 1682.7998 -1835.9746 c1689.7192 -1835.4219 1696.6973 -1835.7178 1703.6289 -1835.7783 c1718.0771 -1835.9053 1732.5171 -1835.7871 1746.9619 -1836.2197 c1753.8418 -1836.4258 1760.7036 -1837.0166 1767.5796 -1837.2021 c1767.9673 -1837.2129 1768.3584 -1837.2129 1768.7471 -1837.2197 C1768.6045 -1837.3379 1768.4521 -1837.4492 1768.3125 -1837.5703 c1765.7446 -1839.8008 1763.3789 -1842.2588 1760.8301 -1844.5137 c1755.916 -1848.8604 1749.8262 -1851.7168 1744.0889 -1854.7891 cf1790.0542 -1894.5039 m1789.1982 -1905.9922 1787.4849 -1916.5527 1784.0127 -1927.5615 c1782.4653 -1932.4668 1780.376 -1936.8809 1776.8521 -1940.6582 c1773.4868 -1944.2646 1771.4429 -1945.457 1766.8828 -1943.1836 c1757.5508 -1938.5313 1753.0293 -1930.6553 1753.5386 -1920.3242 c1753.8115 -1914.7852 1753.1104 -1909.2217 1754.5229 -1903.8184 c1755.9097 -1898.5146 1757.1016 -1893.0615 1758.7275 -1887.8359 c1760.52 -1882.0742 1764.0854 -1876.5859 1766.8965 -1871.2627 c1769.5947 -1866.1523 1772.5903 -1861.5283 1776.356 -1857.1563 c1778.6143 -1854.5342 1780.8979 -1851.9238 1783.1001 -1849.2568 C1783.8008 -1852.5605 1784.8652 -1855.7363 1786.0508 -1858.4658 c1787.6748 -1862.2031 1789.7725 -1865.7031 1791.7183 -1869.2803 C1791.6504 -1877.7178 1790.6602 -1886.377 1790.0542 -1894.5039 cf1798.5107 -1809.834 m1798.4141 -1804.5 1795.7402 -1799.6943 1795.5132 -1794.3926 c1795.2646 -1788.5869 1795.6655 -1782.7598 1795.4097 -1776.9502 c1795.1235 -1770.4629 1794.1895 -1764.8027 1795.7192 -1758.3916 c1797.0503 -1752.8096 1798.8237 -1747.3623 1800.9404 -1742.0352 c1802.8657 -1737.1895 1806.1948 -1733.4717 1809.1855 -1729.29 c1813.7715 -1722.8779 1819.0938 -1715.1563 1827.8926 -1716.1553 c1831.1304 -1716.5234 1834.3154 -1717.2549 1836.8232 -1719.498 c1840.1924 -1722.5117 1837.3398 -1730.1904 1836.5781 -1733.8477 c1834.1982 -1745.2773 1830.2041 -1756.2158 1824.0264 -1766.1445 c1821.168 -1770.7393 1818.2261 -1775.2197 1815.5732 -1779.9502 c1812.2817 -1785.8203 1810.1602 -1792.0303 1807.3262 -1798.0908 c1805.1455 -1802.7539 1802.0381 -1807.0381 1798.5166 -1811.0254 C1798.5166 -1810.5732 1798.5166 -1810.1641 1798.5107 -1809.834 cf1849.7734 -1902.7598 m1849.4565 -1903.417 1849.1045 -1904.0537 1848.73 -1904.6797 C1847.5547 -1904.665 1846.6787 -1904.1191 1845.5708 -1903.7666 c1841.896 -1902.5977 1838.752 -1899.5928 1835.6592 -1897.3613 c1828.0991 -1891.9072 1819.9873 -1887.8828 1813.6621 -1880.8525 c1809.8379 -1876.6035 1807.103 -1871.3555 1804.4888 -1866.1035 C1804.4146 -1861.8555 1804.1294 -1857.6348 1803.5054 -1853.4756 c1802.8008 -1848.7793 1801.4229 -1844.124 1799.8789 -1839.6299 c1799.5796 -1838.7588 1799.2573 -1837.8564 1798.897 -1836.959 C1812.1064 -1839.2764 1824.4829 -1845.1055 1833.7388 -1855.209 c1844.5586 -1867.0195 1857.4131 -1886.4023 1849.7734 -1902.7598 cf1858.8896 -1831.5879 m1857.1602 -1833.5732 1856.1177 -1835.9375 1854.4399 -1837.8887 c1852.2588 -1840.4258 1850.7622 -1840.1729 1847.6235 -1839.8271 c1844.6895 -1839.5039 1841.957 -1839.6719 1839.0713 -1838.9121 c1836.1934 -1838.1553 1833.8374 -1836.3262 1831.3687 -1834.7637 c1828.334 -1832.8438 1825.0146 -1831.3438 1821.8677 -1829.6191 c1819.2231 -1828.1699 1817.0718 -1826.0488 1814.356 -1824.6553 c1813.4326 -1824.1816 1812.3853 -1823.8047 1811.3203 -1823.4365 C1819.0771 -1817.0918 1828.4238 -1814.2441 1838.7031 -1813.7402 c1846.7705 -1813.3447 1862.4009 -1814.5088 1863.3721 -1825.5449 c1863.5254 -1827.2852 1859.918 -1830.4082 1858.8896 -1831.5879 cf*U*u1 D2081.4961 -2046.5967 m2088.7754 -2052.9395 2096.541 -2060.4287 2105.1289 -2064.9082 c2108.7236 -2066.7832 2112.8486 -2067.1934 2116.8594 -2067.4551 C2118.2314 -2069.7588 2119.6973 -2072.0078 2121.373 -2074.1367 c2121.4961 -2074.293 2121.623 -2074.4316 2121.75 -2074.5703 C2121.7197 -2075.3262 2121.6885 -2076.082 2121.6523 -2076.8369 c2121.2783 -2084.6055 2120.1641 -2092.3135 2119.6504 -2100.0771 c2119.1641 -2107.4453 2117.3027 -2114.9473 2117.2109 -2122.2852 c2117.1074 -2130.4453 2115 -2138.4092 2115 -2146.5605 C2115 -2156.9258 L2128.4814 -2156.9258 L2128.4902 -2128.417 2133.4014 -2099.1367 2134.8906 -2070.0264 C2141.7461 -2069.3936 2141.9746 -2059.1074 2135.6348 -2057.3223 C2135.6855 -2056.7402 2135.7559 -2056.1611 2135.8105 -2055.5801 C2137.2139 -2056.8945 2139.2197 -2057.5547 2141.6523 -2056.8662 c2159.252 -2051.8887 2174.3965 -2041.6855 2188.4541 -2030.3369 c2194.8379 -2025.1836 2202.0693 -2020.5889 2207.1582 -2014.0615 c2211.1162 -2008.9854 2214.8818 -1998.1465 2210.5674 -1992.1748 c2205.8301 -1985.6152 2195.9043 -1988.5664 2189.7725 -1991.1797 c2180.9268 -1994.9512 2172.875 -2000.7031 2165.3613 -2006.625 c2161.8096 -2009.4229 2158.8945 -2012.499 2156.1865 -2016.1064 c2153.9463 -2019.0898 2151.8906 -2022.4707 2148.6758 -2024.4707 c2145.3076 -2026.5674 2143.3203 -2029.6309 2141.2168 -2032.9414 c2139.7588 -2035.2354 2138.8125 -2038.0029 2137.5615 -2040.5078 C2138.6055 -2034.5859 2140.6309 -2028.9531 2141.3828 -2022.9395 c2143.3086 -2007.5293 2148.293 -1993.0439 2151.8545 -1977.9746 c2155.332 -1963.2627 2158.2979 -1948.4785 2162.7539 -1934.0156 c2167.1758 -1919.6621 2173.1885 -1906.0547 2179.6563 -1892.5293 c2182.7939 -1885.9678 2186.6572 -1879.8008 2190.0586 -1873.3809 c2193.6289 -1866.6426 2196.2236 -1859.3711 2200.3711 -1852.9463 c2206.3906 -1843.6201 2212.7715 -1834.5313 2219.5586 -1825.7539 C2220.8525 -1829.1836 2222.5674 -1832.5674 2223.9668 -1835.7461 c2226.2441 -1840.9209 2229.2158 -1845.6943 2232.9902 -1849.9082 c2240.7734 -1858.5977 2251.334 -1865.7754 2262.1797 -1870.0762 c2285.1641 -1879.1904 2311.3281 -1880.1396 2335.6992 -1878.8711 c2341.5508 -1878.5664 2347.4043 -1878.6514 2353.2637 -1878.6514 c2358.8848 -1878.6514 2365.2598 -1874.3975 2370.1055 -1871.9229 c2375.1074 -1869.3682 2381.3408 -1867.4629 2385.4717 -1863.5527 C2390.9336 -1865.0029 2396.7197 -1857.6553 2391.7539 -1852.6016 c2390.2764 -1851.0977 2390.7295 -1851.5488 2389.7803 -1849.9297 c2388.04 -1846.958 2383.709 -1845.2266 2380.6533 -1843.9883 c2378.6045 -1843.1592 2376.4785 -1840.8887 2374.2734 -1839.2402 c2371.0391 -1836.8203 2367.4648 -1834.8975 2364.0762 -1832.7129 c2351.752 -1824.7627 2336.375 -1821.7441 2322.5938 -1817.1484 C2337.8535 -1810.0908 2351.5605 -1801.0342 2361.8818 -1787.6406 c2366.2598 -1781.9609 2371.2266 -1775.2773 2370.5977 -1767.7344 c2369.9424 -1759.8779 2363.3301 -1755.042 2356.5742 -1752.2861 c2345.5137 -1747.7744 2332.2256 -1746.8535 2320.1865 -1748.8506 C2321.8711 -1746.6426 2323.498 -1744.3896 2325.0225 -1742.0596 c2333.1055 -1729.7051 2334.4014 -1714.6172 2338.0801 -1700.6758 c2339.8809 -1693.8496 2340.666 -1687.5801 2340.9648 -1680.5391 c2341.2715 -1673.3242 2341.6543 -1666.3154 2339.7676 -1659.2568 c2338.3105 -1653.8018 2335.5566 -1648.7598 2331.0322 -1645.3672 c2325.5459 -1641.2529 2317.8828 -1644.2227 2312.4092 -1646.5352 c2298.8047 -1652.2842 2289.1328 -1664.9561 2280.2715 -1676.2627 c2276.5879 -1680.9619 2272.9844 -1685.8721 2269.5967 -1690.9473 C2270.2705 -1682.002 2270.3438 -1673 2269.7881 -1664.0801 c2269.0244 -1651.8369 2267.79 -1638.4521 2261.0332 -1627.9063 c2258.0957 -1623.3203 2255.4648 -1618.3994 2252.6318 -1613.7119 c2250.0352 -1609.416 2247.0195 -1604.1875 2240.9512 -1605.7705 c2235.2129 -1607.2676 2232.9063 -1611.999 2230.0166 -1616.6533 c2228.2227 -1619.541 2227.2568 -1622.8076 2225.0635 -1625.5322 c2223.0166 -1628.0752 2221.2148 -1630.7773 2219.5283 -1633.5684 c2216.6338 -1638.3594 2213.416 -1644.0156 2212.0791 -1649.4766 c2210.6152 -1655.4551 2208.2988 -1661.0586 2206.7168 -1666.9902 c2199.7676 -1693.0391 2197.6846 -1720.8916 2199.6064 -1747.7676 c2200.0635 -1754.1543 2201.2676 -1760.4121 2202.0254 -1766.7295 c2202.4004 -1769.8447 2202.0352 -1772.7891 2202.9268 -1775.8428 c2203.8555 -1779.0273 2205.499 -1781.957 2206.4316 -1785.1543 c2208.2051 -1791.2383 2211.1768 -1796.8887 2213.3105 -1802.8496 c2213.9863 -1804.7373 2214.7598 -1806.459 2215.7207 -1807.9268 C2215.7461 -1808.4902 2215.7949 -1809.0586 2215.8594 -1809.6289 C2207.0479 -1820.4082 2198.8613 -1831.6738 2191.1729 -1843.2852 c2187.2061 -1849.2764 2184.2188 -1855.6143 2181.1621 -1862.1006 c2177.8301 -1869.1709 2173.6875 -1875.8115 2170.0615 -1882.7305 C2169.2598 -1880.3428 2168.3027 -1877.9805 2167.2246 -1875.6484 c2165.0352 -1870.9141 2162.1436 -1866.5088 2159.1738 -1862.2373 c2157.707 -1860.1289 2156.1006 -1858.251 2154.4121 -1856.3242 c2152.3555 -1853.9775 2151.2559 -1850.9453 2149.4434 -1848.4336 c2145.9238 -1843.5547 2143.6191 -1838.1875 2138.7197 -1834.5137 c2133.7539 -1830.79 2128.8496 -1826.9639 2123.7656 -1823.4033 c2116.374 -1818.2256 2103.5723 -1813.3525 2095.7295 -1819.7031 c2092.377 -1822.418 2092.3691 -1828.0859 2092.4883 -1831.9385 c2092.6426 -1836.915 2092.9844 -1841.7295 2094.2539 -1846.5674 c2096.9512 -1856.8516 2103.668 -1865.7305 2110.8262 -1873.3467 c2114.4141 -1877.165 2118.3291 -1880.6836 2122.0342 -1884.3887 c2125.9766 -1888.3301 2129.6777 -1892.46 2134.3291 -1895.5723 c2138.9102 -1898.6367 2144.0381 -1900.2578 2148.4648 -1903.5703 c2151.5234 -1905.8594 2154.75 -1907.6563 2158.2969 -1908.6855 C2150.9004 -1927.6318 2145.5879 -1947.1855 2140.9922 -1967.2959 c2137.5527 -1982.3496 2132.3467 -1997.1338 2129.8086 -2012.3477 c2128.7314 -2018.7988 2128.3408 -2025.2461 2126.1377 -2031.4531 c2123.9883 -2037.5068 2123.5967 -2044.8496 2123.0488 -2051.4639 C2120.5469 -2046.6162 2117.6426 -2041.8955 2114.5381 -2037.4121 c2111.7031 -2033.3164 2108.6875 -2029.3574 2105.9727 -2025.1787 c2103.1914 -2020.9004 2101.2129 -2016.1992 2098.6055 -2011.834 c2093.3818 -2003.0898 2082.8613 -1997.1299 2074.4189 -1991.958 c2068.333 -1988.2305 2053.7949 -1984.7285 2051.2637 -1994.8896 c2048.6396 -2005.4238 2055.2266 -2013.1035 2060.0625 -2021.6592 c2065.5342 -2031.3408 2073.1699 -2039.3398 2081.4961 -2046.5967 cf0 D2154.0117 -2037.0566 m2155.3301 -2035.0225 2158.0781 -2033.7979 2159.918 -2032.2285 c2162.459 -2030.0625 2164.5361 -2026.665 2166.4727 -2023.9717 c2170.8262 -2017.9199 2177.127 -2013.6348 2183.3223 -2009.6475 c2187.9531 -2006.668 2193.1563 -2002.9541 2198.7344 -2001.7256 C2198.5615 -2002.624 2198.4014 -2003.5234 2198.3281 -2004.4375 c2198.4805 -2002.5205 2197.4229 -2005.5654 2197.0596 -2006.0322 c2195.8125 -2007.6309 2194.2725 -2009.0078 2192.7754 -2010.3623 c2187.7061 -2014.9521 2182.0068 -2018.9063 2176.7012 -2023.2188 c2169.5127 -2029.0615 2161.5664 -2034.4082 2153.1055 -2038.5527 C2153.4004 -2038.0498 2153.6943 -2037.5459 2154.0117 -2037.0566 cf2328.251 -1832.7676 m2334.5781 -1834.7676 2340.9756 -1836.502 2347.2012 -1838.8154 c2353.5195 -1841.1631 2359.2256 -1844.9014 2364.873 -1848.5186 c2367.7295 -1850.3486 2370.0371 -1853.1514 2372.9121 -1854.835 c2373.5 -1855.1797 2374.1025 -1855.4854 2374.7109 -1855.7764 C2372.4316 -1857.1826 2369.0293 -1858.2637 2367.5088 -1858.9219 c2361.7441 -1861.4131 2356.1152 -1865.6514 2349.6816 -1865.6514 c2334.5469 -1865.6514 2319.4961 -1866.7705 2304.3604 -1865.7598 c2277.7383 -1863.9805 2247.25 -1855.2891 2235.1914 -1829.1855 c2234.5049 -1827.6992 2233.8613 -1826.1758 2233.2393 -1824.6426 C2238.0234 -1824.3701 2242.7939 -1823.8809 2247.5918 -1823.8213 c2255.2324 -1823.7266 2262.8799 -1823.8213 2270.5205 -1823.8213 c2277.0664 -1823.8213 2283.5986 -1823.3164 2290.1465 -1823.4014 c2296.9453 -1823.4883 2303.6982 -1825.5049 2310.2666 -1827.1318 c2316.3857 -1828.6475 2322.25 -1830.8701 2328.251 -1832.7676 cf2348.873 -1763.3008 m2351.2783 -1763.9609 2353.4082 -1764.9961 2355.5293 -1766.2881 c2358.375 -1768.0195 2357.832 -1770.0664 2356.4336 -1772.5957 c2353.3691 -1778.1396 2349.0869 -1783.2852 2344.6797 -1787.8027 c2340.582 -1792.002 2335.6719 -1795.1953 2330.543 -1797.9814 c2325.2373 -1800.8623 2319.2734 -1805.9111 2313.1377 -1806.6484 c2310.6943 -1806.9414 2308.0732 -1806.4678 2305.6777 -1807.0664 c2302.2598 -1807.9209 2298.8418 -1808.8633 2295.4238 -1809.7168 c2292.6328 -1810.416 2289.2188 -1810 2286.3574 -1810 C2276 -1810 L2274.6484 -1810 2273.5039 -1810.293 2272.5586 -1810.7852 C2266.04 -1810.9102 2259.5137 -1810.8213 2252.9961 -1810.8213 c2251.5742 -1810.8213 2250.1563 -1810.8535 2248.7393 -1810.8984 C2248.8564 -1810.8291 2248.9746 -1810.7617 2249.0918 -1810.6914 c2255.3203 -1806.9609 2261.625 -1803.4717 2267.9707 -1799.9453 c2280.3496 -1793.0645 2291.0664 -1784.0371 2301.0352 -1774.0664 c2304.8418 -1770.2598 2307.3877 -1765.1387 2310.624 -1760.7383 C2312.0254 -1762.4961 2314.2822 -1763.5322 2317.1113 -1762.7773 c2327.4414 -1760.0205 2338.6064 -1760.4814 2348.873 -1763.3008 cf2262.5049 -1732.833 m2262.7266 -1731.8789 2262.9375 -1730.9238 2263.1553 -1729.9697 C2272.7148 -1708.5781 2285.7451 -1688.5508 2301.4561 -1671.2949 c2305.9395 -1666.3711 2310.25 -1662.4619 2316.0762 -1659.1982 c2318.0342 -1658.1016 2321.7266 -1655.958 2324.0684 -1656.3994 c2325.3789 -1656.6465 2326.3145 -1660.1699 2326.7031 -1661.1279 c2328.9668 -1666.6992 2328.3535 -1672.9912 2328.0498 -1678.8457 c2327.6816 -1685.9121 2326.9199 -1692.0039 2325.1113 -1698.8623 c2321.8311 -1711.293 2320.7246 -1724.3594 2313.7979 -1735.498 c2310.626 -1740.5977 2306.6621 -1745.165 2302.8223 -1749.7607 c2300.8105 -1752.168 2298.5039 -1754.5723 2296.8096 -1757.2178 c2295.1875 -1759.749 2293.8389 -1762.6143 2291.8438 -1764.873 c2283.3125 -1774.5313 2272.502 -1782.3203 2261.4092 -1788.7207 c2256.0332 -1791.8223 2250.4902 -1794.5703 2245.2002 -1797.8301 c2240.5557 -1800.6914 2235.9541 -1803.4502 2230.8311 -1805.1953 C2230.7764 -1804.8701 2230.708 -1804.5488 2230.6104 -1804.2354 C2231.1963 -1803.5488 2231.8887 -1802.8633 2232.5918 -1802.0889 c2235.1104 -1799.3164 2236.9199 -1796.1045 2238.2822 -1792.6309 c2240.7939 -1786.2246 2245.1074 -1780.6191 2248.542 -1774.6543 c2252.2598 -1768.1973 2255.3887 -1761.377 2257.666 -1754.2803 c2259.8867 -1747.3604 2260.8613 -1739.918 2262.5049 -1732.833 cf2214.6162 -1763.5244 m2211.918 -1748.9951 2212.2207 -1734.3457 2212.2207 -1719.625 c2212.2207 -1704.625 2215.2246 -1690.1484 2217.9707 -1675.4941 c2219.1523 -1669.1914 2221.8281 -1663.4297 2223.5322 -1657.3018 c2225.4023 -1650.5752 2227.9697 -1644.7383 2231.6035 -1638.7217 c2233.3047 -1635.9063 2235.4355 -1633.4238 2237.248 -1630.6914 c2239.1572 -1627.8145 2240.3623 -1624.6309 2242.1641 -1621.7285 c2242.1758 -1621.7109 2242.1904 -1621.6797 2242.2021 -1621.6582 C2243.3584 -1623.6338 2244.6113 -1625.5459 2245.8828 -1627.4561 c2249.4346 -1632.793 2252.8574 -1638.8105 2254.1318 -1645.125 c2255.627 -1652.5371 2256.6162 -1659.8936 2256.9746 -1667.4883 c2257.6895 -1682.6045 2256.4277 -1697.668 2253.6133 -1712.5068 c2252.6709 -1717.4785 2251.5723 -1722.4209 2250.4365 -1727.3535 C2248.9736 -1730.4707 2247.5566 -1733.6113 2246.3086 -1736.8379 c2245.416 -1739.1445 2245.8838 -1741.0576 2247.0547 -1742.4189 C2245.9893 -1747.457 2244.8467 -1752.4473 2242.8027 -1757.2695 c2240.5381 -1762.6113 2237.625 -1767.6729 2234.6426 -1772.6387 c2233.1221 -1775.1689 2231.5303 -1777.6572 2229.9424 -1780.1455 c2228.0742 -1783.0732 2227.1357 -1785.9834 2225.7324 -1789.1182 c2225.1631 -1790.3906 2224.4131 -1791.543 2223.5879 -1792.6484 C2222.4023 -1789.5137 2220.5537 -1786.5977 2219.4521 -1783.4082 c2218.3496 -1780.2119 2217.3203 -1777.0908 2216.0322 -1773.9531 c2214.6816 -1770.667 2215.2598 -1766.9873 2214.6162 -1763.5244 cf2153.7441 -1891.3516 m2150.2568 -1888.6943 2146.0527 -1887.3613 2142.2461 -1885.1855 c2135.0449 -1881.0674 2129.2158 -1873.1455 2123.2461 -1867.4082 c2117.4404 -1861.8271 2112.3701 -1855.7109 2108.7646 -1848.4775 c2106.2158 -1843.3643 2104.5439 -1835.7598 2105.3145 -1829.7021 C2105.7002 -1829.7813 2106.083 -1829.877 2106.4609 -1829.9951 C2108.0957 -1830.4023 2109.6885 -1831.0205 2111.2813 -1831.5645 c2115.752 -1833.0908 2119.4424 -1836.2012 2123.1865 -1839.0098 c2126.6289 -1841.5908 2130.9863 -1843.9268 2133.4092 -1847.5186 c2135.9951 -1851.3535 2138.5654 -1855.2773 2140.8086 -1859.3105 c2142.7646 -1862.8281 2145.6484 -1865.5566 2147.9482 -1868.7988 c2150.3496 -1872.1836 2152.5449 -1875.6992 2154.542 -1879.3369 c2157.3145 -1884.3867 2159.3369 -1889.8691 2159.5508 -1895.4795 C2157.4238 -1894.3604 2155.4033 -1892.6152 2153.7441 -1891.3516 cf2069.3535 -2004.0996 m2073.4307 -2006.5977 2077.1406 -2009.5518 2081.0996 -2012.207 c2087.584 -2016.5566 2090.0469 -2023.8672 2093.8701 -2030.3311 c2098.0967 -2037.4775 2103.5801 -2043.79 2107.8105 -2050.9443 c2108.0254 -2051.3066 2108.2256 -2051.6758 2108.4355 -2052.041 C2106.5713 -2050.7881 2104.8428 -2049.1172 2103.3125 -2047.8223 c2100.0605 -2045.0674 2096.6992 -2042.4502 2093.4209 -2039.7256 c2086.6592 -2034.1064 2080.1387 -2028.127 2075.0098 -2020.9463 c2072.3164 -2017.1758 2070.5322 -2012.7852 2067.7832 -2009.1016 c2065.834 -2006.4893 2064.4326 -2004.2148 2063.9258 -2001.375 C2065.8906 -2001.6006 2067.7402 -2003.1113 2069.3535 -2004.0996 cf*U*u1 D2497.3096 -2105.0215 m2509.1846 -2112.8008 2525.9316 -2109.1572 2538.4238 -2104.7178 c2544.4355 -2102.5811 2550.3379 -2101.4502 2555.9121 -2098.1035 c2558.4023 -2096.6094 2560.3711 -2094.6367 2562.2363 -2092.5781 C2562.8701 -2092.9717 2563.4629 -2093.459 2564 -2094.0742 c2566.3252 -2096.7402 2569.293 -2096.6387 2571.542 -2095.165 C2571.7529 -2095.6855 2571.9668 -2096.2031 2572.168 -2096.7275 c2574.8447 -2103.6885 2575.584 -2110.2891 2576.25 -2117.6211 c2576.8789 -2124.5391 2578.1777 -2131.2461 2577.5283 -2138.2227 c2577.3252 -2140.4043 2577.0762 -2142.1729 2577.2637 -2144.3535 c2577.3477 -2145.3301 2577.4004 -2146.3057 2577.4355 -2147.2852 C2574.0342 -2148.8799 2573.4316 -2153.75 2575.5742 -2156.9258 C2587.5566 -2156.9258 L2589.0879 -2155.1367 2590.0127 -2152.709 2590.293 -2150.1865 c2590.5439 -2147.9326 2590.3809 -2145.7061 2590.1865 -2143.4541 c2589.9434 -2140.623 2590.6113 -2137.8184 2590.7676 -2134.9854 c2591.1465 -2128.0898 2589.2822 -2121.2676 2589.0527 -2114.4004 c2588.8613 -2108.667 2587.8096 -2103.1445 2586.1699 -2097.7344 C2587.874 -2097.416 2589.5898 -2096.8457 2591.3086 -2096.0547 c2596.1914 -2093.8057 2600.0664 -2089.0205 2603.4668 -2085.0244 c2608.0918 -2079.5889 2611.4414 -2073.334 2614.0547 -2066.7139 c2618.25 -2056.0898 2615.8672 -2042.2373 2602.4912 -2041.1074 c2598.0986 -2040.7363 2592.9609 -2043.5713 2589.3535 -2045.6875 c2585.2617 -2048.0879 2581.4023 -2050.6992 2577.957 -2053.9785 c2574.6104 -2057.1631 2572.1133 -2061.2197 2570.1777 -2065.373 c2569.7881 -2066.21 2569.3984 -2067.0361 2569.0615 -2067.873 C2565.9287 -2064.2109 2563.1855 -2060.4258 2560.5879 -2056.0547 c2557.1182 -2050.2178 2553.9844 -2044.7822 2552.5996 -2038.1016 c2551.834 -2034.4102 2550.9424 -2029.4629 2552.5469 -2025.7793 C2554.4297 -2025.6729 2556.2402 -2025.3604 2557.8262 -2024.8633 c2569.0957 -2021.332 2577.1484 -2011.127 2580.9297 -2000.4092 c2584.543 -1990.166 2583.7002 -1977.3916 2581.7109 -1966.876 c2579.3691 -1954.4922 2570.9785 -1946.6416 2559.7285 -1942.0625 c2548.6631 -1937.5576 2537.5068 -1938.3984 2528.0508 -1946.1816 c2518.9209 -1953.6953 2514.4502 -1966.8857 2512.7988 -1978.1738 c2511.458 -1987.3447 2510.0957 -1999.1445 2514.9346 -2007.4766 c2517.9502 -2012.6699 2524.5762 -2015.2422 2529.7588 -2017.5762 c2532.6084 -2018.8584 2535.4404 -2020.1289 2538.3262 -2021.0449 C2538.7969 -2021.6064 2539.3398 -2022.1055 2539.9277 -2022.5615 C2537.7734 -2029.6816 2539.1836 -2037.9785 2540.8574 -2045.1563 c2542.4424 -2051.9521 2546.7393 -2058.2012 2550.2656 -2064.1367 c2553.0342 -2068.793 2556.1436 -2072.7539 2559.543 -2076.7402 C2559.1865 -2077.0537 2558.8457 -2077.375 2558.5088 -2077.6992 C2552.123 -2076.1387 2545.6787 -2074.2344 2539.4199 -2072.2441 c2533.4902 -2070.3584 2527.6465 -2067.5898 2521.3145 -2068.2686 c2514.7051 -2068.9766 2508.5 -2072.042 2502.8398 -2075.3984 c2493.2256 -2081.0996 2485.6143 -2097.3584 2497.3096 -2105.0215 cf0 D2581.0752 -2072.2988 m2581.1035 -2070.9082 2583.4453 -2067.9355 2584.21 -2066.7031 c2585.8145 -2064.1172 2588.2324 -2061.9316 2590.6826 -2060.167 c2591.9434 -2059.2598 2601.7109 -2052.9785 2602.4502 -2053.9492 c2604.9297 -2057.2012 2601.5508 -2063.4219 2600.1123 -2066.4102 c2598.0869 -2070.6172 2587.3037 -2089.4102 2581.168 -2083.8848 c2580.8896 -2083.6348 2580.6377 -2083.3623 2580.3955 -2083.082 C2580.0898 -2082.4629 2579.7803 -2081.8457 2579.4541 -2081.2383 C2580.8027 -2078.5469 2581.0156 -2075.1738 2581.0752 -2072.2988 cf2548.6943 -2009.2939 m2547.6992 -2007.9336 2546.1387 -2007 2544 -2007 C2543.0088 -2007 2542.6768 -2007 v2541.4502 -2007 2540.3701 -2007.3291 2539.4551 -2007.8887 C2537.7051 -2007.1094 2536.0361 -2006.2236 2534.6592 -2005.6035 c2531.7803 -2004.3066 2527.2832 -2002.8506 2525.625 -1999.9961 c2523.0518 -1995.5654 2525.1816 -1987.6641 2525.251 -1982.8086 c2525.418 -1971.043 2535.2422 -1946.4717 2551.1035 -1952.6514 c2557.9258 -1955.3096 2564.5859 -1957.6201 2567.6162 -1964.9434 c2570.4785 -1971.8613 2570.1309 -1979.752 2570.083 -1987.083 c2570.0342 -1994.5469 2567.3975 -2001.8848 2561.9824 -2007.0908 c2559.5898 -2009.3906 2557.0244 -2011.3076 2553.9463 -2012.4727 C2552.8613 -2010.707 2551.0391 -2009.3887 2548.6943 -2009.2939 Cf2504.498 -2093.4473 m2504.7793 -2092.1064 2505.3711 -2090.8691 2505.9668 -2089.6494 c2507.7021 -2086.0986 2514.4619 -2083.6738 2517.915 -2082.3184 c2524.0039 -2079.9268 2528.835 -2082.5771 2534.6338 -2084.4131 c2538.8594 -2085.751 2543.1904 -2086.749 2547.4473 -2087.9844 C2542.5801 -2090.7061 2536.7637 -2091.6074 2531.5342 -2093.3721 c2525.4365 -2095.4287 2519.3193 -2096.5283 2512.8818 -2096.3213 c2510.125 -2096.2324 2507.2598 -2095.915 2504.8809 -2094.458 c2503.9727 -2093.9004 2504.168 -2095.0176 2504.498 -2093.4473 cf*U*u1 D2895.9082 -2092.6553 m2904.7676 -2103.9238 2915.0801 -2110.5137 2929.3105 -2112.2734 C2926.7197 -2117.8604 2924.626 -2123.5957 2922.0293 -2129.3125 c2918.0381 -2138.1006 2913.0732 -2146.9824 2911.2461 -2156.5352 c2911.2207 -2156.668 2911.209 -2156.7959 2911.1914 -2156.9258 C2924.4883 -2156.9258 L2926.4473 -2149.6055 2930.166 -2142.7373 2933.2539 -2135.873 c2936.6611 -2128.3008 2939.2646 -2120.665 2943.2646 -2113.4365 C2943.875 -2113.2695 2944.4609 -2113.0215 2945 -2112.6953 C2945.3643 -2112.6504 2945.7285 -2112.6016 2946.0898 -2112.5439 C2950.8838 -2116.1699 2958.0186 -2118.2256 2962.5488 -2119.668 c2973.3818 -2123.1162 2989.3662 -2125.5957 2999.5508 -2119.0146 c3012.0625 -2110.9287 3002.3047 -2095.6357 2989.9932 -2095.0137 c2987.2197 -2094.873 2984.5576 -2093.8623 2981.8184 -2093.3984 c2978.4189 -2092.8232 2975.0654 -2092.9434 2971.6396 -2093.168 c2965.8164 -2093.5488 2960.0322 -2094.7324 2954.4375 -2096.4414 C2956.2656 -2094.3086 2958.2822 -2092.3691 2960.1563 -2090.21 c2963.252 -2086.6445 2965.9023 -2082.5781 2968.7354 -2078.8008 c2970.9277 -2075.876 2973.5479 -2073.2979 2976.0176 -2070.585 C2978.8906 -2069.6582 2981.2754 -2067.002 2980.6885 -2063.3047 C2980.7119 -2063.1592 2980.7295 -2063.0137 2980.7432 -2062.8682 C2984.4668 -2065.0957 2988.3027 -2067.0059 2992.3418 -2068.6973 c2997.8027 -2070.9844 3003.1211 -2071.1055 3008.9219 -2071.7354 c3014.251 -2072.3135 3019.7656 -2072.3721 3025.125 -2072.4912 c3031.4434 -2072.6309 3036.2197 -2070.7178 3041.417 -2067.2588 c3050.6338 -2061.124 3061.1592 -2057.998 3065.0117 -2046.4121 c3068.2168 -2036.7754 3061.8203 -2025.5352 3054.373 -2019.8232 c3035.5977 -2005.4229 3008.8037 -1994.2852 2986.3535 -2007.2471 c2977.3076 -2012.4707 2972.8584 -2022.8096 2969.3623 -2032.2168 c2966.2109 -2040.6953 2965.8135 -2051.6758 2967.1455 -2061.1221 C2965.1172 -2063.4766 2962.9775 -2065.7217 2960.7695 -2067.9336 c2956.9814 -2071.7266 2954 -2076.9189 2950.7813 -2081.2109 c2949.9238 -2082.3535 2948.9883 -2083.4268 2948.0283 -2084.4795 C2946.7461 -2078.2852 2943.1162 -2072.9004 2939.2373 -2068.0244 c2931.0322 -2057.7119 2922.8633 -2047.126 2909.9414 -2042.8115 c2904.6064 -2041.0303 2898.3643 -2041.5586 2894.1748 -2045.4844 c2890.585 -2048.8477 2890.0234 -2054.6328 2889.834 -2059.2236 c2889.6611 -2063.4102 2890.0791 -2067.6357 2890.0791 -2071.8271 c2890.0791 -2079.7871 2890.8242 -2086.1885 2895.9082 -2092.6553 cf0 D2973.5283 -2106.0439 m2976.792 -2105.8301 2979.6523 -2106.0801 2982.8086 -2106.876 c2984.3076 -2107.2539 2985.7207 -2107.9297 2987.2979 -2107.9395 c2987.3643 -2107.9395 2989.3799 -2107.7773 2989.6797 -2108.0293 c2990.1035 -2108.3848 2990.5547 -2108.665 2991.0098 -2108.9365 C2988.6729 -2109.8965 2985.4756 -2109.7734 2983.165 -2109.8555 c2977.4395 -2110.0605 2971.4365 -2108.7598 2965.9141 -2107.0859 C2968.3994 -2106.5889 2970.9238 -2106.2148 2973.5283 -2106.0439 cf2980.9736 -2038.7363 m2981.8477 -2034.8721 2983.7471 -2031.3682 2985.4805 -2027.8447 c2987.0557 -2024.6436 2988.5195 -2021.3721 2991.5762 -2019.3232 c3007.5098 -2008.6436 3028.667 -2017.3701 3042.7754 -2027.2314 c3047.7354 -2030.6982 3053.9492 -2036.1152 3052.4766 -2042.9561 c3051.6846 -2046.6367 3047.248 -2049.208 3044.2764 -2050.8965 c3040.6816 -2052.9385 3037.0781 -2054.5547 3033.6084 -2056.8643 c3026.874 -2061.3457 3016.6953 -2059.4609 3008.9219 -2058.7354 c3004.291 -2058.3027 3000.1563 -2057.8555 2995.7979 -2056.1621 c2991.8418 -2054.625 2988.1338 -2052.2813 2984.5977 -2049.9697 c2982.8271 -2048.8125 2981.0908 -2048.6602 2979.5938 -2049.1504 C2979.7676 -2045.5605 2980.2334 -2042.0068 2980.9736 -2038.7363 cf2902.8779 -2058.1445 m2902.9102 -2057.3711 2903 -2055.1436 2903.3672 -2054.6758 c2903.7305 -2054.2148 2908.4736 -2056.0264 2909.4619 -2056.3877 c2915.334 -2058.5381 2919.9629 -2065.0957 2923.6953 -2069.7881 c2927.5098 -2074.584 2932.3271 -2078.877 2934.5508 -2084.7305 c2936.4404 -2089.7041 2936.0088 -2094.9707 2935.4912 -2100.2031 C2926.0547 -2099.7959 2916.4561 -2096.0742 2910.2559 -2089.6719 c2908.0781 -2087.4219 2905.9961 -2084.7891 2904.4346 -2082.084 c2902.6113 -2078.9238 2903.0791 -2075.333 2903.0791 -2071.8271 c2903.0791 -2067.2676 2902.6904 -2062.7021 2902.8779 -2058.1445 cf*U*u1 D3407.1055 -1999.5371 m3411.4102 -2011.7197 3415.9199 -2025.4365 3423.999 -2035.6602 c3428.2246 -2041.0078 3433.4668 -2045.3477 3437.9121 -2050.5176 c3440.9043 -2053.998 3443.9316 -2056.1836 3447.668 -2057.2686 C3444.6494 -2064.7949 3442.1035 -2072.4063 3440.0674 -2080.3242 c3437.3535 -2090.8809 3433.8477 -2101.1777 3431.248 -2111.7686 c3428.7285 -2122.0352 3427.7656 -2132.1924 3427.5137 -2142.7383 c3427.4004 -2147.498 3427.5 -2152.2148 3427.6572 -2156.9258 C3440.4824 -2156.9258 L3440.4414 -2155.8125 3440.4111 -2154.7021 3440.4121 -2153.6016 c3440.418 -2145.6641 3440.5322 -2137.7842 3441.0947 -2129.8643 c3442.1748 -2114.6387 3448.5986 -2100.1465 3452.1777 -2085.4551 c3453.7227 -2079.1133 3455.625 -2072.8975 3457.8477 -2066.8027 C3461.3223 -2067.1582 3465.1787 -2065.0781 3465.332 -2060.5664 c3465.4805 -2056.1973 3466.5371 -2052.1094 3467.0254 -2047.8584 C3467.8398 -2048.7129 3468.8867 -2049.4033 3470.0645 -2049.8867 c3475.3555 -2052.0576 3481.0928 -2051.1641 3486.6543 -2051.0918 c3493.3135 -2051.0049 3500.0732 -2049.8828 3506.418 -2047.8926 c3512.5732 -2045.9629 3518.5029 -2043.4365 3524.6318 -2041.4336 c3530.7363 -2039.4375 3535.9932 -2035.8027 3541.8652 -2033.2813 c3544.3174 -2032.2285 3546.6582 -2030.2676 3549.0938 -2029.0488 c3552.1045 -2027.541 3554.8623 -2026.3682 3557.4541 -2024.1758 c3561.998 -2020.332 3565.0195 -2015.1172 3570.1699 -2011.9922 c3574.6182 -2009.293 3577.7852 -2004.7598 3579.2334 -1999.832 c3580.9082 -1994.1309 3586.2988 -1990.4102 3588.3848 -1984.7207 c3598.5996 -1956.8652 3546.7559 -1966.5762 3534.2227 -1971.1572 c3522.9365 -1975.2813 3512.8799 -1980.5293 3502.6797 -1986.6191 C3504.9775 -1984.3809 3507.2061 -1982.416 3509.1992 -1979.8535 c3511.5986 -1976.7686 3514.0352 -1973.6973 3516.459 -1970.6309 c3521.0469 -1964.8242 3526.1475 -1959.4316 3530.8789 -1953.7422 c3535.499 -1948.1875 3539.3945 -1942.5098 3543.3271 -1936.4697 c3547.1367 -1930.6191 3551.6201 -1925.1895 3554.9072 -1919.0186 c3558.625 -1912.0371 3562.4531 -1905.1152 3566.4199 -1898.2725 c3573.6563 -1885.7861 3581.1836 -1872.9189 3590.9707 -1862.2451 c3600.2539 -1852.1221 3611.0742 -1843.5332 3620.5566 -1833.5996 c3631.0137 -1822.6445 3642.4541 -1811.4502 3650.5723 -1798.6328 c3654.2695 -1792.793 3657.1855 -1786.5557 3660.5605 -1780.54 c3664.248 -1773.9658 3668.6396 -1768.0996 3671.2021 -1760.9326 c3676.0801 -1747.2871 3681.2412 -1733.6768 3686.7715 -1720.2764 c3689.3662 -1713.9883 3691.3535 -1707.5879 3693.4297 -1701.1182 c3695.7168 -1693.9941 3698.9238 -1687.1602 3700.8135 -1679.9238 c3702.4727 -1673.5732 3703.3242 -1667.0654 3705.2129 -1660.7695 c3707.3008 -1653.8105 3708.0361 -1646.7783 3709.8027 -1639.7754 c3711.582 -1632.7246 3713.5449 -1625.7207 3715.3242 -1618.6689 c3716.2441 -1615.0225 3716.5137 -1611.2578 3716.8076 -1607.4873 C3721.7754 -1607.4434 3726.833 -1607.168 3731.4756 -1605.7139 c3738.9863 -1603.3623 3746.1289 -1599.8047 3753.291 -1596.5859 c3759.8955 -1593.6182 3766.707 -1591.251 3773.2393 -1588.0957 c3780.0723 -1584.7959 3785.8252 -1580.4336 3792.1641 -1576.3457 c3797.499 -1572.9043 3802.5254 -1570.1914 3806.9375 -1565.4727 c3811.2285 -1560.8838 3814.6201 -1555.4727 3818.3477 -1550.4385 c3822.2881 -1545.1191 3824.8154 -1537.1563 3826.9785 -1530.9414 c3828.6621 -1526.1055 3831.0039 -1521.3105 3830.0313 -1516.04 c3829.0244 -1510.5811 3824.3828 -1508.0811 3819.3652 -1507 c3812.7607 -1505.5762 3806.5859 -1504.7764 3799.7754 -1504.7695 c3785.46 -1504.7549 3770.2539 -1511.1914 3757.6533 -1517.5391 c3745.6289 -1523.5947 3736.25 -1533.3447 3727.5449 -1543.3877 c3727.3281 -1543.6367 3727.1191 -1543.8984 3726.9053 -1544.1514 C3727.916 -1538.3242 3729.124 -1532.5166 3730.0566 -1526.6953 c3731.6426 -1516.7979 3733.8809 -1507.2754 3736.623 -1497.6387 c3739.4609 -1487.666 3743.6777 -1478.1777 3746.8682 -1468.3145 c3750.1816 -1458.0703 3753.9883 -1448.0723 3757.6221 -1437.9443 c3761.3506 -1427.5498 3764.2246 -1416.4912 3769.1035 -1406.5674 c3773.75 -1397.1143 3779.5293 -1388.2373 3785.291 -1379.4395 c3790.1289 -1372.0508 3795.0488 -1364.6895 3800.1191 -1357.4629 C3800.0332 -1357.9492 3799.9404 -1358.4316 3799.8584 -1358.9199 c3798.0303 -1369.8398 3795.9727 -1381.0918 3795.4287 -1392.1465 c3795.1855 -1397.084 3795.5088 -1402.0361 3794.957 -1406.9521 c3794.4863 -1411.1484 3795.4609 -1415.5781 3799.127 -1418.0889 c3806.2578 -1422.9707 3814.9912 -1415.9873 3820.4551 -1411.5703 c3825.4551 -1407.5283 3830.0703 -1402.6035 3834.0107 -1397.1191 C3834.0107 -1362.8428 L3832.8857 -1376.6602 3824.627 -1389.7041 3814.8555 -1399.2412 c3812.8418 -1401.2051 3810.4434 -1402.5244 3808.25 -1404.1543 C3808.9043 -1396.4746 3808.1445 -1388.8027 3809.6357 -1381.1357 c3811.1738 -1373.2324 3811.7871 -1365.168 3813.3164 -1357.251 c3814.9482 -1348.793 3817.9219 -1341.4678 3822.3379 -1334.1094 c3826.2822 -1327.5352 3829.667 -1320.8711 3834.0107 -1314.5977 C3834.0107 -1292.7734 L3830.3379 -1296.0381 3827.7598 -1300.3965 3825.0088 -1304.8359 c3822.8887 -1308.2598 3820.1465 -1311.2412 3818.1689 -1314.7598 c3817.6084 -1315.7568 3817.0586 -1316.7598 3816.5107 -1317.7617 C3814.8164 -1316.7158 3812.6504 -1316.6094 3810.4531 -1318.2383 c3803.7148 -1323.2334 3796.3145 -1327.0439 3788.7656 -1330.6699 c3784.6914 -1332.626 3781.0381 -1333.2451 3776.5605 -1333.2988 c3772.1279 -1333.3525 3767.8037 -1333.9248 3763.3926 -1334.2549 c3755.9248 -1334.8135 3748.3857 -1333.0137 3741.6504 -1329.8867 c3738.8662 -1328.5947 3735.041 -1327.292 3736.1426 -1323.8379 c3737.3828 -1319.9443 3740.1172 -1316.9912 3743.0117 -1314.1924 c3753.2285 -1304.3145 3764.6318 -1296.1094 3777.3418 -1290.0693 C3781.623 -1290.4326 3785.9082 -1290.5029 3790.2119 -1290.4512 c3792.8906 -1290.4189 3795.5391 -1290.0967 3798.1719 -1289.6143 c3800.46 -1289.1953 3802.4033 -1287.6855 3804.7617 -1287.4834 c3809.9658 -1287.0361 3811.9268 -1281.7432 3810.5986 -1278.043 C3811.6924 -1277.7012 3812.7852 -1277.3535 3813.8789 -1277.0156 c3820.6699 -1274.917 3827.209 -1274.0313 3834.0107 -1273.7012 C3834.0107 -1252.6035 L3833.5898 -1252.5498 3833.1494 -1252.5225 3832.6738 -1252.5518 c3825.2588 -1253.0059 3818.7559 -1244.5918 3813.6523 -1240.125 c3809.832 -1236.7803 3806.6934 -1233.9629 3804.1348 -1229.5439 c3801.5225 -1225.0313 3798.5039 -1220.8691 3796.0762 -1216.2012 c3791.0254 -1206.4912 3789.374 -1195.3945 3786.8438 -1184.8447 c3785.6445 -1179.8418 3783.9297 -1174.9512 3783.3477 -1169.8281 c3783.2012 -1168.5371 3783.0371 -1167.25 3782.8613 -1165.9648 C3790.6865 -1168.8242 3798.4004 -1174.7061 3803.1416 -1181.2754 c3805.9316 -1185.1396 3808.0801 -1189.1035 3811.3887 -1192.6094 c3811.6201 -1192.8545 3811.8408 -1193.0947 3812.0674 -1193.3379 C3813.6084 -1200.1484 3815.584 -1206.8838 3818.0605 -1213.6406 c3822.3828 -1225.4268 3825.1191 -1237.9355 3834.0107 -1246.5283 C3834.0107 -1201.21 L3831.2432 -1196.7188 3828.6973 -1192.1172 3825.1816 -1188.1201 c3824.6729 -1187.541 3824.167 -1186.9785 3823.665 -1186.4219 C3823.2197 -1184.4072 3822.8047 -1182.3799 3822.4619 -1180.3164 c3821.6074 -1175.166 3821.3965 -1170.0088 3821.0146 -1164.8174 c3820.6113 -1159.3486 3819.6152 -1153.9424 3821.0078 -1148.5488 c3822.2646 -1143.6758 3825.1377 -1139.0947 3828.5684 -1135.4658 c3829.2734 -1134.7197 3832.2139 -1133.3418 3834.0107 -1133.3926 C3834.0107 -1120.7842 L3828.7676 -1120.7031 3823.2188 -1122.7441 3819.376 -1126.2734 c3814.4512 -1130.7949 3811.2285 -1137.3496 3808.9697 -1143.5146 c3806.251 -1150.9326 3807.5625 -1158.6875 3808.126 -1166.3311 c3808.1592 -1166.7793 3808.1992 -1167.2246 3808.2344 -1167.6719 C3806.3301 -1165.8535 3804.3145 -1164.1436 3802.2539 -1162.4912 c3797.6777 -1158.8184 3792.9814 -1156.0879 3787.5449 -1153.9473 c3783.4307 -1152.3271 3777.7773 -1150.2852 3773.5664 -1152.752 c3769.0879 -1155.376 3768.583 -1160.4336 3769.583 -1165.0762 c3770.8818 -1171.1113 3771.3838 -1177.1035 3772.998 -1183.0996 c3776.4492 -1195.9189 3778.2949 -1209.0742 3784.0459 -1221.1523 c3786.0977 -1225.4629 3788.6777 -1229.3447 3791.1719 -1233.3096 C3785.5 -1230.8154 3779.5977 -1228.834 3773.6807 -1227.8359 c3762.4121 -1225.9346 3750.5166 -1226.3975 3739.1348 -1226.6768 c3734.668 -1226.7861 3729.7305 -1227.6621 3725.5049 -1229.123 c3721.5732 -1230.4834 3717.8008 -1229.1543 3714.4316 -1232.5234 c3707.0303 -1239.9248 3716.9717 -1251.4434 3721.4063 -1257.2393 c3724.4492 -1261.2168 3727.4795 -1265.165 3731.1494 -1268.5928 c3735.3955 -1272.5586 3741.3779 -1275.0293 3746.3418 -1278.0078 c3750.7363 -1280.6445 3754.8467 -1283.1191 3759.1123 -1285.1436 C3755.6299 -1287.2891 3752.2227 -1289.5703 3748.8604 -1291.9355 c3744.709 -1294.8555 3741.2178 -1298.5146 3737.3965 -1301.8271 c3733.4414 -1305.2568 3729.2891 -1309.0146 3726.5752 -1313.5625 c3724.4375 -1317.1465 3722.2725 -1322.0566 3722.6133 -1326.2842 c3723.0166 -1331.3037 3726.1416 -1335.5547 3730.21 -1338.3389 c3738.0098 -1343.6748 3747.5713 -1346.2539 3756.875 -1347.1113 c3761.7441 -1347.5605 3766.4531 -1346.918 3771.2871 -1346.457 c3776.7617 -1345.9355 3782.1699 -1346.5547 3787.5488 -1345.0723 c3790.0586 -1344.3809 3792.5098 -1343.3516 3794.9121 -1342.1953 C3794.7705 -1342.4805 3794.6279 -1342.7656 3794.5049 -1343.0576 c3793.3691 -1345.749 3790.8545 -1348.1074 3789.1787 -1350.4775 c3787.1338 -1353.3672 3785.6406 -1356.5098 3783.2168 -1359.1309 c3778.4121 -1364.3252 3774.8574 -1371.6318 3771.0068 -1377.5723 c3766.624 -1384.334 3762.4443 -1391.2197 3758.7109 -1398.3643 c3751.2734 -1412.6006 3747.377 -1428.7656 3741.6689 -1443.7461 c3736.1992 -1458.1006 3731.1836 -1472.7686 3726.2021 -1487.2979 c3721.4023 -1501.2969 3718.9063 -1515.5898 3716.3809 -1530.1104 c3715.2031 -1536.8828 3713.9053 -1543.6357 3712.7578 -1550.415 c3712.1914 -1553.7549 3712.0742 -1556.9961 3711.251 -1560.3203 c3710.3135 -1564.0996 3709.4287 -1567.8027 3708.9434 -1571.6758 c3708.5615 -1574.7227 3708.125 -1577.7559 3707.6689 -1580.7832 C3707.5293 -1581.2637 3707.3848 -1581.7451 3707.2539 -1582.2246 c3705.5547 -1588.4443 3704.6982 -1594.8877 3703.7861 -1601.2578 c3703.6025 -1602.5391 3703.6641 -1603.8135 3703.9941 -1604.9668 C3703.6064 -1607.8545 3703.2471 -1610.748 3702.957 -1613.6572 c3702.2627 -1620.6279 3699.4902 -1627.748 3697.7275 -1634.5254 c3695.8848 -1641.6113 3695.1211 -1648.7842 3693.1045 -1655.8379 c3691.3066 -1662.127 3690.0947 -1668.4805 3688.6641 -1674.8613 c3687.0303 -1682.1504 3683.7607 -1688.9365 3681.4277 -1696.0146 c3676.9697 -1709.5381 3672.0439 -1722.7539 3666.7461 -1735.9746 c3664.0908 -1742.6025 3661.3281 -1749.127 3659.1738 -1755.9395 c3656.9043 -1763.1123 3652.1006 -1769.0488 3648.4561 -1775.5469 c3645.0957 -1781.5361 3642.1348 -1787.668 3638.4512 -1793.4844 c3634.083 -1800.3818 3628.1299 -1806.0918 3622.5898 -1812.043 c3612.7031 -1822.6611 3602.8047 -1832.8633 3592.1836 -1842.7559 c3581.8438 -1852.3867 3573.4131 -1862.7813 3565.6963 -1874.5986 c3557.374 -1887.3428 3549.9648 -1900.6611 3542.8135 -1914.0879 c3539.6064 -1920.1094 3534.9971 -1925.4629 3531.2734 -1931.1807 c3527.2188 -1937.4092 3522.9746 -1943.1162 3518.1143 -1948.7734 c3511.5762 -1956.3818 3505.168 -1964.0273 3499.0098 -1971.9453 c3496.0225 -1975.7861 3492.041 -1978.5762 3489.1084 -1982.5186 c3485.8867 -1986.8467 3483.1328 -1991.6377 3480.2988 -1996.2256 c3475.0059 -2004.7939 3470.0527 -2013.5898 3465.3379 -2022.4873 c3465.0352 -2023.0596 3464.7246 -2023.625 3464.418 -2024.1934 C3463.2129 -2018.7705 3461.3809 -2013.4805 3459.2969 -2008.3389 c3457.0879 -2002.8896 3453.9482 -1997.9453 3452.0078 -1992.3887 c3450.2969 -1987.4873 3448.9004 -1982.5732 3446.2051 -1978.0869 c3443.1807 -1973.0527 3438.9111 -1968.6143 3434.9805 -1964.2988 c3433.3965 -1962.5596 3431.4805 -1961.1582 3429.7559 -1959.5654 c3428.8213 -1958.7031 3427.7393 -1957.9707 3426.668 -1957.2939 c3426.166 -1956.9766 3422.7197 -1954.793 3424.9004 -1956.709 c3421.5957 -1953.8057 3418.4375 -1952.7441 3414.5039 -1952.4658 C3411.1816 -1949.8691 3407.1855 -1948.3359 3403.0908 -1950.627 c3398.6504 -1953.1113 3398.2734 -1959.2324 3398.3613 -1963.6953 c3398.6143 -1976.5049 3402.8867 -1987.5986 3407.1055 -1999.5371 cf0 D3755.9023 -1268.623 m3751.8281 -1266.0557 3747.6445 -1263.6592 3743.4697 -1261.2607 c3739.3721 -1258.9072 3736.5889 -1255.6621 3733.665 -1251.9922 c3731.0938 -1248.7656 3728.5635 -1245 3726.2715 -1242 C3726.293 -1242 L3730.0557 -1242 3733.625 -1240.2207 3737.3926 -1239.7773 c3742.4785 -1239.1797 3747.8086 -1239.6191 3752.9229 -1239.6191 c3762.0605 -1239.6191 3772.0352 -1239.3115 3780.5791 -1243.0615 c3788.8594 -1246.6963 3797.1221 -1250.3486 3804.4727 -1255.6885 c3808.1807 -1258.3828 3811.8301 -1260.9648 3815.6748 -1263.1631 C3813.3516 -1263.6914 3811.0205 -1264.2949 3808.6631 -1265.0234 c3797.9141 -1268.3447 3787.1748 -1271.8867 3776.7363 -1276.0908 c3776.1924 -1276.3096 3775.6611 -1276.5518 3775.123 -1276.7803 C3768.0869 -1275.5928 3762.2754 -1272.6387 3755.9023 -1268.623 cf3720.498 -1584.0645 m3722.2822 -1577.7852 3724.6328 -1571.6816 3727.8867 -1565.8916 c3733.8633 -1555.2568 3742.0625 -1545.4805 3751.2236 -1537.4453 c3760.5391 -1529.2744 3772.3438 -1524.8145 3783.9111 -1520.8652 c3794.9785 -1517.0859 3805.9727 -1517.0508 3817.1553 -1519.8242 C3817.0029 -1520.4639 3816.7568 -1521.1094 3816.5879 -1521.6787 c3816.001 -1523.6563 3815.1377 -1525.5459 3814.4434 -1527.4863 c3812.3584 -1533.3057 3809.9736 -1540.0273 3806.2744 -1545.0234 c3803.1719 -1549.2129 3800.3291 -1553.5176 3796.7578 -1557.3369 c3792.7734 -1561.5977 3787.5332 -1563.7432 3782.7959 -1566.9854 c3777.4824 -1570.6221 3772.4805 -1574.0205 3766.6777 -1576.8711 c3760.7285 -1579.793 3754.5059 -1581.9727 3748.4316 -1584.6064 c3742.21 -1587.3057 3736.1367 -1590.2861 3729.75 -1592.5928 c3726.2441 -1593.8594 3722.5703 -1594.2832 3718.8662 -1594.4248 C3719.6172 -1591.0068 3720.0879 -1587.54 3720.498 -1584.0645 Cf3480.6904 -2021.3027 m3484.0605 -2024.1953 3490.0059 -2023.9453 3491.0195 -2018.4307 c3492.7705 -2008.9102 3499.041 -2004.123 3506.9814 -1999.1953 c3515.9092 -1993.6553 3524.5977 -1988.6719 3534.4453 -1984.8984 c3544.6211 -1980.999 3554.8887 -1979.082 3565.7861 -1978.9795 c3568.7344 -1978.9512 3573.2793 -1978.4316 3576.4355 -1979.3652 C3576.4102 -1979.5146 3576.3867 -1979.668 3576.3662 -1979.8545 C3576.0918 -1980.7539 3575.7197 -1981.6104 3575.249 -1982.4248 C3574.2256 -1984.4688 3572.2744 -1985.8691 3571 -1987.79 c3568.6768 -1991.2939 3567.6563 -1995.334 3565.5166 -1998.8594 c3564.7998 -2000.041 3563.626 -2000.7568 3562.4824 -2001.4502 c3560.1074 -2002.8916 3558.1523 -2004.5977 3556.1943 -2006.5791 c3552.7109 -2010.1025 3550.0547 -2014.2471 3545.4805 -2016.418 c3540.8896 -2018.5957 3536.6572 -2021.3193 3532.1074 -2023.5107 c3527.2676 -2025.8418 3522.9189 -2028.252 3517.8223 -2030.0303 c3512.8467 -2031.7676 3508.0166 -2033.8398 3502.9629 -2035.3574 c3497.5703 -2036.9766 3492.2842 -2037.8711 3486.6543 -2038.0918 c3482.3184 -2038.2607 3477.6094 -2039.0293 3473.5195 -2037.3516 c3472.9971 -2037.1367 3472.459 -2037.0371 3471.9219 -2037.0166 C3474.8135 -2031.7656 3477.7305 -2026.5234 3480.6904 -2021.3027 Cf3411.9775 -1965.3818 m3412.1826 -1965.3818 3415.9717 -1965.8691 3414.1982 -1965.0488 c3417.6865 -1966.6621 3420.6055 -1969.2061 3423.6504 -1971.4727 c3432.2783 -1977.8936 3436.582 -1987.5664 3439.9805 -1997.2988 c3441.6035 -2001.9492 3444.0352 -2006.1064 3446.166 -2010.5156 c3448.5654 -2015.4805 3450.1855 -2020.9287 3451.5518 -2026.2539 c3452.9355 -2031.6475 3453.9629 -2037.2588 3454.2441 -2042.8232 C3453.8613 -2043.5654 3453.4824 -2044.3096 3453.1084 -2045.0576 C3449.1611 -2044.707 3447.4844 -2041.7666 3444.8613 -2038.7158 c3441.8936 -2035.2646 3438.3594 -2032.4551 3435.3174 -2029.0732 c3429.3232 -2022.4082 3425.7246 -2012.709 3422.6318 -2004.3945 c3419.3457 -1995.5615 3415.8652 -1986.6348 3413.1816 -1977.6025 c3412.0684 -1973.8584 3411.5908 -1970.1846 3411.4834 -1966.2969 c3411.4746 -1965.9795 3411.458 -1965.6631 3411.4443 -1965.3457 C3411.6211 -1965.3604 3411.7969 -1965.3809 3411.9775 -1965.3818 cf*U*u1 D3443.0508 -377.7046 m3439.0586 -385.7373 3436.2461 -394.6606 3437.6123 -403.438 c3438.5811 -409.666 3440.1523 -415.7163 3442.0537 -421.7207 c3443.8799 -427.4878 3444.9248 -433.6533 3449.0918 -438.3301 c3455.9277 -446.0024 3465.6758 -451.8101 3476.2109 -450.9497 c3487.3262 -450.042 3493.6914 -441.0786 3498.3408 -431.9072 c3500.8809 -426.8975 3501.0898 -420.7549 3501.207 -415.2598 c3501.3467 -408.6924 3501.2227 -402.1099 3501.2227 -395.541 c3501.2227 -384.0225 3500.8594 -372.4385 3496.7695 -361.5278 c3495.8848 -359.1675 3494.7969 -356.875 3493.6279 -354.6182 C3497.9414 -357.1777 3502.6875 -359.1357 3507.3682 -361.3945 c3518.7158 -366.8711 3530.3936 -370.6396 3542.8555 -372.6196 c3555.418 -374.6152 3567.9844 -375.3535 3580.5801 -373.3818 c3592.3125 -371.5454 3603.5615 -365.6313 3613.9873 -360.1328 c3623.0205 -355.3691 3629.1963 -348.8257 3627.4072 -338.0171 c3625.835 -328.5225 3615.1709 -322.2998 3607.6221 -318.0088 c3602.7705 -315.251 3597.8887 -312.8813 3592.6494 -310.9341 c3586.7832 -308.7529 3581.5313 -305.4395 3575.5273 -303.5415 c3572.168 -302.48 3568.7969 -301.6348 3565.4092 -300.9644 C3585.6924 -285.9092 3602.3584 -265.1895 3609.2188 -240.6382 c3613.418 -225.6128 3612.9229 -209.0527 3610.3848 -193.8213 c3609.1689 -186.5313 3607.2383 -179.1802 3604.334 -172.3809 c3601.8457 -166.5557 3599.9912 -160.4731 3592.5703 -160.0093 c3585.7676 -159.584 3578.3076 -161.6558 3571.5684 -162.6187 c3563.9395 -163.7085 3556.5469 -165.7505 3549.2598 -168.2393 c3536.2803 -172.6724 3522.2197 -178.3799 3513.541 -189.4106 c3510.0186 -193.8872 3507.1016 -198.7773 3503.8994 -203.4785 c3500.5439 -208.4067 3496.8203 -212.7627 3494.0215 -218.0913 c3487.7695 -229.9971 3485.0166 -243.2637 3481.7832 -256.1968 c3478.3535 -269.9165 3476.4453 -283.8081 3477.0117 -297.9717 c3477.375 -307.0806 3477.3789 -316.1357 3477.3311 -325.2061 C3476.8027 -324.958 3476.2031 -324.7676 3475.5156 -324.6611 c3473.2139 -324.3052 3471.8105 -322.0488 3469.8857 -320.8325 c3472.0254 -322.1846 3468.6699 -319.0459 3468.4785 -318.8086 c3467.0996 -317.0981 3465.4141 -315.6587 3463.7119 -314.2861 c3460.7012 -311.8584 3458.6074 -308.9102 3456.4707 -305.7163 c3454.3594 -302.5601 3451.6855 -299.835 3449.4922 -296.7441 c3445.0605 -290.5005 3440.4668 -285.1187 3437.0654 -278.1299 c3433.7705 -271.3618 3431.6641 -264.0088 3429.9131 -256.7119 c3426.1445 -241.0039 3425.0449 -224.1553 3425.5176 -208.0366 c3425.7422 -200.3853 3429.9229 -195.5317 3436.873 -192.6465 c3438.6582 -191.9053 3440.5527 -191.188 3442.4863 -190.9565 c3443.5371 -190.8306 3444.5947 -190.7852 3445.6504 -190.7412 c3449.6592 -190.5742 3446.1563 -191.6924 3444.5908 -187.1084 c3447.2842 -194.9941 3459.8438 -191.6079 3457.126 -183.6523 c3454.8643 -177.0293 3447.2363 -177.3882 3441.4785 -178.0771 c3433.6309 -179.0161 3426.2051 -182.7349 3420.4063 -188.063 c3413.5469 -194.3662 3412.4717 -203.5068 3412.457 -212.2969 c3412.4395 -223.4131 3412.9922 -234.9277 3414.6836 -245.9263 c3416.5137 -257.8271 3419.332 -269.7871 3424.1133 -280.8594 C3420.5332 -278.4043 3416.8906 -276.0986 3412.8643 -274.1846 c3399.7109 -267.9336 3386.752 -260.3223 3372.7637 -256.084 c3365.5977 -253.9121 3358.7705 -252.8262 3351.4414 -254.814 c3345.8789 -256.3228 3339.1064 -260.4736 3336.583 -265.8403 c3333.0371 -273.3799 3344.2422 -279.9839 3347.8076 -272.4019 c3349.9014 -267.9502 3356.5645 -266.4854 3360.9805 -266.605 c3366.7217 -266.7598 3373.5938 -269.8154 3378.7871 -272.0869 c3384.4883 -274.5801 3389.9717 -277.5649 3395.5215 -280.3701 c3401.5791 -283.4326 3407.8945 -285.9019 3413.7363 -289.3828 c3418.5576 -292.2559 3423.2871 -295.7344 3427.3164 -299.6367 c3431.7168 -303.8989 3436.9785 -306.936 3441.1875 -311.5361 c3447.6914 -318.6426 3452.7617 -326.6621 3460.9609 -331.667 C3437.9355 -325.2974 3414.1543 -321.1582 3390.333 -321.0791 c3375.9248 -321.0313 3362.9072 -322.542 3350.1387 -329.6157 c3338.5107 -336.0586 3328.168 -345.7275 3320.0088 -356.1177 c3315.5342 -361.8159 3311.3301 -367.7207 3306.9736 -373.5078 c3302.8262 -379.0166 3298.0771 -384.8989 3295.6455 -391.4194 c3293.377 -397.5024 3292.9297 -403.2241 3296.2705 -408.9419 c3299.1699 -413.9038 3305.1104 -416.4878 3310.3926 -417.9219 c3315.6084 -419.3374 3321.4346 -419.5239 3326.7871 -420.1792 c3334.125 -421.0776 3341.5938 -420.96 3348.9541 -420.4536 c3363.7158 -419.438 3377.3213 -414.7153 3390.6611 -408.5542 c3407.1836 -400.9238 3422.9512 -392.4575 3437.6904 -381.7769 c3439.5303 -380.4434 3441.3086 -379.0854 3443.0508 -377.7046 Cf0 D3568.7598 -315.2646 m3570.9404 -315.9541 3573.1543 -316.3916 3575.3184 -317.1851 c3577.9941 -318.166 3580.042 -320.353 3582.7168 -321.2461 c3587.502 -322.8447 3592.2461 -324.4351 3596.7275 -326.7778 c3602.833 -329.9697 3610.6455 -333.6587 3614.2861 -339.7642 c3617.7607 -345.5918 3606.5996 -349.2817 3603.0957 -351.2363 c3594.1953 -356.2026 3584.1094 -360.0908 3573.9873 -361.2822 c3563.7646 -362.4854 3552.9844 -361.2559 3542.8896 -359.5176 c3532.8906 -357.7959 3522.9717 -354.7856 3513.9297 -350.1694 c3507.5146 -346.894 3498.6289 -344.877 3494.3535 -338.6147 c3493.6484 -337.582 3492.7939 -336.8564 3491.8691 -336.3833 C3492.7266 -335.9683 3493.4004 -335.5737 3494.3262 -335.2031 c3501.4961 -332.335 3508.5078 -328.8984 3515.7412 -326.2314 c3527.0547 -322.0605 3537.9355 -317.5679 3548.4063 -311.8198 C3555.2695 -312.2227 3562.0547 -313.1455 3568.7598 -315.2646 cf3497.0791 -248.561 m3498.7256 -241.9741 3500.4551 -235.4204 3503.1123 -229.1538 c3505.9424 -222.4824 3509.9863 -217.0889 3514.2236 -211.3076 c3517.8389 -206.377 3520.7148 -200.939 3524.6465 -196.2383 c3529.3154 -190.6543 3536.2275 -187.6875 3542.7168 -184.7134 c3556.7051 -178.3027 3571.3438 -175.6782 3586.4443 -173.5215 c3587.8486 -173.3203 3589.2461 -173.0649 3590.6602 -172.9829 C3590.7529 -173.228 3590.9277 -173.6523 3591.1914 -174.3779 c3592.3701 -177.6182 3593.6934 -180.7109 3594.708 -184.0181 c3597.1846 -192.083 3598.6113 -200.3965 3599.1289 -208.8076 c3600.1045 -224.7017 3597.3008 -239.9189 3589.7295 -253.9409 c3582.7236 -266.916 3573.583 -277.8735 3562.2061 -287.2095 c3557.0752 -291.4199 3551.5146 -295.2695 3545.6973 -298.7363 C3542.0215 -298.5723 3538.3223 -298.5107 3534.5986 -298.5098 c3529.3301 -298.5083 3527.375 -303.6396 3528.7285 -307.4556 C3525.4492 -308.8926 3522.1426 -310.2178 3518.8281 -311.4106 c3511.0469 -314.21 3503.6396 -317.6118 3495.9844 -320.6738 c3494.1211 -321.4194 3492.1934 -322.1064 3490.2832 -322.8306 C3490.2813 -313.3735 3490.2148 -303.9243 3489.8828 -294.4434 c3489.3311 -278.6904 3493.2949 -263.7026 3497.0791 -248.561 cf3467.4375 -362.3228 m3468.832 -360.0913 3470.0195 -357.7568 3471.5283 -355.7026 C3473.4023 -354.3608 3475.1816 -352.8784 3476.7891 -351.1328 C3476.9092 -351.3096 3477.0371 -351.4678 3477.1533 -351.6558 c3479.4961 -355.4429 3481.5654 -359.5464 3483.5713 -363.519 c3487.415 -371.1318 3488.0059 -380.2354 3488.1973 -388.5991 c3488.4121 -398.0552 3488.3711 -407.5791 3488.1689 -417.0352 c3488.0137 -424.3125 3484.6582 -435.0415 3476.9287 -437.6938 c3470.4648 -439.9116 3462.1563 -434.2813 3458.4648 -429.3335 c3455.873 -425.8584 3455.334 -420.6187 3454.0508 -416.5645 c3452.5273 -411.752 3451.3359 -406.8516 3450.4434 -401.8843 c3448.7715 -392.5713 3454.8281 -382.4961 3459.4619 -375.0835 c3462.1201 -370.8301 3464.7793 -366.5762 3467.4375 -362.3228 cf3419.166 -378.9697 m3412.6289 -383.3403 3405.5664 -386.5132 3398.5762 -390.0576 c3385.2871 -396.7964 3372.1934 -403.4326 3357.4609 -406.3833 c3343.9141 -409.0957 3330.5195 -407.167 3316.9912 -406.0005 c3314.3682 -405.7744 3306.9551 -404.4121 3306.6709 -400.7769 c3306.1729 -394.4082 3312.7969 -388.019 3315.9063 -383.0586 c3319.7461 -376.9321 3324.7412 -371.1694 3329.125 -365.4097 c3333.5352 -359.6157 3338.5635 -354.6084 3344.0518 -349.8433 c3354.0273 -341.1812 3365.6201 -335.0015 3378.9805 -334.3457 c3394.6094 -333.5781 3410.3682 -334.2847 3425.7734 -337.0864 c3438.2275 -339.3516 3450.6465 -342.2539 3462.8506 -345.7671 C3462.6689 -345.9736 3462.4814 -346.1743 3462.3047 -346.3862 C3459.3613 -348.3926 3456.2041 -350.0835 3453.1934 -352.1904 c3447.3262 -356.2954 3442.9297 -362.146 3437.1104 -366.2471 c3431.1152 -370.4717 3425.2646 -374.8916 3419.166 -378.9697 cf*U*u1 D2843.6797 -234.3906 m2838.667 -231.2822 2832.3779 -231.7329 2826.7383 -231.5132 c2819.8682 -231.2451 2813.1855 -232.2563 2807.5332 -236.3994 c2796.959 -244.1514 2788.416 -257.1538 2782.043 -268.314 c2780.4209 -271.1548 2778.6377 -273.7964 2777.3174 -276.8062 c2776.0781 -279.6318 2775.3711 -282.6992 2774.248 -285.5859 c2773.0508 -288.666 2771.6016 -291.2334 2771.0439 -294.5391 c2770.4141 -298.2705 2770.5117 -302.0132 2770.3926 -305.7783 c2770.1133 -314.6079 2766.6982 -323.8652 2766.1836 -332.9043 C2766.0293 -332.7495 2765.874 -332.5952 2765.7197 -332.4404 c2761.1348 -327.8555 2755.8818 -323.2598 2750.6953 -319.335 c2747.0732 -316.5942 2743.416 -312.5381 2738.8008 -311.7012 c2730.6055 -310.2163 2727.1035 -322.7437 2735.3438 -324.2373 c2737.4893 -324.626 2739.834 -327.3618 2741.5957 -328.6597 c2744.0381 -330.46 2746.2793 -332.3877 2748.4307 -334.5283 c2748.8945 -334.9897 2749.3779 -335.4302 2749.8496 -335.8833 C2745.957 -334.7021 2742.0654 -333.5298 2738.1348 -332.4302 c2731.8945 -330.6841 2726.6133 -326.3149 2720.2627 -325.0249 c2714.3555 -323.8247 2707.8096 -324.1973 2701.8066 -323.9912 c2677.4443 -323.1533 2669.9355 -350.3047 2676.21 -369.5557 c2679.708 -380.2866 2687.1563 -389.895 2698.0225 -393.5879 c2703.4424 -395.4297 2709.5059 -395.5 2715.1396 -396.2471 c2720.874 -397.0078 2727.1211 -396.9204 2732.8184 -396.0146 c2737.8799 -395.2104 2743.2314 -388.7827 2746.6523 -385.3706 c2750.8877 -381.1475 2755.208 -377.2764 2758.7695 -372.4312 c2761.9961 -368.04 2766.7246 -362.6494 2769.6094 -356.96 C2770.6943 -357.1587 2771.8037 -357.2856 2772.9609 -357.3672 c2775.2979 -357.5317 2776.9766 -356.6357 2778.0029 -355.2471 C2780.5781 -354.9077 2783.5537 -353.9419 2785.6543 -353.1475 c2789.8086 -351.5781 2794.3174 -350.6655 2798.5381 -349.2153 c2805.3584 -346.8711 2812.0225 -344.1274 2818.7676 -341.5835 c2825.6514 -338.9873 2832.416 -336.4678 2838.6797 -332.5186 c2848.9688 -326.0327 2857.9854 -318.7881 2862.6104 -307.1206 c2867.9531 -293.6421 2864.2207 -278.085 2861.9717 -264.4019 c2860.0615 -252.7798 2853.9053 -240.731 2843.6797 -234.3906 cf0 D2756.6582 -352.6636 m2755.5498 -354.5522 2754.2119 -356.3135 2752.916 -358.0742 c2750.0879 -361.9155 2747.6826 -366.0254 2744.3896 -369.4912 c2741.498 -372.5361 2738.3262 -375.3428 2735.3301 -378.2871 c2733.792 -379.7979 2732.1973 -381.2661 2730.457 -382.5425 c2728.291 -384.1313 2725.6738 -383.7095 2723.1152 -383.6206 c2718.9033 -383.4751 2714.7295 -383.1582 2710.5459 -382.6943 c2706.4453 -382.2402 2700.999 -381.9619 2697.6533 -379.228 c2691.3105 -374.0435 2687.6357 -365.7744 2686.8604 -357.7344 c2686.2578 -351.4858 2687.9785 -343.8984 2692.7031 -339.5479 c2695.6172 -336.8633 2700.0234 -336.9297 2703.6758 -337.0552 c2708.3418 -337.2158 2713.5342 -336.8955 2718.1084 -337.8247 c2722.832 -338.7847 2726.6553 -343.1387 2731.3555 -344.1758 c2736.4004 -345.2881 2741.2656 -347.0503 2746.3105 -348.1631 c2749.9209 -348.959 2753.6719 -350.3843 2757.2646 -351.686 C2756.96 -352.1733 2756.7246 -352.5508 2756.6582 -352.6636 cf2847.835 -307.5044 m2841.6318 -317.3838 2829.3135 -324.1064 2818.5977 -327.8516 c2805.7979 -332.3247 2793.3975 -337.9214 2780.2227 -341.1582 C2778.0508 -335.2222 2779.9258 -329.1006 2780.998 -323.1118 c2782.2002 -316.396 2783.4395 -309.1885 2783.4512 -302.3589 c2783.4629 -295.7441 2786.334 -290.7397 2788.3965 -284.5991 c2790.5977 -278.0444 2794.6572 -271.666 2798.7832 -266.1475 c2802.7891 -260.79 2806.6797 -255.5776 2811.1816 -250.627 c2816.2412 -245.0635 2821.0244 -244.29 2828.333 -244.5752 c2834.2344 -244.8052 2837.2754 -244.9414 2841.3223 -249.4482 c2845.8086 -254.4453 2847.2783 -259.9097 2848.9922 -266.2651 c2850.6914 -272.5688 2852.1992 -280.3628 2852.1934 -286.8945 c2852.1885 -294.2837 2851.8516 -301.1089 2847.835 -307.5044 cf*U*u1 D2502.9434 -62.8867 m2497.0674 -61.0723 2490.6553 -59.7998 2485.1064 -57.1851 c2478.5303 -54.0859 2471.7568 -52.6938 2464.5332 -52.1855 c2434.7588 -50.0903 2406.1133 -57.6797 2377.4531 -64.5054 c2348.7383 -71.3442 2319.5684 -80.4033 2293.2529 -93.9941 c2281.0645 -100.2891 2269.5303 -108.8438 2260.1133 -118.7778 c2258.75 -120.2153 2257.3701 -121.6333 2255.9785 -123.04 C2259.7539 -114.0708 2265.2344 -105.7822 2267.5205 -96.2476 c2270.0088 -85.8667 2270.8301 -74.8218 2271.873 -64.2158 c2272.9365 -53.397 2273.207 -42.543 2272.9248 -31.6792 c2272.7051 -23.2256 2271.5938 -14.6304 2270.2881 -6.27686 c2269.9229 -3.93945 2269.2471 -1.70605 2268.2559 0.289551 C2250.6719 0.289551 L2251.3789 -1.97656 2253.1563 -3.93945 2256 -4.3877 C2255.9551 -4.41504 2256.1855 -4.61279 2256.5957 -5.34863 c2257.1406 -6.32568 2257.3154 -7.63525 2257.5596 -8.71289 c2258.0781 -11.0005 2257.8359 -13.3481 2258.2695 -15.6401 c2260.1357 -25.5244 2260.1396 -35.6094 2259.9932 -45.6353 c2259.8486 -55.4917 2258.8535 -65.3223 2257.6738 -75.1006 c2256.4717 -85.0752 2255.3926 -95.1108 2250.6406 -104.1113 c2246.498 -111.958 2243.1885 -120.0542 2238.7773 -127.7705 c2236.8086 -131.2158 2235.2109 -134.8247 2233.5586 -138.4277 c2231.5156 -142.8809 2228.707 -146.8765 2226.4531 -151.2207 c2226.4512 -151.2246 2226.4492 -151.2285 2226.4473 -151.2329 C2224.6064 -153.0649 2222.8027 -154.9321 2221.0605 -156.8589 c2219.0889 -159.04 2218.9492 -161.5933 2219.8359 -163.7183 C2219.7637 -163.856 2219.6895 -163.9932 2219.6172 -164.1309 c2217.0176 -169.0879 2213.7256 -173.3335 2210.5928 -177.9614 c2206.2539 -184.3711 2199.9648 -191.1689 2197.8652 -198.8599 C2193.0732 -195.5054 2187.918 -193.1919 2181.8447 -192.0327 c2176.1328 -190.9429 2170.3125 -190.7998 2164.5049 -190.8101 C2163.457 -189.6338 2161.9121 -188.8516 2159.8613 -188.8496 c2147.2461 -188.8359 2132.3926 -184.2891 2120.9473 -191.3877 c2120.2256 -191.835 2119.5146 -192.3032 2118.8125 -192.7852 C2115.3613 -190.7163 2111.4775 -189.2769 2108.3682 -186.7314 c2105.3359 -184.249 2103.3164 -180.6401 2100.6543 -177.7939 c2095.0898 -171.8428 2089.293 -166.5225 2084.7246 -159.6699 c2079.5391 -151.8926 2076.168 -142.958 2071.6221 -134.7617 c2067.0527 -126.5215 2061.5732 -118.9307 2057.3486 -110.4419 c2048.7871 -93.2407 2042.2227 -74.5493 2036.2002 -56.3247 c2033.1113 -46.978 2030.4873 -37.4199 2028.9863 -27.6826 c2027.5703 -18.4932 2027.7793 -8.53906 2027.7891 0.289551 C2014.7949 0.289551 L2014.8184 -3.36133 2014.9844 -20.4219 2016.2139 -29.4043 c2017.6318 -39.7646 2020.4551 -49.8564 2023.6641 -59.791 c2029.915 -79.1387 2037.2168 -98.7202 2046.123 -117.0083 c2050.5322 -126.0625 2056.3926 -134.1055 2061.248 -142.8613 c2063.5586 -147.0269 2065.6172 -151.2632 2067.7334 -155.4604 C2065.9082 -154.2085 2064.0762 -152.9663 2062.2246 -151.7607 c2048.8916 -143.0811 2035.9346 -133.7925 2023.4883 -123.8984 c2018.6895 -120.084 2012.8262 -118.0967 2007.8066 -114.5366 c2001.9902 -110.4116 1994.5791 -108.2739 1987.8984 -105.9395 c1981.5449 -103.7197 1975.25 -101.3008 1968.8076 -99.3467 c1961.1074 -97.0112 1952.916 -95.8994 1945.0654 -94.0977 c1929.668 -90.564 1914.3247 -86.9985 1898.5859 -85.3491 c1883.3994 -83.7573 1866.877 -82.8872 1851.7031 -84.7925 c1844.7852 -85.6606 1837.8525 -87.3877 1831.0591 -88.9438 c1824.6431 -90.4136 1817.8193 -93.645 1812.5435 -97.5581 c1802.0337 -105.3525 1797.2222 -118.085 1796.9131 -130.8628 c1796.5693 -145.0605 1800.1821 -156.9551 1808.4985 -168.4209 c1816.9014 -180.0063 1827.1216 -189.6035 1838.1572 -198.6572 c1850.2275 -208.5596 1864.3569 -216.0845 1877.8081 -223.9365 c1887.5283 -229.6099 1897.1553 -235.7568 1907.1465 -241.0645 C1899.2969 -241.6694 1891.0713 -242.4902 1885.1353 -243.5605 c1870.1841 -246.2568 1855.1641 -248.4775 1840.3379 -251.895 c1827.4067 -254.876 1814.084 -257.9526 1801.624 -262.6265 c1789.9199 -267.0166 1778.126 -273.6279 1771.9985 -284.9473 c1766.0342 -295.9648 1763.124 -312.2661 1769.2461 -323.7222 c1776.4883 -337.2739 1790.209 -343.3232 1803.7842 -348.5962 c1818.3296 -354.2461 1834.2354 -357.1753 1849.457 -360.4824 c1865.0796 -363.877 1880.917 -366.2227 1896.9209 -366.5767 c1909.7734 -366.8613 1922.4883 -364.8794 1935.2861 -364.144 c1941.5479 -363.7842 1947.8496 -362.8486 1954.0332 -361.8218 c1960.7539 -360.7061 1967.4229 -360.6982 1974.1641 -359.9741 c1987.6172 -358.5288 2000.9707 -355.0269 2014.2305 -352.3984 c2016.2217 -352.0039 2018.2959 -351.6436 2020.4082 -351.2715 C2014.7881 -357.2856 2009.5371 -363.6499 2004.2266 -369.9912 c1994.4746 -381.6338 1984.4668 -393.1714 1974.0918 -404.2637 c1969.4746 -409.2002 1964.709 -413.7427 1960.6689 -419.1978 c1958.5781 -422.02 1956.8252 -425.1035 1954.9756 -428.0845 c1952.7617 -431.6528 1950.1064 -434.8403 1948.1094 -438.5361 c1944.9004 -444.4717 1941.1064 -451.2939 1939.2578 -457.8027 c1937.1523 -465.2129 1933.1875 -471.9761 1930.8994 -479.3843 c1926.6201 -493.2427 1925.0762 -506.8325 1925.0693 -521.3394 c1925.0664 -528.5039 1924.1475 -535.7334 1924.0879 -542.9287 c1924.0244 -550.5654 1924.0723 -558.2041 1924.0723 -565.8413 c1924.0723 -572.5601 1925.6885 -579.083 1927.0879 -585.6226 c1928.5361 -592.3872 1932.3145 -598.4023 1936.207 -604.0117 c1939.8252 -609.2246 1944.2529 -612.1816 1950.3223 -613.9604 c1953.4951 -614.8901 1956.3516 -616.8389 1959.5186 -617.8843 c1963.0645 -619.0547 1967.5879 -619.1074 1971.2939 -619.2529 c1985.5479 -619.812 1999.582 -613.3159 2011.209 -605.6641 c2016.7051 -602.0464 2022.6543 -599.2354 2027.7236 -594.9946 c2030.2617 -592.8711 2032.1455 -589.8418 2034.3633 -587.3911 c2037.0068 -584.4688 2039.8779 -581.75 2042.6396 -578.9409 c2047.4717 -574.0264 2051.041 -568.4849 2054.8164 -562.7607 c2059.0195 -556.3887 2063.5508 -550.2173 2066.8164 -543.3027 c2069.7441 -537.1055 2074.0459 -532.4819 2078.0723 -527.0186 c2082.5352 -520.9644 2086.5898 -514.6572 2090.3682 -508.1563 c2093.8945 -502.0903 2097.2197 -495.9287 2100.8965 -489.9497 c2102.6748 -487.0566 2104.4326 -484.1563 2106.1025 -481.1987 c2108.0635 -477.7261 2109.3555 -473.8296 2111.4688 -470.4727 c2114.9961 -464.8696 2116.8145 -458.2549 2119.7871 -452.3579 c2123.1494 -445.689 2125.7207 -439.0239 2128.0039 -431.9063 c2129.3301 -427.7686 2130.7969 -423.9604 2132.8838 -420.1509 c2135.0732 -416.1538 2137.1357 -412.3569 2137.9707 -407.8296 c2139.9121 -397.3042 2143.6621 -387.23 2145.2842 -376.627 c2146.4697 -368.8789 2147.8906 -361.3594 2149.5654 -353.7847 C2149.5039 -357.7192 2149.374 -361.6533 2149.374 -365.5259 c2149.374 -380.666 2149.998 -395.6025 2151.3672 -410.6821 c2152.7344 -425.7397 2158.4287 -440.54 2161.6055 -455.2773 c2164.6807 -469.5396 2170.8535 -483.3467 2175.5254 -497.1475 c2177.6563 -503.4434 2179.9629 -510.0083 2183.2422 -515.8091 c2186.6377 -521.814 2188.917 -527.8901 2191.6865 -534.1885 c2194.1113 -539.7036 2197.459 -544.936 2201.7363 -549.2134 c2203.7871 -551.2637 2206.3496 -552.7959 2208.5117 -554.7354 c2211.168 -557.1182 2213.832 -559.4238 2216.9512 -561.1885 c2229.3262 -568.1929 2244.3789 -569.6748 2258.2949 -568.3271 c2271.2139 -567.0757 2281.4463 -563.6357 2289.2832 -552.7627 c2296.6006 -542.6108 2300.8477 -532.4282 2302.1846 -520.0015 c2303.5879 -506.9634 2305.0723 -494.0693 2304.752 -480.9248 c2304.1104 -454.5854 2294.9434 -429.293 2288.9531 -403.8789 c2287.5664 -397.998 2286.043 -392.1538 2284.3027 -386.3667 c2282.377 -379.9604 2280.5322 -373.6216 2278.6553 -367.2085 c2276.2061 -358.8379 2271.8125 -351.603 2267.4795 -344.2705 C2270.7813 -346.1987 2274.1123 -348.0918 2277.4531 -349.9878 c2283.3906 -353.3579 2289.0127 -357.2139 2295.2354 -360.0508 c2301.8535 -363.0674 2308.666 -365.4097 2315.6445 -367.3633 c2329.5078 -371.2427 2342.1523 -377.7803 2356.4268 -380.2256 c2363.7051 -381.4722 2370.6318 -383.1357 2377.6523 -385.4487 c2385.0088 -387.8726 2393.4688 -387.2725 2401.1133 -388.272 c2408.2393 -389.2036 2415.6152 -390.6064 2422.8223 -390.3013 c2430.2314 -389.9873 2437.5791 -388.1943 2444.5098 -385.6431 c2455.8633 -381.4644 2467.8213 -374.6807 2475.8965 -365.5322 c2484.4258 -355.8706 2488.4521 -341.3613 2485.6514 -328.7319 c2484.3154 -322.708 2481.0703 -317.022 2477.6826 -311.9482 c2474.0371 -306.4888 2470.7217 -300.5664 2466.835 -295.3179 c2463.4639 -290.7656 2459.1709 -287.2075 2454.6963 -283.7915 c2449.7393 -280.0073 2445.209 -275.9302 2440.459 -271.9058 c2429.959 -263.0098 2417.8076 -256.5195 2405.4238 -250.6763 c2399.4746 -247.8701 2393.377 -245.3599 2387.1357 -243.2847 c2379.9844 -240.9063 2372.7676 -240.123 2365.3789 -238.9531 c2360.7285 -238.2168 2356.0625 -237.209 2351.3994 -236.2612 C2362.7793 -232.4238 2374.002 -228.4424 2384.8936 -223.1133 c2391.4746 -219.8936 2397.8779 -216.3164 2404.2344 -212.6782 c2410.877 -208.876 2416.9248 -204.3364 2423.4385 -200.3799 c2429.0957 -196.9438 2435.2637 -194.5557 2440.8682 -190.9805 c2447.6641 -186.645 2453.9111 -181.5005 2460.6318 -177.0493 c2466.0723 -173.4463 2471.7129 -170.5972 2476.4902 -166.0513 c2481.8965 -160.9058 2487.8477 -156.5098 2493.5156 -151.6738 c2504.7207 -142.1123 2514.1738 -131.126 2523.7813 -120.0273 c2528.1758 -114.9512 2531.8535 -109.5898 2535.2402 -103.8457 c2539.0889 -97.3154 2537.334 -91.2007 2533.4814 -85.1782 c2526.0791 -73.6079 2515.8906 -66.8848 2502.9434 -62.8867 cf0 D1879.4736 -209.8506 m1865.9336 -201.9238 1852.2949 -194.1519 1840.5513 -183.6636 c1830.1606 -174.3838 1820.3857 -164.8052 1813.6772 -152.4102 c1810.5503 -146.6328 1810.2939 -140.3306 1809.9648 -133.9146 c1809.6299 -127.373 1810.7793 -121.1431 1813.8271 -115.3145 c1818.9199 -105.5767 1830.9092 -101.9497 1840.9473 -100.2061 c1847.6924 -99.0352 1853.8584 -97.2656 1860.7886 -97.1743 c1867.9463 -97.0801 1875.1699 -96.9761 1882.3218 -97.2778 c1895.4844 -97.834 1908.4028 -99.3926 1921.3057 -102.0576 c1934.8203 -104.8491 1948.1689 -108.3809 1961.7422 -110.8984 c1967.4102 -111.9502 1972.9834 -114.3887 1978.377 -116.3623 c1984.1309 -118.4678 1989.9268 -120.4102 1995.6289 -122.6626 c2001.0986 -124.8232 2005.1846 -129.2456 2010.7578 -131.2578 c2016.1768 -133.2144 2021.0361 -138.4971 2025.5908 -141.9077 c2036.7705 -150.2778 2049.1201 -157.3867 2059.9668 -166.1289 c2064.5703 -169.8394 2069.916 -172.7607 2074.834 -176.0396 c2077.0215 -177.498 2078.7998 -179.3853 2080.9404 -180.8994 c2082.2393 -181.8188 2083.46 -182.4941 2084.9395 -183.0962 c2085.4111 -183.2886 2085.8838 -183.481 2086.3555 -183.6729 C2088.5137 -183.8359 2088.6611 -183.9497 2086.7969 -184.0151 C2087.7939 -184.7441 2088.7832 -185.1138 2089.7256 -185.2119 C2090.6348 -186.1387 2091.54 -187.0698 2092.4268 -188.0181 c2095.2051 -190.9888 2097.2461 -194.3442 2100.4355 -196.9556 c2102.9492 -199.0146 2105.8223 -200.4609 2108.6631 -201.9727 C2108.0977 -202.6548 2107.5488 -203.3491 2107.0273 -204.064 c2102.6748 -210.0327 2100.6924 -217.1606 2097.8496 -223.8965 c2092.2852 -237.0801 2089.9219 -249.8467 2092.5605 -263.6123 C2078.9951 -263.5806 2064.8438 -263.1108 2051.0117 -262.3643 c2035.6641 -261.5356 2020.7334 -257.0737 2005.5732 -255.1626 c1990.0332 -253.2036 1974.8467 -251.4966 1959.8066 -246.9302 c1946.041 -242.751 1932.1357 -238.8701 1919.1211 -232.6367 c1905.4678 -226.0972 1892.5352 -217.4971 1879.4736 -209.8506 cf2020.0977 -337.9102 m2011.917 -339.77 2003.6475 -341.2266 1995.4297 -342.9092 c1987.7637 -344.479 1980.0527 -346.3418 1972.2607 -347.1787 c1964.3906 -348.0244 1956.6377 -348.2798 1948.7822 -349.584 c1941.1152 -350.8574 1933.4902 -351.0034 1925.7686 -351.52 c1917.3945 -352.0801 1909.2578 -353.4814 1900.8218 -353.5947 c1884.6689 -353.8125 1868.6504 -351.3486 1852.9097 -347.9468 c1837.6772 -344.6553 1821.7964 -341.6772 1807.2334 -336.0605 c1794.5137 -331.1553 1778.4028 -324.0088 1778.9595 -307.9688 c1779.1724 -301.8301 1781.041 -295.4907 1783.9487 -290.1196 c1786.9521 -284.5708 1792.916 -281.0186 1798.3228 -278.1616 c1809.8066 -272.0938 1822.9805 -269.7905 1835.4165 -266.5322 c1850.29 -262.6353 1865.6958 -259.0713 1880.9775 -257.0981 c1889.3447 -256.0181 1897.8262 -254.2925 1906.2148 -253.3496 c1914.3677 -252.4336 1922 -252.6924 1931 -252.6924 c1931.8633 -252.6924 1932.627 -252.5337 1933.3037 -252.2637 C1941.4482 -255.0498 1949.7305 -257.4536 1957.9648 -259.9536 c1972.8975 -264.4873 1988.2783 -266.0874 2003.7207 -267.9341 c2011.0547 -268.811 2018.2676 -270.8193 2025.5977 -271.9116 c2033.4658 -273.084 2041.376 -274.4917 2049.2959 -275.2373 c2056.0127 -275.8701 2062.7715 -275.604 2069.4932 -276.1631 c2077.0781 -276.7935 2084.5869 -277 2092.1963 -277 C2094 -277 L2094.9727 -277 2095.8242 -276.7993 2096.5605 -276.4521 C2099.8125 -283.8408 2104.6426 -291.1802 2110.1826 -296.9741 C2097.7432 -302.6919 2085.1963 -308.1963 2073.1553 -314.7319 c2066.5762 -318.3032 2060.1836 -322.2334 2053.6543 -325.8979 c2050.5996 -327.6123 2047.5449 -329.3257 2044.5537 -331.1338 C2042.416 -330.2212 2039.8359 -330.3398 2037.6289 -332.3149 c2033.2383 -336.2451 2025.627 -336.6528 2020.0977 -337.9102 cf2138.4072 -320.9604 m2138.1426 -327.3833 2137.3887 -333.1128 2138.0918 -339.5942 c2138.916 -347.1919 2135.4502 -354.5205 2134.3799 -362.0078 c2133.3369 -369.3086 2132.6025 -376.7524 2130.5742 -383.8501 c2129.4863 -387.6567 2128.3984 -391.4629 2127.3105 -395.2695 c2126.1318 -399.3965 2125.7949 -403.5371 2124.7031 -407.6289 c2123.8945 -410.6606 2121.5957 -413.6782 2120.1123 -416.4375 c2118.623 -419.2085 2117.582 -422.186 2116.5547 -425.1504 c2114.1074 -432.2109 2112.166 -439.2051 2108.5625 -445.7969 c2105.3682 -451.6387 2103.5293 -458.1064 2100.2441 -463.9111 c2096.6035 -470.3428 2093.5703 -477.0474 2089.6709 -483.3882 c2082.0391 -495.8013 2075.2871 -508.542 2066.8477 -520.4575 c2062.8926 -526.041 2058.6094 -530.4678 2055.5918 -536.7412 c2052.2754 -543.6348 2047.8164 -549.832 2043.5918 -556.1997 c2039.7383 -562.0073 2036.0508 -567.1484 2031.1191 -572.1021 c2026.208 -577.0347 2021.9043 -583.7212 2016.1191 -587.5532 c2010.5537 -591.2397 2004.5977 -594.6743 1998.8359 -598.0562 c1992.3545 -601.8594 1985.4111 -604.4971 1978.0205 -605.8491 c1971.5518 -607.0327 1964.2441 -606.3247 1958.4355 -603.3066 c1955.7764 -601.9253 1952.8672 -601.4526 1950.2295 -600.1021 c1947.2725 -598.5874 1945.5234 -594.6963 1943.8457 -591.9858 c1942.1973 -589.3213 1940.8555 -586.6523 1939.9961 -583.6431 c1939.1416 -580.6528 1939.21 -577.5825 1938.2432 -574.6406 c1935.9287 -567.5972 1937.0723 -559.2466 1937.0723 -551.9043 c1937.0723 -537.1182 1937.3867 -522.2158 1938.4521 -507.4741 c1938.6904 -504.1797 1938.917 -500.7393 1939.4238 -497.48 c1939.9531 -494.0771 1941.4346 -490.981 1942.1523 -487.6489 c1943.7813 -480.084 1947.2217 -473.5005 1950.041 -466.3857 c1952.6855 -459.7095 1955.2441 -453.1436 1958.4941 -446.7075 c1961.9111 -439.9395 1966.7021 -433.5552 1970.8857 -427.2109 c1974.6279 -421.5361 1979.9072 -417.0669 1984.5195 -412.1353 c1989.9326 -406.3486 1994.9844 -400.2588 2000.2266 -394.3188 c2010.0605 -383.1782 2019.2354 -371.3506 2029.3984 -360.5103 c2034.1064 -355.4893 2039.1953 -350.834 2044.543 -346.5049 c2050.5996 -341.6025 2058.3672 -338.1689 2065.1338 -334.3604 c2074.3359 -329.1807 2083.3525 -323.8486 2092.8662 -319.2383 c2102.2412 -314.6943 2111.79 -310.5195 2121.2314 -306.1172 C2124.6641 -308.5229 2128.207 -310.6675 2132.2139 -312.2378 c2135.209 -313.4111 2138.2793 -314.0654 2141.207 -315.4399 c2141.3301 -315.498 2141.4541 -315.5542 2141.5781 -315.6113 C2139.8262 -316.6021 2138.5137 -318.3838 2138.4072 -320.9604 cf2146.3555 -303.5518 m2142.8828 -301.9209 2139.2656 -300.978 2135.6699 -299.7021 c2130.3096 -297.7998 2124.7109 -293.0864 2120.6455 -289.1724 c2115.6211 -284.3354 2111.6836 -277.2041 2108.5635 -271.0371 c2101.167 -256.4189 2104.6035 -241.6807 2110.3955 -227.3276 c2114.9707 -215.9932 2120.8428 -200.9985 2135.2861 -200.6079 c2141.208 -200.4478 2147.0664 -201.1514 2152.9502 -201.5645 C2153.9932 -202.9214 2155.6279 -203.8486 2157.8672 -203.8433 c2169.9463 -203.8135 2182.4512 -202.8179 2192.3447 -210.8862 c2197.1797 -214.8286 2201.4795 -219.4175 2204.8975 -224.6367 c2209.0098 -230.916 2210.1855 -236.9106 2210.1855 -244.2817 c2210.1855 -258.8164 2209.3594 -274.3223 2201.1035 -286.7754 c2199.4873 -289.2129 2198.4863 -291.6016 2196.1387 -293.4351 c2193.8027 -295.2593 2191.2754 -297.3604 2189.124 -299.3984 c2184.5361 -303.7437 2177.8643 -305.9741 2171.8232 -307.2725 c2169.1436 -307.8486 2165.9814 -307.5068 2163.2949 -307.0864 c2160.209 -306.6025 2157.2461 -306.5234 2154.1299 -306.2988 c2151.4043 -306.1025 2148.7744 -304.6875 2146.3555 -303.5518 cf2273.7725 -396.8179 m2277.6689 -411.0586 2280.6729 -425.5005 2284.7246 -439.71 c2288.9043 -454.3657 2291.627 -469.3687 2291.8213 -484.625 c2291.9141 -491.8999 2291.4219 -499.1777 2290.7227 -506.4146 c2290.0273 -513.6074 2289.542 -521.1226 2287.8242 -528.1479 c2286.1865 -534.8481 2281.7598 -540.5532 2278.0586 -546.2012 c2274.9463 -550.9512 2269.958 -553.3853 2264.5791 -554.5327 c2257.9395 -555.9482 2250.6025 -556.1694 2243.8623 -555.6147 c2236.6514 -555.022 2230.1211 -552.9727 2223.5117 -549.9634 c2219.9805 -548.3555 2217.3066 -545.0366 2214.3027 -542.6626 c2210.7578 -539.8608 2208.0938 -537.0625 2205.6777 -533.1953 c2203.2266 -529.2725 2201.8252 -524.7456 2200.1797 -520.4546 c2198.4512 -515.9458 2196.0127 -511.9805 2193.6455 -507.7939 c2191.1729 -503.4209 2190.3242 -498.3906 2188.2021 -493.8447 c2185.9395 -488.9976 2184.4365 -483.5645 2182.6777 -478.5107 c2179.249 -468.6606 2175.5449 -458.7251 2173.4414 -448.4985 c2171.335 -438.2598 2168.1553 -428.2666 2165.8574 -418.0688 c2163.5039 -407.6172 2163.0215 -396.7227 2162.5625 -386.0425 c2162.0742 -374.6646 2162.374 -363.2295 2162.374 -351.8433 c2162.374 -341.2563 2161.458 -330.7422 2161.3896 -320.1475 C2164.1348 -320.3379 2166.8711 -320.4424 2169.4873 -320.479 c2175.9414 -320.5698 2182.459 -317.9893 2188.2207 -315.335 c2193.5947 -312.8584 2198.5039 -308.8291 2202.9385 -304.9565 c2205.5449 -302.6807 2207.6797 -300.1846 2209.6074 -297.5195 C2213.4746 -300.2363 2216.582 -304.0811 2220.3828 -306.9297 c2223.3203 -309.1309 2226.3838 -311.1631 2229.3545 -313.3179 c2232.3486 -315.4893 2233.9053 -319.1924 2235.9463 -322.2241 c2239.498 -327.5015 2244.8994 -330.6191 2248.2021 -336.1558 c2251.8857 -342.332 2255.1104 -348.7305 2258.8535 -354.896 c2262.5791 -361.0347 2265.2383 -367.2202 2267.0986 -374.1558 c2269.1387 -381.7598 2271.6885 -389.1992 2273.7725 -396.8179 cf2521.6523 -101.292 m2518.751 -106.7769 2514.1328 -111.2842 2510.1641 -115.9854 c2505.9824 -120.9414 2501.7295 -125.7905 2497.1992 -130.4351 c2488.2461 -139.6157 2477.8496 -146.9434 2468.5215 -155.6636 c2464.0713 -159.8242 2459.1797 -162.564 2454.0703 -165.8242 c2448.3271 -169.4893 2442.9824 -173.7622 2437.4063 -177.6704 c2432.2627 -181.2754 2426.9316 -183.9258 2421.3906 -186.8149 c2415.8535 -189.7021 2411.0762 -193.3979 2405.8086 -196.7153 c2382.5039 -211.3926 2357.3125 -221.6318 2330.9814 -229.4355 c2324.6875 -231.3013 2318.6055 -233.895 2312.4844 -236.2441 c2306.3857 -238.584 2299.9014 -239.748 2293.5986 -241.3975 c2280.7715 -244.7549 2267.9453 -248.417 2254.5674 -248.6646 c2246.1943 -248.8193 2246.1797 -261.8198 2254.5674 -261.6646 c2269.7266 -261.3843 2284.3516 -257.2583 2298.8887 -253.4531 c2305.8887 -251.6211 2312.7246 -250.0303 2319.4902 -247.4111 c2320.1338 -247.1621 2320.7813 -246.9263 2321.4258 -246.6816 C2321.6133 -246.6968 2321.8027 -246.7109 2322 -246.7109 c2329 -246.7109 2335.9463 -246.5786 2342.8545 -247.7778 c2351.0078 -249.1934 2359.1094 -251.3008 2367.3379 -252.2852 c2382.5254 -254.1011 2396.3945 -260.3838 2409.8574 -267.3452 c2415.915 -270.4771 2421.7549 -274.0435 2427.2949 -278.0171 c2432.9541 -282.0767 2437.7832 -287.1421 2443.3105 -291.376 c2447.9375 -294.9185 2452.9746 -298.3286 2456.4844 -303.0684 c2460.3564 -308.2969 2463.6563 -314.3184 2467.293 -319.7651 c2470.749 -324.9424 2473.5918 -330.7061 2473.4922 -337.0356 c2473.3848 -343.8003 2471.2373 -350.0254 2467.3799 -355.5142 c2464.3311 -359.854 2459.6172 -363.0654 2455.1563 -365.77 c2449.0957 -369.4434 2442.9941 -372.6167 2436.2197 -374.7617 c2421.4395 -379.4414 2406.7236 -375.4829 2391.6904 -374.3433 c2388.1387 -374.0737 2384.5059 -374.0439 2381.1084 -372.9131 c2377.5479 -371.728 2373.9717 -370.6191 2370.3418 -369.665 c2362.873 -367.7026 2355.1279 -367.147 2347.6719 -365.0576 c2343.3838 -363.8564 2339.3984 -361.8042 2335.334 -360.0283 c2331.1084 -358.1821 2326.8281 -357.1128 2322.4238 -355.8149 c2313.8047 -353.2749 2305.3516 -350.7729 2297.3047 -346.6572 c2289.1152 -342.4688 2281.2461 -337.2402 2273.251 -332.6533 c2264.8301 -327.8223 2256.6289 -322.6309 2249.1953 -316.3643 c2248.6211 -315.8799 2248.0215 -315.5176 2247.4141 -315.2563 C2245.2676 -312.5464 2243.4736 -309.6626 2241.2383 -306.7134 c2237.3486 -301.5801 2230.3145 -298.3745 2225.2695 -294.4321 c2221.9961 -291.8745 2219.624 -288.8252 2216.4023 -286.4639 C2222.3711 -274.4116 2223.1855 -259.1191 2223.1855 -246.1089 c2223.1855 -237.2896 2222.3164 -230.1714 2218.4355 -222.1431 c2215.7646 -216.6167 2211.8398 -211.6289 2207.4824 -207.2007 C2208.9404 -206.1646 2210.0234 -204.543 2210.2256 -202.3281 c2210.5586 -198.6816 2215.6621 -193.7539 2217.6387 -190.8208 c2220.7725 -186.168 2223.7236 -181.3809 2227.2617 -177.0171 c2230.5684 -172.9399 2232.6406 -167.2759 2235.1152 -162.6343 c2235.8027 -161.3447 2236.4932 -160.0659 2237.1875 -158.793 C2245.2227 -150.7544 2253.8672 -143.2065 2262.1543 -135.5205 c2267.0537 -130.9775 2271.0977 -125.6138 2276.0703 -121.1333 c2281.3652 -116.3633 2287.8418 -112.2344 2293.9229 -108.5303 c2306.209 -101.0464 2320.0352 -96.8779 2333.0957 -91.0337 c2339.5752 -88.1338 2346.6953 -87.0391 2353.3623 -84.6387 c2361.1162 -81.8467 2369.207 -79.9092 2377.207 -77.937 c2392.043 -74.2798 2406.7891 -70.9609 2421.7832 -68.0313 c2435.916 -65.27 2450.0977 -64.4932 2464.5332 -65.1855 c2471.0518 -65.498 2476.7861 -67.4839 2482.5703 -70.3677 c2485.2822 -71.7197 2488.6035 -72.0864 2491.5215 -72.855 c2495.1797 -73.8188 2498.7588 -75.1577 2502.3545 -76.334 c2508.1572 -78.2319 2513.0254 -81.0044 2517.208 -85.4536 c2519.4238 -87.8101 2521.3643 -90.3457 2523.1055 -93.0674 c2525.4102 -96.6694 2523.5078 -97.7842 2521.6523 -101.292 cf*U2169.8301 0.289551 m2169.0225 -1.6626 2168.4287 -3.74805 2167.8008 -5.60742 c2166.7031 -8.85889 2164.9238 -12 2163.7441 -15.2607 c2162.2129 -19.4932 2161.1309 -23.8774 2160.2832 -28.2925 c2158.5791 -37.1768 2157.4141 -46.1812 2155.9961 -55.1172 C2154.9004 -51.6528 2154.9844 -47.8804 2153.5107 -44.5264 c2151.5938 -40.1606 2149.4473 -35.9102 2147.3213 -31.6436 c2143.5313 -24.0337 2139.918 -16.271 2135.6094 -8.92578 c2133.9961 -6.17529 2131.6367 -2.60645 2128.8311 0.289551 C2112.875 0.289551 L2111.9141 -2.88525 2113.0625 -6.48828 2117.2598 -7.22021 c2118.9473 -7.51465 2120.5781 -10.4546 2121.667 -11.7627 c2123.7598 -14.2773 2125.3281 -17.0332 2126.8311 -19.9346 c2130.2549 -26.5474 2133.5781 -33.1499 2136.8984 -39.8149 c2138.4951 -43.0195 2140.0889 -46.2217 2141.5791 -49.4775 c2143.2402 -53.1074 2142.9014 -57.5728 2144.5352 -61.3418 c2145.7383 -64.1162 2147.4902 -66.6948 2148.6094 -69.4736 c2150.1406 -73.2769 2151.0527 -77.4824 2152.2617 -81.4126 C2152.252 -81.5488 2152.2363 -81.6841 2152.2266 -81.8208 c2150.8418 -100.7583 2150.3809 -119.6147 2150.3711 -138.603 c2150.3662 -146.3218 2150.0156 -154.3418 2152.5967 -161.6875 c2152.8672 -162.457 2153.2646 -165.8564 2153.3311 -163.5142 c2153.2861 -165.1108 2153.1758 -166.6592 2153.293 -168.2568 c2153.5654 -171.9849 2155.2578 -175.209 2158.5742 -177.0366 c2160.4834 -178.0879 2163.2549 -178.376 2165.1367 -177.0366 c2168.0352 -174.9717 2169.5742 -172.7251 2170.7813 -169.3857 c2171.9824 -166.0625 2173.0967 -162.2002 2173.7725 -158.6782 c2175.3809 -150.2939 2175.668 -141.3301 2175.3721 -132.8208 c2174.7393 -114.5762 2170.7813 -97.3115 2165.4121 -79.9409 C2166.6484 -66.0513 2169.2412 -52.1367 2171.748 -38.4458 c2173.082 -31.1587 2174.3174 -24.1436 2176.8516 -17.1382 c2177.8506 -14.3755 2179.1992 -11.7681 2180.3359 -9.06396 c2180.6865 -8.23096 2180.8965 -7.30957 2181.1563 -6.44629 c2181.4102 -5.60254 2181.6377 -5.11914 2181.7852 -4.85742 C2184.1582 -3.9209 2185.2041 -1.87207 2185.2148 0.289551 C2169.8301 0.289551 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF