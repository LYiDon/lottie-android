%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 3.eps)%%CreationDate: 03.10.18 22:49%%Canvassize: 16383%%BoundingBox: -1 -2160 3841 4%%HiResBoundingBox: -0.372559 -2159.9268 3840.0117 3.29004%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -702.4429 327.3223 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5436 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFCFFD7EFFCACFFD57FFC9FD25FFCFCFCFFD56FFCFCFFD24FF%C9CFCFFD58FFCAFD24FFCFFD51FFCACFCAFD05FFCACFFD22FFCACFC9FD53%FFCFC9FD04FFCFCFFD18FFCFCAFD07FFCFCFCFFD43FFCFCFCFFD10FFC9CF%FFFFCACFFD16FFCACECAFD09FFC9FD39FFCFCFCACFCACFCAFFFFCFC9FFC9%CFFD11FFCFCFFFFFCFFD0FFFCFFFCFFD04FFCFCFFD09FFCFCFFD38FFCFCF%CFFFFFFFCFCFFFCFCAFFFFCFFD13FFCFCECACFFD0EFFCACFCACFC9CFCACF%C9FD0AFFCFCAFD37FFC9CFCFFFCACFCFFFFFCFC9FFFFCFCAFD14FFCFCEC9%FD13FFCFFFCFFFCFFFFFFFCFFD04FFCFCAFD39FFCFFFCFFFCACFCAFFCACE%FFFFC9FFFFFFCFFD12FFCAC9CAFD16FFC9C9CFC9CFC9CFC9CFC9FD3BFFCA%FFCACFCACEC8C9C9FFC9CFC9CFC9CFC9CFCAFD10FFCFFD16FFCFCFFD41FF%CFCFCACFCFFFCFCFC9CFC9CEC9CEC9FD04CFFFCFCECAFD1CFFCFCFFD07FF%CFC9FD3FFFCFCFC9CFCFFFFFFFCACFCAFFFFCEC8FFCACFC9CFCAFFCAFFCA%FD1EFFC9CFCFFFFFFFCFCFC9FD3FFFC9CFFD04FFCFCFC9FD04FFCECACFC9%FFFFFFCFCFC9FD20FFCACFCACFC9CFC9CFCAFD3EFFCFC9CFCACFC9CFC9C9%C9FD04FFC9C9FFCACFC9CFFD04FFC9CFFD1DFFCFCFCFFD45FFFD05CFFFCF%CFCFFD04FFCFC9CFFFCFFFFFC9CFFD04FFC9FD1CFFCACFFD4CFFCACFCFFF%FFFFCACFCFCFCAFFCACFFFFFC9CFFD04FFC9FD1BFFCFCFFD4BFFC9CFFD04%FFCACFCFFFCAFFFFFFCFFFFFCFC9CFCFFFFFCFCFFD19FFCFC9FD4BFFCACF%FFFFFFCFC9FFFFFFCACFFFFFCACFFFFFCAC9CACFC9FFCFCFFD17FFCFCFC9%FD4BFFCFCFFFFFFFCFCAFD04FFCFCFFFFFFFC9FFFFFFC9CFFFFFCACFC9FD%13FFCFC9CFC9CFCAFD4CFFCFCFFFCACFCFFD05FFC9FFFFFFCAC9CFFFFFCF%C9FFFFFFCFCFCFFD08FFCACFFD08FFC9FFCFFD4FFFCAFFC9CFFD06FFCFCF%FFFFFFCFC9FFFFFFCACFCAFD0AFFCACFC9CFCACFCFFD05FFC9CFFD50FFC9%C9C9FD08FFCFCAFFFFFFC9CFCAFFFFCFCACFCAFD09FFCFCFFFFFFFCFCFCF%FFFFFFC9CFFD52FFCFFD09FFCFFD04FFCFFFCFFFFFCFFFFFCFFD08FFCFCA%FD06FFCFC9CFC9CFFD5DFFCFCFFFFFCFCAFFC9FFFFCFC9FFC9FD06FFCFCF%CFFD69FFC9FFFFFFC9FFFFCFCAFFCFCFCACFCFFD04FFCACFCAFD69FFCFCF%FFFFCACFFFFFFFCFCACFFFCFC9CFFD71FFCAFFFFCFFD04FFCACFCFFFCFCF%CFFD70FFCACFFFCFCAFD05FFCAFFFFFFC9CFFD70FFCFCFCFC9FD0AFFCFCA%FD70FFCACFC9FD0BFFCACFCAFD7DFFCFC9FD77FFCFCAFD05FFCACFCAFD76%FFC9CFFD05FFCFC9FD76FFCAC9CAFD05FFCACFCAFD76FFCACFFD06FFC9FD%76FFC9CFCAFD05FFCACFCFFD75FFCFFFCFFD05FFCFCAFD75FFCFCAFFC9FD%05FFCACFCAFD74FFCFFFFFFFCFFD04FFCFCAFD75FFCFFFFFCACFFD04FFCA%CFCFFD74FFCAFFFFFFC9FFFFFFCFCFCFFD72FFCACFC9C9C9CFCAC9C9FFFF%CFC9CFFD73FFC9FFCFFFCFFFCFCFFFFFCAFFCFFD73FFCFC9CFC9CFCACFCA%FFCFCFCACFFFFFCAFD76FFCFCFCACFCFFFC9CFCFCFCAFD70FFCACFC9CFC9%CFCAFFC9FFCACFFD73FFCACFCFFD06FFCFFFFFCFFD24FFCFFD4BFFCFCFC9%CFFD07FFCFC9FFCACFFD1DFFCFFFCFCFCAFFCACFFD4AFFCFCFCAFD09FFCA%FFFFCFCFFD1AFFCACFC9CFCACFCAFD4CFFCFC9CFFD0AFFCACECACFCAFD1A%FFCFCFCFFD50FFCFCAFD0DFFCFFD10FFCFCFC9CFC9CFC9CFCACFC9CFC9CF%CFFD4FFFCACFCFFD1EFFC9CFCFFD09FFCFFD51FFC9CFFD0EFFCFCFCFFD0E%FFCAFD5CFFCFC9FD05FFCACFC9CFC9CFCAFFCFCFC9CFCACFC9CFCACFC9CF%C9CFFD62FFCFCAFFFFFFCFCFCACFCFFFFFFFCACFCACFCFFD05FFCFFFCFFD%64FFCFCFCFFFCACFCACFCAFD77FFCFCFFD68FFCACFC9CFCFFD0FFFCFCFFD%16FFCAFD54FFCFFFCACFFD25FFCFCACFCFCFCAFD05FFCFCACFCAFD3FFFCA%CFCAFD05FFCFCFFFFFC9CFCFFD17FFCACFCACFCFFD05FFCACFCAFD04FFCF%C9CFC9CFC9FFFFCFCFC9FD3BFFCFCFCACFCFCFC9CFFD04FFCFCFFFFFCFCF%CAFD09FFCFFD09FFCFCFC9CFCFFFCACFCAFFCFFFCFCFCFFD10FFC9CFC9CF%C9CFC9CFFD04FFCACFCACFCACFFD28FFCAC9CAFD05FFC9CFCFFFFFFFCACF%CACFC9CFFD04FFCACFC9CFC9CFC9CFC9CFCACFCACFC9CFCAFD07FFCACFC9%FD1AFFCACFCFCFC9CFFD2DFFCFFD08FFCFCFFD04FFCFCFCFFD05FFC9CFCF%FD07FFCFFFCFFFCFFD28FFCAFFCFFD2EFFCFCAFFFFFFCFFD05FFC9FFFFFF%C9FFC9FD05FFCAFD50FFCFFFCFFFCFFD09FFCFFD09FFCAFFFFFFCACEFD06%FFC9FFC9FFC9FD17FFC9CFCACFCAFD09FFCFCFC9CFCFFD28FFCACFC9CFC9%CFC9CFCACFC9CFCAFFCAFFCACFC9CFC9CFCAFD06FFCFCAFFFFFFCAFD07FF%CAFFCACFFD15FFCFC9FFCFFFCFCFC9CFCAFD05FFCACFCFFFCACECAFD24FF%CFCFCACFCFFD09FFCFCFCAFD04CFFD0BFFCAFD0FFFCFFD14FFCFCFFD08FF%CFCFFD04FFCFFD05FFCFCAFFCFFD09FFCFC9CFCACFC9CFC9CFCAFFFFFFCA%CFC9CFC9CFC9CFC9CFC9CFCAFD1BFFCACFCACEC9CFCACFC9CFC9CFC9CFC9%CFC9CFC9CFC9CFFD11FFCFC9FD0AFFCFC9CFCACFCAFD06FFCFCACFCAFFCF%FD05FFCFCAFD07FFCFCFC9CFCACFCFFD07FFCFFD1FFFCFFFCFFFCFFFCFFD%05FFCFFD18FFCFC9FD0DFFCACFFD12FFCFCAFD0BFFCAFD4EFFCFC9FD1EFF%FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Layer 5) Ln0 Au0 O0.001923 0.157961 0.589929 0 1 0.839216 0.498039 Xa0 J 0 j 1 w 10 M []0 d0 XR130.6396 -159.1606 m137.0605 -159.2427 143.1338 -160.3911 149.4033 -161.6606 c157.2534 -163.2505 163.9902 -166.9897 171.0747 -170.5688 c177.7788 -173.9556 184.6719 -176.7246 191.2251 -180.4731 c198.0518 -184.3779 204.5317 -188.8237 210.79 -193.5771 c223.1514 -202.9658 237.021 -210.4097 250.3096 -218.3828 c256.0674 -221.8369 262.689 -224.1494 268.5752 -227.4902 c274.8599 -231.0566 280.8613 -235.105 286.6592 -239.4121 c298.8667 -248.4805 309.9956 -259.1934 321.6719 -268.9399 c327.521 -273.8232 333.4307 -278.6875 338.9736 -283.9194 c344.3452 -288.9893 348.7515 -295.0005 353.1479 -300.9019 c361.374 -311.9443 370.6973 -322.0288 379.124 -332.9224 c383.334 -338.3647 388.4375 -343.2207 392.5381 -348.6885 c397.2021 -354.9072 401.623 -361.3096 406.228 -367.5361 c408.1997 -370.2021 410.5884 -372.4419 412.9932 -374.6821 C413.5171 -375.5522 414.0596 -376.4131 414.6445 -377.2529 c418.9604 -383.4512 428.6519 -378.6709 426.8022 -372.5747 C426.8647 -371.0313 426.3057 -369.4238 424.853 -368.0098 c424.3638 -367.5332 423.8599 -367.0728 423.3623 -366.605 C418.1816 -357.0293 416.4932 -345.8018 413.9141 -335.3555 c412.3325 -328.9468 409.9722 -322.8394 408.625 -316.3706 c407.2852 -309.9404 406.332 -303.4292 405.3501 -296.937 c403.3374 -283.6333 400.1738 -270.5562 398.1563 -257.2769 c396.0518 -243.4219 394.5903 -229.1045 393.4199 -215.1431 c391.0156 -186.4634 393.0762 -157.8569 399.3291 -129.8047 c402.332 -116.332 406.1484 -102.9229 411.4971 -90.1812 c413.7417 -84.835 415.0894 -79.249 417.6729 -73.9741 c420.3213 -68.5669 422.3662 -61.6787 422.6587 -55.666 c423.0664 -47.2827 410.0645 -47.3223 409.6587 -55.666 c409.3989 -61.0044 406.5986 -66.9043 404.4199 -71.7246 c401.9453 -77.2017 400.5171 -83.0205 398.209 -88.5181 c392.6357 -101.7935 389.0469 -115.9678 385.9883 -130.0005 c379.7544 -158.6055 378.1377 -187.9155 380.5825 -217.084 c381.7471 -230.9761 383.4116 -245.1089 385.3643 -258.9189 c387.3296 -272.8169 390.7168 -286.4917 392.8145 -300.3931 c393.7944 -306.8906 394.8081 -313.3804 396.0894 -319.8267 c397.4238 -326.542 399.834 -332.9326 401.5474 -339.5547 C400.4224 -338.21 399.2739 -336.8828 398.082 -335.5864 c388.8154 -325.5083 380.7441 -314.2295 371.8062 -303.8506 c362.3965 -292.9243 355.0386 -280.7144 344.1426 -271.0762 c332.1133 -260.4355 319.4063 -250.5854 307.4775 -239.8286 c297.1426 -230.5093 285.7764 -222.3032 273.6763 -215.4365 c267.6758 -212.0313 261.0493 -209.6646 255.1636 -206.1328 c247.9258 -201.7905 240.6821 -197.4575 233.4521 -193.1021 c220.6284 -185.377 209.1709 -175.7598 196.1572 -168.3159 c189.5962 -164.563 182.6187 -161.8604 175.8994 -158.4663 c168.9858 -154.9736 162.1772 -151.292 154.5957 -149.459 c146.7915 -147.5718 138.6714 -146.2637 130.6396 -146.1606 c122.2524 -146.0532 122.2632 -159.0532 130.6396 -159.1606 cf1610.084 3.29004 m1596.8867 3.29004 L1598.3716 -2.42529 1598.4517 -8.79883 1597.7324 -13.2964 c1596.5566 -20.6455 1593.6758 -27.6982 1591.585 -34.8125 c1589.5864 -41.6123 1587.5679 -48.0127 1584.0254 -54.2026 c1577.4785 -65.6416 1566.8765 -74.1777 1555.228 -79.9927 c1549.3628 -82.9204 1543.1187 -84.5654 1536.7344 -85.8799 c1529.9717 -87.2725 1521.2017 -88.3276 1515.7358 -92.769 c1511.625 -96.1099 1510.9839 -100.3442 1511.7568 -105.3335 c1512.6001 -110.7793 1517.3916 -114.3652 1517.582 -119.874 c1518.061 -133.7217 1514.4526 -147.3442 1507.2236 -159.1831 c1496.2539 -177.1494 1472.9897 -181.731 1453.9727 -175.0137 c1452.188 -174.3833 1450 -173.5176 1449 -172.5264 C1449 -172.4873 L1448 -166.479 1445.5645 -162.0376 1439.8833 -160.0542 c1432.1543 -157.355 1428.6807 -169.1968 1435.7705 -172.3516 C1435.7778 -172.3975 1435.7515 -172.4302 1435.7573 -172.4873 c1435.8662 -173.5425 1435.7754 -174.6299 1435.7402 -175.6865 c1435.6465 -178.4614 1435.9458 -180.9487 1436.4688 -183.6904 c1437.9141 -191.2637 1440.3403 -198.728 1441.3145 -206.3848 c1443.2446 -221.5591 1442.8008 -237.1543 1440.0693 -252.1963 c1438.8936 -258.6685 1437.376 -264.6572 1434.2305 -270.4404 c1430.9468 -276.4771 1427.9531 -282.6909 1424.8364 -288.8047 c1418.5093 -301.2168 1410.0811 -313.1572 1398.1494 -320.6089 c1385.9834 -328.2065 1372.6494 -332.0894 1358.8447 -335.5005 c1344.6201 -339.0156 1330.7954 -342.3594 1316.0698 -342.834 c1301.668 -343.2979 1286.6694 -338.0952 1273.2964 -333.2705 c1267.9287 -331.334 1261.6523 -328.875 1257.4277 -325.0024 c1253.0742 -321.0117 1247.4282 -317.8384 1241.8096 -321.3047 c1240.0664 -322.3799 1238.5825 -323.9629 1237.5522 -325.77 C1235.416 -326.9521 1232.9844 -327.9375 1230.9092 -329.1245 c1226.6328 -331.5708 1222.1978 -333.5732 1217.5005 -335.0557 c1212.7515 -336.5552 1207.7422 -337.041 1202.7954 -337.2891 c1197.7725 -337.541 1192.9971 -337.7749 1188.0166 -338.3281 c1179.2119 -339.3066 1169.0513 -335.8315 1160.8604 -332.895 c1156.8506 -331.4575 1152.7051 -329.6812 1149.1182 -327.376 c1147.6895 -326.458 1146.3359 -325.4702 1144.8491 -324.6436 C1144.0918 -324.2666 1143.3594 -323.8467 1142.6504 -323.3843 C1142.6343 -323.3672 1142.623 -323.3589 1142.6074 -323.3423 C1142.606 -320.2871 1140.4111 -318.1343 1137.8135 -317.3789 C1135.1563 -312.5254 1125.8481 -313.6543 1125.5059 -320.6934 c1125.2119 -326.7427 1121.8276 -333.2451 1119.8037 -338.9023 c1118.7002 -341.9863 1117.7158 -345.1138 1116.6445 -348.209 c1115.4155 -351.7607 1113.3838 -354.0762 1111.0977 -357.0454 c1106.8555 -362.5557 1103.0869 -368.4146 1099.5283 -374.3833 c1095.6406 -380.9033 1090.79 -386.563 1086.0679 -392.4834 c1081.8101 -397.8213 1077.8755 -403.2866 1073.2754 -408.3535 c1068.1206 -414.0308 1062.1597 -417.9512 1056.1255 -422.5342 c1044.916 -431.0479 1032.1104 -438.3174 1019.0728 -443.606 c991.0928 -454.9565 960.1626 -456.2563 930.3706 -456.27 c918.1333 -456.2754 904.4932 -456.958 893.3535 -451.0581 c887.3535 -447.8804 881.8535 -443.8335 875.7236 -440.7637 c872.6758 -439.2378 869.9561 -437.2217 866.7817 -435.8311 c863.0093 -434.1787 859.6357 -432.8701 856.4238 -430.2305 c852.6387 -427.1191 848.5552 -424.0693 845.0039 -420.707 c843.9351 -419.6953 842.7744 -418.7715 841.6719 -417.7974 c841.0586 -417.2495 840.4644 -416.6821 839.8892 -416.0947 c839.4053 -415.6172 839.1572 -415.2827 839.0293 -415.0864 C840.3086 -408.4326 830.6885 -403.4355 827.2739 -410.1973 C825.0063 -405.25 821.7363 -400.4771 816.9805 -398.4141 c809.3726 -395.1143 802.7456 -406.311 810.4189 -409.6396 c814.4297 -411.3789 816.3228 -417.3936 817.5776 -421.25 c819.4536 -427.0137 818.7456 -435.6392 817.9126 -441.5752 c816.9717 -448.2837 814.9287 -455.3413 813.0029 -461.832 c811.333 -467.4619 808.4727 -473.2505 805.312 -478.1875 c799.5313 -487.2168 787.728 -491.2847 778.4893 -495.5996 c770.5996 -499.2847 758.3755 -503.8496 751.356 -496.4253 c747.5874 -492.4395 739.9146 -495.3379 740.2598 -501.0215 c740.5688 -506.1162 741.626 -510.8506 741.626 -515.998 c741.626 -522.0029 741.7158 -528.0117 741.4043 -534.0103 c740.812 -545.4136 737.0132 -556.04 731.7583 -566.0889 c721.082 -586.5039 703.4932 -603.1567 683.4219 -614.1943 c678.4873 -616.9082 673.1226 -618.687 668.0117 -621.0439 c662.0254 -623.8052 656.4336 -626.4004 650.0342 -628.1147 c636.6631 -631.6973 623.5239 -636.2051 610.0649 -639.4336 c597.4883 -642.4502 584.1865 -644.5186 571.2388 -644.2891 c565.0063 -644.1787 558.9878 -643.4946 552.998 -641.7461 c547.1011 -640.0254 541.4683 -637.8223 535.373 -636.8301 c534.3564 -636.6646 533.4121 -636.7134 532.5527 -636.9268 C528.873 -633.9092 521.7051 -635.5098 521.6807 -641.7319 c521.6221 -656.7476 520.0059 -671.5488 513.8179 -685.397 c511.1826 -691.2944 507.5552 -696.7021 503.2319 -701.4824 c501.1021 -703.8374 498.5254 -705.7407 496.4893 -708.1611 c493.9102 -711.2275 491.188 -714.1699 488.4004 -717.0469 c478.6558 -727.1055 467.1987 -734.5269 455.3076 -741.7964 c443.6689 -748.9116 431.4575 -754.9688 418.1235 -758.1162 c411.7461 -759.6216 405.2422 -760.0049 398.7124 -759.6743 c395.8076 -759.5273 392.3516 -758.2681 389.5127 -757.5586 c386.2227 -756.7358 383.1323 -756.8164 379.7515 -756.8164 c373.6885 -756.8164 367.4102 -753.4927 362.0625 -750.873 c359.0347 -749.3901 355.4482 -748.7954 352.2671 -747.6392 c348.5454 -746.2866 345.0098 -744.4517 341.54 -742.5596 c329.0313 -735.7388 318.2261 -726.1992 306.5669 -718.0967 c294.5137 -709.7202 282.1792 -701.8389 271.6343 -691.5459 c264.0215 -684.1143 257.8628 -676.0259 248.6743 -670.2725 c244.6216 -667.7344 240.7695 -670.2783 239.499 -673.7603 C239.4971 -669.9336 236.2852 -665.8276 231.3706 -666.8848 c224.6309 -668.3345 225.8306 -675.3267 222.728 -678.7959 c220.0889 -681.7466 216.4155 -683.812 213.1357 -685.9551 c209.3145 -688.4517 205.6348 -691.1563 201.9326 -693.8247 c198.1719 -696.5361 194.3613 -699.1577 190.3613 -701.5059 c186.5439 -703.7471 181.269 -703.4141 176.9624 -703.5103 c172.6675 -703.6064 169.0742 -703.4287 164.999 -702.0498 c160.9463 -700.6777 157.0811 -699.1226 152.8594 -698.3057 c151.7993 -698.1006 150.8198 -698.1357 149.9326 -698.3491 C147.0581 -693.6992 138.0068 -694.8735 137.8008 -701.8413 c137.5508 -710.2939 133.9292 -718.1729 131.1724 -726.0366 c128.5151 -733.6157 125.2998 -740.9839 120.9282 -747.7407 c118.9409 -750.8125 116.8008 -753.521 114.4565 -756.3423 c111.5869 -759.7959 110.0156 -763.3955 107.9585 -767.3066 c106.2266 -770.5991 103.457 -773.3564 101.2969 -776.3765 c98.8491 -779.7998 95.8018 -782.814 92.6367 -785.5664 c89.8809 -787.9629 86.5854 -789.4561 83.5625 -791.4409 c79.856 -793.874 75.9307 -796.1089 71.8193 -797.7822 c68.2188 -799.248 64.4331 -800.1489 60.6055 -800.7646 c56.5171 -801.4219 52.5635 -803.2432 48.6411 -804.5088 c39.7583 -807.3745 30.6094 -805.2715 21.7119 -803.4971 c14.4414 -802.0469 6.99854 -802.8018 -0.372559 -803.1357 C-0.372559 -816.1563 L7.13135 -815.8813 14.4985 -815.3013 21.9819 -816.7695 c32.1143 -818.7568 42.041 -820.0098 52.0972 -817.0439 c56.1177 -815.8584 59.9619 -814.23 64.0615 -813.2998 c68.4531 -812.3042 72.5972 -811.4082 76.7969 -809.6987 c85.0913 -806.3223 93.6841 -801.416 100.6274 -795.7412 c107.2314 -790.3428 112.2974 -783.4546 117.396 -776.6802 c119.9976 -773.2231 120.978 -768.9282 123.6489 -765.5347 c126.5742 -761.8184 129.8564 -758.478 132.1538 -754.3022 c136.6147 -746.1929 140.5684 -738.2412 143.708 -729.4927 c145.9194 -723.3301 148.2788 -717.2334 149.6475 -710.8931 C153.7603 -711.7163 157.6064 -713.1621 161.543 -714.585 c166.0391 -716.2104 170.4883 -716.5488 175.23 -716.5298 c179.7949 -716.5112 184.3555 -716.2646 188.8701 -715.5576 c194.1763 -714.7266 198.2832 -712.0386 202.7085 -709.104 c210.5464 -703.9053 218.314 -698.4141 225.9624 -692.9385 c229.4575 -690.4365 232.4497 -687.7026 234.9282 -684.1816 c235.6748 -683.1211 236.0015 -681.5962 236.3306 -680.3447 c236.4629 -679.7969 236.6025 -679.25 236.7446 -678.7046 C237.8765 -678.0645 238.6299 -677.1348 239.0605 -676.0747 C239.0283 -678.0898 239.915 -680.1211 242.1128 -681.4971 c247.7393 -685.0205 252.4922 -689.5811 256.7783 -694.6255 c261.4092 -700.0752 266.6445 -705.0444 272.2451 -709.5103 c283.9712 -718.8604 296.7588 -726.7563 308.8447 -735.6147 c320.2266 -743.957 331.0361 -752.5723 344.0884 -758.2524 c350.2524 -760.9346 356.6689 -762.8545 362.8726 -765.4355 c369.5313 -768.2061 375.2666 -769.8164 382.4834 -769.8164 c388.5435 -769.8164 394.3022 -772.4512 400.3843 -772.7593 c407.4751 -773.1182 414.6621 -772.1455 421.5796 -770.6519 c434.8599 -767.7832 447.3901 -761.5234 459.043 -754.7129 c470.8877 -747.7896 482.6885 -740.3281 492.7544 -730.9766 c497.7773 -726.3101 502.4097 -721.2437 506.8203 -716 c508.7686 -713.6836 511.4229 -711.7822 513.4795 -709.5078 c515.9907 -706.7314 518.2178 -703.6616 520.2949 -700.5537 c530.2417 -685.6699 533.6885 -667.5562 534.4834 -649.856 C539.6123 -650.9512 544.521 -652.7168 549.542 -654.2822 c556.0161 -656.2998 562.7676 -656.9199 569.5107 -657.2334 c583.5742 -657.8867 597.9824 -655.3418 611.686 -652.3877 c625.8242 -649.3394 639.4868 -644.2642 653.4897 -640.6504 c660.3931 -638.8691 666.6196 -636.0664 673.0254 -633 c679.1138 -630.0859 685.4165 -627.9312 691.3472 -624.6699 c712.8774 -612.8296 731.293 -594.2354 742.9834 -572.6504 c748.7515 -562 752.5776 -550.6855 754.0151 -538.667 c754.7764 -532.3013 754.626 -525.855 754.626 -519.4575 c754.626 -517.1694 754.6792 -514.8687 754.6528 -512.5737 C762.8633 -514.3066 772.0068 -512.1973 779.9702 -509.0146 c792.5503 -503.9868 806.4497 -497.9863 814.9048 -486.9717 c819.416 -481.0947 822.4912 -473.7471 825.0273 -466.8257 c826.3975 -463.0859 827.0264 -459.1235 828.0146 -455.2769 c829.1758 -450.7593 830.499 -446.2622 830.9199 -441.5952 c831.3672 -436.6436 831.73 -431.313 831.3833 -426.1226 C835.0991 -429.9419 839.9448 -433.2197 843.2871 -436.0698 c845.9253 -438.3193 848.5576 -440.5649 851.3101 -442.6748 c853.9688 -444.7119 857.2065 -445.7993 860.2827 -447.0835 c866.9155 -449.8516 873.3892 -453.9121 879.5947 -457.5576 c885.3062 -460.9126 890.1035 -464.311 896.5439 -466.2617 c903.0059 -468.2188 909.9839 -468.7656 916.6943 -469.0923 c931.104 -469.7935 945.7646 -469.4624 960.1606 -468.6558 c989.2959 -467.0225 1018.1479 -460.3965 1043.6724 -445.9951 c1049.7021 -442.5933 1055.5864 -438.8521 1061.2231 -434.8354 c1067.3271 -430.4858 1073.542 -426.3799 1078.9702 -421.167 c1089.0781 -411.46 1097.4443 -399.4302 1105.9243 -388.3101 c1109.8296 -383.189 1112.7959 -377.4004 1116.3359 -372.0229 c1117.9126 -369.6274 1119.585 -367.2969 1121.2842 -364.9873 c1123.2881 -362.2627 1126.1074 -359.7437 1127.3447 -356.5747 c1129.5894 -350.8247 1131.3638 -344.9121 1133.5186 -339.1294 c1134.1406 -337.4614 1134.7773 -335.7788 1135.3848 -334.083 C1135.9727 -334.5083 1136.585 -334.9121 1137.2124 -335.2954 c1142.7266 -338.6616 1148.1182 -341.7163 1154.1401 -344.1499 c1160.5117 -346.7246 1167.061 -348.6147 1173.8076 -349.9131 c1177.3276 -350.5908 1180.7861 -351.23 1184.3735 -351.4297 c1188.6899 -351.6694 1192.9023 -350.4258 1197.2065 -350.4092 c1213.0688 -350.3481 1226.8174 -346.6753 1240.4775 -338.6016 c1242.6768 -337.3013 1245.356 -336.7539 1247.2573 -334.8525 c1247.1582 -334.9521 1247.4863 -334.4644 1247.8877 -333.8696 C1249.707 -335.3735 1251.1987 -336.9663 1253.3359 -338.1714 c1256.7729 -340.1099 1260.3159 -341.8413 1263.9307 -343.4189 c1277.0303 -349.1362 1291.1094 -352.9761 1305.2422 -354.9541 c1319.8037 -356.9922 1334.6563 -354.6714 1348.9077 -351.4214 c1375.792 -345.2905 1405.0566 -338.207 1422.877 -315.4858 c1431.5859 -304.3823 1437.335 -292.2139 1443.8916 -279.8652 c1447.2188 -273.5986 1449.8726 -267.8687 1451.5073 -260.9199 c1453.3018 -253.2915 1454.3232 -245.4614 1454.9727 -237.6597 c1456.2896 -221.834 1454.8643 -206.1909 1451.3198 -190.7549 c1451.0908 -189.7593 1450.8667 -188.7627 1450.6401 -187.7671 C1466.0767 -193.335 1484.5356 -191.4082 1498.8813 -184.436 c1521.9585 -173.2202 1530.5659 -143.5034 1530.582 -119.874 c1530.5859 -114.2666 1528.4731 -109.9883 1525.584 -105.3672 c1524.9531 -104.3589 1524.6582 -103.4595 1524.4072 -102.375 C1526.6689 -100.605 1532.7544 -100.0957 1535.3438 -99.479 c1548.9121 -96.2476 1561.2227 -92.7412 1572.8608 -84.667 c1583.5981 -77.2178 1592.5264 -66.9863 1598.1714 -55.1899 c1601.0522 -49.1699 1602.7749 -42.8467 1604.6475 -36.4756 c1606.9146 -28.7612 1609.8242 -21.2671 1610.7871 -13.231 c1611.3882 -8.21191 1611.21 -2.39746 1610.084 3.29004 Cf1185.0166 -168.9282 m1186.1279 -167.9087 1185.5425 -167.9863 1185.0166 -168.9282 C1185.0166 -168.9282 Lf857 -275.2813 m870.0664 -275.3838 876.4893 -275.2495 v883.8613 -275.0952 891.1997 -273.9023 898.6089 -273.9224 c906.0254 -273.9429 913.4902 -274.1147 920.874 -274.8535 c928.3105 -275.5977 935.3013 -278.1938 942.3628 -280.4766 c949.1792 -282.6807 956.3237 -283.9126 963.2739 -285.6416 c971.0283 -287.5703 978.8599 -289.2046 986.7007 -290.7378 c1002.4683 -293.8203 1017.8833 -297.1699 1033.915 -298.7451 c1041.4658 -299.4873 1049.3057 -301.0347 1056.8677 -301.2373 c1064.0073 -301.4287 1069.1221 -303.6982 1075.3389 -306.7319 c1080.1914 -309.1006 1085.5259 -307.8667 1087.9346 -302.75 c1088.9551 -300.583 1089.376 -298.2622 1090.0859 -295.9927 c1091.2061 -292.4146 1093.5498 -288.8125 1095.104 -285.374 c1098.0938 -278.7563 1100.9961 -272.1035 1104.1895 -265.5801 c1107.6714 -258.4673 1112.1465 -252.2461 1116.2461 -245.52 c1124.125 -232.5938 1134.3706 -221.7505 1146.1689 -212.2563 c1152.9175 -206.8252 1160.0508 -201.8159 1166.8721 -196.4624 c1168.4399 -195.2319 1170.0142 -194.0098 1171.5962 -192.7979 c1172.4399 -192.1519 1175.5498 -189.0752 1176.2769 -188.9497 c1177.7866 -188.6895 1179.4277 -187.623 1180.791 -186.9063 c1187.0371 -183.6216 1200.5435 -177.4575 1196.3613 -168.5059 c1193.5313 -162.4478 1185.8291 -165.436 1184.6255 -170.7251 C1184.6035 -170.5596 1184.582 -170.394 1184.5605 -170.2285 C1184.6543 -169.6938 1184.832 -169.2588 1185.0166 -168.9282 C1185.0146 -168.9302 1185.0127 -168.9316 1185.0107 -168.9336 C1184.8018 -169.125 1184.6836 -169.2373 1184.6177 -169.3032 C1184.5859 -169.3066 1184.4229 -169.4019 1183.8906 -169.7827 c1182.3174 -170.9087 1180.6665 -171.9277 1179.0181 -172.9375 c1177.4492 -173.8984 1175.8477 -174.8057 1174.2295 -175.6812 c1173.6934 -175.9712 1173.1465 -176.2417 1172.5977 -176.5088 c1171.874 -176.8481 1170.6602 -177.4019 1171.0747 -177.1025 c1158.6167 -186.0918 1146.083 -195.4814 1134.2588 -205.2837 c1110.6289 -224.8735 1096.2446 -251.2646 1083.8789 -278.8125 c1081.7471 -283.562 1079.1045 -288.1938 1077.4443 -293.1396 C1074.7646 -291.73 1072.1279 -290.6831 1069.1211 -289.8862 c1062.0996 -288.0249 1054.5068 -287.8506 1047.3062 -287.061 c1039.0234 -286.1523 1030.7153 -285.5093 1022.4429 -284.4995 c1014.5874 -283.5405 1007.0913 -281.3447 999.3486 -279.9312 c991.4644 -278.4917 983.6016 -276.9453 975.7744 -275.2202 c968.5264 -273.6221 961.3872 -271.4834 954.0952 -270.1519 c946.8271 -268.8242 939.9404 -265.7837 932.8296 -263.8447 c920.0449 -260.3584 906.0601 -260.917 892.9346 -260.915 c886.9897 -260.9141 880.9102 -262.1572 874.9668 -262.2813 c869.0527 -262.4048 863 -262.2813 857 -262.2813 c849 -262.2813 849 -275.2813 857 -275.2813 Cf*u1 D2971.6631 -495.2246 m3002.9805 -495.1973 3033.5811 -489.5947 3063.4297 -480.2695 c3090.8789 -471.6938 3119.1143 -465.9727 3146.8887 -458.6147 c3153.3662 -456.8984 3159.9072 -455.4023 3166.3574 -453.5869 c3171.418 -452.1621 3176.3047 -450.1719 3181.2559 -448.3613 C3172.7021 -454.5654 3164.3418 -461.0835 3156.1084 -467.8794 c3144.3652 -477.5713 3132.166 -486.7319 3120.2988 -496.2822 c3114.6172 -500.855 3108.8477 -505.2788 3102.9102 -509.5127 c3097.0029 -513.7256 3091.5703 -518.5229 3085.4141 -522.394 c3082.5586 -524.1899 3079.5449 -525.4731 3076.7773 -527.4165 c3073.9434 -529.4067 3071.084 -531.3608 3068.2461 -533.3457 c3062.1484 -537.6113 3056.1699 -542.0894 3050.7285 -547.1768 c3039.2764 -557.8843 3028.252 -568.9307 3020.1895 -582.4404 c3016.3457 -588.8809 3012.6729 -595.3926 3008.4043 -601.5684 c3004.1016 -607.7915 2999.4658 -613.7651 2995.3457 -620.1162 c2991.5781 -625.9258 2988.4473 -632.1494 2985.0107 -638.1563 c2981.3691 -644.521 2976.623 -650.1558 2973.0293 -656.4883 c2965.6846 -669.4312 2959.6787 -683.1104 2954.0391 -696.8633 c2951.8633 -702.168 2947.8652 -708.8008 2947.7383 -714.6489 c2947.5996 -721.0928 2952.166 -725.1006 2958.4229 -725.0933 c2971.416 -725.0771 2984.2432 -715.9556 2995.2578 -710.186 c3009.0371 -702.9697 3023.042 -696.1802 3036.7539 -688.8403 c3049.9346 -681.7852 3062.0576 -672.8071 3075.6563 -666.6045 c3082.2529 -663.5957 3088.084 -659.3428 3094.0469 -655.2671 c3100.6396 -650.7598 3107.582 -646.748 3114.1973 -642.2549 c3139.5068 -625.0664 3163.417 -605.8745 3188.6787 -588.6147 c3194.4619 -584.6631 3200.8828 -582.0225 3206.8447 -578.3979 c3212.9795 -574.668 3218.6348 -570.2349 3224.9277 -566.752 c3238.3105 -559.3457 3252.5381 -553.2559 3266.0313 -545.9702 c3279.2354 -538.8398 3291.75 -531.1475 3303.4297 -521.6973 c3314.5547 -512.6968 3324.6377 -502.4482 3333.9629 -491.6143 c3341.6455 -482.6885 3348.4111 -473.0591 3356.4053 -464.3916 c3362.0225 -458.3013 3368.6924 -453.1782 3374.5947 -447.3652 C3373.9209 -448.8584 3373.2676 -450.356 3372.6514 -451.8618 c3366.7832 -466.209 3362.0273 -481.2129 3357.7344 -496.0757 c3355.7539 -502.9307 3353.0459 -509.5601 3350.8232 -516.334 c3348.4883 -523.4507 3348.1699 -531.0825 3345.5234 -538.0693 c3343.1396 -544.3652 3340.5918 -550.5044 3338.7813 -557.0117 c3337.8428 -560.3843 3337.1592 -563.8296 3336.4619 -567.2578 c3335.6035 -571.4854 3333.6992 -575.5796 3332.1426 -579.5977 c3326.4082 -594.396 3319.8125 -608.8452 3313.5508 -623.4233 c3307.5303 -637.4395 3304.1445 -652.2061 3300.8232 -667.0396 c3297.5127 -681.8237 3293.0264 -696.1807 3291.0615 -711.2417 c3289.0029 -727.019 3286.6387 -742.7773 3283.9355 -758.4658 c3282.7842 -765.1514 3281.6846 -771.7627 3280.7344 -778.4814 c3279.6748 -785.98 3279.0283 -793.8232 3277.377 -801.2056 c3275.7275 -808.5752 3273.1816 -815.749 3271.3047 -823.064 c3269.2295 -831.1519 3268.7021 -839.2881 3268.0869 -847.5796 c3266.8965 -863.6191 3265.7559 -879.8018 3262.5977 -895.5923 c3259.9238 -908.9604 3255.8379 -922.5562 3260.5293 -935.854 c3262.3955 -941.1436 3262.3525 -948.8823 3268.2559 -951.2783 c3274.2656 -953.7173 3281.4844 -952.8765 3287.8301 -952.8765 c3290.7666 -952.8765 3293.5371 -952.7759 3296.3096 -951.7075 c3298.7979 -950.749 3300.8047 -948.9321 3303.2402 -947.9541 c3309.7744 -945.3281 3315.3262 -941.0796 3320.5225 -936.3989 c3330.7715 -927.167 3340.791 -916.8423 3349.4873 -906.1406 c3354.2002 -900.3418 3358.4531 -894.1377 3362.6387 -887.9541 c3367.1445 -881.2983 3370.4639 -874.2256 3374.2959 -867.21 c3377.4404 -861.4536 3381.2861 -856.1025 3384.5449 -850.4106 c3387.8916 -844.5664 3389.832 -837.8105 3392.4189 -831.5938 c3397.8135 -818.6284 3402.6504 -805.292 3409.5186 -793.0088 c3416.2402 -780.9863 3423.4082 -769.1641 3428.6563 -756.3926 c3431.1992 -750.2056 3432.9971 -743.7715 3435.6318 -737.6089 c3438.2441 -731.499 3441.3076 -725.5264 3443.291 -719.1719 c3445.2314 -712.9512 3445.8301 -706.3159 3446.8906 -699.9111 c3448.04 -692.9629 3450.208 -686.2437 3451.9844 -679.4404 c3455.5039 -665.9609 3458.3184 -652.3115 3460.3994 -638.5371 c3461.4258 -631.7441 3462.6309 -624.9604 3463.6523 -618.1582 C3464.0986 -619.9531 3464.5293 -621.7524 3464.9102 -623.5654 c3465.8027 -627.8184 3465.6152 -632.1255 3465.8633 -636.4385 c3466.6934 -650.8428 3471.2734 -665.0693 3474.3467 -679.104 c3475.9326 -686.3457 3476.0723 -693.8877 3477.46 -701.209 c3478.96 -709.124 3480.7891 -716.9829 3482.3555 -724.8867 c3485.332 -739.8955 3487.877 -755.4785 3494.6387 -769.3296 c3497.8428 -775.894 3501.8584 -781.9424 3504.459 -788.79 c3507.1807 -795.9561 3510.5273 -802.8848 3513.6025 -809.9019 c3516.6494 -816.8506 3518.8096 -824.332 3521.5723 -831.4146 c3524.5381 -839.0215 3527.5273 -846.6167 3530.2402 -854.3193 c3531.3516 -857.4766 3532.2588 -860.6187 3532.9893 -863.8828 c3533.3027 -865.2852 3533.7813 -866.564 3534.3535 -867.8809 c3533.1133 -865.0229 3534.2686 -868.8608 3534.3721 -869.416 c3535.3174 -874.4922 3537.7607 -879.3926 3542.6074 -881.7109 c3551.8242 -886.1201 3561.1494 -877.5864 3567.0811 -871.4341 c3569.8242 -868.5894 3572.0986 -865.3066 3574.7822 -862.4551 c3579.8652 -857.0542 3581.9229 -850.2603 3584.6045 -843.5469 c3587.1504 -837.1719 3590.7441 -831.3374 3593.1484 -824.8506 c3595.9082 -817.3979 3597.6377 -809.8789 3598.7881 -802.0347 c3599.8936 -794.4922 3599.9385 -787.0073 3600.5381 -779.4365 c3601.0459 -773.022 3602.2129 -766.7471 3602.7285 -760.3682 C3603.2686 -760.9688 3603.8203 -761.5654 3604.3857 -762.1592 c3606.5186 -764.3994 3608.7549 -766.5391 3610.8965 -768.7705 c3613.1387 -771.106 3613.4531 -773.144 3614.9521 -776.6729 c3616.0781 -779.3228 3618.0059 -781.5884 3619.6133 -783.9521 c3620.7949 -785.6885 3623.957 -787.5435 3624.624 -788.5674 c3626.25 -791.062 3627.4932 -793.6606 3628.4707 -796.4653 c3629.8193 -800.3374 3632.4414 -803.9897 3634.2578 -807.6807 c3637.4746 -814.2207 3640.1221 -821.02 3642.6934 -827.833 c3645.4727 -835.1997 3648.6348 -842.6211 3650.8555 -850.1709 c3652.9756 -857.3799 3655.6895 -864.3828 3657.4961 -871.6875 c3659.3018 -878.9927 3659.5156 -886.5264 3660.4824 -893.9565 c3661.4512 -901.4136 3663.3867 -908.6533 3665.1523 -915.9482 c3667.124 -924.0996 3668.3799 -932.4775 3669.4658 -940.7881 c3671.4971 -956.3252 3672.9854 -972.2168 3673.3662 -987.8857 c3673.5518 -995.5225 3675.8672 -1002.9365 3676.0527 -1010.5845 c3676.2314 -1017.9229 3675.6387 -1024.9697 3677.6504 -1032.1211 c3679.5664 -1038.9312 3679.29 -1046.3501 3679.6504 -1053.3896 c3680.0791 -1061.7705 3680.3477 -1070.1572 3680.3613 -1078.5493 c3680.3867 -1094.1455 3678.1055 -1109.2656 3676.6523 -1124.7324 c3675.9453 -1132.2578 3676.2109 -1139.8135 3675.5596 -1147.3398 c3674.8291 -1155.791 3673.2451 -1164.1641 3672.1807 -1172.5771 c3671.1826 -1180.4658 3670.8145 -1188.1074 3669.0625 -1195.9346 c3667.2246 -1204.1504 3665.958 -1212.1074 3664.9795 -1220.4756 c3663.1484 -1236.1318 3660.7207 -1251.6465 3658.5361 -1267.2539 c3657.5078 -1274.6055 3655.7266 -1281.998 3655.0732 -1289.3809 c3654.7959 -1292.5205 3654.8789 -1295.7129 3654.4473 -1298.8369 c3653.876 -1302.9805 3652.2559 -1307.1563 3651.2383 -1311.2246 c3647.4502 -1326.3809 3642.3818 -1340.7227 3637.2617 -1355.4609 c3632.1816 -1370.0801 3630.1563 -1385.4287 3625.5645 -1400.1748 c3623.5176 -1406.7441 3621.7578 -1413.3564 3619.8496 -1419.9678 c3617.7422 -1427.2666 3614.3613 -1434.2695 3611.7617 -1441.417 c3604.083 -1462.5283 3595.7744 -1483.6709 3585.5625 -1503.6748 c3583.085 -1508.5283 3580.7354 -1513.4473 3578.375 -1518.3584 c3576.1934 -1522.8975 3573.3418 -1527.4893 3572.0117 -1532.3535 c3569.3535 -1542.0781 3564.3848 -1550.8516 3564.0303 -1561.1309 c3563.7959 -1567.918 3572.2617 -1569.1924 3575.6553 -1565.0039 C3582.9785 -1565.1885 3599.5625 -1565.4736 3608.833 -1564.5762 c3620.6992 -1563.4268 3633.5137 -1559.2119 3643.9844 -1553.5508 c3653.5801 -1548.3604 3660.9375 -1539.9473 3670.167 -1534.2012 c3677.7764 -1529.4619 3686.6309 -1523.5176 3690.1914 -1515.0439 c3690.7686 -1513.6719 3690.5996 -1512.1963 3689.9883 -1510.8799 C3691.8076 -1509.8457 3693.1504 -1507.8896 3693.1504 -1505 c3693.1504 -1503 3694.0156 -1501.2754 3694.2617 -1499.0693 c3694.583 -1496.1982 3694.5029 -1493.3496 3694.6035 -1490.4648 c3694.8711 -1482.8496 3695.7217 -1475.2959 3695.9492 -1467.6699 c3696.3975 -1452.6328 3698.2041 -1437.6621 3698.9121 -1422.6348 c3699.6738 -1406.501 3699.9102 -1390.3096 3702.4805 -1374.3291 c3705.0254 -1358.5137 3704.4922 -1342.4102 3705.7227 -1326.4785 c3706.3027 -1318.9658 3707.7051 -1311.6104 3708.9883 -1304.1982 c3710.334 -1296.4297 3710.5469 -1288.7754 3711.1943 -1280.9551 c3712.4307 -1266.0176 3715.4893 -1251.3115 3718.0381 -1236.5645 c3720.7598 -1220.8213 3720.584 -1204.8662 3722.7598 -1189.126 c3724.8652 -1173.8945 3725.9375 -1159.1709 3725.9375 -1143.7969 c3725.9375 -1128.6602 3726.1934 -1113.4961 3725.5332 -1098.3701 c3725.2197 -1091.2148 3724.1172 -1084.1201 3723.9707 -1076.9629 c3723.8047 -1068.8145 3725.0566 -1060.603 3724.4307 -1052.4727 c3723.2285 -1036.874 3724.3652 -1021.1924 3723.3457 -1005.5806 c3722.3232 -989.9229 3719.8027 -974.4136 3719.2021 -958.7178 c3718.6123 -943.3125 3716.8027 -928.0391 3715.5908 -912.6675 c3715.043 -905.7104 3714.4219 -898.7749 3713.2275 -891.894 c3711.8779 -884.1162 3708.7979 -876.8262 3707.3535 -869.0562 c3706.0225 -861.8887 3705.1875 -854.6299 3703.7305 -847.4854 c3703.2129 -844.9458 3701.6211 -842.3457 3701.3477 -839.8188 c3700.9316 -835.9736 3700.0146 -832.0493 3699.2461 -828.2549 c3697.8779 -821.4985 3694.6914 -814.9399 3692.875 -808.2432 c3690.7832 -800.5342 3689.0449 -792.7329 3687.0273 -785.0044 c3684.3496 -774.748 3680.6064 -765.0732 3678.8066 -754.5869 c3676.9512 -743.7856 3672.8135 -733.6934 3670.417 -723.0215 c3669.4434 -718.6851 3668.4551 -714.812 3666.7168 -710.7031 c3664.832 -706.2466 3662.4004 -702.0815 3661.127 -697.3799 c3658.4053 -687.3242 3651.707 -679.3213 3647.0742 -670.2129 c3644.9775 -666.0923 3642.4072 -662.749 3639.7441 -658.9424 c3637.2305 -655.3511 3635.7236 -650.9189 3633.5859 -647.0737 c3631.5303 -643.3779 3630.4336 -639.6392 3628.668 -635.8159 c3626.8086 -631.79 3623.8525 -628.3369 3621.2246 -624.7896 c3618.623 -621.2773 3617.6699 -617.5918 3615.7598 -613.8604 c3613.4316 -609.312 3610.7891 -604.9404 3608.3838 -600.4341 c3604.1064 -592.4224 3599.752 -584.0913 3595.8965 -575.7651 C3596.4863 -572.1533 3594.5215 -568 3590 -568 C3588.7451 -568 3588.29 -568 v3582.9375 -568 3580.7588 -573.5684 3582.6777 -577.9268 c3588.5703 -591.3125 3595.8389 -604.4146 3602.8965 -617.2124 c3604.3457 -619.8408 3605.1621 -622.8604 3606.459 -625.5874 c3607.9258 -628.6738 3610.0273 -631.2632 3611.9473 -634.0649 c3613.583 -636.4512 3615.5078 -638.5918 3616.8838 -641.1567 c3618.4561 -644.0884 3618.4941 -647.4756 3620.3438 -650.2983 c3623.5156 -655.1392 3625.4697 -660.6274 3628.5186 -665.5015 c3630.207 -668.2002 3633.3945 -670.7017 3634.5078 -673.6836 c3635.9492 -677.5435 3638.1543 -681.0293 3640.3984 -684.458 c3644.0078 -689.9717 3647.2324 -695.8145 3648.9619 -702.2021 c3650.7617 -708.8525 3654.9141 -714.6328 3656.8262 -721.25 c3658.959 -728.6328 3660.3301 -736.1523 3662.7334 -743.5015 c3665.2539 -751.2095 3666.2441 -759.1118 3667.9697 -767.0078 c3669.5576 -774.2729 3672.5664 -781.2554 3674.4922 -788.4604 c3676.5537 -796.1777 3678.2979 -803.9761 3680.3389 -811.6992 c3682.1289 -818.4722 3685.0703 -824.9438 3686.7109 -831.7104 c3687.4209 -834.6392 3688.1426 -837.917 3688.4648 -840.9048 c3688.835 -844.3271 3690.8193 -847.3394 3691.0801 -850.7476 c3691.627 -857.8979 3693.6035 -865.4131 3694.8184 -872.5122 c3696.1523 -880.3062 3699.1943 -887.5957 3700.6924 -895.3501 c3703.5068 -909.9185 3703.2422 -925.0889 3705.0986 -939.8018 c3706.0508 -947.3462 3706.002 -954.8589 3706.3613 -962.4375 c3706.752 -970.6489 3707.6611 -978.835 3708.5352 -987.0059 c3710.207 -1002.6431 3710.8643 -1018.0459 3710.8926 -1033.7676 c3710.9063 -1041.2559 3711.6094 -1048.7578 3711.5576 -1056.228 c3711.502 -1064.3403 3710.7451 -1072.4209 3711.0811 -1080.5381 c3711.377 -1087.7197 3712.4131 -1094.8652 3712.6826 -1102.0664 c3712.9766 -1109.9414 3712.9375 -1117.8281 3712.9375 -1125.708 c3712.9375 -1140.6807 3713.6816 -1155.8613 3712.1787 -1170.7744 c3711.4355 -1178.1504 3710.2168 -1185.4775 3709.2627 -1192.8281 c3708.2021 -1201.002 3708.3711 -1209.3662 3707.4932 -1217.5908 c3705.8389 -1233.0957 3701.4365 -1248.3311 3700.5098 -1263.8662 c3700.2393 -1268.3965 3699.1992 -1272.8848 3698.6191 -1277.3818 c3698.001 -1282.1602 3698.0234 -1286.9209 3697.6777 -1291.7148 c3696.9326 -1302.0518 3694.2119 -1312.2178 3693.0859 -1322.5293 c3691.8838 -1333.543 3691.8721 -1344.6611 3691.3184 -1355.7168 c3690.7715 -1366.6035 3688.7842 -1377.2852 3687.7617 -1388.123 c3685.7539 -1409.4248 3685.167 -1431.0391 3684.0098 -1452.3945 c3683.4805 -1462.1455 3683.1377 -1471.9902 3682.2783 -1481.7119 c3681.876 -1486.2656 3681.5283 -1490.7314 3681.5127 -1495.3057 c3681.501 -1498.6699 3680.1504 -1502 3680.1504 -1505 c3680.1504 -1506.0527 3680.334 -1506.9775 3680.6484 -1507.7842 C3679.3438 -1508.6455 3678.3184 -1510.002 3677.6523 -1511.5889 c3676.6094 -1514.0674 3673.3271 -1516.0459 3671.0752 -1517.2676 c3669.2939 -1518.2344 3667.8516 -1520.0703 3666.1934 -1521.2617 c3664.1367 -1522.7383 3661.9248 -1524.0098 3659.7686 -1525.3311 c3651.2578 -1530.5449 3644.8516 -1538.3223 3635.9678 -1543.126 c3618.1865 -1552.7412 3598.5527 -1552.167 3578.8242 -1551.9453 C3579.6797 -1549.2461 3580.7109 -1546.5918 3581.6504 -1544.0068 c3584.2402 -1536.8799 3587.0811 -1530.1621 3590.3672 -1523.3242 c3593.5596 -1516.6807 3596.8037 -1510.0645 3600.2695 -1503.5566 c3604.0039 -1496.543 3606.6348 -1488.9512 3609.585 -1481.5742 c3612.2656 -1474.873 3615.582 -1468.459 3618.1406 -1461.6904 c3620.9004 -1454.3896 3623.5 -1447.0205 3626.1895 -1439.6914 c3628.5977 -1433.125 3631.4629 -1426.8652 3633.3213 -1420.0996 c3635.3271 -1412.7988 3637.6348 -1405.6074 3639.6641 -1398.3193 c3643.8281 -1383.3643 3646.3701 -1368.3115 3651.665 -1353.6475 c3656.9775 -1338.9346 3661.3467 -1324.3906 3665.1406 -1309.2158 c3666.0098 -1305.7402 3667.1094 -1302.4883 3667.4473 -1298.8867 c3667.7344 -1295.8301 3667.623 -1292.7012 3668.04 -1289.6621 c3669.1719 -1281.4141 3670.7246 -1273.1982 3671.877 -1264.9414 c3674.0342 -1249.4873 3676.3809 -1234.1387 3678.1953 -1218.6309 c3679.1172 -1210.75 3680.7881 -1203.2842 3682.4414 -1195.5332 c3684.2236 -1187.1816 3684.3252 -1178.8242 3685.4551 -1170.4229 c3686.4902 -1162.7256 3687.7813 -1155.0713 3688.5596 -1147.3398 c3689.375 -1139.2412 3689.0547 -1131.083 3689.8174 -1122.9697 c3691.2783 -1107.4229 3693.3828 -1092.293 3693.3584 -1076.6138 c3693.3457 -1068.8682 3693.0293 -1061.1245 3692.6504 -1053.3896 c3692.2734 -1045.7119 3692.502 -1037.5825 3690.5908 -1030.1025 c3688.9102 -1023.5269 3689.0527 -1017.3638 3689.0527 -1010.5845 c3689.0527 -1002.2998 3686.5215 -994.2656 3686.3203 -985.9941 c3685.9395 -970.3267 3684.25 -954.438 3682.2207 -938.9077 c3681.2295 -931.3296 3680.042 -923.77 3678.5391 -916.2754 c3676.9297 -908.2461 3674.3232 -900.4263 3673.2637 -892.2827 c3672.376 -885.4526 3671.8643 -878.6274 3670.7734 -871.8179 c3669.4951 -863.8374 3666.3955 -856.1729 3663.9443 -848.5078 c3660.6133 -838.0898 3656.623 -827.7988 3652.6279 -817.6113 c3648.5469 -807.2065 3643.1143 -797.5142 3638.7422 -787.2783 c3637.9531 -785.4326 3636.8984 -783.71 3635.8496 -782.0059 c3634.3506 -779.5723 3632.6523 -778.7686 3630.625 -776.9922 c3627.5723 -774.3174 3625.8623 -769.4097 3624.6123 -765.687 c3623.2461 -761.6157 3618.7363 -758.1602 3615.7793 -755.2012 c3612.4551 -751.8755 3608.5605 -748.3311 3606.8525 -743.8291 c3606.0723 -741.7705 3604.6113 -740.502 3602.9453 -739.8848 C3602.9238 -732.9932 3602.9238 -726.1016 3603.0586 -719.2144 c3603.3027 -706.7031 3604.2344 -694.2544 3602.4854 -681.8071 c3600.7178 -669.231 3599.5068 -656.5854 3597.6191 -644.0244 c3595.8281 -632.1138 3592.834 -620.6372 3589.8105 -609.0083 c3588.3955 -603.5649 3588.1084 -598.0635 3586.3525 -592.6274 c3584.5195 -586.9492 3583.2207 -581.3965 3580.7324 -575.9507 c3575.6992 -564.938 3573.499 -553.189 3569.4766 -541.7715 c3567.0527 -534.896 3564.5459 -528.0884 3561.8535 -521.3438 C3565.0039 -524.2139 3568.1768 -527.0605 3571.3984 -529.8535 c3576.6943 -534.4448 3582.291 -538.7139 3587.3867 -543.5146 c3592.3438 -548.1851 3596.1074 -553.9814 3601.1699 -558.4961 c3603.4268 -560.5078 3606.1816 -561.9072 3608.7031 -563.5415 c3611.5449 -565.3838 3614.1816 -567.5386 3617.1133 -569.3047 c3622.9883 -572.8447 3629.6191 -575.0171 3635.6533 -578.2568 c3649.4209 -585.6484 3662.8096 -593.7236 3676.8809 -600.5547 c3684.7363 -604.3682 3692.8926 -607.1011 3700.1777 -611.9941 c3707.8477 -617.1455 3716.7139 -619.5151 3725.2588 -622.8838 c3733.3418 -626.0713 3741.1523 -630.9282 3749.4111 -633.4814 c3756.0039 -635.52 3761.6553 -639.3848 3768.1621 -641.4756 C3770.7383 -647.2402 3780.9531 -646.4473 3780.582 -638.9995 c3780.5469 -638.2939 3780.4805 -637.5972 3780.3955 -636.9053 C3780.5967 -635.3403 3780.334 -633.73 3779.5449 -632.4482 C3778.6445 -628.9019 3777.3096 -625.4668 3776.0723 -621.9814 c3773.4414 -614.5684 3772.1152 -606.6841 3770.4336 -599.0205 c3768.9199 -592.125 3766.5811 -585.8887 3764.1152 -579.3115 c3761.6191 -572.6553 3759.4209 -565.8818 3756.3643 -559.4297 c3753.7773 -553.9697 3750.1963 -548.7373 3747.999 -543.1016 c3745.2109 -535.9526 3742.7588 -529.6377 3738.4404 -523.1914 c3734.4678 -517.2607 3730.0449 -511.6357 3725.7109 -505.9692 c3721.2637 -500.1538 3717.1885 -494.0679 3712.3926 -488.5273 c3708.0332 -483.4917 3703.9238 -478.3511 3699.6992 -473.2188 c3694.9072 -467.3979 3689.0986 -462.4868 3684.1602 -456.79 c3674.832 -446.0288 3663.709 -438.0508 3651.5107 -430.7632 c3627.6152 -416.4863 3600.1406 -409.188 3573.2813 -402.8408 c3562.7285 -400.3472 3550.8906 -398.958 3541.0234 -394.3164 c3536.1133 -392.0059 3529.8555 -391.1836 3524.4902 -390.7451 c3518.1563 -390.2271 3512.1309 -387.02 3506.3281 -384.6362 c3495.2334 -380.0781 3484.1074 -376.8486 3472.4063 -374.2866 c3467.791 -373.2764 3463.082 -372.0825 3458.332 -370.9775 C3465.5176 -369.584 3472.5332 -367.2314 3479.4395 -364.8281 C3479.2246 -366.1284 3479.4629 -367.564 3480.3643 -369.0283 c3484.8857 -376.3735 3494.8291 -376.1987 3502.4443 -376.6055 c3504.2842 -376.7036 3506.1191 -376.7046 3507.9521 -376.8994 c3509.8906 -377.1055 3510.7969 -378 3512.9785 -378 C3559.0664 -378 L3561.9063 -378 3565.1699 -379.7114 3567.877 -380.5156 c3580.4453 -384.2485 3593.126 -384 3606.0938 -384 C3625.1543 -384 L3631.5059 -384 3637.71 -385.2207 3644.0039 -386.04 c3657.748 -387.8296 3671.5459 -389.252 3685.3945 -389.8857 c3698.3633 -390.4785 3711.1279 -390.6572 3724.0527 -392.1006 c3737.7061 -393.625 3751.5439 -394.8193 3765.252 -393.2344 c3768.7705 -392.8276 3772 -390.6011 3772 -386.75 C3772 -384 L3772 -379.1211 3768.1807 -376.8931 3764.6816 -377.3037 C3765.7979 -374.5981 3765.3877 -371.2041 3762.2852 -369.1357 c3750.0713 -360.9946 3738.2285 -352.4502 3724.9941 -346.0605 c3712.3623 -339.9619 3699.3477 -335.3105 3685.6016 -332.458 c3658.4648 -326.8276 3630.4746 -329.1982 3602.9883 -329.2446 c3588.4063 -329.2695 3573.9316 -331.4258 3559.5713 -333.7642 c3545.2871 -336.0898 3530.9209 -338.0264 3516.6992 -340.6929 c3504.0879 -343.0571 3492.2559 -346.7656 3480.1396 -350.8525 c3469.3926 -354.478 3458.4648 -359.0244 3446.9727 -359.2476 c3441.9238 -359.3457 3439.9189 -364.1108 3440.959 -367.8438 C3439.0625 -367.6504 3437.1689 -367.5151 3435.2842 -367.4722 c3432.6426 -367.4116 3430.8359 -368.6611 3429.8604 -370.4058 C3428.3486 -370.0957 3426.7324 -370.2847 3425.3555 -370.9902 C3425.3926 -370.6353 3425.4092 -370.2661 3425.3906 -369.874 c3425.3564 -369.1646 3425.291 -368.4639 3425.207 -367.7686 C3428.8779 -368.6094 3433.417 -366.5767 3433.5869 -361.6777 c3433.8242 -354.8408 3436.9336 -348.5098 3438.4863 -341.918 c3440.0654 -335.2178 3439.0508 -327.4429 3439.0508 -320.5908 c3439.0508 -313.9692 3439.041 -307.6611 3440.3418 -301.1416 c3441.7637 -294.0161 3441.6064 -286.8252 3443.2881 -279.7534 c3446.5146 -266.1841 3448.8613 -252.8857 3458.4141 -242.123 c3467.0039 -232.4448 3477.3486 -225.79 3488.7539 -219.8599 c3501.6865 -213.1357 3515.4951 -207.9756 3529.5146 -203.9453 c3536.0918 -202.0542 3543.0078 -200.8374 3549.8389 -201.916 c3553.0234 -202.4185 3566.6816 -205.7563 3565.6279 -209.6763 c3564.0391 -215.5864 3559.832 -220.377 3558.3994 -226.3638 c3556.7588 -233.2212 3553.4102 -239.5098 3550.3135 -245.7886 c3547.3594 -251.7783 3544.9775 -258.0122 3542.1406 -264.0557 c3538.9355 -270.8823 3534.9746 -277.1533 3531.1055 -283.6011 c3523.2959 -296.6128 3515.3066 -309.7007 3505.8242 -321.562 c3500.6445 -328.04 3509.7813 -337.3022 3515.0156 -330.7544 c3524.4111 -319.0034 3532.4512 -306.3838 3540.2813 -293.5571 c3543.9814 -287.4961 3547.8086 -281.54 3551.0879 -275.2344 c3554.4785 -268.7153 3557.0488 -261.854 3560.1543 -255.2109 c3562.8877 -249.3638 3565.8555 -243.6655 3568.3213 -237.6924 c3569.5967 -234.6021 3570.5547 -231.4077 3571.332 -228.1597 c3572.0684 -225.0811 3574.5264 -221.981 3575.8916 -219.1279 c3578.5859 -213.4976 3579.8516 -208.167 3577.2549 -202.3237 c3574.5625 -196.2642 3565.7646 -193.2373 3560.0977 -191.1646 c3546.0693 -186.0337 3531.29 -189.4312 3517.665 -194.0547 c3503.5469 -198.8452 3490.3779 -204.5376 3477.084 -211.2559 c3466.0918 -216.8115 3456.3477 -224.9023 3448.2139 -234.0659 c3438.7832 -244.6914 3435.0508 -257.6055 3432 -271.1602 c3430.3447 -278.5156 3429.1553 -285.3652 3428.6094 -292.8818 c3428.3359 -296.6416 3427.1875 -300.3716 3426.627 -304.0977 c3426.0449 -307.9648 3426 -311.7964 3426 -315.6958 C3426 -327.3198 L3426 -330.8696 3426.5938 -334.9683 3425.9258 -338.4624 c3425.0889 -342.8394 3423.6357 -346.9473 3422.4512 -351.1309 C3422.0508 -344.4736 3421.2314 -338.0352 3421.4121 -331.2979 c3421.8027 -316.7783 3423.5078 -301.3657 3418.2715 -287.48 c3413.8105 -275.6465 3405.457 -263.1313 3395.6865 -255.0806 c3385.3242 -246.542 3373.1152 -238.8965 3361.0596 -233.0273 c3348.5469 -226.936 3335.125 -223.417 3321.2256 -222.7314 c3313.8066 -222.3657 3306.3086 -222.6641 3298.8818 -222.6641 c3295.0137 -222.6641 3291.5986 -223.1182 3287.793 -223.625 c3284.1172 -224.1147 3280.0313 -223.3672 3276.4512 -224.2622 c3269.0088 -226.1226 3261.7158 -228.0269 3254.1094 -229.0483 c3246.0176 -230.1348 3238.0059 -231.6504 3230.0039 -233.2578 c3214.6162 -236.3491 3199.5771 -240.0259 3184.4912 -244.2607 c3170.7666 -248.1138 3157.4375 -253.6401 3144.915 -260.4365 c3135.4648 -265.5659 3125.1621 -271.7666 3117.5234 -279.4766 c3114.4131 -282.6167 3112.0137 -286.4297 3111.8311 -290.9302 c3111.6074 -296.4385 3116.7617 -300.062 3121.6328 -300.7715 c3136.1172 -302.8809 3150.835 -302.6035 3165.4453 -302.6035 c3197.2627 -302.6035 3229.2021 -301.8315 3260.957 -304.106 c3276.8945 -305.2476 3292.9473 -304.2793 3308.7021 -307.4175 c3314.9404 -308.6602 3321.1523 -311.0962 3326.8555 -313.8691 c3333.25 -316.9795 3338.3486 -321.9253 3344.6221 -325.1934 c3349.4531 -327.7104 3354.6934 -329.3955 3359.5977 -331.7705 c3362.0996 -332.9824 3364.3477 -335.4736 3366.4795 -337.231 c3369.1846 -339.4609 3372.0371 -341.4438 3374.9668 -343.3618 c3377.2324 -344.8442 3379.5684 -346.1563 3382.0195 -347.2915 C3371.3398 -344.5977 3360.875 -341.231 3349.7402 -340.4351 c3335.0977 -339.3882 3320.1758 -340.1504 3305.502 -340.1504 c3291.4004 -340.1504 3277.0156 -342.751 3263.1992 -345.4385 c3247.5781 -348.4766 3231.8037 -350.8687 3216.123 -353.6123 c3185.3662 -358.9937 3154.4121 -363.6631 3124.9883 -374.519 c3096.1143 -385.1724 3066.5938 -394.0356 3037.8613 -405.0879 c3023.6445 -410.5562 3009.6885 -416.6929 2996.2109 -423.7954 c2983.998 -430.2314 2972.3867 -437.6831 2960.3525 -444.4175 c2954.1895 -447.8667 2948.2803 -451.8384 2942.6016 -456.0283 c2936.2363 -460.7241 2929.5361 -465.8901 2925.3594 -472.7446 c2911.2021 -495.9746 2960.8213 -495.2344 2971.6631 -495.2246 cf0 D3515.0332 -354.2402 m3528.4072 -351.4424 3541.9756 -349.7969 3555.4473 -347.5566 c3569.9639 -345.1426 3584.4619 -342.7539 3599.1982 -342.293 c3625.9414 -341.4575 3653.9727 -339.8413 3680.4102 -344.6563 c3693.6709 -347.0713 3706.291 -351.5063 3718.4336 -357.2856 c3731.6924 -363.5972 3743.5234 -372.2295 3755.7227 -380.3613 c3756.043 -380.5747 3756.3613 -380.7441 3756.6787 -380.8931 C3746.9688 -381.2813 3737.251 -380.5571 3727.5771 -379.5093 c3715.4473 -378.1948 3703.4727 -377.4229 3691.2773 -377.1479 c3677.9219 -376.8467 3664.5635 -375.6196 3651.3008 -374.0659 c3644.7705 -373.3008 3638.2422 -372.4072 3631.7344 -371.4814 c3625.709 -370.624 3619.2207 -371.249 3613.1367 -371.249 c3601.293 -371.249 3589.0166 -372.228 3577.3652 -369.7803 c3574.8369 -369.2495 3572.3477 -368.4053 3569.874 -367.6704 c3567.1016 -366.8467 3563.9014 -365 3560.9834 -365 C3516.1943 -365 L3514.9863 -365 3514.5869 -365.1113 3514.5615 -365.2461 C3514.4072 -365.1909 3514.2402 -365.1328 3514.0439 -365.0664 c3513.2363 -364.7939 3512.4434 -364.6538 3511.6094 -364.48 c3507.4697 -363.6172 3503.1406 -363.627 3498.9355 -363.3799 c3497.29 -363.2822 3495.6494 -363.1792 3494.0254 -362.8984 c3493.29 -362.7715 3491.041 -361.5679 3491.5889 -362.459 c3491.2539 -361.9141 3490.875 -361.4585 3490.4688 -361.0679 C3498.5303 -358.4053 3506.6152 -356.0015 3515.0332 -354.2402 cf3565.0215 -572.4214 m3566.334 -575.8574 3567.957 -579.1802 3569.5078 -582.5122 c3571.0703 -585.8701 3571.7158 -589.3047 3572.7734 -592.8374 c3573.7461 -596.084 3574.8799 -599.2632 3575.7129 -602.5518 c3576.6699 -606.3306 3576.6953 -610.2354 3577.6875 -614.0522 c3581.5479 -628.897 3584.7168 -643.5649 3586.6367 -658.8105 c3588.6094 -674.4604 3590.8779 -689.8901 3590.4727 -705.6963 c3590.0723 -721.3647 3589.9863 -737.0068 3589.9863 -752.6807 c3589.9863 -760.4453 3588.9805 -767.9297 3587.9629 -775.6113 c3586.8672 -783.8745 3587.1875 -792.2002 3585.9746 -800.4707 c3584.917 -807.6875 3583.0283 -814.5146 3580.6123 -821.3945 c3579.4561 -824.687 3577.9824 -827.8062 3576.2998 -830.8589 c3574.3672 -834.3662 3572.9727 -837.8286 3571.4834 -841.5566 c3570.2266 -844.7026 3569.2295 -847.791 3567.4795 -850.7119 c3566.3906 -852.5293 3564.2549 -854.7773 3563.2256 -856.0854 c3560.3525 -859.7363 3557.1875 -863.1641 3553.7305 -866.2676 c3552.2646 -867.5835 3550.6611 -868.6514 3548.9287 -869.5845 c3547.748 -870.2197 3548.5869 -870.2266 3547.8555 -869.7256 c3547.8125 -869.6968 3547.0273 -866.8979 3546.9756 -865.7754 c3546.8379 -862.7783 3545.2734 -859.1177 3544.5205 -856.1616 c3540.6875 -841.106 3533.3623 -826.6953 3528.1191 -812.0879 c3525.6133 -805.1055 3522.6211 -798.4111 3519.6191 -791.627 c3516.5215 -784.6245 3513.9951 -777.688 3510.2656 -770.9648 c3506.6113 -764.3794 3503.5049 -758.0283 3501.4658 -750.7578 c3499.2676 -742.9194 3497.6094 -734.9321 3495.9941 -726.9575 c3494.5137 -719.6528 3493.1152 -712.3325 3491.5352 -705.0483 c3490.7402 -701.3823 3489.9717 -697.7212 3489.3076 -694.0273 c3488.5352 -689.7275 3488.8623 -685.2222 3488 -680.9873 c3485.1172 -666.8169 3480.4688 -652.6406 3479.0078 -638.2432 c3478.2598 -630.873 3478.333 -623.8091 3476.6563 -616.5234 c3474.8721 -608.771 3472.9258 -601.147 3470.6455 -593.5557 c3469.4678 -589.6382 3468.6641 -585.6069 3467.8506 -581.6021 c3466.9033 -576.9409 3465.1035 -572.3936 3463.8223 -567.8042 c3461.291 -558.7363 3460.3594 -549.4746 3458.3535 -540.3257 c3457.4424 -536.165 3456.0732 -532.0454 3454.7578 -527.9971 c3453.3604 -523.6968 3454.0234 -518.7217 3453.4365 -514.2271 c3452.3105 -505.6104 3449.0859 -497.4912 3448.666 -488.7769 c3448.4902 -485.1313 3448.4795 -481.6177 3447.9346 -477.9907 c3447.2959 -473.7358 3445.6982 -469.6187 3444.6523 -465.4551 c3442.2715 -455.981 3441.0635 -446.0498 3439.3662 -436.4302 c3437.8457 -427.8115 3436.3887 -419.4243 3435.6875 -410.7695 C3438.1836 -415.2168 3441.0205 -419.6548 3444.1016 -423.4961 c3447.9072 -428.2412 3452.3115 -432.4951 3455.9629 -437.3623 c3457.8818 -439.9189 3459.375 -442.8413 3461.7021 -445.0547 c3464.4277 -447.647 3467.5195 -449.8579 3470.3076 -452.3877 c3475.2051 -456.8311 3477.958 -462.8252 3484.127 -465.6807 c3490.5557 -468.6567 3497.2324 -470.9639 3503.2568 -474.7573 c3509.0117 -478.3813 3513.835 -483.2495 3519.7764 -486.6118 c3523.8467 -488.9155 3527.623 -491.0181 3531.2285 -493.5171 C3531.5908 -494.9482 3532.6016 -496.2412 3534.4629 -497.0713 c3536.2354 -497.8613 3536.8057 -499.2588 3537.5449 -501.0293 c3538.7393 -503.8911 3540.3027 -506.2915 3541.9629 -508.9126 c3545.9238 -515.1636 3548.376 -522.6064 3551.3047 -529.3901 c3554.2334 -536.1758 3556.2539 -543.3066 3558.7266 -550.2642 c3561.3135 -557.5425 3562.2793 -565.2427 3565.0215 -572.4214 cf3435 -380.4482 m3435 -380.4556 3435.1934 -380.4697 3435.3066 -380.4722 c3442.165 -380.6294 3448.7578 -382.5112 3455.3965 -384.0801 c3462.6816 -385.8018 3470.084 -387.0825 3477.4033 -388.6851 c3491.3418 -391.7373 3503.875 -398.8472 3517.5537 -402.7231 c3524.1436 -404.5908 3530.9355 -404.1411 3537.4102 -406.8521 c3543.6719 -409.4741 3550.3682 -410.877 3556.9639 -412.3955 c3570.4814 -415.5073 3583.9961 -418.6328 3597.332 -422.4644 c3610.6895 -426.3018 3623.7969 -430.9868 3636.2334 -437.2197 c3648.3291 -443.2822 3660.9541 -450.9673 3670.4258 -460.6992 c3675.2783 -465.6855 3679.6523 -471.0967 3684.5791 -476.0439 c3689.8105 -481.2983 3693.9707 -487.3359 3698.8711 -492.877 c3708.3105 -503.5508 3716.8604 -515.1606 3725.1436 -526.7642 c3728.2188 -531.0723 3731.4531 -535.5454 3733.418 -540.4883 c3735.1777 -544.9155 3736.3848 -549.3193 3738.7256 -553.5132 c3741.0244 -557.6299 3742.9316 -561.834 3745.1387 -565.9907 c3747.29 -570.0415 3749.293 -575.1045 3750.5029 -579.5239 c3751.7598 -584.1201 3753.9355 -588.4292 3755.5195 -592.9136 c3757.459 -598.4082 3758.3262 -604.4419 3759.5527 -610.1265 c3760.6631 -615.2778 3761.8447 -620.4414 3763.5371 -625.4375 c3763.5566 -625.4961 3763.5801 -625.5562 3763.6006 -625.6147 C3762.0664 -624.8774 3760.5273 -624.1182 3758.9492 -623.3853 c3752.667 -620.4707 3746.2422 -617.7612 3739.9014 -614.9443 c3733.5518 -612.124 3727.0352 -609.6348 3720.5313 -607.1958 c3717.1855 -605.9409 3713.6133 -605.0381 3710.5176 -603.231 c3707.4111 -601.4175 3704.5381 -599.2271 3701.4355 -597.3984 c3695.3086 -593.7852 3688.1865 -591.6333 3681.7773 -588.5215 c3674.4258 -584.9526 3667.2725 -580.98 3660.1328 -577.0117 c3653.7188 -573.4473 3647.3438 -569.7856 3640.8818 -566.3159 c3634.7432 -563.02 3628.1221 -560.7593 3622.1377 -557.1538 c3616.915 -554.0073 3610.9668 -550.3115 3606.8926 -545.7778 c3602.2773 -540.6436 3598.082 -535.4888 3592.8359 -530.9326 c3581.3096 -520.9219 3569.5801 -511.3066 3558.7324 -500.5205 c3553.7998 -495.6152 3548.54 -490.9019 3543.3516 -486.2549 c3537.7432 -481.2329 3531.2783 -478.1821 3524.8008 -474.5166 c3518.9775 -471.2212 3514.1582 -466.2656 3508.4863 -462.6938 c3502.5078 -458.9292 3495.5908 -456.7251 3489.2051 -453.769 c3486.6309 -452.5771 3484.6738 -448.9116 3482.9131 -446.7754 c3480.3984 -443.7236 3477.3145 -441.207 3474.2676 -438.7129 c3468.5713 -434.0479 3464.209 -427.3184 3459.5957 -421.5679 c3455.3125 -416.229 3451.373 -411.1968 3447.7275 -405.3569 c3445.7363 -402.167 3444.1855 -398.7471 3442.001 -395.686 c3440.0762 -392.9888 3438.4004 -390.4844 3437.4756 -387.2715 c3437.001 -385.624 3436 -384.4653 3435 -383.7217 C3435 -380.4482 Lf3421.8955 -386.1587 m3421.918 -396.4619 3422.2344 -413.0396 3423.8809 -422.8906 c3426.4512 -438.2705 3428.7842 -453.7495 3432.1162 -468.9849 c3433.5059 -475.3354 3435.5674 -480.8267 3435.6299 -487.4121 c3435.6953 -494.2544 3436.9648 -501.2368 3439.0801 -507.7202 c3440.1133 -510.8838 3440.5352 -514.5771 3440.8447 -517.8794 c3441.1582 -521.2329 3440.249 -525.5186 3441.3115 -528.71 c3443.458 -535.1582 3445.7529 -541.7456 3446.6582 -548.5024 c3448.2441 -560.3438 3451.6357 -571.6807 3454.626 -583.1587 C3449.4404 -583.7524 3447.6201 -591.9038 3452.4346 -595.2456 C3452.4619 -595.3452 3452.4922 -595.457 3452.5273 -595.5947 c3452.707 -596.2856 3452.6641 -597.1147 3452.6875 -597.8247 c3452.7559 -599.9395 3452.5537 -602.0688 3452.3711 -604.1729 c3451.8809 -609.8535 3450.9219 -615.4463 3450.0537 -621.083 c3447.6992 -636.3848 3445.2822 -651.6309 3441.748 -666.7139 c3439.9814 -674.2549 3437.9619 -681.7349 3435.8467 -689.1841 c3433.707 -696.7188 3433.291 -704.7031 3431.6289 -712.3486 c3430.0762 -719.4893 3426.5488 -726.0361 3423.6943 -732.7134 c3420.6006 -739.9502 3418.5107 -747.541 3415.3193 -754.7231 c3408.8691 -769.2368 3399.5664 -782.2744 3393.0449 -796.7256 c3386.5781 -811.0562 3380.3691 -825.6611 3374.9766 -840.4331 c3372.5508 -847.0752 3367.5635 -853.0381 3363.9658 -859.085 c3359.9131 -865.8984 3356.8193 -873.1172 3352.4727 -879.7988 c3344.1914 -892.5298 3334.7559 -903.8081 3324.0469 -914.5405 c3316.4746 -922.1289 3309.373 -930.4927 3299.6719 -935.4175 c3295.7354 -937.416 3292.3047 -939.8765 3287.8301 -939.8765 c3283.7891 -939.8765 3279.2725 -940.3901 3275.1523 -939.688 C3274.7783 -938.1182 3274.4746 -936.5283 3274.0283 -934.9658 c3273.3047 -932.4316 3272.1719 -930.0098 3271.4766 -927.4512 c3269.7578 -921.1377 3272.3955 -912.7363 3273.6426 -906.5 c3276.7695 -890.8662 3278.791 -875.2524 3280.1543 -859.3662 c3280.8301 -851.5029 3280.8848 -843.4404 3281.9668 -835.627 c3283.083 -827.5713 3285.6826 -819.7358 3287.9336 -811.9478 c3291.96 -798.0142 3292.3301 -783.4658 3295.0352 -769.2681 c3298.0254 -753.5781 3301.0576 -737.5542 3302.8145 -721.6797 c3303.5957 -714.6143 3304.4873 -707.582 3305.8672 -700.6045 c3307.3955 -692.8784 3309.9219 -685.3711 3311.7207 -677.7002 c3315.2012 -662.853 3318.0879 -647.8721 3323.3828 -633.5259 c3328.8262 -618.7803 3335.9385 -604.5869 3341.8926 -590.0347 c3344.6855 -583.2095 3347.874 -576.2437 3349.3447 -569.0059 c3350.8496 -561.6045 3352.9707 -554.3662 3355.6445 -547.3066 c3356.7646 -544.3477 3358.1309 -541.5098 3359.1357 -538.5034 c3360.4316 -534.6294 3360.7266 -530.2881 3361.6104 -526.2915 c3363.2637 -518.8184 3366.2305 -511.6626 3368.6973 -504.4336 c3370.9883 -497.7231 3372.7432 -490.8901 3375.0273 -484.1699 c3377.6855 -476.3447 3380.2188 -468.48 3383.0879 -460.7275 c3386.0762 -452.6514 3390.1582 -445.6289 3394.4043 -438.1816 c3398.4727 -431.0483 3402.4199 -423.8545 3406.7432 -416.8701 c3408.8193 -413.5166 3407.4463 -410.3013 3404.9492 -408.5654 C3407.9805 -404.1455 3410.9727 -399.7275 3413.7871 -395.1519 c3416.0195 -391.52 3418.541 -388.584 3421.8955 -386.1587 Cf3375.6719 -328.0386 m3372.9502 -325.8618 3370.3037 -323.6108 3367.5254 -321.5034 c3364.8408 -319.4668 3361.4023 -318.3579 3358.3154 -317.0649 c3351.6436 -314.2705 3346.3379 -310.8486 3340.4434 -306.7231 c3315.5859 -289.3276 3282.0635 -291.9565 3253.2676 -291.0552 c3237.2842 -290.5552 3221.4287 -290 3205.4219 -290 C3157.6055 -290 L3150.0215 -290 3142.4199 -289.98 3134.8613 -289.2764 c3132.1504 -289.0239 3129.5625 -288.5244 3126.8652 -288.3521 C3128.4072 -286.7041 3130.3877 -285.2686 3132.1641 -284.1816 c3138.209 -280.4829 3143.7568 -276.0527 3149.9512 -272.5171 c3176.1191 -257.5825 3206.1133 -251.29 3235.3359 -245.4194 c3242.8223 -243.9155 3250.3379 -242.5039 3257.918 -241.5562 c3265.584 -240.5981 3273.4297 -237.0825 3281.0996 -237.0156 c3288.3408 -236.9526 3295.3984 -235.6646 3302.665 -235.6646 c3310.5313 -235.6646 3318.4434 -235.3848 3326.2861 -236.0806 c3339.9824 -237.2954 3353.0186 -242.854 3364.7402 -249.7671 c3376.1328 -256.4863 3388.2627 -263.7671 3396.0107 -274.6719 c3399.6484 -279.792 3403.3203 -285.106 3405.7363 -290.9355 c3408.6367 -297.9316 3408.8594 -305.3857 3408.8994 -312.8511 c3408.9385 -320.2046 3408.4814 -327.5557 3408.3262 -334.9058 c3408.2314 -339.3599 3408.7217 -343.752 3409.1357 -348.1553 C3404.3027 -345.6743 3399.542 -343.0752 3395.002 -340.0649 c3388.6777 -335.8721 3381.6699 -332.8359 3375.6719 -328.0386 cf3402.4971 -364.0791 m3404.6943 -364.0508 3406.3105 -363.1309 3407.3555 -361.7969 C3407.4121 -361.8252 L3408.5908 -362.415 3409.748 -362.6313 3410.8301 -362.5654 C3411.5176 -364.9707 3412.2705 -367.3574 3412.3906 -369.874 c3412.5049 -372.2661 3413.6572 -373.9722 3415.2305 -374.9961 C3405.2832 -382.0313 3400.0313 -393.0229 3393.1289 -402.8931 c3391.2207 -405.6216 3389.5703 -409.125 3387.2197 -411.4785 c3384.9248 -413.7764 3382.6807 -416.1167 3380.5137 -418.5361 c3375.8691 -423.7217 3372.9844 -429.9712 3368.3848 -435.1475 c3364.1914 -439.8657 3358.9854 -443.6182 3354.3994 -447.9346 c3349.0957 -452.9272 3344.2129 -458.3491 3339.5664 -463.9536 c3330.4834 -474.9087 3322.0205 -486.1201 3312.0186 -496.3013 c3302.0303 -506.4688 3290.9834 -516.2354 3278.793 -523.6924 c3265.5254 -531.8091 3251.7012 -538.9917 3237.835 -546.0181 c3231.3945 -549.2822 3224.7676 -552.208 3218.3672 -555.5269 c3212.0078 -558.8237 3206.3271 -563.3569 3200.2832 -567.1729 c3194.3857 -570.8965 3187.9531 -573.52 3182.1172 -577.3896 c3175.4238 -581.8271 3169.085 -586.8125 3162.4961 -591.4053 c3150.0078 -600.1094 3137.8857 -609.3276 3125.5947 -618.3042 c3113.1748 -627.375 3100.2227 -635.4658 3087.4854 -644.042 c3081.543 -648.043 3075.7393 -652.6431 3069.0566 -655.374 c3062.502 -658.0537 3055.3096 -662.0576 3049.4883 -666.1738 c3036.7422 -675.1885 3022.1963 -681.8462 3008.2891 -688.8262 c3001.7178 -692.1245 2995.21 -695.5498 2988.6973 -698.9609 c2982.0908 -702.4214 2975.1416 -707.2188 2968.0605 -709.5718 c2966.1602 -710.2031 2964.2422 -710.7612 2962.3086 -711.2705 C2965.1025 -704.9326 2967.3506 -698.3003 2970.0957 -691.9448 c2972.9531 -685.333 2976.0156 -678.8135 2979.2637 -672.3857 c2982.6768 -665.6333 2986.625 -659.6646 2990.8662 -653.4443 c2999.0498 -641.4424 3005.1025 -628.2593 3013.6416 -616.4443 c3017.8115 -610.6743 3021.9316 -604.9287 3025.6289 -598.8379 c3029.8438 -591.8975 3033.457 -584.3057 3038.6455 -578.0225 c3043.4814 -572.166 3049.2695 -566.9932 3054.6338 -561.6289 c3060.1055 -556.1572 3065.6826 -551.1392 3071.957 -546.5947 c3083.458 -538.2651 3095.6055 -531.3594 3106.8721 -522.6802 c3118.7715 -513.5132 3130.6924 -504.4458 3142.4199 -495.043 c3166.0947 -476.062 3189.3799 -456.6387 3215.4971 -441.0513 c3217.4805 -439.8672 3219.4805 -438.7129 3221.4873 -437.5723 C3223.21 -437.1733 3224.9268 -436.7451 3226.6289 -436.251 c3228.8809 -435.5977 3230.2314 -434.1416 3230.834 -432.4365 C3253.2363 -420.5527 3276.7471 -410.7793 3299.7949 -400.2437 c3308.5898 -396.2231 3317.3906 -392.2119 3326.2119 -388.2485 c3334.7041 -384.4326 3343.1299 -381.5967 3351.9922 -378.7891 c3360.2148 -376.1831 3367.7207 -371.8247 3375.9063 -369.1597 c3384.4707 -366.3711 3393.459 -364.1963 3402.4971 -364.0791 cf2953.3027 -464.2793 m2958.2002 -460.8506 2963.2832 -457.4443 2968.6191 -454.7217 c2975.6387 -451.1401 2982.2773 -446.54 2989.1104 -442.5977 c2996.3623 -438.4131 3003.7197 -434.417 3011.2207 -430.6953 c3038.6309 -417.0923 3068.0205 -407.9121 3096.9639 -398.2192 c3111.6777 -393.292 3126.1035 -387.4956 3140.8789 -382.7871 c3155.7734 -378.0405 3171.0977 -374.728 3186.4668 -371.9507 c3216.9697 -366.4385 3247.7168 -361.9741 3278.1328 -356.0586 c3296.5742 -352.4722 3315.1563 -353.1504 3333.8691 -353.1504 c3343.3457 -353.1504 3352.6787 -353.1812 3361.9824 -355.1958 c3364.873 -355.8223 3367.7168 -356.5806 3370.5479 -357.3721 C3366.9609 -358.6685 3363.4434 -360.1172 3360.0205 -361.6807 c3353.4473 -364.6836 3346.7061 -366.8379 3339.793 -368.9014 c3332.1904 -371.1709 3325.0908 -374.5791 3317.8711 -377.8228 c3288.9873 -390.8013 3259.582 -403.1963 3231.333 -417.501 c3226.3975 -420 3221.5547 -422.6143 3216.79 -425.3291 C3212.1191 -426.3911 3207.4121 -427.3071 3202.8008 -428.7251 c3195.3242 -431.0249 3187.6758 -432.5503 3180.1924 -434.8945 c3173.1953 -437.0869 3166.5742 -440.1016 3159.4775 -441.9878 c3151.6973 -444.0552 3143.8721 -446.0142 3136.0654 -447.9819 c3120.8027 -451.8286 3105.4961 -455.4854 3090.2393 -459.3569 c3074.459 -463.3604 3058.9717 -468.3633 3043.1689 -472.1655 c3027.9971 -475.8164 3013.2354 -479.7642 2997.6445 -481.3066 c2990.2285 -482.0405 2982.7539 -482.1567 2975.3076 -482.2124 c2967.6816 -482.269 2959.7344 -482.7554 2952.1953 -481.4321 c2948.9336 -480.8599 2945.6592 -480.5742 2942.3887 -479.9976 C2941.9238 -479.9326 2941.459 -479.8677 2940.9941 -479.8022 c2940.7119 -479.7568 2940.4678 -479.7188 2940.2549 -479.686 C2939.3418 -479.168 2938.042 -478.8262 2937.0547 -478.5479 C2940.5479 -472.9619 2947.7441 -468.1709 2953.3027 -464.2793 cf*U*u1 D3324.6279 -1307.3633 m3320.5107 -1307.3867 3318.4199 -1310.5361 3318.3477 -1313.7285 C3316.959 -1315.1328 3316.2568 -1317.1865 3316.9941 -1319.6895 c3318.7969 -1325.8105 3322.2314 -1331.2754 3327.1133 -1335.4082 c3331.0576 -1338.7471 3334.2402 -1344.9766 3336.7754 -1349.9307 c3337.9336 -1352.1963 3340.6191 -1354.2559 3342.3174 -1356.1504 c3344.0654 -1358.1016 3345.8691 -1359.9668 3347.8672 -1361.6631 c3352.4746 -1365.5742 3358.0684 -1367.7813 3364.1543 -1367.1094 c3370.9521 -1366.3584 3377.9277 -1364.4854 3384.416 -1362.373 c3392.3633 -1359.7871 3400.543 -1361.0635 3408.8018 -1361.3242 c3416.1162 -1361.5547 3423.5049 -1363.1504 3430.79 -1363.9424 c3438.793 -1364.8125 3446.8301 -1365.2773 3454.8799 -1365.1895 c3462.0186 -1365.1113 3468.9521 -1364.2559 3475.9131 -1362.7568 c3483.3203 -1361.1621 3490.7529 -1361.3467 3498.2803 -1361.3467 c3505.2793 -1361.3467 3512.0742 -1361.2109 3519.0059 -1360.1172 c3526.2422 -1358.9746 3533.7461 -1358.1729 3540.7891 -1356.1035 c3546.7236 -1354.3604 3553.4775 -1355.6953 3559.0391 -1352.7686 c3563.9814 -1350.168 3565.7041 -1343.583 3566.9404 -1338.6387 c3570.2236 -1325.5059 3578.9668 -1311.0801 3575.4316 -1297.1084 c3574.4277 -1293.1396 3570.9229 -1291.9385 3567.8398 -1292.6895 C3566.6064 -1292.085 3565.082 -1291.9541 3563.3379 -1292.5684 c3558.7949 -1294.166 3554.4502 -1294.1016 3549.6963 -1293.873 c3544.6787 -1293.6309 3539.875 -1294.2236 3534.8916 -1294.7813 c3533.5488 -1294.9316 3532.207 -1295.0957 3530.8652 -1295.2549 C3529.9385 -1289.7109 3529.374 -1284.0928 3528.4199 -1278.542 c3526.1172 -1265.1436 3523.7871 -1251.7988 3521.9766 -1238.3232 c3520.1641 -1224.832 3516.2949 -1211.7705 3514.1582 -1198.3086 c3511.9102 -1184.1426 3509.7021 -1169.999 3506.3711 -1156.0371 c3504.8545 -1149.6816 3503.3418 -1143.3066 3502.498 -1136.8184 c3501.6895 -1130.5938 3501.4258 -1124.333 3500.2949 -1118.1465 c3497.8193 -1104.5986 3493.8662 -1091.4014 3493.6963 -1077.5244 c3493.5361 -1064.3911 3489.5303 -1051.1133 3488.498 -1038.0029 c3487.3574 -1023.499 3488.2324 -1009 3488.2324 -994 c3488.2324 -986 3475.2324 -986 3475.2324 -994 C3475.2305 -994.1416 3475.2256 -994.3896 V3474.4238 -995.3813 3473.9063 -996.6792 3473.8662 -998.2896 c3473.7012 -1004.8867 3470.4854 -1010.1313 3469.2617 -1016.4258 c3468.7412 -1019.1006 3468.4541 -1021.8237 3468.0059 -1024.5117 c3467.4238 -1027.9971 3465.7637 -1031.1016 3464.4287 -1034.3438 c3459.4258 -1046.4961 3455.3662 -1059.5146 3451.9551 -1072.1987 c3448.6582 -1084.4551 3445.8828 -1096.7627 3441.5195 -1108.6914 c3439.4033 -1114.4775 3440.125 -1120.959 3437.9219 -1126.6846 c3436.625 -1130.0557 3435.6006 -1133.5322 3434.3789 -1136.9307 c3433.0947 -1140.5 3431.0127 -1143.6416 3429.7773 -1147.2246 c3427.5186 -1153.7783 3424.5391 -1160.0723 3422.0664 -1166.5459 c3419.7617 -1172.5771 3417.9727 -1178.7686 3415.8252 -1184.8516 c3413.8848 -1190.3457 3412.248 -1195.9131 3409.9902 -1201.3242 c3407.4795 -1207.3408 3405.0078 -1213.8037 3403.8252 -1220.2148 c3402.6152 -1226.7705 3403.3477 -1233.4453 3401.9297 -1239.9414 c3400.2734 -1247.5313 3398.2559 -1254.9688 3396.96 -1262.6396 c3395.7695 -1269.6816 3394.3145 -1276.6406 3392.1309 -1283.4473 c3390.2432 -1289.3291 3387.9922 -1295.1641 3386.667 -1301.207 c3386.4375 -1302.25 3386.4453 -1303.2158 3386.6318 -1304.0918 C3376.5322 -1305.0527 3366.3281 -1304.8818 3356.2012 -1305.6221 c3345.6816 -1306.3906 3335.1826 -1307.3047 3324.6279 -1307.3633 cf0 D3404.2979 -1288.2695 m3406.5137 -1280.96 3408.1934 -1273.623 3409.4961 -1266.0957 c3410.71 -1259.0723 3412.3506 -1252.2139 3414.0264 -1245.2891 c3414.9023 -1241.6699 3415.8262 -1237.9736 3415.8301 -1234.2383 c3415.832 -1230.7207 3415.8594 -1227.1592 3416.3604 -1223.6709 c3417.2061 -1217.7861 3419.7441 -1211.6621 3421.9541 -1206.1494 c3424.3223 -1200.2402 3426.0977 -1194.2266 3428.3604 -1188.3076 c3430.6582 -1182.2969 3432.3926 -1176.0527 3434.6016 -1170.002 c3437.1172 -1163.1113 3439.6152 -1155.1387 3443.2324 -1148.7695 c3446.5195 -1142.9824 3448.2188 -1136.3623 3450.457 -1130.1406 c3452.6816 -1123.958 3451.8262 -1116.918 3454.5576 -1110.8594 c3456.8574 -1105.7607 3458.1309 -1099.6504 3459.8936 -1094.2861 c3462.0596 -1087.6934 3463.1426 -1080.668 3464.9463 -1073.959 c3467.9063 -1062.9536 3471.4121 -1051.5537 3475.7021 -1040.8564 C3476.7607 -1053.1182 3479.5049 -1065.2388 3480.6963 -1077.4766 c3481.3271 -1083.9561 3481.5908 -1090.3633 3482.668 -1096.8184 c3483.7637 -1103.3887 3485.2803 -1109.8994 3486.6816 -1116.4082 c3489.5078 -1129.5391 3489.9248 -1142.9648 3493.0186 -1156.0889 c3496.1377 -1169.3193 3498.668 -1182.6162 3500.7373 -1196.0527 c3501.8145 -1203.0498 3502.9199 -1210.0391 3504.2891 -1216.9844 c3505.7012 -1224.1445 3507.8662 -1231.04 3508.959 -1238.2822 c3510.8896 -1251.085 3512.5977 -1263.877 3514.9199 -1276.6221 c3516.1162 -1283.1855 3516.9482 -1289.7529 3517.8896 -1296.3457 c3517.9121 -1296.5039 3517.9385 -1296.6631 3517.9619 -1296.8213 C3513.7344 -1297.3379 3509.5059 -1297.8379 3505.2715 -1298.2568 c3500.2598 -1298.7529 3495.167 -1298.4102 3490.1387 -1298.5908 c3485.6484 -1298.752 3481.3389 -1299.9375 3476.8848 -1300.3115 c3467.4961 -1301.0996 3457.9297 -1300.4629 3448.5117 -1300.7324 c3438.1924 -1301.0273 3427.9873 -1302.4951 3417.6855 -1302.9863 c3411.6182 -1303.2764 3405.5645 -1303.2393 3399.5127 -1303.373 C3400.7803 -1298.2295 3402.7607 -1293.3389 3404.2979 -1288.2695 cf3387.2217 -1317.041 m3397.3691 -1316.0625 3407.5088 -1316.3848 3417.6855 -1315.9863 c3428.6191 -1315.5596 3439.4473 -1313.9912 3450.3994 -1313.6787 c3459.7305 -1313.4121 3469.1309 -1313.9629 3478.4375 -1313.1816 c3483.0244 -1312.7959 3487.4111 -1311.6885 3492.0303 -1311.5225 c3497.0879 -1311.3418 3502.1152 -1311.5693 3507.1631 -1311.0703 c3511.4297 -1310.6484 3515.6924 -1310.1387 3519.9551 -1309.6123 C3520.1221 -1311.0322 3520.251 -1312.4502 3520.3145 -1313.8633 c3520.6904 -1322.2109 3533.6914 -1322.248 3533.3145 -1313.8633 c3533.2285 -1311.9541 3533.0605 -1310 3532.8408 -1308.0352 C3534.168 -1307.8779 3535.4941 -1307.7139 3536.8203 -1307.5654 c3541.7734 -1307.0107 3546.4248 -1306.7158 3551.4043 -1306.9551 c3555.3477 -1307.1445 3559.2617 -1306.9893 3563.0781 -1306.1533 C3562.5967 -1309.8857 3561.2148 -1313.7676 3560.3828 -1317.0488 c3558.8154 -1323.2256 3555.9248 -1329.041 3554.4043 -1335.1826 c3553.9551 -1336.998 3553.5693 -1338.9258 3552.793 -1340.6377 c3552.5664 -1341.1367 3552.374 -1341.4063 3552.2383 -1341.5605 C3550.6621 -1341.6924 3549.1035 -1341.7813 3547.5293 -1342.0195 c3544.7881 -1342.4355 3541.3545 -1342.2803 3538.748 -1343.1152 c3535.5889 -1344.127 3532.377 -1345.0254 3529.0762 -1345.4268 c3522.7207 -1346.2002 3516.4414 -1347.6992 3510.0391 -1348.2197 c3503.9707 -1348.7129 3497.748 -1348.3467 3491.6621 -1348.3467 c3478.582 -1348.3467 3466.1191 -1352.0664 3453.0371 -1352.209 c3440.041 -1352.3516 3427.0586 -1350.6494 3414.2188 -1348.835 c3407.5039 -1347.8857 3400.457 -1347.7695 3393.6699 -1347.7422 c3386.667 -1347.7148 3380.7881 -1350.1006 3374.1299 -1351.8232 c3369.7832 -1352.9482 3363.1348 -1355.6348 3358.8086 -1353.5244 c3354.7578 -1351.5479 3351.7832 -1347.2275 3348.8184 -1343.9736 c3345.1543 -1339.9521 3342.7715 -1334.2559 3339.5225 -1329.8008 c3336.8828 -1326.1816 3333.5771 -1323.7734 3331.3369 -1320.2158 C3339.6367 -1319.9248 3347.916 -1319.2451 3356.2012 -1318.6221 c3366.5293 -1317.8457 3376.9219 -1318.0342 3387.2217 -1317.041 cf*U2863.377 -1789.7715 m2867.1387 -1786.1348 2871.8408 -1783.2588 2876.9023 -1781.8789 c2884.9824 -1779.6777 2881.5479 -1767.1367 2873.4473 -1769.3438 c2866.2637 -1771.3008 2859.5195 -1775.4219 2854.1855 -1780.5781 c2848.1484 -1786.4141 2857.3506 -1795.5967 2863.377 -1789.7715 cf2894.7969 -1762.4492 m2900.8125 -1755.4375 2908.1113 -1749.9287 2915.291 -1744.1885 c2918.4727 -1741.6445 2922.0938 -1739.6826 2925.3223 -1737.1533 c2927.877 -1735.1523 2929.8877 -1731.1924 2932.9141 -1729.9668 c2936.1953 -1728.6387 2938.4756 -1725.6885 2937.4531 -1721.9717 c2936.5957 -1718.8535 2932.7471 -1716.0996 2929.457 -1717.4316 c2925.2051 -1719.1533 2922.374 -1721.501 2919.3604 -1724.9111 c2916.3213 -1728.3516 2912.2666 -1729.9297 2908.8301 -1732.7637 c2900.8369 -1739.3555 2892.3906 -1745.3467 2885.6055 -1753.2559 c2880.1777 -1759.582 2889.3301 -1768.8213 2894.7969 -1762.4492 cf3224.708 -1521.2891 m3218.4629 -1525.0068 3212.1416 -1528.5957 3205.7275 -1532.0146 c3198.8623 -1535.6748 3191.6484 -1538.5313 3184.7568 -1542.1113 c3178.3027 -1545.4629 3172.2402 -1549.5625 3166.1182 -1553.4717 c3159.1162 -1557.9424 3151.3232 -1561.2949 3143.8955 -1565.0098 c3129.7061 -1572.1035 3116.7803 -1580.1641 3103.9023 -1589.4336 c3090.9922 -1598.7256 3077.8701 -1607.6357 3064.6357 -1616.459 c3052.0049 -1624.8789 3038.9033 -1632.5859 3026.8838 -1641.8594 c3015.1289 -1650.9287 3002.1729 -1658.1426 2989.9834 -1666.5977 c2984.3408 -1670.5117 2978.1855 -1674.4434 2973.2539 -1679.2373 c2968.1006 -1684.2471 2962.4531 -1688.9971 2956.8359 -1693.4668 c2953.3535 -1696.2373 2949.7617 -1698.5654 2945.6641 -1700.3271 c2937.9824 -1703.6299 2944.6113 -1714.8262 2952.2266 -1711.5518 c2965.1768 -1705.9834 2974.1572 -1694.5322 2985.1191 -1686.1445 c2996.9287 -1677.1094 3009.5088 -1669.4199 3022.0137 -1661.4238 c3027.9609 -1657.6211 3033.4072 -1653.0527 3039.0381 -1648.8105 c3045.2031 -1644.166 3051.958 -1640.5107 3058.3672 -1636.2373 c3071.6797 -1627.3613 3085.1484 -1618.6787 3098.2227 -1609.4541 c3110.916 -1600.499 3123.2539 -1591.0439 3136.6523 -1583.1367 c3150.4453 -1574.9961 3165.4238 -1569.3154 3178.9795 -1560.6699 c3191.666 -1552.5781 3205.541 -1547.0313 3218.6875 -1539.7656 c3231.8867 -1532.4697 3244.6299 -1524.3789 3257.5361 -1516.5879 c3270.7607 -1508.6045 3284.3906 -1501.3408 3297.75 -1493.5938 c3311.6777 -1485.5186 3325.7295 -1478.1455 3340.4414 -1471.5479 c3369.4434 -1458.54 3399.9805 -1449.5234 3430.1777 -1439.8525 c3445.5547 -1434.9277 3460.6094 -1429.7119 3476.458 -1426.4111 c3491.875 -1423.1992 3507.1074 -1419.209 3522.6025 -1416.3242 c3538.4697 -1413.3701 3554.3408 -1410.3213 3570.2607 -1407.668 c3577.5723 -1406.4492 3585.04 -1405.5811 3592.1943 -1403.6133 c3595.2959 -1402.7607 3598.3408 -1401.8066 3601.501 -1401.1797 c3604.5088 -1400.584 3607.7754 -1400.9961 3610.833 -1400.668 c3616 -1400.1113 3620.3789 -1398.3906 3624.3066 -1394.9629 c3630.6328 -1389.4395 3621.3994 -1380.2832 3615.1133 -1385.7695 c3611.2207 -1389.168 3604.3623 -1387.6953 3599.6406 -1388.4043 c3592.3789 -1389.4951 3585.4229 -1392.0293 3578.1543 -1393.2402 c3562.2578 -1395.8906 3546.4668 -1399.4385 3530.5508 -1401.8574 c3514.8643 -1404.2412 3499.3584 -1407.7129 3483.9521 -1411.4707 c3468.25 -1415.3018 3452.6436 -1418.459 3437.3125 -1423.7441 c3422.3701 -1428.8945 3407.0869 -1432.9541 3392.1172 -1437.9893 c3377.1699 -1443.0176 3362.5859 -1449.0586 3347.7988 -1454.5234 c3318.041 -1465.5205 3290.8252 -1482.4199 3263.376 -1498.0566 c3250.3096 -1505.5 3237.6289 -1513.5996 3224.708 -1521.2891 cf3736.6953 -1379.6992 m3726.8604 -1380.4688 3716.9814 -1382.2461 3707.1299 -1382.5 c3698.7627 -1382.7158 3698.7539 -1395.7158 3707.1416 -1395.5 c3716.4111 -1395.2617 3725.6914 -1393.5605 3734.9414 -1392.8359 c3745.4258 -1392.0156 3755.7891 -1391.3818 3766.2871 -1390.7725 c3787.5059 -1389.54 3809 -1390.0352 3830 -1390.0352 c3838 -1390.0352 3838 -1377.0352 3830 -1377.0352 c3809 -1377.0352 3787.5039 -1376.5254 3766.2871 -1377.7725 c3756.3809 -1378.3545 3746.585 -1378.9248 3736.6953 -1379.6992 cf3828.8203 -1656.0068 m3828.6211 -1656.0273 3828.3145 -1656.0527 3827.873 -1656.0654 c3826.7734 -1656.0967 3825.6582 -1655.9785 3824.5645 -1655.8945 c3822.0068 -1655.6992 3819.5313 -1655.1621 3817.0098 -1654.6943 c3809.3896 -1653.2813 3801.7715 -1651.6738 3794.0986 -1650.5742 c3779.2559 -1648.4473 3763.4883 -1648.0713 3748.5459 -1649.3193 c3733.8174 -1650.5488 3719.5127 -1655.9521 3705.4141 -1660.0537 c3690.0449 -1664.5244 3675.1377 -1667.4688 3659.0342 -1666.8828 c3652.1934 -1666.6338 3644.875 -1665.6328 3638.2568 -1663.8682 c3631.1729 -1661.9785 3624.4063 -1658.0967 3617.6543 -1655.2725 c3611.6592 -1652.7656 3606.6533 -1648.5078 3600.415 -1646.2539 c3593.2783 -1643.6758 3585.9219 -1642.8945 3578.3848 -1643.2568 c3570.8398 -1643.6201 3563.2422 -1641.7402 3555.6973 -1641.2061 c3547.3164 -1640.6123 3538.8447 -1640.5781 3530.4473 -1640.7295 c3523.9199 -1640.8457 3515.8086 -1641.8467 3509.7705 -1644.3438 c3503.0195 -1647.1357 3497.0303 -1651.0947 3490.7002 -1654.6787 c3478.6436 -1661.5039 3467.9639 -1670.0742 3455.2266 -1675.7363 c3441.5439 -1681.8184 3426.9678 -1684.3193 3412.0596 -1684.4121 c3398.4238 -1684.4971 3384.7676 -1685.3662 3371.1699 -1683.9453 c3364.8613 -1683.2861 3358.3828 -1681.7393 3352.5781 -1679.1631 c3345.6934 -1676.1074 3338.2852 -1674.2441 3331.1816 -1671.7344 c3324.291 -1669.3008 3318.0293 -1665.6191 3311.1582 -1663.127 c3303.6416 -1660.4023 3295.5547 -1659.2734 3287.6113 -1658.7832 c3272.1152 -1657.8271 3255.5576 -1660.0273 3240.2285 -1662.2363 c3232.7979 -1663.3066 3225.4707 -1664.8691 3218.1475 -1666.502 c3210.1641 -1668.2822 3201.9336 -1669.4219 3194.0293 -1671.4512 c3178.8857 -1675.3389 3163.9336 -1681.1768 3149.457 -1687.0391 c3139.9238 -1690.8994 3130.2012 -1695.6826 3120.2021 -1698.1348 c3115.8252 -1699.208 3111.8652 -1700.3887 3107.7207 -1702.2236 c3103.0566 -1704.2881 3097.2822 -1704.6709 3092.2744 -1705.5039 c3081.207 -1707.3457 3069.5371 -1707.3164 3058.3438 -1708.3359 c3046.4883 -1709.416 3034.626 -1710.3193 3022.7158 -1710.3682 c3014.334 -1710.4023 3014.3311 -1723.4023 3022.7158 -1723.3682 c3038.3838 -1723.3037 3053.9541 -1721.708 3069.5449 -1720.3193 c3084.3652 -1719 3100.4121 -1719.4434 3114.2813 -1713.4492 c3119.6816 -1711.1152 3125.5977 -1710.6787 3130.9541 -1708.1953 c3138.0156 -1704.9209 3145.6895 -1702.5273 3152.9121 -1699.5752 c3167.4053 -1693.6523 3182.3633 -1688.0674 3197.4854 -1683.9863 c3204.7461 -1682.0273 3212.4121 -1681.0898 3219.7715 -1679.4473 c3227.7402 -1677.6689 3235.7227 -1675.8193 3243.8262 -1674.7598 c3259.3936 -1672.7236 3275.7715 -1670.7568 3291.458 -1672.0625 c3306.8975 -1673.3467 3320.2295 -1681.8682 3334.6963 -1686.6484 c3341.0518 -1688.749 3347.2207 -1691.208 3353.5342 -1693.3887 c3360.2422 -1695.7051 3367.4277 -1696.6328 3374.4648 -1697.2656 c3388.0986 -1698.4902 3402.0137 -1697.626 3415.6807 -1697.3662 c3430.3613 -1697.0879 3444.9307 -1694.1494 3458.4482 -1688.4121 c3471.459 -1682.8906 3482.5225 -1674.9717 3494.4668 -1667.5664 c3500.0908 -1664.0801 3505.8145 -1660.5693 3511.7373 -1657.6113 c3518.3594 -1654.3027 3526.9209 -1653.6953 3534.2305 -1653.6963 c3542.0449 -1653.6973 3549.8516 -1653.792 3557.6484 -1654.3438 c3561.6553 -1654.6279 3565.626 -1655.1416 3569.582 -1655.8232 c3573.7197 -1656.5371 3577.6201 -1656.2666 3581.7998 -1656.1113 c3588.3486 -1655.8691 3595.3955 -1657.709 3601.2314 -1660.6641 c3604.0947 -1662.1133 3606.793 -1663.9092 3609.5215 -1665.5928 c3612.9043 -1667.6807 3616.8916 -1668.9541 3620.5273 -1670.5684 c3626.751 -1673.3311 3632.8779 -1676.2129 3639.6025 -1677.4951 c3647.1934 -1678.9424 3655.1191 -1679.833 3662.8359 -1679.9912 c3678.4072 -1680.3096 3694.1104 -1677.4063 3708.8691 -1672.5889 c3720.0488 -1668.9404 3731.3711 -1666.2754 3742.707 -1663.3154 c3754.1836 -1660.3203 3767.7451 -1661.6641 3779.499 -1662.1875 c3791.584 -1662.7256 3803.3926 -1665.3457 3815.2539 -1667.5459 c3822.9678 -1668.9766 3832.9941 -1671.4082 3838.4375 -1664.1377 c3842.9785 -1658.0732 3834.2168 -1652.2158 3828.8203 -1656.0068 Cf2939.4482 -1921.249 m2946.7744 -1920.9766 2953.79 -1919.5938 2961.002 -1918.457 c2968.6387 -1917.2539 2976.4238 -1917.0225 2984.1055 -1916.1963 c2998.584 -1914.6387 3013.5117 -1912.0977 3027.6201 -1908.4629 c3042.0566 -1904.7422 3055.6348 -1898.2324 3069.126 -1892.0313 c3081.8281 -1886.1924 3094.6504 -1881.0703 3107.6758 -1876.041 c3113.9697 -1873.6104 3120.0938 -1870.6689 3126.2783 -1867.9736 c3129.3496 -1866.6348 3132.4727 -1866.54 3135.707 -1865.8203 c3138.7754 -1865.1377 3141.6973 -1863.7949 3144.6885 -1862.8486 c3147.165 -1862.0654 3149.3584 -1860.4775 3151.9727 -1860.1553 c3155.1514 -1859.7637 3158.4102 -1860.0283 3161.6045 -1859.8086 c3169.5518 -1859.2598 3177.1992 -1858.5615 3185.1973 -1858.6777 c3192.9346 -1858.791 3200.6904 -1859.2158 3208.3428 -1860.4063 c3215.9092 -1861.582 3223.2666 -1864.209 3230.5049 -1866.6357 c3237.5664 -1869.002 3244.6016 -1871.4443 3251.667 -1873.7998 c3258.5195 -1876.084 3264.3887 -1880.0645 3271.123 -1882.5234 c3285.2109 -1887.668 3298.9502 -1893.0586 3313.7422 -1895.9258 c3320.7764 -1897.2891 3327.9473 -1898.0322 3335.1055 -1898.2168 c3343.4668 -1898.4316 3351.7217 -1899.4795 3360.0674 -1899.9141 c3367.8262 -1900.3174 3375.6426 -1898.9141 3383.2988 -1897.8145 c3390.8838 -1896.7256 3398.373 -1895.1377 3405.5918 -1892.5352 c3413.415 -1889.7148 3410.041 -1877.1494 3402.1348 -1880 c3388.5215 -1884.9082 3372.6016 -1887.5664 3358.1387 -1886.8135 c3350.4336 -1886.4121 3342.8369 -1885.2832 3335.1055 -1885.2168 c3327.2842 -1885.1494 3319.5645 -1883.9795 3311.9414 -1882.3018 c3298.2344 -1879.2861 3283.4746 -1874.7734 3271.0439 -1868.1895 c3257.8271 -1861.1885 3243.1182 -1857.0645 3228.9023 -1852.4258 c3213.9707 -1847.5547 3199.0176 -1845.8789 3183.3516 -1845.6514 c3175.9863 -1845.5439 3168.9199 -1846.0781 3161.6045 -1846.8086 c3154.7559 -1847.4912 3148.6611 -1846.792 3142.251 -1849.8594 c3139.9346 -1850.9678 3137.3174 -1851.667 3134.8887 -1852.5068 c3132.1387 -1853.458 3128.7314 -1853.0068 3126.1797 -1854.0439 c3119.2646 -1856.8535 3112.251 -1859.7148 3105.5 -1862.8955 c3099.832 -1865.5664 3093.4922 -1867.5898 3087.5771 -1869.6768 c3080.625 -1872.1279 3074.3848 -1876.1826 3067.4355 -1878.6338 c3060.7715 -1880.9844 3054.3916 -1884.6055 3047.9199 -1887.4531 c3040.7773 -1890.5947 3033.4521 -1893.2813 3025.9541 -1895.4385 c3011.9971 -1899.4541 2996.8057 -1901.8301 2982.3779 -1903.3818 c2975.2988 -1904.1436 2968.1904 -1904.5166 2961.125 -1905.4258 c2953.2119 -1906.4434 2945.6094 -1908.0205 2937.6045 -1908.3174 c2922.127 -1908.8916 2906.5264 -1908.584 2891.04 -1908.4385 c2876.4629 -1908.3008 2861.1191 -1905.3574 2846.9795 -1901.9775 c2831.9121 -1898.376 2817.2549 -1892.8643 2802.0859 -1889.7266 c2787.3701 -1886.6826 2771.8213 -1887.9639 2756.8848 -1887.9639 c2740.8047 -1887.9639 2724.2979 -1888.3896 2708.3066 -1889.9404 c2693.501 -1891.377 2678.4834 -1891.4541 2663.918 -1894.6855 c2648.2363 -1898.165 2632.5059 -1902.3672 2617.25 -1907.3877 c2601.6885 -1912.5088 2585.9199 -1918.2197 2571.0605 -1925.1406 c2557.6934 -1931.3672 2546.209 -1940.8965 2533.0957 -1947.5947 c2525.6289 -1951.4092 2532.209 -1962.625 2539.6582 -1958.8193 c2552.2441 -1952.3896 2563.3984 -1943.5684 2576 -1937.1563 c2590.0586 -1930.0039 2605.7725 -1924.9189 2620.7061 -1919.9238 c2635.4082 -1915.0049 2650.5381 -1911.332 2665.5859 -1907.6406 c2680.1025 -1904.0791 2695.3418 -1904.1982 2710.1699 -1902.7598 c2726.1699 -1901.208 2742.7246 -1900.9639 2758.8105 -1900.9639 c2773.8604 -1900.9639 2789.082 -1899.875 2803.8184 -1903.4238 c2818.957 -1907.0684 2833.6729 -1912.4678 2848.9219 -1915.7373 c2863.1885 -1918.7959 2878.3271 -1921.3184 2892.9346 -1921.4561 c2908.4102 -1921.6016 2923.9824 -1921.8223 2939.4482 -1921.249 cf3840.0117 -1810.0059 m3834.6406 -1812.0098 3829.1768 -1814.0498 3824.0801 -1816.4473 c3817.4736 -1819.5537 3809.7471 -1819.4131 3803.3496 -1822.748 c3797.4697 -1825.8145 3792.3965 -1830.3906 3786.2539 -1832.9697 c3779.123 -1835.9639 3772.1191 -1838.0352 3764.4775 -1839.3154 c3748.8984 -1841.9238 3733.002 -1840.3252 3717.2988 -1840.1582 c3709.5264 -1840.0752 3701.5586 -1837.7803 3693.9229 -1836.4082 c3690.1641 -1835.7334 3686.3135 -1835.3965 3682.5996 -1834.5215 c3678.709 -1833.6055 3675.1465 -1831.4072 3671.6162 -1829.6172 c3665.793 -1826.665 3659.8047 -1823.8809 3653.8359 -1821.2285 c3646.9453 -1818.168 3640.8086 -1814.5342 3633.3701 -1812.7617 c3619.2715 -1809.4014 3606.0303 -1805.0791 3591.3408 -1804.6475 c3575.6074 -1804.1855 3559.7734 -1805.418 3544.0459 -1805.8193 c3531.5225 -1806.1387 3519.4072 -1806.0723 3507.1357 -1808.9941 c3495.2734 -1811.8184 3483.8105 -1816.9893 3473.6338 -1823.6641 c3468.9336 -1826.7471 3464.5195 -1830.3291 3460.4355 -1834.1846 c3455.8535 -1838.5088 3452.417 -1844.0889 3447.9424 -1848.585 c3443.4707 -1853.0781 3438.1953 -1856.835 3433.4199 -1861.0068 c3428.1592 -1865.6045 3422.7871 -1869.9443 3416.9766 -1873.8252 c3410.043 -1878.4551 3416.5439 -1889.7207 3423.5371 -1885.0498 c3429.2861 -1881.2109 3434.5752 -1876.9639 3439.8809 -1872.5488 c3445.6631 -1867.7373 3451.707 -1862.9795 3457.1348 -1857.7773 c3461.7451 -1853.3594 3465.0996 -1847.8174 3469.6279 -1843.377 c3474.3682 -1838.7275 3479.8086 -1834.9404 3485.5156 -1831.584 c3496.876 -1824.9014 3509.9238 -1820.6758 3523.0313 -1819.3613 c3529.9883 -1818.6641 3537.0625 -1818.9805 3544.0459 -1818.8193 c3552.333 -1818.6279 3560.6172 -1818.292 3568.9023 -1818.0244 c3584.0723 -1817.5352 3598.834 -1817.1494 3613.6836 -1820.7764 c3620.25 -1822.3809 3626.7148 -1824.4102 3633.252 -1826.1348 c3636.6094 -1827.0205 3639.5439 -1828.4277 3642.3867 -1830.4043 c3645.3984 -1832.499 3649.8623 -1833.5938 3653.2158 -1835.1865 c3659.2568 -1838.0557 3665.2383 -1841.0273 3671.2471 -1843.9639 c3678.5869 -1847.5508 3686.3906 -1848.1855 3694.3242 -1849.6455 c3701.8242 -1851.0254 3709.6475 -1853.1289 3717.2988 -1853.1582 c3725.6924 -1853.1895 3734.0801 -1853.6348 3742.4717 -1853.7441 c3755.6387 -1853.918 3769.1084 -1852.6484 3781.7227 -1848.6914 c3787.501 -1846.8789 3793.3545 -1844.2295 3798.5322 -1841.1045 c3801.3652 -1839.3945 3804.0752 -1837.4805 3806.8818 -1835.7275 c3810.0469 -1833.75 3813.1465 -1833.1699 3816.7432 -1832.375 c3824.791 -1830.5977 3832.3984 -1827.3721 3840.0117 -1824.167 C3840.0117 -1810.0059 Lf2878.9219 -2159.9268 m2887.6484 -2151.6006 2895.7861 -2142.6699 2904.2773 -2134.1045 c2909.2754 -2129.0635 2913.9219 -2123.6895 2918.3389 -2118.1367 c2923.1143 -2112.1338 2927.0518 -2105.416 2932.0254 -2099.5996 c2935.6182 -2095.3984 2940.291 -2091.9961 2943.4268 -2087.4268 c2947.2813 -2081.8115 2953.3965 -2077.959 2957.6406 -2072.5586 c2959.8037 -2069.8037 2963.1699 -2067.6191 2965.8369 -2065.373 c2968.5078 -2063.1221 2971.0684 -2060.7246 2973.6875 -2058.4121 c2978.8662 -2053.8389 2983.5879 -2048.7617 2988.4229 -2043.8369 c2992.8496 -2039.3281 2997.4141 -2034.8975 3002.4893 -2031.1182 c3008.7813 -2026.4326 3015.9854 -2022.8936 3022.7822 -2019.0098 c3029.1777 -2015.3545 3035.7402 -2011.8916 3041.8857 -2007.835 c3046.8145 -2004.5811 3054.0674 -2000.7646 3060.0977 -2000.6582 c3066.9277 -2000.5381 3073.4834 -1998.1084 3080.2227 -1997.8955 c3086.3838 -1997.7012 3093.2266 -1996.252 3099.1719 -1998.3086 c3102.1982 -1999.3555 3105.2266 -2000.458 3108.4668 -2000.6113 c3111.582 -2000.7598 3114.6113 -2000.6094 3117.668 -2001.3193 c3124.7656 -2002.9678 3131.8594 -2005.209 3139.1719 -2005.9209 c3142.332 -2006.2285 3145.3945 -2005.873 3148.4414 -2006.874 c3151.3799 -2007.8389 3154.1641 -2009.0498 3157.1953 -2009.7266 c3164.4375 -2011.3438 3171.7793 -2011.5605 3178.8721 -2013.9248 c3185.2998 -2016.0684 3192.3574 -2017.373 3198.5176 -2020.1748 c3204.9258 -2023.0898 3211.3984 -2026.5293 3218.0508 -2028.8271 c3224.2422 -2030.9668 3230.1543 -2034.8057 3235.6553 -2038.3281 c3241.5781 -2042.1211 3245.2637 -2047.7324 3250.4141 -2052.3809 c3252.833 -2054.5645 3254.7549 -2057.1396 3257.3105 -2059.2324 c3259.75 -2061.2285 3262.6387 -2062.7002 3265.0332 -2064.7148 c3267.2871 -2066.6113 3269.2979 -2068.6523 3271.7744 -2070.2959 c3274.6465 -2072.2021 3277.8926 -2073.3574 3280.7637 -2075.2188 c3285.7021 -2078.4199 3290.5947 -2082.0928 3295.3916 -2085.5342 c3301.2207 -2089.7158 3305.9053 -2094.958 3312.0898 -2098.7637 c3317.5049 -2102.0957 3324 -2105.4688 3330.3828 -2106.1211 c3337.9316 -2106.8906 3345.4697 -2106.1064 3353.0273 -2105.9004 c3360.4414 -2105.6973 3367.6777 -2105.7236 3375.04 -2104.624 c3381.9482 -2103.5928 3389.125 -2100.917 3395.625 -2098.4189 c3408.4102 -2093.5039 3418.3555 -2084.4199 3427.1914 -2074.1748 c3431.498 -2069.1816 3435.4727 -2063.8994 3439.4639 -2058.6543 c3443.9355 -2052.7783 3448.8809 -2047.168 3453.1914 -2041.1875 c3459.6807 -2032.1865 3465.3301 -2022.5703 3473.2197 -2014.6748 c3476.9082 -2010.9844 3481.2998 -2007.8506 3486.1572 -2005.8945 c3492.4795 -2003.3477 3499.127 -2000.5322 3505.665 -1998.6035 c3508.9014 -1997.6484 3512.3594 -1997.9951 3515.6904 -1997.8516 c3519.293 -1997.6963 3522.6885 -1996.7715 3526.1719 -1995.9561 c3532.1973 -1994.5439 3539.8047 -1997.3418 3545.5781 -1999.0928 c3550.9844 -2000.7334 3557.0742 -2002.7559 3561.5107 -2006.3428 c3563.9766 -2008.3359 3566.1816 -2010.6514 3568.6055 -2012.6982 c3571.4951 -2015.1367 3575.6348 -2016.6787 3578.2227 -2019.2793 c3582.9131 -2023.9912 3586.293 -2029.3262 3591.4473 -2033.6963 c3596.2041 -2037.7314 3599.8906 -2042.8613 3604.5938 -2047.0547 c3614.5303 -2055.9131 3626.6787 -2060.9902 3638.2334 -2067.4805 c3643.9219 -2070.6758 3650.4531 -2071.8418 3656.833 -2072.6543 c3664.5566 -2073.6367 3672.1934 -2074.0791 3679.9072 -2075.4336 c3695.3408 -2078.1445 3710.6543 -2080.124 3726.3574 -2079.3545 c3731.7012 -2079.0918 3737.125 -2078.7734 3742.4521 -2078.2822 c3747.2676 -2077.8379 3753.0859 -2076.5039 3754.3936 -2071.0566 c3756.1172 -2063.8779 3746.5977 -2060.3457 3742.9688 -2065.1758 C3742.9287 -2065.1855 3742.9004 -2065.1914 3742.8574 -2065.2012 c3742.0039 -2065.3965 3741.1016 -2065.4004 3740.2324 -2065.459 c3738.1113 -2065.5996 3736.0176 -2065.54 3733.9004 -2065.7637 c3725.8867 -2066.6123 3717.8281 -2066.749 3709.7842 -2066.3545 c3702.1309 -2065.9785 3694.5723 -2064.8506 3687.0313 -2063.5439 c3679.2539 -2062.1953 3671.1553 -2060.1631 3663.2402 -2060.0791 c3656.9863 -2060.0137 3650.4473 -2059.0391 3644.7949 -2056.2549 c3638.3496 -2053.0801 3632.3086 -2049.1563 3625.8242 -2046.0439 c3620.2764 -2043.3818 3616.2715 -2039.9893 3611.6572 -2035.9922 c3606.8633 -2031.8398 3603.2715 -2026.752 3598.4238 -2022.6211 c3593.5645 -2018.4814 3590.5 -2010.6016 3584.7402 -2007.7041 c3578.2979 -2004.4629 3573.959 -1999.3662 3568.2197 -1995.1895 c3563.2598 -1991.5791 3557.2656 -1989.3877 3551.5039 -1987.3877 c3545.3438 -1985.25 3538.1367 -1983.1563 3531.6211 -1982.6816 c3524.9863 -1982.1992 3518.7852 -1984.8496 3512.1777 -1984.9551 c3504.6836 -1985.0742 3498.5723 -1987.1719 3491.7666 -1990.1279 c3486.1387 -1992.5723 3480.2832 -1993.9727 3474.9004 -1997.0313 c3469.7549 -1999.9541 3465.2227 -2004.0713 3461.2285 -2008.3975 c3453.416 -2016.8623 3448.0547 -2027.1465 3440.7578 -2035.9844 c3431.9033 -2046.71 3424.1152 -2058.2764 3414.793 -2068.6201 c3410.5098 -2073.373 3405.8066 -2077.7734 3400.582 -2081.4746 c3394.8613 -2085.5283 3387.8457 -2087.5771 3381.2061 -2089.542 c3367.0752 -2093.7236 3351.9463 -2093.3486 3337.2773 -2093.4893 c3322.4023 -2093.6328 3312.9443 -2082.5566 3301.9531 -2074.3086 c3297.1777 -2070.7256 3292.1387 -2067.54 3287.3242 -2063.9941 c3285.0098 -2062.2881 3282.0713 -2061.3223 3279.5703 -2059.8906 c3276.626 -2058.2041 3274.6484 -2055.3389 3271.7969 -2053.5703 c3260.3379 -2046.4629 3253.4951 -2034.4668 3242.2168 -2027.1035 c3236.6846 -2023.4912 3230.7246 -2019.9082 3224.5801 -2017.4658 c3218.0986 -2014.8887 3211.2539 -2012.1973 3205.0781 -2008.9502 c3199.1191 -2005.8164 3192.1846 -2004.6748 3185.8408 -2002.5605 c3178.5146 -2000.1182 3171.2656 -1999.207 3163.7891 -1997.4863 c3160.7051 -1996.7764 3157.876 -1996.5381 3154.8379 -1995.4199 c3151.7813 -1994.2959 3148.918 -1993.1582 3145.6182 -1993.1533 c3142.2402 -1993.1484 3138.8838 -1993.0117 3135.5527 -1992.4277 c3131.7559 -1991.7627 3128.3359 -1989.9199 3124.4854 -1989.3691 c3121.2598 -1988.9092 3118.1309 -1988.126 3114.8789 -1987.7988 c3111.6855 -1987.4775 3108.8027 -1987.7744 3105.6777 -1986.8398 c3099.0127 -1984.8477 3093.4277 -1984.2002 3086.4316 -1984.5654 c3079.8838 -1984.9072 3073.9043 -1985.7734 3067.4629 -1986.9258 c3063.8594 -1987.5703 3060.0498 -1987.1465 3056.5078 -1987.9238 c3053.084 -1988.6738 3049.8018 -1989.7676 3046.5449 -1991.0566 c3040.5078 -1993.4453 3035.3145 -1996.874 3029.7207 -2000.0703 C3007.7832 -2012.6064 L2995.6055 -2019.5645 2985.6895 -2028.0059 2975.9258 -2038.0254 c2966.0352 -2048.1758 2954.71 -2056.8242 2945.1602 -2067.2285 c2942.9648 -2069.6211 2940.4785 -2071.7559 2938.0732 -2073.9316 c2935.7324 -2076.0488 2934.25 -2078.2686 2932.3105 -2080.6768 c2928.4414 -2085.4785 2923.5049 -2089.2031 2919.7676 -2094.2148 c2911.4629 -2105.3516 2903.6289 -2116.2939 2893.8027 -2126.207 c2883.8242 -2136.2715 2874.377 -2146.8594 2863.748 -2156.2617 c2862.4766 -2157.3867 2861.8477 -2158.6592 2861.6914 -2159.9268 C2878.9219 -2159.9268 Lf3796.8086 -2049.7051 m3795.8184 -2050.9834 3794.0928 -2051.3564 3791.5283 -2051.8262 c3790.3535 -2052.042 3789.0596 -2051.9609 3787.8721 -2051.9297 c3786.7568 -2051.9004 3785.9746 -2051.6621 3785.5586 -2051.4199 c3778.3066 -2047.1797 3771.7666 -2058.417 3778.998 -2062.6445 c3786.1689 -2066.8379 3800.624 -2065.8398 3806 -2058.8965 c3808.168 -2056.0986 3808.7412 -2052.4453 3806 -2049.7051 c3803.7334 -2047.4375 3798.9814 -2046.8975 3796.8086 -2049.7051 cf2400.127 -2083.5518 m2397.7148 -2083.0596 2393.3945 -2080.0127 2390.8828 -2078.4688 c2384.8066 -2074.7344 2378.6895 -2071.1016 2372.0156 -2068.5605 c2358.4717 -2063.4053 2343.3174 -2064.041 2329.0898 -2064.2793 c2313.3066 -2064.542 2298.3447 -2066.5361 2283.4951 -2071.9346 c2276.8975 -2074.334 2269.9717 -2075.7676 2263.2041 -2077.5898 c2254.9219 -2079.8213 2246.5869 -2079.6406 2238.082 -2079.377 c2222.8682 -2078.9043 2207.3203 -2077.1455 2192.123 -2078.1211 c2184.6816 -2078.5986 2177.2734 -2079.7666 2169.8965 -2080.8193 c2162.7168 -2081.8438 2155.791 -2084.1807 2148.6621 -2085.4814 c2142.0156 -2086.6943 2135.6504 -2085.6309 2129.1367 -2084.2891 c2122.0635 -2082.8311 2114.8418 -2083.7617 2107.7773 -2082.1855 c2101.8086 -2080.8535 2096.2314 -2079.0918 2090.4492 -2077.0684 c2083.5361 -2074.6484 2076.8691 -2074.0303 2069.6201 -2073.6162 c2063.4688 -2073.2646 2057.3848 -2071.6289 2051.3115 -2070.6631 c2044.6719 -2069.6074 2038.1426 -2069.4316 2031.4697 -2070.2646 c2024.8857 -2071.0859 2018.3809 -2072.6875 2012.3105 -2075.3809 c2006.668 -2077.8848 2001.4316 -2081.0166 1995.8828 -2083.7148 c1983.8066 -2089.5879 1969.6475 -2087 1956.6875 -2087 C1913.2754 -2087 L1900.9277 -2087 1888.668 -2085.8428 1876.2935 -2085.8428 c1863.1089 -2085.8428 1849.8286 -2084.8105 1836.665 -2085.6016 c1824.3032 -2086.3447 1811.895 -2085.5059 1799.54 -2086.6035 c1793.0635 -2087.1797 1786.5552 -2087.2119 1780.0938 -2087.8711 c1773.0566 -2088.5889 1766.1504 -2090.0078 1759.0557 -2090.1367 c1750.6826 -2090.2891 1750.668 -2103.3027 1759.0557 -2103.1504 c1766.7783 -2103.0098 1774.3418 -2101.4844 1782.0063 -2100.7021 c1789.502 -2099.9375 1797.1597 -2099.7842 1804.6885 -2099.2363 c1811.6094 -2098.7324 1818.6323 -2099.0518 1825.5684 -2099.0518 c1833.5703 -2099.0518 1841.5132 -2098.332 1849.5234 -2098.5137 c1864.5146 -2098.8535 1879.7432 -2098.3008 1894.6885 -2099.3604 c1910.1133 -2100.4541 1925.4307 -2100.418 1940.9014 -2100.418 c1948.7734 -2100.418 1956.6475 -2100.3662 1964.5195 -2100.4346 c1972.8545 -2100.5068 1980.916 -2101.0234 1989.1992 -2099.707 c1995.9531 -2098.6328 2002.3301 -2095.3555 2008.2783 -2092.1357 c2015.3076 -2088.3301 2021.8398 -2085.2646 2029.7246 -2083.6143 c2044.8633 -2080.4453 2059.8027 -2086.4229 2074.9238 -2086.7979 c2081.0352 -2086.9492 2087.0732 -2089.625 2092.7441 -2091.6543 c2099.1162 -2093.9336 2105.6973 -2095.2607 2112.4219 -2095.9668 c2118.0713 -2096.5605 2123.4541 -2096.3848 2129.0566 -2097.5117 c2135.0137 -2098.71 2140.8633 -2099.3184 2146.9258 -2098.7422 c2152.6318 -2098.1992 2158.1963 -2096.7715 2163.7383 -2095.3789 c2170.0957 -2093.7813 2176.5137 -2092.8535 2183.0117 -2092.0352 c2209.5293 -2088.6943 2236.6064 -2096.0117 2262.9531 -2091.0645 c2275.4453 -2088.7178 2287.0684 -2083.4678 2299.3105 -2080.4023 c2312.0801 -2077.2051 2325.5039 -2077.2275 2338.584 -2077.1953 c2350.5781 -2077.166 2362.2754 -2077.8379 2373.2617 -2083.1367 c2375.6016 -2084.2656 2377.8271 -2085.9385 2380.0918 -2087.2354 c2382.5625 -2088.6504 2385.6758 -2091.418 2388.4746 -2091.9883 c2390.8301 -2092.4688 2393.7197 -2095.4854 2396.6719 -2096.0869 c2404.8545 -2097.7559 2408.3389 -2085.2266 2400.127 -2083.5518 cf1845.9985 -2060.3369 m1847.2285 -2066.5029 1848.1045 -2072.5938 1848.1841 -2078.8906 c1848.29 -2087.2676 1861.29 -2087.2773 1861.1841 -2078.8906 c1861.0967 -2071.999 1860.1367 -2065.2227 1858.8452 -2058.4619 c1857.5024 -2051.4355 1859.5195 -2043.9414 1858.7202 -2036.7744 c1857.9121 -2029.5244 1857.3691 -2022.6221 1857.7314 -2015.3037 c1858.1357 -2007.1455 1859.123 -1999.0244 1859.5986 -1990.8691 c1859.9839 -1984.2646 1859.8179 -1977.626 1859.8179 -1971.0137 c1859.8179 -1968.3193 1861.7666 -1965.3184 1862.8701 -1962.9453 c1864.3779 -1959.7051 1865.394 -1956.4023 1866.4351 -1952.9941 c1868.3066 -1946.8652 1870.8721 -1941.251 1874.5596 -1935.998 c1878.3271 -1930.6309 1882.375 -1925.7139 1885.4604 -1919.8857 c1891.958 -1907.6133 1905.1499 -1899.0264 1916.8628 -1892.3838 c1923.2324 -1888.7715 1929.7813 -1885.4854 1936.4512 -1882.4678 c1939.7334 -1880.9824 1943.6895 -1880.0703 1946.7617 -1878.2188 c1950.1807 -1876.1592 1953.6953 -1874.4609 1957.4336 -1873.0615 c1963.8369 -1870.6641 1970.5645 -1869.1494 1977.2236 -1867.6572 c1984.6279 -1865.998 1991.8486 -1863.833 1999.3555 -1862.6025 c2013.8945 -1860.2207 2028.9775 -1860.6865 2043.583 -1862.1328 c2048.8076 -1862.6504 2053.2549 -1864.4619 2057.8076 -1867.0273 c2062.3623 -1869.5938 2067.0537 -1871.1572 2072.0479 -1872.7266 c2076.7891 -1874.2158 2080.9482 -1876.0127 2085.0303 -1878.8779 c2089.1953 -1881.8018 2092.4121 -1884.9707 2097.3496 -1886.5352 c2106.8711 -1889.5518 2111.9824 -1898.1006 2120.5293 -1902.8086 c2124.8281 -1905.1777 2128.4531 -1910.0742 2133.0098 -1911.6611 c2137.5059 -1913.2275 2142.2959 -1915.667 2145.7773 -1918.9453 c2152.2373 -1925.0283 2157.2471 -1932.8057 2163.5527 -1939.0488 c2166.1055 -1941.5771 2167.6846 -1946.3789 2169.4268 -1949.5234 c2171.6719 -1953.5781 2172.2988 -1958.582 2174.0039 -1962.8857 c2175.7783 -1967.3633 2178.54 -1970.4736 2181.6953 -1974.0244 c2185.0059 -1977.751 2186.6738 -1982.4658 2189.4063 -1986.543 c2192.1719 -1990.6699 2194.9922 -1994.6426 2197.6348 -1998.8379 c2200.3535 -2003.1543 2204.3574 -2005.084 2208.0117 -2008.3496 c2214.2402 -2013.918 2223.4658 -2004.7559 2217.2031 -1999.1582 c2215.0957 -1997.2734 2212.6641 -1995.9219 2210.4805 -1994.1621 c2208.2666 -1992.3799 2207.1963 -1989.1523 2205.7227 -1986.8125 c2203.9492 -1983.9961 2201.6289 -1981.4707 2199.7695 -1978.6953 c2197.835 -1975.8086 2196.4824 -1972.5537 2194.5352 -1969.6221 c2191.2109 -1964.6182 2186.998 -1961.2637 2185.1055 -1955.416 c2183.1182 -1949.2725 2180.9131 -1943.8838 2177.9551 -1938.1553 c2175.3115 -1933.0352 2171.916 -1929.3174 2168.7061 -1925.4727 c2164.5781 -1920.5273 2160.2178 -1915.665 2155.9678 -1910.8037 c2152.0908 -1906.3682 2146.2373 -1903.1143 2140.8789 -1900.8271 c2135.7002 -1898.6152 2130.0166 -1893.6104 2124.459 -1890.0088 c2119.2354 -1886.623 2115.3174 -1881.3369 2110.1289 -1877.8027 c2107.8008 -1876.2168 2104.8076 -1875.3281 2102.1621 -1874.4355 c2098.9033 -1873.3359 2096.7725 -1871.6006 2094.0508 -1869.5088 c2088.8203 -1865.4883 2083.3623 -1862.7832 2077.1104 -1860.7051 c2073.7881 -1859.5996 2070.4336 -1858.6113 2067.1348 -1857.4316 c2063.625 -1856.1758 2060.3906 -1853.584 2056.8711 -1852.1523 c2050.3584 -1849.5039 2043.625 -1849.0547 2036.6709 -1848.5293 c2029.0039 -1847.9502 2021.3066 -1847.8789 2013.627 -1848.2178 c1998.7793 -1848.873 1984.8555 -1852.5869 1970.4688 -1855.8672 c1964.8906 -1857.1396 1959.376 -1858.625 1953.9775 -1860.5254 c1947.9297 -1862.6553 1942.4893 -1865.9746 1936.582 -1868.377 c1924.8721 -1873.1387 1913.4629 -1878.9131 1902.7661 -1885.6543 c1892.6807 -1892.0098 1883.5815 -1899.959 1876.5645 -1909.626 c1873.3931 -1913.9951 1871.1816 -1918.9229 1867.9238 -1923.2725 c1864.4326 -1927.9336 1860.9961 -1932.501 1858.4263 -1937.752 c1856.1016 -1942.502 1854.4658 -1947.5713 1852.9707 -1952.6299 c1851.4204 -1957.875 1848.5327 -1962.5801 1847.0498 -1967.873 c1845.7725 -1972.4326 1846.8179 -1978.541 1846.8179 -1983.2617 c1846.8179 -1990.2295 1846.1895 -1997.1748 1845.583 -2004.1104 c1845.0435 -2010.2813 1844.5645 -2016.4473 1844.5127 -2022.6445 c1844.459 -2029.1035 1845.8872 -2035.3711 1846.0562 -2041.7881 c1846.2192 -2047.9775 1844.7773 -2054.2168 1845.9985 -2060.3369 cf2451.6787 -1880 m2450.417 -1880 L2445.165 -1869.5273 2436.4277 -1860.748 2425.3301 -1856.9082 c2418.8535 -1854.668 2411.9844 -1854.0508 2405.4648 -1851.8525 c2398.2051 -1849.4053 2391.0977 -1847.1982 2383.373 -1846.9951 c2376.4453 -1846.8135 2369.5059 -1847.1211 2362.5781 -1846.9609 C2362.5645 -1846.6699 2362.5527 -1846.4336 2362.5527 -1846.417 c2362.4941 -1842.96 2362.5498 -1839.4951 2362.5498 -1836.0381 c2362.5498 -1829.2275 2357.4414 -1822.7139 2354.3623 -1816.8594 c2351.0625 -1810.582 2349.3428 -1804.4902 2344.7324 -1798.8828 c2340.8418 -1794.1504 2335.5654 -1791.4395 2330.5479 -1788.1748 c2324.0322 -1783.9346 2316.8438 -1780.7471 2309.7412 -1777.6406 c2296.7529 -1771.9609 2283.5928 -1768.0156 2269.2383 -1769.3643 c2258.3867 -1770.3838 2247.8867 -1775.9189 2245.957 -1787.5459 c2244.957 -1793.5684 2246.8984 -1798.6719 2247.166 -1804.6152 c2247.498 -1811.9814 2249.2949 -1819.7158 2250.7148 -1826.9404 c2252.8887 -1837.9941 2256.6953 -1847.9941 2262.2158 -1857.7832 c2264.3496 -1861.5664 2268.2725 -1864.457 2272.248 -1866.0059 c2273.3008 -1866.416 2275.8701 -1870.3867 2276.8867 -1871.5039 c2278.748 -1873.5488 2280.8691 -1875.2324 2283.0977 -1876.8525 c2291.0713 -1882.6523 2299.9307 -1887.1709 2308.3457 -1892.2852 c2309.1836 -1892.7959 2309.9883 -1893.3555 2310.7578 -1893.9658 c2312.3604 -1895.2559 2311.6621 -1894.1475 2311.5869 -1895.8223 c2311.4824 -1898.1563 2311.3018 -1900.4512 2311.292 -1902.7939 c2311.2715 -1908.1123 2311.0479 -1913.3838 2309.752 -1918.5596 c2308.7539 -1922.5488 2306.1582 -1925.7734 2304.2402 -1929.3398 c2301.6738 -1934.1074 2300.7637 -1939.5215 2298.1221 -1944.292 c2295.8926 -1948.3184 2295.2832 -1952.9004 2293.1807 -1957.0195 c2290.832 -1961.623 2286.418 -1964.9512 2282.6514 -1968.3447 c2267.0488 -1982.4004 2251.3359 -1996.9063 2229.001 -1997.2539 c2220.626 -1997.3838 2220.6133 -2010.3848 2229.001 -2010.2539 c2257.3027 -2009.8135 2278.126 -1990.8965 2297.4326 -1972.4404 c2302.085 -1967.9932 2305.127 -1962.8262 2307.3125 -1956.8262 c2309.7266 -1950.1992 2312.9063 -1943.8828 2314.9404 -1937.085 c2315.7109 -1934.5088 2317.6895 -1932.0977 2319.0625 -1929.8145 c2320.5117 -1927.4033 2321.4766 -1924.6953 2322.2881 -1922.0156 c2324.2773 -1915.4404 2324.2715 -1908.1348 2324.2979 -1901.3301 c2324.3213 -1895.2422 2325.1719 -1890.8154 2321.0293 -1885.7695 c2317.0068 -1880.8711 2309.9082 -1878.502 2304.6855 -1875.1904 c2299.3779 -1871.8242 2293.2041 -1868.6875 2288.4141 -1864.6348 c2285.8037 -1862.4268 2283.668 -1859.5918 2281.3643 -1857.0791 c2279.042 -1854.5469 2275.4043 -1854.0264 2273.4414 -1851.2217 c2264.7871 -1838.8643 2263.5225 -1823.2295 2260.9541 -1808.8926 c2260.418 -1805.8975 2260.2285 -1802.9375 2259.7832 -1799.9385 c2259.3828 -1797.2383 2258.4902 -1794.5996 2258.3428 -1791.874 c2258.0703 -1786.8604 2261.9727 -1784.2012 2266.1973 -1782.9922 c2274.5615 -1780.5977 2284.5918 -1782.3525 2292.7188 -1784.7607 c2302.9854 -1787.8027 2313.3174 -1793.0195 2322.5 -1798.4756 c2330.4307 -1803.1895 2337.3213 -1807.6904 2340.2197 -1816.957 c2341.7813 -1821.9502 2345.0918 -1826.5947 2347.5762 -1831.1592 c2348.2949 -1832.4795 2350 -1834.7754 2350 -1836.0361 C2350 -1843.6035 L2350 -1850.71 2350.6543 -1857.8477 2358.8477 -1859.5811 c2369.1582 -1861.7617 2380.0244 -1858.627 2390.4053 -1860.7822 c2395.5713 -1861.8555 2400.4961 -1863.8584 2405.4961 -1865.501 c2410.3379 -1867.0918 2415.4092 -1867.583 2420.332 -1868.9082 c2428.0811 -1870.9932 2434.9238 -1877.8447 2438.666 -1885.2295 C2438.4346 -1886.7148 2438.6582 -1888.2998 2439.3242 -1889.6514 C2439.2148 -1889.7725 2439.0967 -1889.8867 2438.9922 -1890.0117 c2436.9209 -1892.4941 2435.0811 -1894.2275 2432.2666 -1895.832 c2425.0703 -1899.9346 2416.0723 -1899.6826 2408.0635 -1900.3193 c2399.3281 -1901.0146 2390.5791 -1901.4668 2381.8174 -1901.6074 c2378.665 -1901.6582 2375.541 -1901.7217 2372.3926 -1901.8818 c2369.6514 -1902.0215 2365.9238 -1902.5332 2363.4297 -1901.1494 c2359.1445 -1898.7734 2353.6494 -1901.75 2353.6484 -1906.7607 c2353.6455 -1919.4609 2353.9609 -1932.6211 2349.9609 -1944.8242 c2348.3965 -1949.5957 2345.7793 -1953.9834 2343.0918 -1958.1953 c2339.9717 -1963.0869 2338.0889 -1968.8848 2335.9346 -1974.2539 c2331.7305 -1984.7314 2325.8213 -1993.8604 2317.3203 -2001.3662 c2309.0596 -2008.6602 2298.959 -2013.7529 2289.9277 -2019.999 c2283.084 -2024.7324 2289.5752 -2036.0068 2296.4902 -2031.2236 c2306.5 -2024.3008 2317.1855 -2018.4443 2326.5127 -2010.5586 c2335.918 -2002.6074 2342.6006 -1991.9375 2347.2588 -1980.668 c2349.4424 -1975.3857 2351.1631 -1969.5527 2354.3174 -1964.7568 c2357.707 -1959.6016 2360.4082 -1954.0811 2362.4961 -1948.2793 c2366.2539 -1937.834 2366.6504 -1926.127 2366.6631 -1914.8711 C2370.3867 -1915.0547 2374.1992 -1914.6943 2377.9082 -1914.625 c2389.207 -1914.4141 2400.4375 -1913.9355 2411.7031 -1913.0107 c2421.293 -1912.2246 2430.126 -1911.4688 2438.8281 -1907.0273 c2442.6006 -1905.1025 2445.5195 -1902.3838 2448.1846 -1899.1455 c2451.0488 -1895.6641 2454.8584 -1893.5566 2457.291 -1889.6641 c2459.9287 -1885.4443 2456.4941 -1880 2451.6787 -1880 Cf*u1 D1988.5635 -2018.4502 m2002.8779 -2018.4639 2015.6123 -2002.4004 2015.5557 -1988.7266 c2015.3896 -1948.4727 1959.6797 -1983.3652 1966.041 -2004.8125 C1965.873 -2005.3496 1965.7471 -2005.9102 1965.6699 -2006.4863 c1964.1582 -2017.8223 1981.2012 -2018.4434 1988.5635 -2018.4502 cf0 D1978.9482 -1999.9648 m1979.5557 -1998.2764 1980.6533 -1996.7012 1981.6367 -1995.2188 c1983.7988 -1991.957 1987.209 -1989.5332 1990.4775 -1987.5078 c1993.7715 -1985.4678 1997.4082 -1982.8184 2001.5234 -1983.5205 c2003.7568 -1983.9014 2002.1182 -1990.7012 2001.7129 -1992.2051 c2000.1377 -1998.0449 1994.9678 -2005.4561 1988.1602 -2005.4502 c1986.041 -2005.4473 1983.9277 -2005.3467 1981.8164 -2005.1621 c1981.5234 -2005.1367 1981.2383 -2005.082 1980.9492 -2005.0391 C1980.6533 -2003.4863 1979.793 -2001.998 1978.1826 -2000.874 c1979.2002 -2001.584 1978.5957 -2000.9434 1978.9482 -1999.9648 cf*U1639.1982 -2024.8086 m1638.8467 -2024.6855 1638.5005 -2024.5518 1638.1523 -2024.4219 C1637.5977 -2024.1064 1637.0166 -2023.8828 1636.4219 -2023.7471 C1627.7612 -2020.2129 1619.8857 -2014.8584 1610.9033 -2012.3926 c1599.8516 -2009.3594 1587.9341 -2007.9375 1576.5459 -2006.7813 c1553.9209 -2004.4834 1530.6748 -2010.0996 1508.6934 -2014.9043 c1497.8936 -2017.2637 1487.252 -2020.3213 1476.5947 -2023.2012 c1472.1177 -2024.4121 1467.8081 -2026.6279 1463.6758 -2028.6787 c1458.1108 -2031.4414 1452.6006 -2033.3242 1446.7051 -2035.2246 c1442.1523 -2036.6934 1438.1489 -2039.0586 1433.772 -2040.8877 c1428.6016 -2043.0488 1422.9492 -2043.7705 1417.4102 -2044.123 c1405.9712 -2044.8516 1393.5742 -2044.3398 1382.2461 -2042.6875 c1359.4185 -2039.3574 1338.0811 -2029.8037 1315.4277 -2025.7344 c1305.0229 -2023.8652 1294.7505 -2020.9297 1284.562 -2018.1055 c1279.7817 -2016.7803 1275.1943 -2014.9854 1270.3457 -2013.8789 c1264.1006 -2012.4541 1257.5234 -2012.4229 1251.2202 -2011.2432 c1227.4932 -2006.7998 1204.4736 -2004.0078 1180.2227 -2004.2627 c1155.6729 -2004.5215 1131.189 -2007.1475 1106.833 -2010.0361 c1082.7383 -2012.8936 1059.1245 -2016.5205 1035.4473 -2021.8867 c1024.2422 -2024.4268 1013.0732 -2027.1221 1001.8682 -2029.6602 c990.0762 -2032.3301 978.0166 -2033.9639 966.3501 -2037.2041 c955.7178 -2040.1572 945.3989 -2044.0439 934.686 -2046.7266 c922.4194 -2049.7969 910.1724 -2052.9395 898.0005 -2056.3701 c887.3008 -2059.3857 877.168 -2063.0898 866.8271 -2067.0547 c856.9834 -2070.8281 846.7358 -2072.9561 836.7754 -2076.2725 c826.1265 -2079.8184 817.019 -2084.3906 805.5029 -2084.6855 c792.5776 -2085.0156 780.3506 -2083.707 767.6284 -2081.4023 c756.2432 -2079.3389 744.9014 -2076.6514 733.4624 -2074.9473 c722.2095 -2073.2715 710.7383 -2073.8379 699.4014 -2073.5986 c675.2769 -2073.0889 651.9902 -2073.1816 628.2739 -2078.1953 c605.3081 -2083.0508 582.2261 -2087.6914 559.752 -2094.3174 c550.4434 -2097.0615 540.7822 -2098.7402 531.4048 -2101.3105 c520.7466 -2104.2324 510.5723 -2106.8398 499.4922 -2107.7217 c490.2061 -2108.4609 480.2852 -2106.4121 471.5742 -2103.1807 c466.8193 -2101.417 461.7231 -2100.4941 456.7661 -2099.5049 c451.5405 -2098.4609 446.7266 -2096.4814 441.6074 -2094.9941 c422.5913 -2089.4707 403.6514 -2083.3438 384.0669 -2080.0195 c374.627 -2078.417 365.4458 -2075.9199 355.8623 -2075.1914 c350.5098 -2074.7852 345.1392 -2075.1143 339.7754 -2074.624 c334.6138 -2074.1523 329.7632 -2072.002 324.5781 -2071.4277 c314.6797 -2070.334 304.437 -2071.0234 294.4844 -2071.0234 c289.5366 -2071.0234 284.0605 -2070.3633 279.1851 -2071.2559 c273.6973 -2072.2607 268.2793 -2073.5898 262.7915 -2074.5957 c252.918 -2076.4033 242.686 -2074.1299 232.7856 -2075.8096 c222.9927 -2077.4717 213.394 -2079.7529 203.6938 -2081.8311 c194.4375 -2083.8145 185.3228 -2085.3857 176.4951 -2088.9219 c167.3877 -2092.5693 158.875 -2097.4102 150.6919 -2102.79 c134.6548 -2113.332 120.311 -2126.3018 105.5518 -2138.502 c99.0845 -2143.8477 108.3354 -2152.9912 114.7441 -2147.6934 c131.2808 -2134.0254 147.2993 -2119.6719 165.8057 -2108.6563 c184.2314 -2097.6895 205.5103 -2094.2012 226.2944 -2090.167 c237.3252 -2088.0254 247.8872 -2088.417 259.0552 -2088.0264 c264.2227 -2087.8457 269.4199 -2086.5674 274.4443 -2085.4609 c281.1709 -2083.9805 287.6304 -2084.0234 294.4844 -2084.0234 c305.4429 -2084.0234 317.2241 -2082.7891 327.9604 -2085.208 c339.3691 -2087.7793 350.5146 -2087.1455 361.9858 -2088.8555 c372.4546 -2090.415 382.9863 -2092.7949 393.3057 -2095.1113 c404.1963 -2097.5557 414.3955 -2101.5645 425.1113 -2104.2969 c435.3613 -2106.9111 445.4443 -2110.4697 455.7686 -2112.5313 c466.3296 -2114.6396 476.3525 -2118.623 487.0229 -2120.3174 c508.2778 -2123.6914 530.1479 -2114.8633 550.4004 -2109.748 c560.9043 -2107.0957 571.2744 -2103.7461 581.8213 -2101.3301 c593.791 -2098.5879 605.9385 -2096.7158 617.9097 -2093.8955 c629.2808 -2091.2168 640.6655 -2088.5527 652.2891 -2087.2305 c664.9595 -2085.79 677.7993 -2086.0723 690.5215 -2086.377 c701.5596 -2086.6416 712.627 -2086.5088 723.6558 -2086.9902 c736.3198 -2087.543 748.981 -2091.1787 761.4316 -2093.4365 c783.624 -2097.4619 806.1553 -2100.7324 828.0952 -2093.6426 c848.0698 -2087.1895 867.6929 -2079.3037 887.7207 -2072.9883 c910.4028 -2065.8359 933.8003 -2061.2383 956.4092 -2053.9063 c978.7402 -2046.6641 1001.9399 -2043.0391 1024.7686 -2037.6973 c1072.9043 -2026.4346 1121.9956 -2019.3291 1171.4536 -2017.4766 c1212.8945 -2015.9248 1254.0127 -2022.5205 1293.7002 -2033.8486 c1303.3774 -2036.6104 1313.1069 -2038.2373 1322.9009 -2040.4805 c1332.7222 -2042.7305 1342.3516 -2046.1729 1352.0273 -2048.9824 c1371.1631 -2054.54 1389.7051 -2056.752 1409.5596 -2057.2178 c1418.9546 -2057.4375 1428.3252 -2056.5352 1437.2275 -2053.4238 c1445.4385 -2050.5537 1453.2451 -2046.8779 1461.6025 -2044.1738 c1465.3721 -2042.9541 1468.9653 -2040.5352 1472.5103 -2038.7754 c1477.3721 -2036.3623 1482.3687 -2035.3555 1487.5005 -2033.8018 c1497.4282 -2030.7969 1507.5347 -2028.3945 1517.6792 -2026.251 c1538.0205 -2021.9531 1558.3491 -2017.9336 1579.2012 -2020.0508 c1589.4907 -2021.0947 1600.0474 -2022.8975 1610.0195 -2025.6348 c1614.1494 -2026.7676 1618.2197 -2029.8486 1622.0654 -2031.7363 c1625.2822 -2033.3164 1628.6006 -2034.7021 1631.958 -2035.9668 C1633.3955 -2036.957 1635.0371 -2037.3545 1637.4702 -2037.5762 c1645.1777 -2038.2773 1645.729 -2027.0918 1639.1982 -2024.8086 cf603.8657 -1903.8789 m598.0503 -1901.2803 592.1113 -1900.6543 585.8838 -1899.6729 c578.6797 -1898.5381 571.624 -1898.2207 564.3218 -1898.3232 c557.3657 -1898.4209 550.417 -1898.7969 543.4604 -1898.8848 c535.7017 -1898.9834 527.7188 -1901.1836 520.2446 -1903.123 c513.6895 -1904.8232 506.9316 -1906.3955 500.6943 -1909.0605 c494.5078 -1911.7051 489.0029 -1915.3818 483.5654 -1919.3037 c480.8589 -1921.2549 478.1714 -1923.2041 475.3779 -1925.0322 c472.4971 -1926.917 468.917 -1927.9404 466.1567 -1929.835 c463.897 -1931.3857 461.7183 -1933.1504 459.3701 -1934.5684 c456.0894 -1936.5508 452.0361 -1936 448.3604 -1936 C402.5781 -1936 L390.0425 -1936 377.9038 -1936.4316 367.3115 -1928.8066 c361.2656 -1924.4551 355.4766 -1919.707 349.7314 -1914.9688 c344.2139 -1910.4189 339.1396 -1905.3545 333.1514 -1901.4004 c321.4668 -1893.6846 307.1816 -1891.6318 293.4785 -1891.4023 c279.4253 -1891.167 264.5459 -1891.1768 250.7012 -1893.6699 c243.6523 -1894.9395 236.6128 -1896.3496 229.5771 -1897.6973 c222.4946 -1899.0527 215.6929 -1901.8311 208.5161 -1902.4287 c201.0576 -1903.0488 193.8037 -1902.1973 186.4165 -1901.3564 c179.3242 -1900.5498 171.9189 -1900.582 164.7925 -1900.2598 c157.0181 -1899.9063 151.8096 -1895.1875 145.02 -1892.1572 c138.8599 -1889.4082 133.479 -1886.8506 128.1094 -1882.6504 c123.3931 -1878.9609 118.7544 -1875.2432 113.4287 -1872.458 c107.8672 -1869.5488 103.2119 -1865.3799 98.2329 -1861.6172 c92.4448 -1857.2412 86.3564 -1855.9355 79.4937 -1854.043 c72.4507 -1852.0996 65.6074 -1849.915 58.2354 -1849.7129 c51.3223 -1849.5234 44.6807 -1847.1992 37.7437 -1846.9805 c30.9976 -1846.7676 24.0737 -1847.0352 17.3975 -1848.04 c11.458 -1848.9346 5.58447 -1849.9912 -0.372559 -1850.6074 C-0.372559 -1863.7021 L5.646 -1863.1631 11.6577 -1862.0986 17.5713 -1861.1143 c24.2339 -1860.0059 30.9824 -1859.9834 37.7227 -1859.9805 c45.1836 -1859.9775 52.4844 -1862.5557 59.999 -1862.7617 c66.5156 -1862.9404 73.1479 -1865.8242 79.3906 -1867.4893 c82.8979 -1868.4248 86.0327 -1869.084 89.1211 -1871.0508 c92.1333 -1872.9678 94.8423 -1875.3545 97.6523 -1877.5459 c102.5869 -1881.3945 108.1157 -1884.0283 113.25 -1887.5459 c118.4971 -1891.1387 123.1895 -1895.4502 128.5752 -1898.8594 c134.1499 -1902.3896 140.5449 -1904.0645 146.1431 -1907.6113 c153.085 -1912.0098 160.5264 -1912.917 168.5708 -1913.7148 c175.7041 -1914.4229 182.7905 -1913.9277 189.9287 -1914.8799 c197.7979 -1915.9297 205.8154 -1915.8965 213.6816 -1914.8799 c220.7847 -1913.9619 227.7227 -1911.2451 234.8008 -1909.8906 c242.417 -1908.4336 250.0459 -1906.8467 257.6963 -1905.5889 c264.6162 -1904.4521 271.9434 -1904.9492 278.9409 -1904.6865 c286.7725 -1904.3926 294.5947 -1904.1895 302.417 -1904.7949 c314.9805 -1905.7666 326.0781 -1910.7813 335.0601 -1919.5527 c340.1543 -1924.5264 346.249 -1928.8369 351.8579 -1933.2129 c356.9429 -1937.1807 362.0654 -1941.8027 368.0107 -1944.4141 c379.4956 -1949.457 392.2485 -1949 404.5063 -1949 C448.3604 -1949 L455.3545 -1949 460.9316 -1948.8125 467.083 -1945.0977 c469.5454 -1943.6113 471.6099 -1941.7217 474.2549 -1940.542 c477.5117 -1939.0889 480.4966 -1937.2285 483.4761 -1935.2793 c488.752 -1931.8262 493.6504 -1927.8379 499.0161 -1924.5098 c504.6611 -1921.0078 510.5674 -1919.334 516.8926 -1917.5361 c523.8296 -1915.5645 530.8022 -1913.7813 537.9043 -1912.5078 c544.751 -1911.2793 552.0283 -1911.6758 558.979 -1911.457 c565.9375 -1911.2373 572.897 -1911.165 579.8408 -1911.7305 c585.2637 -1912.1719 592.3149 -1912.875 597.3042 -1915.1035 c604.8896 -1918.4922 611.5078 -1907.293 603.8657 -1903.8789 cf621.0767 -1896.1602 m612.6885 -1895.9648 612.7075 -1908.9658 621.0767 -1909.1602 c628.5879 -1909.335 635.6382 -1911.6621 642.5728 -1914.3926 c650.3818 -1917.4688 653.7354 -1904.8926 646.0288 -1901.8574 c637.9814 -1898.6875 629.7769 -1896.3623 621.0767 -1896.1602 cf706.1953 -1560.0449 m712.5879 -1556.4502 720.1577 -1555.4941 726.7891 -1552.3711 c740.4082 -1545.959 756.2612 -1543.0674 770.978 -1540.4492 c785.7285 -1537.8242 800.6382 -1536.2295 815.376 -1533.5605 c830.6099 -1530.8018 846.2051 -1530.4707 861.5654 -1528.7148 c874.9966 -1527.1797 889.5425 -1526.8203 901.6802 -1520.2939 c909.0654 -1516.3232 902.5005 -1505.0996 895.1187 -1509.0693 c889.605 -1512.0342 883.4131 -1513.1289 877.25 -1513.8486 c870.2007 -1514.6719 863.1543 -1515.585 856.0942 -1516.3066 c840.7397 -1517.877 825.3232 -1518.5977 810.1089 -1521.3535 c780.8315 -1526.6553 748.9839 -1527.6074 721.6216 -1540.4902 c715.499 -1543.373 708.5239 -1544.2363 702.4956 -1547.3213 c696.0908 -1550.5977 690.5298 -1554.9121 684.5234 -1558.8125 c671.9766 -1566.96 658.9692 -1574.2256 646.2002 -1581.9824 c633.9575 -1589.4199 621.3955 -1595.8105 608.1494 -1601.2891 c594.6279 -1606.8828 580.2827 -1607.2109 566.1611 -1604.1904 c559.728 -1602.8145 553.98 -1600.0156 547.3066 -1599.7119 c544.2622 -1599.5732 541.1777 -1599.7119 538.1304 -1599.7119 c534.689 -1599.7119 531.479 -1598.6289 528.0615 -1598.4219 c524.9683 -1598.2334 521.8579 -1597.3398 518.7383 -1597.0996 c515.4326 -1596.8438 512.832 -1596.4971 509.6123 -1595.5635 c502.7988 -1593.5859 495.4204 -1594.248 488.4106 -1594.248 c485.3247 -1594.248 482.2803 -1594.3936 479.2427 -1593.791 c476.0669 -1593.1602 472.6885 -1591.5156 469.438 -1591.5156 c462.9946 -1591.5156 457.0039 -1591.0225 450.627 -1590.2246 c444.0107 -1589.3984 437.0537 -1590.1152 430.3745 -1589.6104 c422.6494 -1589.0273 415.1138 -1588.7832 407.3501 -1588.7832 c392.3145 -1588.7832 377.6318 -1590.8047 362.6494 -1591.4463 c346.7163 -1592.1289 330.8413 -1594.4453 315.1924 -1597.498 c300.0527 -1600.4502 285.1191 -1604.8682 270.3335 -1609.2402 c255.6382 -1613.585 241.9375 -1619.5332 227.8193 -1625.3545 c221.2173 -1628.0762 214.459 -1630.1309 208.2339 -1633.7119 c202.7925 -1636.8428 197.8882 -1640.5488 191.7534 -1642.2939 c183.7041 -1644.584 187.1289 -1657.1279 195.2095 -1654.8291 c201.2524 -1653.1104 206.8057 -1650.0488 212.0767 -1646.6875 c218.6724 -1642.4805 225.7349 -1640.1738 232.9146 -1637.2139 c247.0571 -1631.3828 260.8037 -1625.6152 275.5186 -1621.2646 c290.3677 -1616.874 305.3496 -1612.627 320.5508 -1609.6621 c336.4312 -1606.5645 352.2324 -1605.25 368.3262 -1604.125 c375.5664 -1603.6182 382.7593 -1602.5811 389.998 -1602.043 c397.5215 -1601.4834 405.1338 -1601.7832 412.6729 -1601.7832 c419.832 -1601.7832 426.7646 -1602.4072 433.897 -1602.8545 c440.9429 -1603.2959 447.9453 -1602.7656 454.9048 -1604.0127 c460.9175 -1605.0898 466.8242 -1604.043 472.7695 -1605.5986 c479.5903 -1607.3838 486.2832 -1607.248 493.2788 -1607.248 c496.3901 -1607.248 499.5063 -1607.1865 502.6147 -1607.3281 c506.2437 -1607.4922 509.5522 -1609.9746 513.1538 -1609.9795 c519.5747 -1609.9883 525.7461 -1611.041 532.0371 -1612.209 c538.2148 -1613.3555 544.6118 -1611.876 550.7407 -1613.125 c553.8491 -1613.7588 556.665 -1615.3408 559.75 -1616.1123 c563.4595 -1617.04 567.2686 -1617.9863 571.0596 -1618.4316 c585.4507 -1620.1221 599.73 -1618.7373 613.1689 -1613.1777 c640.1221 -1602.0293 664.9829 -1586.5527 689.5776 -1571.002 c695.1992 -1567.4473 700.3857 -1563.3115 706.1953 -1560.0449 cf927.0879 -1504.084 m918.7065 -1504.1182 918.7031 -1517.1182 927.0879 -1517.084 c947.1621 -1517.002 967.123 -1514.4336 987.1973 -1514.3516 c995.5786 -1514.3174 995.582 -1501.3174 987.1973 -1501.3516 c967.123 -1501.4336 947.1621 -1504.002 927.0879 -1504.084 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF