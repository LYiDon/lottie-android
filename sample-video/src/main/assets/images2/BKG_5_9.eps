%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 5.eps)%%CreationDate: 04.10.18 2:09%%Canvassize: 16383%%BoundingBox: -1 -2160 3803 -8%%HiResBoundingBox: -0.372559 -2159.9277 3802.2041 -8.26758%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -855.458 291.3179 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5274 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFF55557FFD61FFA9A9FD1AFFA97FA9FD21FF7F55FD12FF7F55%7FA9FD04FF7F557FA9A9A9FD1DFFA95555FD3AFFA97F7FA92B7FFD12FF55%FFA97F7FFF857F557F55FD067FA9FD18FFA97FFF7F7FFD39FF7F55A9542B%55FD12FFA955FFFF7F557FA9FD07FFA9A97F7FFD17FF7FA9FFA97FFD06FF%7FFD33FFA97FFFA97FFD13FF7FA9FFFFA9FD08FFA9FFFFA955FD17FF7FFF%A97F2BA9A9FFFFFF7F55A9FD49FFA97FFFA9FD047FA97F5555A97FA9A97F%55FD17FFA955557FA9A97F7F55FF7FA9A97FFD49FF55FF7F7FA9FFFFFF7F%55A97F7FA97F7F7FFD18FF7F7FFD07FF557FFFA97FFD49FF7F54A9FD06FF%2A7F55A9FD1BFF7F7FFD09FFA9FF7E7FFD53FFA9FD1CFFA97FFD0DFF7F7F%FD6FFF7FA9FD0BFFA9FFFFA97FFD6EFF7FFD0CFF557FA9FF55FD6EFF54A9%FFFF7E7FA9FD06FF7F7F7F54A9FD6FFF7F7FFF7F55A9FD06FF7FFD72FFA9%A92B55A9FFFF7F7FFFFFFF7FA9FD72FF7F55FF7FA9FFFF7FA9FFFFA97FFD%74FF7F54A9FFFFFFA97F7F7E55A9FD76FF7F7FFFFF7F5555A97FA955FD76%FF7F7FA955A97F557F7F55A9FD76FFA97FA9FF7F7F5555A9FD7BFF7F557F%A9FD7CFFA9FDFCFFFD1CFFA9FD7EFFA97F7FA9FD7CFF7FA9A955A9FD7BFF%7FFFA9A9A9FD7AFFA97F7FA954FD7DFFA97FFDFCFFFDEEFFA955A9FD7DFF%5555FD7DFFA92BA9FD7DFF7F55A9FD7DFF7F55FD7EFF7F7FFD7DFFA97F7F%FD7EFF557FFD7DFFA97F7FFD7DFFA97FA9FD07FF857F7FA9FD72FFA97F7F%FD06FF557FA9FF7F7FFD72FF7FA9FD05FF54557F7F7FFF7FA9FD70FFA97F%7FFD04FF7FA9FFFFFF7FA9A97FFD71FF7F7FA9FFFFFF7FFFFF557F55FFA9%5555A9FD6EFFA97F7FA9FFFFFF7FFF55A9FD06FF55FD6FFF7F7FA9FFFFA9%7F7F55A9FD04FFA955A9FD04FFA9FD6AFF7F54A9FFFFFF7F7FFFFFA9FFFF%FF7F5BA9FD04FFA97FFD69FFA97F7FFFFFFFA97F7F2B557FFFA97FA97FFD%04FF55A9FD6AFF7F7FA9FFFFFFA9A9A97F55FFFF7FFF7FFD04FF557FFD6A%FFA955A9FD07FF7F7FFF7FA9A9A9FFFFFF557FFD62FFA9A9FD06FF7F7F7E%FD08FF7FA9A9A97FA9FFFFFF7F55FD62FF7FA9FD06FFA97FA9FD09FF557F%A97F55FFFFFF7F7FA9FD61FF55A9FD06FF7F7F7FFD09FFA92BFF7F5BA9FF%FFA97F7FFD61FF55A9FD06FFA9A97FFD09FFA97FFF7FA97FA9FF7F7F5BFD%15FFA97FFD4AFF2A7FFD06FF7EA95BFD09FFA97FFF7FFFA97FFFFF7FA97F%FD14FF5555FD4AFF7F55FD06FF7FA97FA9FD08FF7FA9A97FFFFF7F7FFF7F%A97FFD13FF7F2BA9FD4AFF7F55A9FD05FF55FF7FFD09FF7FA9FF55FFFFFF%5BA97FA97FFD12FFA9557FFD4BFFA955A9FD04FFA97FFF7FFD09FF5BFFA9%557FFFFFFF557FA97FFD12FF547F7FFD43FF7FA9FD06FFA97F7EFFFF7FFF%A97FFF54FF7F7FFD04A9FFFF7FFFA9A97FA9FFFFA955FF7FFD11FFA9A97F%A9FD43FF557FFD06FFA97F7FFFA955A97FFFA9A9FFA9AFA9A97F7F7FFF7F%FF7FA9A955FFFFFF7F55A9FFFF7F7FA9FF7FA9FD09FFA97F7FA9FD17FFA9%FD2BFF7F7F55FD05FFA97F7FFF7F5555A9FF7FA9FD06FFA9557FA9A9FF7F%FF7F7FFFFFFF7F5BFF7F7FFFFFFF7FFD0AFF7FA97FFD17FF2BA9FD2BFF7F%A9A9557F7FFFFFA97F85FFFFFF7FFFFF55FD06FF7E55A9FFA97F7F7FFFFF%55FD04FF7F54A9FFFFFF7F7FFD0AFF7F7F7FA9FD0AFFA9547F7F557EFFA9%FFFFFFA9557EFD23FF7EFD07FFA97F7FFFA9A9557F547F7FFFFFA97FFF54%A9FD07FF7F7F7FFFA9A9A9FFFF7F7FFD08FF7F7FFD05FFA97FFD04FF7FA9%7FFD09FFA97F55FF7F7FFF7F557F7FFFFFA97F7FFFFFFD057F85A9FD18FF%A955A9FD09FFA955A9A9FF7F7F7FFFFFFF55FFA97FFFFFFF55FFA95BA9FF%A9A9FD077FA9FD07FF7F7FFD06FFA92BA9FFFFFFA97F7FA9FD06FFA92B7F%7F7FFD04A955FFFF55A9FFA97FA97F7FA9A9FFA9FFA9A97F7F7FFFFFFFA9%FFFFFF7F7F7FFD06FFA955FD047FFD0DFF7FA955557F55FFFF7F7FFF7F7F%FFFFFFFD067FFD10FF7F7FFD07FFA97F7FA9FFFFA9A97FFD05FFA97F7FA9%7F7FA9FF7FA955FFFF7F7FFFFFFF7FA9A97FFD09FF5555FD067FA9A9FD06%FF7F7FFFFFFF55FD11FF7FA955A9FF7FA9FF7FFD04FFA97F54FFFFA9547F%7FA9A9FD05FFA9FD05FF54FD09FF7FA954FFFFFF7EA97FFD05FF54A9FFFF%A97F7FA9A9FFA97F54FD05FF55FF54A9FD07FFA955A9A9FFFFFFA9FFA9A9%7FFFFFA9A97F7FFD04FFA9FD10FF7EA97FA954A955FF7E7FFD0BFFA9A9FD%087F55FD04FFA9A9FD08FFA97FA97FFFFF7FA97FFD06FF7F7FA9FFFFA9A9%A97F7FA9FD06FFA9A9A97FFD07FFA9FD05FFA97F7FA97FA9557F7F7F55FD%16FF7FA955FFA97FA9FF7FA9FD10FFA9FFA9FFFFA955A9FFFF7FA9FD08FF%A97FFF7FFFFF7FA97FA9FD06FFA9FD067FFD09FF7FA9A97FFD0BFFA9557F%A9FD05FFA9FFFFA955FD14FFA97FA92BFF7F7F7FFF55FD18FF7FFFFFA9A9%FD09FFA9FFA9FFFFA9A9FFA9FD16FFA9FFFFA9FD0BFF7FFD21FFFD04A9FF%A9A9FFFFA9FD49FFA9FD3AFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 6 79 255 255 0 50 Lb(Layer 7) Ln0 Au*u1 D0 O0.841245 0.759243 0 0 0.176471 0.121569 1 Xa0 J 0 j 1 w 10 M []0 d0 XR707.0625 -1870.3857 m705.1924 -1874.3652 701.3896 -1876.1328 697.7593 -1878.3027 c693.0435 -1881.123 688.9038 -1884.9102 684.4727 -1888.1504 c679.812 -1891.5586 675.0391 -1894.9033 670.1753 -1898.0117 c664.8955 -1901.3867 659.104 -1903.7705 653.7227 -1906.9648 c648.8833 -1909.8379 644.585 -1912.8701 640.5308 -1916.7646 c636.1914 -1920.9336 631.2832 -1924.7383 626.0068 -1927.6289 c616.4946 -1932.8398 604.1211 -1938.4023 593.0718 -1937.6738 C584.998 -1929.0195 577.1973 -1919.8682 567.7236 -1912.6865 C568.7773 -1911.6484 569.4795 -1910.1865 569.5215 -1908.293 c569.8271 -1894.5146 576.8306 -1882.0098 576.9658 -1868.1006 c577.0347 -1860.998 577.9517 -1853.9277 578.1694 -1846.8301 c578.4268 -1838.4531 578.189 -1830.0322 578.189 -1821.6514 c578.189 -1806.2207 578.1943 -1790.791 578.1895 -1775.3613 c578.1846 -1760.4873 576.7241 -1745.9414 570.4346 -1732.3066 c564.1392 -1718.6582 559.3501 -1704.4297 553.0874 -1690.7373 c550.3535 -1684.7617 549.1255 -1678.4004 546.4434 -1672.3965 c545.0679 -1669.3184 543.4316 -1666.3555 541.9868 -1663.3096 c540.3457 -1659.8496 539.7559 -1656.1064 538.8682 -1652.417 c537.2324 -1645.6182 534.3618 -1639.5586 532.1406 -1632.9863 c529.5596 -1625.3496 527.0649 -1617.7324 524.0098 -1610.2627 c521.4063 -1603.8984 518.5737 -1597.6328 516.123 -1591.2061 c513.6797 -1584.7998 513.1729 -1577.1855 512.2334 -1570.4424 c510.0073 -1554.4688 511.2163 -1538.2207 511.4946 -1522.1309 c511.6309 -1514.2578 512.5708 -1506.4512 512.6782 -1498.5928 c512.7261 -1495.125 513.022 -1491.7148 513.6494 -1488.3047 c513.8716 -1487.0986 513.896 -1486.5352 513.7827 -1485.4492 c513.7358 -1484.998 513.7222 -1484.6729 513.7236 -1484.4443 C519.3516 -1481.0449 515.4453 -1472.8682 509.6279 -1472.8242 C507.5688 -1468.8906 501.1353 -1467.1758 498.0586 -1472.166 c490.7524 -1484.0156 492.8584 -1497.998 491.6406 -1511.2139 c490.2627 -1526.167 484.3853 -1540.3008 483.3486 -1555.2139 c482.8271 -1562.7217 484.083 -1570.1289 482.8838 -1577.6016 c481.7549 -1584.6348 482.3311 -1592.0098 482.3311 -1599.1172 c482.3311 -1614.5146 484.2813 -1629.5537 486.5195 -1644.748 c488.6797 -1659.4141 492.645 -1673.8916 495.938 -1688.3301 c497.4849 -1695.1133 500.9365 -1701.5088 503.3584 -1708.0146 c506.167 -1715.5605 508.5425 -1723.2607 510.5576 -1731.0547 c512.4302 -1738.2988 513.8564 -1745.6826 514.7485 -1753.1113 c515.7114 -1761.1289 515.4907 -1769.165 516.043 -1777.2021 c517.0898 -1792.4492 517.5151 -1807.7393 515.7222 -1822.9609 c514.7881 -1830.8906 515.6436 -1839.0771 514.7319 -1847.0762 c514.6157 -1848.0957 514.5015 -1849.5605 514.3228 -1851.1602 C512.9717 -1849.7813 511.5874 -1848.415 510.5205 -1846.8877 c506.5342 -1841.1797 502.9214 -1835.5869 498.3271 -1830.2676 c496.187 -1827.7891 493.8447 -1825.3867 491.9873 -1822.6895 c491.1401 -1821.46 490.2974 -1820.209 489.333 -1819.0654 C488.7231 -1818.2676 488.042 -1817.5371 487.29 -1816.8721 C485.7617 -1815.9609 485.4648 -1815.6602 486.3994 -1815.9697 C485.0361 -1813.2686 482.9097 -1811.2061 481.4023 -1808.6387 c480.0732 -1806.376 479.459 -1803.4424 478.3975 -1801.0254 c475.813 -1795.1406 470.8877 -1790.4727 468.1948 -1784.5947 c465.4956 -1778.7031 463.9863 -1771.5869 460.0283 -1766.3955 c455.6416 -1760.6416 453.0864 -1753.7227 448.6855 -1747.9512 c444.6616 -1742.6719 440.064 -1737.8701 435.4092 -1733.1504 c429.7993 -1727.4639 425.311 -1721.7109 421.1699 -1714.8691 c419.4038 -1711.9512 417.0537 -1709.5908 415.3921 -1706.5811 c413.8765 -1703.8359 412.6973 -1701.2031 410.8115 -1698.6377 c409.0391 -1696.2256 406.4331 -1694.7207 404.6689 -1692.418 c402.5361 -1689.6357 401.1665 -1686.3486 399.0244 -1683.5537 c392.896 -1675.5566 386.9961 -1667.6943 380.0327 -1660.3906 c378.1836 -1658.4512 377.7285 -1655.7852 375.9404 -1653.8828 c374.0581 -1651.8789 372.375 -1649.7207 370.6401 -1647.5908 c367.7935 -1644.0957 362.9243 -1641.4004 361.5352 -1636.9639 c360.543 -1633.7949 357.9619 -1632.4287 355.3701 -1632.4307 C355.3794 -1632.2451 355.3813 -1632.0615 355.3931 -1631.876 c356.0786 -1620.9766 358.0566 -1610.4668 358.0566 -1599.4746 c358.0566 -1587.4951 358.2583 -1575.8281 356.0938 -1563.998 c355.1289 -1558.7236 354.543 -1553.2861 352.5571 -1548.2871 c351.8052 -1546.3936 350.9321 -1544.5488 350.0698 -1542.7031 c349.0244 -1540.4668 349.0151 -1537.9297 348.3945 -1535.5537 c347.1729 -1530.873 344.9868 -1526.1064 342.9473 -1521.7256 c341.771 -1519.1982 339.9111 -1517.0654 338.3193 -1514.7871 c336.7612 -1512.5557 336.2769 -1509.957 335.1514 -1507.5176 c333.2954 -1503.4961 330.7393 -1499.834 328.7129 -1495.8975 c326.6787 -1491.9443 325.5073 -1487.6846 322.4785 -1484.2871 c319.252 -1480.667 315.1255 -1477.9209 311.6313 -1474.5605 c310.4858 -1473.459 309.146 -1472.6777 307.7651 -1471.9707 C316.8213 -1469.8486 325.7188 -1466.1904 334.2822 -1462.6855 c342.9712 -1459.1289 350.4961 -1455.7676 350.8345 -1445.3604 c350.9824 -1440.8037 350.7134 -1436.0176 350.335 -1431.4785 c349.8867 -1426.1074 348.3677 -1422.3496 345.5444 -1417.8701 c343.478 -1414.5908 343.4126 -1409.875 341.7266 -1406.2705 c339.7368 -1402.0156 336.7319 -1398.4102 334.084 -1394.5625 c329.4746 -1387.8643 322.6255 -1384.7666 314.7764 -1383.752 c305.1001 -1382.5 295.231 -1386.7197 286.5576 -1390.4141 c282.3091 -1392.2246 278.0601 -1393.9541 273.8359 -1395.7422 C274.3853 -1390.2188 273.9614 -1384.5068 273.9614 -1378.9834 c273.9614 -1371.8359 273.189 -1364.708 272.853 -1357.5732 c272.4834 -1349.71 271.8794 -1342.5684 269.8838 -1334.917 c268.2363 -1328.5996 267.189 -1322.4844 264.5649 -1316.4492 c261.8662 -1310.2412 256.9692 -1305.8486 251.3877 -1302.2803 c246.458 -1299.1279 242.0181 -1295.6016 236.7881 -1292.8994 c230.5234 -1289.6621 223.3535 -1287.1689 216.6782 -1284.9297 c202.7881 -1280.2695 188.3311 -1279.5254 173.8076 -1279.8057 c167.0566 -1279.9355 160.3413 -1280.5225 153.687 -1281.6748 c146.6724 -1282.8887 139.9443 -1285.6279 133.0303 -1287.333 c118.9102 -1290.8154 105.792 -1296.2393 93.7642 -1304.541 c89.3027 -1307.6201 85.5127 -1311.6982 81.2827 -1315.126 c76.8232 -1318.7402 73.1104 -1323.2764 71.978 -1329.0244 c71.4375 -1331.7666 72.4873 -1333.9775 74.1792 -1335.4023 C69.2534 -1338.9023 64.2974 -1343.4297 60.4111 -1347.9922 c56.9341 -1352.0732 53.4272 -1357.7432 51.624 -1362.75 c49.6797 -1368.1494 45.9766 -1372.9121 43.5181 -1378.0869 c40.7026 -1384.0127 39.5625 -1391.1885 37.7646 -1397.5059 c35.79 -1404.4443 33 -1411.2959 33 -1418.5576 C33 -1447.002 L33 -1449.9385 34.2891 -1452.7422 34.4404 -1455.6592 c34.9067 -1464.6104 39.2012 -1473.4199 47.165 -1477.7412 C43.8027 -1480.5674 43.5137 -1484.9121 44.439 -1489.4014 c47.314 -1503.3525 51.2451 -1517.2461 57.6699 -1530.0947 c60.3521 -1535.459 64.7363 -1541.9785 69.9688 -1545.1484 c76.1504 -1548.8936 82.3608 -1547.6299 88.6274 -1544.8545 c94.3955 -1542.3008 99.6592 -1538.7266 105.4849 -1536.1816 c106.3618 -1535.7988 107.2437 -1535.4258 108.1294 -1535.0625 C108.8354 -1536.0244 109.8252 -1536.8369 111.145 -1537.3652 c123.3701 -1542.2588 135.0454 -1548.0342 147.7588 -1551.6348 c160.6367 -1555.2813 175 -1553.6748 188 -1553.6748 c188.8193 -1553.6748 189.5615 -1553.5645 190.2319 -1553.3691 C191.1338 -1555.1738 192.0068 -1557.0029 192.8306 -1558.875 c196.0781 -1566.2578 197.5884 -1574.4277 201.6733 -1581.4258 c203.2144 -1584.0664 205.6846 -1586.1064 207.8262 -1588.248 c208.9165 -1589.3389 210.2607 -1590.0137 211.0981 -1591.3125 c212.0205 -1592.7432 212.6948 -1594.375 213.4697 -1595.8887 c217.5679 -1603.8975 223.8862 -1610.6406 229.4746 -1617.625 c235.001 -1624.5332 238.3457 -1633.3018 242.6191 -1641.0459 c251.397 -1656.9512 261.2808 -1672.4375 272.7588 -1686.5723 c273.1831 -1687.0947 273.6343 -1687.5059 274.0986 -1687.834 C272.8613 -1690.9883 271.6763 -1694.1553 270.8745 -1697.4453 c269.2427 -1704.1406 268.8555 -1711.1943 267.501 -1717.9668 c265.9365 -1725.7891 264.4746 -1733.6172 263.0488 -1741.4648 c260.3823 -1756.1406 256.0146 -1770.9141 256.0146 -1785.8594 c256.0146 -1793.1533 254.5386 -1799.7393 253.5264 -1806.9023 c252.416 -1814.7588 251.4634 -1822.6357 251.1309 -1830.5684 c250.6958 -1840.9443 251.0679 -1851.4082 251.0679 -1861.793 c251.0679 -1866.7842 251.0688 -1871.7705 251.3135 -1876.7568 c251.5903 -1882.4111 253.1675 -1887.8633 253.4951 -1893.4521 c254.0942 -1903.6689 257.8975 -1912.7402 261.0391 -1922.3877 c262.5352 -1926.9824 263.291 -1931.167 263.5898 -1935.9639 c263.8442 -1940.0508 264.9429 -1944.0371 265.543 -1948.0986 C264.7109 -1950.2129 264.8145 -1952.7363 266.5747 -1954.9375 c270.27 -1959.5605 275.7153 -1960.3174 280.8306 -1962.5879 c283.8174 -1963.9141 286.4448 -1965.8838 289.4121 -1967.2656 c292.8618 -1968.873 296.4312 -1970.2246 300.0537 -1971.3838 c313.083 -1975.5527 325.8638 -1975.7236 335.6362 -1964.9639 c345.8877 -1953.6777 342.021 -1937.7412 338.5171 -1924.4727 c336.6396 -1917.3633 334.5752 -1910.3164 333.1201 -1903.1025 c331.4956 -1895.0479 331.4707 -1886.7178 331.5669 -1878.5332 c331.7432 -1863.4746 332.8843 -1848.4883 333.3047 -1833.4541 c333.5869 -1823.3691 334.5063 -1813.4707 335.7168 -1803.5615 C336.335 -1804.7314 336.9282 -1805.918 337.4287 -1807.1621 c339.269 -1811.7393 341.9995 -1815.9023 344.708 -1820.0576 c347.9541 -1825.0391 350.3682 -1830.5889 353.4043 -1835.709 c359.0591 -1845.2441 366.8608 -1853.2637 372.1348 -1863.0684 c374.4551 -1867.3818 377.5801 -1871.3223 380.6265 -1875.1475 c383.8564 -1879.2021 386.1016 -1883.8877 389.4951 -1887.7373 c392.2046 -1890.8105 395.5698 -1893.2578 397.8535 -1896.6982 c400.4653 -1900.6318 401.624 -1905.5469 404.8369 -1909.0068 c405.9897 -1910.248 406.5786 -1912.1797 407.124 -1913.7314 c408.1401 -1916.6221 410.0498 -1919.3125 411.52 -1921.9932 c414.4976 -1927.4219 417.3833 -1932.9004 420.4097 -1938.3027 c426.1353 -1948.5225 430.5703 -1959.6201 435.8101 -1970.1094 c437.9888 -1974.4717 439.5166 -1979.5234 442.1587 -1983.584 c443.3096 -1985.3525 444.3169 -1987.209 445.2847 -1989.083 C445.3257 -1989.373 445.397 -1989.8018 445.5078 -1990.4072 C445.7051 -1991.168 445.9326 -1991.835 446.2207 -1992.4727 C443.541 -1993.2998 440.6318 -1993.791 438.3071 -1994.8945 c432.5776 -1997.6133 425.8179 -1996.8691 419.7031 -1997.7822 c416.5503 -1998.2529 413.478 -1998.8535 410.3003 -1999.1758 c406.7505 -1999.5352 403.0405 -1999 399.4751 -1999 C377.2305 -1999 L362.4272 -1999 347.6128 -1999.0781 332.811 -1999.2832 c317.752 -1999.4922 303.252 -2000.3643 288.3574 -1997.6631 c285.3228 -1997.1123 282.2886 -1996.958 279.2095 -1996.958 c276.2695 -1996.958 272.7925 -1997.625 270.2471 -1996.4707 c264.7524 -1993.9805 258.1719 -1993.7305 252.2734 -1992.5986 c239.3906 -1990.127 226.6021 -1986.8467 213.9824 -1983.2285 c200.1665 -1979.2686 187.2285 -1973.9521 174.1558 -1968.1299 c169.0645 -1965.8623 163.7998 -1964.0029 158.6509 -1961.873 c156.8711 -1961.1377 155.0083 -1960.6182 153.2607 -1959.8076 c152.6118 -1959.5068 151.9624 -1959.1406 151.4155 -1958.6807 C151.4473 -1958.5039 151.4839 -1958.2197 151.5269 -1957.7617 c151.7349 -1955.541 150.9624 -1953.9229 149.709 -1952.8896 C151.6069 -1951.3496 153.5371 -1949.8535 155.6206 -1948.5654 c161.9224 -1944.6699 168.5415 -1940.6553 175.2075 -1937.3887 c178.3428 -1935.8525 181.7783 -1934.9561 184.9644 -1933.4883 c188.0386 -1932.0713 190.8887 -1930.5605 194.1953 -1929.7402 c196.3164 -1929.2129 198.9072 -1929.5176 201.0977 -1929.25 c204.2437 -1928.8652 207.2783 -1928.2607 210.2612 -1927.1777 c215.7124 -1925.1992 220.5024 -1921.6826 221.1343 -1915.5732 c221.7979 -1909.1592 218.4517 -1903.8232 214.3726 -1899.2051 c210.8916 -1895.2637 207.1641 -1891.3252 202.585 -1888.6807 c201.3208 -1887.9512 199.9189 -1887.3818 198.5688 -1886.8379 c198.3115 -1886.7344 198.1147 -1886.6592 197.9458 -1886.5977 C197.7671 -1886.4258 197.3809 -1886.124 196.6479 -1885.6152 c193.8687 -1883.6865 190.7061 -1882.2529 187.5669 -1881.001 c181.1133 -1878.4277 174.8447 -1876.4375 167.8818 -1875.8721 c160.2881 -1875.2568 153.1616 -1871.7334 145.5034 -1870.9385 c130.8916 -1869.4199 116.417 -1865.9902 101.7432 -1864.5039 c97.9512 -1864.1191 94.4092 -1863.0791 90.6787 -1862.4121 c87.2788 -1861.8037 83.8145 -1861.7197 80.3984 -1861.2529 c73.2148 -1860.2705 66.0215 -1858.1592 58.8525 -1856.8857 c51.8921 -1855.6484 44.9053 -1854.4014 37.8594 -1853.7744 c29.6226 -1853.041 21.312 -1853.1563 13.0537 -1852.4131 c8.57813 -1852.0107 4.10693 -1851.6309 -0.372559 -1851.377 C-0.372559 -1864.3164 L11.7886 -1864.8467 23.9512 -1866.168 36.106 -1866.6592 c49.9009 -1867.2168 63.439 -1871.374 76.9429 -1873.7881 c80.3428 -1874.3965 83.8066 -1874.4805 87.2227 -1874.9473 c90.8721 -1875.4463 94.356 -1876.6074 98.0327 -1877.0684 c105.48 -1878.002 112.855 -1879.2158 120.2935 -1880.165 c127.186 -1881.0449 133.9326 -1882.752 140.813 -1883.6182 c144.1494 -1884.0381 147.3306 -1884.1279 150.6245 -1884.9375 c154.0811 -1885.7881 157.4565 -1886.959 160.8989 -1887.8662 c164.3745 -1888.7822 167.873 -1888.6895 171.3774 -1889.3232 c174.6846 -1889.9209 177.8828 -1891.125 181.0132 -1892.3115 c186.3125 -1894.3203 191.0273 -1897.3555 196.0234 -1899.9063 c199.9639 -1901.917 204.0596 -1906.6123 206.6611 -1910.1816 c207.3945 -1911.1885 207.8716 -1912.1895 208.228 -1913.3633 c208.2744 -1913.5166 208.3232 -1913.6289 208.3716 -1913.7227 C206.4658 -1915.0684 204.0884 -1915.5723 201.8545 -1916.0645 c196.5142 -1917.2402 191.3447 -1916.6348 186.1064 -1918.7012 c179.769 -1921.2012 173.2378 -1923.9141 167.1226 -1926.9102 c160.8921 -1929.9629 155.1675 -1934.0586 149.0591 -1937.3398 c143.6431 -1940.25 139.5015 -1945.1494 134.3267 -1948.4385 c128.0645 -1952.418 132.5029 -1961.7295 138.5459 -1960.6074 C139.5557 -1969.333 149.5386 -1972.252 156.9028 -1975.1592 c170.7246 -1980.6143 183.9541 -1987.0703 198.0605 -1991.8662 c205.0977 -1994.2588 212.2383 -1996.3359 219.4307 -1998.2061 c226.519 -2000.0488 234.1162 -2001.1074 240.9985 -2003.6035 c247.0356 -2005.793 254.4648 -2006.2461 260.7861 -2007.3135 c263.8511 -2007.8311 266.9014 -2010.0195 269.9341 -2010.0195 c274.2598 -2010.0195 278.5967 -2009.9277 282.9194 -2010.0889 c286.6753 -2010.2285 290.4634 -2011.4492 294.1772 -2012.0039 c297.9014 -2012.5596 301.7148 -2012.7109 305.4731 -2012.9082 c313.9219 -2013.3535 322.4111 -2012.5488 330.8584 -2012.3242 c346.9399 -2011.8965 363.0728 -2012 379.1602 -2012 C401.3164 -2012 L404.9346 -2012 408.5522 -2012.3555 412.1553 -2011.9902 c416.5303 -2011.5469 420.7705 -2010.4082 425.1411 -2009.9658 c432.2397 -2009.2461 438.1904 -2008.8867 444.8687 -2006.0654 c450.6958 -2003.6035 456.9775 -2003.5527 461.2729 -1998.1914 c464.6602 -1993.9629 461.937 -1988.5547 458.1807 -1987.1318 C457.6455 -1985.916 457.4146 -1984.3057 456.8091 -1983.0977 c455.7637 -1981.0146 454.6089 -1979.0049 453.3838 -1977.0225 c450.8257 -1972.8848 449.2104 -1967.9307 447.0352 -1963.5488 c442.0879 -1953.5811 437.5288 -1943.4375 432.6084 -1933.457 c427.7837 -1923.6689 421.9424 -1914.4277 417.3174 -1904.5371 c416.5015 -1902.792 415.2129 -1901.3115 414.0293 -1899.8145 c412.811 -1898.2734 412.4424 -1895.6357 411.3955 -1893.8828 c408.896 -1889.6973 406.1055 -1885.9023 402.6104 -1882.4609 c396.0264 -1875.9775 391.9644 -1867.4121 385.834 -1860.4121 c382.5464 -1856.6582 380.5171 -1851.4502 377.6597 -1847.3135 c374.7124 -1843.0459 371.4502 -1839 368.4053 -1834.8018 c362.2969 -1826.3818 357.7915 -1816.793 352.4424 -1807.8867 c347.5596 -1799.7559 343.2295 -1791.7656 343.2163 -1782.1494 c343.2124 -1779.2637 341.6694 -1777.3721 339.6479 -1776.4727 C341.4966 -1765.8037 343.6538 -1755.1602 345.4526 -1744.5029 c348.0313 -1729.2246 349.8213 -1713.8096 352.0298 -1698.4795 c353.5938 -1687.627 353.9551 -1676.5547 354.811 -1665.6211 c355.1953 -1660.7158 355.8789 -1655.9395 355.8936 -1651.0313 C356.9917 -1652.1563 358.1445 -1653.2676 359.3276 -1654.418 c364.3267 -1659.2783 366.334 -1664.4541 370.8403 -1669.583 c375.2051 -1674.5508 379.627 -1679.2998 383.6797 -1684.5313 c387.5669 -1689.5498 390.5215 -1695.167 394.3687 -1700.1865 c396.144 -1702.5039 398.665 -1703.9453 400.376 -1706.2734 c402.3066 -1708.9004 403.4443 -1711.834 405.0068 -1714.6641 c406.6484 -1717.6377 409.1177 -1720.0645 410.877 -1722.9707 c413.0146 -1726.5029 415.2817 -1729.9414 417.8193 -1733.2002 c422.0776 -1738.6689 427.2891 -1743.3115 432.019 -1748.3643 c437.064 -1753.7529 440.9072 -1759.4023 444.4409 -1765.8633 c446.0518 -1768.8076 447.7915 -1771.6299 449.8271 -1774.2998 c451.7197 -1776.7822 452.6626 -1780.6855 453.8096 -1783.5664 c455.0176 -1786.5996 456.2637 -1789.6152 457.6235 -1792.583 c459.1533 -1795.9229 461.5537 -1798.3916 463.3853 -1801.5068 c464.7603 -1803.8457 466.6113 -1806.0723 467.5684 -1808.6113 c468.5654 -1811.2568 469.4116 -1813.8965 470.8516 -1816.3477 c474.0786 -1821.8438 478.522 -1826.374 482.3418 -1831.4443 c486.5859 -1837.0781 491.7163 -1841.9941 495.8467 -1847.7295 c497.8613 -1850.5273 499.3198 -1853.6104 501.416 -1856.3545 c503.4058 -1858.96 506.1709 -1861.2402 507.3184 -1863.6924 c510.2539 -1869.9678 515.2061 -1875.4541 519.2598 -1881.0527 c523.7969 -1887.3184 527.8848 -1894.1455 533.2393 -1899.75 c537.2285 -1903.9248 541.9316 -1907.5146 546.0425 -1911.625 C552.2534 -1917.8359 L554.5596 -1920.1426 558.0801 -1921.6738 560.7441 -1923.5801 c565.7852 -1927.1855 569.4937 -1931.958 573.814 -1936.3145 c577.8408 -1940.375 581.6865 -1944.5801 585.645 -1948.7539 c587.5039 -1950.7139 589.7124 -1951.085 591.6641 -1950.4932 C592 -1950.5684 592.3462 -1950.6289 592.7144 -1950.6582 c605.2275 -1951.6406 618.6387 -1945.8809 629.6323 -1940.3701 c641.1709 -1934.5859 649.3325 -1924.7168 660.2842 -1918.1904 c665.667 -1914.9814 671.3779 -1912.5 676.7368 -1909.2373 c682.5366 -1905.7051 688.1025 -1901.5654 693.5542 -1897.5186 c697.8867 -1894.3027 701.9614 -1890.9219 706.6113 -1888.1641 c711.3433 -1885.3584 715.8896 -1882.0508 718.2871 -1876.9463 c721.8301 -1869.4063 710.625 -1862.8018 707.0625 -1870.3857 cf0 D46.5898 -1449.1387 m45.6709 -1444.667 46 -1439.7734 46 -1435.2197 C46 -1416.7021 L46 -1411.6348 48.9131 -1405.8037 50.2998 -1400.9619 c51.916 -1395.3193 52.771 -1388.585 55.272 -1383.3203 c57.3101 -1379.0303 60.0327 -1375.0605 62.1377 -1370.7988 c64.4707 -1366.0771 66.8179 -1361.4971 69.7173 -1357.0605 c72.0776 -1353.4492 76.6558 -1350.1445 79.9097 -1347.3252 c80.7383 -1346.6084 81.6191 -1345.9521 82.5391 -1345.3564 C83.1138 -1344.9561 83.3721 -1344.709 83.4766 -1344.5586 C83.6333 -1344.6201 83.9512 -1344.6719 84.5806 -1344.6719 c87.6396 -1344.6719 90.5464 -1344.5127 93.5757 -1344.0732 c99.2788 -1343.2451 104.6265 -1340.834 110.3989 -1340.0752 c115.8794 -1339.3545 121.686 -1340 127.209 -1340 C141.5449 -1340 L144.3613 -1340 147.1626 -1339.875 149.9741 -1339.6885 c152.6294 -1339.5127 156.7979 -1338.3887 159.2983 -1339.6484 c161.0093 -1340.5098 162.3867 -1341.6318 164.0073 -1342.5811 c166.2651 -1343.9043 169.0186 -1344.3535 171.4966 -1345.0801 c173.6128 -1345.7012 175.7842 -1347.2725 177.4209 -1348.7148 c178.8857 -1350.0059 181.6196 -1350.9902 182.6997 -1352.5859 c182.9316 -1352.9297 183.1841 -1353.2305 183.4463 -1353.5088 C183.9072 -1356.3633 185.9487 -1359.0918 189.5488 -1359.5117 c191.7515 -1359.7686 194.2598 -1362.4736 196.1621 -1363.5713 c198.6904 -1365.0313 200.7256 -1366.1846 202.3599 -1368.666 c206.0347 -1374.2441 203.9048 -1380.8174 202.6104 -1386.8799 c201.4727 -1392.21 199.0313 -1399.0898 192.729 -1399.6328 c185.1655 -1400.2842 177.8398 -1398.1416 170.373 -1397.3535 C169.8091 -1397.2002 169.1968 -1397 168.5249 -1397 C167.2881 -1397 L166.7891 -1397 166.3218 -1397.0479 165.8823 -1397.1318 C164.8374 -1395.8018 163.2471 -1394.8574 161.105 -1394.7441 c155.0234 -1394.4238 150.0942 -1390.0449 143.9941 -1389.7461 c137.335 -1389.4199 132.7095 -1389.2793 127.1987 -1393.6152 c118.5205 -1400.4424 108.396 -1407.1963 104.1323 -1418.0664 c102.9995 -1420.9531 102.7529 -1424.042 102.6689 -1427.123 c102.5811 -1430.3379 101.6841 -1433.3857 101.5186 -1436.5811 c101.1895 -1442.915 105.5474 -1448.4502 102.7437 -1454.6025 c101.3105 -1457.7471 92.3301 -1459.4043 89.4058 -1460.5215 c81.8911 -1463.3926 74.1812 -1465.7061 66.6162 -1468.4326 c63.9834 -1469.3818 61.4341 -1470.4766 58.9199 -1471.6416 C58.7715 -1469.918 57.7598 -1468.3145 55.5557 -1467.3604 c47.5894 -1463.9111 48.1133 -1456.5479 46.5898 -1449.1387 cf149.4639 -1538.6025 m141.0093 -1536.209 132.957 -1532.6943 124.9004 -1529.2051 C125.5566 -1529.0059 126.2129 -1528.8057 126.8696 -1528.6104 c142.1851 -1524.0527 158.7061 -1523.0156 173.4033 -1516.6328 C174.2744 -1523.3154 177.0996 -1529.4316 180.375 -1535.3486 c181.3765 -1537.1582 182.3862 -1538.9473 183.3921 -1540.7305 C172.4824 -1540.958 160.3125 -1541.6748 149.4639 -1538.6025 cf345.0566 -1599.4746 m345.0566 -1607.3145 344.6489 -1614.9775 343.5986 -1622.7539 c342.6133 -1630.0488 342.1006 -1636.8945 342.5835 -1644.2568 c343.1011 -1652.1484 342.2817 -1659.6084 341.6675 -1667.4561 c341.0957 -1674.7568 340.3188 -1682.0898 340.001 -1689.3945 c339.6641 -1697.1396 337.7783 -1704.7568 336.6318 -1712.4033 c335.4893 -1720.0254 335.0356 -1727.7461 333.8433 -1735.3789 c332.5835 -1743.4404 331.0996 -1751.4648 329.7803 -1759.5156 c327.4189 -1773.9248 324.8281 -1788.2676 322.5864 -1802.7012 c321.2061 -1811.5898 320.6738 -1820.7598 320.3472 -1829.7617 c320.0044 -1839.2139 319.1206 -1848.667 319.0781 -1858.127 c318.9897 -1877.6572 317.7896 -1896.3105 322.6226 -1915.4629 c325.8984 -1928.4434 338.0488 -1955.5645 318.3721 -1961.1348 c315.1768 -1962.04 311.3813 -1960.8291 308.2617 -1960.1348 c304.0518 -1959.1973 299.9141 -1957.7842 295.9731 -1956.041 c292.0088 -1954.2871 288.5513 -1951.7051 284.4907 -1950.1094 c282.5532 -1949.3477 280.4209 -1948.8564 278.5801 -1947.9316 C277.8848 -1942.1064 276.4531 -1936.4258 276.4351 -1930.5537 c276.4136 -1923.5576 272.5361 -1915.4375 270.0195 -1909.0391 c268.7754 -1905.876 268.0786 -1902.4102 267.2363 -1899.125 c266.2979 -1895.4639 266.6396 -1891.7178 265.9424 -1888.0146 c264.4165 -1879.9063 264.0713 -1872.0322 264.0679 -1863.7715 c264.0615 -1847.7881 263.5068 -1831.7646 265.3506 -1815.8604 c266.1685 -1808.8027 267.8203 -1801.9121 268.7139 -1794.8672 c269.1699 -1791.2744 269.0146 -1787.6162 269.0146 -1784.0039 c269.0146 -1779.4756 269.5454 -1775.3799 270.4683 -1770.9482 c273.5103 -1756.3311 275.9961 -1741.627 278.9233 -1726.9883 c280.3252 -1719.9785 281.6772 -1713.0322 282.5518 -1705.9355 c283.5273 -1698.0166 287.0562 -1690.9795 289.6299 -1683.5098 c294.5542 -1669.2148 297.6372 -1653.5039 299.5552 -1638.5313 c300.4468 -1631.5693 304.8789 -1624.6621 304.8789 -1617.667 c304.8789 -1609.8965 304.3262 -1602.4541 303.6958 -1594.7344 c303.3823 -1590.8945 303.5225 -1587.2246 302.6772 -1583.418 c301.7305 -1579.1514 299.7393 -1575.0029 298.6182 -1570.7344 c297.4014 -1566.1006 297.459 -1561.8359 297.459 -1557.0684 c297.459 -1552.3496 293.8135 -1546.8057 292.1201 -1542.4707 c290.522 -1538.3799 289.8955 -1534.1348 288.8594 -1529.8965 c287.7627 -1525.4141 286.0361 -1521.084 284.3848 -1516.7852 c281.0796 -1508.1807 277.8472 -1499.6104 277.6719 -1490.2861 c277.5146 -1481.9131 264.5142 -1481.8984 264.6719 -1490.2861 c264.9321 -1504.1328 270.7212 -1516.1113 275.0352 -1528.9775 c277.0884 -1535.1016 277.8374 -1541.4551 280.1992 -1547.5 c281.457 -1550.7197 282.8779 -1553.8691 284.1001 -1557.1045 c285.4604 -1560.7061 283.7617 -1564.9775 284.6914 -1568.6895 c286.3384 -1575.2695 288.9941 -1581.7041 290.4507 -1588.2656 c291.0254 -1590.8555 290.6201 -1593.8125 290.8359 -1596.4492 c291.1641 -1600.4727 291.8789 -1604.334 291.8789 -1608.3926 c291.8789 -1612.1152 292.1973 -1615.8965 291.2407 -1619.5205 c290.3359 -1622.9473 289.0439 -1626.2734 288.0352 -1629.6719 c285.8296 -1637.1016 285.6001 -1645.293 283.9634 -1652.9072 c282.4751 -1659.8311 280.6841 -1666.6904 278.9492 -1673.5566 C269.4868 -1661.2988 261.3789 -1647.9521 253.8442 -1634.4844 c251.7949 -1630.8213 249.8467 -1627.1016 247.9243 -1623.3701 c246.1782 -1619.9805 244.7617 -1616.0518 242.377 -1613.0703 c236.8135 -1606.1162 230.4658 -1599.3457 225.9565 -1591.6494 c224.4146 -1589.0176 223.251 -1586.1904 221.5962 -1583.623 c220.0229 -1581.1826 217.6436 -1579.6807 215.6328 -1577.6699 c210.4585 -1572.4951 209.4775 -1565.7021 206.9468 -1559.0508 c203.9136 -1551.0762 200.1523 -1543.1533 195.8408 -1535.7949 c191.8657 -1529.0117 186.5044 -1521.9434 186.1553 -1513.7842 c185.9517 -1509.0225 181.6377 -1506.9688 178.0322 -1507.6348 C176.4565 -1504.6934 172.8311 -1502.6143 168.9546 -1504.4619 c162.5977 -1507.4922 155.6831 -1508.8857 148.7983 -1510.1514 c141.3916 -1511.5137 134.1499 -1513.1172 126.8804 -1515.0889 c113.5044 -1518.7158 99.2583 -1523.4072 87.3804 -1530.6729 c84.8384 -1532.2285 82.3296 -1533.6758 79.4561 -1534.5068 c76.6885 -1535.3076 74.6924 -1531.9551 73.1025 -1530.2119 c68.3989 -1525.0547 66.6406 -1517.5889 64.0078 -1511.3223 c61.2661 -1504.7979 59.1865 -1497.9414 57.6724 -1491.0322 c57.3887 -1489.7373 57.3633 -1488.3965 57.1772 -1487.0703 C59.981 -1485.7617 62.6655 -1484.04 65.4756 -1482.7744 c78.2725 -1477.0088 92.2642 -1474.0332 105.1426 -1468.3945 c110.1543 -1466.2012 113.9272 -1462.7695 115.4307 -1457.3867 c116.2759 -1454.3623 116.7954 -1451.3906 116.894 -1448.2441 c117.0083 -1444.6133 114.6313 -1441.8574 114.4268 -1438.3447 c114.2393 -1435.1211 115.4941 -1431.6992 115.6631 -1428.4512 c115.7998 -1425.8174 115.6069 -1423.6514 117.0215 -1421.334 c118.3433 -1419.168 119.9595 -1417.1982 121.6411 -1415.3076 c123.6265 -1413.0762 125.5225 -1410.0811 128.3975 -1408.8545 c130.9307 -1407.7734 133.1787 -1405.418 135.2778 -1403.6826 c137.3618 -1401.96 138.894 -1402.2148 141.4624 -1402.4707 c147.7686 -1403.0996 152.9932 -1407.3164 159.4482 -1407.6563 C161.105 -1407.7441 L161.5781 -1407.7695 162.021 -1407.7461 162.4409 -1407.6895 C163.4873 -1409.041 165.1011 -1410 167.2881 -1410.1084 c178.3398 -1410.6543 189.9819 -1415.3184 200.8174 -1410.8457 c210.1255 -1407.0039 213.8477 -1396.4385 215.7588 -1387.4307 c217.7764 -1377.9189 218.4194 -1369.4443 212.875 -1361.0264 c210.3491 -1357.1914 206.7446 -1354.4561 202.7236 -1352.3467 c199.8184 -1350.8223 197.5088 -1349.165 194.8535 -1347.9844 C194.6748 -1347.3418 194.373 -1346.6855 193.9253 -1346.0234 c191.1416 -1341.9082 186.29 -1338.7539 182.1743 -1336.0225 c179.9526 -1334.5488 177.4028 -1333.541 174.9526 -1332.5273 c173.5596 -1331.9512 171.9463 -1331.7051 170.5 -1331.2803 c172.4023 -1331.8389 168.7754 -1329.9746 168.5703 -1329.8379 c162.7715 -1325.9902 156.6719 -1326.002 149.9741 -1326.5508 c143.4316 -1327.0869 136.7485 -1326.7246 130.187 -1326.7246 c124.2139 -1326.7246 118.2251 -1326.6016 112.2549 -1326.7803 c105.2905 -1326.9893 98.6143 -1329.3076 91.9766 -1331.1309 c89.6226 -1331.7773 87.1641 -1331.7285 84.7314 -1331.6895 C85.7568 -1328.0684 88.5547 -1325.875 91.479 -1323.5049 c95.4365 -1320.2979 98.9253 -1316.6338 103.1777 -1313.8477 c114.0732 -1306.707 125.5967 -1302.5547 138.1436 -1299.46 c143.4702 -1298.1465 148.5967 -1296.2197 153.9077 -1294.8877 c159.8574 -1293.3965 166.0444 -1293.0654 172.1494 -1292.8496 c184.9546 -1292.3984 197.4346 -1292.959 209.832 -1296.4229 c220.0625 -1299.2803 231.2192 -1303.4883 239.6094 -1310.0146 c244.0132 -1313.4404 248.8359 -1315.3809 251.9087 -1320.2695 c255.0313 -1325.2393 255.6147 -1331.2344 256.9512 -1336.8135 c258.4932 -1343.2529 259.6318 -1349.0205 259.7847 -1355.6699 c259.9365 -1362.2949 260.6401 -1368.8965 260.9014 -1375.5176 c261.1484 -1381.7871 261.1299 -1388.1719 260.9429 -1394.4434 c260.8779 -1396.6152 260.4268 -1400.4561 259.7095 -1402.2578 C253.459 -1406.3672 259.8301 -1416.6406 267.0317 -1413.04 c273.5303 -1409.791 280.189 -1407.251 286.8188 -1404.3828 c294.3203 -1401.1377 301.9761 -1397.3525 310.2368 -1396.6641 c316.2124 -1396.167 321.1465 -1398.1543 324.2788 -1403.3223 c326.2734 -1406.6133 329.0464 -1409.1719 330.4482 -1412.8652 c331.9233 -1416.751 332.2881 -1420.7197 334.3193 -1424.4316 c336.3564 -1428.1533 337.3418 -1430.5674 337.5713 -1434.9512 c337.7524 -1438.4072 337.7578 -1441.9004 337.8345 -1445.3604 c337.8965 -1448.1602 333.1206 -1449.123 330.8394 -1450.1387 c327.3472 -1451.6943 323.7031 -1452.9355 320.1479 -1454.3389 c312.2529 -1457.4551 303.8867 -1458.8359 295.9438 -1461.6104 c288.1479 -1464.333 282.4771 -1469.7627 275.3105 -1473.5439 c267.894 -1477.4561 274.4639 -1488.6768 281.8721 -1484.7686 c285.4326 -1482.8906 288.5605 -1480.5313 291.8062 -1478.1738 c292.043 -1478.002 292.2861 -1477.8525 292.5254 -1477.6895 C296.1812 -1481.3311 301.3491 -1482.8623 305.2021 -1486.3232 c307.5303 -1488.4131 310.0576 -1490.2578 312.333 -1492.4102 c314.6367 -1494.5889 315.688 -1498.373 316.9136 -1501.2109 c319.2759 -1506.6797 322.6685 -1511.4785 324.8672 -1517.0332 c326.106 -1520.1641 328.0747 -1522.7422 330.0474 -1525.4365 c332.2178 -1528.4014 333.5688 -1532.3662 334.771 -1535.8262 c335.8452 -1538.918 335.9839 -1542.1914 337.0869 -1545.1953 c338.0913 -1547.9307 339.5234 -1550.4893 340.5981 -1553.1953 c341.9238 -1556.5322 342.1982 -1560.2354 342.8555 -1563.7441 c343.6719 -1568.1035 344.5259 -1572.4326 344.916 -1576.8564 c345.5732 -1584.3066 345.0566 -1591.998 345.0566 -1599.4746 cf564.3452 -1858.9229 m563.7158 -1867.5186 563.707 -1875.418 561.3467 -1883.7754 c559.4497 -1890.4941 557.52 -1897.1006 556.8032 -1904.001 C555.0903 -1902.2881 553.377 -1900.5742 551.6641 -1898.8613 c549.1172 -1896.3154 546.4365 -1894.1543 543.7334 -1891.8008 c540.4707 -1888.96 538.2417 -1885.3438 535.7852 -1881.8379 c532 -1876.4375 528.334 -1870.0693 523.9429 -1865.0742 C525.126 -1862.4561 525.6768 -1859.4785 526.1226 -1856.7246 c527.1455 -1850.4063 528.1528 -1844.2197 528.4912 -1837.8008 c528.8765 -1830.4961 528.8335 -1823.2549 529.4058 -1815.9609 c530.0293 -1808.0117 529.958 -1800.0107 529.959 -1792.043 c529.96 -1784.6045 528.8198 -1777.2207 528.7222 -1769.7822 c528.6167 -1761.7383 527.9282 -1753.8135 526.7881 -1745.8516 c524.5923 -1730.5166 520.0884 -1715.5596 514.5957 -1701.1084 c512.1274 -1694.6133 509.1904 -1688.5098 507.7773 -1681.6709 c506.2617 -1674.332 504.4609 -1667.1299 502.7114 -1659.8428 c499.0811 -1644.7207 496.6147 -1629.1738 495.6143 -1613.6572 c495.1729 -1606.8105 495 -1599.959 495 -1593.1016 C495 -1583.04 L495 -1578.6836 496.4258 -1574.4453 496.3853 -1570.0547 c496.3154 -1562.502 495.5928 -1555.0762 497.4893 -1547.666 c497.6475 -1547.0479 497.8081 -1546.4297 497.9683 -1545.8105 C497.9482 -1548.0859 497.9219 -1550.3564 497.874 -1552.6172 c497.5835 -1566.3691 499.9575 -1581.4004 503.5869 -1594.6611 c505.3672 -1601.165 508.8892 -1607.5 511.4741 -1613.7188 c514.5654 -1621.1572 517.146 -1628.7773 519.605 -1636.4424 c521.7236 -1643.0469 524.6816 -1649.082 526.333 -1655.873 c528.0781 -1663.0508 530.4136 -1669.2949 533.7422 -1675.9092 c536.7383 -1681.8633 537.9409 -1688.3213 540.562 -1694.4375 c543.563 -1701.4404 546.832 -1708.3408 549.5093 -1715.4785 c552.085 -1722.3467 554.4009 -1729.04 557.6499 -1735.6416 c561.1597 -1742.7734 563.0332 -1749.873 564.2837 -1757.7139 c565.4038 -1764.7373 565 -1772.0596 565 -1779.1445 C565 -1803.0205 L565 -1821.6387 565.7051 -1840.3467 564.3452 -1858.9229 cf*U600.1313 -2158.125 m595.5903 -2156.1621 590.9956 -2152.9805 587.3711 -2150.0703 c584.9243 -2148.1055 582.5776 -2146.0352 580.0513 -2144.166 c577.2334 -2142.082 573.7598 -2141.4844 570.7979 -2139.6787 c568.5049 -2138.2813 566.624 -2135.1523 564.3994 -2133.4258 c561.7358 -2131.3574 558.7529 -2130.1582 556.1641 -2127.9902 c553.4336 -2125.7031 550.7993 -2123.3027 548.0684 -2121.0156 c545.0137 -2118.458 541.6284 -2116.6563 538.3579 -2114.4189 c533.2417 -2110.918 527.9355 -2106.0068 524.3223 -2100.9785 c520.6924 -2095.9258 516.6802 -2092.1953 510.6265 -2090.3252 c503.7856 -2088.2109 496.9443 -2090.7578 490.0679 -2091.0098 c486.668 -2091.1348 483.3838 -2091.8652 480.0952 -2092.6836 c476.2163 -2093.6484 472.3882 -2093.4199 468.4253 -2093.6367 c464.9463 -2093.8281 461.4658 -2094.4883 458.1323 -2095.4727 c454.9692 -2096.4072 451.3477 -2095.6953 448.0884 -2095.8779 c440.3696 -2096.3105 432.9121 -2098 425.1411 -2098 C377.7739 -2098 L370.2578 -2098 362.752 -2098.2813 355.2666 -2097.499 c347.0718 -2096.6426 338.9873 -2097.3721 331.0239 -2094.8906 c324.5269 -2092.8652 317.7456 -2093.6436 311.0635 -2093.0049 c303.0542 -2092.2383 294.7305 -2088.1855 287.1211 -2085.6504 c283.1494 -2084.3262 279.5308 -2083.002 275.3726 -2082.2959 c271.1748 -2081.583 266.917 -2081.1162 262.9019 -2079.6865 c258.686 -2078.1865 254.6421 -2077.1426 250.2261 -2076.3926 c245.6406 -2075.6133 241.3677 -2073.7656 236.8726 -2072.5996 c228.2588 -2070.3652 219.2471 -2069.6123 210.5688 -2067.5635 c202.1895 -2065.5859 195.9727 -2059.8984 188.1992 -2056.5977 c185.7866 -2055.5742 183.0117 -2053.7871 179.8721 -2052.6367 c176.0977 -2051.2549 173.2661 -2048.0996 169.4482 -2046.5723 c160.7607 -2043.0967 152.04 -2039.1455 144.2441 -2033.9482 c140.0586 -2031.1582 135.9536 -2028.1328 131.5239 -2025.7422 c127.5444 -2023.5947 123.1851 -2022.6875 119.4219 -2020.1143 c116.0566 -2017.8135 113.2373 -2014.4795 110.3691 -2011.6113 c108.9355 -2010.1777 104.5181 -2006.8174 104.2998 -2005.502 c103.0962 -1998.2412 93.2671 -2000.0859 91.8384 -2006.2109 C88.1401 -2005.1162 83.2021 -2007.1133 82.876 -2012.1758 c82.6543 -2015.6191 80.4966 -2018.7168 79.0679 -2021.7646 c77.4932 -2025.125 76.5391 -2028.75 75.5981 -2032.3271 c73.5776 -2040.0117 75.1558 -2048.625 72.0039 -2055.9941 c70.6245 -2059.2188 68.9375 -2062.4502 67.2964 -2065.5498 c66.3638 -2067.3115 65.3604 -2067.4531 63.4053 -2067.5117 c55.9243 -2067.7373 48.8716 -2060.1309 43.9624 -2055.3721 c33.2852 -2045.0215 27.042 -2031.5918 19.3008 -2019.0703 c17.0742 -2015.4688 14.8818 -2011.8408 12.5928 -2008.2773 c10.1265 -2004.4365 7.3418 -1999.377 3.61377 -1996.6699 c1.33008 -1995.0107 0.85498 -1992.5576 -0.372559 -1990.2832 C-0.372559 -2012.3633 L0.217285 -2013.1572 0.798828 -2013.9746 1.36768 -2014.8379 c4.26123 -2019.2305 7.02539 -2023.7627 9.68359 -2028.2998 c18.7891 -2043.8408 27.2495 -2059.4453 41.6753 -2070.8203 c48.6973 -2076.3574 56.5098 -2081.292 65.8389 -2080.3564 c74.9873 -2079.4395 77.9712 -2072.7773 81.77 -2065.4941 c83.7393 -2061.7178 85.6567 -2057.6826 85.894 -2053.3574 c86.0132 -2051.1875 86.9102 -2049.0088 87.0645 -2046.8047 c87.2451 -2044.2168 87.0488 -2041.5879 87.4434 -2039.0205 c88.147 -2034.4365 89.5918 -2029.6455 91.6572 -2025.5068 c93.3354 -2022.1426 94.7373 -2018.9629 95.4399 -2015.4297 C97.2739 -2017.3574 99.4463 -2019.0732 101.1768 -2020.8037 c106.0547 -2025.6816 110.877 -2030.5703 117.0122 -2033.8662 c120.0376 -2035.4922 123.4932 -2036.1738 126.5527 -2037.8252 c129.8706 -2039.6152 132.957 -2042.0225 136.0928 -2044.1133 c142.6958 -2048.5156 149.5356 -2051.873 156.7637 -2055.1123 c159.7354 -2056.4443 162.7778 -2057.6758 165.7197 -2059.0508 c168.4937 -2060.3486 170.4907 -2062.6523 173.3418 -2063.9404 c179.4253 -2066.6885 185.3857 -2069.3896 191.0737 -2072.998 c202.9683 -2080.541 216.8052 -2082.1387 230.3975 -2084.4463 c237.1152 -2085.5869 243.3232 -2088.3467 250.0679 -2089.4912 c253.3252 -2090.0439 256.3623 -2091.0742 259.4458 -2092.2295 c262.9814 -2093.5537 266.5869 -2093.8721 270.2676 -2094.5654 c285.2656 -2097.3906 298.9292 -2105.2441 314.3013 -2106.3281 c317.4575 -2106.5508 320.728 -2106.1621 323.8579 -2106.6172 c327.6563 -2107.168 331.1694 -2108.7754 334.9883 -2109.3281 c342.8994 -2110.4727 351.0146 -2110.3965 358.9771 -2111.0635 c374.6777 -2112.377 390.7686 -2111.4297 406.5151 -2111.4297 c416.2808 -2111.4297 426.2119 -2111.9951 435.9106 -2110.709 c445.687 -2109.4121 455.5596 -2109.2539 465.1533 -2107.0791 c469.5625 -2106.0801 474.1519 -2106.7793 478.6045 -2106.166 c483.1245 -2105.543 487.3369 -2104.1094 491.9219 -2103.9414 c496.4087 -2103.7773 501.1719 -2101.7568 505.6538 -2102.54 c509.5869 -2103.2285 511.5962 -2105.4512 513.8403 -2108.5742 c518.918 -2115.6416 526.0171 -2121.6895 533.1782 -2126.5898 c537.0806 -2129.2598 540.6797 -2131.709 544.2715 -2134.8496 c546.0444 -2136.4004 547.8364 -2137.9219 549.668 -2139.4033 c551.7891 -2141.1182 554.2852 -2141.9053 556.3965 -2143.5439 c559.6836 -2146.0967 561.8535 -2149.4561 565.4727 -2151.6621 c567.1626 -2152.6934 569.1938 -2153.3428 571.0469 -2154.0137 c573.312 -2154.833 575.1685 -2156.7285 576.96 -2158.2627 c577.6094 -2158.8184 578.2793 -2159.374 578.9609 -2159.9277 C606.4292 -2159.9277 L604.8672 -2158.3262 602.3857 -2157.7246 600.1313 -2158.125 Cf670.543 -2093.0547 m673.4316 -2100.2764 673.8765 -2108.2246 673.6367 -2115.9043 c673.4204 -2122.8398 671.9829 -2129.6152 671.21 -2136.4883 c670.4404 -2143.3301 668.9375 -2150.1016 666.5576 -2156.5635 c666.1338 -2157.7148 665.625 -2158.834 665.0625 -2159.9277 C679.1045 -2159.9277 L682.0557 -2151.96 683.4346 -2143.3799 684.3857 -2134.9258 c686.0669 -2119.9785 688.168 -2106.0684 683.665 -2091.3047 c681.4497 -2084.043 678.2837 -2076.3428 675.0029 -2069.4941 c673.6338 -2066.6377 672.7212 -2063.6982 672.0659 -2060.6016 c671.2505 -2056.748 672.5645 -2054.6729 675.0645 -2051.915 c684.2134 -2041.8223 695.2207 -2033.7813 704.9175 -2024.207 c709.9248 -2019.2627 715.0835 -2014.416 720.7075 -2010.1738 c726.1318 -2006.083 729.4756 -2000.3398 733.8057 -1995.1934 c737.9341 -1990.2861 743.501 -1986.5127 748.1455 -1982.0908 c753.5132 -1976.9805 758.415 -1971.7949 762.6963 -1965.7324 c766.8428 -1959.8613 771.0449 -1954.0518 774.8389 -1947.9414 c778.8965 -1941.4063 784.1729 -1935.8213 788.0015 -1929.1338 c795.1646 -1916.6221 801.4131 -1903.5322 807.083 -1890.3027 c808.814 -1886.2627 810.5459 -1882.2227 812.2773 -1878.1826 c815.5415 -1870.5664 804.3457 -1863.9365 801.0518 -1871.6221 c798.084 -1878.5469 795.1157 -1885.4727 792.1475 -1892.3984 c789.3301 -1898.9727 785.6885 -1904.8213 782.501 -1911.1963 c779.3232 -1917.5527 776.4668 -1924.1631 771.9829 -1929.7383 c769.7197 -1932.5527 767.5186 -1934.9355 765.6372 -1938.0596 c763.3662 -1941.8301 761.0332 -1945.5566 758.5542 -1949.1943 c754.7905 -1954.7168 751.0122 -1960.6709 746.4165 -1965.5332 c741.4058 -1970.834 736.0093 -1975.8779 730.4097 -1980.5488 c725.4678 -1984.6719 721.7466 -1989.5117 717.918 -1994.6514 c713.6841 -2000.334 707.2681 -2004.2168 702.0498 -2008.9717 c696.9053 -2013.6592 692.1865 -2018.7881 687.0352 -2023.4648 c681.7334 -2028.2773 676.1235 -2032.4521 671.0923 -2037.5322 c667.0005 -2041.6631 662.5313 -2045.5557 660.0674 -2050.9434 c657.1646 -2057.292 659.4658 -2065.708 661.9028 -2071.8408 c664.7202 -2078.9316 667.707 -2085.9658 670.543 -2093.0547 cf943.6714 -2002.8779 m943.813 -2008.1309 945.2568 -2013.3457 946.4629 -2018.4268 c948.8052 -2028.2939 952.1909 -2037.7754 956.1509 -2047.1328 c958.1865 -2051.9424 959.3789 -2057.1084 961.5313 -2061.9316 c963.7095 -2066.8115 966.479 -2071.4141 969.4614 -2075.8379 c974.7148 -2083.6318 975.124 -2092.5029 977.9277 -2101.2754 c979.5283 -2106.2822 981.3345 -2111.333 981.96 -2116.582 c982.5967 -2121.9258 982.2227 -2127.4023 982.0576 -2132.7637 c981.8848 -2138.3887 980.9995 -2143.8535 980.7231 -2149.4512 c980.543 -2153.1074 980.4214 -2156.4863 979.874 -2159.9277 C992.7378 -2159.9277 L993.3682 -2154.625 993.521 -2149.2813 994.4072 -2143.7588 c995.9502 -2134.1445 996.0576 -2122.7656 994.5234 -2113.1406 c993.6875 -2107.8936 992.1309 -2102.8516 990.4634 -2097.8193 c988.8945 -2093.084 988.104 -2088.207 986.9766 -2083.3623 c984.79 -2073.9668 978.6733 -2066.9502 974.3022 -2058.5645 c972.1255 -2054.3887 970.5054 -2050.002 969.1919 -2045.4883 c967.7461 -2040.5205 965.4463 -2035.7393 963.6885 -2030.8564 c960.4824 -2021.9521 957.4121 -2012.3623 956.6714 -2002.8779 c956.4634 -2000.2119 956.5117 -1997.5254 956.5659 -1994.8379 C958.9063 -1997.6582 961.3276 -2000.3906 963.9243 -2003.0195 c971.2734 -2010.459 979.9082 -2016.3311 987.1089 -2023.8193 c994.8818 -2031.9033 1000.2061 -2041.6377 1006.1475 -2051.0811 c1012.2754 -2060.8213 1018.4175 -2070.5527 1024.3726 -2080.4004 c1030.0137 -2089.7285 1035.9844 -2099.1094 1040.9067 -2108.8311 c1046.0293 -2118.9482 1047.105 -2129.7031 1048.2769 -2140.7939 c1048.9678 -2147.333 1049.2471 -2153.6191 1048.7183 -2159.9277 C1061.8584 -2159.9277 L1062.3047 -2153.5762 1062.0264 -2147.1797 1061.2769 -2140.7939 c1059.9004 -2129.0654 1058.9541 -2117.957 1054.2588 -2106.9629 c1049.5664 -2095.9727 1042.7031 -2085.71 1036.5776 -2075.4668 c1030.3457 -2065.0479 1023.8398 -2054.793 1017.3726 -2044.5195 c1010.7969 -2034.0732 1004.8105 -2023.6465 996.3013 -2014.625 c992.6763 -2010.7822 988.8994 -2007.9521 984.7656 -2004.7402 c980.0601 -2001.085 975.9199 -1996.6602 971.7422 -1992.4307 c967.917 -1988.5586 964.0566 -1984.2637 961.4473 -1979.4619 C961.29 -1977.9854 961.0137 -1976.8906 960.3721 -1975.5049 c959.3755 -1973.3496 957.8008 -1972.0107 955.8765 -1970.7002 c953.9058 -1969.3574 951.3115 -1969.6914 949.3149 -1970.7002 c942.9404 -1973.9209 943.2817 -1982.1182 943.5708 -1988.1973 c943.8027 -1993.082 943.5396 -1997.9883 943.6714 -2002.8779 cf1119.23 -2002.3926 m1120.4985 -2009.9824 1121.334 -2017.5225 1122.3086 -2025.1621 c1124.3726 -2041.3447 1130.0117 -2057.0938 1133.0298 -2073.1445 c1134.5088 -2081.0117 1135.79 -2088.6172 1138.3013 -2096.25 c1141.0762 -2104.6826 1144.4595 -2112.8271 1146.7021 -2121.4375 c1149.9951 -2134.0811 1151.0757 -2146.9648 1151.3164 -2159.9277 C1164.4595 -2159.9277 L1164.29 -2151.9336 1163.728 -2143.9492 1162.6621 -2136.0752 c1160.521 -2120.252 1155.1982 -2106.0479 1150.2432 -2090.9893 c1147.9438 -2084.001 1146.8696 -2076.9004 1145.5654 -2069.6885 c1144.1685 -2061.9629 1142.3535 -2054.3174 1140.4702 -2046.6982 c1138.7124 -2039.5889 1136.5747 -2032.5127 1135.3477 -2025.2891 c1134.0469 -2017.627 1133.52 -2009.8398 1132.2388 -2002.1738 c1131.1958 -1995.9326 1130.9976 -1990.0576 1130.9976 -1983.7324 c1130.9976 -1976.499 1129.9814 -1969.3008 1129.7788 -1962.0723 c1129.3223 -1945.7783 1132.5986 -1929.5273 1134.5918 -1913.4248 c1136.5269 -1897.791 1138.0391 -1882.1123 1141.125 -1866.6475 c1147.2202 -1836.1006 1163.9434 -1808.8887 1179.207 -1782.166 c1182.8774 -1775.7393 1186.7573 -1769.4336 1190.6323 -1763.1289 c1194.6826 -1756.54 1198.334 -1749.4346 1202.8809 -1743.1875 c1207.3579 -1737.0352 1212.8096 -1731.5537 1218.1421 -1726.1523 c1219.6758 -1724.5996 1221.313 -1723.042 1223.0479 -1721.5771 C1222.5107 -1722.5684 1221.9927 -1723.5313 1221.5313 -1724.4541 c1217.8013 -1731.9209 1215.5342 -1740.4053 1212.7734 -1748.2676 c1207.9048 -1762.1309 1202.5879 -1775.7969 1197.6563 -1789.5801 c1192.6709 -1803.5156 1187.1841 -1817.2354 1182.5898 -1831.3242 c1177.7554 -1846.1504 1175.5859 -1861.6328 1173.5586 -1877.0498 c1169.3667 -1908.9307 1165.8257 -1941.1221 1167.6675 -1973.2891 c1168.5532 -1988.7578 1169.0645 -2004.2363 1169.9336 -2019.7021 c1170.7861 -2034.8789 1174.4043 -2048.9922 1179.2866 -2063.3271 c1183.9658 -2077.0674 1190.1509 -2089.8262 1196.7578 -2102.6973 c1199.8413 -2108.7041 1201.436 -2115.5146 1202.9824 -2122.0449 c1204.5967 -2128.8623 1206.9209 -2135.377 1208.5996 -2142.1709 c1210.0244 -2147.9385 1210.6279 -2153.9063 1210.873 -2159.9277 C1223.7759 -2159.9277 L1223.5117 -2153.3564 1222.9072 -2146.8232 1221.5298 -2140.4316 c1220.0488 -2133.5615 1217.439 -2127.0801 1215.8955 -2120.2295 c1214.2798 -2113.0566 1212.3643 -2105.9346 1209.3848 -2099.1934 c1206.5396 -2092.7539 1202.8345 -2086.7197 1199.8774 -2080.3154 c1196.5522 -2073.1123 1193.793 -2065.6572 1191.2368 -2058.1523 c1186.2847 -2043.6113 1183.3271 -2029.5889 1182.6621 -2014.2275 c1181.9883 -1998.6445 1181.1343 -1983.0947 1180.3584 -1967.5176 c1178.7646 -1935.5303 1182.8169 -1902.8447 1187.3809 -1871.21 c1189.5371 -1856.2666 1192.5962 -1841.9443 1197.5176 -1827.6563 c1202.0845 -1814.4004 1207.6094 -1801.4043 1211.8774 -1788.0664 c1212.8867 -1784.9131 1214.6465 -1781.9404 1215.7822 -1778.8086 c1216.8911 -1775.749 1217.7339 -1772.5908 1218.7407 -1769.4971 c1221.0938 -1762.2646 1224.0938 -1755.1982 1226.6099 -1748.0127 c1229.209 -1740.5918 1231.7207 -1733.1826 1235.1846 -1726.1143 c1237.9956 -1720.3779 1241.0171 -1714.4395 1241.0645 -1707.9473 c1241.0957 -1703.6357 1236.9004 -1700.6709 1232.8364 -1701.6797 c1219.002 -1705.1133 1208.4512 -1716.9141 1199.333 -1727.1309 c1189.4004 -1738.2578 1182.3301 -1751.708 1174.6128 -1764.4053 c1166.6055 -1777.5801 1158.9336 -1791.0508 1151.5962 -1804.6104 c1148.0967 -1811.0781 1144.8745 -1817.6875 1141.9785 -1824.4473 c1138.9331 -1831.5566 1135.1396 -1838.4883 1133.0703 -1845.9678 c1124.7471 -1876.043 1121.9238 -1907.5303 1118.2686 -1938.4688 c1117.3423 -1946.3086 1116.7012 -1954.1729 1116.7788 -1962.0723 c1116.8496 -1969.3086 1117.9155 -1976.4941 1117.9976 -1983.7324 c1118.0703 -1990.1768 1118.1704 -1996.0547 1119.23 -2002.3926 cf*u1 D1778.2847 -1986.832 m1771.9814 -1983.2129 1765.7295 -1978.9268 1759.8564 -1974.667 c1756.8564 -1972.4902 1753.4683 -1971.4492 1749.8809 -1970.6914 c1745.7041 -1969.8086 1742.2437 -1967.751 1737.9028 -1967.3457 c1728.5186 -1966.4697 1718.1865 -1970.6387 1709.3682 -1973.2813 c1707.6641 -1973.792 1705.9595 -1974.3008 1704.2632 -1974.8271 C1704.6064 -1972.5049 1703.9077 -1969.9814 1701.6089 -1968.2266 c1700.0566 -1967.041 1698.8779 -1965.2607 1697.6592 -1963.7598 c1696.335 -1962.1279 1694.6152 -1961.0078 1693.2905 -1959.3984 c1690.7363 -1956.2959 1686.832 -1954.0869 1683.3335 -1952.2402 c1675.1602 -1947.9287 1665.8125 -1946.3008 1658.0396 -1941.2715 c1654.4644 -1938.958 1650.606 -1937.8682 1646.3867 -1937.6582 c1642.7422 -1937.4766 1638.1299 -1940.2568 1634.9248 -1941.7334 c1626.9165 -1945.4238 1619.4639 -1950.9238 1613.4575 -1957.3594 c1612.5933 -1958.2852 1611.8037 -1959.2676 1611.041 -1960.2705 C1610.9824 -1959.7119 1610.8481 -1959.125 1610.6064 -1958.5078 c1608.75 -1953.7627 1606.1279 -1950.1318 1601.5327 -1947.7236 c1599.001 -1946.3975 1594.918 -1943.207 1590.0635 -1942.7832 c1584.5859 -1942.3047 1579.2549 -1942.3604 1573.7969 -1941.4316 c1567.4443 -1940.3496 1560.8066 -1939.1621 1554.3794 -1940.3633 c1543.5674 -1942.3838 1536.8179 -1950.7197 1528.208 -1956.6289 c1518.8711 -1963.0361 1510.9077 -1972.208 1507.791 -1983.2412 c1507.333 -1984.8623 1507.4785 -1986.291 1508.0107 -1987.4824 C1506.1299 -1986.5039 1504.2139 -1985.5879 1502.1836 -1984.8848 c1495.1675 -1982.4551 1487.9355 -1983.3105 1480.668 -1983.416 c1473.0752 -1983.5264 1466.1299 -1985.8125 1459.1528 -1988.5957 c1447.1738 -1993.374 1438.917 -2003.6387 1431.1641 -2013.7168 C1425.7925 -2013.4814 1420.4297 -2013.7344 1415.3594 -2015.0029 c1404.8604 -2017.6309 1395.3643 -2021.1719 1385.624 -2025.8232 c1377.9365 -2029.4941 1367.0874 -2032.7168 1365.5703 -2042.6035 c1365.0527 -2045.9756 1366.3105 -2049.3203 1369.7227 -2050.4717 C1372.8477 -2063.0547 1382.167 -2073.1465 1390.0171 -2083.1191 c1394.1152 -2088.3262 1398.6084 -2093.5391 1403.1064 -2098.3945 c1405.0986 -2100.5459 1409.1118 -2101.4521 1411.8374 -2102.1738 c1415.1455 -2103.0508 1417.5049 -2103.9023 1421.2275 -2105.3223 c1428.332 -2108.0342 1433.7998 -2112.3193 1440.1201 -2116.4131 c1445.793 -2120.0869 1452.8633 -2120.2881 1459.1533 -2122.373 c1466.3872 -2124.7725 1473.9863 -2125.999 1481.4136 -2127.6348 c1489.1104 -2129.3291 1496.9048 -2129.5088 1504.6841 -2130.5938 c1511.7563 -2131.5791 1518.9897 -2131.3672 1526.1172 -2131.7803 c1534.063 -2132.2412 1541.9648 -2132.4531 1549.9238 -2132.4531 c1553.626 -2132.4531 1557.2646 -2132.3887 1560.9268 -2131.7646 c1564.686 -2131.123 1568.3071 -2129.9805 1572.1387 -2129.9805 c1575.3252 -2129.9805 1578.5898 -2130.3711 1581.5801 -2129.1348 c1585.1094 -2127.6748 1589.0352 -2127.0664 1592.7773 -2126.4795 c1598.9785 -2125.5078 1605.5415 -2124.7949 1611.5679 -2123.0439 c1619.4297 -2120.7598 1627.1445 -2117.9766 1634.8521 -2115.2275 c1641.9868 -2112.6816 1649.1211 -2110.1426 1656.3447 -2107.8594 c1659.6899 -2106.8027 1663.0957 -2105.9805 1666.3447 -2104.6475 c1669.8188 -2103.2217 1673.0513 -2100.8008 1676.603 -2099.6523 c1688.7705 -2095.7227 1701.5474 -2091.4922 1712.9819 -2085.7246 c1724.7329 -2079.7979 1734.0947 -2069.7021 1744.1973 -2061.4863 c1749.0264 -2057.5596 1753.6875 -2054.4736 1757.5391 -2049.4688 c1761.4292 -2044.415 1764.395 -2038.8555 1767.0356 -2033.0674 c1769.8418 -2026.916 1771.5303 -2020.3154 1774.4326 -2014.2207 c1776.9111 -2009.0166 1779.8389 -2004.4766 1780.2676 -1998.5732 c1780.3262 -1997.7617 1780.2544 -1997.0322 1780.0811 -1996.3789 C1782.168 -1993.4814 1781.9648 -1988.9453 1778.2847 -1986.832 cf0 D1767.2676 -1998.5732 m1767.085 -2001.085 1765.374 -2003.2822 1764.1973 -2005.4238 c1762.7661 -2008.0273 1761.6963 -2010.9434 1760.5938 -2013.6973 c1757.9038 -2020.418 1755.7485 -2027.127 1752.3584 -2033.5605 c1745.8086 -2045.9912 1733.6621 -2053.3223 1723.2725 -2062.3389 c1718.021 -2066.8965 1712.5483 -2071.1777 1706.4209 -2074.5 c1699.8525 -2078.0615 1692.4517 -2080.0117 1685.4702 -2082.585 c1679.4033 -2084.8213 1672.8877 -2086.7959 1667.1719 -2089.8223 c1660.3506 -2093.4326 1653.0195 -2095.2129 1645.7246 -2097.6602 c1631.2202 -2102.5244 1616.8018 -2109.1904 1601.6846 -2111.8242 c1595.6338 -2112.8779 1588.2158 -2113.0215 1582.5762 -2115.3525 c1579.8018 -2116.499 1576.8379 -2116.9805 1573.8848 -2116.9805 c1569.3799 -2116.9805 1565.5693 -2117.5508 1561.1812 -2118.5381 c1554.0234 -2120.1504 1546.2598 -2119.5488 1538.9644 -2119.4063 c1531.0103 -2119.25 1523.0771 -2118.5059 1515.125 -2118.2637 c1499.8496 -2117.8008 1484.9043 -2115.3613 1470.0293 -2111.8818 c1465.3262 -2110.7813 1460.8291 -2108.876 1456.1001 -2107.9736 c1454.1611 -2107.6035 1452.2256 -2107.2871 1450.3022 -2106.833 c1447.8101 -2106.2451 1446.105 -2104.5938 1444.021 -2103.2041 c1435.2979 -2097.3887 1425.7275 -2091.5537 1415.2935 -2089.6387 c1410.6772 -2088.791 1409.0762 -2084.9805 1406.1152 -2081.7832 c1402.5513 -2077.9336 1399.2148 -2074.002 1396.0469 -2069.8154 c1390.1738 -2062.0547 1383.709 -2054.9121 1381.8164 -2045.0771 c1381.6074 -2043.9922 1381.2046 -2043.1162 1380.6724 -2042.4229 C1381.9424 -2041.5439 1383.4688 -2040.8965 1384.7651 -2040.2578 c1388.73 -2038.3057 1392.8311 -2036.708 1396.7744 -2034.6924 c1404.1929 -2030.9014 1414.0562 -2027.6729 1422.3701 -2026.9961 c1422.9033 -2026.9531 1423.4482 -2026.9277 1423.9873 -2026.8936 C1425.0146 -2031.6191 1430.7944 -2035.083 1434.5596 -2030.377 c1435.4805 -2029.2256 1436.3877 -2028.0645 1437.2896 -2026.9033 C1450.8145 -2027.7334 1464.8828 -2030.9551 1476.46 -2036.2627 c1480.1709 -2037.9639 1482.5659 -2041.9063 1486.3604 -2043.1787 c1490.9111 -2044.7061 1494.8608 -2046.8428 1499.0664 -2049.1191 c1502.7896 -2051.1348 1506.1382 -2053.8623 1509.9526 -2055.6729 c1513.9233 -2057.5576 1518.1396 -2058.7725 1521.9087 -2061.0732 c1529.1348 -2065.4844 1536.4536 -2070.6318 1542.8101 -2076.2207 c1548.6631 -2081.3672 1556.9873 -2084.707 1560.3887 -2092.1328 c1563.8755 -2099.7471 1575.0776 -2093.1357 1571.6133 -2085.5723 c1569.9771 -2081.999 1567.4141 -2079.041 1564.5308 -2076.4072 c1561.1113 -2073.2842 1556.5444 -2071.3857 1553.272 -2068.2012 c1545.8984 -2061.0254 1536.8262 -2055.7559 1528.4702 -2049.8486 c1524.4453 -2047.0029 1519.2861 -2045.7637 1514.8667 -2043.666 c1510.6006 -2041.6406 1506.7437 -2038.4258 1502.4995 -2036.2451 c1498.4858 -2034.1826 1493.2285 -2032.6748 1489.9019 -2029.7646 c1486.002 -2026.3516 1481.6533 -2024.3203 1476.8447 -2022.541 c1467.105 -2018.9385 1457.2344 -2016.7314 1446.9609 -2015.3525 c1446.8198 -2015.334 1446.6763 -2015.3145 1446.5347 -2015.2959 C1450.7734 -2010.375 1455.3984 -2005.8584 1461.0811 -2002.3369 c1466.3086 -1999.0977 1472.6953 -1996.9648 1478.8379 -1996.4658 c1484.7061 -1995.9902 1491.4224 -1995.4316 1497.1572 -1996.876 c1502.1992 -1998.1465 1506.8076 -2001.9707 1511.6475 -2003.9434 c1516.5664 -2005.9473 1524.2388 -2005.6875 1528.126 -2009.4063 c1534.8564 -2015.8457 1550.25 -2021.1094 1550.8438 -2031.9639 c1551.2998 -2040.2998 1564.3022 -2040.3447 1563.8438 -2031.9639 c1563.042 -2017.3037 1550.7568 -2010.1777 1540.0503 -2002.501 c1537.1318 -2000.4082 1534.9648 -1997.8145 1531.6855 -1996.2051 c1528.3867 -1994.5859 1524.7568 -1994.2451 1521.2285 -1993.4141 c1519.0996 -1992.9121 1517.1143 -1992.1328 1515.1909 -1991.2275 C1517.4458 -1990.9434 1519.5249 -1989.5361 1520.3271 -1986.6963 c1522.5347 -1978.8799 1528.2998 -1972.5488 1534.769 -1967.8535 c1541.0156 -1963.3203 1546.5122 -1957.0254 1553.7441 -1953.9961 c1561.8994 -1950.5801 1572.5107 -1954.6191 1580.8945 -1955.4473 c1583.8716 -1955.7412 1588.022 -1954.7549 1590.7778 -1956.1445 c1592.415 -1956.9688 1593.3882 -1958.377 1595.1904 -1959.082 c1596.5571 -1959.6172 1597.5361 -1960.5967 1598.0713 -1961.9629 c1599.5972 -1965.8623 1603.562 -1966.9307 1606.7178 -1966.0293 C1606.4277 -1966.3828 1606.1343 -1966.7344 1605.8296 -1967.0781 c1602.7788 -1970.5176 1600.1597 -1974.4355 1597.7383 -1978.332 c1592.708 -1986.4277 1590.3789 -1996.8047 1589.4834 -2006.1553 c1588.5786 -2015.6035 1589.2959 -2025.3105 1589.6045 -2034.7793 c1589.9497 -2045.3828 1590.3921 -2055.9805 1590.4185 -2066.5918 c1590.4395 -2074.9746 1603.4395 -2074.9766 1603.4185 -2066.5918 c1603.374 -2048.8574 1602.2231 -2031.1484 1602.1816 -2013.4131 c1602.1636 -2005.623 1603.7407 -1998.5986 1606.1934 -1991.29 c1609.0547 -1982.7656 1615.3398 -1977.1348 1620.0615 -1969.8076 c1623.8652 -1963.9063 1630.0703 -1959.458 1635.9775 -1955.8867 c1638.9775 -1954.0723 1642.1514 -1952.5449 1645.4307 -1951.3135 c1649.3887 -1949.8281 1652.9707 -1953.5723 1656.3726 -1955.2813 c1663.4043 -1958.8145 1671.1182 -1960.4834 1678.1094 -1964.1719 c1684.604 -1967.5977 1688.439 -1973.9287 1693.9224 -1978.5479 C1690.8828 -1979.8672 1687.9443 -1981.417 1685.1709 -1983.3486 c1678.1992 -1988.2031 1671.127 -1993.5928 1664.7896 -1999.251 c1657.5972 -2005.6709 1653.6523 -2014.4668 1648.1455 -2022.1914 c1642.751 -2029.7578 1637.1528 -2037.4688 1633.6929 -2046.1572 c1632.2212 -2049.8535 1629.5352 -2053.0732 1627.9399 -2056.7969 c1626.2402 -2060.7646 1625.2383 -2064.7441 1625.0464 -2069.0654 c1624.6748 -2077.4502 1637.6763 -2077.4141 1638.0464 -2069.0654 c1638.3623 -2061.9346 1643.4341 -2057.29 1645.6909 -2050.9639 c1648.3608 -2043.4775 1653.8213 -2036.8398 1658.1826 -2030.2979 c1662.811 -2023.3564 1666.8945 -2015.4688 1672.8145 -2009.542 c1678.125 -2004.2256 1684.6685 -2000.1758 1690.5469 -1995.5322 c1696.6514 -1990.709 1703.8081 -1988.4219 1711.187 -1986.29 c1719.375 -1983.9248 1727.479 -1980.9453 1736.0479 -1980.3809 c1739.7295 -1980.1387 1742.874 -1982.457 1746.4248 -1983.2129 c1747.71 -1983.4873 1748.9761 -1983.7754 1750.2427 -1984.126 c1752.0156 -1984.6162 1752.8213 -1986.1943 1754.4097 -1986.8711 c1757.6064 -1988.2334 1760.0015 -1990.7227 1762.9653 -1992.4854 c1764.6914 -1993.5117 1766.374 -1994.6523 1768.0693 -1995.7686 C1767.6338 -1996.5664 1767.3457 -1997.5 1767.2676 -1998.5732 cf*U1886.0088 -2033.6865 m1889.5215 -2038.3145 1893.5791 -2042.4727 1897.1748 -2047.0439 c1899.0605 -2049.4414 1901.563 -2051.2939 1903.2764 -2053.7949 c1905.022 -2056.3428 1906.7266 -2059.0244 1908.8218 -2061.2881 c1912.6948 -2065.4727 1915.125 -2071.4727 1918.0205 -2076.3945 c1921.5303 -2082.3604 1923.4131 -2089.0615 1924.5615 -2095.8359 c1925.6768 -2102.4121 1925.5801 -2109.2188 1925.5605 -2115.8643 c1925.54 -2123.0195 1925.1641 -2130.0322 1923.3643 -2136.9824 c1921.6621 -2143.5547 1917.8701 -2149.1885 1913.9268 -2154.6143 c1912.7422 -2156.2441 1911.7876 -2158.1533 1910.7046 -2159.9277 C1926.2959 -2159.9277 L1927.4355 -2158.1182 1928.5635 -2156.3066 1929.6846 -2154.5225 c1937.3652 -2142.2979 1938.5254 -2128.1914 1938.5654 -2114.1074 c1938.6045 -2100.4824 1937.416 -2086.8896 1931.4951 -2074.4414 c1930.0566 -2071.416 1928.5215 -2068.5723 1926.7451 -2065.7275 c1925.0342 -2062.9863 1923.9219 -2059.4551 1921.8223 -2057.0488 c1920.2368 -2055.2305 1918.3799 -2053.0322 1917.1812 -2050.9434 c1915.9629 -2048.8213 1913.8164 -2044.9668 1911.9282 -2043.4453 c1907.5269 -2039.8965 1904.6445 -2035.1455 1900.7974 -2031.0781 c1896.1543 -2026.167 1892.0322 -2020.4844 1888.4702 -2014.7412 c1880.917 -2002.5645 1877.9658 -1988.6387 1877.9678 -1974.457 c1877.9692 -1960.4072 1878.0732 -1946.2979 1881.2559 -1932.5439 c1882.6885 -1926.3564 1885.2588 -1920.042 1889.6675 -1915.3633 c1889.771 -1915.2539 1889.8701 -1915.1289 1889.9702 -1915.0098 C1890.2207 -1921.0605 1890.6982 -1927.0908 1891.624 -1933.2041 c1893.502 -1945.6055 1898.0605 -1958.0225 1902.9585 -1969.5479 c1905.3555 -1975.1885 1908.3286 -1980.7158 1911.3853 -1986.0234 c1914.7085 -1991.7939 1918.9072 -1995.8613 1924.0859 -1999.9531 c1934.2031 -2007.9482 1945.0674 -2014.9873 1951.6846 -2026.4189 c1957.6953 -2036.8008 1966.2314 -2045.417 1972.0508 -2055.8906 c1978.9678 -2068.3398 1981.4033 -2083.0322 1984.8779 -2096.6523 c1988.3145 -2110.125 1988.5352 -2124.2451 1988.625 -2138.0674 c1988.6709 -2145.2412 1988.6807 -2152.4199 1988.5117 -2159.5918 c1988.5088 -2159.7041 1988.501 -2159.8154 1988.498 -2159.9277 C2001.2725 -2159.9277 L2001.459 -2157.1777 2001.6094 -2154.4258 2001.6279 -2151.6758 c2001.7285 -2137.0361 2001.8242 -2122.3174 2000.0156 -2107.7656 c1998.2578 -2093.6309 1994.6289 -2079.3037 1990.0684 -2065.8213 c1987.8369 -2059.2246 1985.2598 -2052.5654 1981.6895 -2046.5713 c1978.3633 -2040.9883 1974.0195 -2036.0264 1970.082 -2030.877 c1966.4004 -2026.0635 1963.7168 -2020.7363 1960.3271 -2015.752 c1956.5615 -2010.2148 1951.7695 -2005.4395 1946.7148 -2001.0898 c1941.9766 -1997.0146 1936.7695 -1993.5195 1931.8701 -1989.6484 c1926.1133 -1985.0986 1922.7246 -1979.999 1919.3848 -1973.5264 c1913.2583 -1961.6504 1909.2275 -1949.4111 1905.4268 -1936.6289 c1901.8052 -1924.4512 1902.7012 -1910.9355 1902.7012 -1898.3994 c1902.7012 -1894.3691 1898.5161 -1890.749 1894.4731 -1892.1318 c1889.4766 -1893.8398 1886.3408 -1897.2646 1883.3203 -1901.4502 c1880.2437 -1905.7129 1876.8652 -1910.0859 1874.2905 -1914.6611 c1867.3164 -1927.0566 1865.9478 -1942.0371 1865.2671 -1955.9814 c1864.6035 -1969.5732 1864.3672 -1983.4268 1867.2856 -1996.7822 c1870.3145 -2010.6445 1877.5376 -2022.5264 1886.0088 -2033.6865 cf2373.0293 -2041.1504 m2383.5254 -2040.4971 2394.0645 -2040.7109 2404.5645 -2041.1289 c2414.1875 -2041.5117 2425.2012 -2040.6699 2434.0938 -2044.7705 c2437.873 -2046.5127 2442.5059 -2048.6484 2445.6504 -2051.4004 C2446.2119 -2051.959 2446.8486 -2052.3906 2447.5498 -2052.709 C2447.6445 -2052.7969 2447.748 -2052.8916 2447.875 -2053.0039 C2449.1445 -2054.2568 2450.5645 -2054.9697 2452.2285 -2055.5459 c2452.4814 -2055.6338 2452.7295 -2055.7051 2452.9727 -2055.7627 C2455.8027 -2057.6289 2459.8848 -2057.5938 2462.042 -2053.7969 c2466.5039 -2045.9453 2478.2617 -2042.4023 2486.1416 -2039.3789 c2496.3105 -2035.4766 2506.1328 -2031.5801 2516.6484 -2028.7051 c2528.4629 -2025.4766 2540.7852 -2024.8496 2552.9648 -2025.3281 c2559.3096 -2025.5762 2565.7344 -2025.8975 2572.0615 -2026.3994 c2577.1211 -2026.8008 2581.2109 -2029.3496 2586.2832 -2029.8076 c2594.6348 -2030.5615 2594.5625 -2017.5547 2586.2832 -2016.8076 c2584.2598 -2016.625 2582.3223 -2015.3232 2580.418 -2014.7031 c2577.8438 -2013.8652 2574.7441 -2013.7168 2572.0615 -2013.3994 c2565.1738 -2012.584 2557.9395 -2012.5225 2551.001 -2012.251 c2537.7305 -2011.7305 2524.3105 -2013.1309 2511.4932 -2016.6348 c2499.9961 -2019.7773 2489.1816 -2024.3018 2478.0762 -2028.6211 c2470.1924 -2031.6875 2461.1055 -2035.5264 2454.9395 -2041.8398 C2454.6631 -2041.6777 2454.4199 -2041.5381 2454.2686 -2041.4492 C2454.0547 -2041.3584 2453.8691 -2041.2803 2453.6992 -2041.209 C2452.873 -2040.5381 2452.0176 -2039.9082 2451.1328 -2039.3174 c2447.4932 -2036.7705 2443.1729 -2034.7061 2439.1475 -2032.8496 c2429.5244 -2028.4131 2418.8945 -2028.8154 2408.5068 -2028.3057 c2397.3438 -2027.7568 2386.1689 -2027.5469 2375 -2028.0449 c2369.7881 -2028.2783 2364.5527 -2029.1738 2359.3477 -2029.1758 c2353.7666 -2029.1777 2348.207 -2029.3096 2342.6523 -2029.8906 c2332.3809 -2030.9639 2323.0186 -2035.0342 2312.9688 -2036.9121 c2309.7803 -2037.5078 2306.6211 -2038.1504 2303.5068 -2038.9189 C2303.4561 -2037.5059 2302.8535 -2036.0625 2301.4902 -2034.7891 c2299.3496 -2032.7881 2297.0781 -2031.0684 2294.4551 -2029.7529 c2291.8643 -2028.4531 2288.6133 -2028.123 2286.2178 -2026.5322 c2280.2188 -2022.5459 2273.5996 -2019.8711 2266.8809 -2017.3486 c2263.791 -2016.1885 2260.9863 -2014.5039 2257.9199 -2013.3291 c2255.1387 -2012.2637 2252.3311 -2011.5029 2249.7168 -2010.0459 c2243.5977 -2006.6348 2237.7227 -2003.6006 2231.0674 -2001.2715 c2224.5244 -1998.9814 2217.8164 -1997.1699 2211.2285 -1995.0215 c2207.7617 -1993.8906 2204.4922 -1992.1104 2201.2383 -1990.4873 c2198.3242 -1989.0322 2194.6924 -1988.9316 2191.5078 -1988.5508 c2187.7881 -1988.1074 2184.0449 -1987.9951 2180.5176 -1986.6543 c2176.9346 -1985.293 2173.1709 -1984.5117 2169.3867 -1983.9824 c2165.7822 -1983.4775 2162.0859 -1983.7197 2158.5234 -1983.0469 c2154.3691 -1982.2637 2150.3965 -1980.2822 2146.5078 -1978.7021 c2134.1367 -1973.6768 2119.626 -1977.9883 2106.7393 -1976.585 c2090.9277 -1974.8623 2075.3672 -1974.4385 2059.4932 -1975.5381 c2044.5371 -1976.5752 2029.8203 -1979.0186 2015.0537 -1981.4854 c2007.8408 -1982.6904 2001.1172 -1984.7725 1994.084 -1986.5859 c1990.9893 -1987.3838 1987.9453 -1988.3691 1984.9111 -1989.3682 c1981.7598 -1990.4063 1979.1787 -1992.3984 1976.0967 -1993.543 c1968.3096 -1996.4336 1971.6758 -2009.002 1979.5518 -2006.0781 c1984.6045 -2004.2031 1989.0332 -2001.6162 1994.2314 -2000.0488 c2001.0576 -1997.9912 2007.7881 -1995.9482 2014.8184 -1994.6582 c2029.001 -1992.0547 2043.2158 -1989.8516 2057.5957 -1988.6816 c2072.0723 -1987.5039 2086.4404 -1987.585 2100.8945 -1988.9775 c2108.0967 -1989.6719 2114.833 -1990.2656 2122.0645 -1989.7988 c2128.6035 -1989.376 2135.1699 -1988.9609 2141.5488 -1990.7266 c2148.0254 -1992.5186 2153.4629 -1995.5508 2160.2734 -1996.3447 c2164.0732 -1996.7871 2167.7139 -1996.6875 2171.4961 -1997.5195 c2175.3018 -1998.3574 2178.748 -1999.9277 2182.6172 -2000.5078 c2186.1064 -2001.0313 2189.6309 -2001.2607 2193.124 -2001.7539 c2196.6309 -2002.25 2199.7139 -2004.2197 2202.9219 -2005.623 c2209.2783 -2008.4023 2216.0898 -2010.1416 2222.7051 -2012.2041 c2228.7656 -2014.0938 2234.6318 -2016.2471 2240.1797 -2019.3623 c2245.6514 -2022.4355 2251.2793 -2024.5508 2256.9248 -2027.2285 c2263.3652 -2030.2832 2270.2891 -2032.125 2276.4766 -2035.7305 c2279.6328 -2037.5703 2282.0859 -2039.2344 2285.6289 -2040.2305 c2287.709 -2040.8145 2289.4824 -2041.7041 2291.1172 -2042.9785 C2289.5156 -2043.6719 2287.9355 -2044.4375 2286.3789 -2045.2891 c2277.8945 -2049.9307 2269.5391 -2055.4844 2261.8555 -2061.3457 c2258.1914 -2064.1406 2254.7715 -2066.9609 2250.7637 -2069.2695 c2246.4072 -2071.7764 2241.9746 -2073.9971 2237.9609 -2077.0576 c2231.3896 -2082.0684 2237.8535 -2093.3682 2244.5234 -2088.2822 c2251.668 -2082.835 2260.0801 -2079.5723 2266.9932 -2073.7471 c2274.041 -2067.8105 2282.1563 -2063.1689 2289.9658 -2058.3311 c2297.6904 -2053.5459 2305.8809 -2051.4668 2314.7334 -2049.7656 c2324.1631 -2047.9551 2333.0977 -2044.1104 2342.6523 -2042.8906 c2347.5645 -2042.2637 2352.5498 -2042.2168 2357.4932 -2042.1807 c2362.6895 -2042.1426 2367.8389 -2041.4727 2373.0293 -2041.1504 cf2362.0957 -2159.9277 m2370.9014 -2152.9121 2380.9043 -2146.9668 2390.4551 -2141.46 c2403.4922 -2133.9434 2416.6621 -2127.0078 2430.168 -2120.3496 c2436.4922 -2117.2324 2442.4375 -2113.4648 2448.9727 -2110.7598 c2456.3613 -2107.7021 2464.1602 -2106.3604 2471.6699 -2103.7832 c2478.624 -2101.3975 2485.5518 -2099.1475 2492.8789 -2098.2168 c2500.582 -2097.2393 2507.8652 -2095.6543 2515.4707 -2094.1934 c2522.501 -2092.8438 2529.7305 -2092.5742 2536.8496 -2091.9814 c2544.4766 -2091.3477 2552.0488 -2090.2148 2559.6943 -2089.7871 c2566.6895 -2089.3965 2573.5215 -2090.2129 2580.2861 -2091.959 c2583.1816 -2092.7061 2586.0117 -2096.1074 2588.6563 -2097.5771 c2592.3926 -2099.6533 2596.1123 -2101.332 2599.4648 -2104.0439 c2601.1729 -2105.4258 2605.6025 -2108.5107 2606.1094 -2109.2793 c2607.7715 -2111.7988 2609.5049 -2114.2275 2611.3721 -2116.6016 c2614.9941 -2121.207 2622.0254 -2125.2227 2627 -2120.0195 c2630.7119 -2116.1357 2632.8516 -2112.5254 2636.8662 -2108.4941 c2641.3955 -2103.9453 2647.8027 -2101.2607 2654.0117 -2100.1172 c2662.9824 -2098.4648 2673.0586 -2095.8438 2681.9082 -2098.8398 c2685.9268 -2100.1992 2689.5518 -2102.9639 2693.2275 -2105.0303 c2697.501 -2107.4326 2702.2422 -2109.125 2706.8037 -2110.8887 c2711.4141 -2112.6719 2715.9512 -2114.3672 2720.1582 -2116.9834 c2724.1104 -2119.4414 2727.5566 -2122.2686 2731.3125 -2124.9668 c2737.0723 -2129.1055 2746.3584 -2135.4014 2746.7383 -2143.2686 c2747.1416 -2151.6133 2760.1436 -2151.6523 2759.7383 -2143.2686 c2759.0205 -2128.4063 2745.959 -2120.4443 2735.6934 -2111.8506 c2732.5098 -2109.1855 2729.0693 -2107.0293 2725.4941 -2105.1387 C2726.2988 -2104.1367 2726.9023 -2102.9326 2727.3516 -2101.7109 c2728.167 -2099.4961 2727.7617 -2097.6377 2726.6934 -2096.2832 C2728.458 -2080.7236 2737.124 -2066.7168 2747.3984 -2055.123 c2758.9033 -2042.1396 2773.9863 -2032.998 2789.584 -2025.7627 c2797.1133 -2022.2695 2804.708 -2019.2949 2812.875 -2017.7256 c2822.833 -2015.8125 2833.0518 -2016.2041 2843.1367 -2016.2041 c2848.2725 -2016.2041 2853.4385 -2016.042 2858.5684 -2016.2676 c2862.6338 -2016.4463 2867.0449 -2018.7695 2870.7324 -2020.3066 c2874.2178 -2021.7588 2876.5781 -2024.2568 2880.3701 -2026.3496 C2881.3535 -2026.833 2882.3555 -2027.2773 2883.3711 -2027.6875 C2883.4824 -2027.7783 2883.6084 -2027.8809 2883.7568 -2028.001 c2885.0449 -2029.0693 2886.4688 -2030.1035 2887.374 -2031.5352 c2888.2783 -2032.9678 2889.4639 -2033.834 2890.7383 -2034.2578 C2886.1689 -2046.2891 2885.3516 -2060.3711 2885.249 -2072.7764 c2885.1797 -2081.1621 2898.1797 -2081.1563 2898.249 -2072.7764 c2898.3574 -2059.6582 2899.1689 -2044.5791 2905.7168 -2032.9414 c2908.8389 -2027.3906 2912.0752 -2021.8486 2915.5996 -2016.5391 c2917.4648 -2013.7295 2918.7256 -2010.5693 2920.6279 -2007.8232 c2922.8203 -2004.6572 2925.7461 -2001.9482 2928.5791 -1999.3711 c2938.791 -1990.084 2951.3496 -1982.3887 2963.8105 -1976.5244 c2970.6094 -1973.3242 2978.2041 -1971.0527 2985.3301 -1968.6309 c2992.5098 -1966.1904 3000.5879 -1967.8779 3008 -1967.9727 c3016.3867 -1968.0791 3016.377 -1955.0791 3008 -1954.9727 c2999.7783 -1954.8682 2991.6729 -1953.7002 2983.5615 -1955.5996 c2979.5049 -1956.5488 2975.6465 -1958.4736 2971.7559 -1959.9248 c2967.9512 -1961.3447 2964.0996 -1962.3066 2960.3477 -1963.9297 c2946.0166 -1970.127 2932.46 -1979.0156 2920.5898 -1989.123 c2910.0938 -1998.0605 2903.5684 -2010.5645 2896.7734 -2022.4424 C2894.8848 -2020.1006 2892.5059 -2017.8779 2890.084 -2016.459 c2888.1016 -2015.2979 2885.9238 -2014.6123 2883.9531 -2013.3584 c2881.5205 -2011.8105 2879.9395 -2010.1514 2877.1885 -2009.0293 c2872.6035 -2007.1592 2868.124 -2005.1523 2863.2969 -2003.9688 c2858.0771 -2002.6875 2852.4521 -2003.2041 2847.1328 -2003.2041 c2835.665 -2003.2041 2824.332 -2003.043 2812.9473 -2004.6104 c2802.8682 -2005.998 2793.7324 -2009.7627 2784.499 -2013.8672 c2750.4277 -2029.0098 2714.9727 -2059.6338 2713.416 -2099.625 C2707.1924 -2097.0371 2700.916 -2094.5254 2695.0947 -2091.0557 c2688.6436 -2087.2109 2681.8652 -2084.5313 2674.2832 -2084.3145 c2670.1582 -2084.1963 2665.877 -2085.1553 2661.8486 -2085.9268 c2657.6309 -2086.7354 2653.3398 -2087.0684 2649.1133 -2087.8477 c2642.2207 -2089.1172 2635.2383 -2092.8496 2629.9004 -2097.3398 c2627.0928 -2099.7012 2624.7266 -2102.373 2622.4951 -2105.2773 c2623.5693 -2103.8799 2621.4668 -2106.1982 2620.4707 -2107.3223 C2618.4209 -2104.6563 2617.0654 -2101.2686 2614.2988 -2099.3184 c2608.9023 -2095.5146 2604.3252 -2091.0186 2598.3975 -2087.9678 c2592.8643 -2085.1191 2588.2949 -2080.5977 2582.1777 -2079.0195 c2576.0361 -2077.4336 2569.5723 -2076.7061 2563.2344 -2076.6855 c2550.3574 -2076.6455 2537.1758 -2078.835 2524.3555 -2080.0117 c2517.7529 -2080.6182 2511.1973 -2081.6182 2504.7793 -2083.293 c2498.4941 -2084.9326 2492.002 -2085.1367 2485.6191 -2086.2959 c2479.0195 -2087.4941 2472.7539 -2089.6904 2466.4258 -2091.8613 c2460.1006 -2094.0322 2453.502 -2095.1914 2447.1953 -2097.5615 c2435.0811 -2102.1152 2423.793 -2109.001 2412.21 -2114.7441 c2400.3486 -2120.626 2388.9023 -2127.0898 2377.5938 -2133.9648 c2366.4795 -2140.7207 2354.8506 -2148.1426 2345.4766 -2157.2227 c2344.5996 -2158.0723 2344.0527 -2158.9932 2343.7637 -2159.9277 C2362.0957 -2159.9277 Lf*u1 D3228.2617 -1927.4941 m3232.209 -1932.9287 3236.7285 -1937.9619 3241.7207 -1942.4473 c3247.7686 -1947.8789 3254.0977 -1951.7344 3261.2793 -1955.375 c3267.9277 -1958.7451 3273.9199 -1962.8613 3279.9463 -1967.1982 c3286.54 -1971.9453 3293.5303 -1976.1816 3300.291 -1980.6895 c3303.0039 -1982.498 3305.9688 -1983.8438 3308.6641 -1985.8164 c3311.6416 -1987.9971 3315.0615 -1989.3916 3318.4834 -1990.7139 c3325.1455 -1993.2861 3332.0518 -1994.0391 3338.6162 -1997.0225 c3344.3379 -1999.623 3350.8164 -1998.9141 3356.9756 -1999.8037 c3360.125 -2000.2588 3363.1221 -2001.0918 3366.3242 -2001.3184 c3370.0098 -2001.5801 3373.6133 -2001.4473 3377.2832 -2002.0596 c3383.834 -2003.1523 3389.5059 -2006.1221 3396.2344 -2006.3057 c3402.2891 -2006.4717 3408.1953 -2014.0986 3412.5234 -2017.5869 c3414.6455 -2019.2969 3415.291 -2024.2217 3416.6836 -2026.5889 c3417.916 -2028.6846 3419.7363 -2029.6152 3421.5977 -2029.7119 C3421.1504 -2030.8428 3420.7041 -2031.9736 3420.248 -2033.1016 c3415.5742 -2044.6611 3410.6572 -2055.8467 3407.4883 -2067.9199 c3404.4434 -2079.5166 3399.6523 -2090.1338 3395.124 -2101.1855 c3390.6201 -2112.1768 3387.79 -2123.459 3386.2637 -2135.2305 c3385.1973 -2143.4609 3384.9521 -2151.6777 3384.8965 -2159.9277 C3397.9121 -2159.9277 L3397.8936 -2158.4951 3397.8789 -2157.0635 3397.8789 -2155.6357 c3397.8789 -2140.0391 3400.2861 -2124.5869 3405.6113 -2109.9141 c3408.2002 -2102.7822 3411.4932 -2095.9434 3414.4053 -2088.9453 c3417.4971 -2081.5156 3419.4746 -2073.626 3421.4502 -2065.8457 c3423.3916 -2058.1992 3426.7451 -2050.6123 3429.917 -2043.3828 c3433.1855 -2035.9336 3436.0254 -2028.3047 3439.0098 -2020.7402 c3441.71 -2013.8955 3444.6416 -2007.4326 3446.5195 -2000.3027 c3447.3359 -1997.2002 3448.8447 -1995.377 3450.7197 -1992.8779 c3451.5469 -1991.7744 3451.6943 -1990.2393 3452.3887 -1989.0674 c3453.5986 -1987.0244 3454.7197 -1984.9326 3455.8145 -1982.8271 c3462.8643 -1969.2725 3467.4053 -1954.5586 3471.6074 -1939.9443 c3480.2256 -1909.9746 3487.8369 -1880.6348 3486.6758 -1849.1895 c3486.2549 -1837.7832 3486.125 -1826.3135 3485.4961 -1814.9238 c3484.8574 -1803.375 3482.7148 -1791.8262 3481.6084 -1780.3184 c3480.665 -1770.5098 3478.2461 -1760.8291 3476.4863 -1751.1484 c3474.5098 -1740.2705 3471.3379 -1729.4453 3470.1094 -1718.4609 c3468.9199 -1707.8184 3467.1777 -1697.1191 3466.3857 -1686.4404 C3468.9053 -1698.4775 3473.3594 -1710.0449 3477.3818 -1721.6699 c3482.6777 -1736.9775 3487.582 -1752.4336 3492.7041 -1767.8018 c3496.9277 -1780.4756 3504.8926 -1791.708 3507.5449 -1804.9023 c3510.459 -1819.3975 3511.0557 -1833.7891 3511.0088 -1848.5342 c3510.9863 -1855.7988 3510.8838 -1863.0625 3510.6563 -1870.3232 c3510.4141 -1878.0693 3510.5684 -1886.2773 3509.0107 -1893.8799 c3507.6709 -1900.4189 3505.7598 -1906.8145 3504.4531 -1913.374 c3502.9922 -1920.7012 3502.0547 -1928.0762 3499.5117 -1935.1035 c3491.6172 -1956.9277 3485.9092 -1979.6064 3479.1035 -2001.793 c3475.7168 -2012.833 3471.1152 -2023.7158 3468.3271 -2034.8984 c3465.627 -2045.7305 3464.292 -2056.8457 3461.0059 -2067.5391 c3457.9346 -2077.5381 3454.0762 -2087.251 3450.6133 -2097.1182 c3446.7822 -2108.0342 3444.8672 -2119.75 3442.3594 -2131.0293 c3440.2686 -2140.4395 3438.7412 -2150.2441 3438.085 -2159.9277 C3451.0088 -2159.9277 L3451.1875 -2157.6494 3451.4297 -2155.3799 3451.7598 -2153.1211 c3453.6094 -2140.4678 3456.0352 -2127.6934 3459.0684 -2115.1914 C3459.8643 -2123.7549 3459.4063 -2133.7988 3457.6973 -2142.1592 c3456.5 -2148.0127 3456.252 -2153.9902 3455.6992 -2159.9277 C3469.0547 -2159.9277 L3469.7061 -2153.9297 3470.0693 -2147.8555 3470.8438 -2142.0322 c3472.084 -2132.7061 3472.8223 -2122.6455 3471.8877 -2113.2598 c3471.4688 -2109.0469 3471.2617 -2104.5527 3470.5234 -2100.4043 c3469.8984 -2096.8965 3468.2314 -2094.0576 3466.3262 -2091.2178 C3469.3828 -2082.9023 3472.665 -2074.6484 3474.96 -2066.0996 c3476.792 -2059.2754 3477.9307 -2052.248 3479.3271 -2045.3262 c3480.9551 -2037.2598 3483.6758 -2029.7344 3486.2979 -2021.9551 c3486.7031 -2020.7539 3487.0957 -2019.5479 3487.4922 -2018.3438 C3489.9893 -2020.7891 3492.375 -2023.334 3494.2832 -2026.2783 c3498.4268 -2032.6689 3502.9395 -2039.2217 3506.2959 -2046.0674 c3508.0469 -2049.6396 3507.7695 -2053.5117 3508.7813 -2057.1914 c3509.1504 -2058.5322 3509.9893 -2059.7539 3510.4824 -2061.0557 c3511.2402 -2063.0576 3510.9844 -2065.165 3511.7813 -2067.1768 c3512.8682 -2069.9189 3513.4609 -2073.5654 3513.709 -2076.4873 c3514.0801 -2080.8721 3515.8086 -2085.1299 3516.0879 -2089.4766 c3517.0889 -2105.0352 3517.1133 -2120.6963 3515.5928 -2136.2207 c3514.793 -2144.3926 3512.5977 -2152.1445 3510.0645 -2159.9277 C3523.6787 -2159.9277 L3525.6895 -2153.3242 3527.3154 -2146.6982 3528.1943 -2139.7744 c3530.3867 -2122.5195 3530.083 -2104.9395 3528.9688 -2087.6172 c3528.6875 -2083.25 3526.9238 -2079.0332 3526.5518 -2074.6328 c3526.2383 -2070.9238 3525.2793 -2067.3447 3524.3164 -2063.7207 c3523.3623 -2060.127 3522.832 -2056.8633 3521.2744 -2053.4248 c3521.8691 -2054.7373 3520.8574 -2049.3828 3520.9502 -2050.0254 c3520.584 -2047.499 3519.6406 -2045.0166 3518.8438 -2042.6055 c3516.2227 -2034.6641 3510.1523 -2028.3613 3506.2988 -2021.0654 c3502.8584 -2014.5479 3497.0859 -2009.6104 3491.877 -2004.5313 C3494.834 -1994.8975 3497.6504 -1985.2168 3500.5664 -1975.5732 c3502.7139 -1968.4697 3504.7188 -1961.334 3506.8428 -1954.2266 c3509.0557 -1946.8242 3512.9258 -1939.2734 3514.2061 -1931.6914 c3515.3164 -1925.1133 3516.8164 -1918.6006 3517.8848 -1912.0186 c3519.0586 -1904.7959 3521.6699 -1897.9697 3522.6035 -1890.6738 c3524.5176 -1875.6914 3523.9863 -1860.0322 3524.0186 -1844.9521 c3524.0625 -1824.5713 3522.7305 -1803.3115 3514.2012 -1784.5195 c3510.0186 -1775.3047 3505.9756 -1766.5537 3502.7656 -1756.9258 c3498.8672 -1745.2285 3495.0664 -1733.4961 3491.1445 -1721.8076 c3487.625 -1711.3203 3483.7275 -1700.9668 3480.6465 -1690.3359 c3477.5098 -1679.5156 3477.1299 -1668.3975 3476.1621 -1657.2441 c3475.2051 -1646.208 3475.791 -1634.9346 3475.791 -1623.8525 c3475.791 -1612.5879 3476.2822 -1600.2988 3480.5059 -1589.7158 c3482.1113 -1585.6924 3479.5332 -1582.8584 3476.2432 -1582.1113 C3473.4688 -1577.3584 3464.291 -1578.5088 3464.0273 -1585.5146 c3463.7725 -1592.2949 3460.2754 -1598.5127 3458.0762 -1604.8115 c3455.7578 -1611.4512 3455.5283 -1618.9004 3454.8877 -1625.8428 c3454.2217 -1633.0625 3452.7578 -1640.0654 3452.6006 -1647.3496 c3452.4248 -1655.4463 3452.8779 -1663.5752 3452.9072 -1671.6758 c3452.9639 -1687.4512 3455.5762 -1702.8096 3457.1094 -1718.4609 c3458.5127 -1732.7803 3462.4746 -1747.0889 3465.1875 -1761.2197 c3467.8984 -1775.3477 3469.1904 -1789.4492 3471.2627 -1803.666 c3473.5313 -1819.2314 3473.1641 -1835.3271 3473.7441 -1851.0361 c3474.3242 -1866.7305 3472.7803 -1882.0029 3469.5029 -1897.3496 c3466.293 -1912.3838 3461.4277 -1926.9463 3457.5977 -1941.8135 c3455.9023 -1948.3945 3453.7051 -1954.9004 3451.1943 -1961.2705 C3448.1074 -1958.2549 3444.3828 -1956.2002 3440.6348 -1953.9668 c3436.5332 -1951.5225 3433.293 -1947.9219 3429.373 -1945.208 c3425.2432 -1942.3486 3419.9863 -1941.3418 3415.6836 -1938.5469 c3413.5527 -1937.1631 3410.1875 -1936.9414 3407.7598 -1936.3281 c3404.375 -1935.4746 3401.2949 -1934.1797 3398.0527 -1932.9453 c3392.0254 -1930.6504 3385.8125 -1929.2646 3379.502 -1927.998 c3376.8223 -1927.46 3374.3555 -1927.2715 3371.7207 -1926.3955 c3368.8682 -1925.4463 3366.0869 -1924.3369 3363.0469 -1924.1426 c3357.3516 -1923.7773 3351.7637 -1924.0918 3346.1113 -1923.0518 c3340.084 -1921.9424 3333.3242 -1919.0098 3327.877 -1916.2861 c3322.8115 -1913.7529 3318.1582 -1910.707 3313.1924 -1908.0947 c3308.2969 -1905.5195 3303.1367 -1903.5146 3298.2715 -1900.8408 c3287.9365 -1895.1602 3279.3828 -1886.7168 3269.999 -1879.6797 c3260.3447 -1872.4395 3250.3623 -1863.2344 3244.6309 -1852.4453 c3242.0303 -1847.5488 3240.1738 -1842.0908 3239.7344 -1836.5664 c3239.2432 -1830.377 3241.2578 -1823.4561 3239.3477 -1817.5244 c3238.1582 -1813.8301 3234.9824 -1812.46 3231.3516 -1812.9844 c3219.2354 -1814.7344 3214.9883 -1833.3818 3212.9004 -1842.877 c3211.2725 -1850.2754 3211.71 -1858.0332 3211.5254 -1865.5576 c3211.3271 -1873.6748 3211.4873 -1881.6826 3212.8486 -1889.7051 c3215.1602 -1903.335 3220.1133 -1916.2734 3228.2617 -1927.4941 cf0 D3224.6221 -1861.6797 m3224.8086 -1854.1943 3224.9131 -1847.3672 3227.0879 -1840.2363 C3227.8281 -1845.8516 3229.833 -1851.002 3232.0791 -1856.2227 c3234.1953 -1861.1416 3237.1875 -1865.8896 3240.9355 -1869.7188 c3245.502 -1874.3867 3249.29 -1880.2939 3254.5332 -1884.2266 c3264.2734 -1891.5313 3273.5234 -1899.4688 3283.333 -1906.6621 c3288.2656 -1910.2783 3293.7061 -1912.6592 3298.8877 -1915.791 c3300.874 -1916.9922 3303.1738 -1917.7607 3305.2939 -1918.6904 c3308.1523 -1919.9434 3310.3213 -1922.0137 3313.0713 -1923.3887 c3324.0732 -1928.8906 3335.584 -1934.916 3347.9648 -1936.4229 c3353.709 -1937.1221 3359.9102 -1936.1943 3365.4258 -1937.9385 c3371.4189 -1939.834 3377.3428 -1940.7207 3383.4668 -1942.0967 c3389.5547 -1943.4648 3395.0664 -1946.0479 3400.9688 -1947.9346 c3403.6514 -1948.791 3406.4199 -1949.3965 3409.1563 -1950.0547 c3412.0039 -1950.7402 3414.8438 -1953.1895 3417.6328 -1954.2852 c3419.7734 -1955.126 3421.9521 -1955.6699 3423.7949 -1957.1074 c3426.0566 -1958.873 3428.0371 -1960.9609 3430.3691 -1962.6445 c3434.833 -1965.8682 3440.1172 -1967.9482 3443.6699 -1972.2539 c3444.3145 -1973.0352 3445.0156 -1973.582 3445.7393 -1973.9375 C3441.4971 -1982.877 3435.5684 -1990.4521 3433.1357 -2000.1445 c3431.7988 -2005.4707 3429.2285 -2010.4473 3427.1748 -2015.5273 c3426.9619 -2016.0537 3426.7559 -2016.583 3426.5449 -2017.1104 C3425.9824 -2015.6738 3425.4893 -2014.209 3424.792 -2012.8154 c3423.4844 -2010.2041 3421.6689 -2008.4844 3419.5801 -2006.5225 c3415.0137 -2002.2334 3409.835 -1997.541 3403.9629 -1995.2305 c3400.7988 -1993.9863 3398.1572 -1993.3584 3394.7686 -1993.2656 c3391.6797 -1993.1816 3388.7334 -1991.5547 3385.8027 -1990.6836 c3379.4609 -1988.7998 3372.8818 -1988.498 3366.3242 -1988.3184 c3363.4834 -1988.2412 3360.1992 -1987.3184 3357.3965 -1986.7412 c3354.248 -1986.0938 3351.3076 -1985.8906 3348.0938 -1985.8906 c3344.8984 -1985.8906 3342.7559 -1984.6455 3339.8779 -1983.3887 c3336.7617 -1982.0283 3333.6924 -1981.1768 3330.3711 -1980.4863 c3322.877 -1978.9297 3317.3438 -1975.9736 3311.1367 -1971.6387 c3308.2773 -1969.6416 3305.0137 -1968.2383 3302.083 -1966.2842 c3298.3838 -1963.8184 3294.6367 -1961.4375 3290.9141 -1959.0088 c3284.8223 -1955.0332 3279.209 -1950.582 3272.9004 -1946.9258 c3266.3164 -1943.1104 3259.6475 -1940.3877 3253.665 -1935.5859 c3243.3047 -1927.2734 3234.8711 -1916.3281 3230.0195 -1903.9336 c3224.6729 -1890.2734 3224.2607 -1876.1396 3224.6221 -1861.6797 cf*U*u1 D3599.8184 -1897.4111 m3608.3867 -1900.166 3618.6934 -1899.3164 3625.7061 -1893.4277 c3632.7432 -1887.5186 3634.6582 -1879.6914 3636.7676 -1871.1943 c3639.2422 -1861.2256 3636 -1849.96 3631.5156 -1841.0381 c3627.332 -1832.7148 3621.3496 -1828.6895 3612.79 -1827.793 C3612.3887 -1827.6963 3611.9688 -1827.625 3611.5195 -1827.5967 c3610.4746 -1827.5303 3609.4609 -1827.542 3608.4766 -1827.6221 c3608.2656 -1827.6367 3608.0605 -1827.6611 3607.8613 -1827.6934 C3593.7412 -1829.2871 3586.0439 -1845.4551 3582.9385 -1857.9189 c3579.0518 -1873.5176 3582.8691 -1891.9629 3599.8184 -1897.4111 cf0 D3595.7656 -1860.2061 m3597.5088 -1853.21 3601.6367 -1841.377 3610.041 -1840.6221 C3615.9043 -1840.8574 3618.4404 -1843.0098 3620.8164 -1848.6855 c3623.5918 -1855.3203 3625.5752 -1862.3262 3623.8027 -1869.4697 c3622.4707 -1874.834 3621.6846 -1879.3975 3617.5176 -1883.3926 c3613.5117 -1887.2324 3606.6934 -1885.9746 3601.9727 -1884.457 c3592.5918 -1881.4414 3593.9785 -1867.377 3595.7656 -1860.2061 cf*U3567.832 -2159.9277 m3568.3145 -2153.8652 3568.54 -2147.8486 3568.5635 -2141.7129 c3568.626 -2125.7793 3569.3975 -2109.7441 3573.0879 -2094.1865 c3576.6104 -2079.334 3583.0391 -2065.2998 3588.623 -2051.1523 c3591.1172 -2044.835 3592.875 -2038.2715 3595.0625 -2031.8418 c3597.4766 -2024.749 3600.4316 -2017.8896 3602.6865 -2010.7432 c3604.7441 -2004.2246 3606.708 -1997.6475 3609.4639 -1991.3809 c3612.7744 -1983.8555 3616.7852 -1976.5889 3620.4102 -1969.21 c3627.3838 -1955.0137 3633.4336 -1940.3672 3640.5869 -1926.2705 c3643.8506 -1919.8379 3647.2949 -1913.501 3650.541 -1907.0596 c3654.0488 -1900.0967 3656.6396 -1892.6816 3660.2666 -1885.7998 c3663.6377 -1879.4033 3668.0859 -1873.5986 3671.8428 -1867.4307 c3675.751 -1861.0137 3678.7178 -1853.7881 3681.5508 -1846.8447 c3684.7666 -1838.9619 3686.3838 -1830.6338 3689.7266 -1822.7832 c3693.1543 -1814.7354 3695.875 -1806.6602 3698.4824 -1798.3174 c3700.9805 -1790.3203 3703.626 -1782.3701 3706.2734 -1774.4219 c3708.8955 -1766.5518 3709.1113 -1757.6084 3709.7227 -1749.3896 c3710.9258 -1733.252 3711.125 -1716.9434 3714.25 -1701.0225 c3715.0234 -1697.082 3714.4844 -1692.6641 3714.5801 -1688.6514 c3714.6768 -1684.5527 3714.9961 -1680.4697 3715.4727 -1676.3984 c3716.2832 -1669.4766 3715.7559 -1661.9609 3714.1719 -1655.0059 C3715.7568 -1653.9863 3716.9004 -1652.2637 3716.9561 -1649.8271 c3717.1055 -1643.2695 3717.8828 -1636.542 3718.7139 -1630.04 c3719.7002 -1622.3154 3719.4736 -1614.4082 3719.4102 -1606.6387 c3719.3525 -1599.5723 3718.3457 -1592.791 3717.4775 -1585.8076 c3716.541 -1578.2793 3717.0869 -1570.8838 3715.7051 -1563.3848 c3712.8115 -1547.6738 3708.3555 -1532.4238 3704.3369 -1517.0078 c3702.502 -1509.9678 3699.8281 -1503.0439 3696.6797 -1496.4922 c3693.2393 -1489.332 3692.1582 -1480.4795 3690.2695 -1472.7734 c3686.4971 -1457.377 3682.7686 -1441.9688 3678.959 -1426.5801 c3675.2754 -1411.707 3675.2773 -1396.2578 3671.4492 -1381.4277 c3669.4785 -1373.7959 3668.584 -1365.8506 3667.6797 -1358.0293 c3666.7559 -1350.0371 3665.4238 -1342.1152 3664.5098 -1334.1465 c3662.75 -1318.7832 3663.7773 -1302.9053 3663.7773 -1287.4727 c3663.7773 -1272.3311 3663.5234 -1257.1865 3664.4854 -1242.0674 c3664.9775 -1234.3379 3666.1367 -1226.5742 3666.2871 -1218.835 c3666.4297 -1211.4688 3668.6045 -1204.2559 3669.3281 -1196.9355 c3669.9854 -1190.2852 3669.9512 -1183.5684 3669.9609 -1176.8945 c3669.9707 -1169.4785 3671.8125 -1161.957 3672.2764 -1154.5264 c3673.1611 -1140.3574 3673.5371 -1126.0723 3675.873 -1112.0449 c3680.6113 -1083.5908 3686.6377 -1054.9756 3695.3682 -1027.4712 c3696.3516 -1024.373 3698.5918 -1021.5195 3700.4561 -1018.9102 c3702.5586 -1015.9683 3703.8818 -1012.9873 3705.3145 -1009.6646 c3707.998 -1003.439 3710.6934 -997.231 3713.8623 -991.2324 c3717.249 -984.8198 3721.4248 -978.8579 3725.4004 -972.8062 c3725.6152 -972.479 3725.8311 -972.1519 3726.0459 -971.8252 C3725.1797 -974.2231 3724.3203 -976.6245 3723.5 -979.041 c3720.835 -986.8979 3719.1035 -995.1367 3716.9805 -1003.1572 c3715.166 -1010.0117 3712.1729 -1016.5015 3709.7539 -1023.1567 c3707.1221 -1030.3955 3705.6113 -1038.0562 3703.5732 -1045.4897 c3699.3906 -1060.7373 3698.5957 -1075.9199 3697.3857 -1091.6035 c3696.793 -1099.291 3696.084 -1106.9688 3695.2373 -1114.6328 c3694.3574 -1122.6055 3693.9404 -1130.582 3693.0313 -1138.5518 c3692.1992 -1145.8418 3691.6934 -1153.0049 3691.5293 -1160.3389 c3691.4404 -1164.2998 3691.1553 -1168.2578 3690.9092 -1172.2119 c3690.6221 -1176.8135 3690.9463 -1181.707 3690.3203 -1186.2578 c3688.1338 -1202.1387 3687.8994 -1218.1523 3687.8799 -1234.1563 c3687.8594 -1250.2246 3689.3125 -1266.1475 3690.6953 -1282.1416 c3692.0996 -1298.3721 3691.4248 -1314.668 3692.2168 -1330.9375 c3692.9814 -1346.624 3694.5957 -1362.4502 3696.3301 -1378.0605 c3698.0703 -1393.7168 3701.9883 -1408.9492 3703.8447 -1424.5742 c3704.75 -1432.1924 3705.6465 -1439.8086 3707.0752 -1447.3506 c3708.5576 -1455.1777 3711.5371 -1462.8467 3713.7002 -1470.5215 c3715.7021 -1477.6221 3717.6641 -1484.7324 3719.835 -1491.7832 c3722.1602 -1499.3359 3725.3164 -1506.585 3727.6094 -1514.1602 c3729.7168 -1521.125 3731.2959 -1528.2402 3732.6348 -1535.3877 c3734.1602 -1543.5273 3736.7783 -1551.2852 3738.4434 -1559.4199 c3739.7793 -1565.9414 3739.7344 -1572.8848 3740.9805 -1579.4922 c3742.5039 -1587.5723 3744.0176 -1595.585 3744.9727 -1603.7598 c3746.7754 -1619.1982 3747.8311 -1634.6943 3749.6689 -1650.1357 c3750.5488 -1657.5254 3750.8125 -1664.8545 3751.0273 -1672.2822 c3751.2734 -1680.7676 3752.5303 -1689.2061 3753.1406 -1697.668 c3753.873 -1707.8047 3753.5713 -1718.0645 3753.9111 -1728.2266 c3754.25 -1738.3682 3754.6357 -1748.5078 3754.6611 -1758.6572 c3754.666 -1760.8574 3755.5703 -1762.4736 3756.8936 -1763.5195 C3756.1807 -1770.6211 3755.4453 -1777.7217 3754.4316 -1784.7881 c3753.2969 -1792.7109 3751.0713 -1800.1074 3749.2773 -1807.8613 c3748.5332 -1811.0811 3748.2334 -1814.4883 3747.709 -1817.7549 c3747.1787 -1821.0645 3746.1787 -1824.582 3746.0039 -1827.9131 c3745.8252 -1831.3125 3744.5518 -1834.5205 3743.4932 -1837.7275 c3742.1768 -1841.7139 3741.2734 -1845.875 3740.5088 -1849.998 c3739.2539 -1856.7715 3738.7383 -1863.2871 3736.6514 -1869.9336 c3734.4521 -1876.9404 3731.3809 -1883.5654 3728.7217 -1890.3896 c3727.5801 -1893.3193 3726.9023 -1896.3916 3726.0078 -1899.3975 c3725.0811 -1902.5107 3722.8975 -1905.4443 3721.2871 -1908.2334 c3717.2646 -1915.1992 3714.6279 -1923.0371 3711.0342 -1930.2471 c3707.834 -1936.665 3704.6504 -1943.0645 3701.5156 -1949.5225 c3698.373 -1955.9961 3695.9971 -1962.6172 3691.9277 -1968.5127 c3683.2178 -1981.1318 3678.2217 -1996.1045 3672.001 -2010.0078 c3665.6563 -2024.1885 3659.417 -2038.3594 3654.1016 -2052.9639 c3651.665 -2059.6582 3649.0088 -2066.2617 3646.6816 -2072.9971 c3643.8779 -2081.1133 3642.2217 -2089.0332 3641.0322 -2097.5352 c3638.1445 -2118.1572 3636.7529 -2139.0977 3636.5879 -2159.9277 C3649.709 -2159.9277 L3649.918 -2148.0098 3650.3623 -2136.1465 3651.2646 -2124.21 c3652.4893 -2108.0098 3653.959 -2091.8789 3659.2246 -2076.4531 c3664.1104 -2062.1426 3669.5098 -2047.8564 3675.502 -2033.9746 c3678.5195 -2026.9814 3681.6758 -2020.0498 3684.7803 -2013.0957 c3688.1299 -2005.5928 3690.9307 -1997.7168 3694.6045 -1990.376 c3697.7168 -1984.1563 3700.8809 -1977.7754 3705.1582 -1972.2559 c3707.3164 -1969.4746 3708.2656 -1965.709 3709.707 -1962.501 c3711.3867 -1958.7617 3713.2256 -1955.0938 3715.0098 -1951.4043 c3721.6113 -1937.7578 3727.5586 -1923.4873 3735.083 -1910.3428 c3738.3379 -1904.6563 3739.2793 -1898.4121 3741.7969 -1892.46 c3744.6758 -1885.6504 3747.4707 -1878.8555 3749.6904 -1871.7852 c3752.3086 -1863.4463 3752.5469 -1854.7764 3754.6006 -1846.334 c3755.7002 -1841.8105 3757.4492 -1837.4854 3758.4463 -1832.9385 c3759.4053 -1828.5625 3759.8008 -1823.9814 3760.5107 -1819.5537 c3761.9961 -1810.29 3764.8213 -1801.4131 3766.3652 -1792.1494 c3768.0762 -1781.875 3769.0977 -1771.4893 3770.1348 -1761.1309 c3770.3965 -1758.5137 3769.2949 -1756.7275 3767.6348 -1755.7607 C3767.5029 -1740.8623 3766.6924 -1725.9805 3766.4629 -1711.083 c3766.2168 -1695.0205 3764.4912 -1679.0566 3763.8105 -1663.0088 c3763.1563 -1647.584 3760.4961 -1632.1758 3759.2354 -1616.7793 c3757.9717 -1601.3379 3755.209 -1586.3477 3752.6338 -1571.1025 c3751.4609 -1564.1582 3751.3398 -1557.3057 3749.7881 -1550.3994 c3748.9355 -1546.6025 3747.7881 -1542.9043 3746.4043 -1539.2695 c3744.9697 -1535.5 3744.9268 -1530.5146 3744.1133 -1526.5283 c3741.0547 -1511.5332 3735.1191 -1497.6631 3730.7803 -1483.0693 c3726.4023 -1468.3447 3721.0654 -1453.2705 3718.5938 -1438.1162 c3717.3613 -1430.5635 3716.7334 -1422.9219 3715.6787 -1415.3438 c3714.5508 -1407.2324 3712.5947 -1399.3105 3711.1914 -1391.25 c3708.4893 -1375.7324 3707.8037 -1359.9424 3706.1992 -1344.2979 c3704.543 -1328.1484 3704.5938 -1311.8496 3704.5889 -1295.6338 c3704.584 -1279.6455 3701.7734 -1263.5879 3701.0801 -1247.5996 c3700.3887 -1231.6475 3700.6973 -1215.4473 3701.8848 -1199.5283 c3702.4668 -1191.709 3703.2627 -1184.002 3703.6729 -1176.1689 c3704.1143 -1167.751 3704.3135 -1159.3193 3704.7725 -1150.9082 c3705.6064 -1135.5977 3707.7529 -1120.2959 3709.2305 -1105.0371 c3710.75 -1089.3359 3710.4541 -1073.0752 3713.8848 -1057.6538 c3717.0918 -1043.2393 3721.1797 -1028.9922 3726.6172 -1015.2759 c3730.0293 -1006.6689 3732.4609 -997.1021 3734.4443 -988.0625 c3736.5234 -978.5874 3740.8652 -969.4355 3743.9307 -960.2368 c3746.2285 -953.3413 3737.1602 -949.8794 3732.9551 -954.1772 C3731.7715 -947.7578 3720.7383 -948.4312 3720.0332 -956.0352 c3719.8203 -958.3267 3717.377 -961.1392 3716.1992 -963.0688 c3714.2734 -966.2236 3712.1719 -969.2729 3710.127 -972.3511 c3705.9023 -978.7129 3702.1426 -985.2822 3698.8965 -992.1943 c3696.0762 -998.1987 3694.1973 -1005.6914 3690.2295 -1010.9932 c3685.5352 -1017.2666 3683.041 -1023.3418 3681.0566 -1030.8545 c3679.1973 -1037.9004 3677.043 -1044.7666 3675.3682 -1051.8779 c3673.5469 -1059.6055 3671.332 -1067.2334 3669.5117 -1074.9609 c3665.9287 -1090.1699 3663.4189 -1106.043 3661.4395 -1121.542 c3660.5723 -1128.3271 3660.7988 -1135.0996 3660.3047 -1141.9072 c3659.7314 -1149.8066 3659.1807 -1157.7793 3658.2295 -1165.6563 c3657.3164 -1173.2188 3657.0313 -1180.4863 3656.835 -1188.1006 c3656.6299 -1196.0947 3655.0957 -1203.6602 3653.998 -1211.542 c3649.4961 -1243.8516 3650.7773 -1276.9229 3650.7773 -1309.4473 c3650.7773 -1315.9355 3650.7461 -1322.4209 3651.0869 -1328.9023 c3651.4648 -1336.1016 3653.1152 -1343.0752 3653.8418 -1350.2188 c3654.6309 -1357.9756 3655.5508 -1365.7158 3656.7109 -1373.4258 c3657.8232 -1380.8125 3659.875 -1387.9609 3661.0439 -1395.3301 c3662.0957 -1401.9668 3662.5684 -1408.6934 3663.4727 -1415.3516 c3664.4883 -1422.8301 3666.4297 -1430.0459 3668.2324 -1437.3652 c3671.877 -1452.1582 3675.457 -1466.9668 3679.0918 -1481.7627 c3680.6826 -1488.2393 3681.6553 -1495.4199 3684.6416 -1501.4053 c3687.9648 -1508.0625 3690.4082 -1515.1221 3692.2852 -1522.3184 c3696.1426 -1537.1201 3700.3574 -1551.7588 3703.1699 -1566.8408 c3704.4316 -1573.6094 3703.8213 -1580.5283 3704.6719 -1587.3672 c3705.5449 -1594.3965 3706.3652 -1601.1934 3706.4238 -1608.2998 c3706.4834 -1615.5547 3706.4688 -1622.8174 3705.7139 -1630.04 c3705.1426 -1635.5088 3704.4102 -1641.0488 3704.0947 -1646.5684 C3701.3564 -1647.667 3699.3564 -1650.3643 3700.4785 -1654.0283 c3702.6279 -1661.0469 3703.4521 -1669.0947 3702.4727 -1676.3984 c3702.0039 -1679.8896 3701.792 -1683.4121 3701.6367 -1686.9277 c3701.4639 -1690.8398 3702.1582 -1695.3076 3701.4063 -1699.1377 c3698.5889 -1713.4893 3698.6133 -1728.0137 3697.2646 -1742.4902 c3696.5977 -1749.6426 3696.3438 -1756.832 3695.2959 -1763.9463 c3694.1738 -1771.5557 3691.1016 -1778.8535 3688.7295 -1786.1465 c3686.4346 -1793.2021 3684.4229 -1800.3574 3682.0547 -1807.3867 c3679.4785 -1815.0313 3675.6211 -1822.1592 3673.2705 -1829.8955 c3668.8477 -1844.4453 3663.0938 -1857.3926 3654.666 -1870.1191 c3646.4072 -1882.5918 3641.3232 -1896.8184 3634.3867 -1910.0547 c3627.1318 -1923.9004 3620.9258 -1938.1533 3614.2148 -1952.2598 c3607.5879 -1966.1934 3599.752 -1979.7432 3594.4219 -1994.2432 c3591.6426 -2001.8057 3589.7568 -2009.6777 3586.7021 -2017.1338 c3583.6934 -2024.4775 3581.2061 -2032.0449 3578.9121 -2039.6377 c3574.0264 -2055.8135 3566.0762 -2070.8936 3561.4688 -2087.2129 c3556.6797 -2104.1738 3555.7441 -2122.25 3555.5762 -2139.7773 c3555.5117 -2146.5615 3555.3516 -2153.2168 3554.833 -2159.9277 C3567.832 -2159.9277 Lf*u1 D3802.0566 -337.1909 m3800.6992 -330.4077 3799.7881 -323.1919 3797.1494 -316.769 c3794.5967 -310.5527 3790.249 -305.1206 3787.9971 -298.811 c3785.9287 -293.0171 3782.8906 -286.8765 3778.5303 -282.4775 c3776.3613 -280.2896 3773.4053 -278.8325 3770.7773 -277.2949 c3767.6729 -275.4785 3764.7852 -273.2256 3761.9219 -271.0591 c3750.6289 -262.5132 3740.7881 -252.563 3728.6826 -245.0771 c3725.5625 -243.147 3721.8281 -242.2886 3718.3672 -241.1348 c3716.1523 -240.3965 3716.9873 -241.0352 3715.709 -239.9116 c3715.6309 -239.8433 3715.5645 -239.7896 3715.5039 -239.7456 C3715.627 -239.5913 3715.7373 -239.231 3715.7559 -238.4639 c3715.9316 -231.0073 3718.6064 -223.6553 3719.917 -216.3579 c3722.6455 -201.1729 3721.5352 -186.2593 3720.8398 -170.9741 c3720.498 -163.481 3719.8154 -156.4487 3718.2041 -149.0967 c3717.4326 -145.5737 3716.5234 -142.0801 3715.6338 -138.5859 c3714.7969 -135.3032 3714.6357 -132.209 3714.0332 -128.9141 c3713.1514 -124.0898 3709.4434 -118.7979 3703.9063 -119.4766 c3697.6465 -120.2437 3690.999 -123.8838 3685.8613 -127.4141 c3683.1309 -129.291 3680.5859 -131.3877 3678.3984 -133.8774 c3676.6152 -135.9077 3674.2861 -137.397 3672.082 -139.1553 c3666.4883 -143.6177 3661.873 -149.1982 3657.8486 -155.0791 c3656.4121 -157.1782 3655.4277 -159.6084 3653.8213 -161.5898 c3652.1865 -163.6074 3650.124 -165.4873 3648.3623 -167.4541 c3644.1631 -172.1426 3641.9004 -178.3198 3639.1074 -183.9043 c3635.1992 -191.7222 3630.4746 -198.9849 3627.9111 -207.0752 C3626.4883 -204.8779 3624.7129 -202.8745 3622.6416 -201.0874 c3618.1816 -197.2393 3611.8154 -196.8862 3606.8584 -193.7715 c3604.3232 -192.1782 3602.1875 -189.8345 3599.9531 -187.8589 c3597.5098 -185.6992 3594.791 -184.2021 3592.0977 -182.4087 c3589.6309 -180.7651 3587.373 -178.7925 3584.998 -177.0215 c3582.0479 -174.8228 3577.9961 -173.5811 3574.6621 -172.0176 c3568.3232 -169.0449 3561.9014 -166.2637 3555.123 -164.4595 c3551.4287 -163.4761 3547.7012 -162.6035 3543.9922 -161.6768 c3539.918 -160.6577 3536.2813 -158.9282 3532.332 -157.5581 c3529.0381 -156.4155 3525.1494 -156.2861 3521.7314 -155.4819 c3518.7959 -154.791 3515.877 -154.0371 3512.9443 -153.3433 C3512.7656 -152.6968 3512.4629 -152.0352 3512.0117 -151.3691 c3510.4688 -149.0908 3508.8008 -147.4653 3506.291 -146.2891 c3503.7871 -145.1157 3501.8672 -142.7734 3499.9385 -140.8604 c3497.6758 -138.6172 3495.167 -136.7422 3492.9756 -134.4092 c3490.457 -131.729 3488.8271 -128.4302 3486.1074 -125.938 c3484.9697 -124.896 3483.752 -123.9521 3482.6162 -122.9033 C3482.709 -122.6299 3482.8262 -122.2637 3482.9863 -121.75 c3483.4746 -120.1816 3483.3389 -118.4155 3483.7598 -116.8032 c3484.1963 -115.1299 3484.8926 -113.4878 3485.46 -111.8564 c3486.4854 -108.9077 3488.6563 -106.4131 3489.8086 -103.4844 c3490.791 -100.9839 3491.4785 -98.9072 3492.6602 -96.3823 c3494.8828 -91.6333 3495.0303 -86.353 3489.8926 -83.5225 c3485.5811 -81.1465 3479.9287 -82.3892 3475.376 -83.187 c3471.9014 -83.7959 3470.6904 -83.9194 3466.582 -83.9775 c3465.3223 -83.9956 3464.1113 -83.9541 3462.9023 -83.7925 C3463.1465 -82.6309 3463.376 -81.4688 3463.6631 -80.3208 c3467.0781 -66.6577 3471.1543 -53.0249 3471.5127 -38.8403 c3471.6484 -33.4902 3468.0098 -30.103 3462.8721 -29.564 c3459.6865 -29.2295 3456.4219 -29.4263 3453.2217 -29.4263 c3449.5059 -29.4263 3444.9658 -32.3037 3441.625 -33.8027 c3428.2871 -39.7866 3417.8379 -50.9292 3407.707 -61.1299 c3403.375 -65.4922 3397.3594 -70.4634 3394.4307 -75.9302 c3392.8984 -78.7881 3391.0527 -81.3945 3389.1768 -84.0332 c3388.2412 -85.3491 3387.3828 -86.7012 3386.5508 -88.0845 C3387.5732 -87.7993 3387.3057 -88.104 3385.748 -88.9976 C3385.1113 -89.5322 3384.5352 -90.126 3384.0186 -90.7783 C3379.3936 -96.0571 3377.0664 -103.6157 3374.126 -109.8848 c3370.625 -117.3486 3368.0146 -124.9546 3365.3438 -132.7241 c3362.7373 -140.3027 3362.6563 -148.8003 3362.626 -156.7227 c3362.5938 -165.1274 3361.4844 -173.4609 3361.3887 -181.8574 c3361.3701 -183.4717 3361.8398 -184.771 3362.6064 -185.7637 C3350.9063 -193.5039 3340.1094 -202.1709 3330.6699 -212.604 c3325.7178 -218.0781 3321.2598 -224.0518 3317.3711 -230.3228 c3313.7715 -236.1294 3309.8438 -241.9131 3306.6055 -247.9287 c3305.0264 -250.8618 3304.1006 -254.0571 3302.4434 -256.9531 c3300.3574 -260.5962 3298.5371 -264.3828 3296.8555 -268.2266 c3293.5801 -275.7148 3291.29 -283.5942 3289.0215 -291.4331 c3284.5566 -306.8628 3280.4238 -322.3271 3278.9463 -338.3569 c3278.6104 -342.0005 3278.4307 -345.6846 3278.6211 -349.3394 c3278.8047 -352.8721 3279.8652 -356.1182 3279.6816 -359.6938 c3279.5547 -362.1426 3279.582 -364.7007 3280.125 -367.0391 C3275.6631 -370.0366 3276.9463 -378.54 3283.793 -378.9053 c3283.8623 -378.9092 3283.9307 -378.9189 3284 -378.9238 C3284 -379 L3284.8066 -379 L3289.6094 -379.6226 3294.2314 -382.7402 3298.2754 -385.1646 c3304.2451 -388.7427 3310.2666 -391.9956 3316.6934 -394.6792 c3319.0439 -395.6606 3321.5703 -395.9624 3324.0215 -396.6133 c3326.3486 -397.2314 3327.7568 -401.4692 3329.9805 -402.6621 c3335.4512 -405.5991 3339.6035 -410.3682 3344.999 -413.3301 c3347.0918 -414.479 3348.8584 -416.2246 3350.7178 -417.6992 c3350.9766 -417.9048 3351.2393 -418.1016 3351.502 -418.2983 C3351.1357 -418.1377 3350.7754 -417.9702 3350.4023 -417.8179 c3343.6865 -415.0708 3334.8301 -416.5151 3327.6953 -416.5151 c3314.8389 -416.5151 3297.8623 -413.2759 3287.8652 -423.3657 c3283.4639 -427.8066 3281.7891 -433.438 3280.1133 -439.3218 c3278.1328 -446.2793 3280.9941 -452.1567 3285.9814 -456.918 c3290.7305 -461.4512 3296.1689 -465.6558 3301.5352 -469.4385 c3307.0703 -473.3398 3313.6201 -475.2231 3319.125 -479.3325 c3324.3867 -483.2607 3330.2422 -485.396 3336.3574 -487.6533 c3339.5791 -488.8428 3342.3623 -490.5361 3345.2822 -492.3091 c3348.4346 -494.2231 3351.9541 -495.188 3355.0039 -497.2842 c3357.8506 -499.2402 3359.6084 -502.082 3362.2461 -504.1919 c3365.1045 -506.479 3367.9658 -508.7627 3370.832 -511.041 c3377.082 -516.0098 3383.377 -520.9194 3389.7295 -525.7563 c3401.918 -535.0366 3413.7539 -544.855 3424.6006 -555.7007 c3436.4775 -567.5771 3452.209 -580.894 3470.3887 -574.8467 c3479.4482 -571.8335 3483.6641 -563.6392 3488.5146 -556.1499 c3490.7256 -552.7363 3492.7617 -549.2427 3494.5918 -545.6572 C3495.4688 -545.604 3496.3848 -545.3584 3497.3145 -544.8779 c3503.5059 -541.6753 3509.1953 -537.6484 3515.2256 -534.1694 c3521.4824 -530.5601 3527.3779 -526.9624 3533.1777 -522.6172 c3539.8018 -517.6548 3533.333 -506.3599 3526.6172 -511.3916 c3520.8301 -515.7275 3514.9941 -519.4683 3508.6641 -522.9443 c3506.3398 -524.2207 3504.0869 -525.6133 3501.8457 -527.0254 C3501.8691 -526.9399 3501.8965 -526.8564 3501.9199 -526.771 c3507.5371 -505.7612 3509.1104 -483.9097 3509.1846 -462.2642 c3509.2227 -451.1035 3510.2842 -439.8413 3509.4053 -428.7036 c3508.9873 -423.4155 3506.7832 -418.2715 3506.6895 -412.9653 c3506.6084 -408.3657 3505.6582 -403.9478 3503.3555 -399.9468 c3499.1758 -392.6855 3487.9414 -399.2295 3492.1309 -406.5083 c3493.5537 -408.981 3493.6641 -411.5171 3493.7129 -414.3154 c3493.7754 -417.8149 3494.9092 -421.2881 3495.5059 -424.7432 c3496.9961 -433.3716 3496.6387 -441.7246 3496.3086 -450.4697 c3495.6914 -466.8037 3496.5566 -482.9937 3493.9287 -499.1997 c3492.7207 -506.6533 3491.5723 -514.103 3489.8477 -521.46 c3487.8906 -529.8159 3484.5869 -537.1328 3480.2998 -544.5293 c3477.4424 -549.4595 3474.1738 -557.1475 3469.5732 -560.6978 c3464.6074 -564.5298 3456.8604 -563.5703 3451.4375 -561.0918 c3446.3516 -558.7661 3441.2285 -553.9443 3437.3213 -550.0371 c3431.9941 -544.71 3426.4941 -539.7168 3420.9043 -534.6689 c3409.2422 -524.1362 3396.6895 -514.9854 3384.3516 -505.2734 c3378.7246 -500.8447 3372.6641 -496.6606 3367.9434 -491.2881 c3363.1152 -485.7925 3356.4277 -483.8672 3350.4297 -480.2256 c3344.5996 -476.6855 3338.2324 -474.9058 3332.0547 -472.1357 c3326.1563 -469.4912 3321.584 -464.7056 3315.5977 -462.0713 c3309.0059 -459.1714 3304.0156 -454.8789 3298.3584 -450.5376 c3296.2031 -448.8833 3293.8789 -446.8833 3292.4512 -444.5674 c3291.4551 -442.9497 3294.4336 -437.501 3295.0068 -435.8735 c3297.2783 -429.4336 3304.0684 -429.5391 3309.9531 -429.6602 c3317.7207 -429.8203 3325.4912 -430 3333.2607 -430 C3344.3916 -430 L3346.7686 -430 3350.5078 -432.3184 3352.5684 -433.4043 c3358.2002 -436.373 3364.3789 -439.9429 3369.3604 -443.9063 c3377.8721 -450.6772 3386.1631 -461.8511 3398.377 -455.8955 c3400.2197 -454.9976 3401.8359 -452.3301 3401.5967 -450.2529 c3400.9629 -444.7598 3397.9551 -441.5928 3393.6094 -438.4629 c3391.7988 -437.1592 3389.8096 -436.0898 3387.918 -434.9121 c3386.3018 -433.9063 3384.8057 -431.4072 3383.2949 -429.5532 c3379.7295 -425.1777 3375.1758 -421.603 3371.1299 -417.6787 c3366.166 -412.8652 3360.7656 -409.1079 3355.3789 -404.8359 c3350.2656 -400.7803 3344.8125 -396.7041 3339.3809 -393.0547 c3336.7764 -391.3042 3335.1465 -389.0303 3332.8184 -386.9805 c3330.0127 -384.5088 3326.4912 -383.7769 3322.9434 -383.0356 c3315.9805 -381.5806 3309.2637 -376.4834 3303.2539 -372.8809 c3300.6553 -371.3237 3298.0068 -369.8687 3295.2725 -368.6807 C3295.4902 -366.6982 3294.7539 -364.6807 3292.6406 -363.3423 C3292.6104 -363.1191 3292.5771 -362.7437 3292.5732 -362.1416 c3292.5664 -360.9429 3292.6787 -359.7339 3292.7402 -358.5371 c3292.9014 -355.4106 3292.2012 -352.29 3291.6182 -349.2373 c3290.2588 -342.1338 3292.3838 -333.2251 3293.5059 -326.1782 c3294.6846 -318.7798 3297.0664 -311.4023 3298.9912 -304.1641 c3301.1465 -296.0591 3303.5098 -288.0127 3306.1377 -280.0483 c3308.3975 -273.2007 3311.7178 -266.7705 3315.376 -260.5771 c3317.0039 -257.8213 3317.7539 -254.5186 3319.3984 -251.686 c3321.252 -248.4917 3323.4531 -245.498 3325.4365 -242.3843 c3329.0508 -236.709 3332.2188 -231.001 3336.4824 -225.7393 c3341.2002 -219.918 3346.5469 -214.6196 3352.1445 -209.6523 c3362.6162 -200.3594 3374.7148 -192.6348 3387.5752 -187.1606 c3401.5 -181.2339 3415.5586 -174.7554 3430.1074 -170.5474 c3437.0098 -168.5513 3443.5635 -167.3433 3450.748 -167.3335 c3458.1797 -167.3237 3466.2129 -165.0176 3473.5684 -163.9209 c3488.0664 -161.7593 3502.3896 -164.0669 3516.4209 -167.5635 c3521.5928 -168.8525 3527.2139 -169.1958 3532.0938 -171.353 c3537.1895 -173.6069 3542.5664 -174.7197 3547.9561 -176.0674 c3558.3613 -178.6685 3567.5479 -183.2046 3577.3223 -187.4702 c3581.2158 -189.1694 3584.5605 -193.1235 3588.2402 -195.3501 c3592.1992 -197.7466 3595.2461 -201.4038 3599.0322 -204.0967 c3602.4785 -206.5479 3606.4023 -208.5327 3610.501 -209.6147 c3614.207 -210.5938 3618.2373 -213.4736 3618.623 -217.7217 c3619.1348 -223.3521 3625.3125 -225.1826 3628.9756 -223.1519 C3632.7656 -225.2622 3638.8965 -223.4468 3639.0439 -217.7217 c3639.2207 -210.8135 3642.25 -206.6333 3645.1963 -200.7397 c3648.8506 -193.4307 3652.9961 -186.1865 3656.125 -178.6387 c3658.1602 -173.7295 3663.834 -170.3374 3666.6172 -165.7495 c3670.3818 -159.5449 3674.5498 -154.2266 3680.0137 -149.4058 c3682.4727 -147.2368 3685.6729 -145.7422 3687.624 -143.0903 c3689.6016 -140.4033 3692.459 -138.5913 3695.1855 -136.7651 c3697.0938 -135.4878 3699.2988 -134.6016 3701.4805 -133.8184 C3701.4795 -133.8633 3701.4775 -133.9155 3701.4785 -133.9551 c3701.6318 -140.647 3704.6172 -147.751 3706.0508 -154.2959 c3707.7988 -162.2725 3707.749 -170.21 3708.2305 -178.3276 c3709.1514 -193.8628 3708.7568 -208.5024 3705.0557 -223.6958 c3703.6201 -229.5898 3701.6973 -237.0303 3703.0273 -243.0913 c3704.5254 -249.9189 3710.8486 -252.3164 3716.7666 -254.2891 c3730.3457 -258.8159 3740.5352 -270.5786 3751.5098 -279.2983 c3756.4375 -283.2139 3761.4775 -286.9546 3766.9355 -290.0996 c3772.6934 -293.4175 3774.6689 -300.6392 3777.1387 -306.4238 c3779.4121 -311.7485 3783.041 -316.3955 3785.2451 -321.7612 c3787.6338 -327.5762 3788.292 -334.5083 3789.5215 -340.647 c3791.166 -348.8633 3803.6953 -345.3765 3802.0566 -337.1909 cf0 D3489.0811 -150.3247 m3482.0977 -150.3682 3475.2383 -150.6211 3468.335 -151.6504 c3460.7383 -152.7832 3453.2559 -154.186 3445.5742 -154.3989 c3431.2139 -154.7964 3416.1152 -160.7681 3403.2813 -166.8174 c3393.7422 -171.314 3383.8691 -174.6201 3374.4609 -179.1055 C3374.6777 -173.3955 3375.3057 -167.708 3375.5566 -161.998 c3375.8867 -154.4604 3375.3994 -147.0083 3376.958 -139.5664 c3379.7383 -126.2983 3386.2979 -112.5649 3392.8252 -100.7329 c3394.1426 -98.3442 3396.457 -97.1064 3397.7754 -94.6455 c3399.2832 -91.8315 3401.3506 -89.2959 3403.1621 -86.6768 c3407.2998 -80.6953 3411.7666 -75.5259 3416.8994 -70.3223 c3427.334 -59.7437 3437.6367 -49.3359 3451.584 -43.5508 c3453.6592 -42.6899 3455.7188 -42.4409 3457.834 -42.3979 C3457.7861 -43.3887 3457.8086 -44.3911 3457.7754 -45.3584 c3457.5098 -53.063 3455.2979 -60.1826 3453.4463 -67.5894 c3451.9502 -73.5757 3449.9883 -79.6924 3449.2871 -85.8296 c3448.6563 -91.3447 3453.7969 -94.9717 3458.4971 -96.2197 c3465.3223 -98.0313 3471.9971 -96.5547 3478.7285 -95.6504 C3478.2686 -96.8535 3477.9131 -98.0903 3477.7422 -99.4233 c3477.6699 -99.9878 3476.0117 -101.9692 3475.6563 -102.5645 c3474.8281 -103.9507 3474.1143 -105.375 3473.5234 -106.8789 c3472.1016 -110.4946 3470.5332 -114.3311 3470.3164 -118.2588 c3470.0742 -122.6475 3468.6465 -125.7178 3471.4307 -129.728 c3472.6396 -131.4692 3474.1768 -132.8359 3475.7871 -134.1914 c3477.7959 -135.8828 3479.0547 -137.7295 3480.6465 -139.8125 c3483.6494 -143.7451 3487.1855 -146.6948 3490.7461 -150.0527 c3490.8486 -150.1494 3490.9473 -150.248 3491.0488 -150.3447 C3490.3945 -150.3335 3489.7412 -150.3208 3489.0811 -150.3247 cf*U*u1 D3445.4512 -360.2935 m3439.3408 -354.4849 3431.5811 -350.2734 3423.0547 -349.4893 c3410.8242 -348.3643 3401.7783 -355.9268 3397.0469 -365.9556 C3394.5293 -365.9966 3392.1094 -367.396 3391.3018 -370.582 c3387.2158 -386.71 3400.3115 -401.6294 3415.4883 -405.1831 c3423.7031 -407.1069 3432.9785 -406.3862 3439.8223 -401.2075 c3446.1279 -396.436 3452.2881 -388.5708 3454.8633 -381.0918 c3457.8555 -372.4004 3451.084 -365.6484 3445.4512 -360.2935 cf0 D3441.8887 -378.7686 m3439.9395 -382.9004 3436.2715 -386.9624 3432.9902 -390.1025 c3429.2686 -393.6641 3423.7021 -393.4429 3418.9453 -392.6475 c3413.5176 -391.7402 3407.5352 -387.6143 3404.8906 -382.3193 C3405.7617 -381.3418 3406.374 -380.0674 3406.543 -378.4937 c3407.417 -370.3364 3412.8867 -362.186 3421.7451 -362.3687 c3425.8193 -362.4526 3430.9189 -364.8755 3434.0225 -367.4082 c3436.9414 -369.791 3443.9277 -374.4478 3441.8887 -378.7686 cf*U*u1 D3773.4443 -329.5166 m3774.25 -332.7915 3774.9375 -336.0542 3775.1455 -339.4263 c3775.4092 -343.7031 3774.7051 -344.0776 3770.3076 -345.3726 c3766.0234 -346.6338 3761.084 -346.0229 3756.6777 -346.0229 c3751.2939 -346.0229 3746.0996 -345.8804 3740.75 -345.251 c3735.4209 -344.624 3730.1475 -343.6909 3724.9414 -342.3853 c3719.8584 -341.1104 3715.1182 -338.8921 3710.0869 -337.4595 c3705.4355 -336.1348 3700.7979 -334.9966 3696.5459 -332.6255 c3694.3926 -331.4243 3689.9824 -327.9434 3689.749 -325.3154 c3689.2666 -319.8833 3683.5059 -317.9834 3679.8066 -319.6768 C3679.8604 -314.5283 3679.8555 -309.335 3679.8555 -304 c3679.8555 -296 3666.8555 -296 3666.8555 -304 c3666.8545 -323 3665.6182 -340.5708 3665.6182 -358.7881 c3665.6182 -367.2056 3661.0264 -374.7822 3660.5332 -383.2393 c3660.0098 -392.2153 3656.6572 -400.042 3652.3369 -407.7754 c3648.0146 -415.5137 3643.9844 -423.2432 3640.1475 -431.2397 c3636.501 -438.8394 3631.8145 -445.5352 3626.9287 -452.3716 c3621.9502 -459.3379 3614.6484 -465.1045 3608.6016 -471.1509 c3604.1982 -475.5557 3597.3008 -484.0635 3590.4961 -484.5313 c3587.7949 -484.7168 3585.9707 -486.2173 3585.0186 -488.1353 C3582.0801 -486.96 3579.1904 -485.627 3576.1465 -484.7656 c3573.959 -484.1465 3571.3086 -484.4678 3569.0469 -484.3018 c3566.1484 -484.0889 3563.3027 -483.3906 3560.4941 -482.6787 c3554.3311 -481.1167 3548.6992 -478.688 3542.2646 -478.3501 c3539.1318 -478.1855 3537.1777 -479.8994 3536.3916 -482.1328 C3531.9785 -482.1855 3527.5576 -486.8428 3530.4688 -491.8413 c3532.7129 -495.6953 3534.6924 -499.6675 3536.4209 -503.7798 c3537.9668 -507.457 3540.585 -512.2422 3540.8086 -516.2949 c3541.0557 -520.7783 3543.1006 -524.7593 3543.3779 -529.2559 c3543.6533 -533.7246 3544.21 -538.166 3544.3965 -542.6416 c3544.8047 -552.4312 3547.083 -562.3213 3548.3779 -572.0376 c3549.6084 -581.2739 3550.6045 -591.0244 3550.6045 -600.3276 c3550.6045 -607.2969 3548.4346 -615.5605 3552.6563 -621.7393 c3556.542 -627.4272 3563.1963 -626.7622 3568.6309 -623.9517 c3573.0859 -621.6475 3576.8223 -617.7871 3580.334 -614.27 c3583.4131 -611.1855 3586.2695 -607.9995 3588.8613 -604.4927 c3590.4746 -602.3096 3591.3164 -598.9775 3592.9033 -596.5488 C3593.9346 -597.332 3594.9648 -598.2051 3595.9902 -598.6694 c3598.5684 -599.8359 3601.4277 -600.9712 3604.1738 -601.5933 c3610.5498 -603.0376 3617.3838 -602.793 3623.8809 -602.6211 c3628.6377 -602.4956 3632.8936 -599.8691 3633.7637 -594.9678 c3634.9424 -588.3369 3635.4434 -581.1821 3634.459 -574.5098 c3634.0059 -571.4404 3633.0781 -568.7534 3631.9307 -565.9604 C3638.3535 -566.8071 3644.5361 -569.0562 3651.0947 -569.2627 c3659.3164 -569.5215 3670.8984 -568.3506 3673.4551 -558.9155 c3674.6777 -554.4053 3672.7598 -551.1631 3670.5107 -547.9009 C3671.2129 -547.668 3671.917 -547.4399 3672.6172 -547.2002 c3675.6514 -546.1611 3678.6348 -544.8965 3681.4336 -543.332 c3693.2139 -536.7471 3694.9111 -521.8247 3687.624 -511.2505 c3684.2422 -506.3428 3677.7158 -504.3955 3672.1641 -503.3662 c3665.1953 -502.0737 3658.1338 -500.8892 3651.0947 -500.061 c3643.7363 -499.1958 3636.251 -499.2251 3628.9248 -498.124 c3621.1367 -496.9531 3613.4609 -495.0024 3605.8252 -493.1113 c3605.0195 -492.9121 3604.2148 -492.7402 3603.4102 -492.5625 C3605.5439 -491.1328 3607.6357 -489.5439 3609.8535 -487.9893 c3613.7754 -485.2412 3617.0625 -481.0801 3620.4443 -477.6978 c3624.2832 -473.8594 3628.124 -470.0425 3632.0693 -466.3203 c3638.0049 -460.7217 3643.2861 -452.5767 3647.3623 -445.5532 c3652.3223 -437.0068 3655.7803 -427.6841 3660.7441 -419.1318 c3665.5117 -410.9165 3670.1465 -402.856 3672.0459 -393.4741 c3672.9336 -389.0854 3672.7051 -384.21 3673.8457 -379.9395 c3675.1572 -375.0273 3677.0732 -370.2969 3678.3857 -365.3813 c3679.4395 -361.4385 3678.6182 -356.3564 3678.6182 -352.2954 c3678.6182 -346.9033 3679.0879 -341.4097 3679.3555 -336.0249 c3679.3945 -335.2368 3679.4121 -334.4551 3679.4453 -333.6689 C3683.7578 -340.9946 3692.4043 -345.6572 3700.3828 -348.2129 c3706.8301 -350.2778 3713.2666 -352.5015 3719.7422 -354.4429 c3727.1104 -356.6514 3734.8594 -357.5581 3742.4736 -358.4541 c3749.4082 -359.2695 3756.375 -359.0229 3763.3516 -359.0229 c3769.4941 -359.0229 3775.3555 -358.0537 3780.7461 -354.9746 c3791.084 -349.0693 3788.3271 -335.6069 3785.9795 -326.0605 c3783.9785 -317.9229 3771.4424 -321.3755 3773.4443 -329.5166 cf0 D3604.2188 -506.105 m3611.7891 -507.98 3619.3896 -509.7456 3627.1055 -510.9053 c3634.4199 -512.0049 3641.8809 -512.167 3649.2393 -512.8657 c3656.2139 -513.5283 3663.249 -514.8896 3670.1416 -516.1675 c3675.2891 -517.1221 3681.5693 -520.96 3678.873 -527.3276 c3676.7217 -532.4063 3671.5342 -533.8955 3666.6309 -535.5166 c3662.0107 -537.0439 3655.043 -538.9009 3655.2617 -545.1396 c3655.3584 -547.9253 3656.3799 -550.1152 3657.8486 -552.4399 c3658.5371 -553.5293 3659.5156 -554.4121 3660.377 -555.3584 c3660.4053 -555.3896 3660.4258 -555.4136 3660.4512 -555.4424 C3657.9102 -556.5225 3654.2959 -556.2466 3651.8135 -556.2622 c3649.0273 -556.2793 3646.2793 -555.8647 3643.543 -555.3149 C3643.083 -554.1201 3642.1963 -553.0249 3640.7715 -552.2031 c3632.5781 -547.4795 3623.1738 -545.3701 3615.3818 -540.0098 c3607.0527 -534.2808 3600.1641 -526.5039 3592.6191 -519.8286 c3586.3652 -514.2959 3577.1357 -523.4556 3583.4258 -529.021 c3591.0244 -535.7432 3598.0391 -543.1353 3606.1514 -549.2627 c3609.877 -552.0767 3613.8975 -554.1074 3618.0098 -555.9385 C3617.5371 -556.625 3617.1777 -557.4287 3617.001 -558.4067 c3615.8037 -565.0376 3620.5156 -569.9541 3621.6631 -576.2046 c3622.2695 -579.5098 3622.1514 -583.1118 3621.6631 -586.4219 c3621.4902 -587.5913 3621.2793 -588.6997 3621.1699 -589.8423 C3616.0254 -590.167 3610.3467 -589.8994 3605.584 -588.395 C3598.3672 -580.6357 3594.5039 -571.2813 3589.1455 -562.293 c3587.8184 -560.0674 3586.5391 -557.8169 3585.291 -555.5469 c3583.8574 -552.9399 3582.9648 -549.5 3581.2676 -547.1147 c3577.8213 -542.271 3575.7676 -537.145 3574.5029 -531.3535 c3572.7158 -523.1646 3560.1836 -526.6377 3561.9678 -534.8096 c3563.2031 -540.4707 3565.2393 -545.8433 3568.1416 -550.8628 c3571.5508 -556.7593 3574.4414 -562.9526 3577.9199 -568.854 c3580.9922 -574.0664 3583.6992 -579.3262 3586.7236 -584.3828 C3586.1563 -584.792 3585.5977 -585.2466 3585.0449 -585.7451 c3581.7832 -588.6885 3580.6543 -593.0723 3578.4648 -596.7002 c3576.2471 -600.375 3572.8281 -603.3877 3569.8223 -606.3979 c3567.8086 -608.415 3565.5117 -610.8687 3562.8828 -612.3271 C3562.8066 -610.9004 3563.3164 -608.9292 3563.4307 -607.7671 c3563.8496 -603.522 3563.6045 -599.1768 3563.6045 -594.917 c3563.6045 -590.4482 3562.5674 -585.7012 3562.2344 -581.2158 c3561.8711 -576.3188 3561.3281 -571.4609 3560.6338 -566.6001 c3559.2578 -556.9629 3557.8389 -547.4063 3557.1006 -537.708 c3556.7637 -533.2764 3556.2539 -528.873 3556.1846 -524.4248 c3556.1494 -522.146 3554.9502 -519.8848 3554.252 -517.75 c3553.5459 -515.5923 3553.7432 -513.4438 3552.8652 -511.3193 c3551.1611 -507.1943 3549.9961 -502.7959 3548.248 -498.6372 c3547.2549 -496.2734 3546.208 -493.9463 3545.0879 -491.6553 C3551.3994 -492.6543 3557.5645 -495.6055 3563.8809 -496.6572 c3567.2334 -497.2158 3571.0547 -496.8384 3574.2969 -497.7563 c3577.8613 -498.7651 3581.1826 -500.5933 3584.6875 -501.7939 c3590.9004 -503.9214 3597.8242 -504.5215 3604.2188 -506.105 cf*U2257.4492 -117.4839 m2257.1367 -117.3779 2257.0059 -117.3701 2257.4492 -117.4839 C2257.4492 -117.4839 Lf*u1 D2119.04 -247.7466 m2123.1348 -249.2329 2128.2109 -247.8574 2132.4199 -247.7188 c2139.1768 -247.4956 2146.1172 -243.979 2152.6973 -242.5396 c2159.2432 -241.1084 2165.6875 -238.1045 2171.7939 -235.4263 c2184.7744 -229.7334 2196.3877 -222 2207.9004 -213.835 c2218.8496 -206.0688 2229.332 -197.6431 2238.4697 -187.7769 c2242.8389 -183.0596 2247.002 -177.8848 2251.5234 -173.354 c2253.4609 -171.4116 2255.8203 -169.1523 2257.5586 -166.6338 C2262.1582 -167.6758 2266.1797 -169.9541 2270.8398 -171.2749 c2277.1631 -173.0674 2283.499 -174.7813 2289.7246 -176.8979 c2302.1846 -181.1343 2314.541 -186.4541 2327.3281 -189.6362 c2333.1738 -191.0913 2339.0195 -192.0522 2344.6406 -194.3081 c2350.7871 -196.7744 2356.9307 -198.1157 2363.5547 -198.2505 c2374.5449 -198.4746 2385.5879 -198.3315 2396.4961 -198.2754 C2392.6826 -203.3657 2389.7188 -209.2671 2386.1924 -214.5439 c2382.4639 -220.123 2377.5439 -224.6616 2373.7656 -230.1284 c2370.5391 -234.7964 2369.5781 -240.0493 2372.4619 -245.1421 c2375.4043 -250.3389 2381.9512 -250.3384 2387.0098 -249.269 c2392.3301 -248.145 2397.7119 -246.0654 2402.7373 -244.0581 c2404.4102 -243.3901 2406.0918 -242.7729 2407.7969 -242.1934 c2408.6914 -241.8892 2409.2354 -241.8218 2409.5215 -241.792 C2410.0801 -243.4019 2410.0469 -245.8647 2410.2246 -247.1787 c2410.9297 -252.4067 2414.7783 -257.4746 2420.3887 -257.7041 c2426.1367 -257.9395 2430.6816 -254.0298 2435.0391 -250.8286 c2437.1953 -249.2441 2438.1787 -248.6567 2440.7422 -249.3765 c2443.3555 -250.1104 2446.0752 -252.6812 2448.5752 -253.8853 c2454.1328 -256.562 2461.0879 -258.7017 2466.2949 -254.2036 c2477.4512 -244.5669 2467.5898 -227.5322 2465.8809 -216.0693 c2464.9307 -209.6963 2463.458 -203.2793 2461.5176 -197 C2497.46 -197 L2499.2734 -197 2501.1973 -197.0811 2502.9707 -196.6377 c2505.1689 -196.0879 2507.3574 -194.7402 2509.6152 -194.5371 c2510.9717 -194.415 2512.1035 -193.9595 2513.0176 -193.2935 C2514.0566 -194.6108 2515.1445 -195.8916 2516.2256 -197.144 c2520.3477 -201.9194 2521.5928 -208.335 2526.1387 -212.9531 c2532.4756 -219.3906 2541.6289 -215.9448 2549.0576 -213.7197 c2558.6973 -210.8325 2568.8594 -210.4941 2578.3438 -206.9912 c2582.4932 -205.4585 2585.9238 -202.9497 2589.7832 -200.873 c2593.3047 -198.9785 2597.627 -197.8701 2601.4824 -196.835 c2605.7246 -195.6953 2609.498 -193.8442 2613.3496 -191.814 c2617.6152 -189.5654 2620.8047 -185.9634 2624.6738 -183.1606 c2632.5811 -177.4341 2639.7754 -171.7349 2646.457 -164.5776 c2649.6182 -161.1924 2652.9688 -158.0972 2656.2383 -154.8398 c2659.6885 -151.4028 2662.5078 -147.3252 2666.3262 -144.251 c2668.5313 -142.4756 2668.7549 -139.8218 2667.8281 -137.5356 C2670.4473 -135.8345 2671.9482 -132.5459 2669.8154 -129.1079 c2666.6465 -123.9985 2662.6025 -120.7539 2657.5469 -117.7227 c2654.6299 -115.9741 2652.9463 -114.0962 2650.8672 -111.4063 c2648.751 -108.6689 2645.7637 -107.1396 2642.7402 -105.6333 c2637.3945 -102.9707 2631.6445 -101.314 2626.4209 -98.3706 c2620.5488 -95.0615 2615.5762 -91.1084 2609.043 -89.02 c2602.0771 -86.7935 2594.9238 -84.6958 2587.8252 -82.9326 c2580.2744 -81.0576 2572.3271 -80.519 2564.6504 -79.2725 c2549.833 -76.8667 2535.0391 -74.6221 2520.0771 -73.3926 c2512.8379 -72.7974 2505.7119 -71.3369 2498.4844 -70.6035 c2491.0781 -69.8516 2483.543 -69.7598 2476.1074 -69.1938 c2469.4248 -68.6851 2462.751 -69.3398 2456.1094 -70.0693 C2446.2178 -64.2578 2435.3535 -61.6279 2424.8223 -57.0259 c2418.2188 -54.1401 2412.0918 -51.8662 2404.9863 -50.6821 c2398.4473 -49.5918 2391.7412 -48.8892 2385.4277 -46.8174 c2381.1494 -45.4131 2376.1748 -41.8462 2371.5283 -43.1245 c2366.6895 -44.4556 2364.2656 -48.9683 2362.1016 -53.0737 c2356.707 -63.3052 2351.5098 -72.8608 2351.0371 -84.6221 C2347.5361 -85.4351 2344.0361 -86.2471 2340.5098 -86.9395 c2334.2803 -88.1626 2328.085 -88.7695 2322.0273 -90.7861 c2316.0156 -92.7876 2309.9785 -94.6035 2303.7588 -95.8379 c2297.2529 -97.1294 2290.8652 -99.144 2284.4678 -100.9619 c2279.2939 -102.4321 2273.8408 -105.8115 2268.457 -106.1016 c2267.252 -106.1665 2266.2256 -106.5 2265.3672 -107.0107 C2264.9795 -106.7466 2264.5938 -106.4927 2264.2168 -106.2534 c2259.5313 -103.2852 2254.1992 -101.1694 2249.0996 -98.8403 c2242.8672 -95.9946 2238.6631 -91.543 2233.4883 -87.3096 c2228.3389 -83.0967 2222.252 -79.8086 2216.333 -76.8149 c2209.6992 -73.459 2203.4395 -69.355 2196.7734 -66.0098 c2190.4717 -62.8467 2184.0234 -59.7407 2177.4326 -57.2319 c2174.3145 -56.0449 2170.5693 -55.7827 2167.6055 -54.3076 c2164.1055 -52.5654 2160.5137 -51.0337 2156.7256 -50.0464 c2153.2324 -49.1353 2149.459 -49.1045 2145.8965 -48.5371 c2142.2432 -47.9551 2138.5723 -47.4795 2134.8926 -47.106 c2130.1621 -46.6265 2119.6738 -44.5498 2116.127 -49.0332 c2114.0977 -51.5977 2113.1104 -53.5903 2113.9678 -56.9146 c2114.5918 -59.3315 2116.4092 -60.5698 2116.5752 -63.1333 c2116.8145 -66.8232 2115.7715 -70.0859 2116.5938 -73.8003 c2117.4229 -77.5386 2117.5752 -81.4727 2118.1182 -85.2622 c2119.0615 -91.8501 2123.8789 -97.5493 2128.0801 -102.4663 c2132.6953 -107.8667 2135.9863 -114.001 2141.4521 -118.7178 c2146.583 -123.1455 2150.3623 -128.4009 2155.0313 -133.2749 c2156.9023 -135.228 2158.5244 -137.2632 2160.6426 -138.8228 C2160.4482 -138.9199 2160.2529 -139.0234 2160.0566 -139.1431 c2155.2109 -142.1064 2151.5215 -145.8867 2148.2266 -150.4766 c2144.8613 -155.1641 2142.9023 -160.6504 2139.6299 -165.3862 c2135.6719 -171.1157 2132.1748 -177.1504 2128.8818 -183.2803 c2125.7471 -189.1147 2122.1816 -194.8306 2119.7256 -200.9971 c2117.4814 -206.6313 2116.2119 -212.8994 2116.0254 -218.958 c2115.8604 -224.3179 2113.7939 -229.7148 2112.8574 -235.0078 c2111.8477 -240.7148 2113.25 -245.644 2119.04 -247.7466 cf0 D2458.2578 -243.5532 m2457.9922 -243.4927 2457.4629 -243.4087 2456.5596 -243.1519 c2455.0723 -242.729 2453.7568 -241.9961 2452.4053 -241.269 c2447.4287 -238.5918 2443.3643 -235.4946 2437.3564 -236.0029 c2432.0908 -236.4482 2428.2197 -239.873 2424.1074 -242.8188 c2423.6328 -243.1548 2423.1348 -243.4575 2422.6406 -243.7646 C2422.4209 -242.3584 2422.3887 -240.832 2422.1943 -239.5874 c2421.4824 -235.0273 2418.7695 -231.2578 2414.5039 -229.4849 c2408.8281 -227.126 2402.875 -230.0869 2397.5947 -232.1963 c2393.6406 -233.7754 2389.4912 -235.1045 2385.3555 -236.2393 C2386.2119 -235.248 2387.1816 -234.3369 2388.0664 -233.4478 c2397.0566 -224.4121 2401.8672 -212.063 2409.8096 -202.2778 c2413.7266 -197.4521 2417.8945 -192.8892 2422.6953 -188.9268 c2427.4287 -185.019 2430.5166 -179.0254 2434.6934 -174.5005 C2437.4893 -177.6748 2440.541 -180.582 2442.5596 -184.3647 c2443.2227 -185.6089 2443.8086 -186.8848 2444.3574 -188.1768 C2443.3887 -191.2217 2444.4023 -195.0488 2447.4004 -196.4517 C2447.4629 -196.6348 2447.5254 -196.8174 2447.5869 -197 c2448.1826 -198.7573 2448.7842 -200.5117 2449.4434 -202.2427 c2451.541 -207.7539 2452.4443 -213.728 2453.3457 -219.5249 c2454.4268 -226.4878 2456.7109 -233.0386 2458.4199 -239.8555 c2458.6445 -240.75 2458.6504 -242.4019 2458.2578 -243.5532 Cf2373.3271 -59.6348 m2373.833 -58.6509 2374.3711 -57.6865 2374.9258 -56.7305 C2375.5693 -57.0054 2376.2207 -57.2627 2376.8994 -57.4976 c2381.416 -59.0605 2385.6582 -60.5723 2390.4004 -61.3628 c2395.9648 -62.29 2401.5303 -63.2178 2407.0957 -64.145 c2412.5791 -65.0591 2418.167 -68.1274 2423.1914 -70.4771 c2424.4756 -71.0776 2425.7969 -71.584 2427.1367 -72.0469 C2421.2617 -72.437 2415.373 -72.7915 2409.5684 -73.7441 c2401.4727 -75.0732 2393.5527 -77.2998 2385.4531 -78.6289 c2378.4111 -79.7847 2371.3252 -80.5396 2364.293 -81.7944 C2365.4229 -73.7217 2369.5566 -66.9653 2373.3271 -59.6348 cf2126.2539 -233.8979 m2127.0986 -228.8701 2128.8203 -224.1182 2129.0254 -218.958 c2129.2393 -213.582 2130.6025 -208.0498 2132.8848 -203.1724 c2137.6641 -192.9595 2143.6621 -182.8047 2149.8779 -173.3945 c2155.0898 -165.5054 2158.1826 -155.5269 2166.6172 -150.3687 c2170.2656 -148.1372 2170.3398 -144.1099 2168.5859 -141.2896 C2171.3945 -140.6938 2173.5469 -137.5791 2173.5469 -134.8623 c2173.5469 -130.9736 2170.5596 -128.8184 2167.0469 -128.3623 c2168.6914 -128.5762 2167.1465 -127.8848 2166.6865 -127.2793 c2165.8711 -126.207 2165.1035 -125.105 2164.2227 -124.0825 c2161.2822 -120.668 2158.4434 -117.1377 2155.4521 -113.7651 c2153.0098 -111.0117 2149.8516 -108.9917 2147.2754 -106.3564 c2144.1563 -103.1641 2142.5332 -98.7842 2139.4883 -95.6382 c2136.7051 -92.7617 2134.3408 -89.7119 2132.2344 -86.3086 c2129.957 -82.6299 2130.2383 -77.7188 2129.6396 -73.5449 c2129.04 -69.3647 2129.7266 -65.457 2129.4551 -61.2783 c2129.4238 -60.8008 2129.373 -60.3047 2129.2988 -59.8022 C2129.9287 -59.8081 2130.5586 -59.8125 2131.1826 -59.8369 c2134.9561 -59.9844 2138.7119 -60.5044 2142.4404 -61.0728 c2149.6641 -62.1733 2155.9189 -62.9814 2162.5293 -66.2725 c2165.5098 -67.7554 2169.1504 -68.207 2172.3271 -69.2007 c2175.7725 -70.2783 2179.0254 -71.9487 2182.2998 -73.4492 c2189.1299 -76.5786 2195.8193 -79.9976 2202.3418 -83.7251 c2208.2627 -87.1089 2214.418 -90.1855 2220.1602 -93.8657 c2225.6709 -97.3975 2229.8203 -102.6299 2235.4961 -105.8472 c2241.3525 -109.167 2247.3604 -111.9326 2253.3428 -115.063 c2254.877 -115.8652 2256.3496 -117.2427 2258.0723 -117.6323 c2257.792 -117.5688 2257.5938 -117.5205 2257.4492 -117.4839 C2257.667 -117.5571 2257.9688 -117.6768 2258.2207 -117.8369 c2258.3984 -117.9492 2258.5293 -118.04 2258.6436 -118.125 C2257.5566 -122.4351 2260.9102 -127.8975 2266.4746 -126.2891 c2270.4063 -125.1533 2273.1133 -122.1816 2273.1992 -118.3887 C2277.6221 -117.3345 2281.7217 -115.3857 2286.1709 -114.0142 c2293.6777 -111.6997 2301.2969 -109.5483 2308.9834 -108.0225 c2315.7119 -106.687 2322.1426 -104.3071 2328.6816 -102.2983 c2335.8145 -100.1069 2343.418 -100.0425 2350.5703 -97.8452 c2365.3613 -93.3027 2381.2461 -92.8804 2396.3291 -89.7837 c2403.6445 -88.2817 2411.1865 -85.7856 2418.6924 -85.686 c2426.3184 -85.585 2433.9629 -84.647 2441.5957 -84.3887 c2445.3965 -84.2603 2449.1855 -83.8818 2452.9707 -83.4609 C2453.0322 -83.5034 2453.0947 -83.5439 2453.1563 -83.5864 c2456.1543 -85.6646 2459.0713 -84.7163 2460.8574 -82.5918 C2461.8564 -82.4907 2462.8564 -82.3955 2463.8564 -82.3125 c2471.3877 -81.686 2478.7334 -82.4727 2486.2334 -83.0435 c2493.5176 -83.5981 2500.6387 -83.7104 2507.8867 -84.8657 c2515.4092 -86.0645 2522.9551 -86.5664 2530.5352 -87.2627 c2545.5342 -88.6411 2560.3945 -92.0371 2575.3535 -93.9385 c2582.666 -94.8682 2589.5703 -96.8164 2596.5977 -98.9878 c2603.8154 -101.2168 2609.8955 -103.0474 2616.2207 -107.2749 c2623.5352 -112.1636 2631.9658 -115.2183 2639.9473 -118.7891 c2641.4307 -119.4531 2642.623 -121.9087 2643.6074 -123.1108 c2645.4521 -125.3647 2647.1855 -126.7485 2649.6836 -128.1763 c2650.5605 -128.6934 2651.4355 -129.2153 2652.3086 -129.7412 c2652.7021 -129.9771 2655.4668 -132.4272 2654.3535 -130.6309 c2655.084 -131.8081 2656.0977 -132.748 2657.0391 -133.7417 C2655.5352 -134.5918 2654.5859 -136.0825 2654.2012 -137.7446 C2652.4746 -139.4775 2650.8652 -141.3296 2649.248 -143.1714 c2646.6611 -146.1172 2643.6611 -148.6104 2640.9482 -151.4243 c2635.2705 -157.3125 2630.0059 -163.3433 2623.3457 -168.1665 c2620.2061 -170.4409 2617.0381 -172.6836 2613.9277 -174.9976 c2612.6602 -175.9399 2611.6016 -177.0239 2610.4629 -178.1104 c2608.8662 -179.6328 2607.0195 -180.0146 2605.2695 -181.1885 c2598.8643 -185.4873 2590.2158 -186.2778 2583.2217 -189.647 c2579.7168 -191.3354 2576.8271 -193.7388 2573.1416 -195.1001 c2569.2148 -196.5503 2565.0264 -197.2861 2560.9199 -198.0073 c2556.8291 -198.7256 2552.7422 -199.3682 2548.6973 -200.3237 c2544.4111 -201.3359 2540.2598 -203.1836 2535.8672 -203.731 c2533.373 -204.0415 2530.3955 -194.9883 2529.2441 -192.8535 c2526.3359 -187.4629 2519.1641 -183.729 2519.8252 -176.9102 c2520.6348 -168.5659 2507.627 -168.644 2506.8252 -176.9102 c2506.6543 -178.6724 2506.7783 -180.3452 2507.1074 -181.9512 C2503.8662 -182.6821 2500.8379 -184 2497.46 -184 C2456.6826 -184 L2455.5352 -181.3838 2454.3203 -178.8071 2452.9902 -176.3145 c2450.5996 -171.8335 2446.4414 -168.9878 2443.498 -164.9727 c2440.7832 -161.269 2436.1123 -161.6069 2433.3262 -163.7939 C2431.0918 -162.4873 2428.207 -162.4512 2425.8691 -164.8936 c2421.0469 -169.9316 2417.5928 -176.3579 2412.1953 -180.813 c2410.2627 -182.4082 2408.4609 -184.1558 2406.7373 -185.9829 C2405.7383 -185.3721 2404.4961 -185 2403 -185 C2365.5039 -185 L2359.2803 -185 2353.8906 -183.8916 2348.0977 -181.6475 c2341.9043 -179.25 2335.4717 -178.2051 2329.0527 -176.6074 c2316.291 -173.4312 2303.9033 -167.9766 2291.4629 -163.7471 c2285.4668 -161.7085 2278.3672 -160.9365 2272.6914 -158.1753 c2266.6484 -155.2354 2260.3525 -153.3491 2253.6172 -153.0884 c2253.0791 -153.0674 2252.5771 -153.1035 2252.1084 -153.1851 C2249.8379 -153.3901 2247.835 -154.8301 2247.3496 -157.8682 c2246.9277 -160.5044 2243.4102 -163.0791 2241.5996 -164.8936 c2237.7148 -168.7881 2234.3916 -173.335 2230.4707 -177.2607 c2222.0977 -185.6426 2213.8262 -193.4941 2204.2354 -200.5234 c2194.7588 -207.4683 2185.1465 -214.0664 2174.7559 -219.583 c2164.1484 -225.2148 2153.2773 -228.5938 2141.8223 -231.9238 c2136.9912 -233.3281 2132.4746 -234.6724 2127.4668 -235.0947 c2126.999 -235.1343 2126.5029 -235.1836 2126 -235.2305 C2126.0889 -234.7876 2126.1787 -234.3442 2126.2539 -233.8979 cf*U2536.0156 -161.499 m2536.4941 -161.7319 2536.9844 -161.9395 2537.4707 -162.1558 C2539.4209 -165.5342 2544.332 -166.1274 2547.9521 -166.1313 c2550.8428 -166.1343 2553.4531 -164.1279 2554.2197 -161.3418 c2554.9473 -158.6958 2553.8252 -155.2534 2551.2324 -153.9922 c2549.5801 -153.1885 2547.8721 -152.4941 2546.1689 -151.8052 c2545.4453 -151.5122 2544.7197 -151.2227 2543.9961 -150.9297 c2543.9727 -150.9204 2543.957 -150.9136 2543.9355 -150.9048 c2543.4775 -150.7065 2543.0254 -150.4927 2542.5762 -150.2739 c2539.3906 -148.7246 2535.5742 -149.3784 2533.6836 -152.606 c2531.9971 -155.4854 2532.8301 -159.9502 2536.0156 -161.499 cf*u1 D1413.6748 -120.3643 m1412.9854 -121.9473 1413.0771 -123.8477 1414.4648 -125.7754 c1420.231 -133.7881 1428.7056 -138.374 1438.1934 -140.6553 c1449.1709 -143.2949 1462.7402 -143.8765 1473.7466 -141.3374 c1479.5615 -139.9961 1484.8589 -137.4146 1490.7339 -136.2124 c1496.2788 -135.0776 1500.0791 -131.811 1504.4521 -128.478 c1509.0464 -124.9775 1513.2456 -121.0361 1518.0815 -117.8848 c1519.627 -116.8779 1521.1348 -115.8145 1522.6284 -114.7305 C1522.5303 -117.6885 1522.6841 -120.6226 1523.2231 -123.7183 c1524.792 -132.7285 1529.7197 -142.3574 1537.2246 -147.7847 c1544.9185 -153.3486 1557.5391 -154.8701 1565.251 -148.6772 c1572.0195 -143.2427 1568.7383 -127.8267 1566.1279 -121.355 c1561.8374 -110.7197 1550.0234 -103.2832 1540.8447 -97.0947 c1540.6689 -96.9761 1540.4937 -96.875 1540.3188 -96.7764 C1541.5239 -95.9346 1542.8667 -95.1865 1543.7383 -94.4966 c1545.9214 -92.77 1548.0107 -90.9624 1550.0439 -89.062 c1557.9087 -81.7114 1566.3569 -71.5913 1568.9307 -60.8672 c1570.8232 -52.9785 1566.2993 -41.5518 1557.168 -40.6587 c1554.7949 -40.4268 1552.8389 -41.0845 1550.7266 -42.0845 C1549.9927 -42.5962 1549.2773 -43.1333 1548.5811 -43.6963 c1550.9277 -41.7744 1546.5903 -44.8325 1546.498 -44.8975 c1542.0522 -48.0361 1537.9072 -51.9058 1534.6504 -56.2554 c1531.1777 -60.8931 1528.0415 -65.6348 1525.7676 -70.9824 c1524.9336 -72.9438 1524.4287 -75.0063 1524.1211 -77.1128 C1522.356 -77.2715 1520.6445 -77.8086 1518.7979 -77.3984 c1515.4746 -76.6602 1512.5654 -75.4805 1509.1196 -75.1836 c1506.2295 -74.9346 1502.8193 -76.0513 1499.8447 -76.1108 c1496.0669 -76.1865 1492.4697 -75.2681 1488.7383 -74.9243 c1481.6641 -74.2729 1475.1914 -76.0303 1468.2168 -76.5117 c1465.7422 -76.6821 1463.3564 -77.4863 1460.8882 -77.6567 c1457.7676 -77.8721 1454.8037 -77.7681 1451.7461 -78.6045 c1445.6167 -80.2813 1439.7803 -83.1353 1434.1099 -85.9644 c1429.2793 -88.375 1424.4893 -91.3066 1420.2603 -94.6558 c1415.3652 -98.5317 1412.3662 -104.7437 1408.0605 -109.2417 c1403.376 -114.1357 1408.4795 -121.0864 1413.6748 -120.3643 Cf0 D1540.1226 -71.2295 m1543.1836 -65.8359 1547.04 -61.3916 1551.6553 -57.2993 c1552.9512 -56.1504 1554.332 -55.4004 1555.6929 -54.4824 C1555.8745 -54.7334 1556.0425 -54.978 1556.1836 -55.1997 C1556.3716 -55.604 1556.5083 -55.8818 1556.6021 -56.0542 C1556.6079 -57.02 1556.2495 -58.25 1555.8608 -59.0259 c1554.2866 -62.1719 1552.6685 -65.2896 1550.9141 -68.3394 c1548.1406 -73.1621 1543.6611 -77.2441 1539.627 -81.0146 c1538.7168 -81.8652 1537.7422 -82.6538 1536.7456 -83.4189 C1536.9834 -79.1445 1537.75 -75.4092 1540.1226 -71.2295 cf1535.4604 -114.5093 m1535.5078 -112.9092 1535.5898 -111.125 1535.7451 -109.3013 C1543.9785 -114.8115 1553.4248 -121.0679 1555.48 -131.1401 c1555.9678 -133.5298 1555.8125 -136.1035 1555.7798 -138.5288 c1555.7744 -138.9185 1555.751 -139.207 1555.7227 -139.4287 C1552.0313 -140.4282 1546.8975 -139.063 1544.1528 -136.791 c1537.9561 -131.6621 1535.2314 -122.2686 1535.4604 -114.5093 cf1426.46 -106.9692 m1429.6089 -103.0049 1434.0996 -100.9492 1438.4321 -98.5464 c1443.4336 -95.7715 1448.4131 -93.1963 1453.9595 -91.6611 c1458.668 -90.3579 1463.6128 -90.4526 1468.479 -89.5083 c1473.3569 -88.562 1478.501 -87.875 1483.4697 -87.6797 c1489.5723 -87.4399 1495.5571 -89.1968 1501.6992 -89.0737 c1504.54 -89.0171 1507.7861 -87.8228 1510.5718 -88.4419 c1513.3262 -89.0537 1515.8037 -90.2734 1518.6602 -90.5195 c1520.4741 -90.6758 1522.2061 -90.4526 1523.9751 -90.2656 C1524.1421 -90.5615 1524.3232 -90.8555 1524.5313 -91.1475 c1525.0811 -91.9189 1525.7539 -92.5205 1526.4858 -92.9917 C1525.7349 -94.2896 1525.2104 -95.6646 1524.8208 -97.0811 C1524.2261 -97.3262 1523.6392 -97.6611 1523.0742 -98.1113 c1515.7471 -103.9458 1507.9521 -108.9258 1500.7939 -114.9302 c1497.7031 -117.5225 1493.8418 -121.4507 1490.0581 -122.9248 c1488.2642 -123.624 1486.2598 -123.8906 1484.3789 -124.2505 c1481.3862 -124.8232 1478.7012 -125.9771 1475.8555 -127.043 c1466.3477 -130.6055 1456.0024 -129.9238 1446.0479 -128.8828 c1438.8198 -128.127 1430.1157 -125.3643 1425.6895 -119.2139 c1423.9453 -116.7905 1421.3701 -116.0835 1419.0137 -116.481 C1421.647 -113.4263 1423.9424 -110.1387 1426.46 -106.9692 cf*U454.7686 -45.4063 m457.0117 -46.8652 459.8086 -47.6992 462.376 -48.3765 c467.167 -49.6416 471.6802 -51.3599 476.5981 -52.2412 c484.6719 -53.689 492.8936 -53.9395 501.0093 -52.8198 c516.8809 -50.6294 526.6245 -33.8354 516.0879 -20.1772 c506.0488 -7.16309 490.9121 -9.47949 476.4707 -10.8745 c468.2036 -11.6729 468.126 -24.6807 476.4707 -23.8745 c484.0488 -23.1426 493.6108 -20.563 500.8647 -23.9233 c504.5977 -25.6523 507.3706 -29.0449 507.5586 -33.1953 c507.7651 -37.7451 502.4023 -39.271 498.9526 -40.0361 c488.9224 -42.2603 477.1807 -39.7061 467.6733 -36.5078 c465.0034 -35.6099 460.5376 -35.0845 459.5537 -31.9634 c459.104 -30.5376 462.9453 -25.8984 463.7134 -24.7188 c464.6963 -23.2085 465.835 -21.4795 467.3848 -20.5142 c474.4814 -16.0923 467.9604 -4.8418 460.8232 -9.28857 c454.6152 -13.1567 449.8403 -20.9712 447.3076 -27.6606 c444.6592 -34.6558 448.981 -41.6416 454.7686 -45.4063 cf*u1 D479.1387 -870.1533 m503.4233 -877.5596 531.5986 -873.189 550.0596 -855 c559.3438 -845.8525 565.0874 -833.0454 568.6309 -820.6753 c572.2002 -808.2139 571.9912 -794.5293 564.9434 -783.3252 c555.2896 -767.9775 540.8726 -755.4951 522.9844 -750.9531 c513.8262 -748.6279 503.6416 -747.998 493.812 -749.2188 C492.5776 -745.7871 488.5991 -743.0366 484.3213 -745.1289 c479.6445 -747.417 476.6313 -749.4204 473.397 -753.542 c469.0503 -759.0815 463.3457 -763.4878 460.2583 -769.9702 c457.229 -776.3296 455.4106 -783.1479 452.3545 -789.5088 c448.937 -796.6211 447.3271 -803.5 446.5093 -811.313 c445.0967 -824.8086 446.6035 -839.7563 453.5347 -851.6543 c459.0869 -861.1846 468.8442 -867.0137 479.1387 -870.1533 cf0 D459.6919 -809.5708 m460.4751 -802.0869 464.0024 -796.4116 466.6621 -789.5708 c469.4253 -782.4644 471.126 -775.481 476.2769 -769.6523 c477.2319 -768.5718 478.2236 -767.5234 479.2119 -766.4736 C479.3916 -766.4043 479.5713 -766.334 479.7524 -766.248 c491.3647 -760.7246 505.6279 -761.0405 518.0283 -763.1934 c532.0713 -765.6309 544.2598 -775.9463 552.1084 -787.3564 c559.9092 -798.6968 558.5781 -810.7114 554.1919 -823.1777 c552.1362 -829.0215 549.3188 -834.6519 545.8857 -839.8018 c541.7666 -845.9805 536.2285 -849.959 529.8667 -853.5537 c523.8418 -856.958 517.2671 -859.8877 510.2954 -860.4468 c504.7466 -860.8911 498.9014 -860.3452 493.3799 -859.7773 c483.4502 -858.7559 473.5425 -855.5503 466.7598 -847.939 c458.0527 -838.168 458.4248 -821.6733 459.6919 -809.5708 cf*U510.8345 -807.8203 m511.001 -810.3418 512.0527 -812.4722 514.5161 -814.1914 c517.4102 -816.2114 521.2725 -815.0464 524.0977 -813.6445 c529.0747 -811.1753 533.377 -805.835 533.6768 -800.21 c533.7852 -798.1777 532.4097 -795.4258 530.4575 -794.5977 c524.0469 -791.8779 515.4053 -793.3857 510.2134 -798.0869 c507.5864 -800.4658 507.8022 -804.8682 510.2134 -807.2793 c510.4121 -807.478 510.6211 -807.6543 510.8345 -807.8203 CfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF