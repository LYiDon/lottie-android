%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 5.eps)%%CreationDate: 03.10.18 22:49%%Canvassize: 16383%%BoundingBox: -1 -2160 3837 4%%HiResBoundingBox: -0.372559 -2159.9268 3836.7197 3.29004%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -702.4429 327.3223 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5308 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFCFFD54FFCAFD29FFCACFFD54FFCFFD28FFCFCFFD51FFC9FF%FFFFC9FD27FFC9CFFD53FFC9FFFFFFCFFD26FFCFFD55FFC9FFCACFFD24FF%C9CFCAFD55FFCFCFFFC9FD24FFCFCFFD42FFCFCACFCFFD11FFCFFFCFCAFD%1DFFCAFD05FFC9FD3BFFCAFD05FFCFCFCAFFC9CFFD11FFFD04CFFD1CFFC9%FD06FFCFFD38FFCFCFCACFCFCFCAFFFFCFCFFFFFCFFD13FFCACFC9FD17FF%CFFFCACFC9FD07FFC9FD36FFCFC9CEC9CFCAFFFFFFC9FFC9FFFFCFCAFD14%FFCFCECAFD15FFCACFCACFFFFFCFFD05FFC9FD37FFC9CFCFFFCFCFC9CFCF%FFC9CFFFFFC9FD04CFFD12FFC9C9FD0FFFCFCACFC9CFC9FFFFCFC9CFC9CF%C9CFCACFCAFD3BFFCACFC9CFFD05C9CFC9CFCAFFCACFC9CFFD11FFC9FD0F%FFCFFFCFFD05FFC9FD05FFCFFFCFFD39FFCFCFCAFFFFFFFD04CFCACFC9FF%CFFD05FFCFCFFD11FFCAFD0CFFCFCFFD07FFC9FD3FFFCACFC9CFFD04FFC9%CFCAFFFFCFC9FFCAC9C8C9C9CFC9CFC9CFFD1DFFC9CFCFFD05FFC9FD3EFF%CFC9FD05FFCFCFCAFD04FFCFCACFC9FFFFFFCFCFCFFD22FFCACFC9CFC9CF%CAFD3EFFCFC9FFCACFCAC9C9CFFD05FFCFC9FFCACFC9FFFFFFCFCFC9FD66%FFCFCFCFFFCFCFC9FD06FFCFC9FFFFCFFFFFC9FD05FFC9FD6AFFC9FD05FF%CACFCFCFCAFFCACFFFCFC9FD04FFCFC9FD68FFC9FD05FFCACFFFFFCAFFFF%FFCFFFFFCFC9FD04FFCFCAFD66FFC9FD04FFCFC9CFFFFFCACFFFFFCACFFF%FFCAC9C9CFCAFFCFCFFD65FFC9FD04FFCFCAFD04FFCFCFFFFFFFC9FFFFFF%C9FD04CFFFCAFD13FFCFCACFCAFD4DFFCACFFFFFCACFCFFD05FFC9FFFFFF%C9CEFFFFFFCFC9FFFFCFC9C9CFFD08FFCAFD09FFC9CFCFFD4EFFCFFFFFCA%CFFD07FFCFFFFFFFCFC9FFFFFFCAFFCAFD0AFFCACFC9CFC9CFFD06FFCACF%FD50FFC9CFC9FD08FFCFCAFFFFFFC9CFCFFFFFCFCACFCAFD09FFCFCFFFFF%FFCACFCFFFFFFFCFCFFD52FFCFFD09FFCFFD04FFCFCAFFFFFFCFFFFFCFFD%08FFCFC9FD05FFCFCFC9CFC9CFFD5DFFCFCFFFFFFFCACFCAFFFFCFC9FFC9%FD06FFCFCFC9FD69FFC9FFFFFFCAFFCFCFFFFFCFCFCFFFCFFD04FFCACFCA%FD69FFCACFFFFFCFCFFFFFC9FFFD04CFCACFFD70FFCFCFFFFFCFCFFFFFFD%04CFFFCAFFCFFD70FFC9FFFFFFC9FFFFFFCFC9C9FFFFFFC9CFFD70FFCFFF%CFC9FD0AFFCFC9FD70FFC9CFCAFD0BFFCACFCAFD7DFFCFCAFD77FFCFC9FD%05FFCACFCAFD76FFC9CFFD05FFCFCFCFFD75FFCACFCAFD05FFCACFCAFD75%FFFD04CFFD04FFCFCFCFFD75FFC9FFCACFFD04FFC9CFCAFD75FFCFFFFFCF%FD04FFCFCFFD76FFC9FFCACFFD04FFC9FFC9FD74FFCFFFFFFFCFFD04FFCF%FFCFFD74FFCFFFFFCFCFFD04FFCAFFC9FD74FFCAFFFFFFCAFFFFFFCAFFCF%CFFD71FFCACFCACFCACFCAC9C9FFFFCFCAFFCAFD72FFC9FD04CFFFCFCFCF%FFC9FFCFFD73FFCFCACFC9CFCACFC9FFCFCFFFCFCAFFCFFD78FFCFCFCFFF%CACFCFCFCAFD72FFCACFC9CFC9CFC9FFFFCFCAFD72FFCFCFCACFCFFD04FF%CFFFFFCAFD70FFCFCFC9CFCAFD06FFCFCAFFFFCFFD6FFFCACFCAFD09FFCA%FFFFCFCFFD1CFFCACFC9CFC9CFFD4AFFCFCFC9FD0BFFCACECACFCAFD10FF%CFFFCFFD07FFCFCFCACFCFFD4DFFCFCFCFFD0DFFCFFD0EFFCACFC9FFC9CF%CACFC9CFC9CFC9FFCACFCAFD4FFFC9CFFD1DFFCFCFCFFD5DFFC9FD7EFFC9%FD0FFFCACFCACFCAFFCFCFC9CFC9CFFD62FFCFCAFFFFFFCFFFCFCFCAFFCF%CFCAFD04CFFFCFFFCFFFCFCFCFFD65FFCFCAFFCACFC9CFCAFFCFFFCFFFFF%FFCAFFCFFD5AFFC9FD12FFCFCAFD6AFFC9CFC9FD11FFCAFD6BFFCFFFCFCF%FD29FFCFFD05FFCFFD42FFCACFCAFD07FFC9FFCACFCFFD19FFCFFFCFFFCF%FFFFFFCAFFC9CFC9CFCACFC9CFCFCFC9CFCFCACFCFFD3BFFFD06CFC9CFFD%06FFCAFFCACFCAFD07FFCFFFCFFD07FFCFFD05FFCACFCACFCFCFC9CFCACF%CFFD0CFFCAFFCACFC9CFCACFCACFCACFCAFD31FFCFC9CAFD05FFC9CFFD05%FFCFCAFFFFCFC9FFCACFC9CFC9CFCACFC9CFCACFC9CFC9CFC9CFC9CFCAFD%07FFCAFD14FFCFCFCAFFCFFFCFCFCFFFCFFFCFCFCAFD2AFFCFCFFD07FFCA%CFFD04FFCFFFCACFCFFFFFCFCFFD38FFCACFCAFFCFFFCFFD29FFC9FFFFFF%CAFD05FFC9FFFFFFC9CFCACFCFFD13FFCACFCACFCAFD54FFCAFFFFFFC9CE%CFFD05FFC9CFCACFCFCFFD14FFCFCFCAFFFFCFCACFCFFD08FFCFCACFCFFD%2CFFCFFFCAFFCFFFCAFD07FFCACFCAFFCAFD06FFCFCAFFFFFFCAFD07FFCA%FFFFCFCAFD13FFC9CFFD06FFCACFCAFD05FFCACFCAFFCACFC9FD28FFCAFF%CFCFC9CFCFCFCACFCFCFCAFFFFCFC9CFCFCFCACFCFFD05FFC9FD07FFCFFD%1BFFCFCFFD09FFCFCFFD04FFCFCFFD04FFCFC9FD0EFFCFCFCAFD0BFFCACF%CACFCACFCACFC9CFCACFCFFD09FFCFCFCFFFCFFD09FFCACFC9CFC9CFCAFF%CACFCACFC9CFCACFCFFFCACFC9FD12FFCFCAFD0AFFCFCAFFFFCFCAFD06FF%CFC9FFCFCFCAFD06FFCFCFCACFCFCFC9CFCACFCACFCAFFCFCFCACFCAFFCF%FFCFFD1FFFCFFFFFFFCFCFCFFD05FFCFFD07FFCFFD11FFCFFD0CFFCFCAFD%0DFFCFFD04FFCFCEC9FD07FFCAFFCACFCACFCAFFCAFD4BFFCACFFD1DFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Layer 7) Ln0 Au0 O0.001923 0.157961 0.589929 0 1 0.839216 0.498039 Xa0 J 0 j 1 w 10 M []0 d0 XR169.2915 -94.7642 m175.0806 -98.9653 181.6514 -101.7256 187.5005 -105.7656 c193.4663 -109.8867 199.2402 -114.1006 205.2817 -118.105 c216.9541 -125.8428 225.3979 -135.7734 233.751 -146.8379 c237.9097 -152.3462 241.895 -157.9995 245.9434 -163.5625 c250.3608 -169.6323 253.7773 -176.3208 257.8354 -182.6206 c261.6909 -188.6064 264.3159 -195.2681 268.3921 -201.1284 c272.7651 -207.4146 276.0986 -214.7476 280.1846 -221.2998 c282.0981 -224.3687 283.3667 -227.7148 285.2451 -230.8091 c286.9448 -233.6084 287.6299 -236.8008 289.502 -239.4805 c293.9028 -245.7822 299.6919 -251.2998 304.6162 -257.209 c309.3394 -262.877 313.8198 -268.9077 318.8604 -274.2891 c323.7646 -279.5244 329.3789 -284.0327 334.2212 -289.3647 c338.9966 -294.623 343.2354 -300.4424 347.7607 -305.9209 c352.9639 -312.2192 358.688 -318.1641 363.6304 -324.6582 c368.0903 -330.519 372.314 -336.7568 376.021 -343.1187 c377.7935 -346.1592 378.873 -349.0493 381.1084 -351.8447 c383.499 -354.834 385.979 -357.6924 388.0981 -360.8872 c395.7202 -372.3789 403.2876 -384.3398 414.0498 -393.022 C415.4644 -395.6089 417.1104 -397.8486 419.7979 -399.6729 c425.0176 -403.2158 429.9771 -397.7583 429.2192 -392.8354 C429.8066 -390.3789 429.1104 -387.6353 426.3594 -385.917 c425.5239 -385.395 424.7148 -384.8423 423.9214 -384.272 C423.5068 -383.1982 423.1479 -382.1694 422.832 -381.5015 c421.3174 -378.3018 420.5259 -374.6577 419.6484 -371.2456 c417.6475 -363.4653 414.6313 -355.7827 411.7148 -348.3032 c409.1704 -341.7783 406.0659 -335.5244 403.6533 -328.9478 c401.0249 -321.7822 398.1484 -314.856 395.1089 -307.8613 c392.1338 -301.0161 389.3984 -294.083 386.5278 -287.2036 c385.1938 -284.0068 383.6465 -280.9375 381.9839 -277.9009 c379.9834 -274.2471 376.9438 -270.5498 375.625 -266.5923 c370.6997 -251.8164 366.0728 -236.9536 361.2163 -222.1563 c356.3901 -207.4502 351.1221 -192.855 347.5195 -177.7837 c343.8633 -162.4873 341.5674 -146.9028 337.748 -131.6343 c329.8555 -100.0869 324.1143 -68.208 317.894 -36.2993 c317.5161 -34.3623 317.1309 -32.4263 316.7451 -30.4902 c315.1084 -22.2725 302.5791 -25.7603 304.21 -33.9463 c310.5371 -65.7119 314.9365 -98.2471 323.7197 -129.4624 c327.9917 -144.644 330.6055 -160.2334 333.7788 -175.6646 c336.9209 -190.9458 342.0635 -205.6655 346.9727 -220.4438 c351.8721 -235.1934 356.4229 -250.0488 361.3374 -264.793 c363.7251 -271.9565 367.0664 -277.9033 370.7588 -284.4624 c374.5552 -291.2061 377.1191 -298.5781 380.1982 -305.6636 c386.0762 -319.1895 390.896 -333.1509 397.0005 -346.5566 c398.623 -350.1201 400.0464 -353.7783 401.3799 -357.4702 C400.6929 -356.4165 400.0078 -355.3662 399.3232 -354.3262 c395.6709 -348.7764 390.894 -344.2407 388.106 -338.1841 c384.834 -331.0762 379.4912 -324.3682 374.8555 -318.0972 c365.8311 -305.8896 355.231 -294.6655 345.6909 -282.8242 c341.5068 -277.6309 336.6074 -272.9673 331.6626 -268.5127 c325.9102 -263.3301 321.2852 -256.9893 316.3389 -251.0532 c311.6079 -245.376 306.7803 -239.8511 301.8794 -234.3335 c299.624 -231.7939 298.7314 -228.6152 297.2373 -225.627 c295.4146 -221.981 293.4639 -218.2632 291.4097 -214.7383 c287.7485 -208.4556 283.9316 -202.4683 280.665 -195.9414 c279.1689 -192.9526 276.7729 -190.2017 275.1543 -187.2104 c273.1348 -183.4795 271.2568 -179.6938 269.0605 -176.0596 c261.5869 -163.6929 253.6274 -151.854 244.9761 -140.2764 c236.6255 -129.1016 228.3208 -119.1001 217.1357 -110.623 c211.1069 -106.0537 204.7246 -101.6982 198.4683 -97.4556 c191.1172 -92.4712 183.04 -88.7549 175.853 -83.5386 c169.0547 -78.605 162.5776 -89.8911 169.2915 -94.7642 cf870 -362.6045 m870 -362.604 901.1494 -362.5771 916.7754 -361.6001 c931.7266 -360.665 946.4214 -359.0713 961.3101 -357.3447 c976.4365 -355.5908 991.0479 -352.314 1005.6377 -348.1323 c1012.8574 -346.063 1019.9229 -344.0903 1026.8184 -341.064 c1034.4316 -337.7231 1041.9146 -334.644 1049.8154 -332.0078 c1055.3618 -330.1577 1059.9199 -325.4067 1064.9761 -322.5605 c1067.7695 -320.9878 1070.9141 -320.5679 1073.8467 -319.3564 c1076.9736 -318.064 1078.9727 -315.793 1082.3965 -315.793 c1088.5225 -315.793 1094.4419 -314.6133 1100.583 -314.4609 c1108.521 -314.2646 1116.5508 -312.2944 1124.2832 -310.6074 c1138.8066 -307.438 1152.9131 -302.4683 1167.04 -297.9126 c1181.2207 -293.3403 1195.0605 -287.7017 1208.502 -281.2837 c1216.168 -277.624 1223.6528 -273.5947 1231.0142 -269.3584 c1234.3345 -267.4478 1237.7207 -265.6558 1241.0352 -263.7354 c1244.4263 -261.771 1247.1436 -259.1597 1250.2446 -256.8335 c1256.8174 -251.9043 1263.1182 -246.4585 1269.7603 -241.6831 c1275.0342 -237.8906 1281.4482 -235.9209 1285.2188 -230.3369 c1289.9243 -223.3672 1278.6563 -216.8696 1273.9932 -223.7754 c1273.0674 -225.1475 1269.9229 -226.5435 1268.5176 -227.2646 c1265.729 -228.6958 1263.1401 -230.4297 1260.6675 -232.3481 c1254.4932 -237.1392 1248.4307 -242.0479 1242.165 -246.7471 c1230.7451 -255.3125 1217.9868 -262.0972 1205.1738 -268.4814 c1191.7549 -275.1675 1177.8223 -280.7021 1163.5845 -285.377 c1149.4746 -290.0098 1135.3262 -294.7905 1120.8267 -298.0718 c1113.5576 -299.7163 1106.1455 -301.3232 1098.6846 -301.5078 c1092.2651 -301.667 1086.1313 -302.793 1079.707 -302.793 c1076.6367 -302.793 1073.8579 -304.3027 1071.3657 -305.9297 c1068.6563 -307.6982 1065.748 -308.1309 1062.7969 -309.3506 c1056.5986 -311.9131 1051.6606 -316.0869 1045.9653 -319.501 c1043.0625 -321.2412 1039.0234 -321.9434 1035.8389 -323.1001 c1032.3477 -324.3687 1028.9233 -325.8159 1025.5273 -327.3174 c1017.8076 -330.7305 1010.2793 -333.3281 1002.1426 -335.5967 c987.4995 -339.6797 972.834 -343.2754 957.6245 -344.7241 c943.2915 -346.0889 929.2998 -347.8169 914.9248 -348.7158 c899.9229 -349.6543 885 -349.604 870 -349.6045 c861 -349.605 861 -362.605 870 -362.6045 Cf1607.7358 3.29004 m1594.5869 3.29004 L1594.7739 2.54541 1594.9331 1.85791 1595.0728 1.28418 c1596.7246 -5.49902 1596.9927 -12.0474 1596.9927 -18.9927 c1596.9927 -24.3262 1597.5713 -30.0415 1596.292 -35.2539 c1594.9473 -40.7334 1589.3613 -45.0142 1585.6606 -48.9448 c1576.8086 -58.3472 1565.9873 -66.7676 1554.9424 -73.4346 c1548.9106 -77.0757 1542.5713 -79.9512 1535.7329 -81.6787 c1529.4492 -83.2661 1523.0684 -82.1382 1516.7109 -82.79 c1502.3716 -84.2603 1509.9712 -102.748 1512.5205 -111.0977 c1514.1289 -116.3652 1515.002 -122.1299 1515.7207 -127.5879 c1516.4033 -132.7749 1516.7764 -138.6187 1514.5811 -143.5186 c1512.2925 -148.626 1506.8564 -152.5122 1502.6426 -155.9619 c1497.2339 -160.3901 1491.2783 -164.0884 1484.4189 -165.6348 c1472.8159 -168.251 1460.6875 -163.0898 1449.3145 -159.9678 C1446.2695 -155.8945 1440.6875 -157.2441 1438.436 -160.6221 C1435.333 -163.8882 1435.4668 -170.144 1441.0864 -171.3296 c1441.4473 -171.4058 1441.8057 -171.4917 1442.166 -171.5713 C1442.6582 -172.1543 1443.126 -172.7544 1443.5283 -173.4033 c1444.1377 -174.3867 1444.9873 -174.8423 1445.1118 -176.0059 c1445.3369 -178.1104 1445.2725 -180.0894 1445.7158 -182.188 c1447.3613 -189.9824 1448.8721 -197.1626 1449.3691 -205.1431 c1449.9424 -214.3403 1450.1079 -223.5615 1450.1899 -232.7744 c1450.2676 -241.4634 1450.7422 -250.2798 1449.2227 -258.8687 c1447.958 -266.0186 1445.9248 -273.2856 1442.6494 -279.7764 c1440.8315 -283.3774 1438.7119 -286.8276 1436.812 -290.3862 c1434.9414 -293.8906 1433.6309 -297.3911 1431.3213 -300.6782 c1428.9868 -304.0005 1425.8828 -306.8853 1423.0352 -309.7568 c1420.4775 -312.3359 1418.7715 -315.5454 1416.3354 -318.2388 c1411.7656 -323.292 1405.9155 -327.0796 1401.7773 -332.5811 c1396.7329 -339.2871 1408.0288 -345.7544 1413.002 -339.1426 c1414.9458 -336.5586 1417.9985 -334.7075 1420.3257 -332.4819 c1422.5039 -330.3994 1424.0459 -329.0698 1426.5293 -326.3237 c1429.0317 -323.5571 1430.8486 -320.3394 1433.4849 -317.6816 c1436.75 -314.3896 1439.7461 -310.9326 1442.5469 -307.2393 c1444.9678 -304.0464 1446.2354 -300.4658 1448.0371 -296.9473 c1450.1309 -292.8589 1452.5547 -288.9517 1454.625 -284.8496 c1458.4297 -277.311 1460.6011 -268.8652 1462.0654 -260.5889 c1463.689 -251.4087 1463.2544 -242.0542 1463.1899 -232.7744 c1463.1216 -222.8989 1462.8604 -213.0269 1462.2461 -203.1689 c1461.7212 -194.7422 1460.1284 -186.9443 1458.2515 -178.7319 c1458.021 -177.7236 1457.9297 -176.7109 1457.8594 -175.7026 C1466.0532 -177.9053 1474.2856 -179.6978 1482.9844 -178.8965 c1497.3916 -177.5684 1509.5273 -168.0815 1519.5264 -158.2715 c1529.0024 -148.9741 1530.1484 -136.9829 1528.2959 -124.4004 c1527.3877 -118.2295 1526.3789 -111.9756 1524.5562 -106.0054 c1523.5688 -102.771 1522.4639 -99.7832 1521.7266 -96.4775 c1521.6782 -96.2612 1521.6416 -96 1521.6113 -96 C1521.8887 -96 L1528.9517 -96 1535.6284 -95.4678 1542.4585 -93.5107 c1549.7222 -91.4287 1556.5981 -87.7144 1563.0352 -83.8286 c1574.9614 -76.6294 1586.4844 -67.0811 1596.021 -56.9521 c1600.2183 -52.4941 1604.7876 -48.2505 1607.373 -42.6064 c1610.0933 -36.6689 1609.9927 -30.2319 1609.9927 -23.8335 c1609.9927 -14.502 1609.7739 -5.50439 1607.7358 3.29004 Cf1257.5952 -330.8696 m1252.6162 -328.6079 1246.5737 -327.4395 1242.4512 -323.6743 c1236.2759 -318.0342 1227.0566 -327.2017 1233.2588 -332.8667 c1237.6909 -336.9146 1242.98 -339.02 1248.5195 -341.1235 c1255.2441 -343.6772 1261.4033 -347.4663 1268.1787 -349.9688 c1274.8916 -352.4478 1281.7949 -354.2715 1288.8047 -355.7007 c1296.2939 -357.2275 1303.5361 -359.8071 1311.2358 -360.0742 c1314.7646 -360.1968 1318.2998 -360.0918 1321.8315 -360.2324 c1325.0127 -360.3589 1328.3408 -361.3999 1331.4785 -361.3394 c1339.4141 -361.186 1347.1611 -359.4219 1355.0068 -358.4517 c1361.417 -357.6587 1367.5698 -355.6733 1373.9082 -354.5098 c1381.0361 -353.2012 1387.7305 -352.6191 1394.2231 -349.0654 c1401.5771 -345.0396 1395.0181 -333.813 1387.6616 -337.8398 c1382.3911 -340.7251 1376.2822 -341.0498 1370.4521 -341.9741 c1364.7266 -342.8813 1359.2188 -344.9307 1353.4565 -345.6431 c1346.7759 -346.4697 1340.1182 -347.9297 1333.3765 -348.3027 c1330.1333 -348.4819 1326.7241 -347.5723 1323.4795 -347.3252 c1320.0332 -347.063 1316.5615 -347.0845 1313.1079 -347.0752 c1306.4707 -347.0562 1300.4121 -344.9023 1293.9858 -343.5107 c1287.5381 -342.1152 1281.1919 -340.8145 1275.0083 -338.4502 c1269.0259 -336.1626 1263.4287 -333.5195 1257.5952 -330.8696 cf828.1104 -454 m828.1104 -450 827.606 -446.1929 828.1973 -442.6782 c828.7886 -439.1655 830.3154 -435.7734 830.5537 -432.1777 c830.7344 -429.4551 831.394 -426.7217 831.8262 -423.96 C836.4917 -429.1313 841.6782 -434.0908 846.998 -438.3179 c851.1611 -441.626 855.9331 -443.9702 860.3335 -446.9492 c864.981 -450.0962 870.1475 -455.6196 875.5498 -457.2607 c879.9097 -458.585 883.7393 -461.4292 887.9844 -463.1362 c892.7773 -465.064 897.4912 -466.0171 902.582 -466.7944 c925.624 -470.3149 948.3906 -472.6001 971.6646 -469.7041 c983.1118 -468.2798 994.3389 -465.103 1005.5181 -462.3213 c1016.2739 -459.645 1026.2168 -454.0449 1037.1538 -452.2002 c1045.4067 -450.8076 1041.8955 -438.2813 1033.6978 -439.6641 c1024.4136 -441.2305 1016.0796 -445.8115 1007.1289 -448.5205 c998.0259 -451.2754 988.5181 -453.1479 979.25 -455.2681 c959.667 -459.7485 938.6045 -458.6694 918.8105 -456.2505 c909.9639 -455.1689 901.3926 -453.624 892.9229 -451.0508 c889.0049 -449.8608 885.7061 -447.2734 881.9106 -445.7471 c877.5264 -443.9839 873.75 -440.5923 869.9312 -437.8545 c866.0303 -435.0571 862.0449 -432.4189 857.7856 -430.1982 c853.8257 -428.1328 850.4292 -424.166 847.3501 -421.0117 c844.6973 -418.2949 842.1035 -415.5229 839.4429 -412.8135 c838.6646 -412.021 837.9263 -411.1929 837.1982 -410.3545 C837.0664 -410.2295 836.9497 -410.0938 836.8379 -409.9551 C837.8032 -406.2832 834.7637 -401.8564 830.6382 -401.605 C827.3574 -397.3892 818.8428 -398.6538 818.9058 -405.4463 c818.9463 -409.8237 819.1802 -414.1953 819.2222 -418.5728 c819.2627 -422.8232 817.9146 -426.6206 817.6406 -430.75 c817.4248 -434.0024 815.9712 -437.3853 815.4292 -440.6035 c814.7085 -444.8867 815.1104 -449 815.1104 -454 c815.1104 -462 828.1104 -462 828.1104 -454 cf1084.4072 -422.0078 m1088.9736 -417.9185 1093.2119 -413.4824 1097.251 -408.876 c1099.0576 -406.8145 1100.623 -404.583 1102.3906 -402.498 c1104.5269 -399.979 1107.3262 -398.4063 1109.6069 -396.1255 c1111.3809 -394.3516 1112.6851 -391.8218 1114.186 -389.8101 c1116.165 -387.1577 1118.4941 -384.8057 1120.7373 -382.3848 c1124.6343 -378.1807 1126.7417 -372.6709 1128.7759 -367.4155 c1129.7603 -364.8726 1130.7002 -362.3262 1131.8379 -359.8467 c1133.2441 -356.7832 1135.6958 -354.3472 1137.498 -351.5137 c1138.915 -349.2866 1139.8198 -346.7188 1140.7144 -344.2515 c1140.8188 -343.9639 1140.8945 -343.6597 1140.9551 -343.3486 C1141.564 -343.6641 1142.1572 -343.9746 1142.7217 -344.2573 c1146.7256 -346.2593 1150.6943 -348.2275 1154.9263 -349.71 c1163.4746 -352.7051 1172.6147 -352.3086 1181.5171 -352.6421 c1199.624 -353.3203 1220.0879 -357.5942 1234.8599 -344.2529 c1241.0938 -338.6226 1231.8706 -329.458 1225.6675 -335.0605 c1218.0527 -341.938 1207.501 -340.9063 1198.0288 -340.5093 c1192.522 -340.2783 1187.0234 -339.8867 1181.5171 -339.6421 c1175.8774 -339.3916 1170.2114 -339.6919 1164.623 -338.7593 c1155.7422 -337.2778 1148.1777 -332.1191 1139.9541 -328.8301 c1135.7573 -327.1514 1132.1016 -328.9727 1129.8335 -332.6519 c1128.6714 -334.5371 1128.5508 -337.0044 1128.3525 -339.1343 c1128.1494 -341.3203 1127.3447 -343.0112 1126.2734 -344.9521 c1125.1719 -346.9468 1123.2383 -348.335 1122.1719 -350.293 c1120.8301 -352.7559 1119.6611 -355.2827 1118.6074 -357.8818 c1116.8345 -362.2544 1115.3657 -366.7275 1113.0845 -370.8726 c1110.8359 -374.958 1106.8384 -378.2256 1103.9844 -381.9229 c1103.3027 -382.7905 1102.6357 -383.6694 1101.9829 -384.5596 c1102.1099 -384.3892 1099.1943 -387.7002 1100.4668 -386.8052 c1098.2456 -388.3672 1096.2217 -390.189 1094.3057 -392.105 c1090.8188 -395.5918 1088.0176 -399.8081 1084.6792 -403.4565 c1081.3022 -407.147 1077.6826 -410.606 1073.958 -413.9414 c1070.3198 -417.1992 1066.8633 -420.8804 1062.9609 -423.8179 c1058.4536 -427.2104 1053.3701 -429.7422 1048.5923 -432.7285 c1041.5029 -437.1592 1048.0225 -448.4102 1055.1538 -443.9531 c1060.4106 -440.668 1065.8525 -437.8052 1070.8218 -434.0649 c1075.6367 -430.4404 1079.9199 -426.0269 1084.4072 -422.0078 cf614.585 -639.9697 m613.4028 -641.415 611.7954 -640.6787 609.0596 -640.5962 c605.459 -640.4873 600.9595 -642.9521 597.5713 -644.0815 c590.314 -646.501 582.3198 -646.9243 574.9233 -649.1226 c567.5801 -651.3052 559.0781 -651.6157 551.4751 -650.9512 c544.583 -650.3486 537.9414 -646.4897 531.4741 -643.9751 C528.041 -640.3677 520 -641.707 520 -648 C520 -668.6782 L520 -672.0278 518.9785 -674.9229 518.0215 -678.0977 c516.791 -682.1792 515.9868 -686.2813 514.2705 -690.2056 c508.5186 -703.3608 499.0283 -714.668 488.5337 -724.3408 c483.5762 -728.9097 477.8535 -732.5762 472.1846 -736.1841 c466.1616 -740.0176 460.5601 -744.3516 454.2949 -747.8228 c441.8833 -754.6992 428.4233 -758.8115 414.2163 -758.5547 c398.6318 -758.2729 382.7275 -755.3091 367.5596 -751.877 c352.7974 -748.5366 339.2461 -743.356 325.5381 -737.0601 c319.6411 -734.3516 314.5083 -730.4268 308.4087 -728.126 c302.0093 -725.7119 296.4746 -721.291 290.4453 -718.1187 c284.9541 -715.2295 280.4434 -711.1504 275.8521 -706.981 c273.3311 -704.6919 270.3994 -703.1279 267.7383 -701.0103 c264.7422 -698.6265 262.0801 -695.8291 259.4985 -693.0137 c257.6465 -690.9932 255.8931 -688.8813 254.1333 -686.7808 c252.1172 -684.374 249.395 -683.3027 247.7695 -680.5059 c244.9658 -675.6841 241.5361 -671.9526 235.8779 -671.1948 c229.8838 -670.3916 226.3779 -678.019 224.3843 -682.2227 c222.1294 -686.978 218.7412 -691.3574 215.4136 -695.4209 c207.9131 -704.5801 197.5479 -707.313 186.2251 -707.6094 c179.8735 -707.7759 174.0151 -706.1807 167.8423 -704.8467 c165.9897 -704.4463 158.8931 -703 158.5962 -701.0361 c158.1631 -698.1689 155.1729 -696.3877 152.3994 -696.2979 C149.8481 -691.1372 140 -692.0361 140 -699 C140 -712.2529 L140 -717.6289 138.4346 -722.4155 137.1372 -727.605 c135.5859 -733.8105 134.7246 -741.8354 130.0947 -746.4229 c117.8174 -758.5869 109.7085 -775.6519 94.7314 -785.1519 c91.7661 -787.0327 88.6758 -788.7217 85.8203 -790.7754 c82.4546 -793.1958 79.6895 -795.9946 76.0474 -798.1035 c68.6899 -802.3643 59.9795 -804.6655 51.542 -805.4331 c42.8208 -806.2266 33.9556 -805.0747 25.2173 -805.0684 c18.1167 -805.0635 9.4707 -805.1714 2.6665 -802.2563 C1.94629 -801.2876 0.931641 -800.5469 -0.372559 -800.207 C-0.372559 -814.9849 L6.07715 -817.1997 13.249 -817.6851 19.9302 -817.9863 c29.7998 -818.4316 39.9395 -818.9009 49.8115 -818.5386 c59.5005 -818.1831 69.1475 -815.5928 77.9683 -811.6885 c86.5488 -807.8901 93.2891 -801.2334 101.231 -796.3765 c109.48 -791.3311 115.3633 -783.8838 121.792 -776.8242 c128.2476 -769.7354 133.2739 -761.4497 140.0811 -754.7056 c145.8696 -748.9707 147.2998 -740.5522 149.1982 -732.9585 c150.5649 -727.4922 153 -721.7085 153 -716.0488 C153 -713.4238 L159.627 -717.2295 169.3086 -718.479 174.771 -719.6597 c186.9087 -722.2832 201.5938 -720.6333 212.5122 -714.5811 c223.0288 -708.752 231.1919 -697.6826 236.4287 -687.0234 C236.5522 -687.1802 236.6714 -687.3398 236.8013 -687.4922 c238.8022 -689.8398 240.1592 -692.187 242.7183 -694.085 c248.2017 -698.1514 252.1367 -704.5513 257.2881 -709.1411 c262.2632 -713.5742 267.8755 -717.3018 272.9858 -721.6055 c275.3862 -723.627 277.46 -725.7666 280.188 -727.3604 c283.1738 -729.105 286.3101 -730.584 289.3057 -732.3164 c301.0801 -739.1265 313.0391 -745.5815 325.4233 -751.2266 c352.8721 -763.7383 384.0313 -770.5371 414.2212 -771.5547 c430.2324 -772.0947 445.2798 -767.0884 459.395 -759.8335 c466.2739 -756.2974 472.2573 -751.5151 478.7656 -747.4092 c485.4111 -743.2173 491.8652 -738.7339 497.7666 -733.5332 c509.6909 -723.0239 519.9536 -709.627 526.314 -695.0801 c528.0083 -691.2056 528.9717 -687.2695 530.083 -683.2017 c530.999 -679.8452 533 -675.896 533 -672.3999 C533 -658.4063 L538.9995 -660.772 544.876 -663.1318 551.4751 -663.9512 c559.7954 -664.9839 570.394 -664.2207 578.3794 -661.6582 c586.877 -658.9316 595.8403 -658.3462 604.2808 -655.5327 c607.8071 -654.3574 610.3408 -653.7695 614.0093 -653.7905 c617.833 -653.8125 621.3843 -652.0879 623.7773 -649.1621 c629.0376 -642.7314 619.8965 -633.4766 614.585 -639.9697 cf239.9326 -1594.8184 m230.2607 -1597.2061 221.7168 -1602.7305 212.1748 -1605.3633 c203.6387 -1607.7188 194.6885 -1611.7656 187.0054 -1616.1387 c178.4688 -1621 172.2578 -1629.2139 164.23 -1634.7695 c159.1045 -1638.3164 160.6943 -1647 167.5107 -1647 C169 -1647 L171.8657 -1647 173.6992 -1645.3291 174.5117 -1643.1875 C180.1421 -1638.6719 185.1689 -1633.4365 190.9727 -1629.1426 c197.603 -1624.2363 206.251 -1621.2139 213.9561 -1618.4648 c222.7178 -1615.3389 231.1631 -1611.3057 239.9966 -1608.3604 c250.0342 -1605.0146 260.7944 -1605.0234 271.2559 -1605.0195 c279.6392 -1605.0176 279.6392 -1592.0137 271.2559 -1592.0166 c260.7603 -1592.0205 250.1758 -1592.2891 239.9326 -1594.8184 cf540.8921 -1594.4111 m534.7437 -1594.0996 528.627 -1593.3018 522.4556 -1593.2686 c516.9531 -1593.2383 511.2217 -1592.6836 505.8594 -1591.4063 c503.562 -1590.8594 501.3809 -1589 498.9888 -1589 C489.5 -1589 L484.2788 -1589 479.1387 -1586.3076 473.9229 -1585.6748 c468.2524 -1584.9863 462.3296 -1585.5664 456.6206 -1585.5664 c450.876 -1585.5664 445.1709 -1584.3721 439.3936 -1584.293 c427.1362 -1584.125 414.9888 -1583 402.7031 -1583 C366.1445 -1583 L354.2563 -1583 341.5015 -1582.377 329.8262 -1584.9492 c324.3916 -1586.1465 319.54 -1588.1699 313.8936 -1588.1816 c308.313 -1588.1943 303.4023 -1589.2959 298.3394 -1591.6162 c290.7261 -1595.1045 297.3374 -1606.3262 304.9009 -1602.8604 c309.4136 -1600.793 314.0869 -1601.4795 318.8774 -1600.9893 c324.4604 -1600.418 329.605 -1597.7285 335.1367 -1597.1445 c347.2847 -1595.8613 359.5474 -1596 371.7441 -1596 C406.1851 -1596 L418.4575 -1596 430.6162 -1597.0918 442.8755 -1597.4238 c448.0786 -1597.5664 453.0903 -1598.6484 458.3042 -1598.6484 c463.7744 -1598.6484 469.6611 -1597.9961 475.0083 -1599.2568 c480.6465 -1600.5859 485.5137 -1602.4727 491.3975 -1602.4727 c494.1875 -1602.4727 496.5591 -1602.0264 498.415 -1602.7842 c500.5576 -1603.6582 502.6758 -1604.332 504.9624 -1604.7051 c516.75 -1606.6289 528.9946 -1606.5225 540.8921 -1607.4102 c553.4194 -1608.3457 566 -1607.543 579 -1607.543 c587 -1607.543 587 -1594.543 579 -1594.543 c566 -1594.543 553.4922 -1595.0498 540.8921 -1594.4111 cf610.3247 -1607.543 m622.5513 -1607.3555 633.7881 -1603.9023 645.5386 -1601.0439 c650.6924 -1599.79 655.8506 -1599.0059 660.8037 -1597.0225 c666.1348 -1594.8877 670.0723 -1590.4072 675.312 -1588.333 c680.6938 -1586.2031 686.2808 -1584.4395 691.7354 -1582.4941 c697.3286 -1580.499 702.499 -1577.7871 708.0322 -1575.6533 c719.1665 -1571.3594 730.6558 -1567.6338 741.9277 -1563.7041 c753.1919 -1559.7783 765.189 -1556.4961 777.0322 -1554.9199 c788.3408 -1553.416 799.4155 -1552.2842 810.5068 -1549.4131 c835.5625 -1542.9268 861.5947 -1541.7891 887.3994 -1541.7539 c895.7822 -1541.7422 895.7832 -1528.7422 887.3994 -1528.7539 c862.2231 -1528.7881 836.9985 -1530.2168 812.291 -1535.3125 c806.6182 -1536.4824 801.0679 -1538.3584 795.3491 -1539.4814 c789.7969 -1540.5713 784.2637 -1541.1523 778.6406 -1541.7344 c766.7974 -1542.96 755.019 -1545.9756 743.6621 -1549.4688 c720.9702 -1556.4473 699.251 -1566.0889 676.9404 -1574.0459 c671.2563 -1576.0732 666.6255 -1578.1201 661.7383 -1581.6982 c657.1592 -1585.0508 652.1064 -1586.3818 646.6362 -1587.5352 c634.4658 -1590.1025 622.9136 -1594.3506 610.3247 -1594.543 c601.9497 -1594.6709 601.937 -1607.6709 610.3247 -1607.543 cf619.1812 -1928.5518 m612.2314 -1928.4834 605.3359 -1927.6934 598.3999 -1927.3574 c590.6748 -1926.9824 582.9023 -1927.7754 575.2393 -1928.6699 c559.9282 -1930.457 544.4683 -1931.6699 529.3428 -1934.7402 c522.1484 -1936.2002 515.1387 -1938.1787 507.8657 -1939.3447 c499.6162 -1940.668 491.4478 -1940.1582 483.1743 -1940.9375 c475.5991 -1941.6504 467.9873 -1941.21 460.4014 -1942.1777 c452.5693 -1943.1777 444.6362 -1943.1025 436.7808 -1942.4023 c430.1616 -1941.8115 422.4141 -1940.6016 416.3477 -1937.7539 c413.8242 -1936.5684 411.1699 -1935.6855 408.6465 -1934.501 c405.6362 -1933.0879 403.1055 -1930.3848 400.332 -1928.5361 c394.7832 -1924.8369 389.146 -1921.3193 383.3428 -1918.0527 c380.5049 -1916.4551 376.7993 -1916.2715 373.6567 -1915.7012 c369.5405 -1914.9541 365.4893 -1913.4824 361.5469 -1912.1191 c354.8179 -1909.7949 347.4141 -1906 340.21 -1906 C316.9609 -1906 L309.5469 -1906 302.6494 -1907.6367 295.2949 -1908.2793 c287.8545 -1908.9297 280.5845 -1908.8926 273.1543 -1909.8828 c266.4927 -1910.7705 259.7529 -1910.9131 253.0752 -1911.6602 c246.832 -1912.3574 240.8862 -1914.0557 234.5781 -1914.4365 c220.8179 -1915.2676 207.4678 -1912.2529 193.9106 -1910.2529 c186.8721 -1909.2148 179.8965 -1907.9063 173.0347 -1906.0137 c166.7847 -1904.2891 161.2808 -1900.9355 155.3223 -1898.4219 c149.4067 -1895.9258 142.5146 -1895.1543 136.313 -1893.5723 c130.1143 -1891.9912 124.3193 -1889.543 118.498 -1886.9316 c112.8833 -1884.4141 106.0059 -1882.502 100.0068 -1881.2754 c94.0811 -1880.0625 88.6929 -1877.8887 82.9692 -1876.1035 c77.3774 -1874.3594 72.3525 -1871.2646 66.5859 -1870.2529 c59.5903 -1869.0244 52.9712 -1865.9355 45.8838 -1864.7266 c39.4878 -1863.6348 32.9053 -1864.0273 26.4434 -1864.0273 c19.1729 -1864.0273 12.1709 -1863.3594 4.93555 -1862.9209 c3.14453 -1862.8125 1.37988 -1862.7852 -0.372559 -1862.8086 C-0.372559 -1875.8018 L3.04883 -1875.8467 6.24658 -1875.9668 8.95508 -1876.1963 c16.0781 -1876.7988 22.8906 -1877.0273 30.0723 -1877.0273 c38.3203 -1877.0273 45.6572 -1877.5898 53.6582 -1879.79 c59.9658 -1881.5234 66.3208 -1883.293 72.3218 -1885.8203 c78.5288 -1888.4346 84.9878 -1890.9492 91.5005 -1892.6641 c98.3115 -1894.458 105.0513 -1896.1709 111.8091 -1898.2012 c118.4263 -1900.1885 124.4683 -1903.6895 131.1548 -1905.6436 c138.0029 -1907.6465 145.0605 -1908.7881 151.8682 -1910.9551 c154.876 -1911.9131 157.7617 -1913.8818 160.5957 -1915.2666 c164.1177 -1916.9873 167.7192 -1918.0332 171.4771 -1919.0693 c186.1968 -1923.1299 201.8052 -1924.4678 216.8628 -1926.8604 c231.6787 -1929.2148 245.4927 -1925.1309 260.1055 -1923.9766 c267.3062 -1923.4072 274.4077 -1922.2637 281.5698 -1921.583 c289.2949 -1920.8486 296.8984 -1921.2139 304.6138 -1919.9844 c311.311 -1918.916 317.6045 -1918.7783 324.394 -1918.7783 c330.6587 -1918.7783 337.9111 -1917.748 343.9209 -1919.6201 c350.479 -1921.6621 356.873 -1924.2041 363.4048 -1926.3291 c369.624 -1928.3516 375.8589 -1928.5605 381.355 -1932.2139 c386.5947 -1935.6973 392.5796 -1938.1074 397.3076 -1942.4316 c401.3569 -1946.1348 407.3701 -1948.375 412.4937 -1950.1758 c425.5112 -1954.752 439.293 -1956.2949 453.04 -1955.8125 c459.9507 -1955.5703 466.7549 -1954.4141 473.6855 -1954.251 c480.6592 -1954.0869 487.5791 -1953.5791 494.561 -1953.5684 c508.8447 -1953.5459 522.4077 -1949.2422 536.2866 -1946.5879 c550.2778 -1943.9131 564.665 -1942.833 578.8135 -1941.2627 c592.4521 -1939.749 605.5669 -1941.418 619.1812 -1941.5518 c627.5674 -1941.6338 627.5596 -1928.6338 619.1812 -1928.5518 cf90.5435 -2159.9268 m94.7646 -2157.0742 99.0562 -2154.3369 103.25 -2151.4336 c108.814 -2147.5811 115.1357 -2145.2617 120.7676 -2141.5752 c127.3418 -2137.2734 133.6006 -2133.4844 141.0044 -2130.7441 c148.0107 -2128.1504 155.3096 -2126.3848 162.5796 -2124.7148 c170.0869 -2122.9893 177.293 -2120.2852 184.8213 -2118.5645 c191.9741 -2116.9297 198.9004 -2116.2705 206.2046 -2116.0664 c213.6255 -2115.8594 220.543 -2113.7871 227.6343 -2111.8027 c234.1396 -2109.9824 241.041 -2111.5645 247.6797 -2109.9053 c251.4312 -2108.9668 255.3906 -2107.5049 259.2363 -2107.082 c263.6372 -2106.5986 268.103 -2106.6973 272.5205 -2106.8164 c279.895 -2107.0146 287.416 -2106.9492 294.7495 -2107.7363 c302.2617 -2108.543 309.6006 -2110.8145 317.0815 -2111.8994 c324.5015 -2112.9746 332.1055 -2112.8701 339.5752 -2113.8262 c346.9385 -2114.7695 353.7275 -2117.1172 361.083 -2118.04 c368.2363 -2118.9365 375.5718 -2119.2998 382.6172 -2120.8027 c390.2563 -2122.4336 397.5796 -2122.4727 405.3647 -2122.4727 c417.2583 -2122.4727 428.9219 -2124.8457 440.7896 -2125.0029 c454.5093 -2125.1855 468.2129 -2125.5742 481.9287 -2125.959 c494.979 -2126.3242 508.0737 -2126.4766 521.1289 -2126.2334 c527.481 -2126.1143 533.7344 -2124.9443 540.1064 -2125.0273 c547.0796 -2125.1191 554.0034 -2126.1768 560.9819 -2126.2686 c569.3691 -2126.3789 569.3584 -2113.3789 560.9819 -2113.2686 c553.3711 -2113.1689 545.8193 -2112.1025 538.2085 -2112.0029 c530.0801 -2111.8965 521.9688 -2113.2686 513.811 -2113.2686 c497.9463 -2113.2686 482.1133 -2112.9707 466.2563 -2112.4844 c450.5972 -2112.0029 435.1938 -2111.8262 419.6094 -2110.1289 c412.3423 -2109.3369 405.0718 -2109.4727 397.7734 -2109.4727 c390.5747 -2109.4727 383.1787 -2108.1143 376.0957 -2106.8301 c369.0757 -2105.5586 361.3882 -2106.0684 354.6338 -2103.6484 c347.5361 -2101.1055 339.4746 -2100.7109 331.9839 -2099.9492 c324.5693 -2099.1943 317.4609 -2098.999 310.1289 -2097.4707 c302.7085 -2095.9248 295.3091 -2094.4219 287.7026 -2094.291 c280.1113 -2094.1611 272.5234 -2093.6494 264.9292 -2093.7568 c261.1714 -2093.8105 257.3618 -2094.0859 253.7124 -2094.998 c249.5244 -2096.0439 244.6494 -2098.0859 240.3154 -2098.0859 c233.3896 -2098.0859 227.5239 -2098.3057 220.8179 -2100.2158 c213.436 -2102.3184 206.8081 -2103.1426 199.1396 -2103.1475 c186.5391 -2103.1563 174.7368 -2108.6973 162.7192 -2111.3701 c150.0933 -2114.1787 137.5786 -2117.4199 125.8848 -2123.0801 c120.7314 -2125.5752 116.0996 -2129.167 111.2866 -2132.2363 c106.1162 -2135.5352 100.3452 -2137.6768 95.2285 -2141.2188 c89.7612 -2145.0039 84.0776 -2148.4287 78.7036 -2152.375 c75.75 -2154.543 72.6309 -2157.8096 69.2734 -2159.9268 C90.5435 -2159.9268 Lf1034.9624 -2050.2422 m1028.4575 -2051.6768 1021.8271 -2050.7676 1015.3472 -2052.2559 c1007.9102 -2053.9639 1000.2017 -2054.333 992.6704 -2055.6191 c985.8271 -2056.7871 979.0342 -2058.2451 972.1763 -2059.3223 c968.8257 -2059.8486 965.4336 -2060.0771 962.0449 -2060.1309 c958.1846 -2060.1924 954.0088 -2063.1055 950.6309 -2064.7441 c947.1812 -2066.418 943.0181 -2066.3447 939.2715 -2066.4375 c935.6187 -2066.5273 932.2935 -2066.9248 928.7061 -2067.6387 c925.1001 -2068.3574 921.5059 -2069.1016 917.8755 -2069.6885 c913.7939 -2070.3486 909.645 -2070.0078 905.5737 -2070.7119 c891.1396 -2073.208 876.8486 -2078.6738 862.7661 -2082.668 c849.3145 -2086.4824 834.7935 -2085.3428 820.9771 -2086.0664 c813.75 -2086.4453 806.4941 -2086.8877 799.2563 -2086.6123 c791.6743 -2086.3242 784.1616 -2084.9033 776.5957 -2084.3564 c769.5928 -2083.8496 762.4834 -2084.1689 755.4658 -2084.1689 c752.0723 -2084.1689 748.6665 -2084.0811 745.2769 -2084.2559 c741.2617 -2084.4619 737.3457 -2085.8301 733.4277 -2086.6123 c727.1318 -2087.8691 720.2354 -2086.1777 713.8237 -2087.1484 c710.8354 -2087.6016 707.564 -2089.2285 704.5801 -2089.2324 c700.1582 -2089.2383 695.8276 -2089.5889 691.4658 -2090.3096 c687.689 -2090.9336 684.0005 -2092.3691 680.3628 -2093.5166 c675.6924 -2094.9902 670.9092 -2096.0244 666.1621 -2097.2109 c656.5317 -2099.6191 647.1021 -2102.3203 637.6709 -2105.417 c629.0469 -2108.249 620.6182 -2110.0391 611.6328 -2111.2012 c601.9072 -2112.46 592.3301 -2114.4141 582.4902 -2114.5332 c574.1133 -2114.6348 574.1035 -2127.6348 582.4902 -2127.5332 c589.812 -2127.4453 597.0278 -2126.4453 604.2534 -2125.332 c612.0518 -2124.1309 619.9639 -2123.5088 627.6768 -2121.8252 c634.54 -2120.3281 641.1958 -2117.9209 647.8599 -2115.7363 c655.6436 -2113.1836 663.5742 -2111.2578 671.5156 -2109.2725 c678.292 -2107.5781 684.9087 -2105.583 691.6133 -2103.6377 c695.252 -2102.582 698.916 -2102.3438 702.6821 -2102.25 c706.8354 -2102.1475 710.0679 -2101.2676 714.0571 -2100.2578 c720.2007 -2098.7041 727.1831 -2099.9355 733.4688 -2099.6123 c736.9063 -2099.4355 740.3022 -2098.3809 743.6309 -2097.5928 c747.4092 -2096.6992 751.606 -2097.1689 755.4658 -2097.1689 c762.5015 -2097.1689 769.5688 -2096.9727 776.5957 -2097.3564 c784.1792 -2097.7705 791.6733 -2099.1611 799.2563 -2099.6123 c813.9551 -2100.4873 829.2188 -2098.877 843.9316 -2098.3291 c858.5273 -2097.7852 872.0352 -2093.5059 885.9639 -2089.5264 c892.6304 -2087.6221 899.2773 -2085.5391 905.999 -2083.8408 c909.2178 -2083.0283 912.5645 -2083.2324 915.853 -2082.9404 c920.1509 -2082.5605 924.418 -2081.7334 928.644 -2080.8906 c938.2383 -2078.9795 948.0967 -2080.0107 957.1919 -2075.9688 c959.0713 -2075.1338 961.5352 -2073.1387 963.6514 -2073.1055 c965.9165 -2073.0693 968.1792 -2072.8135 970.4282 -2072.5635 c974.9893 -2072.0557 979.5146 -2071.252 984.0156 -2070.3682 c993.3408 -2068.5371 1002.6821 -2067.4971 1012.042 -2066.0469 c1016.4531 -2065.3623 1020.5957 -2064.3047 1025.0713 -2064.2402 c1029.5532 -2064.1758 1034.0391 -2063.7441 1038.4185 -2062.7773 c1046.6035 -2060.9717 1043.1318 -2048.4395 1034.9624 -2050.2422 cf1390.4785 -2056.5674 m1376.9272 -2059.0107 1363.9141 -2055.1963 1350.7261 -2052.5996 c1347.9248 -2052.0488 1345.0762 -2051.6992 1342.2368 -2051.416 c1339.1475 -2051.1074 1336.3413 -2050.0293 1333.3716 -2049.1348 c1326.3203 -2047.0088 1319.0474 -2045.2744 1311.8159 -2043.8916 c1305.374 -2042.6592 1298.5791 -2043.3975 1292.2983 -2041.6729 c1289.0518 -2040.7803 1285.5557 -2039 1282.1357 -2039 C1270.749 -2039 L1264.231 -2039 1257.7485 -2037.5225 1251.2578 -2036.9014 c1244.1094 -2036.2178 1236.9609 -2036.1875 1229.7891 -2036.1875 c1201.4136 -2036.1875 1172.8179 -2035.1191 1144.4858 -2036.835 c1137.3955 -2037.2637 1130.3125 -2037.7813 1123.2197 -2038.1748 c1115.7236 -2038.5918 1108.1699 -2038.3066 1100.7007 -2039.0498 c1094.2026 -2039.6963 1087.7847 -2041.0342 1081.354 -2042.1299 c1074.8022 -2043.2461 1068.1235 -2042.4639 1061.5313 -2043.9189 c1053.3467 -2045.7256 1056.8179 -2058.2549 1064.9873 -2056.4512 c1070.979 -2055.1289 1077.084 -2055.8379 1083.1094 -2054.9346 c1089.5674 -2053.9668 1095.937 -2052.5117 1102.4424 -2051.8652 c1109.3076 -2051.1816 1116.3237 -2051.5059 1123.2197 -2051.1514 c1130.9487 -2050.7549 1138.665 -2050.1406 1146.3896 -2049.6729 c1174.6753 -2047.96 1203.2798 -2049.0928 1231.6094 -2049.0928 c1238.1846 -2049.0928 1244.7026 -2049.1465 1251.2578 -2049.7129 c1258.4355 -2050.334 1265.4346 -2051.623 1272.647 -2051.623 c1275.6045 -2051.623 1279.2207 -2051.0645 1282.0947 -2051.8535 c1285.5 -2052.7891 1288.7559 -2054.0947 1292.2163 -2054.8525 c1295.7056 -2055.6172 1299.3525 -2055.4043 1302.8945 -2055.668 c1306.5405 -2055.9395 1310.1416 -2056.7422 1313.7031 -2057.5332 c1320.1875 -2058.9727 1326.666 -2060.6338 1333.0044 -2062.6191 c1339.2788 -2064.585 1345.7954 -2064.7158 1352.2349 -2066.1943 c1366.0669 -2069.3691 1379.8027 -2071.6514 1393.9346 -2069.1025 c1402.1758 -2067.6162 1398.6738 -2055.0898 1390.4785 -2056.5674 cf1666.5107 -2045.5166 m1666.3213 -2045.4629 1666.0928 -2045.4053 1665.7905 -2045.3389 C1665.0518 -2044.9922 1664.313 -2044.6455 1663.5742 -2044.2979 c1661.7583 -2043.4434 1659.8994 -2042.7422 1657.9961 -2042.1113 c1653.1802 -2040.5176 1648.2622 -2039.9404 1643.2461 -2039.3545 c1637.811 -2038.7207 1632.3633 -2038.6387 1626.897 -2038.624 c1621.6538 -2038.6094 1616.3706 -2037.4355 1611.0732 -2037.3672 c1600.5864 -2037.2324 1590.3066 -2036.6152 1579.9165 -2035.1465 c1568.6387 -2033.5508 1557.2559 -2035 1545.9263 -2035 C1530.7441 -2035 L1525.8389 -2035 1521.0801 -2036 1516.1943 -2036.1797 c1511.5762 -2036.3496 1507.1016 -2036.2412 1502.8062 -2038.2139 c1498.3799 -2040.2461 1493.8574 -2043.1152 1489.1133 -2044.2529 c1480.0361 -2046.4297 1470.5396 -2046.8193 1461.3291 -2048.3545 c1449.9424 -2050.252 1438.5557 -2052.1445 1427.1689 -2054.043 c1418.9141 -2055.418 1422.4268 -2067.9385 1430.625 -2066.5723 c1441.3789 -2064.7803 1452.1328 -2062.9883 1462.8867 -2061.1953 c1472.7568 -2059.5508 1482.7954 -2058.9346 1492.5693 -2056.7666 c1497.1563 -2055.75 1502.7944 -2053.1309 1506.8232 -2050.7354 c1510.627 -2048.4746 1514.9966 -2049.2832 1519.2388 -2048.8945 c1530.0767 -2047.9033 1540.7275 -2047.9932 1551.6196 -2047.7754 c1562.3423 -2047.5605 1572.623 -2047.1025 1583.2954 -2048.5303 c1594.4282 -2050.0205 1605.4316 -2050.041 1616.6182 -2050.5156 c1621.979 -2050.7432 1627.1382 -2051.5918 1632.5444 -2051.6699 c1637.8042 -2051.7461 1642.918 -2052.7246 1648.1348 -2052.9609 c1656.1768 -2053.3262 1664.7051 -2062.5264 1672.562 -2057.0605 c1679.2217 -2052.4277 1673.2139 -2041.5957 1666.5107 -2045.5166 Cf2221.7031 -2069.2197 m2217.5918 -2070.5898 2212.5205 -2071.498 2208.7637 -2073.6699 c2204.2646 -2076.2715 2198.748 -2076.8008 2194.0039 -2079.1387 c2184.084 -2084.0273 2175.7031 -2085.1299 2165.0088 -2082.3428 c2160.5771 -2081.1885 2155.8457 -2081.4824 2151.3057 -2080.8311 c2146.2383 -2080.1025 2141.3857 -2079.2344 2136.7783 -2076.9326 c2132.3848 -2074.7383 2128.748 -2072.8848 2123.8984 -2071.9844 c2119.2344 -2071.1172 2115.4746 -2069.0947 2111.1191 -2067.3916 c2107.4736 -2065.9658 2103.7139 -2064.8398 2099.9795 -2063.6777 c2095.7393 -2062.3584 2091.8955 -2060.5596 2087.7754 -2058.999 c2078.502 -2055.4873 2066.0459 -2058.209 2056.7617 -2060.6211 c2052.6836 -2061.6797 2048.5225 -2062.5527 2044.4717 -2063.6855 c2040.1426 -2064.8975 2036.7354 -2067.7188 2032.9043 -2069.875 c2028.4512 -2072.3809 2023.3789 -2073.5186 2018.9873 -2076.2002 c2014.8896 -2078.7012 2011.5234 -2082.3066 2007.6006 -2085.0566 c2000.791 -2089.8281 2007.2783 -2101.1055 2014.1611 -2096.2813 c2017.6895 -2093.8086 2020.8574 -2090.9111 2024.2832 -2088.3125 c2028.2617 -2085.2939 2033.25 -2083.8672 2037.7803 -2081.9004 c2041.374 -2080.3398 2044.2852 -2077.7061 2047.9268 -2076.2217 c2052.1484 -2074.502 2057.4883 -2073.8652 2061.9316 -2072.7109 c2066.7607 -2071.457 2071.7051 -2070.9326 2076.6738 -2070.6777 c2081.7285 -2070.4189 2084.3711 -2071.9854 2088.9004 -2073.7002 c2093.2373 -2075.3418 2097.7363 -2076.5645 2102.1484 -2077.9873 c2106.6074 -2079.4248 2110.6504 -2081.6504 2115.0527 -2083.207 c2118.3857 -2084.3867 2122.5098 -2084.1328 2125.6406 -2085.7363 c2130.1738 -2088.0576 2134.5371 -2090.4766 2139.4668 -2091.876 c2143.8154 -2093.1113 2148.582 -2093.4971 2153.0547 -2094.0713 c2158.2617 -2094.7402 2163.1748 -2095.4678 2168.334 -2096.4697 c2177.7227 -2098.2949 2186.8555 -2096.4727 2195.5049 -2092.6914 c2205.1533 -2088.4717 2215.1377 -2085.0947 2225.1602 -2081.7549 c2233.0723 -2079.1191 2229.6797 -2066.5615 2221.7031 -2069.2197 cf2381.1172 -2083.1367 m2378.0352 -2083.9336 2374.6113 -2083.1875 2371.5693 -2082.4922 c2367.5088 -2081.5625 2363.4131 -2081.6172 2359.4092 -2080.334 c2355.3652 -2079.0371 2351.5137 -2077.1787 2347.4209 -2075.9063 c2341.9082 -2074.1934 2336.3525 -2072.6152 2330.8018 -2071.0264 c2326.1016 -2069.6807 2321.4961 -2068.1191 2316.7275 -2067.0049 c2311.3008 -2065.7373 2305.8115 -2065.7051 2300.3438 -2064.8848 c2295.2393 -2064.1191 2290.0664 -2063.9492 2284.9648 -2063.1846 c2280.3516 -2062.4932 2276.3691 -2060.3516 2271.5088 -2060.1309 c2263.124 -2059.75 2263.1611 -2072.752 2271.5088 -2073.1309 c2275.623 -2073.3184 2279.1309 -2075.3633 2283.1582 -2075.9678 c2288.2637 -2076.7324 2293.4365 -2076.9023 2298.5391 -2077.668 c2304.0938 -2078.501 2309.5781 -2078.6777 2315.0918 -2079.9658 c2320.5078 -2081.2305 2325.7861 -2083.1123 2331.1299 -2084.6465 c2336.5801 -2086.2109 2342.0186 -2087.8164 2347.4258 -2089.5273 c2351.6484 -2090.8623 2355.4912 -2092.9824 2359.8545 -2093.9043 c2363.8525 -2094.75 2368.0615 -2095.1455 2372.1064 -2095.8047 c2376.2617 -2096.4824 2380.4609 -2096.7363 2384.5723 -2095.6719 c2392.6836 -2093.5732 2389.2402 -2081.0342 2381.1172 -2083.1367 cf2474.4004 -1898.4199 m2473.0059 -1898.0361 2471.3594 -1898.209 2469.918 -1898.8301 C2465.0498 -1892.8379 2459.9941 -1886.6865 2454.6133 -1881.2109 c2448.9043 -1875.4014 2443.7832 -1869.3789 2436.1348 -1866.1055 c2428.0254 -1862.6348 2419.8887 -1859.2295 2411.6494 -1856.0732 c2407.6338 -1854.5342 2404.5098 -1852.3135 2400.1162 -1851.6855 c2396.6914 -1851.1963 2392.8418 -1850.3896 2389.6328 -1849.0781 c2387.3281 -1848.1348 2384.7461 -1849.2227 2383.1133 -1851.0283 C2382.9072 -1850.1035 2382.7197 -1849.1719 2382.5889 -1848.2207 c2381.7832 -1842.3711 2381.1504 -1837.0674 2379.3682 -1831.416 c2377.7637 -1826.3242 2377.6299 -1821.124 2375.9043 -1816.0264 c2373.8672 -1810.0059 2371.6846 -1803.7744 2368.1934 -1798.4414 c2365.1953 -1793.8594 2362.1387 -1789.4082 2359.3574 -1784.6816 c2357.9434 -1782.2793 2356.5938 -1779.8428 2355.1406 -1777.4619 c2353.2432 -1774.3545 2350.2656 -1772.4307 2347.4785 -1770.167 c2342.627 -1766.2275 2338.2783 -1761.5898 2333.334 -1757.8057 c2329.4785 -1754.8545 2324.8174 -1753.3379 2321.6504 -1749.5352 c2317.6689 -1744.752 2311.6162 -1748.6035 2310.9219 -1753.5195 C2308.1406 -1752.0146 2304.5 -1752.3018 2302.5869 -1755.9111 c2299.6348 -1761.4824 2294.8145 -1766.4775 2293.0752 -1772.6465 c2291.1875 -1779.3428 2285.5801 -1783.5479 2283.0918 -1790.0449 c2277.71 -1804.0957 2281.6514 -1818.8701 2283.1172 -1833.2529 c2283.8516 -1840.4551 2285.6807 -1849.3535 2290.7695 -1854.7705 c2295.7266 -1860.0459 2300.0322 -1865.6689 2305.9619 -1869.9951 c2307.8926 -1871.4033 2311.7676 -1874.0684 2312.6689 -1876.3389 c2314.0605 -1879.8477 2316.3867 -1882.7129 2318.9697 -1885.4219 c2323.2441 -1889.9053 2327.3223 -1894.7168 2330.6279 -1899.9775 C2329.999 -1900.9014 2329.5918 -1902.0469 2329.5332 -1903.4219 c2329.2578 -1909.8115 2328.4414 -1916.752 2326.5078 -1922.8408 c2325.6816 -1925.4434 2323.7012 -1927.79 2322.1963 -1930.0313 c2320.168 -1933.0508 2318.7705 -1936.2891 2317.0195 -1939.4482 c2315.5215 -1942.1484 2313.1191 -1944.3945 2311.1953 -1946.7891 c2309.2109 -1949.2607 2307.6797 -1951.9961 2305.8047 -1954.541 c2301.7715 -1960.0117 2296.9961 -1965.2109 2291.457 -1969.1768 c2286.3789 -1972.8125 2280.8457 -1976.0869 2275.5967 -1979.5088 c2269.0303 -1983.7891 2262.4102 -1985.7979 2254.7578 -1987.2168 c2247.543 -1988.5547 2240.2393 -1989.1309 2232.9092 -1989.2686 c2229.3398 -1989.3359 2225.9277 -1988.8379 2222.3984 -1988.416 c2218.5234 -1987.9531 2214.8984 -1988.0313 2211.1621 -1986.7725 c2206.2959 -1985.1328 2200.083 -1979.9902 2198.373 -1975.1357 c2196.1094 -1968.709 2192.7422 -1963.8457 2187.5361 -1959.4609 c2188.3594 -1960.1543 2186.8555 -1958.0273 2186.6826 -1957.3623 c2186.2734 -1955.7832 2185.1387 -1954.541 2184.1816 -1953.2793 c2182.2148 -1950.6875 2180.0234 -1948.2783 2178.0586 -1945.6875 C2178.0117 -1945.8564 2177.9639 -1946.0264 2177.917 -1946.1953 C2177.8447 -1945.1104 2177.6396 -1944.0518 2177.3008 -1943.0195 C2176.9346 -1941.6436 2176.1201 -1940.2109 2175.3906 -1938.998 c2173.5977 -1936.0176 2170.4697 -1933.627 2168.0313 -1931.1875 c2163.7285 -1926.8838 2163.8623 -1921.0488 2160.084 -1916.582 c2155.5693 -1911.2441 2149.9912 -1906.7666 2145.2637 -1901.5732 c2140.5977 -1896.4482 2134.1309 -1892.7402 2128.4746 -1888.8184 c2121.8301 -1884.2109 2115.0752 -1880.3643 2107.9658 -1876.6074 c2102.0137 -1873.4619 2096.5889 -1869.8447 2090.4492 -1866.9805 c2084.1309 -1864.0332 2077.7051 -1861.3252 2071.7734 -1857.6299 c2068.7422 -1855.7412 2066.4922 -1853.3633 2062.9277 -1852.4932 c2059.5869 -1851.6777 2056.2178 -1850.9697 2052.8623 -1850.2168 c2045.9717 -1848.6689 2039.4873 -1845.4316 2032.3887 -1845.0498 c2025.666 -1844.6875 2018.873 -1846.209 2012.1465 -1846.3145 c2004.0801 -1846.4414 1996.3496 -1847.084 1988.3574 -1848.1641 c1973.9736 -1850.1084 1960.9648 -1854.7129 1947.7754 -1860.5771 c1941.2695 -1863.4707 1934.8105 -1866.4453 1928.5557 -1869.8525 c1921.8682 -1873.4961 1916.3096 -1878.2305 1910.1812 -1882.627 c1904.5513 -1886.667 1899.8359 -1891.4082 1894.9487 -1896.2959 c1890.0991 -1901.1445 1885.2363 -1905.8936 1881.2803 -1911.5283 c1877.3926 -1917.0664 1872.832 -1921.8525 1869.4824 -1927.7949 c1865.8774 -1934.1885 1861.915 -1941.8271 1859.9175 -1948.8848 c1858.1846 -1955.0059 1854.7153 -1960.5752 1853.1143 -1966.7461 c1852.3682 -1969.6201 1852.1367 -1972.1768 1850.668 -1974.8008 c1848.9307 -1977.9043 1847.8379 -1981.4121 1846.8892 -1984.8193 c1845.376 -1990.2549 1845.8491 -1995.5371 1844.8652 -2000.957 c1843.6357 -2007.7305 1842.8755 -2014.5508 1842.2969 -2021.4082 c1841.1016 -2035.5801 1841.1729 -2050 1841.1724 -2064 c1841.1724 -2064.875 1841.3354 -2065.6494 1841.6128 -2066.333 C1840.2959 -2066.4043 1838.9834 -2066.4609 1837.6826 -2066.4668 c1826.3594 -2066.5225 1814.5718 -2068.3584 1803.3896 -2070.1123 c1793.0513 -2071.7334 1783.0908 -2075.9629 1773.6528 -2080.3125 c1768.6699 -2082.6074 1763.3682 -2084.0547 1758.3594 -2086.3691 c1753.2422 -2088.7324 1748.4692 -2092.7148 1742.6621 -2093.0254 c1734.3242 -2093.4717 1734.2813 -2106.4746 1742.6621 -2106.0254 c1754.083 -2105.4141 1762.7158 -2097.3887 1773.4897 -2094.4063 c1777.8667 -2093.1953 1781.7451 -2090.5918 1786.1416 -2089.3457 c1788.6499 -2088.6348 1790.8989 -2086.9248 1793.4219 -2086.083 c1796.1411 -2085.1758 1798.9648 -2084.6211 1801.7041 -2083.7803 c1806.9331 -2082.1758 1812.5454 -2081.9355 1817.9531 -2081.3984 c1823.9785 -2080.7998 1829.8599 -2079.6563 1835.9268 -2079.4912 c1847.5278 -2079.1768 1859.3003 -2077.2881 1869.6953 -2083.6299 c1873.3696 -2085.8711 1879.5923 -2085.4229 1883.7744 -2086.0684 c1888.9521 -2086.8662 1892.2754 -2088.6992 1896.29 -2091.9082 c1904.7588 -2098.6758 1914.4727 -2101.0879 1924.9268 -2103.0205 c1927.0791 -2103.4189 1929.25 -2103.6973 1931.4004 -2104.1074 c1933.8164 -2104.5684 1935.8926 -2106.5068 1938.0156 -2107.668 c1942.6865 -2110.2246 1949.0781 -2109.8008 1954.2188 -2109.8301 c1965.3291 -2109.8926 1976.6152 -2110.7607 1987.3047 -2107.0586 c1995.1758 -2104.333 1991.793 -2091.7725 1983.8496 -2094.5234 c1973.7988 -2098.0039 1963.1289 -2096.8809 1952.6826 -2096.8213 c1947.4063 -2096.791 1944.1025 -2096.2217 1939.6367 -2093.4063 c1935.0977 -2090.5449 1929.0957 -2090.9502 1924.0459 -2089.4619 c1921.917 -2088.834 1919.5947 -2088.9199 1917.4097 -2088.2949 c1915.0234 -2087.6143 1912.5361 -2086.6992 1910.2656 -2085.6953 c1905.978 -2083.7998 1902.5547 -2080.1963 1898.7598 -2077.5293 c1894.9502 -2074.8525 1890.1333 -2073.9795 1885.6284 -2073.2852 c1882.9961 -2072.8789 1880.3428 -2072.6191 1877.7041 -2072.2578 c1875.1006 -2071.9004 1872.9966 -2070.5508 1870.5806 -2069.5938 c1865.9736 -2067.7715 1861.4702 -2066.4355 1856.5288 -2065.9707 c1855.7471 -2065.8975 1854.9614 -2065.8506 1854.1724 -2065.8242 c1854.0859 -2065.8203 1853.998 -2065.8232 1853.9111 -2065.8203 C1854.0757 -2065.2676 1854.1724 -2064.6641 1854.1724 -2064 C1854.1733 -2064 1854.2075 -2031.7813 1855.8223 -2015.7168 c1856.5576 -2008.4043 1857.7002 -2001.3477 1858.126 -1994.0156 c1858.5176 -1987.2734 1862.6514 -1982.1084 1864.4419 -1975.9443 c1866.1826 -1969.9521 1867.5698 -1964.2578 1870.0479 -1958.4629 c1873.0313 -1951.4883 1875.7197 -1944.4561 1879.0225 -1937.6064 c1884.873 -1925.4727 1894.6963 -1914.9307 1904.1411 -1905.4863 c1924.5488 -1885.0781 1950.6279 -1869.9658 1978.8232 -1863.0801 c1985.3799 -1861.4785 1992.1621 -1860.5039 1998.8613 -1859.748 c2006.4658 -1858.8916 2014.1631 -1859.4072 2021.793 -1858.6816 c2025.3232 -1858.3467 2028.8418 -1858.0967 2032.3887 -1858.0498 c2035.457 -1858.0088 2038.542 -1859.5889 2041.3633 -1860.624 c2048.0518 -1863.0781 2056.6719 -1862.6426 2062.4756 -1866.8926 c2073.4199 -1874.9063 2086.8145 -1878.4912 2098.1514 -1885.8701 c2104.3066 -1889.876 2111.0518 -1892.791 2117.2246 -1896.8633 c2123.5908 -1901.0635 2130.7656 -1905.2539 2136.0713 -1910.7656 c2140.6025 -1915.4736 2145.4219 -1919.9023 2149.9199 -1924.626 c2151.4727 -1926.2559 2152.0811 -1930.374 2152.9785 -1932.4805 c2154.2578 -1935.4854 2156.5576 -1938.0977 2158.8389 -1940.3799 c2160.8135 -1942.3555 2163.418 -1944.3174 2164.8535 -1946.7031 c2165.6162 -1947.9707 2165.0059 -1949.6426 2165.9463 -1950.9834 c2166.8643 -1952.293 2167.8105 -1953.5801 2168.8096 -1954.8301 c2170.3955 -1956.8135 2173.8301 -1959.5928 2174.4756 -1962.083 c2175.4785 -1965.9502 2177.7402 -1968.1631 2180.7217 -1970.6445 c2185.2559 -1974.4199 2185.8779 -1980.3057 2188.7197 -1985.1436 c2191.8701 -1990.5088 2199.3564 -1995.5771 2204.8613 -1998.1367 c2211.042 -2001.0088 2217.4102 -2000.7285 2224.002 -2001.6484 c2231.7969 -2002.7344 2239.6738 -2002.1973 2247.4707 -2001.332 c2254.6396 -2000.5352 2262.0498 -1999.4893 2268.9287 -1997.2764 c2275.6621 -1995.1104 2281.6523 -1991.1826 2287.4131 -1987.1865 c2292.6533 -1983.5518 2298.1738 -1980.5127 2303.1426 -1976.4785 c2308.5205 -1972.1113 2312.8779 -1966.6016 2317.0293 -1961.1025 c2320.1738 -1956.9385 2323.3516 -1952.7725 2326.4609 -1948.5684 c2329.4883 -1944.4756 2331.3574 -1939.665 2334.2109 -1935.418 c2339.9785 -1926.8311 2341.7285 -1916.7266 2342.3652 -1906.5469 C2347.1504 -1904.5703 2347.2051 -1896.626 2342.5254 -1894.5186 C2342.4209 -1894.3447 2342.3135 -1894.1719 2342.207 -1894 c2339.3711 -1889.4268 2335.9736 -1885.3066 2332.4834 -1881.1504 c2330.3975 -1878.665 2328.2275 -1876.3506 2326.0889 -1873.916 c2323.957 -1871.4893 2322.959 -1868.2422 2320.748 -1865.7148 c2318.8799 -1863.5801 2316.2959 -1861.5098 2314.0098 -1859.8418 c2311.3535 -1857.9043 2309.3066 -1855.2871 2306.6396 -1853.3418 c2300.8145 -1849.0918 2297.8271 -1841.7705 2296.4219 -1835.0264 c2295.6963 -1831.5459 2296.1191 -1827.9824 2295.4883 -1824.5176 c2294.874 -1821.1406 2294.2139 -1817.7627 2293.7578 -1814.3594 c2292.877 -1807.791 2292.9502 -1801.415 2295.0205 -1795.085 c2296.1045 -1791.7715 2298.4316 -1789.582 2300.4385 -1786.8555 c2302.2617 -1784.3789 2303.5098 -1781.8223 2304.6992 -1778.9961 c2307.1992 -1773.0605 2310.8027 -1768.1494 2313.8115 -1762.4717 c2314.1113 -1761.9063 2314.3125 -1761.3467 2314.4453 -1760.7969 C2316.8291 -1762.9922 2319.6094 -1764.6572 2322.4766 -1766.248 c2326.8896 -1768.6973 2330.252 -1772.585 2334.0674 -1775.8555 c2338.7539 -1779.8721 2343.333 -1782.8975 2346.4453 -1788.3037 c2349.1875 -1793.0645 2351.9063 -1797.8457 2355.0908 -1802.3252 c2358.5742 -1807.2246 2360.7285 -1812.2539 2362.7988 -1817.877 c2364.6904 -1823.0127 2365.0371 -1828.1602 2366.4023 -1833.4043 c2367.0264 -1835.8018 2367.8955 -1838.1396 2368.6123 -1840.5098 c2369.3662 -1843.0029 2369.2363 -1846.0977 2369.6182 -1848.6914 c2369.9893 -1851.208 2369.9512 -1853.6777 2370.7891 -1856.0996 c2371.5752 -1858.3711 2372.4336 -1860.5166 2372.5488 -1862.9365 c2372.9443 -1871.2822 2385.9463 -1871.3203 2385.5488 -1862.9365 c2385.5215 -1862.3672 2385.4658 -1861.8066 2385.3984 -1861.25 C2385.6523 -1861.3799 2385.9102 -1861.5039 2386.1777 -1861.6133 c2392.3506 -1864.1367 2399.1143 -1863.7227 2404.8672 -1867.2832 c2408.2979 -1869.4063 2412.9678 -1870.4482 2416.7197 -1871.958 c2420.501 -1873.4785 2424.2568 -1875.0645 2428.0059 -1876.6611 c2435.3877 -1879.8047 2439.957 -1884.6885 2445.4209 -1890.4033 c2451.0684 -1896.3115 2456.4531 -1902.7617 2461.6113 -1909.1133 C2460.5957 -1910.209 2459.9434 -1911.6738 2459.126 -1912.9063 c2458.0098 -1914.5869 2456.2715 -1916.0137 2454.8242 -1917.3984 c2451.9434 -1920.1514 2449.7813 -1921.957 2445.8223 -1922.834 c2441.8496 -1923.7148 2437.6074 -1923.374 2433.5801 -1924.0156 c2418.4756 -1926.4209 2401.0225 -1933.8545 2386.125 -1926.9092 c2382.8271 -1925.3711 2379.71 -1926.6445 2377.877 -1928.8613 C2375.2578 -1928.8477 2372.6074 -1930.1914 2371.5166 -1933.3242 c2370.1787 -1937.1641 2368.7305 -1940.9727 2366.8623 -1944.582 c2364.9609 -1948.2549 2364.2939 -1952.3633 2362.6191 -1956.0947 c2358.7373 -1964.7471 2352.3662 -1972.208 2346.8682 -1979.8486 c2337.0947 -1993.4287 2326.3896 -2016.3613 2306.9336 -2017.1143 c2298.5781 -2017.4375 2298.5469 -2030.4385 2306.9336 -2030.1143 c2329.3525 -2029.2471 2342.9336 -2008.9736 2354.3857 -1992.3135 c2360.708 -1983.1172 2367.9004 -1974.083 2373.0996 -1964.1836 c2375.293 -1960.0068 2376.1729 -1955.418 2378.0879 -1951.1436 c2379.8066 -1947.3047 2381.5107 -1943.502 2383.0156 -1939.5723 C2391.5371 -1942.7344 2400.2949 -1943.0898 2409.4619 -1941.8496 c2419.1191 -1940.543 2428.6563 -1937.3027 2438.332 -1936.4805 c2443.0527 -1936.0791 2447.7217 -1935.9336 2452.3008 -1934.5928 c2457.1699 -1933.167 2460.4199 -1929.9395 2464.0166 -1926.5908 c2467.3809 -1923.457 2469.6133 -1919.5244 2472.7617 -1916.2939 c2475.3838 -1913.6035 2478.3613 -1910.2588 2478.9404 -1906.415 c2479.4688 -1902.915 2478.1172 -1899.4424 2474.4004 -1898.4199 cf*u1 D2018.7275 -1995.2451 m2023.7324 -1979.2881 2010.8447 -1967.5625 1995.4834 -1967.7949 c1987.7051 -1967.9131 1980.7998 -1970.2314 1973.5234 -1972.5596 c1966.375 -1974.8457 1961.8242 -1980.7256 1961.3701 -1988.1338 C1961.2383 -1988.3145 1961.1094 -1988.5029 1960.9873 -1988.7051 c1951.3535 -2004.707 1974.5908 -2013.8994 1986.4209 -2014.8857 c1998.9219 -2015.9277 2014.8564 -2007.5889 2018.7275 -1995.2451 cf0 D2006.1914 -1991.7891 m2004.5732 -1997.7363 1995.7744 -2000.6689 1990.5322 -2001.749 c1987.9063 -2002.29 1969.8818 -1999.1377 1972.2119 -1995.2656 c1972.9551 -1994.0303 1973.2324 -1992.8174 1973.1729 -1991.6875 C1973.8408 -1990.7549 1974.2832 -1989.5928 1974.3652 -1988.1895 c1974.5215 -1985.5059 1977.5654 -1984.8467 1979.7139 -1984.3359 c1984.0547 -1983.3047 1987.8496 -1981.4375 1992.4287 -1980.9746 c1996.2412 -1980.5889 2000.9121 -1980.2285 2004.0967 -1982.7949 c2007.335 -1985.4043 2007.2002 -1988.084 2006.1914 -1991.7891 cf*U2910.8096 -2159.9268 m2912.2129 -2157.8486 2913.1719 -2155.4756 2913.7891 -2152.9844 c2914.2197 -2151.2393 2914.1396 -2149.415 2914.6289 -2147.6855 c2915.3613 -2145.0957 2916.5967 -2142.6211 2917.6309 -2140.1445 c2919.5117 -2135.6445 2920.2129 -2130.7637 2922.1172 -2126.2617 c2923.0293 -2124.1045 2924.1006 -2122.127 2924.7617 -2119.8682 c2925.6016 -2116.998 2925.9043 -2114.293 2927.4258 -2111.6602 c2931.6299 -2104.3887 2920.3945 -2097.8457 2916.2012 -2105.0996 c2913.792 -2109.2656 2913.6436 -2113.9355 2911.6064 -2118.1299 c2909.457 -2122.5547 2907.9141 -2127.2012 2906.6895 -2131.9551 c2905.5967 -2136.1982 2903.5098 -2140.0957 2902.0938 -2144.2295 c2900.7539 -2148.1396 2901.8486 -2151.5713 2898.2402 -2154.3906 c2896.1426 -2156.0293 2895.6514 -2158.0693 2896.1621 -2159.9268 C2910.8096 -2159.9268 Lf3098.9385 -1960.1797 m3094.5156 -1960.209 3090.7988 -1961.7256 3086.5195 -1962.2764 c3081.5215 -1962.9199 3076.4678 -1962.3135 3071.5156 -1963.2588 c3061.835 -1965.1064 3051.9727 -1965.6162 3042.3555 -1967.873 c3023.374 -1972.3262 3004.1338 -1980.999 2987.5322 -1991.0947 c2979.0898 -1996.2285 2971.3086 -2003.0742 2963.8037 -2009.4912 c2956.6475 -2015.6104 2950.9023 -2022.8887 2946.332 -2031.1016 c2941.3496 -2040.0557 2937.4424 -2049.6436 2933.4072 -2059.0469 c2929.4111 -2068.3574 2927.0645 -2078.3076 2923.1367 -2087.6738 c2921.7637 -2090.9482 2924.5908 -2094.8213 2927.6758 -2095.6699 c2931.4258 -2096.7012 2934.3027 -2094.3955 2935.6719 -2091.1309 c2939.1602 -2082.8125 2941.0957 -2073.8613 2944.6328 -2065.6084 c2948.4609 -2056.6758 2952.2988 -2047.7314 2956.7842 -2039.1035 c2960.9258 -2031.1367 2966.2617 -2024.5957 2972.9961 -2018.6836 c2980.0605 -2012.4814 2987.582 -2006.2793 2995.6133 -2001.3955 c3010.96 -1992.0635 3028.4268 -1984.9014 3045.8125 -1980.4082 c3054.792 -1978.0869 3064.166 -1977.5527 3073.3008 -1976.0859 c3077.6504 -1975.3867 3082.125 -1975.6934 3086.5195 -1975.2764 c3090.7871 -1974.8711 3094.6855 -1973.208 3098.9385 -1973.1797 c3107.3184 -1973.124 3107.3242 -1960.124 3098.9385 -1960.1797 cf3371.7559 -2097.0518 m3365.9258 -2098.2051 3359.2324 -2096.9219 3353.3105 -2096.7461 c3346.3408 -2096.5391 3338.3809 -2096.041 3331.709 -2093.9805 c3325.4434 -2092.0439 3318.7764 -2091.6855 3312.4385 -2090.002 c3308.4873 -2088.9521 3308.3877 -2090.2012 3306.7275 -2086.8809 c3305.1064 -2083.6396 3303.7344 -2081.2061 3301.0176 -2078.7607 c3296.6484 -2074.8281 3291.625 -2071.6357 3286.8594 -2068.2188 c3284.8447 -2066.7744 3283.2715 -2064.1533 3281.5508 -2062.3613 c3279.2939 -2060.0098 3276.6611 -2058.4092 3273.7783 -2056.9688 c3267.1719 -2053.666 3262.9912 -2048.4746 3257.9727 -2043.1699 c3253.8604 -2038.8232 3251.1855 -2033.5146 3247.4248 -2028.8721 c3245.8701 -2026.9531 3244.3232 -2025.1113 3242.4883 -2023.4512 c3241.3389 -2022.4121 3240.0469 -2021.5107 3238.8125 -2020.5781 c3238.6924 -2020.4873 3236.0215 -2017.958 3236.6631 -2019.0674 c3233.2969 -2013.251 3227.168 -2009.1699 3222.4902 -2004.4961 c3217.8066 -1999.8164 3213.2324 -1996.9795 3207.2764 -1994.1963 c3204.2822 -1992.7969 3201.3945 -1991.2471 3198.6191 -1989.4531 c3195.7842 -1987.6211 3193.6455 -1984.9424 3190.8936 -1982.9902 c3185.6777 -1979.292 3180.374 -1978.4893 3174.2451 -1977.3926 c3170.876 -1976.79 3167.4541 -1976.6631 3164.041 -1976.6289 c3160.6328 -1976.5957 3156.9512 -1974.5508 3153.8047 -1973.3926 c3147.3164 -1971.002 3140.6025 -1970.4111 3133.7363 -1970.3115 c3127.166 -1970.2168 3121.9775 -1969.1602 3115.8496 -1966.7383 c3108.0439 -1963.6523 3104.6914 -1976.2295 3112.3926 -1979.2734 c3117.8242 -1981.4209 3123.0449 -1982.918 3128.9023 -1983.2705 c3135.7129 -1983.6807 3142.0498 -1983.2285 3148.6611 -1985.3379 c3152.0723 -1986.4258 3155.3691 -1987.8418 3158.7822 -1988.9297 c3162.1211 -1989.9941 3165.6973 -1989.5957 3169.1563 -1989.7852 c3176.0957 -1990.166 3181.6523 -1991.7256 3186.7168 -1996.5313 c3191.1621 -2000.748 3196.7178 -2003.5537 3202.2109 -2006.1201 c3205.4248 -2007.6221 3208.2207 -2008.8867 3210.8535 -2011.3027 c3213.3701 -2013.6133 3215.6924 -2016.127 3218.2109 -2018.4375 c3220.7383 -2020.7568 3223.4111 -2022.8037 3225.4385 -2025.6289 c3227.415 -2028.3828 3229.4912 -2029.8398 3232.251 -2031.8027 c3236.917 -2035.1221 3239.9141 -2040.5049 3242.9453 -2045.2158 c3246.248 -2050.3477 3250.8457 -2054.6191 3254.9922 -2059.0586 c3257.1338 -2061.3525 3259.8154 -2064.4932 3262.6621 -2065.916 c3265.4824 -2067.3262 3268.8789 -2068.502 3271.2949 -2070.541 c3273.4063 -2072.3252 3275.1152 -2074.6084 3276.9482 -2076.6641 c3278.8994 -2078.8535 3281.6768 -2080.4365 3284.0664 -2082.1084 c3286.7285 -2083.9707 3289.3457 -2085.8516 3291.8252 -2087.9531 c3294.3916 -2090.1279 3295.5449 -2093.5283 3297.0205 -2096.4785 c3299.7324 -2101.9043 3307.4238 -2102.2412 3312.4863 -2103.4063 c3319.417 -2105.001 3326.7158 -2106.5781 3333.7305 -2107.5957 c3340.8496 -2108.6289 3347.959 -2109.5869 3355.1563 -2109.8008 c3361.877 -2110 3368.5547 -2110.9053 3375.2109 -2109.5869 c3383.4316 -2107.96 3379.9424 -2095.4307 3371.7559 -2097.0518 cf3519.7813 -1986.9814 m3512.7256 -1989.1885 3505.3291 -1989.835 3498.2734 -1992.042 c3490.8027 -1994.3779 3485.1523 -1999.0781 3478.6807 -2003.2197 c3472.7402 -2007.0205 3465.9121 -2009.0391 3460.1172 -2013.1387 c3453.9922 -2017.4727 3450.6982 -2023.6494 3445.9238 -2029.2148 c3441.1016 -2034.8369 3437.7686 -2041.7695 3433.3799 -2047.7773 c3431.2754 -2050.6582 3428.5195 -2052.9824 3426.3916 -2055.8691 c3425.5098 -2057.0664 3424.7471 -2058.2422 3424.0488 -2059.5547 c3423.1816 -2061.1855 3423.1016 -2061.1465 3421.6504 -2063.2383 c3419.6924 -2066.0596 3418.959 -2069.4297 3416.7432 -2072.1143 c3414.4707 -2074.8672 3411.582 -2077.1289 3408.8711 -2079.4248 c3404.167 -2083.4082 3397.6436 -2088.8467 3391.1953 -2089.2285 c3382.8652 -2089.7217 3382.8174 -2102.7246 3391.1953 -2102.2285 c3404.5674 -2101.4375 3417.2871 -2090.8115 3425.9355 -2081.3066 c3430.5605 -2076.2246 3433.0547 -2069.3564 3436.7314 -2063.6309 c3438.5703 -2060.7686 3441.4404 -2058.5215 3443.501 -2055.7988 c3446.0039 -2052.4902 3448.3301 -2049.0791 3450.5547 -2045.5791 c3454.3359 -2039.6348 3458.5039 -2034.084 3462.6543 -2028.3848 c3466.9844 -2022.4395 3474.5986 -2019.8271 3480.9658 -2016.7646 c3487.75 -2013.502 3493.1514 -2007.7451 3500.2119 -2005.0293 c3507.5889 -2002.1914 3515.7109 -2001.8711 3523.2383 -1999.5166 c3531.2109 -1997.0234 3527.8047 -1984.4717 3519.7813 -1986.9814 cf3696.5684 -2081.8701 m3688.0342 -2080.4932 3679.9922 -2077.3477 3671.7695 -2074.7998 c3665.3438 -2072.8086 3658.5908 -2069.2969 3653.5146 -2064.9375 c3647.6338 -2059.8877 3641.0352 -2056.1191 3635.5693 -2050.5049 c3629.3896 -2044.1572 3622.1709 -2037.1504 3617.3418 -2029.7305 c3615.0684 -2026.2393 3613.7949 -2022.2998 3611.25 -2019.0186 c3608.9102 -2016.002 3606.2969 -2013.3887 3603.2793 -2011.0488 c3600.3193 -2008.7539 3597.498 -2006.3799 3594.375 -2004.293 c3591.4727 -2002.3545 3589.291 -1999.6504 3586.46 -1997.6328 c3580.6094 -1993.4609 3572.6504 -1990.7754 3565.793 -1988.8135 c3557.2236 -1986.3623 3548.1016 -1985.5537 3539.2217 -1985.4834 c3530.8359 -1985.417 3530.8418 -1998.417 3539.2217 -1998.4834 c3554.1006 -1998.6016 3571.4561 -2001.1973 3582.7031 -2011.6748 c3588.1816 -2016.7793 3594.8984 -2020.1484 3600.041 -2025.7256 c3602.7363 -2028.6494 3604.0078 -2032.9121 3606.1162 -2036.292 c3608.4746 -2040.0732 3611.4629 -2043.0742 3614.4121 -2046.3818 c3619.8154 -2052.4395 3625.0215 -2058.8047 3631.1006 -2064.2021 c3636.5459 -2069.0371 3642.7148 -2073.1211 3648.4512 -2077.5918 c3653.8906 -2081.8311 3661.6914 -2085.3848 3668.3135 -2087.3359 c3676.5879 -2089.7734 3684.5547 -2093.0254 3693.1113 -2094.4053 c3701.3105 -2095.7285 3704.8271 -2083.2021 3696.5684 -2081.8701 cf3788.9785 -2087.4717 m3785.6055 -2089.4756 3781.8545 -2089 3778.0518 -2089 C3763.791 -2089 L3759.4258 -2089 3755.167 -2088.5664 3750.833 -2088.1221 c3746.249 -2087.6523 3741.4717 -2088.6426 3737.3418 -2086.2637 c3730.0635 -2082.0703 3723.5195 -2093.3633 3730.7793 -2097.5449 c3736.0723 -2100.5938 3741.3408 -2100.8848 3747.3086 -2100.998 c3752.8311 -2101.1035 3758.251 -2102.2285 3763.791 -2102.2285 c3773.96 -2102.2285 3786.415 -2104.2344 3795.5391 -2098.8105 c3802.7363 -2094.5322 3796.2021 -2083.1768 3788.9785 -2087.4717 cf2804.1514 -1895.6553 m2799.04 -1895.6514 2794.0166 -1895.7793 2789.1406 -1894.0801 c2783.6934 -1892.1826 2778.1973 -1890.2031 2772.8789 -1887.9805 c2766.623 -1885.3672 2760.2969 -1884.4551 2753.5439 -1884.2881 c2746.4648 -1884.1133 2739.4346 -1882.8926 2732.3594 -1882.4014 c2719.2266 -1881.4902 2706.252 -1881.7305 2693.1699 -1882.668 c2686.79 -1883.125 2680.3545 -1882.5957 2674.0254 -1883.5068 c2667.7715 -1884.4072 2661.5449 -1885.3027 2655.2217 -1885.5156 c2643.1631 -1885.9219 2631.8193 -1889.9736 2620.6943 -1894.3135 c2614.7607 -1896.627 2608.9063 -1899.1465 2602.6563 -1900.4326 c2596.3438 -1901.7314 2589.9883 -1901.9766 2583.666 -1903.1631 c2570.9814 -1905.543 2558.2617 -1909.3379 2545.4219 -1910.5879 c2532.4531 -1911.8496 2520.2881 -1914.2129 2507.6348 -1917.3965 c2499.5098 -1919.4404 2502.958 -1931.9785 2511.0918 -1929.9316 c2516.5332 -1928.5625 2521.9609 -1927.1426 2527.4404 -1925.9307 c2534.0801 -1924.4619 2540.5869 -1924.0586 2547.3193 -1923.4033 c2560.1543 -1922.1533 2572.7354 -1918.333 2585.4102 -1916.0146 c2591.1289 -1914.9688 2596.9004 -1914.6689 2602.6299 -1913.6563 c2609.0586 -1912.5205 2614.918 -1910.4473 2620.9844 -1908.0879 c2632.6416 -1903.5527 2644.2041 -1898.8867 2656.8516 -1898.46 c2662.5371 -1898.2686 2668.2061 -1897.375 2673.8291 -1896.5723 c2680.2227 -1895.6592 2686.7207 -1896.0352 2693.1699 -1895.668 c2699.3066 -1895.3174 2705.2373 -1894.7266 2711.4082 -1894.7588 c2718.3984 -1894.7939 2725.3828 -1894.9736 2732.3594 -1895.4014 c2738.7686 -1895.7949 2745.2529 -1897.2627 2751.6465 -1897.2715 c2758.6367 -1897.2803 2764.4756 -1898.4648 2770.8994 -1901.1484 c2776.2148 -1903.3691 2781.7939 -1905.2598 2787.2402 -1907.1582 c2792.4824 -1908.9854 2798.6855 -1908.6504 2804.1514 -1908.6553 c2812.5352 -1908.6621 2812.5342 -1895.6621 2804.1514 -1895.6553 cf3102.2715 -1884.501 m3090.6445 -1886.6484 3079.1094 -1889.3311 3067.3027 -1890.3018 c3055.3594 -1891.2842 3042.9639 -1891.04 3030.9912 -1890.6543 c3019.9434 -1890.2979 3009.7324 -1886.8584 2998.8311 -1885.8506 c2992.7764 -1885.291 2986.6934 -1885.7793 2980.6445 -1885.1338 c2974.3613 -1884.4629 2968.251 -1884.2686 2961.9316 -1884.2686 c2950.5889 -1884.2686 2939.5381 -1883.9238 2928.3477 -1886.0195 c2916.6748 -1888.2051 2905.5313 -1892.3369 2893.9121 -1894.6826 c2883.1953 -1896.8467 2871.4961 -1895.6553 2860.5859 -1895.6553 c2848.9004 -1895.6553 2837.3223 -1896.8066 2825.6592 -1896.9209 c2817.2813 -1897.0029 2817.2725 -1910.0029 2825.6592 -1909.9209 c2836.7334 -1909.8125 2847.7236 -1908.6553 2858.8174 -1908.6553 c2870.377 -1908.6553 2882.6729 -1909.8271 2894.0693 -1907.835 c2905.6094 -1905.8174 2916.6455 -1901.8408 2928.0752 -1899.3174 c2939.8984 -1896.707 2951.6953 -1897.2686 2963.7383 -1897.2686 c2969.4463 -1897.2686 2974.9727 -1897.4395 2980.6445 -1898.1338 c2986.6689 -1898.8711 2992.7783 -1898.4346 2998.8311 -1898.8506 c3004.4434 -1899.2363 3009.7676 -1901.2441 3015.2988 -1902.168 c3021.0762 -1903.1318 3026.9316 -1903.5234 3032.7793 -1903.7119 c3044.8066 -1904.0996 3057.2021 -1904.1328 3069.1953 -1903.1465 c3081.5137 -1902.1328 3093.5996 -1899.2764 3105.7266 -1897.0361 c3113.9629 -1895.5156 3110.4648 -1882.9873 3102.2715 -1884.501 cf3137.6445 -1884.9951 m3147.3203 -1878.3477 3161.624 -1878.5215 3172.873 -1876.9521 c3179.1172 -1876.0811 3185.3555 -1875.1807 3191.6055 -1874.3555 c3198.3477 -1873.4648 3205.373 -1872 3212.1719 -1872 C3253.0586 -1872 L3259.373 -1872 3265.4766 -1872.54 3271.752 -1873.1162 c3278.3467 -1873.7227 3285.167 -1873.2393 3291.7852 -1873.2393 c3298.3682 -1873.2393 3304.4082 -1871.7891 3311.0254 -1873.002 c3317.5703 -1874.2031 3325.0801 -1873.2324 3331.7324 -1873.2324 c3344.1777 -1873.2324 3356.208 -1874.7988 3368.498 -1876.4902 c3381.543 -1878.2852 3394.2451 -1875.3477 3406.9668 -1872.7324 c3419.708 -1870.1133 3431.9404 -1864.9658 3444.7969 -1862.877 c3453.0547 -1861.5352 3449.5391 -1849.0098 3441.3398 -1850.3418 c3429.042 -1852.3398 3417.2383 -1857.0938 3405.1123 -1859.8516 c3398.9814 -1861.2461 3392.751 -1862.501 3386.543 -1863.4893 c3379.1465 -1864.668 3372.1758 -1863.8105 3364.8564 -1862.7822 c3352.5449 -1861.0527 3340.3633 -1860.2305 3327.9365 -1860.2305 c3320.9902 -1860.2305 3314.2363 -1860.1797 3307.334 -1859.4336 c3300.5371 -1858.6982 3293.5039 -1860.2305 3286.6582 -1860.2305 c3274.291 -1860.2305 3262.0859 -1858.9648 3249.7275 -1858.9648 c3235.5156 -1858.9648 3220.5801 -1857.6748 3206.4814 -1859.4395 c3193.543 -1861.0596 3180.6328 -1862.8516 3167.7178 -1864.6533 c3155.625 -1866.3418 3141.502 -1866.6113 3131.082 -1873.7705 c3124.2217 -1878.4844 3130.7139 -1889.7568 3137.6445 -1884.9951 cf3713.8174 -1834.9268 m3702.8252 -1833.7705 3691.9434 -1831.7148 3680.8867 -1831.2031 c3668.6406 -1830.6367 3656.7129 -1828.1729 3644.6953 -1825.8477 c3633.9404 -1823.7676 3623.1436 -1822.21 3612.1846 -1821.7988 c3600.916 -1821.375 3589.9502 -1823.5156 3579.2012 -1826.71 c3574.2822 -1828.1719 3569.4033 -1829.7363 3564.4238 -1830.9854 c3559.3359 -1832.2617 3553.8926 -1831.6875 3548.6914 -1831.8428 c3537.6416 -1832.1719 3525.8203 -1834.5137 3515.1309 -1837.2295 c3510.373 -1838.4385 3505.5439 -1838.7061 3500.8027 -1840.2197 c3496.4082 -1841.623 3491.4736 -1842.2354 3486.9229 -1842.9404 c3477.6025 -1844.3828 3468.3096 -1844.626 3460.0313 -1849.7314 c3452.9111 -1854.1211 3459.4355 -1865.3701 3466.5918 -1860.9561 c3473.998 -1856.3896 3483.252 -1856.5791 3491.6074 -1855.2852 c3496.3223 -1854.5557 3501.1875 -1853.7363 3505.7373 -1852.2832 c3510.5244 -1850.7549 3515.4531 -1850.5605 3520.2871 -1849.333 c3530.5801 -1846.7178 3541.7939 -1844.8838 3552.415 -1844.7666 c3557.6504 -1844.709 3562.749 -1844.7129 3567.8799 -1843.5205 c3572.8711 -1842.3613 3577.7559 -1840.7285 3582.6563 -1839.2461 c3593.0283 -1836.1074 3603.1211 -1834.458 3613.9736 -1834.8652 c3625.124 -1835.2852 3636.0107 -1837.3662 3646.9326 -1839.4883 c3658.1387 -1841.666 3669.4531 -1843.875 3680.8867 -1844.2031 c3691.9307 -1844.5195 3702.8496 -1846.7725 3713.8174 -1847.9268 c3722.1514 -1848.8037 3722.0664 -1835.7949 3713.8174 -1834.9268 cf*u1 D3832.2031 -1816.8369 m3828.1738 -1814.8809 3824.4141 -1817.2051 3822.959 -1820.3428 C3821.6494 -1820.665 3820.3418 -1821.0723 3819.0605 -1821.4004 c3815.248 -1822.377 3811.4766 -1823.4521 3807.7988 -1824.8564 c3802.1602 -1827.0098 3797.084 -1831.1143 3791.0127 -1831.665 c3787.6602 -1831.9688 3784.2227 -1831.248 3780.8711 -1831.1309 c3776.6016 -1830.9814 3772.0361 -1831.7031 3767.7979 -1832.123 c3760.3506 -1832.8613 3753 -1832.3965 3745 -1832.3965 c3737 -1832.3965 3737 -1845.3965 3745 -1845.3965 C3765.0313 -1845.3301 3774.9893 -1844.4043 v3784.7295 -1843.498 3793.8887 -1846.0469 3803.0625 -1841.4727 c3811.2578 -1837.3877 3819.168 -1834.7461 3828.0908 -1832.5127 c3835.3311 -1830.7012 3841.0879 -1821.1504 3832.2031 -1816.8369 cf0 D3822.4717 -1821.7793 m3821.9521 -1824.1416 3822.7607 -1826.6572 3825.6543 -1828.0615 c3820.1475 -1825.3887 3820.8633 -1823.2109 3822.4717 -1821.7793 Cf*U3104.8008 -1698.5195 m3100.418 -1699.9971 3096.0645 -1701.5566 3091.6348 -1702.8955 c3087.7246 -1704.0781 3083.8535 -1704.1699 3079.9404 -1705.0449 c3076.0078 -1705.9238 3072.5645 -1708.1523 3068.6982 -1709.3086 c3064.6016 -1710.5332 3059.7363 -1710.6523 3055.4766 -1711.1318 c3046.502 -1712.1406 3037.9551 -1715.9512 3028.9316 -1716.0117 c3018.9395 -1716.0781 3008.9863 -1717.2051 2998.9893 -1717.2646 c2990.6084 -1717.3145 2990.6035 -1730.3145 2998.9893 -1730.2646 c3008.4238 -1730.208 3017.8174 -1729.3242 3027.2432 -1729.043 c3031.8984 -1728.9053 3036.2988 -1728.623 3040.8535 -1727.5557 c3045.791 -1726.3984 3050.4082 -1724.7412 3055.4766 -1724.1318 c3060.0986 -1723.5762 3064.7207 -1723.0264 3069.3281 -1722.3682 c3074.04 -1721.6943 3077.8018 -1719.3564 3082.1758 -1717.8535 c3085.5811 -1716.6826 3089.874 -1716.8311 3093.4707 -1715.8906 c3098.4844 -1714.5801 3103.3525 -1712.708 3108.2578 -1711.0547 c3116.1572 -1708.3916 3112.7676 -1695.834 3104.8008 -1698.5195 cf3136.0918 -1709.79 m3145.084 -1706.2441 3154.3516 -1705.5566 3163.9141 -1705.1318 c3173.3867 -1704.7119 3182.7158 -1703.3604 3192.1621 -1702.6729 c3201.8838 -1701.9648 3211.7012 -1700.3672 3221.4297 -1700.251 c3231.9141 -1700.125 3242.0449 -1701.3643 3252.4883 -1699.668 c3260.7471 -1698.3271 3257.2305 -1685.8008 3249.0332 -1687.1328 c3239.3066 -1688.7129 3229.3838 -1687.1553 3219.5967 -1687.2725 c3209.918 -1687.3877 3200.0508 -1689.0986 3190.3711 -1689.8037 c3180.9336 -1690.4902 3171.6289 -1691.79 3162.1602 -1692.21 c3152.125 -1692.6553 3142.0557 -1693.54 3132.6348 -1697.2549 c3124.9307 -1700.293 3128.2832 -1712.8691 3136.0918 -1709.79 cf3460.0313 -1682.7275 m3453.9629 -1686.4209 3446.0039 -1686.4072 3439.1709 -1687.9258 c3431.21 -1689.6953 3423.7598 -1692.249 3415.5957 -1693.1563 c3397.2236 -1695.1982 3379.1484 -1694.709 3360.832 -1692.8066 c3352.3428 -1691.9248 3342.3984 -1693.0098 3334.2598 -1690.3662 c3326.584 -1687.873 3318.6123 -1686.6914 3310.7402 -1685.0303 c3302.4639 -1683.2842 3293.9287 -1682.9629 3285.5391 -1682.0635 c3278.0391 -1681.2588 3270.3086 -1683.3457 3262.9492 -1684.6025 c3254.6982 -1686.0117 3258.208 -1698.5381 3266.4063 -1697.1377 c3274.2832 -1695.793 3281.2354 -1694.6563 3289.2314 -1695.4434 c3297.7695 -1696.2842 3306.0078 -1697.5166 3314.4492 -1698.9922 c3322.4063 -1700.3828 3330.0508 -1703.2852 3338.0586 -1704.1162 c3347.5645 -1705.1025 3357.1113 -1705.3066 3366.6006 -1706.5117 c3384.166 -1708.7432 3403.0742 -1708.1563 3420.5771 -1705.4961 c3428.6787 -1704.2646 3436.2559 -1701.8779 3444.2539 -1700.0996 c3451.959 -1698.3877 3459.6699 -1698.166 3466.5918 -1693.9521 c3473.7402 -1689.6016 3467.2119 -1678.3564 3460.0313 -1682.7275 cf3576.7871 -1665.4346 m3562.1436 -1666.1094 3547.542 -1668.0781 3532.9961 -1669.8203 c3525.5547 -1670.7119 3518.2715 -1672.2529 3510.9248 -1673.7217 c3505.3809 -1674.8311 3500.752 -1677.877 3494.9404 -1678.0439 c3486.5762 -1678.2832 3486.5527 -1691.2842 3494.9404 -1691.0439 c3500.0117 -1690.8984 3505.2793 -1689.8916 3509.8477 -1687.6162 c3512.9395 -1686.0762 3516.708 -1685.792 3520.0742 -1685.1191 c3523.7861 -1684.377 3527.4971 -1683.4922 3531.2549 -1683.0313 c3545.7891 -1681.25 3560.3564 -1679.4365 3574.9756 -1678.5332 c3582.2148 -1678.085 3589.4658 -1678.0635 3596.6934 -1678.6904 c3603.8594 -1679.3125 3609.8291 -1682.0605 3616.2813 -1685.0088 c3619.377 -1686.4238 3622.2852 -1687.5049 3625.666 -1687.9727 c3628.6973 -1688.3916 3632.3037 -1687.873 3635.2051 -1688.7539 c3641.6895 -1690.7207 3648.2324 -1691.415 3654.9863 -1691.2334 c3670.1914 -1690.8232 3685.3965 -1687.0508 3700.2891 -1684.2607 c3714.709 -1681.5596 3729.2842 -1679.8525 3743.3789 -1675.6299 c3750.0254 -1673.6387 3756.0752 -1669.8027 3763.1592 -1669.5361 c3770.3369 -1669.2666 3777.4844 -1668.3672 3784.667 -1668.2715 c3791.5156 -1668.1807 3798.2461 -1667.208 3805.0547 -1668.3545 c3812.1465 -1669.5488 3819.2109 -1670.7031 3826.418 -1670.8018 c3834.8047 -1670.916 3834.7939 -1657.916 3826.418 -1657.8018 c3819.7178 -1657.71 3813.2285 -1656.6133 3806.6387 -1655.5039 c3799.8037 -1654.3525 3793.1475 -1654.9824 3786.2734 -1655.2471 c3779.1807 -1655.5215 3772.123 -1656.2441 3765.0322 -1656.5117 c3757.7764 -1656.7842 3751.7217 -1658.5127 3745.0078 -1661.2031 c3731.4707 -1666.627 3716.6689 -1668.3301 3702.3828 -1670.7441 c3687.2568 -1673.3008 3672.2266 -1677.1211 3656.8838 -1678.1426 c3650.0557 -1678.5977 3643.6377 -1677.7285 3637.1035 -1675.7461 c3634.1504 -1674.8496 3630.5625 -1675.6367 3627.4961 -1675.2119 c3624.1475 -1674.749 3621.1211 -1672.9961 3618.0977 -1671.5889 c3604.8867 -1665.4424 3591.1797 -1664.7705 3576.7871 -1665.4346 cf2874.4863 -1778.7188 m2884.5645 -1773.4316 2894.0459 -1765.0049 2901.4482 -1756.417 c2909.251 -1747.3643 2918.7129 -1740.8779 2927.7217 -1733.1201 c2936.458 -1725.5977 2944.6582 -1717.3281 2954.9629 -1711.9277 c2959.7607 -1709.4131 2962.5098 -1705.0752 2966.9385 -1702.1816 c2969.0918 -1700.7744 2971.2773 -1699.6406 2973.3086 -1698.0205 c2975.1152 -1696.5801 2977.0576 -1694.2441 2979.209 -1693.3418 c2982.4746 -1691.9727 2984.7803 -1689.0947 2983.749 -1685.3467 c2982.9004 -1682.2607 2979.0273 -1679.4336 2975.7539 -1680.8066 c2971.2363 -1682.7002 2968.082 -1685.8623 2964.1914 -1688.7246 c2962.2148 -1690.1787 2959.9824 -1691.1348 2958.0313 -1692.6465 c2955.6152 -1694.5176 2953.5332 -1696.7695 2951.377 -1698.9258 c2949.5205 -1700.7813 2946.2588 -1701.8145 2943.9941 -1703.1279 c2941.6279 -1704.502 2939.4688 -1706.2002 2937.3701 -1707.9453 c2932.3438 -1712.124 2926.9873 -1715.8721 2922.2773 -1720.4336 c2913.8301 -1728.6152 2903.5977 -1734.7246 2895.502 -1743.2793 c2886.9951 -1752.2686 2879.1104 -1761.626 2867.9258 -1767.4941 c2860.5 -1771.3896 2867.0713 -1782.6094 2874.4863 -1778.7188 cf3629.0508 -1550.6094 m3636.8057 -1550.1943 3643.2686 -1546.6738 3650.1367 -1543.3906 c3656.5615 -1540.3193 3663.2275 -1537.123 3668.9326 -1532.8682 c3671.4834 -1530.9668 3674.3457 -1530.374 3677.3369 -1529.4971 c3680.2754 -1528.6348 3683.21 -1526.9258 3685.9375 -1525.543 c3691.834 -1522.5508 3695.7393 -1517.8984 3696.2793 -1511.2148 c3696.9551 -1502.8535 3683.9492 -1502.9189 3683.2793 -1511.2148 c3683.0879 -1513.5801 3676.7188 -1515.6211 3674.8887 -1516.4814 c3672.627 -1517.5459 3670.125 -1517.9063 3667.8086 -1518.8643 c3664.9473 -1520.0469 3662.6758 -1521.4844 3660.1504 -1523.2441 c3655.9443 -1526.1768 3650.9873 -1528.6318 3646.3398 -1530.8594 c3640.9277 -1533.4531 3635.166 -1537.2822 3629.0508 -1537.6094 c3620.7129 -1538.0557 3620.6699 -1551.0576 3629.0508 -1550.6094 cf3745.4473 -1380.7266 m3736.4766 -1380.7266 3727.9297 -1385.5381 3718.8779 -1385.7871 c3718.2168 -1385.8057 3717.6133 -1385.9111 3717.0557 -1386.0762 C3717.1143 -1384.6201 3717.1543 -1383.1602 3717.1563 -1381.6934 c3717.168 -1374.9912 3718.6895 -1368.3984 3719.5254 -1361.7646 c3720.4551 -1354.3945 3720.1992 -1346.9805 3720.6582 -1339.5811 c3721.5781 -1324.7383 3725.0215 -1310.0391 3727.1338 -1295.3271 c3728.0859 -1288.6973 3727.6914 -1282.2012 3727.9785 -1275.5293 c3728.1191 -1272.2656 3729.0313 -1269.0547 3729.1729 -1265.7695 c3729.3477 -1261.7031 3729.5049 -1257.6543 3729.8057 -1253.5918 c3732.0459 -1223.3184 3729.7119 -1192.749 3730.1426 -1162.4336 c3730.1641 -1160.9355 3730.2168 -1159.1182 3730.8154 -1157.7139 c3732.2051 -1154.4551 3731.8232 -1150.7773 3728.4844 -1148.8213 c3725.7197 -1147.2021 3720.9814 -1147.8906 3719.5908 -1151.1533 c3717.2129 -1156.7305 3716.7695 -1162.3213 3717.0273 -1168.3213 c3717.3379 -1175.5273 3717 -1182.7441 3717 -1189.957 C3717 -1238.4854 L3717 -1245.9268 3716.5352 -1253.3057 3716.1035 -1260.7275 c3715.6816 -1267.9717 3714.7988 -1275.1182 3714.7988 -1282.3818 c3714.7988 -1297.0176 3711.1846 -1311.2197 3709.0977 -1325.6416 c3707.0439 -1339.8379 3707.8008 -1354.168 3705.5293 -1368.3242 c3703.2402 -1382.5957 3704.3691 -1397.2617 3700.7354 -1411.3809 c3699.8535 -1414.8076 3698.8193 -1418.1943 3697.8955 -1421.6104 c3697.0791 -1424.626 3696.9707 -1427.5889 3695.9492 -1430.5732 c3694.7207 -1434.1602 3694.6631 -1437.2168 3694.6631 -1440.9971 c3694.6631 -1445.415 3694.0381 -1449.8359 3694.0264 -1454.2813 c3694.0068 -1461.4473 3691.1035 -1467.8115 3690.7988 -1474.8857 c3690.5352 -1480.9814 3688.502 -1486.8301 3688.3623 -1492.9482 C3687.4385 -1493.9766 3686.9082 -1495.4238 3687.0742 -1497.2979 c3687.0918 -1497.5029 3687.1104 -1497.708 3687.1289 -1497.9131 c3687.3828 -1500.7949 3688.9219 -1503.4102 3691.9004 -1504.1807 c3691.9482 -1504.1934 3691.9961 -1504.2061 3692.0439 -1504.2178 c3694.7227 -1504.9111 3698.0859 -1503.8438 3699.3848 -1501.2305 c3701.3252 -1497.3242 3700.8574 -1493.4785 3701.5684 -1489.3467 c3702.7393 -1482.5322 3702.9961 -1475.0527 3705.1719 -1468.4805 c3707.4844 -1461.4922 3706.8027 -1453.9209 3707.1689 -1446.6904 c3707.542 -1439.3291 3708.5977 -1432.2148 3710.4375 -1425.0664 c3712.7305 -1416.1592 3714.7666 -1407.2646 3715.9805 -1398.2324 C3716.7988 -1398.6084 3717.7617 -1398.8174 3718.8779 -1398.7871 c3727.3818 -1398.5527 3735.3896 -1395.918 3743.6328 -1394.1201 c3747.8486 -1393.2012 3752.5332 -1393.7266 3756.834 -1393.7266 c3761.7754 -1393.7266 3766.709 -1393.6953 3771.6406 -1393.3516 c3780.5596 -1392.7305 3789.0928 -1391.9756 3798.0781 -1392.3604 c3807.9531 -1392.7832 3817.7939 -1393.668 3827.6836 -1393.7266 c3836.0693 -1393.7764 3836.0645 -1380.7764 3827.6836 -1380.7266 c3818.457 -1380.6719 3809.2617 -1379.9541 3800.0527 -1379.457 c3790.4131 -1378.9375 3781.207 -1379.4785 3771.6406 -1380.3516 c3762.9736 -1381.1436 3754.1406 -1380.7266 3745.4473 -1380.7266 cf*u1 D3350.5371 -1311.1279 m3339.6016 -1311.208 3328.7383 -1312.2998 3317.8154 -1312.4063 c3310.3281 -1312.4785 3309.5313 -1322.8623 3315.4307 -1325.0127 C3315.1416 -1325.7969 3315.0176 -1326.7129 3315.1113 -1327.7627 c3316.0205 -1337.9316 3325.4932 -1345.835 3333.6699 -1350.9297 c3338.3809 -1353.8643 3343.5469 -1356.7119 3348.7295 -1358.6768 c3353.7988 -1360.5986 3359.7305 -1361.4492 3363.8262 -1365.2539 c3366.082 -1367.3486 3368.752 -1367.4277 3370.9238 -1366.4121 C3372.1289 -1367.0156 3373.5732 -1367.2578 3375.2109 -1366.9248 c3382.5459 -1365.4355 3389.3574 -1364.4102 3396.8691 -1364.8242 c3404.0518 -1365.2207 3411.0703 -1366.0059 3418.2803 -1365.7842 c3425.5166 -1365.5615 3432.6865 -1365.0811 3439.9189 -1365.6836 c3447.3662 -1366.3047 3454.4199 -1369.293 3461.9248 -1369.9004 c3469.1855 -1370.4883 3476.915 -1367.9824 3484.0166 -1366.7559 c3491.5889 -1365.4482 3499.3145 -1366.0156 3506.96 -1365.6416 c3514.5957 -1365.2676 3522.0566 -1364.0791 3529.7334 -1364.0664 c3537.959 -1364.0518 3546.1777 -1364.5879 3554.4043 -1364.627 c3556.1953 -1364.6357 3557.6016 -1364.0459 3558.627 -1363.1172 C3561.666 -1362.8643 3564.5801 -1360.7773 3564.7002 -1356.8623 c3564.8369 -1352.4209 3566.1133 -1348.3604 3567.6289 -1344.2129 c3569.2285 -1339.832 3569.5625 -1334.9951 3570.2061 -1330.4111 c3571.4395 -1321.624 3571.6982 -1312.5908 3574.5889 -1304.1865 c3577.3242 -1296.2373 3564.7637 -1292.8525 3562.0537 -1300.7314 c3561.9971 -1300.8955 3561.9492 -1301.0605 3561.8945 -1301.2246 C3553.5518 -1301.9277 3545.3799 -1304.1533 3536.9883 -1304.0527 c3536.5156 -1304.0469 3536.043 -1304.0293 3535.5703 -1304.0117 C3535.2881 -1303.5283 3534.9258 -1303.0703 3534.4951 -1302.6426 C3534.4678 -1302.5469 3534.4365 -1302.4443 3534.3945 -1302.3193 C3534.2432 -1300.9551 3534.5176 -1299.5391 3534.1035 -1298.2012 c3533.0566 -1294.8105 3532.3164 -1291.3828 3531.8574 -1287.8643 c3531.0352 -1281.5811 3530.085 -1275.3525 3529.043 -1269.1016 c3527.9355 -1262.46 3526.3545 -1255.7334 3526.1348 -1248.9932 c3525.9023 -1241.8154 3525.5488 -1235.1299 3524.249 -1228.0371 c3523.0186 -1221.3213 3521.6211 -1214.6396 3520.5322 -1207.8975 c3519.3467 -1200.5586 3519.3926 -1193.1836 3518.7021 -1185.8076 c3517.4004 -1171.9141 3514.8125 -1158.1621 3512.6836 -1144.3818 c3510.6748 -1131.3789 3511.4375 -1118.2012 3509.1875 -1105.249 c3508.1816 -1099.46 3506.2168 -1093.877 3504.7861 -1088.1885 c3503.0723 -1081.376 3503.0234 -1074.2095 3502.3828 -1067.2412 c3501.0869 -1053.1318 3497.2959 -1039.4316 3493.2041 -1025.9136 c3492.2725 -1022.8369 3491.3252 -1019.7646 3490.3916 -1016.689 c3489.3193 -1013.1572 3489.4277 -1009.6187 3489.417 -1005.9614 c3489.4102 -1003.584 3489.3887 -1000.8853 3489.208 -998.1743 C3491.1543 -994.562 3492.4453 -990.9355 3492.585 -986.1636 c3492.8018 -978.7832 3482.7656 -977.918 3480.1836 -983.5137 C3479.8926 -983.5547 3479.5977 -983.6084 3479.2949 -983.6914 c3476.1807 -984.5483 3473.4209 -988.3989 3474.7559 -991.6875 c3475.2598 -992.9277 3475.6035 -994.2974 3475.8496 -995.7261 C3474.4824 -997.7729 3472.9785 -999.7671 3471.7734 -1001.8608 c3468.627 -1007.3252 3466.4268 -1013.3228 3463.0645 -1018.6533 c3459.9111 -1023.6538 3455.3984 -1027.5415 3452.7568 -1032.9565 c3449.9375 -1038.7354 3448.8477 -1045.3857 3447.7412 -1051.6597 c3446.5488 -1058.4307 3443.9316 -1064.7588 3442.4727 -1071.4683 c3440.9355 -1078.5352 3439.7705 -1085.5908 3437.9404 -1092.6025 c3436.1641 -1099.4063 3434.3311 -1106.1885 3433.2256 -1113.1416 c3432.0693 -1120.415 3432.6934 -1127.75 3430.7363 -1134.9375 c3429.8594 -1138.1563 3428.9014 -1140.9678 3428.3838 -1144.332 c3427.835 -1147.8965 3427.1738 -1151.4414 3426.4336 -1154.9717 c3424.9434 -1162.0723 3422.7803 -1168.9424 3419.9463 -1175.6182 c3417.1445 -1182.2207 3413.8652 -1188.6182 3411.5947 -1195.4297 c3409.083 -1202.9629 3406.7637 -1210.5645 3403.6709 -1217.8789 c3401.0322 -1224.1182 3399.375 -1230.7627 3397.1836 -1237.1719 c3394.9854 -1243.5996 3393.3623 -1249.999 3392.5566 -1256.749 c3391.6563 -1264.2842 3390.3027 -1271.4639 3389.2549 -1278.9932 c3388.1826 -1286.6953 3388.4912 -1295 3388.4912 -1302 c3388.4912 -1305.4063 3390.3535 -1307.5205 3392.668 -1308.3486 C3388.4971 -1308.5752 3384.332 -1308.9502 3380.1748 -1309.3418 c3370.2686 -1310.2734 3360.4961 -1311.0547 3350.5371 -1311.1279 cf0 D3401.4912 -1302 m3401.0605 -1287.6914 3402.0547 -1280.5518 v3403.0977 -1273.0586 3405.0137 -1265.9141 3405.4092 -1258.3418 c3405.7568 -1251.6699 3408.1426 -1245.1787 3410.2842 -1238.917 c3412.4902 -1232.4668 3414.0645 -1225.8271 3417.0508 -1219.6787 c3420.1855 -1213.2266 3421.8613 -1205.6748 3424.1299 -1198.8701 c3426.4102 -1192.0322 3429.7832 -1185.6055 3432.5371 -1178.9473 c3435.3047 -1172.2549 3437.3965 -1165.4932 3438.9688 -1158.4238 c3439.752 -1154.9033 3440.3486 -1151.3447 3440.9199 -1147.7852 c3441.54 -1143.916 3442.6563 -1140.6523 3443.6777 -1136.9023 c3445.5 -1130.21 3444.8398 -1123.332 3445.7617 -1116.5957 c3446.7129 -1109.6465 3448.6982 -1102.8301 3450.4756 -1096.0586 c3452.3164 -1089.0498 3453.5703 -1082.0156 3455.0078 -1074.9243 c3456.4883 -1067.6211 3459.2793 -1060.7783 3460.5762 -1053.416 c3461.6387 -1047.3892 3462.7578 -1041.0098 3466.0771 -1035.7817 c3469.248 -1030.7891 3473.6318 -1026.8564 3476.373 -1021.5596 c3476.8418 -1020.6528 3477.3008 -1019.7432 3477.7568 -1018.8325 C3478.5332 -1022.3208 3479.5703 -1025.7642 3480.668 -1029.3691 c3484.8066 -1042.959 3488.4902 -1056.6348 3489.7012 -1070.8252 c3490.248 -1077.2373 3490.5547 -1083.6797 3491.8682 -1089.9941 c3493.1797 -1096.3018 3495.3535 -1102.3877 3496.6523 -1108.7051 c3498.0781 -1115.6426 3497.75 -1122.916 3498.0244 -1129.959 c3498.3066 -1137.1982 3499.6035 -1144.3965 3500.7246 -1151.542 c3502.8652 -1165.1924 3506.0303 -1179.1543 3506.1729 -1193.0146 c3506.3252 -1207.9023 3510.2227 -1222.5371 3512.7119 -1237.1318 c3513.7598 -1243.2773 3512.6855 -1249.5947 3513.71 -1255.7695 c3514.9531 -1263.2637 3516.207 -1270.7568 3517.4561 -1278.251 c3518.5596 -1284.874 3519.0898 -1291.6025 3520.5664 -1298.1582 c3520.9023 -1299.6484 3521.1416 -1301.084 3521.3975 -1302.4629 C3516.6836 -1301.9316 3511.7168 -1303.041 3507.1563 -1304.126 c3502.8076 -1305.1602 3499.085 -1306.0811 3494.582 -1306.0811 c3489.2578 -1306.0811 3483.9473 -1305.958 3478.6426 -1306.4092 c3467.4258 -1307.3633 3456.1318 -1307.3398 3444.8848 -1307.3457 c3434.6152 -1307.3506 3424.292 -1308.6094 3413.9688 -1308.6113 c3408.5625 -1308.6123 3403.1855 -1308.0967 3397.7617 -1308.166 C3399.8633 -1307.2334 3401.4912 -1305.1826 3401.4912 -1302 Cf3410.0264 -1321.3164 m3421.0273 -1321.8809 3432.1152 -1321.6318 3443.0684 -1320.3457 c3447.8809 -1319.7813 3453.0859 -1320.335 3457.9395 -1320.2754 c3463.6104 -1320.207 3469.2773 -1320.0127 3474.9395 -1319.6748 c3485.1572 -1319.0645 3496.1914 -1320.3262 3506.125 -1317.8174 c3510.2344 -1316.7793 3514.2695 -1315.6367 3518.5146 -1315.3281 c3523.9102 -1314.9365 3529.7686 -1316.6387 3535.1904 -1316.9824 c3543.3047 -1317.4961 3551.1875 -1315.4854 3559.1855 -1314.5137 C3558.6846 -1318.6328 3558.3242 -1322.7861 3557.6699 -1326.9551 c3556.8398 -1332.2461 3556.3145 -1337.4141 3554.4629 -1342.4824 c3553.377 -1345.4531 3552.6152 -1348.4951 3552.165 -1351.5938 C3545.3184 -1351.5039 3538.4785 -1351.1885 3531.6309 -1351.0801 c3523.3008 -1350.9492 3515.2354 -1352.1016 3506.96 -1352.6416 c3499.4063 -1353.1338 3491.8779 -1352.6094 3484.3564 -1353.6563 c3476.3838 -1354.7656 3468.3359 -1357.4189 3460.2441 -1356.7637 c3453.4111 -1356.2109 3446.7861 -1353.4443 3439.9189 -1352.6836 c3432.1387 -1351.8223 3424.2383 -1352.6006 3416.4453 -1352.8408 c3409.2559 -1353.0625 3402.1504 -1352.1162 3394.9863 -1351.7207 c3387.0781 -1351.2842 3379.459 -1352.8252 3371.7559 -1354.3896 c3371.5547 -1354.4307 3371.3662 -1354.4824 3371.1787 -1354.5361 C3364.5576 -1349.5332 3356.4043 -1348.6914 3349.1836 -1344.6895 c3344.8477 -1342.2871 3340.0791 -1340.1113 3336.2383 -1336.9209 c3333.9648 -1335.0322 3328.3936 -1330.9141 3328.1113 -1327.7627 c3328.0195 -1326.7412 3327.7402 -1325.8467 3327.3252 -1325.0752 C3334.4492 -1324.7021 3341.5625 -1324.1523 3348.7129 -1324.1357 c3358.6699 -1324.1133 3368.4629 -1323.4961 3378.3652 -1322.5166 c3388.9043 -1321.4746 3399.4355 -1320.7734 3410.0264 -1321.3164 cf*U*u1 D2923.8809 -468.2402 m2945.2422 -448.832 2973.4219 -437.2549 2999.9326 -426.7988 c3007.2686 -423.9053 3014.6152 -421.0405 3021.9209 -418.0698 c3025.4648 -416.6289 3029.0449 -414.6519 3032.8076 -413.8975 c3036.874 -413.082 3040.9033 -412.1631 3044.8848 -410.9966 c3051.7314 -408.9893 3058.4102 -406.3379 3065.1816 -404.082 c3068.5117 -402.9722 3071.9004 -402.1558 3075.3633 -401.5918 c3079.627 -400.8984 3084.1533 -398.585 3088.2197 -397.1274 c3118.3232 -386.3398 3147.1152 -372.0566 3178.7881 -366.3232 c3194.4688 -363.4849 3209.9316 -359.814 3225.543 -356.5864 c3232.4736 -355.1538 3239.4902 -354.1416 3246.4707 -352.9888 c3254.668 -351.6348 3262.7627 -349.6611 3271.0049 -348.5928 c3288.7949 -346.2861 3307.4814 -347.0327 3325.3945 -347.4849 c3344.5586 -347.9688 3363.166 -353.7358 3381.877 -357.3105 c3384.291 -357.7715 3386.292 -357.0039 3387.71 -355.6587 C3388.2031 -355.981 3388.6973 -356.3022 3389.1816 -356.6553 c3395.9668 -361.604 3402.4424 -350.3164 3395.7422 -345.4297 c3390.6475 -341.7139 3385.1289 -338.9258 3379.2988 -336.5518 c3378.0693 -336.0518 3375.8613 -332.0557 3374.1406 -330.98 c3371.5479 -329.3594 3369.3467 -327.5952 3366.5322 -326.3013 c3360.626 -323.5854 3354.2461 -322.2383 3348.2656 -319.5034 c3342.0684 -316.6699 3335.5918 -314.979 3329.1504 -312.8223 c3323.0508 -310.7798 3317.6006 -307.625 3311.2832 -306.1499 c3305.0488 -304.6943 3298.5479 -304.2036 3292.1816 -303.6953 c3277.998 -302.5635 3263.4316 -301.0752 3249.5635 -297.8115 c3235.4678 -294.4951 3220.9209 -294.1226 3206.4805 -293.9697 c3192.5723 -293.8223 3178.5879 -292.0532 3164.7285 -293.3027 c3157.5859 -293.9468 3150.3711 -295.0039 3143.2207 -295.1807 c3136.3896 -295.3501 3130.1357 -297.0112 3123.4082 -297.6719 c3116.8906 -298.3125 3110.4639 -298.8486 3103.9219 -298.9551 C3111.9541 -295.2832 3120.3066 -292.1226 3128.2617 -288.7876 c3142.0977 -282.9868 3156.9775 -278.7363 3171.5176 -275.0732 c3186.6475 -271.2622 3201.917 -268.1641 3217.0645 -264.3223 c3232.3613 -260.4424 3247.8896 -257.7432 3263.4502 -255.1626 c3270.7168 -253.958 3278.0391 -253.3999 3285.3936 -253.9453 c3293.1221 -254.5181 3300.2002 -257.5801 3308.0713 -257.5967 c3314.0947 -257.6094 3319.3027 -260.6826 3324.998 -262.4653 c3331.791 -264.5918 3337.6406 -268.4766 3344.1699 -271.2739 c3350.2188 -273.8662 3356.7129 -274.6172 3362.417 -277.9248 c3365.2451 -279.5649 3367.918 -281.4844 3370.6836 -283.228 c3373.7002 -285.1304 3377.5488 -286.2876 3380.2754 -288.584 c3384.9902 -292.5566 3390.1328 -296.1147 3393.4805 -301.4316 c3397.001 -307.0225 3398.4814 -314.5156 3400.2695 -320.8174 c3402.5469 -328.8467 3404.3594 -336.6431 3407.5947 -344.3696 c3409.3271 -348.5049 3409.8555 -352.3701 3409.9805 -356.835 c3410.0244 -358.3989 3409.8105 -360.0957 3410.2324 -361.627 c3410.792 -363.6611 3412.3281 -365.3267 3412.5303 -367.4897 c3412.5479 -367.6763 3412.5781 -367.854 3412.6074 -368.0322 C3412.5742 -368.6948 3412.543 -369.3574 3412.5303 -370.021 c3412.373 -378.4014 3425.3486 -378.3926 3425.5293 -370.0435 C3426.9043 -371.1147 3428.7275 -371.665 3430.8809 -371.2275 c3431.8457 -371.0313 3432.7881 -370.7783 3433.7207 -370.5 C3433.4043 -371.0054 3433.1563 -371.5405 3433.0059 -372.0879 c3431.9824 -375.8081 3434.2656 -378.7515 3437.5449 -380.084 c3449.8438 -385.0801 3462.7705 -387.7925 3475.8086 -390.0405 c3481.9004 -391.0908 3488 -392.124 3494.1035 -393.1377 C3493.1074 -396.3223 3494.1885 -400.2773 3498.2734 -401.5918 c3512.707 -406.2368 3527.8477 -406.3076 3542.3848 -410.229 c3548.8369 -411.9697 3555.2598 -413.1929 3561.8496 -414.2671 c3569.0723 -415.4438 3575.0898 -419.3604 3581.4365 -422.7744 c3587.4912 -426.0313 3593.7217 -428.207 3600.1709 -430.4883 c3607.0449 -432.9204 3613.1836 -437.7847 3619.4434 -441.4219 c3624.627 -444.4336 3630.3555 -446.519 3634.7529 -450.7119 c3637.2227 -453.0664 3639.9443 -454.4556 3643.0918 -455.7217 c3646.9648 -457.2793 3650.3301 -459.9043 3653.7852 -462.2075 c3656.6816 -464.1382 3659.4033 -466.3804 3662.416 -468.1167 c3665.0146 -469.6138 3667.623 -470.4624 3670.001 -472.3638 c3672.5537 -474.4048 3675.0371 -476.5146 3677.6426 -478.4907 c3680.6768 -480.7925 3684.4971 -482.1826 3687.7441 -484.2056 c3692.7207 -487.3071 3695.8809 -492.8618 3699.168 -497.5806 c3703.2412 -503.4258 3707.3291 -509.2734 3711.4229 -515.1074 c3715.3125 -520.6499 3720.7158 -524.5137 3725.6689 -529.0122 c3730.7529 -533.6289 3731.4971 -540.2666 3735.1797 -545.8086 c3738.6777 -551.0698 3740.3379 -557.0088 3742.1611 -563.0073 c3744.0273 -569.1499 3749.7129 -574.0605 3750.2754 -580.5825 c3751.041 -589.4785 3753.5596 -597.8354 3755.3135 -606.5854 c3756.9775 -614.8877 3757.9258 -624.0605 3757.9258 -632.5117 c3757.9258 -634.5005 3757.6055 -638.7197 3757.5908 -643.3867 C3756.3066 -643.041 3755.0293 -642.5557 3753.8096 -642.0293 c3750.9063 -640.7749 3748.3066 -639.4414 3745.1875 -638.6992 c3737.1924 -636.7959 3729.9512 -632.3179 3722.0361 -629.8843 c3712.9199 -627.0811 3704.6191 -623.7661 3696.5273 -618.6626 c3688.2324 -613.4302 3679.2227 -609.8345 3670.7783 -604.9141 c3667.2148 -602.8379 3663.626 -600.1938 3660.4326 -597.5791 c3657.333 -595.0405 3655.2061 -591.7236 3651.9277 -589.3052 c3644.8379 -584.0747 3636.4512 -582.6831 3628.3633 -579.6128 c3619.9287 -576.4106 3611.4941 -572.228 3603.5488 -567.9834 c3599.3584 -565.7446 3595.0508 -563.7461 3590.8975 -561.4351 c3587.9453 -559.7925 3584.2334 -558.5117 3582.791 -555.2515 c3581.9502 -553.3501 3580.626 -552.3311 3579.1631 -551.9883 C3576.375 -547.6987 3573.5273 -543.5059 3571.4023 -538.8042 c3569.335 -534.2305 3564.4902 -534.7856 3561.6719 -537.5889 C3556.5137 -530.4512 3551.4434 -523.2485 3546.0332 -516.2969 c3540.249 -508.8647 3533.8008 -502.4009 3527.3164 -495.6226 c3524.1631 -492.3257 3521.8682 -488.2437 3519.2734 -484.5166 c3516.5947 -480.6694 3512.9629 -477.5337 3509.6592 -474.23 c3506.4512 -471.0215 3503.4404 -468.6729 3499.4873 -466.4604 c3495.042 -463.9727 3492.2197 -460.293 3489.0547 -456.4067 c3486.79 -453.625 3483.8584 -451.8174 3481.8525 -448.8027 c3479.5576 -445.354 3477.5078 -441.6919 3474.8867 -438.4727 c3472.2383 -435.2188 3468.4922 -433.1748 3465.4336 -430.2988 c3462.5186 -427.5591 3459.1113 -424.499 3456.708 -421.3047 c3454.3027 -418.1069 3451.0498 -415.8594 3448.1816 -413.1162 c3445.1172 -410.1865 3442.6523 -406.4878 3439.8936 -403.269 c3437.1514 -400.0688 3435.0752 -396.1108 3433.0781 -392.4199 c3431.041 -388.6548 3426.916 -386.2134 3425.2979 -382.2095 c3422.2002 -374.5405 3409.6201 -377.8877 3412.7627 -385.6655 c3412.7988 -385.7539 3412.8379 -385.8369 3412.875 -385.9243 C3410.6953 -387.9053 3408.2734 -389.5693 3405.9531 -391.3838 c3403.4316 -393.3564 3401.7568 -396.2949 3399.8926 -398.8413 c3395.3252 -405.0776 3391.7939 -412.2783 3387.7988 -418.9282 c3385.4277 -422.874 3383.0391 -426.812 3380.6387 -430.7446 C3380.3311 -431.1172 3380.0771 -431.5298 3379.8818 -431.978 C3378.6631 -433.9707 3377.4463 -435.9648 3376.2178 -437.9517 C3375.0762 -438.7197 3373.9063 -439.4497 3372.749 -440.1836 c3367.8184 -443.3081 3363.415 -447.2314 3358.8633 -450.8726 c3353.4248 -455.2236 3348.1992 -460.0552 3342.3086 -463.77 c3335.9111 -467.8052 3330.5957 -472.877 3324.9512 -477.9111 c3319.6816 -482.6108 3314.2998 -487.0405 3308.792 -491.4678 c3302.6914 -496.3716 3297.2393 -502.0103 3291.0205 -506.7529 c3285.3027 -511.1147 3279.2891 -515.0781 3273.5254 -519.3799 c3267.2051 -524.0977 3261.3662 -529.4082 3255.291 -534.4292 c3231.4922 -554.1006 3202.627 -565.1587 3175.9912 -580.1938 c3163.5215 -587.2324 3151.7725 -594.832 3140.0371 -603.0166 c3128.0967 -611.3442 3116.3877 -619.3296 3105.9727 -629.5693 c3084.8682 -650.3174 3057.8467 -665.2915 3031.4688 -678.2573 c3017.8271 -684.9629 3003.9912 -691.2827 2990.2686 -697.8228 c2983.2236 -701.1802 2976.1738 -704.4849 2968.9395 -707.418 c2966.0693 -708.582 2962.625 -710.1763 2959.4785 -710.1836 c2955.9727 -710.1924 2952.541 -710.668 2949.1855 -711.6777 c2948.7988 -711.7944 2948.4453 -711.9409 2948.1113 -712.1021 C2949.1074 -711.0723 2949.7676 -709.6465 2949.8223 -707.8242 c2950.1924 -695.4492 2959.8574 -685.2349 2964.3203 -674.127 c2966.9932 -667.4727 2968.4209 -660.3745 2971.3018 -653.7163 c2974.3447 -646.6836 2977.0586 -639.2832 2980.5879 -632.5039 c2983.7197 -626.4883 2987.207 -620.7251 2990.1992 -614.6284 c2993.2813 -608.3506 2995.7529 -601.8252 2999.5234 -595.9028 c3003.1543 -590.1992 3008.7539 -585.2993 3013.6895 -580.7422 c3019.3779 -575.4893 3025.4375 -570.6426 3031.3057 -565.5942 c3042.293 -556.1426 3050.7559 -544.4434 3061.7051 -534.9941 c3064.3066 -532.749 3066.7881 -530.5229 3068.707 -527.6548 c3070.3057 -525.2651 3072.0342 -522.8423 3074.3867 -521.1289 c3080.7012 -516.5278 3086.5479 -511.6548 3092.1387 -506.1855 c3102.9053 -495.6533 3114.9414 -486.9272 3126.3086 -477.0962 c3131.6729 -472.4575 3136.0361 -467.832 3142.2002 -464.1753 c3149.1592 -460.0469 3156.0508 -455.8213 3162.9492 -451.5908 c3172.4697 -445.7515 3181.8662 -440.7817 3192.3174 -436.8516 c3202.2549 -433.1147 3212.1514 -429.271 3222.125 -425.6299 c3242.1396 -418.3237 3262.5781 -411.8604 3282.1797 -403.4839 c3291.9531 -399.3076 3301.2275 -394.1084 3310.915 -389.7319 c3320.2959 -385.4941 3329.9619 -381.8838 3339.7871 -378.8184 c3344.0127 -377.5 3348.3184 -376.3525 3352.5547 -375.0239 c3357.4551 -373.4868 3362.5967 -374.0654 3367.6406 -373.2236 c3377.709 -371.5435 3388.6074 -373.9131 3398.7881 -373.9897 c3407.1738 -374.0532 3407.168 -361.0527 3398.7881 -360.9897 c3391.5371 -360.9351 3384.3193 -360.3066 3377.082 -359.9224 c3373.334 -359.7231 3369.7471 -359.563 3366.0654 -360.3745 c3362.1084 -361.2461 3357.9521 -360.3584 3354.043 -361.2217 c3340.0107 -364.3218 3325.9922 -369.3936 3312.7354 -374.8926 c3298.3066 -380.8774 3284.7588 -388.6646 3270.2461 -394.4277 c3255.6328 -400.2305 3240.6172 -404.9619 3225.8594 -410.3745 c3211.123 -415.7793 3196.5068 -421.5078 3181.7871 -426.9565 c3167.0693 -432.4038 3153.5215 -441.9526 3140.1934 -450.1265 c3136.5996 -452.3306 3133.125 -454.4521 3129.7832 -456.8057 C3128.5605 -454.3301 3125.9648 -452.603 3122.5156 -453.5801 c3115.7793 -455.4888 3109.876 -459.1523 3102.9629 -460.5806 c3098.9766 -461.4038 3094.8896 -461.7021 3090.8848 -462.4365 c3086.3828 -463.2627 3081.9863 -464.4463 3077.4316 -465.0513 c3069.3164 -466.1289 3061.1621 -465.98 3053.0479 -467.1426 c3044.7178 -468.3369 3036.5117 -470.2832 3028.209 -471.6479 c3010.9355 -474.4863 2993.3408 -473.9512 2975.9121 -473.6782 c2957.459 -473.3892 2939 -472.3911 2920.5488 -472.3262 c2912.1641 -472.2969 2912.167 -485.2969 2920.5488 -485.3262 c2956.334 -485.4521 2992.585 -489.6787 3028.208 -484.6899 c3036.4766 -483.5322 3044.625 -481.7002 3052.8477 -480.2651 c3061.624 -478.7329 3070.5039 -478.9712 3079.3291 -477.7993 c3087.8408 -476.6685 3096.1992 -474.6929 3104.6934 -473.4155 c3107.6543 -472.9702 3110.415 -472.0845 3113.1113 -471.0483 C3110.7148 -473.1367 3108.2871 -475.1948 3105.7559 -477.1851 c3100.1367 -481.603 3094.5 -485.9873 3089.2275 -490.8218 c3083.5303 -496.0454 3078.3242 -501.7075 3072.3359 -506.6255 c3068.46 -509.8091 3064.3594 -512.1582 3061.1377 -516.0918 c3057.9395 -519.998 3055.1602 -523.5171 3051.2988 -526.8496 c3042.9551 -534.0493 3036.4922 -542.8242 3028.6582 -550.5425 c3013.5723 -565.4063 2994.2559 -576.6011 2984.4902 -596.123 c2979.9756 -605.1504 2976.0322 -614.2681 2970.9785 -623.0322 c2965.4336 -632.6465 2961.4902 -643.5488 2957.2666 -653.8076 c2955.1807 -658.875 2953.4902 -664.0723 2952.2363 -669.4058 c2951.3105 -673.3413 2948.5156 -677.1831 2946.5146 -680.6338 c2941.5703 -689.1602 2937.123 -697.7656 2936.8223 -707.8242 c2936.6543 -713.4321 2942.4082 -715.2744 2946.3164 -713.3833 C2942.3223 -717.5439 2945.8105 -726.2686 2952.6406 -724.2129 c2955.4941 -723.3545 2958.0674 -723.187 2961.0352 -723.1802 c2964.292 -723.1724 2967.8311 -721.6572 2970.8428 -720.5576 c2978.0059 -717.9414 2984.9414 -714.6602 2991.834 -711.4165 c3005.6318 -704.9229 3019.4482 -698.4453 3033.1904 -691.8345 c3046.5732 -685.396 3059.7734 -678.5801 3072.4492 -670.8291 c3085.0879 -663.1006 3097.8242 -654.4521 3108.9268 -644.6318 c3114.0039 -640.1406 3118.5078 -635.0313 3123.6729 -630.6465 c3129.4629 -625.7314 3135.9492 -621.5435 3142.2197 -617.2891 c3154.0176 -609.2837 3165.4043 -601.1328 3177.8457 -594.125 c3204.3193 -579.2144 3233.1279 -567.8057 3257.3926 -549.25 c3264.1797 -544.0596 3270.5547 -538.3926 3277.125 -532.938 c3283.6201 -527.5464 3290.8223 -523.0234 3297.582 -517.9785 c3304.2871 -512.9736 3310.165 -507.084 3316.6143 -501.7734 c3323 -496.5156 3329.3516 -491.3774 3335.5244 -485.8726 c3338.5596 -483.1655 3341.6455 -479.5537 3345.0449 -477.3521 c3348.0918 -475.3779 3351.2148 -473.5938 3354.1133 -471.3921 c3354.9424 -470.7622 3355.7559 -470.1074 3356.5762 -469.4644 C3355.791 -471.0938 3355.0977 -472.7783 3354.5645 -474.5674 c3352.4551 -481.6504 3351.7227 -488.9453 3349.667 -496.0391 c3347.6191 -503.105 3345.8809 -510.2573 3344.2246 -517.4233 c3342.5615 -524.6118 3340.4795 -531.7588 3339.4336 -539.0649 c3338.4717 -545.7852 3337.0039 -551.6797 3334.6504 -558.0698 c3332.0527 -565.1216 3331.1689 -572.5264 3328.3125 -579.5776 c3322.6543 -593.5391 3317.7803 -607.0869 3314.7471 -621.8955 c3313.334 -628.7949 3312.3438 -635.7866 3310.7109 -642.6372 c3308.8398 -650.4834 3306.4814 -658.209 3304.4346 -666.0098 c3302.6396 -672.854 3300.9814 -679.6563 3298.5801 -686.3276 c3296.1465 -693.0913 3292.2139 -699.0894 3289.7227 -705.876 c3286.2324 -715.3853 3284.4775 -725.6152 3283.4453 -735.6582 c3282.3799 -746.0283 3280.2695 -755.6523 3277.7676 -765.749 c3275.3096 -775.666 3274.3896 -785.8901 3271.165 -795.6318 c3267.6289 -806.3125 3265.5469 -817.1748 3263.3447 -828.186 c3261.4629 -837.5928 3257.3066 -846.1675 3256.7715 -855.8506 c3256.1953 -866.2593 3252.5049 -876.0879 3250.4736 -886.2119 c3248.4443 -896.3291 3244.2197 -905.3896 3241.5557 -915.2729 c3240.0908 -920.7051 3240.4658 -926.1729 3240.4658 -931.7612 c3240.4658 -936.9116 3239.4219 -941.8247 3239.2012 -946.9434 c3238.9834 -951.9927 3243.6104 -953.9839 3247.4063 -952.9497 C3248.334 -955.978 3251.1279 -958.3057 3255.0195 -957.0068 c3269.377 -952.2148 3282.9121 -945.5283 3296.9863 -939.9746 c3303.3516 -937.4634 3309.7734 -935.1362 3315.8203 -931.9023 c3322.043 -928.5742 3329.1045 -927.5693 3335.0137 -923.457 c3340.6855 -919.5107 3345.834 -914.3882 3351.1738 -909.9858 c3357.0566 -905.1357 3362.8066 -900.146 3368.1094 -894.6606 c3372.627 -889.9888 3376.8867 -885.4893 3380.2666 -879.8848 c3383.7598 -874.0938 3386.2373 -867.7183 3389.2178 -861.6616 c3392.2832 -855.4326 3394.1484 -848.4526 3397.6846 -842.4668 c3401.7109 -835.6509 3405 -828.3652 3407.5859 -820.8882 c3412.5283 -806.6011 3418.4473 -792.3721 3424.5518 -778.5547 c3430.6826 -764.6797 3432.1123 -749.21 3435.1328 -734.4556 c3438.0889 -720.019 3439.9209 -705.3911 3442.6953 -690.9155 c3443.3838 -687.3213 3444.0459 -683.8022 3444.3506 -680.1479 c3444.627 -676.834 3444.2451 -673.459 3444.7432 -670.166 c3445.2031 -667.126 3447.0313 -664.0762 3447.0391 -661.0122 c3447.0479 -657.3955 3447.752 -654.3955 3448.3848 -650.8721 c3449.7344 -643.3584 3452.1631 -636.1753 3454.4492 -628.9561 C3454.8535 -642.5825 3455.6738 -656.1416 3455.3027 -669.8135 c3454.4541 -701.1035 3456.126 -732.9053 3463.0811 -763.4922 c3464.3018 -768.8604 3466.3887 -773.874 3467.3027 -779.3179 c3468.2119 -784.7368 3470.1553 -789.8286 3472.9287 -794.5601 c3479.1172 -805.1191 3480.3789 -816.2031 3482.9873 -827.9502 c3484.1895 -833.3633 3486.8242 -838.4482 3488.9307 -843.5425 c3491.1875 -848.9995 3491.9863 -854.7671 3493.7646 -860.3735 c3495.418 -865.5869 3497.9209 -870.4756 3500.6416 -875.1982 c3503.0107 -879.3105 3507.1064 -883.8198 3507.4189 -888.7451 c3507.709 -893.3213 3511.7695 -895.3916 3515.2793 -894.9414 C3517.1172 -896.3462 3519.6318 -896.8965 3522.2617 -895.623 c3528.5498 -892.5776 3535.208 -890.4253 3541.6133 -887.647 c3548.0752 -884.8438 3551.7295 -880.605 3556.4707 -875.6284 c3558.7305 -873.2573 3560.5645 -870.4385 3562.8438 -868.0376 c3565.1895 -865.5664 3567.249 -863.4727 3568.9443 -860.5068 c3570.3662 -858.0181 3571.7148 -855.2383 3573.5391 -853.0371 c3575.6035 -850.5464 3577.7578 -848.1807 3579.5107 -845.4482 c3581.1504 -842.8931 3581.6602 -839.8765 3582.7852 -837.1187 c3584.0996 -833.8979 3585.5088 -830.7197 3586.7764 -827.479 c3589.5352 -820.4253 3590.542 -812.9453 3593.3984 -805.9004 c3596.0088 -799.4629 3598.541 -793.3018 3598.8604 -786.2651 c3599.1826 -779.1577 3598.4082 -772.0327 3599.4365 -764.9551 c3599.6084 -763.7734 3599.8301 -762.6196 3600.0762 -761.481 C3603.6045 -765.1343 3607.0029 -768.8936 3610.5371 -772.5161 c3612.3564 -774.3813 3611.9727 -776.7544 3612.6611 -779.1367 c3613.6299 -782.4932 3615.042 -785.4141 3617.1797 -788.1729 c3619.0713 -790.6143 3621.3164 -792.5874 3622.7959 -795.3296 c3624.3438 -798.1958 3625.1982 -801.5054 3626.1699 -804.6001 c3628.1406 -810.8755 3630.8604 -816.9795 3633.2793 -823.0903 c3638.2334 -835.6104 3640.916 -849.166 3647.8164 -860.8887 c3649.3213 -863.4463 3651.1641 -865.9067 3652.3164 -868.6563 c3653.5605 -871.6211 3654.2949 -874.9409 3655.3154 -878.002 c3657.46 -884.4341 3659.832 -890.9189 3662.6582 -897.0864 c3665.4102 -903.0908 3664.375 -910.7529 3665.166 -917.2114 c3666.0967 -924.8105 3667.4551 -932.042 3669.2148 -939.5264 c3669.9316 -942.5742 3669.3623 -946.3545 3669.3623 -949.4736 c3669.3623 -952.7607 3670.1953 -955.9824 3670.5566 -959.2339 c3671.4707 -967.4634 3672.415 -975.6641 3672.8018 -983.9497 c3673.1592 -991.6152 3673.1523 -999.2969 3673.1572 -1006.9692 c3673.1592 -1010.7891 3673.1553 -1014.6074 3673.0654 -1018.4258 c3672.9619 -1022.8296 3671.8438 -1027.3579 3671.8926 -1031.7104 c3671.9697 -1038.4995 3672.79 -1045.2476 3673.0869 -1052.0273 c3673.4453 -1060.2012 3673.1572 -1068.4429 3673.1572 -1076.624 c3673.1572 -1084.2393 3672.4473 -1091.7998 3672.042 -1099.3975 c3671.5918 -1107.8232 3671.8096 -1116.2881 3671.4414 -1124.7227 c3670.7344 -1140.8867 3668.8477 -1156.9375 3666.668 -1172.96 c3665.7646 -1179.6064 3664.7139 -1186.2275 3664.1035 -1192.9023 c3663.8252 -1195.9404 3663.6436 -1199.4795 3662.7998 -1202.4082 c3661.7061 -1206.2051 3662.5254 -1210.3389 3661.4609 -1214.0664 c3657.2783 -1228.7178 3653.4453 -1244.3633 3652.8584 -1259.6582 c3652.7207 -1263.2324 3651.4756 -1266.918 3650.6172 -1270.3672 c3649.7383 -1273.8984 3649.5527 -1277.7598 3649.001 -1281.3613 c3647.7734 -1289.375 3646.2539 -1297.332 3644.2197 -1305.1816 c3642.3184 -1312.5195 3639.3418 -1319.3701 3636.877 -1326.5049 c3634.6143 -1333.0576 3633.6602 -1339.918 3630.2188 -1346.0098 c3626.9424 -1351.8086 3624.7314 -1357.3145 3623.2598 -1363.8096 c3621.4629 -1371.7471 3618.8291 -1379.4863 3616.5967 -1387.3066 c3615.6387 -1390.6641 3614.8418 -1394.0479 3614.1045 -1397.4404 C3613.1396 -1397.1797 3612.0586 -1397.1387 3610.875 -1397.4063 c3604.168 -1398.9248 3597.2441 -1398.3135 3590.4512 -1399.4385 c3583.3359 -1400.6162 3576.2031 -1401.4512 3569.2051 -1403.2705 c3566.2305 -1404.043 3563.0205 -1403.3682 3559.9785 -1404.1113 c3556.5 -1404.96 3552.9863 -1405.6689 3549.4795 -1406.3887 c3545.6553 -1407.1719 3541.8525 -1408.0928 3537.957 -1408.4023 c3533.6797 -1408.7422 3529.5684 -1408.6436 3525.3145 -1409.3389 c3518.3232 -1410.4805 3511.3613 -1411.7021 3504.5996 -1413.8535 c3496.9531 -1416.2852 3489.2832 -1417.4531 3481.3789 -1418.7305 c3466.0957 -1421.2012 3450.7617 -1425.9688 3435.9756 -1430.4941 c3421.0928 -1435.0488 3406.124 -1439.2783 3391.2002 -1443.7002 c3384.5283 -1445.6768 3378.0996 -1448.6777 3371.3828 -1450.7168 c3363.9473 -1452.9736 3357.7051 -1457.5674 3351.1543 -1461.6113 c3338.124 -1469.6563 3322.7695 -1474.8887 3308.4961 -1480.2988 c3294.665 -1485.54 3280.9844 -1491.1699 3267.1035 -1496.2842 c3255.1914 -1500.6738 3243.0156 -1504.1182 3231.3711 -1509.2422 c3225.0723 -1512.0137 3218.9072 -1514.79 3212.4912 -1517.3145 c3205.4199 -1520.0957 3197.8418 -1522.8291 3191.4063 -1526.9014 c3167.7891 -1541.8457 3142.9648 -1555.1553 3117.4824 -1566.5527 c3111.5195 -1569.2188 3106.3047 -1573.0127 3100.5293 -1575.918 c3094.9219 -1578.7393 3089.4336 -1581.7861 3084.1016 -1585.1016 c3072.3857 -1592.3857 3061.6982 -1601.751 3050.9961 -1610.4258 c3028.5859 -1628.5918 3008.4395 -1649.4531 2988.0664 -1669.8262 c2982.1348 -1675.7598 2991.3262 -1684.9521 2997.2598 -1679.0195 c3019.9316 -1656.3457 3042.457 -1633.6162 3067.6152 -1613.667 c3079.3389 -1604.3701 3090.8535 -1595.6377 3104.1416 -1588.6582 c3110.3389 -1585.4023 3116.1123 -1581.5166 3122.4629 -1578.5039 c3129.3906 -1575.2168 3136.5 -1572.458 3143.3496 -1568.9902 c3157.3379 -1561.9102 3171.0479 -1554.0713 3184.6074 -1546.2012 c3191.3955 -1542.2617 3197.8789 -1537.8184 3204.9971 -1534.502 c3212.6348 -1530.9424 3220.5654 -1528.0303 3228.4492 -1525.0723 c3235.0195 -1522.6074 3241.1484 -1518.9893 3247.8008 -1516.5693 c3254.7949 -1514.0244 3261.9287 -1511.8857 3268.9443 -1509.4043 c3282.8594 -1504.4805 3296.416 -1498.5957 3310.2539 -1493.4697 c3323.0488 -1488.7305 3335.6396 -1483.418 3348.0977 -1477.8584 c3354.1416 -1475.1611 3359.6152 -1471.6416 3365.2041 -1468.125 c3370.8965 -1464.542 3376.6191 -1462.7871 3382.9727 -1460.7646 c3389.3135 -1458.7461 3395.3047 -1456.0283 3401.7158 -1454.165 c3408.3252 -1452.2451 3414.9482 -1450.377 3421.5615 -1448.4717 c3434.8281 -1444.6504 3447.9316 -1440.374 3461.2949 -1436.873 c3467.9199 -1435.1367 3474.5605 -1433.3311 3481.2627 -1431.916 c3487.7695 -1430.543 3494.4102 -1429.9521 3500.9102 -1428.5195 c3507.3828 -1427.0928 3513.54 -1424.6787 3520.0742 -1423.3838 c3526.7295 -1422.0654 3533.1279 -1421.7861 3539.8545 -1421.252 c3546.6494 -1420.7119 3553.4795 -1418.8584 3560.127 -1417.4053 c3565.7324 -1416.1807 3571.3906 -1415.8271 3577.0049 -1414.582 c3583.0781 -1413.2354 3589.3965 -1412.7207 3595.5332 -1411.7041 c3600.8047 -1410.832 3606.0898 -1411.1758 3611.3828 -1410.4551 C3609.874 -1417.4414 3608.1211 -1424.3672 3605.2803 -1431.0723 c3603.7236 -1434.7451 3601.9336 -1438.3203 3600.1582 -1441.8916 c3598.418 -1445.3887 3597.7305 -1449.2285 3596.4727 -1452.9229 c3594.0996 -1459.8877 3591.4678 -1466.7334 3589.0879 -1473.6836 c3586.1807 -1482.1709 3582.2715 -1490.2627 3578.8271 -1498.5469 c3575.3984 -1506.793 3572.7656 -1515.3848 3570.3486 -1523.9814 c3568.1748 -1531.7129 3566.707 -1539.875 3566.915 -1547.9277 c3567.0996 -1555.0732 3571.6631 -1558.7793 3578.4199 -1559.4326 c3586.2666 -1560.1914 3593.2725 -1560.8398 3601.1377 -1559.6338 c3604.0537 -1559.1865 3606.9697 -1559.4639 3609.8965 -1558.9004 c3613.5547 -1558.1963 3616.1172 -1555.2559 3618.2148 -1552.4502 c3623.2422 -1545.7295 3611.9473 -1539.2617 3606.9902 -1545.8896 c3606.1348 -1547.0332 3603.5645 -1546.4727 3602.3203 -1546.5205 c3599.1826 -1546.6396 3596.0664 -1547.418 3592.9355 -1547.6758 c3589.5508 -1547.9551 3586.2988 -1547.0869 3582.9609 -1546.7168 c3581.9307 -1546.6025 3580.9082 -1546.5391 3579.8828 -1546.4922 C3579.7285 -1539.4531 3581.4688 -1532.4766 3583.3574 -1525.7529 c3585.4375 -1518.3555 3587.7285 -1510.9063 3590.6201 -1503.7891 c3596.2539 -1489.9238 3602.6221 -1476.4189 3607.0195 -1462.0977 c3608.9102 -1455.9414 3610.8281 -1449.6484 3613.6367 -1443.874 c3616.9922 -1436.9756 3619.6221 -1429.9209 3621.9629 -1422.6279 c3624.1533 -1415.8027 3625.2842 -1408.6582 3626.4619 -1401.6064 c3627.793 -1393.6377 3630.5801 -1385.8379 3632.8691 -1378.1104 c3634.8262 -1371.5049 3635.6084 -1364.0908 3638.5527 -1357.8633 c3641.5088 -1351.6123 3644.7617 -1346.2275 3646.6758 -1339.4863 c3650.8516 -1324.7861 3656.6973 -1310.8916 3659.6523 -1295.8105 c3661.0801 -1288.5283 3662.1025 -1281.167 3663.1523 -1273.8223 c3663.6729 -1270.1836 3664.9199 -1266.6289 3665.4648 -1262.9697 c3666.0732 -1258.8936 3666.5283 -1254.7646 3666.9873 -1250.668 c3667.8096 -1243.3311 3669.1455 -1236.084 3670.9014 -1228.9092 c3671.8359 -1225.0889 3672.9219 -1221.3047 3673.9961 -1217.5225 c3675.0889 -1213.6758 3674.5313 -1209.7607 3675.3359 -1205.8643 c3676.6387 -1199.5508 3676.8691 -1192.9961 3677.7803 -1186.5967 c3678.8564 -1179.04 3679.8916 -1171.4785 3680.8594 -1163.9072 c3682.9414 -1147.623 3684.3643 -1131.3242 3684.7793 -1114.9072 c3685.1826 -1098.9707 3686.1572 -1083.0791 3686.1572 -1067.1357 c3686.1572 -1059.7275 3686.2119 -1052.3516 3685.6592 -1044.96 c3685.4102 -1041.6289 3685.124 -1038.3042 3684.9629 -1034.9678 c3684.7568 -1030.7144 3685.6299 -1026.4648 3685.9063 -1022.2217 c3686.9336 -1006.46 3686.4395 -990.1699 3685.2129 -974.4341 c3684.6465 -967.1685 3683.8174 -959.814 3682.6279 -952.6255 c3682.0977 -949.4194 3682.3623 -946.0586 3682.3623 -942.8193 c3682.3623 -938.7124 3681.5078 -935.0957 3680.6113 -931.106 c3679.0098 -923.9707 3677.9072 -916.9253 3677.3555 -909.6201 c3677.1055 -906.3213 3677.3184 -903.0679 3676.8467 -899.7744 c3676.3164 -896.0732 3674.8809 -892.8447 3673.5352 -889.3877 c3671.1865 -883.3545 3668.8174 -877.4443 3666.7676 -871.2925 c3664.5371 -864.6025 3661.8262 -859.0581 3658.25 -852.9824 c3654.9033 -847.2979 3653.3477 -841.1616 3651.291 -834.9839 c3650.2578 -831.8794 3649.3066 -828.7554 3648.4443 -825.5986 c3647.4541 -821.9741 3645.4121 -818.8203 3644.2207 -815.2295 c3642.3262 -809.5156 3639.7119 -804.2139 3637.8486 -798.4541 c3636.7773 -795.1406 3635.5068 -791.917 3634.0215 -788.7681 c3632.3662 -785.2603 3629.6465 -782.8853 3627.1689 -780.0088 c3625.3887 -777.9429 3625.2979 -775.2466 3624.752 -772.7256 c3624.0254 -769.3735 3622.8916 -766.9302 3620.667 -764.2847 c3616.4443 -759.2642 3611.7324 -754.6938 3607.0781 -750.0396 c3605.8037 -748.7656 3604.3789 -748.1924 3602.9863 -748.1318 C3603.1143 -747.0562 3603.2012 -745.9639 3603.2188 -744.8423 c3603.3447 -737.0337 3602.2783 -729.6079 3603.543 -721.8145 c3604.7588 -714.3296 3605.2158 -707.9238 3604.1406 -700.4028 c3602.9678 -692.1851 3601.9043 -683.9429 3600.5254 -675.7568 c3598.0254 -660.9058 3594.5244 -646.0415 3592.7275 -631.0933 c3592.3086 -627.6094 3591.9277 -624.1284 3591.3818 -620.6606 c3590.9082 -617.6533 3589.3291 -614.7803 3588.3262 -611.9009 c3585.998 -605.2188 3584.0352 -598.4175 3581.9688 -591.6597 c3580.3438 -586.3447 3578.8408 -580.9473 3577.2637 -575.5654 C3578.1758 -577.4385 3579.1035 -579.3008 3580.0928 -581.1187 c3583.1641 -586.7612 3585.1641 -592.8755 3588.3867 -598.4565 c3590.0449 -601.3286 3592.1172 -603.8931 3593.6963 -606.8174 c3595.5713 -610.292 3596.1289 -614.0132 3598.5078 -617.2383 c3600.2188 -619.5581 3602.2451 -621.8726 3603.3525 -624.5684 c3604.5986 -627.6006 3605.4941 -630.2705 3607.6992 -632.8018 c3609.5576 -634.9351 3611.1572 -637.3477 3613.3945 -639.0864 c3616.2119 -641.2749 3617.3174 -644.4629 3618.8818 -647.5923 c3621.7549 -653.3379 3627.0049 -657.4868 3630.0254 -663.1733 c3633.1689 -669.0933 3636.6797 -674.7578 3639.7266 -680.7402 c3641.1289 -683.4956 3642.3281 -686.3384 3643.4971 -689.1982 c3644.5029 -691.6582 3644.5391 -694.4155 3645.5557 -696.8999 c3648.127 -703.187 3650.6982 -709.2212 3653.2852 -715.5078 c3654.5547 -718.5918 3654.9307 -722.0288 3656.332 -725.0215 c3657.7305 -728.0093 3658.6357 -731.1997 3659.623 -734.3413 c3662.0625 -742.1069 3665.1553 -749.7183 3668.2188 -757.2568 c3671.0898 -764.3252 3674.9141 -771.0908 3677.3887 -778.2935 c3678.5195 -781.5815 3679.0557 -785.0537 3680.3271 -788.2847 c3681.7012 -791.7773 3684.1689 -794.7056 3685.1934 -798.3271 c3686.0371 -801.3154 3685.8037 -804.6997 3685.8086 -807.7734 c3685.8145 -810.9766 3686.9043 -814.4902 3687.2666 -817.7021 c3688.043 -824.5918 3690.4258 -830.7642 3691.8789 -837.4766 c3693.0215 -842.751 3693.7363 -848.5659 3694.3574 -853.9521 c3695.0898 -860.2998 3696.1543 -866.5747 3696.8877 -872.9302 c3698.3457 -885.5732 3700.3789 -898.1953 3701.8223 -910.8516 c3702.4219 -916.1118 3702.1045 -921.4155 3702.3975 -926.6899 c3702.7324 -932.707 3704.5684 -938.459 3705.167 -944.4126 c3706.4326 -956.9941 3709.1875 -969.4746 3710.3701 -982.0244 c3712.6768 -1006.4907 3714 -1031.1812 3714 -1055.749 C3714 -1092.4395 L3714 -1104.6826 3712.6152 -1116.8867 3712.5557 -1129.1299 c3712.5146 -1137.5146 3725.4258 -1137.5107 3725.4668 -1129.1299 c3725.541 -1113.6299 3726.6875 -1098.1797 3726.6875 -1082.668 c3726.6875 -1066.4082 3726.8525 -1050.1357 3726.4834 -1033.8794 c3726.1299 -1018.3535 3724.6016 -1002.8101 3723.6094 -987.3105 c3723.1367 -979.915 3721.7666 -972.769 3720.6504 -965.458 c3719.3936 -957.2197 3718.6191 -948.9067 3717.7891 -940.6172 c3717.4502 -937.2271 3716.3867 -933.8726 3715.8164 -930.5073 c3715.2129 -926.9478 3715.2666 -923.3223 3715.2471 -919.7266 c3715.2031 -911.667 3713.8105 -903.8267 3712.6738 -895.873 c3710.418 -880.0703 3708.8438 -864.2251 3706.6416 -848.4287 c3705.6963 -841.6445 3704.8701 -834.6182 3702.8066 -828.0742 c3700.6689 -821.2935 3700.1436 -814.5645 3698.9209 -807.5991 c3697.749 -800.9282 3698.4824 -795.1641 3695.3203 -788.8384 c3693.7676 -785.7314 3692.2715 -783.3135 3691.3926 -779.8984 c3690.3574 -775.8726 3688.9531 -772.0459 3687.333 -768.2241 c3682.3057 -756.3643 3676.7891 -744.8369 3672.6992 -732.5752 c3670.9385 -727.2979 3668.8203 -722.04 3667.4043 -716.6802 c3666.7119 -714.0591 3665.6514 -711.5098 3664.5625 -709.0327 c3664.1514 -708.0732 3663.7227 -707.1221 3663.2754 -706.1787 c3663.3643 -706.3711 3661.8379 -702.2632 3661.9746 -703.7368 c3661.5068 -698.6748 3658.0508 -694.6045 3656.9619 -689.6929 c3655.8633 -684.7373 3653.8164 -680.1895 3651.6504 -675.6035 c3649.4004 -670.8423 3646.3818 -666.6436 3643.8467 -662.0894 c3641.2412 -657.4082 3639.2373 -653.063 3635.8477 -648.8247 c3632.2598 -644.3374 3629.6445 -640.106 3627.0713 -634.958 c3626.0537 -632.9214 3624.3418 -631.2866 3622.5869 -629.894 c3620.7324 -628.4219 3619.416 -626.457 3617.8398 -624.6978 c3616.1191 -622.7764 3615.7969 -620.3989 3614.6523 -618.1465 c3613.5059 -615.8896 3612.1211 -613.8652 3610.6094 -611.8394 c3607.248 -607.3335 3606.0088 -601.7935 3603.0322 -597.0024 c3598.9736 -590.4697 3595.7188 -583.6387 3592.3105 -576.8232 C3600.9004 -581.1279 3609.5771 -585.1509 3618.1797 -589.4482 c3626.7168 -593.7144 3637.5967 -594.2598 3645.0723 -600.3452 c3648.5967 -603.2144 3651.2188 -606.8506 3654.916 -609.6445 c3658.8105 -612.5884 3662.8359 -615.4331 3667.1191 -617.7798 c3675.7305 -622.4966 3684.4453 -626.4854 3692.8242 -631.6743 c3701.8232 -637.2466 3711.7578 -640.1904 3721.7373 -643.415 c3725.7461 -644.7104 3730.0234 -646.4785 3733.6719 -648.5879 c3737.3262 -650.7002 3741.6914 -650.6211 3745.3975 -652.4043 c3749.1113 -654.1919 3754.3252 -656.7583 3759.082 -656.9004 C3760.5801 -661.5698 3763.4834 -664.2363 3768.9707 -661.5645 c3772.8398 -659.6807 3772.9805 -655.7544 3771.1914 -652.8701 C3771.1797 -652.7524 3771.167 -652.6167 3771.1504 -652.4395 c3771.0576 -651.4263 3771.0313 -650.5176 3770.9922 -649.5015 c3770.9297 -647.8198 3770.9268 -646.1914 3770.9258 -644.5088 c3770.9219 -636.9668 3771.168 -629.5283 3770.1738 -622.0605 c3769.2529 -615.1416 3768.873 -608.2251 3767.498 -601.3638 c3765.9805 -593.793 3763.7988 -586.6563 3763.1348 -578.9492 c3762.5977 -572.7104 3759.1523 -567.3018 3756 -562.0601 c3752.4971 -556.2363 3751.4639 -548.793 3748.5293 -542.5986 c3747.3076 -540.0195 3745.1816 -537.9746 3744.124 -535.2954 c3743.0781 -532.6421 3742.21 -529.98 3740.9268 -527.4175 c3737.7051 -520.9844 3731.1787 -516.8398 3726.0059 -512.1416 c3721.21 -507.7861 3718.5752 -501.7051 3714.7314 -496.5811 c3710.7676 -491.2969 3707.0605 -485.6514 3702.8984 -480.542 c3698.6328 -475.3037 3692.9316 -471.938 3686.9863 -468.9131 c3680.9316 -465.8325 3676.5947 -460.4507 3670.3311 -457.5703 c3663.9355 -454.6289 3658.3242 -449.3667 3652.2832 -445.7002 c3649.6719 -444.1162 3646.165 -443.7236 3643.9453 -441.5195 c3641.3096 -438.9009 3638.333 -436.5952 3634.8623 -435.2188 c3633.2959 -434.5977 3630.5508 -432.2886 3628.4258 -431.311 c3625.3945 -429.9175 3622.5957 -428.1943 3619.7588 -426.4409 c3613.5693 -422.6167 3607.4082 -419.0479 3600.4141 -416.8906 c3592.3965 -414.4175 3585.3574 -409.9453 3577.9297 -406.1592 c3570.2109 -402.2256 3562.334 -401.5132 3553.9746 -399.7783 c3553.2061 -399.6187 3552.4453 -399.4482 3551.6836 -399.2788 C3554.8994 -399.2324 3558.1279 -399.123 3561.3818 -398.9248 c3576.0586 -398.0303 3591.8359 -395.498 3606.4463 -398.1392 c3612.8271 -399.2925 3619.3037 -398.4756 3625.6357 -399.3945 c3631.9248 -400.3071 3637.7197 -403.0352 3644.1143 -403.8403 c3658.2549 -405.6216 3672.1367 -407.9766 3686.1172 -410.8276 c3692.1924 -412.0664 3698.1582 -413.9429 3704.3105 -414.71 c3711.0869 -415.5547 3717.9844 -414.5356 3724.7422 -415.5088 c3736.751 -417.2383 3747.9746 -418.9585 3757.6348 -410.0415 c3763.8076 -404.3442 3754.5918 -395.1738 3748.4434 -400.8491 c3740.8828 -407.8281 3727.4043 -402.3164 3718.2793 -402.123 c3711.8623 -401.9873 3705.8438 -402.1128 3699.5713 -400.5693 c3693.123 -398.9824 3686.6299 -397.855 3680.1211 -396.5771 c3673.2549 -395.2295 3666.4219 -393.8096 3659.5371 -392.5605 c3653.3711 -391.4419 3647.0625 -391.4395 3640.9004 -390.3213 c3634.5088 -389.1621 3629.1172 -386.2979 3622.4355 -386.292 c3615.6445 -386.2866 3609.1113 -385.2305 3602.373 -384.6665 c3588.7383 -383.5249 3574.9854 -385.0425 3561.3818 -385.9248 c3547.1465 -386.8481 3533.3398 -386.2578 3519.2422 -384.0933 c3505.9004 -382.0444 3492.5723 -379.7637 3479.2646 -377.5049 c3466.2451 -375.2954 3453.3213 -372.5459 3441.0488 -367.5659 C3443.5938 -366.3296 3446.0859 -364.9609 3448.5967 -363.6289 c3454.6992 -360.3921 3460.6963 -357.0024 3466.751 -353.6504 c3475.9268 -348.5703 3485.7578 -345.5342 3495.7188 -342.7231 C3496.7559 -342.7949 3497.8701 -342.5229 3499.001 -341.8027 C3502.5938 -340.8013 3506.1953 -339.8032 3509.7822 -338.7236 c3517.0176 -336.5464 3524.6641 -335.7505 3531.75 -333.2749 c3538.7734 -330.8208 3545.7402 -329.7085 3553.1396 -329.7085 c3560.5313 -329.7085 3567.6152 -328.5049 3574.9766 -328.0215 c3582.793 -327.5088 3590.7588 -327.7988 3598.5146 -328.8965 c3604.8916 -329.7988 3610.9678 -331.9238 3617.1934 -333.4902 c3624.041 -335.2134 3630.9863 -336.2686 3637.7988 -338.2095 c3651.2119 -342.0313 3664.8164 -347.1357 3677.3105 -353.3179 c3689.7588 -359.4785 3703.5918 -361.3989 3715.3984 -369.0728 c3720.9199 -372.6606 3725.5361 -377.688 3730.9023 -381.564 c3733.3535 -383.3345 3734.6826 -385.6694 3736.29 -388.1958 c3737.1738 -389.5845 3738.0938 -391.2979 3739.6367 -392.0801 c3741.0664 -392.8052 3742.7451 -393.3994 3743.6309 -394.8091 c3748.0762 -401.8877 3759.3281 -395.3691 3754.8555 -388.2476 c3753.2168 -385.6377 3751.2637 -383.832 3748.6816 -382.167 c3746.7217 -380.9038 3745.7188 -378.731 3744.1221 -376.5293 c3740.0859 -370.9624 3733.4688 -367.6724 3728.5352 -362.8936 c3718.7383 -353.4028 3704.54 -349.0884 3691.8242 -345.2495 c3685.3389 -343.292 3679.6211 -339.6401 3673.3418 -337.167 c3666.5293 -334.4839 3659.6094 -332.0762 3652.7568 -329.4951 c3639.2773 -324.418 3625.1504 -322.3062 3611.3516 -318.394 c3597.3594 -314.4272 3582.1631 -314.0645 3567.7832 -315.6543 c3560.3008 -316.4814 3553.0898 -316.7085 3545.5488 -316.7085 c3537.7695 -316.7085 3530.4453 -321.1455 3522.9463 -322.2915 c3521.4297 -322.5234 3519.9199 -322.8042 3518.415 -323.1094 C3521.5996 -319.0454 3524.75 -314.9551 3527.7725 -310.7612 c3531.918 -305.0098 3535.7324 -299.0269 3539.3838 -292.9526 c3543.1934 -286.6157 3547.292 -280.6089 3551.2266 -274.3657 c3554.7549 -268.7676 3556.8105 -262.4878 3558.5566 -256.1543 c3560.6152 -248.686 3563.4814 -241.7612 3566.4121 -234.6025 c3569.209 -227.7686 3572.2412 -220.5757 3574.2676 -213.4893 c3575.0732 -210.6714 3575.0957 -207.7241 3576.5059 -205.1128 c3578.4092 -201.5879 3579.5293 -198.146 3579.8828 -194.1602 c3580.0791 -191.9424 3578.5078 -189.7886 3576.6641 -188.7173 c3572.75 -186.4458 3568.8418 -188 3564.625 -188 C3544.2832 -188 L3538.1592 -188 3530.8262 -186.7383 3524.8438 -188.0625 c3518.0879 -189.5576 3511.1045 -190.1504 3504.2773 -191.2861 c3492.3301 -193.2734 3480.1465 -197.4502 3469.7686 -203.707 c3460.3984 -209.3569 3450.751 -217.7129 3445.6465 -227.501 c3439.8955 -238.5273 3437.9629 -249.8945 3435.5361 -262.0278 c3434.4131 -267.6411 3433.4189 -272.9067 3430.6982 -278.0083 c3427.9023 -283.2495 3426.584 -289.085 3424.2002 -294.5107 c3420.1523 -303.7251 3416.2998 -313.6089 3414.3936 -323.665 C3411.4434 -311.7471 3408.6191 -299.0874 3400.7881 -289.5298 c3392.4395 -279.3398 3379.957 -273.458 3368.9785 -266.6997 c3363.1914 -263.1372 3356.8926 -262.2749 3350.6387 -259.9775 c3343.9727 -257.5288 3338.2314 -253.334 3331.5352 -250.9351 c3328.4844 -249.8423 3325.3506 -248.9868 3322.2891 -247.9189 c3319.5059 -246.9478 3317.2715 -245.5117 3314.2666 -245.0474 c3311.0488 -244.5508 3307.8291 -244.6362 3304.5859 -244.5366 c3300.5059 -244.4106 3296.4395 -242.7598 3292.4736 -241.9219 c3277.5215 -238.7627 3262.0371 -242.208 3247.2959 -244.8843 c3231.4473 -247.7622 3215.9453 -251.2227 3200.3242 -255.1743 c3193.1133 -256.9985 3185.8457 -258.2026 3178.5723 -259.7188 c3170.9922 -261.2983 3163.4727 -263.6284 3156.0254 -265.752 c3143.1719 -269.417 3130.3545 -273.7646 3118.1055 -279.1113 c3105.9502 -284.417 3092.9268 -288.8755 3081.7422 -296.0879 c3080.4023 -296.9517 3079.5586 -298.061 3079.1152 -299.2588 C3075.3613 -301.8071 3074.0264 -307.6211 3079.2109 -309.8438 c3084.3584 -312.0498 3089.4023 -312.4473 3094.9629 -312.208 c3101.458 -311.9287 3107.9609 -312.0801 3114.4502 -311.6211 c3121.2461 -311.1406 3127.9766 -310.1494 3134.6328 -308.729 c3138.082 -307.9927 3141.6143 -308.2207 3145.1191 -308.1338 c3148.8438 -308.042 3152.5215 -306.9678 3156.2139 -306.9106 c3162.9746 -306.8057 3169.6572 -305.5884 3176.4326 -305.6948 c3183.3057 -305.8027 3190.0996 -306.9351 3196.9912 -306.9355 c3211.4951 -306.937 3227.0176 -306.229 3241.2715 -309.2124 c3255.4209 -312.1738 3269.7773 -314.8052 3284.207 -316.0742 c3290.5605 -316.6328 3296.9492 -316.9033 3303.2637 -317.8369 c3309.624 -318.7769 3314.9023 -321.0527 3320.7754 -323.4712 c3327.1133 -326.0811 3333.9746 -327.3315 3340.2334 -330.0649 c3343.2559 -331.3848 3346.2178 -332.8359 3349.2773 -334.0718 c3352.2373 -335.2671 3355.9141 -335.6382 3358.7061 -336.958 c3360.9023 -337.9966 3362.7754 -339.1729 3364.7295 -340.4121 C3356.5918 -338.6382 3348.4414 -336.9424 3340.1768 -335.8184 c3325.4043 -333.8091 3310.4492 -334.4209 3295.5762 -334.4209 c3279.4492 -334.4209 3264.2988 -336.6255 3248.4824 -339.5107 c3233.418 -342.2588 3218.4453 -344.8247 3203.4873 -348.1484 c3188.0703 -351.5747 3172.3818 -353.8154 3157.1045 -357.8164 c3141.6777 -361.856 3127.1055 -368.2861 3112.3125 -374.1289 c3097.3975 -380.02 3082.334 -386.4155 3066.7256 -390.0889 c3059.8652 -391.7031 3053.3525 -394.6411 3046.6035 -396.6475 c3043.1309 -397.6797 3039.7861 -398.98 3036.2529 -399.8638 c3032.0264 -400.9209 3027.9912 -401.5625 3023.9619 -403.2612 c2986.5361 -419.0391 2945.3896 -431.1538 2914.6875 -459.0479 c2908.4707 -464.6963 2917.6914 -473.8628 2923.8809 -468.2402 cf0 D3446.6904 -606.6094 m3445.2354 -621.2705 3438.1318 -634.7139 3435.5361 -649.1626 c3434.4756 -655.0635 3433.416 -660.8364 3432.208 -666.71 c3431.5283 -670.0161 3431.5254 -673.3726 3431.4893 -676.728 c3431.4424 -680.9717 3430.6377 -684.9629 3429.8428 -689.1099 c3427.0596 -703.6353 3425.1992 -718.293 3422.2324 -732.7832 c3419.1709 -747.7358 3417.5195 -762.8179 3411.1553 -776.8291 c3404.9385 -790.5156 3399.3604 -804.9731 3394.4453 -819.1836 c3392.0225 -826.1865 3387.6855 -832.1636 3384.9287 -838.9399 c3382.1387 -845.7954 3379.1221 -852.6006 3375.9775 -859.2983 c3373.3135 -864.9717 3370.7891 -870.6724 3367.4004 -875.9634 c3363.6455 -881.8262 3357.7197 -886.8896 3352.6455 -891.6045 c3347.4863 -896.3975 3341.9707 -900.8027 3336.5352 -905.2739 c3330.6553 -910.1113 3325.8633 -914.4067 3318.5713 -916.9185 c3313.1279 -918.7935 3308.2607 -921.3799 3303.0234 -923.7129 c3297.75 -926.0615 3292.2344 -927.9497 3286.874 -930.0938 c3275.3193 -934.7158 3264.2168 -940.1484 3252.4395 -944.1631 C3252.7139 -941.833 3253.1367 -939.5171 3253.3955 -937.1836 c3253.7988 -933.5518 3253.4658 -929.7197 3253.4658 -926.0679 c3253.4658 -917.7637 3256.877 -911.1401 3259.5566 -903.4697 c3261.8086 -897.0215 3262.7129 -890.2021 3264.4941 -883.627 c3266.4785 -876.2993 3268.1064 -868.8979 3269.1543 -861.374 c3270.084 -854.7026 3270.8135 -848.6982 3272.9277 -842.2544 c3275.4941 -834.4341 3276.9199 -826.4443 3278.5371 -818.3579 c3279.9717 -811.187 3281.9824 -804.2773 3284.2803 -797.3359 c3286.7217 -789.9595 3287.9141 -781.9922 3289.2021 -774.3477 c3290.3594 -767.4785 3292.6406 -760.8315 3294.1064 -754.0264 c3295.8232 -746.0542 3295.9639 -737.8433 3297.1426 -729.7949 c3298.1533 -722.8975 3299.9473 -715.9063 3302.2578 -709.332 c3304.6426 -702.5488 3308.542 -696.5244 3311.1162 -689.7832 c3313.6387 -683.1787 3315.2246 -676.2969 3316.9707 -669.4658 c3318.9688 -661.6489 3321.3066 -653.9258 3323.2461 -646.0933 c3326.8105 -631.6958 3328.4463 -617.0249 3333.0381 -602.8438 c3335.9424 -593.8745 3340.2109 -585.458 3343.292 -576.561 c3344.8066 -572.1855 3345.1963 -567.5986 3346.5957 -563.2124 c3348.1748 -558.2607 3350.3242 -553.6484 3351.1602 -548.48 c3352.5781 -539.7178 3354.4043 -531.2612 3356.3662 -522.6016 c3358.6172 -512.6689 3362.0488 -502.8467 3363.8926 -492.8579 c3365.5898 -483.6572 3367.082 -475.9834 3372.3965 -468.0781 c3377.0449 -461.1621 3381.3311 -454.02 3385.7803 -446.9775 C3389.3721 -444.1841 3393.041 -440.2861 3392.9287 -435.6455 C3396.958 -429.0796 3400.8379 -422.417 3404.8652 -415.8521 c3407.3359 -411.8247 3409.3672 -407.792 3412.1758 -403.957 c3413.1582 -402.6147 3414.3096 -401.4785 3415.5313 -400.4238 C3417.5303 -407.4243 3419.5098 -414.4297 3421.0029 -421.5591 c3422.584 -429.1084 3422.8252 -436.8872 3423.8574 -444.521 c3424.7832 -451.3618 3428.0127 -458.106 3429.5 -464.9009 c3431.1777 -472.5615 3432.0957 -480.4468 3433.0645 -488.2212 c3434.9551 -503.4077 3436.7412 -518.6284 3438.793 -533.7852 c3439.7227 -540.6558 3441.6787 -547.2017 3443.3457 -553.9106 c3445.209 -561.4175 3445.2568 -569.1792 3446.9229 -576.708 c3448.6582 -584.5503 3450.5654 -592.5498 3452.0068 -600.6021 C3449.3848 -601.2344 3447.0254 -603.2412 3446.6904 -606.6094 cf3579.7275 -631.0933 m3581.3994 -645.9673 3584.8281 -660.7402 3587.3574 -675.4912 c3588.6504 -683.0288 3589.7109 -690.5947 3590.792 -698.1655 c3591.3271 -701.9102 3592.2363 -705.7876 3592.1436 -709.5762 c3592.0439 -713.6968 3591.0713 -717.7988 3590.46 -721.8623 c3589.3848 -729.0059 3589.9316 -735.9194 3590.1943 -743.0923 c3590.4707 -750.644 3587.3018 -757.458 3586.4219 -764.9263 c3585.6455 -771.52 3585.8604 -778.1602 3585.8604 -784.7876 c3585.8604 -792.1787 3582.2471 -798.814 3579.627 -805.5566 c3577.0762 -812.1216 3576.1602 -819.1133 3573.584 -825.7017 c3571.2715 -831.6162 3569.4551 -837.9463 3565.2676 -842.7734 c3561.2939 -847.355 3559.1123 -853.3105 3554.8838 -857.5801 c3550.2305 -862.2783 3546.4189 -867.6685 3541.8438 -872.4341 c3538.8223 -875.5811 3534.0684 -876.8286 3530.0938 -878.3652 c3526.4551 -879.772 3522.8213 -881.1826 3519.2559 -882.7559 C3518.085 -879.0659 3516.1924 -875.6494 3514.0967 -872.25 c3510.3936 -866.2446 3507.2305 -860.3213 3505.2676 -853.5015 c3503.3145 -846.7197 3501.6445 -840.4028 3498.8398 -833.8691 c3495.8438 -826.8896 3494.9336 -819.9619 3493.4385 -812.5928 c3492.0996 -805.9888 3489.8975 -799.5952 3487.292 -793.3936 c3486.0918 -790.5361 3484.1094 -788.0356 3482.6367 -785.2979 c3480.833 -781.9448 3480.1875 -777.9463 3479.5645 -774.2349 c3478.4863 -767.8105 3475.8994 -761.6567 3474.5801 -755.2373 c3472.9844 -747.4741 3471.4395 -739.7539 3470.625 -731.8623 c3468.9834 -715.9653 3467.9063 -699.6543 3467.9961 -683.6758 c3468.0889 -667.4077 3468.584 -651.3398 3467.707 -635.0762 c3467.2979 -627.4971 3467.501 -619.8887 3466.6563 -612.3413 c3465.7881 -604.5884 3464.4326 -596.7441 3462.875 -589.1021 c3461.4717 -582.2202 3459.4512 -575.3608 3458.6182 -568.3809 c3457.6934 -560.6421 3456.6504 -553.1284 3454.6162 -545.5884 c3451.3525 -533.4902 3450.6758 -521.1963 3448.7529 -508.8569 c3446.7588 -496.064 3445.6426 -483.1509 3443.5957 -470.3633 c3441.6152 -457.999 3436.791 -446.3325 3435.6523 -433.9121 c3435.0713 -427.5742 3434.041 -421.4072 3432.7275 -415.2983 C3435.9922 -419.2612 3439.5928 -422.9785 3443.4023 -426.1753 c3449.7666 -431.5166 3454.4951 -438.5552 3461.1396 -443.6963 c3467.707 -448.7773 3470.1748 -457.0176 3476.5176 -462.334 c3479.8848 -465.1577 3482.2813 -468.8384 3485.2852 -472.0356 c3488.1201 -475.0542 3491.8867 -477.104 3495.457 -479.1016 c3499.3203 -481.2642 3502.415 -485.3701 3505.5273 -488.4829 c3509.1826 -492.1377 3511.6621 -496.6343 3514.7754 -500.7393 c3520.375 -508.1235 3527.6807 -514.1514 3533.5742 -521.3574 c3539.873 -529.0596 3545.4854 -537.3159 3551.3232 -545.3657 c3551.8232 -546.0557 3552.3936 -546.5991 3553.0049 -547.0244 C3552.9629 -548.1035 3553.207 -549.2534 3553.8535 -550.4268 c3560.8223 -563.0835 3564.999 -578.0225 3568.5684 -591.9653 c3571.9219 -605.0654 3578.2197 -617.6812 3579.7275 -631.0933 cf3768 -650 m3768.748 -650 L3769.4424 -650.5605 3769.9297 -651.1699 3770.2988 -651.7114 C3769.6563 -651.0068 3769 -650.4209 3768 -650.0151 C3768 -650.0098 3768 -650.0049 3768 -650 Cf3429.4102 -318.4131 m3430.9473 -312.9233 3432.2617 -307.605 3434.7646 -302.4507 c3437.0654 -297.7144 3438.7012 -292.729 3440.4766 -287.7832 c3442.251 -282.8389 3445.0303 -278.4526 3446.4678 -273.3247 c3449.5762 -262.2383 3449.4814 -249.8701 3454.1172 -239.2383 c3462.6641 -219.6377 3482.6504 -209.814 3502.4092 -205.0039 c3514.3359 -202.1006 3526.6309 -201 3538.8633 -201 C3563.999 -201 L3563.9912 -201.0142 3563.9834 -201.0288 3563.9756 -201.043 c3562.5625 -203.7334 3562.4111 -207.1211 3561.7314 -210.0547 c3561.042 -213.0303 3559.3711 -215.8052 3558.4473 -218.7583 c3557.3223 -222.3555 3555.9648 -225.8745 3554.5879 -229.3809 c3552.1582 -235.5645 3549.2529 -241.5234 3547.3525 -247.9014 c3545.4551 -254.2646 3544.0762 -260.561 3540.8271 -266.417 c3537.8691 -271.748 3533.9229 -276.4194 3530.8955 -281.7183 c3527.3633 -287.9019 3523.584 -293.939 3519.5938 -299.8369 c3512.0273 -311.0225 3503.8877 -321.9702 3493.0586 -330.1445 C3488.209 -331.4492 3483.334 -332.6479 3478.5176 -334.0903 c3464.6973 -338.2295 3451.8809 -347.0498 3439.2793 -353.8818 c3435.4277 -355.9702 3431.748 -357.8125 3427.4238 -358.6914 c3427.0352 -358.7705 3426.6807 -358.8809 3426.3438 -359.0063 C3426.5059 -357.2944 3426.6582 -355.5815 3426.7607 -353.8628 c3427.1094 -347.9785 3426.332 -342.0112 3426.2354 -336.124 c3426.1328 -329.8682 3427.7422 -324.374 3429.4102 -318.4131 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF