%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 3.eps)%%CreationDate: 03.10.18 13:09%%Canvassize: 16383%%BoundingBox: 109 -2157 3835 1%%HiResBoundingBox: 109.9585 -2156.9258 3834.0107 0.289551%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -741.4468 408.3306 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 76 8%%BeginData: 5002 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFFCFFFCFCFFFFFCFFD2BFFCFFFFFFFCFCFCFFFCFFD38FFCFFD%0BFFCFCFFFCFCFFFFFCFFD2CFFCAFFFFCFC9FFFFFFCAFD05FFCAFD30FFC9%CFCFFD0DFFCAFFFFCFCAFD2BFFCFCFFFFFCFCFFFFFCFFFFFFFCACFCFFFCA%CFFD2FFFC9CEC9CFCAFD07FFCAFFCACFFFFFCAFD25FFCACFCACFC9CFFFFF%C9FFFFFFC9FFFFCFCACFCAFFCFFFFFFFC9FD31FFFD04CFFD08FFCFFFFFCF%FD25FFCFCFFD04FFCFCFCFFFCFFFFFCFFFFFC9CFFD06FFCAFD33FFCFC9CF%CACFCFFFFFFFCAFFCAFFC9FD27FFC9FD06FFCFC9CFCFFFC9FFCACFFD06FF%CACFFD24FFCAFD10FFCAFD04CFFFCFCFCACFCFFD29FFC9FD07FFC9CFCFFF%CACFFD06FFCAFD22FFCFFFFFCFCFCAFD10FFCACFCACFC9FFCACFC9CFFD2A%FFC9FD07FFC9CFCACFCAFFFFFFCACFCAFD0DFFCAFD14FFCFCAFFC9FFFFCF%CAFD12FFCACFFD04FFCFCFCAFD29FFC9CFCFFD09FFCFCFC9CFCFFD0EFFCF%CFFD13FFCFFFCFFFFFFFCFFD14FFCACFFFFFFFCFCFFFCAFD25FFCACFCAFF%CFCFCACFCACFCAFFFFFFC9FD05FFCACFCAFD0AFFCFCAFFCAFD10FFCFCAFD%04CFFFCFCFFD14FFCFC9CFCFCFC9FFFFCFFD24FFCAFD0AFFCFCAFFCFCFCA%FD06FFCFCFFD09FFCFFFCFCFFD12FFCACFCFFFCFCFCFFD13FFCFCAFFC9CF%CFCFC9CFCFFD23FFCFCFCAFD05FFCFFFC9CFCACFC9FFFFCFC9CFFD05FFCF%FD06FFCACFC9CFCACFCAFD0FFFCACFCACFC9CEC9CFCACFCAFD11FFCFCFFF%CFFFCFFD29FFFD05CFFFCFFFC9CFFFFFCFCFFFFFCFFFCFCFCFFFCFCFCAFD%06FFCFCFFFCFFD12FFCFCFFFFFCFC9CFCFFFCFFD11FFCFCAFFFFCFFFCFFD%2CFFCFFFCFFFCFCFFFFFFFCFC9FFFFFFCAFFFFFFCAFFCFFD07FFCFCFCAFD%13FFC9FFCFCFC9FFCAFFCAFD12FFCFFFFFFFCFFFCAFD2FFFCFCFFD04FFCF%CFFFFFFFCFFD24FFCAFFFFCFCFFD14FFCACFFFFFC9FFFFCFCFFD2DFFCFCF%CAFFFFFFCACFCAFFFFFFCAFD27FFCACFCAFD13FFCFFFFFCACFFFFFCAFD2E%FFCFCFFD05FFCFFFCFFFFFFFCFFD3CFFCAFFCACFCAFFFFCFFD2EFFCAFD05%FFC9FFCFCFFFFFCAFD3DFFCFCACFFFCFFFFFCFFD2DFFCFFD05FFCAFFFFFF%CFFFFFCFFD3DFFCAFFFFFFCAFFCAFD2EFFCFCAFFFFFFC9FD05FFCACFCAFD%41FFCFFFCFFD2FFFCFCFFFCAFD4AFFCACFCAFD2FFFCFCFCAFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDE2FFCAFD7EFFC9CF%FD7DFFCFFFCFFD7CFFCACFC9CFFD7CFFCFCFCFC9FD7CFFCFCFCACFFD7BFF%CFCFFFFFC9FD7CFFC9CFC9CFFD7EFFCFCAFD08FFC9FD74FFCFCACFFD08FF%CFFD74FFCAFD09FFCFCAFD73FFCACFFD09FFCFFD74FFCFFD04FFCFC9CFFF%FFCAFD75FFCACFCACFFFCFFFCAFFFFCFFD74FFCFCFCFFFCAFFFFCAFFCACF%CAFD74FFCFC9CFC9FFFFFFFD04CFFD43FFCFFD31FFCFCFCFFD05FFCFC9FD%43FFC9CFFFFFCFFD2EFFCFCFFD07FFCFFD42FFCFFFFD04CFFD2EFFCFFD08%FFCAFD42FFCFCFCFC9FFCAFD2DFFCACFFD07FFCFFD33FFCFFFFFCFCFFD0B%FFCFFFCFFFCFFD2EFFCFFD09FFCAFD31FFCACFCACFCACFFD0BFFCFCFCFCA%CFCAFFCFFD2BFFCAFD08FFCFFFFFFFCACFCFFD2DFFCAFFC9FFCAFD0BFFFD%05CFFFC9CFFD2AFFCFFD0AFFCACFCAFFCACFFD2DFFCFCACFCACFCAFD0BFF%C9CECAFFC9CFFD2AFFCACFFD0AFFCFC9FFCFFD1FFFCFFD0DFFFD04CFC9CF%CACFFD07FFCFCFFFFFCFC9FFCFFFCFFD2AFFCFFD07FFC9CFCFFFC9FFCFFD%1FFFCACFCAFD0BFFCACFCFCFC9CFCACFCAFD07FFCACFCFCFCACFCAFFCACF%CAFD28FFCFCAFD07FFFD05CFFD20FFCFCFFFCFCFFD0BFFCAFFCFFFCFFD0B%FFCACFCFFFFFFFCFCFCFFD29FFCFFD08FFCACFCACFCAFD1FFFCFCFCAFFCF%CFFFCFCAFD0BFFCFCFC9CFCAFD09FFC9FD2FFFC9FD0AFFCFCFC9FD21FFCA%FFFFFFCAFFCFCFFD0BFFCFCFFD0BFFCFFD0DFFCFFD1DFFCAFFFFFFCAFD0C%FFCACFFD20FFCACFCFFFCACFCAFFCAFD0BFFCFFD09FFCFFFFFCFCAFD0BFF%CAFFCAFD1CFFCFC9FFCACECACFFD0AFFCFCFFD21FFCFCFCAFFFFCFC9FD16%FFCFC9FFCFFFCAFD0AFFCFCACFFD0EFFCFFD0DFFCFFFCACFFFCFCAFD0AFF%CAFD25FFCACFC9C9CAFD15FFCACFC9CFC9CFCAFD09FFCFCECAFD0DFFCACF%C9FD0CFFCFCAC9CACFCAFD0AFFCFFD17FFCFFD0EFFCFCACFCFFD17FFCFCF%C9CFCFFD0BFFCFFFCFFD09FFCACFFFFD04CFFD0CFFCFCAFD0CFFCFCFFD12%FFCFFFC9CFCACFFD0EFFCFFFFFCFFD18FFCACFFD0CFFC9C9C9CFFD09FFCF%C9CFC9CFCAFD0DFFCAFD0EFFCAFD11FFCFCFCACFCFCFCAFD11FFCFFD19FF%CAFD0DFFCFCFCFFD0BFFC9CFCFFD0EFFCFFD0EFFCFCAFD11FFCAFFC9CFC9%CFCACFFD0FFFCFCFFD17FFCACFFD0EFFCAFD0BFFCACFCAFD0FFFCAFD0CFF%FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Layer 4) Ln0 Au*u1 D0 O0.00238 0.11249 0.431525 0 1 0.878431 0.623529 Xa0 J 0 j 1 w 10 M []0 d0 XR747.0313 0.289551 m747.0049 -0.337891 747.0684 -0.96875 747.2334 -1.58154 C747.0576 -2.52344 746.833 -3.45801 746.6006 -4.38574 c745.7554 -7.75586 744.6665 -11.0688 743.5796 -14.3672 c741.626 -20.2964 739.4683 -26.1548 737.335 -32.0205 c733.5562 -42.4102 725.8569 -51.4048 719.8677 -60.5449 c712.7822 -71.3579 704.0679 -80.7114 696.4951 -91.1567 c688.7935 -101.7803 680.0674 -111.5396 672.2007 -122.0659 c664.1528 -132.835 656.7588 -143.9731 648.0879 -154.2764 c639.9946 -163.8926 630.4316 -172.2222 620.2559 -179.5566 c614.9404 -183.3887 609.8438 -187.5107 604.5015 -191.3066 c600.3281 -194.272 595.2891 -198.0405 590.2715 -199.3081 c587.6294 -199.9756 586.2178 -201.7534 585.7866 -203.7764 C585.1191 -203.564 584.4521 -203.3491 583.7822 -203.1479 c581.2954 -202.4009 578.7617 -201.7422 576.209 -201.1343 C576.2173 -201.0679 576.2314 -201.0054 576.2383 -200.938 c576.5654 -197.6284 579.1313 -193.8745 580.4048 -190.7998 c582.1924 -186.4839 583.876 -182.1265 585.4985 -177.7461 c588.6494 -169.2393 591.3579 -160.6069 593.7651 -151.8638 c598.8721 -133.3135 604.3022 -114.9375 610.4102 -96.6899 c616.2417 -79.2676 621.2534 -60.8706 630.0762 -44.6787 c634.5688 -36.4341 638.4917 -27.8643 643.0625 -19.6348 c646.5239 -13.4023 647.9795 -5.50928 652.3599 0.289551 C637.5391 0.289551 L635.8936 -3.06152 634.4585 -6.52881 633.0469 -9.83789 c629.1514 -18.9688 623.8018 -27.4336 619.6055 -36.4478 c615.6372 -44.9722 611.6079 -53.1992 608.5498 -62.1289 c605.2134 -71.8726 601.7866 -81.584 598.5068 -91.3481 c592.1675 -110.2192 586.5093 -129.2148 581.2295 -148.4077 c578.6689 -157.7153 575.7134 -166.8638 572.3604 -175.917 c569.6655 -183.1919 565.105 -190.7305 563.6172 -198.4385 C563.1064 -198.3354 562.5952 -198.2319 562.0869 -198.1289 c557.646 -197.2271 553.1787 -196.4751 548.6973 -195.8091 C548.3672 -195.3501 547.9565 -194.9053 547.4351 -194.4868 c546.4214 -193.6733 546.0122 -190.4829 545.3965 -189.0068 c544.0581 -185.7964 543.7495 -181.77 542.9619 -178.3794 c540.938 -169.6719 539.8008 -160.9478 539.3452 -152.0215 c538.8779 -142.853 540.4409 -134.2339 541.4727 -125.1636 c542.457 -116.5078 541.9185 -107.605 541.9185 -98.9063 c541.9185 -90.5176 544.3252 -82.5498 546.6694 -74.5532 c549.0542 -66.4175 550.9458 -58.2744 552.7207 -49.9868 c554.5508 -41.4424 556.5015 -32.9258 558.8096 -24.4961 c559.8945 -20.5337 560.8872 -16.6118 562.1816 -12.7017 c562.7295 -11.0479 563.1934 -9.38232 563.6172 -7.69287 c563.7583 -7.07813 563.874 -6.45947 563.9731 -5.8374 C564.6094 -4.82227 565 -3.54736 565 -2 C565 -1.20361 565 -0.585449 v565 -0.280273 564.9629 0.004395 564.9282 0.289551 C551.8662 0.289551 L551.2588 -1.70508 551.1631 -3.80713 550.6357 -5.90674 c549.5024 -10.4199 547.667 -14.6812 546.7607 -19.2637 c544.9551 -28.3921 542.1445 -37.4126 540.1782 -46.5313 c538.2627 -55.4111 536.1782 -64.1118 533.6221 -72.832 c530.9116 -82.0776 528.917 -91.0996 528.917 -100.7617 c528.917 -110.2612 529.2793 -119.7813 527.9707 -129.2148 c527.356 -133.645 526.6641 -138.0601 526.1353 -142.502 c525.5542 -147.3843 526.3428 -152.8452 526.6982 -157.7334 c527.3672 -166.9312 529.0942 -175.8955 531.1216 -184.8721 c531.6865 -187.373 532.2119 -190.6226 533.0459 -193.7979 C526.3364 -193.041 519.6152 -192.3696 512.9102 -191.6416 c499.3564 -190.1704 483.6021 -190.0469 472.4453 -199.1812 c471.7568 -199.7446 471.1357 -200.3457 470.5566 -200.9707 C469.8281 -200.2266 468.8447 -199.6401 467.5796 -199.3081 c461.1953 -197.6313 455.3066 -193.25 449.3271 -190.4575 c442.6914 -187.3584 436.3403 -183.7583 429.7451 -180.5732 c423.4766 -177.5464 417.2192 -174.3389 410.6797 -171.9302 c403.8511 -169.4146 398.4556 -163.957 392.0723 -160.4839 c385.7339 -157.0352 379.231 -153.4907 372.7144 -150.4253 c366.0796 -147.3042 359.0981 -146.1309 351.8779 -145.2773 c345.5449 -144.5283 339.8018 -143.0791 333.9072 -145.5542 C331.5161 -142.8018 328.5498 -140.8062 325.3608 -138.7441 c320.2432 -135.4355 315.5605 -131.1987 311.1592 -127.0068 c307.1494 -123.1875 303.7358 -118.8481 299.562 -115.1621 c295.4902 -111.5659 290.8901 -108.4331 286.3311 -105.4971 c277.4888 -99.8032 267.6484 -93.6753 257.2754 -91.4219 c251.6699 -90.2041 246.1807 -90.6064 241.0034 -92.2119 C240.3394 -91.605 239.5029 -91.1094 238.4731 -90.7837 c229.0571 -87.8066 221.5469 -79.834 213.8721 -73.9424 c209.8657 -70.8667 205.4385 -68.9702 200.7695 -67.0977 c195.8018 -65.105 191.626 -62.4995 187.1548 -59.5542 c182.7573 -56.6577 178.1611 -54.2212 173.21 -52.4116 c168.5557 -50.7109 163.4473 -50.4717 158.7031 -49.0439 c150.7832 -46.6597 141.4912 -52.4443 139.5767 -60.0762 c137.4438 -68.5767 140.8486 -75.0039 147.189 -80.6636 c153.8745 -86.6323 161.4102 -91.708 169.271 -95.9653 c178.6069 -101.022 188.4043 -105.3228 198.2036 -109.396 c203.0981 -111.4302 208.3071 -112.7275 213.3716 -114.2813 c216.8765 -115.3569 221.084 -116.1807 223.8784 -118.6948 C224.123 -121.4561 224.7783 -124.1094 226.4946 -126.6514 c229.459 -131.043 234.4702 -134.2021 238.772 -137.1479 c243.416 -140.3286 248.3984 -143.0161 253.3574 -145.6641 c258.3032 -148.3042 263.2744 -150.8999 268.2437 -153.4941 c273.4521 -156.2129 278.522 -159.6914 284.1777 -161.3828 c290.1016 -163.1538 296.2861 -163.5459 302.1987 -165.5171 c304.8652 -166.4058 307.2905 -167.4829 310 -168.248 c312.7754 -169.0317 316 -168.4805 319 -168.4805 c319.0107 -168.4805 319.0205 -168.479 319.0313 -168.479 C318.8203 -169.7808 319.125 -171.2227 320.1777 -172.6816 c324.4224 -178.563 330.0093 -182.4507 335.6636 -186.8555 c341.6841 -191.5454 347.5894 -195.0044 354.7495 -197.6211 c362.0249 -200.2793 368.8076 -203.6094 375.5317 -207.4595 c382.3853 -211.3833 388.481 -216.2451 395.5396 -219.8682 c402.103 -223.2363 408.0903 -227.4526 414.6064 -230.8623 c420.9761 -234.1958 428.9102 -236.4639 435.873 -238.1646 c441.9634 -239.6523 446.4595 -241.4561 451.2944 -242.6934 c452.8452 -243.0903 454.5698 -243.3105 456.2559 -243.2573 C457.3628 -247.9497 459.1182 -252.5083 461.5449 -256.8164 c468.3311 -268.8623 480.4585 -273.9922 490.6323 -282.3574 c493.0801 -284.3701 495.4771 -286.0703 497.9502 -287.6313 C476.6582 -295.7163 459.1436 -311.5381 442.9219 -327.4414 c421.2456 -348.6924 401.2334 -372.3647 384.498 -397.7051 c376.1587 -410.3335 370.0293 -423.8359 364.5605 -437.9014 c359.0254 -452.1392 352.4199 -465.8579 346.7002 -480.0073 c341.5669 -492.7056 336.9731 -508.3066 341.7842 -521.7456 c346.6138 -535.2373 355.7476 -545.751 370.5884 -547.4736 c384.5547 -549.0947 392.9404 -540.5776 402.7363 -532.0342 c407.9951 -527.4478 413.6182 -523.3027 418.8579 -518.6924 c424.7773 -513.4844 429.5679 -507.1406 434.3623 -500.9209 c443.7505 -488.7412 450.9824 -475.2075 460.334 -463.0073 c464.5127 -457.5547 468.0742 -451.2422 471.6753 -445.3862 c473.5298 -442.3711 476.0874 -439.9272 478.5391 -437.4023 C476.377 -447.4316 474.8447 -457.6104 473.3311 -467.7368 c471.0596 -482.938 468.6323 -498.1162 466.6445 -513.3584 c464.6055 -528.9966 463.6704 -544.2202 463.939 -559.9854 c464.1836 -574.3198 465.3452 -587.9956 468.689 -601.9624 c471.5728 -614.0083 479.1743 -622.4355 491.8315 -624.2417 c497.9951 -625.1211 504.9917 -625.4653 511.1406 -624.332 c517.7666 -623.1104 522.9121 -618.3735 527.2871 -613.5146 c536.5239 -603.2583 542.3247 -590.5601 546.2534 -577.4521 c550.3086 -563.9214 552.0039 -549.8135 554.7939 -536.001 c557.8555 -520.8447 561.916 -506.043 563.9482 -490.6836 c568.0693 -459.5347 564.6133 -427.9795 567.7363 -396.7339 c569.2769 -381.3169 569.8057 -365.7817 567.6582 -350.4019 c565.7456 -336.7075 564.7046 -322.6377 560.6221 -309.3579 C562.7222 -309.4365 564.8188 -309.52 566.8906 -309.8872 c580.4097 -312.2847 594.5132 -312.458 607.8921 -309.1094 c610.0229 -308.5762 612.1538 -307.8647 614.2173 -306.9834 C615.0664 -310.7212 616.3799 -314.4302 617.7393 -317.875 c619.8706 -323.2759 623.5547 -326.8984 628.2559 -330.1475 c637.1094 -336.2656 649.4414 -341.688 660.5117 -339.8467 c666.8022 -338.7998 672.6284 -336.4102 678.2969 -333.5439 c683.6841 -330.8203 689.146 -328.0542 693.062 -323.334 c694.8335 -321.1987 696.8003 -319.292 698.502 -317.0752 c700.4795 -314.499 701.6548 -311.1284 703.4185 -308.3584 c707.105 -302.5698 710.3149 -296.8608 711.8125 -290.1279 c714.4009 -278.4927 714.3467 -266.0884 709.5132 -255.0732 c704.7393 -244.1938 696.0542 -232.479 684.7661 -227.9102 c678.8901 -225.5317 672.9404 -225.9746 666.7163 -225.9746 c660.1387 -225.9746 653.8804 -226.21 647.8506 -229.1812 c642.6777 -231.73 638.7388 -235.7939 634.8247 -239.937 c633.3062 -241.5439 632.0293 -243.2578 630.853 -245.0205 C630.8018 -244.9219 630.7515 -244.8228 630.7007 -244.7241 c627.6313 -238.7739 623.5444 -233.3628 619.77 -227.8516 c615.4336 -221.52 609.5107 -217.9844 603.5547 -213.375 c602.1089 -212.2559 600.7129 -211.0322 599.2515 -209.9146 C608.8208 -205.7422 617.3613 -197.7583 625.4258 -191.7891 c636.501 -183.5913 647.0205 -175.0986 656.1812 -164.7427 c665.7852 -153.8848 673.8325 -141.8232 682.3296 -130.1172 c686.8374 -123.9072 691.7539 -117.9287 696.772 -112.1255 c701.5879 -106.5566 705.5513 -100.5938 709.9507 -94.6821 c714.314 -88.8193 719.436 -83.5791 723.8228 -77.7329 c727.8467 -72.3691 731.2671 -66.5977 735.2529 -61.2095 c741.4795 -52.792 747.0181 -43.2759 750.6172 -33.4302 c753.1982 -26.3701 755.7451 -19.291 757.936 -12.0981 c758.9961 -8.61865 760.7202 -3.75732 760.2021 0.289551 C747.0313 0.289551 Lf0 D224.6396 -104.4326 m222.1377 -103.396 219.4976 -102.5586 216.8276 -101.7456 c207.5259 -98.9131 198.7891 -95.6606 189.9316 -91.6357 c181.4707 -87.791 173.1211 -83.668 165.3711 -78.5054 c161.0791 -75.647 153.3711 -70.8813 151.709 -65.75 c149.5215 -58.9976 162.7178 -63.2944 164.8809 -63.7119 c174.3931 -65.5464 181.7241 -71.8955 189.8691 -76.6924 c193.498 -78.8291 198.0112 -79.7974 201.8311 -81.6196 c206.0732 -83.6436 209.647 -86.999 213.2988 -89.9087 c217.8657 -93.5479 222.2637 -97.1206 227.2046 -99.8896 C225.9648 -101.1616 225.1572 -102.7354 224.6396 -104.4326 Cf322.311 -156.2129 m321.3906 -155.7544 320.291 -155.4805 319 -155.4805 c315 -155.4805 311.313 -155.1377 307.0957 -153.5601 c302.5234 -151.8491 297.9297 -150.7959 293.124 -149.9922 c283.7529 -148.4238 275.5737 -142.7173 267.2598 -138.3179 c259.3301 -134.1221 251.3604 -130.063 243.9453 -124.9849 c241.6777 -123.4321 238.7314 -121.7695 237.4224 -119.3423 C237.9712 -117.8081 237.8877 -116.0156 236.7925 -114.1768 c236.7109 -114.04 236.6211 -113.917 236.5381 -113.7837 C236.3574 -111.4712 236.332 -108.9214 237.9253 -107.9238 c245.6138 -103.1104 252.9033 -102.6016 261.2456 -106.2471 c265.2441 -107.9946 268.8438 -110.481 272.627 -112.6265 c276.3633 -114.7456 280.123 -116.7539 283.5518 -119.3604 c287.1538 -122.0977 290.7046 -124.5327 293.9902 -127.6934 c297.2021 -130.7827 299.959 -134.2866 303.1841 -137.3584 c306.6187 -140.6294 310.3296 -143.6245 314.1035 -146.4912 c317.1367 -148.7949 321.5586 -150.8662 324.0352 -153.9512 C323.4482 -154.6987 322.875 -155.4561 322.311 -156.2129 Cf462.627 -213.4214 m462.1079 -214.2031 461.5801 -215.0205 461.0737 -215.8613 C458.6787 -215.9839 456.4844 -217.4131 455.874 -220.5435 c455.2944 -223.5156 454.9658 -226.5039 454.876 -229.4824 C454.6035 -229.6289 454.3452 -229.8027 454.1011 -230.0015 C453.6621 -229.8828 453.2246 -229.7578 452.79 -229.6387 c452.0107 -229.4248 451.2373 -229.2129 450.4473 -229.0425 c450.27 -229.0044 450.1089 -228.9702 449.9604 -228.939 C449.7158 -228.8149 449.2705 -228.6235 448.5249 -228.3354 c442.9756 -226.1924 437.0654 -225.1284 431.4165 -223.2559 c425.7251 -221.3691 420.3896 -219.4722 415.3359 -216.1934 c409.5996 -212.4712 403.6274 -209.543 397.6289 -206.2847 c392.1953 -203.333 387.4136 -199.3823 382.0933 -196.2344 c376.0928 -192.6841 369.7861 -189.4116 363.2671 -186.9404 c360.4707 -185.8804 357.6484 -184.8872 354.8442 -183.8486 c351.7124 -182.6885 348.9995 -180.4751 346.231 -178.6294 c341.1558 -175.2461 335.0063 -171.1133 331.4033 -166.1201 c331.3271 -166.0146 331.2446 -165.9219 331.1655 -165.8223 C333.4043 -162.7598 335.7505 -159.6558 338.8008 -157.5737 c340.9517 -156.1055 344.8623 -157.2524 347.2661 -157.6685 c350.3398 -158.1997 353.4551 -158.4155 356.5269 -158.9727 c363.6021 -160.2568 368.7925 -163.3906 375.1016 -166.52 c381.0347 -169.4624 386.9927 -172.2573 392.54 -175.9019 c395.4341 -177.8037 397.9038 -180.0591 400.9766 -181.7495 c403.8242 -183.3164 406.8364 -184.1685 409.7598 -185.5142 c415.8042 -188.2959 421.8379 -191.0903 427.7964 -194.0596 c433.8105 -197.0566 439.7383 -200.1694 445.7788 -203.1226 c451.6738 -206.0044 457.3315 -209.9326 463.6978 -211.7119 C463.355 -212.2861 463.001 -212.8574 462.627 -213.4214 cf473.2246 -423.0537 m470.5049 -428.749 464.46 -431.9702 461.2856 -437.4312 c457.5049 -443.9355 453.1187 -450.0835 449.1084 -456.4458 c445.0972 -462.8105 440.3872 -468.7524 436.4189 -475.1841 c431.9053 -482.5005 427.0874 -489.3286 421.7681 -496.0938 c412.5659 -507.7979 401.021 -516.0034 390.0962 -525.9155 c386.0288 -529.606 381.1157 -534.9063 375.2017 -534.8311 c367.9463 -534.7388 362.415 -532.0518 358.1865 -526.1284 c349.1729 -513.5039 353.5903 -498.4609 358.5659 -485.1797 c363.9121 -470.9106 370.9434 -457.2822 376.4434 -443.0444 c381.9458 -428.8003 388.3286 -415.4639 396.7593 -402.6978 c405.3354 -389.7119 415.064 -377.4761 425.1724 -365.6621 c438.499 -350.0864 452.7227 -335.2842 468.1333 -321.7559 c481.4009 -310.1089 495.8408 -300.5381 513.1875 -296.6328 C514.0405 -297.2129 514.8931 -297.791 515.751 -298.3481 c517.8667 -299.7222 520.2695 -300.7002 522.7134 -301.5244 C519.4106 -306.5024 517.6074 -311.7773 514.9609 -317.0806 c511.689 -323.6372 508.6968 -330.3008 506.2363 -337.21 c501.2563 -351.1963 497.3569 -365.4668 494.5479 -380.0107 c491.8291 -394.0859 486.772 -407.7397 482.6377 -421.4634 C479.79 -419.0356 475.2793 -418.751 473.2246 -423.0537 cf555.6123 -385.4409 m555.2627 -392.9331 554.04 -400.3672 553.9229 -407.8594 c553.7979 -415.8623 553.1709 -423.8481 553.0454 -431.8521 c552.7979 -447.6982 553.7471 -463.6108 552.2588 -479.4053 c550.7764 -495.1431 547.0645 -510.1279 543.7217 -525.5166 c540.6982 -539.4326 538.7979 -553.5732 535.4766 -567.4243 c532.2632 -580.8228 527.1294 -593.7559 518.0947 -604.3223 c516.1133 -606.6401 513.9121 -608.8086 511.3784 -610.5107 c508.9097 -612.1689 505.791 -611.832 502.9541 -611.8389 c496.6479 -611.854 490.3857 -611.9521 485.271 -607.7295 c482.1567 -605.1582 481.501 -599.7368 480.6489 -596.0659 c479.293 -590.2222 478.1938 -584.4355 477.5952 -578.4541 c476.2559 -565.0605 476.334 -550.9902 476.9893 -537.5542 c477.6523 -523.959 479.9814 -510.2583 481.9893 -496.8071 c484.0454 -483.0332 486.0288 -469.2368 488.3193 -455.5 c490.5137 -442.3384 494.1484 -429.874 497.6367 -417.0474 c501.1826 -404.0093 505.9536 -391.374 508.0435 -377.9692 c510.0083 -365.3652 514.6626 -352.7197 518.7725 -340.666 c520.7705 -334.8042 523.3638 -329.147 526.1865 -323.6421 c529.0498 -318.0566 530.8652 -312.3672 534.5381 -307.1777 c535.0625 -306.4365 535.3887 -305.7012 535.5654 -304.9854 C539.0786 -305.7148 542.6172 -306.3516 546.1089 -307.1084 C547.0557 -309.6748 547.9424 -312.2583 548.6299 -314.9004 c550.7119 -322.9053 552.1543 -330.9404 553.207 -339.144 c554.1455 -346.4595 555.1597 -353.7676 555.7993 -361.1162 c556.5049 -369.2197 555.9902 -377.3354 555.6123 -385.4409 cf633.2827 -284.7549 m635.5708 -278.7549 636.4521 -271.9658 636.8706 -265.5923 c636.9873 -263.8188 636.8896 -262.0928 636.6387 -260.4023 C638.2964 -257.3867 639.7256 -254.2373 641.8867 -251.5352 c644.7031 -248.0127 648.1582 -244.2241 651.9297 -241.729 c655.2715 -239.5181 659.2422 -238.9746 663.147 -238.9746 c668.0605 -238.9746 673.7891 -238.1577 678.5508 -239.4268 c687.252 -241.7456 692.9512 -251.542 696.7666 -258.9443 c700.981 -267.1211 701.1772 -275.936 699.6221 -284.9272 c698.7998 -289.6816 697.1216 -293.4526 694.7397 -297.6016 c692.2837 -301.8794 689.8931 -306.397 687.2769 -310.5137 c682.3618 -318.249 671.8887 -322.9888 663.5488 -325.7993 c655.8345 -328.3984 646.312 -326.3174 639.6011 -321.9282 c636.0947 -319.6353 632.4697 -317.9229 630.2632 -314.2104 c629.2437 -312.4946 628.8545 -310.2988 628.3496 -308.394 c627.6934 -305.917 626.4888 -303.7148 626.3262 -301.1143 c626.2725 -300.2544 626.0796 -299.4878 625.7881 -298.8047 C629.2446 -294.7388 631.3457 -289.834 633.2827 -284.7549 cf605.4092 -230.7354 m608.2715 -233.1069 610.3188 -236.8701 612.3584 -239.9292 c616.1875 -245.6719 619.9106 -251.353 622.5444 -257.77 c622.625 -257.9663 622.6895 -258.167 622.7622 -258.3652 C621.8687 -260.5713 622.4985 -262.6401 623.8848 -264.1416 C624.1064 -268.8569 622.9385 -273.7612 621.749 -278.2231 c620.271 -283.7661 617.8096 -289.6787 612.9375 -292.9966 c608.2271 -296.2041 602.1177 -297.4028 596.5566 -298.063 c589.6475 -298.8838 582.7446 -298.7905 575.8291 -298.1162 c572.3066 -297.7725 568.6196 -296.4736 565.1006 -296.4692 c561.9692 -296.4653 558.8354 -296.4883 555.751 -295.9565 C555.3784 -294.9419 555.0151 -293.9229 554.6719 -292.8931 c552.4399 -286.1978 543.1069 -287.5986 541.9004 -293.021 C539.9268 -292.5986 537.9526 -292.1758 535.9785 -291.7544 c532.457 -291.0024 529.0137 -289.936 525.6206 -288.7402 c521.6279 -287.3325 518.1631 -284.3228 514.583 -282.1035 c511.7241 -280.3315 508.5303 -279.2798 505.6216 -277.6064 c502.6572 -275.9014 500.1641 -273.394 497.4912 -271.2861 c492.0171 -266.9688 485.7036 -263.8618 480.4141 -259.2847 c472.3306 -252.2905 467.8423 -242.103 467.7256 -231.6094 C470.2988 -230.314 472.1294 -227.5444 471.2744 -224.4297 C471.3833 -224.2031 471.5381 -223.9014 471.7734 -223.4912 c472.2725 -222.6221 472.8286 -221.7891 473.3193 -220.9146 c474.6025 -218.6294 476.1606 -216.6421 477.1523 -214.1875 c479.397 -208.6304 484.6836 -206.3691 490.1416 -204.9341 c496.8994 -203.1577 504.2456 -203.8188 511.1133 -204.458 c519.0825 -205.1997 527.0356 -206.1973 534.9902 -207.0811 c549.6445 -208.7095 564.3325 -211.4619 578.6089 -215.2026 c582.1235 -216.1235 585.604 -217.2759 588.9277 -218.7461 c591.9033 -220.0625 594.4067 -222.6313 596.9854 -224.5957 c599.7354 -226.6904 602.752 -228.5342 605.4092 -230.7354 cf*U*u1 D120.2246 -1881.7764 m121.5415 -1884.4512 122.5996 -1887.2148 123.7354 -1889.9668 c125.1128 -1893.3047 127.209 -1896.0615 128.8574 -1899.2441 c130.4551 -1902.3271 132.9985 -1904.8125 134.5366 -1907.8789 c136.209 -1911.2119 138.0605 -1914.3867 140.2314 -1917.4189 c144.6533 -1923.5957 148.8618 -1929.8457 154.3496 -1935.1992 c163.8931 -1944.5078 177.6943 -1951.4043 190.6816 -1954.0791 c194.9673 -1954.9619 200.2412 -1955.6602 205.2021 -1955.4092 C205.2061 -1955.707 205.2246 -1955.9961 205.2627 -1956.2715 C202.0615 -1961.0928 199.7217 -1966.4941 196.8442 -1971.4902 c192.8936 -1978.3486 189.4355 -1985.4834 185.6133 -1992.4141 c182.2456 -1998.5215 178.189 -2004.168 174.5513 -2010.1064 c170.6963 -2016.4004 165.6196 -2021.9326 162.4927 -2028.6582 c160.3237 -2033.3232 156.7666 -2037.2178 154.6948 -2042.0029 c152.6328 -2046.7666 151.4531 -2051.9131 149.3521 -2056.6348 c144.627 -2067.2529 143.3691 -2079.0283 142.4111 -2090.5801 c141.4541 -2102.1191 141.2949 -2114.585 143.6475 -2125.9541 c144.7847 -2131.4492 146.7588 -2137.1357 148.6284 -2142.4297 c150.2959 -2147.1504 153.3613 -2151.8779 154.0635 -2156.9258 C167.0713 -2156.9258 L166.5146 -2151.3164 164.4858 -2145.2617 161.8057 -2140.4014 c160.2324 -2137.5488 159.5864 -2134.0449 158.7017 -2130.9355 c157.5708 -2126.9629 156.2334 -2123.1709 155.54 -2119.082 c154.3652 -2112.1582 155.0981 -2104.7793 155.127 -2097.7949 c155.1602 -2089.7129 156.3232 -2081.7539 157.6328 -2073.7969 c158.6284 -2067.75 160.5942 -2061.8389 163.144 -2056.2637 c164.5029 -2053.291 165.2563 -2050.0986 166.5493 -2047.1104 c167.9868 -2043.79 170.1563 -2040.7715 172.125 -2037.7539 c175.7739 -2032.1631 179.0679 -2026.5068 182.9683 -2021.0371 c187.2666 -2015.0098 191.2739 -2008.501 195.0435 -2002.1279 c202.5742 -1989.3965 208.4707 -1975.6787 216.3213 -1963.1426 c224.0522 -1950.7969 229.3418 -1937.1396 234.7896 -1923.6113 c237.5381 -1916.7861 239.9292 -1909.834 241.7881 -1902.7139 c243.6323 -1895.6504 246.0273 -1888.7871 246.0273 -1881.4336 c246.0273 -1870.4355 246.062 -1859.4531 245.7656 -1848.4697 C246.2163 -1848.0469 246.6328 -1847.5391 246.9956 -1846.9238 c248.8696 -1843.748 250.9907 -1840.7402 253.2783 -1837.8564 C256.1924 -1838.7842 259.3101 -1839.0049 262.7168 -1839.0137 c269.8491 -1839.0313 276.9521 -1839.9404 284.1191 -1839.9404 c291.46 -1839.9404 298.6904 -1840.9385 306.0713 -1840.7998 c313.918 -1840.6514 321.7344 -1839.7637 329.3716 -1837.9453 c336.7339 -1836.1914 343.7803 -1833.2754 350.7285 -1830.3301 c354.0186 -1828.9355 357.0732 -1827.1396 360.2988 -1825.6084 c363.7847 -1823.9531 367.4985 -1822.9365 370.6519 -1820.6621 c380.7007 -1813.4141 390.6479 -1800.7539 390.7266 -1787.9902 c390.793 -1777.2373 385.7427 -1765.3564 374.5488 -1762.0381 c361.3228 -1758.1162 349.2578 -1761.9912 336.3735 -1765.2158 c321.9761 -1768.8193 308.9063 -1775.4805 295.3779 -1781.2852 c281.6235 -1787.1865 273.8164 -1799.877 262.7583 -1809.3652 c256.4141 -1814.8096 250.1899 -1820.9629 244.7397 -1827.626 C243.8325 -1814.666 242.4756 -1801.8232 240.6782 -1788.9092 c239.6104 -1781.2373 238.814 -1773.5391 238.623 -1765.793 c238.4233 -1757.6787 237.25 -1749.8438 236.0762 -1741.8232 c233.9077 -1727.0146 234.897 -1711.9131 234.897 -1696.9473 c234.897 -1690.1318 236.5049 -1683.2959 236.7334 -1676.4521 c236.9917 -1668.6934 239.2368 -1661.1152 240.7871 -1653.542 c242.2266 -1646.5127 243.1079 -1639.7451 245.5078 -1632.9229 c248.2583 -1625.1035 252.2813 -1618.5127 257.4487 -1612.0898 c266.6108 -1600.7002 275.7168 -1589.6816 283.4741 -1577.2373 c287.2974 -1571.1045 290.7915 -1564.7695 294.3008 -1558.4541 c298.127 -1551.5684 300.6729 -1544.0234 304.5039 -1537.1201 c311.5425 -1524.4375 318.9585 -1511.8135 325.5059 -1498.8438 c327.7974 -1494.3047 330.2832 -1489.9004 333.4404 -1485.9023 c337.0459 -1481.3359 339.3496 -1476.1592 341.7949 -1470.9268 c343.9238 -1466.3711 346.7271 -1462.1494 348.8398 -1457.6152 c351.2998 -1452.3379 352.4639 -1446.5156 354.1343 -1440.9639 c357.5259 -1429.6904 361.4683 -1418.6074 364.9238 -1407.3613 c366.6812 -1401.6426 368.0547 -1395.8184 369.1602 -1389.9404 c370.0444 -1385.2402 369.9351 -1380.0313 372.2158 -1375.7246 c376.1357 -1368.3223 364.915 -1361.7529 360.9902 -1369.1641 c358.0654 -1374.6875 357.6982 -1380.4531 356.625 -1386.4854 c355.2578 -1394.166 353.165 -1401.6855 350.7417 -1409.0938 c348.4414 -1416.1279 346.002 -1423.0986 343.8247 -1430.1748 c341.5615 -1437.5293 340.126 -1445.666 336.874 -1452.6445 c334.0801 -1458.6377 330.5977 -1464.4297 327.7407 -1470.4365 c324.5337 -1477.1787 319.4038 -1482.7207 315.8379 -1489.2852 c308.9761 -1501.917 302.5068 -1514.8418 295.3872 -1527.3164 c287.8623 -1540.501 281.9419 -1554.4502 274.1533 -1567.5449 c266.6035 -1580.2393 257.5498 -1591.4902 248.2563 -1602.8975 c246.5503 -1604.9912 244.8828 -1607.1836 243.2861 -1609.459 C243.4419 -1602.9297 242.4634 -1596.5605 241.1597 -1590.126 c238.1597 -1575.3203 233.3008 -1561.543 227.293 -1547.6855 c224.583 -1541.4365 221.4741 -1535.3311 218.6196 -1529.1436 c215.3125 -1521.9746 211.2012 -1515.7969 205.6328 -1510.2285 c197.1221 -1501.7178 186.9434 -1489.4893 174.0391 -1488.1172 c156.5894 -1486.2617 155.0898 -1514.9014 155.1187 -1526.5352 c155.1558 -1541.4922 157.1816 -1556.7432 162.2339 -1570.8857 c167.0571 -1584.3877 177.4673 -1596.6719 186.7344 -1607.4102 c192.4946 -1614.085 200.8662 -1619.3926 208.4932 -1623.7139 c212.8306 -1626.1719 217.749 -1627.7188 222.499 -1629.1445 c223.3115 -1629.3887 224.0942 -1629.5977 224.8564 -1629.8311 C224.791 -1630.21 224.7275 -1630.5928 224.6797 -1631 C225 -1631 L225 -1631.2334 L225 -1635.1846 227.4844 -1637.2031 230.2725 -1637.459 C229.8511 -1639.3887 229.5239 -1641.334 229.3174 -1643.292 c228.5786 -1650.293 226.646 -1657.126 225.2822 -1664.0195 c223.8154 -1671.4336 223.7988 -1678.8916 222.9893 -1686.375 c221.4116 -1700.9531 221.5122 -1715.8682 221.6865 -1730.5488 c221.7739 -1737.9023 223.5454 -1745.3789 224.6602 -1752.6338 c225.9141 -1760.7979 225.5635 -1769.0791 226.3003 -1777.2949 c227.7183 -1793.1104 230.5234 -1808.6924 231.5674 -1824.5605 c232.6074 -1840.373 233.0273 -1856.1182 233.0273 -1871.9619 c233.0273 -1878.4004 233.4805 -1884.5078 231.4346 -1890.6787 c228.9634 -1898.1309 227.5386 -1905.8535 224.8794 -1913.2871 c223.4287 -1917.3438 221.8066 -1921.334 220.1392 -1925.3057 C219.6162 -1921.6641 218.4888 -1918.1875 216.3857 -1915.0322 c212.4883 -1909.1846 209.3242 -1903.2275 206.1831 -1896.9443 c204.6587 -1893.8955 201.8462 -1891.0752 199.7061 -1888.4404 c197.0366 -1885.1543 194.7036 -1881.4619 191.7212 -1878.4697 c189.2207 -1875.9609 187.2246 -1872.8799 184.6025 -1870.5469 c182.3052 -1868.5029 179.4756 -1867.1133 176.937 -1865.4092 c174.5811 -1863.8271 172.6899 -1861.5254 170.2959 -1859.915 c167.5415 -1858.0635 164.2109 -1857.502 161.1963 -1856.2988 c148.8516 -1851.373 136.6201 -1845.8848 124.0356 -1841.5498 c118.9272 -1839.791 112.8462 -1841.0938 110.8223 -1846.5547 c108.7515 -1852.1396 110.8584 -1858.3984 112.4106 -1863.8506 c114.2134 -1870.1816 117.3315 -1875.9004 120.2246 -1881.7764 cf0 D274.6646 -1816.166 m279.561 -1811.7344 284.5771 -1806.6973 288.7114 -1801.5557 c292.8916 -1796.3564 298.8101 -1793.8828 304.7412 -1791.2988 c317.3828 -1785.792 329.7534 -1779.8262 343.3711 -1776.9316 c351.7915 -1775.1426 366.2969 -1768.8125 373.6187 -1776.4063 c381.9009 -1784.9961 376.6328 -1796.3828 369.4272 -1803.8008 c367.6069 -1805.6738 365.8726 -1807.6191 363.9834 -1809.4258 c361.7119 -1811.5977 358.1143 -1812.4688 355.2837 -1813.6875 c348.4775 -1816.6162 342.1162 -1820.1064 335.0991 -1822.625 c321.9014 -1827.3623 307.2891 -1828.9209 293.3262 -1827.6279 c286.3208 -1826.9785 279.3765 -1827.2461 272.3687 -1826.7959 c269.5762 -1826.6162 266.8188 -1826.2344 264.0283 -1826.0811 C267.502 -1822.6738 271.0977 -1819.3945 274.6646 -1816.166 cf229.4409 -1617.5791 m222.8853 -1616.0508 216.4189 -1613.7324 210.8887 -1609.8633 c205.7832 -1606.292 199.8394 -1603.3281 195.98 -1598.2715 c191.0186 -1591.7715 185.8994 -1585.4541 181.1392 -1578.792 c172.8696 -1567.2178 169.541 -1552.0352 168.4604 -1538.0137 c167.7397 -1528.6572 167.9556 -1519.2256 169.7476 -1510.002 c170.2568 -1507.3779 171.1411 -1503.3701 172.5161 -1501.6328 c172.5571 -1501.5811 172.9614 -1501 173.2495 -1501 C173.2881 -1501 L174.4082 -1501 177.9014 -1503.2148 179.394 -1504.0742 c185.4795 -1507.5781 190.1353 -1513.1094 195.0464 -1518.0215 c200.8291 -1523.8027 204.688 -1529.8438 208.1138 -1537.2695 c214.2842 -1550.6445 220.7441 -1563.9277 225.0229 -1578.0928 c227.0493 -1584.8018 228.2695 -1591.6641 229.5889 -1598.5352 c230.6743 -1604.1914 231.0854 -1611.5791 229.4409 -1617.5791 Cf154.8164 -1867.7207 m159.918 -1869.4766 163.6895 -1870.9063 167.6816 -1874.5547 c169.6636 -1876.3652 172.0493 -1877.7529 174.3379 -1879.1289 c177.1313 -1880.8086 178.9512 -1883.916 181.1675 -1886.2705 c185.7402 -1891.1279 189.9697 -1896.625 193.9243 -1902.0098 c197.686 -1907.1309 199.7554 -1913.4844 203.3057 -1918.8105 c206.875 -1924.165 207.2754 -1928.7363 207.1753 -1935.1045 c207.1377 -1937.4824 206.9155 -1939.8164 206.6353 -1942.1377 C202.0762 -1942.8496 196.6655 -1942.0645 192.5405 -1941.2148 c186.7583 -1940.0234 181.2695 -1937.7051 176.1929 -1934.7451 c170.8027 -1931.6025 165.5537 -1928.1836 161.2251 -1923.6689 c156.5938 -1918.8389 152.9194 -1913.2412 149.2773 -1907.6777 c147.6279 -1905.1582 146.3115 -1902.4131 144.9644 -1899.7275 c143.4736 -1896.7568 140.854 -1894.1709 139.2686 -1891.1113 c138.1978 -1889.0449 136.624 -1887.3662 135.729 -1885.1982 c134.5664 -1882.3818 133.4302 -1879.5732 132.1924 -1876.7881 c129.751 -1871.2949 126.5078 -1866.251 124.9463 -1860.3945 c124.4785 -1858.6396 123.981 -1856.8994 123.5396 -1855.1406 C134.1021 -1858.9609 144.2427 -1864.082 154.8164 -1867.7207 cf*U*u1 D693.6357 -2130.293 m695.0977 -2132.4336 696.8335 -2133.9805 698.7144 -2135.7139 c700.3979 -2137.2656 703.46 -2138.3184 704.7666 -2140.1484 c708.1216 -2144.8467 712.2656 -2147.1299 717.3818 -2149.5547 c722.0566 -2151.7695 726.5806 -2154.3076 731.0444 -2156.9258 C770.3989 -2156.9258 L769.3594 -2155.4922 767.7134 -2154.4648 765.4526 -2154.3682 c761.4858 -2154.1992 757.6074 -2152.3467 753.7085 -2151.5469 c749.3892 -2150.6621 745.0581 -2150.1396 741.2168 -2147.8359 c733.7349 -2143.3496 725.9268 -2139.666 718.2891 -2135.4951 c716.3818 -2134.4531 715.5239 -2132.7764 714.1777 -2131.1553 c712.9248 -2129.6465 711.2847 -2128.7109 709.6445 -2127.6689 c706.4214 -2125.6211 704.71 -2122.9795 702.2729 -2120.166 c701.5073 -2119.2822 695.1387 -2114.7158 695.2651 -2114.4609 c696.7188 -2111.5371 703.4658 -2108.3164 706.46 -2108.0645 c715.6709 -2107.2871 724.9951 -2105.752 734.2617 -2105.9014 c739.2241 -2105.9805 742.6895 -2107.666 747.0635 -2109.7158 c750.458 -2111.3066 753.5454 -2112.585 756.5313 -2114.4199 C758.665 -2122.6123 761.6899 -2130.5762 765.4053 -2138.1777 c768.6035 -2144.7188 772.6406 -2150.8086 776.6055 -2156.9258 C796.7842 -2156.9258 L796.5186 -2153.0752 796.0635 -2149.1182 795.3262 -2145.46 c794.2417 -2140.0791 790.7715 -2136.1074 787.6797 -2131.8086 c784.793 -2127.7939 783.2324 -2122.9805 780.3076 -2118.9092 c776.9849 -2114.2813 772.4609 -2110.2783 767.9771 -2106.6836 C766.2734 -2099.6758 764.9761 -2092.3994 764.5322 -2085.2725 c764.2881 -2081.3516 764.4609 -2077.4023 765.2275 -2073.5508 c765.5264 -2072.0508 766.2573 -2070.1797 767.2661 -2068.998 C767.5815 -2068.6807 767.8477 -2068.334 768.0869 -2067.9727 C770.5015 -2069.3691 772.9209 -2070.7344 775.4253 -2072.002 c778.4702 -2073.543 780.4775 -2078.5049 782.8735 -2080.9932 c788.6294 -2086.9697 792.9048 -2094.1709 797 -2101.376 c801.3057 -2108.9502 802.2515 -2117.2764 801.7041 -2125.709 C800.1045 -2132.7051 798.8125 -2139.752 798.2397 -2146.8984 C797.8906 -2148.5234 797.5439 -2150.1328 797.2148 -2151.7188 c796.7827 -2153.8008 797.2837 -2155.5684 798.2817 -2156.9258 C824.1362 -2156.9258 L825.0513 -2155.9814 825.9629 -2155.0225 826.9487 -2154.1201 c830.7231 -2150.666 835.9316 -2147.8467 840.4097 -2145.4014 c849.2534 -2140.5723 859.5596 -2136.4697 869.4678 -2134.5723 c874.3096 -2133.6445 879.4302 -2133.9512 884.3389 -2133.6709 c889.6792 -2133.3662 893.4512 -2134.2158 898.2822 -2136.3184 c901.416 -2137.6816 906.981 -2138.4316 908.106 -2141.9238 c909.6064 -2146.5801 906.7544 -2151.1729 903.7002 -2154.416 c902.9497 -2155.2129 902.46 -2156.0635 902.1782 -2156.9258 C917.7334 -2156.9258 L922.3389 -2148.6045 923.7124 -2137.9766 916.3877 -2130.8145 c912.6147 -2127.126 906.7461 -2125.9492 902.0703 -2123.874 c895.5557 -2120.9834 889.7109 -2120.3643 882.5996 -2120.7705 c876.4829 -2121.1191 870.4971 -2121.1768 864.4517 -2122.335 c857.7344 -2123.6221 851.1982 -2126.5273 844.894 -2129.1006 c844.5747 -2129.2305 844.2568 -2129.3662 843.938 -2129.498 C845.6182 -2127.4961 847.2285 -2125.4434 848.5825 -2123.1035 c851.0996 -2118.7549 853.6865 -2114.4512 856.1602 -2110.0762 c858.4683 -2105.9932 860.4897 -2101.6211 861.8047 -2097.1152 c863.4805 -2091.3721 865.9453 -2085.9072 867.2588 -2080.043 c868.2056 -2075.8184 870.4351 -2070.7012 868.7651 -2066.417 c867.2085 -2062.4229 866.7568 -2057.6445 861.7915 -2056.2793 c857.7944 -2055.1797 852.4014 -2056.125 848.7402 -2057.8105 c844.0947 -2059.9492 839.1992 -2062.2881 834.7964 -2064.9043 c825.7441 -2070.2852 819.4365 -2080.957 813.7544 -2089.5283 c812.106 -2092.0146 810.7803 -2094.5635 809.6602 -2097.1641 C807.688 -2093.2705 805.1997 -2089.543 802.9302 -2085.9443 c800.0225 -2081.335 796.7437 -2076.9609 793.2378 -2072.791 c791.6201 -2070.8672 789.9282 -2069.2969 788.4824 -2067.168 c786.6641 -2064.4883 784.918 -2062.2451 781.9868 -2060.7773 c777.3364 -2058.4482 771.2729 -2053.0332 765.9165 -2053.0332 c760.4502 -2053.0332 757.7759 -2057.0449 756.6621 -2061.6416 C749.627 -2071.5859 750.4614 -2085.4785 752.8301 -2098.1113 C752.5654 -2097.9902 752.3042 -2097.8721 752.0376 -2097.7471 c749.7861 -2096.6914 747.3555 -2094.8535 744.9194 -2094.3096 c741.4019 -2093.5234 737.8608 -2093.0791 734.2617 -2092.9014 c728.3262 -2092.6074 722.3359 -2093.4951 716.4639 -2094.2412 c711.0278 -2094.9326 702.9604 -2093.8525 698.1704 -2096.8193 c690.5513 -2101.5381 676.3604 -2109.8408 683.7852 -2121.0195 c686.4541 -2125.0381 691.0093 -2126.4463 693.6357 -2130.293 cf0 D811.1353 -2148.4902 m812.4395 -2142.0957 813.5908 -2135.8477 814.1646 -2129.4258 C814.4141 -2128.3281 814.6714 -2127.2305 814.936 -2126.1318 c817.0327 -2117.4238 818.1909 -2108.2158 822.4722 -2100.2207 c826.6987 -2092.3271 832.4717 -2084.6816 838.688 -2078.2734 c842.0186 -2074.8408 846.5776 -2074.3662 850.3584 -2071.8691 c852.4761 -2070.4707 854.1348 -2069.7246 856.0503 -2069.3574 C856.2705 -2070.7002 855.9893 -2071.6406 855.6162 -2073.1523 c854.4526 -2077.873 853.1924 -2082.4717 851.4624 -2087.0225 c850.1099 -2090.5801 849.4136 -2094.4756 847.7715 -2097.9043 c845.9961 -2101.6113 843.979 -2105.1777 841.8916 -2108.7266 c840.0967 -2111.7764 838.3369 -2114.8506 836.5625 -2117.916 c834.2808 -2121.8584 830.5674 -2125.1855 827.7979 -2128.833 c824.9038 -2132.6455 822.52 -2136.9785 819.2925 -2140.5039 c816.4268 -2143.6338 813.6563 -2147.0117 811.0127 -2150.3721 C811.0439 -2149.7422 811.0903 -2149.1172 811.1353 -2148.4902 Cf*U*u1 D1176.3032 -1988.5098 m1179.2637 -1990.6797 1182.9941 -1992.4092 1186.1982 -1994.2402 c1190.8213 -1996.8818 1196.3857 -1998.291 1201.5317 -1999.4707 c1211.8389 -2001.834 1222.5405 -2001.4102 1232.9414 -2000.0313 c1243.3418 -1998.6523 1253.8076 -1996.751 1263.8267 -1993.6064 c1268.5127 -1992.1357 1273.1006 -1990.3047 1277.6025 -1988.3457 c1282.6953 -1986.1299 1287.5698 -1983.0518 1292.7246 -1981.0537 c1300.7451 -1977.9453 1307.0039 -1970.917 1313.9702 -1965.9629 C1322.7764 -1978.1953 1332.8076 -1989.9248 1339.4458 -2003.3828 c1341.2305 -2007 1342.1606 -2011.043 1343.5981 -2014.8066 c1345.0029 -2018.4844 1346.6006 -2022.0928 1348.2256 -2025.6816 C1343.0938 -2024.9473 1337.8193 -2024.627 1332.731 -2024.0518 c1324.54 -2023.125 1316.9546 -2024.1816 1309.1284 -2026.7012 c1302.3555 -2028.8828 1295.6792 -2031.5039 1288.7222 -2033.0918 c1282.9756 -2034.4033 1276.2949 -2038.2891 1274.5288 -2044.2275 c1272.8857 -2049.752 1273.916 -2055.8945 1277.3784 -2060.5234 c1281.3721 -2065.8623 1287.1289 -2067.6123 1293.5352 -2068.0518 c1300.6782 -2068.541 1307.4893 -2066.5078 1314.5664 -2066.2656 c1322.0342 -2066.0098 1329.0601 -2065.8779 1336.3042 -2063.7686 c1342.7441 -2061.8926 1349.0986 -2059.6934 1355.4077 -2057.4141 c1356.7378 -2056.9336 1358.144 -2056.4082 1359.5635 -2055.8242 C1361.7417 -2063.8105 1365.5449 -2071.1631 1367.1567 -2079.3555 c1369.0195 -2088.8213 1371.0386 -2098.3955 1372.0679 -2107.998 c1373.0522 -2117.1836 1373.5039 -2126.5059 1373.8086 -2135.7354 c1374.041 -2142.7871 1374.5015 -2149.8633 1374.7563 -2156.9258 C1387.6787 -2156.9258 L1387.4307 -2149.7188 1386.9941 -2142.9561 1386.8086 -2135.9102 c1386.5493 -2126.0625 1385.9199 -2116.0371 1384.8701 -2106.2412 c1383.8389 -2096.6162 1381.5273 -2087.1875 1379.9717 -2077.6543 c1378.502 -2068.6484 1374.5186 -2060.5918 1371.9604 -2051.9141 c1371.623 -2050.7705 1371.3252 -2049.6387 1371.0376 -2048.5137 C1371.3237 -2048.1846 1371.5981 -2047.8477 1371.8521 -2047.499 c1372.7227 -2046.3027 1373.1411 -2044.8672 1373.2998 -2043.3232 C1381.5332 -2036.0762 1387.877 -2026.3027 1392.5659 -2016.6807 c1395.6362 -2010.3789 1398.0283 -2003.7656 1400.978 -1997.4063 c1404.1392 -1990.5908 1407.1011 -1983.6709 1408.0405 -1976.1582 c1409.8701 -1961.5332 1413.3564 -1947.5791 1410.9775 -1932.7598 c1409.3438 -1922.582 1402.9351 -1905.2773 1391.0859 -1903.4727 c1379.002 -1901.6328 1370.001 -1917.3486 1365.5713 -1926.417 c1359.7236 -1938.3877 1357.3447 -1951.7256 1356.5146 -1964.9248 c1355.5938 -1979.5693 1356.5293 -1994.5986 1358.062 -2009.166 c1358.3545 -2011.9492 1358.5635 -2014.71 1358.7266 -2017.4697 C1357.8306 -2015.4453 1356.9541 -2013.4121 1356.1338 -2011.3545 c1354.417 -2007.0459 1353.2856 -2002.5459 1351.355 -1998.3193 c1347.6411 -1990.1895 1342.3618 -1982.374 1336.7861 -1975.3994 c1331.1577 -1968.3604 1326.1035 -1961.0215 1321.1064 -1953.5264 c1321.0449 -1953.4336 1320.9775 -1953.3535 1320.9131 -1953.2656 C1320.9868 -1952.916 1321.0439 -1952.5547 1321.0664 -1952.1689 c1321.6094 -1942.8125 1323.6045 -1934.0469 1322.4536 -1924.5703 c1321.1719 -1914.0127 1318.2817 -1903.7695 1313.6865 -1894.1621 c1309.4404 -1885.2852 1305.7764 -1876.2695 1300.0078 -1868.2178 c1294.2021 -1860.1133 1286.4839 -1853.8086 1278.0371 -1848.625 c1269.5327 -1843.4053 1259.1396 -1838.7656 1249.3521 -1836.7109 c1242.3218 -1835.2344 1229.6729 -1832.4824 1228.0215 -1842.5391 c1226.1636 -1853.8555 1229.0049 -1864.8164 1230.1519 -1876.1094 c1230.627 -1880.7842 1232.416 -1885.5391 1234.0938 -1889.8945 c1234.5488 -1891.0752 1234.8306 -1892.2842 1235.104 -1893.5039 C1234.3379 -1893.3672 1233.5732 -1893.207 1232.8145 -1893.0303 c1226.6592 -1891.5957 1219.8525 -1891.2188 1213.5552 -1890.9688 c1207.9585 -1890.748 1202.3608 -1891.0439 1196.8281 -1891.8887 c1193.252 -1892.4346 1185.8989 -1893.6143 1183.5049 -1896.6982 c1177.4863 -1904.4512 1180.2891 -1914.9658 1185.6372 -1922.5176 c1188.5762 -1926.668 1192.4453 -1929.9443 1196.4907 -1932.9678 c1198.6055 -1934.5488 1200.6299 -1936.2275 1202.7617 -1937.7871 c1202.9375 -1937.916 1203.2212 -1938.0801 1203.5625 -1938.2646 C1202.4531 -1939.1182 1201.3311 -1939.9561 1200.2104 -1940.7939 c1196.9912 -1943.2012 1193.7813 -1945.6182 1190.6475 -1948.1367 c1184.041 -1953.4453 1178.2192 -1959.79 1174.458 -1967.4395 c1171.0093 -1974.4531 1169.002 -1983.1582 1176.3032 -1988.5098 cf0 D1379.7378 -1927.4785 m1382.0415 -1923.5361 1385.2534 -1918.6133 1389.2275 -1916.1992 c1389.3003 -1916.1553 1392.3047 -1919.9678 1393.0371 -1921.1064 c1394.6152 -1923.5596 1395.7178 -1926.2373 1396.6533 -1928.9854 c1400.8457 -1941.2988 1398.627 -1954.8027 1396.4609 -1967.2949 c1395.3418 -1973.749 1394.3037 -1979.9092 1391.895 -1986.0361 c1389.3447 -1992.5215 1386.248 -1998.8594 1383.5244 -2005.2813 c1380.5781 -2012.2285 1376.7744 -2019.6436 1371.8701 -2025.9961 C1371.6968 -2020.3857 1371.6714 -2014.8105 1371.062 -2009.166 c1368.2021 -1982.6729 1365.7437 -1951.4297 1379.7378 -1927.4785 cf1354.0425 -2038.7715 m1354.4717 -2039.752 1354.8979 -2040.7334 1355.332 -2041.7119 c1355.5142 -2042.123 1355.6777 -2042.5332 1355.8418 -2042.9434 C1345.5547 -2047.3672 1334.1299 -2052.333 1322.8369 -2053.1064 c1316.3203 -2053.5527 1310.0464 -2053.5029 1303.563 -2054.5791 c1299.646 -2055.2285 1291.9766 -2056.498 1288.5391 -2053.6523 c1287.251 -2052.5859 1286.4492 -2050.5518 1286.709 -2048.8779 c1287.0283 -2046.8193 1290.9287 -2046.2617 1292.5215 -2045.5283 c1298.0996 -2042.9619 1304.9072 -2041.96 1310.7295 -2039.873 c1317.4897 -2037.4502 1323.8452 -2036.2471 1331.0225 -2036.8584 c1333.9448 -2037.1074 1336.8486 -2037.7188 1339.7378 -2038.2061 c1343.1387 -2038.7803 1346.5347 -2038.3887 1349.9409 -2039.1338 c1351.4941 -2039.4736 1352.8765 -2039.2939 1354.0425 -2038.7715 Cf1185.0332 -1975.7119 m1187.0195 -1970.4492 1190.3457 -1966.1553 1194.2988 -1962.2188 c1198.1084 -1958.4258 1202.4756 -1955.2256 1206.772 -1952.0186 c1211.0947 -1948.792 1216.2637 -1945.666 1219.5566 -1941.3711 c1223.5942 -1936.1045 1217.2637 -1931.334 1213.4971 -1928.9971 c1208.2808 -1925.7598 1203.2007 -1922.2373 1198.75 -1917.9541 c1195.5732 -1914.8975 1193.4038 -1910.7119 1193.0146 -1906.2959 C1193.4526 -1906.1855 1193.8887 -1906.0674 1194.3291 -1905.9648 c1195.8169 -1905.6055 1197.2656 -1905.0957 1198.7529 -1904.7266 c1201.8008 -1903.9707 1205.0342 -1904.0029 1208.1523 -1903.9531 c1215.4946 -1903.8369 1223.2598 -1904.1445 1230.4351 -1905.8164 c1235.6011 -1907.0205 1241.7109 -1907.6113 1246.7275 -1905.5654 c1249.8091 -1904.3086 1252.5576 -1901.1953 1251.2676 -1897.5703 c1250.6172 -1895.7432 1249.7705 -1894.3311 1248.6553 -1892.7568 c1247.6104 -1891.2803 1247.5083 -1889.3701 1247.0898 -1887.6484 c1245.9897 -1883.124 1243.4375 -1878.9219 1242.9575 -1874.1963 c1242.437 -1869.0713 1241.4795 -1863.998 1240.8159 -1858.8916 c1240.4023 -1855.7051 1239.7915 -1851.916 1240.0908 -1848.4336 C1240.4443 -1848.4912 1240.8076 -1848.5625 1241.2461 -1848.6582 c1243.9023 -1849.2402 1246.5645 -1849.3359 1249.2109 -1850.0254 c1255.2451 -1851.5977 1261.5332 -1854.4336 1267.0366 -1857.332 c1278.0117 -1863.1104 1286.8896 -1870.8584 1293.188 -1881.5889 c1299.459 -1892.2734 1304.3584 -1904.0811 1307.792 -1915.9521 c1309.5103 -1921.8926 1309.9521 -1928.1602 1309.9072 -1934.3135 c1309.8633 -1940.3594 1308.4146 -1946.168 1308.0664 -1952.1689 c1308.0239 -1952.8994 1308.0898 -1953.5625 1308.2354 -1954.1641 C1303.293 -1957.5 1298.6543 -1961.2949 1294.0146 -1965.0342 c1288.7715 -1969.2598 1282.2505 -1971.9365 1276.188 -1974.8125 c1263.0332 -1981.0537 1249.2207 -1984.3379 1234.9238 -1986.7051 c1221.1753 -1988.9824 1205.5518 -1989.4102 1192.7598 -1983.0146 c1190.2319 -1981.751 1188.1606 -1979.9854 1185.5415 -1978.8896 c1184.9277 -1978.6328 1184.4033 -1978.3857 1184.0469 -1977.9492 C1184.6074 -1978.4453 1184.8647 -1976.1572 1185.0332 -1975.7119 cf*U*u1 D1864.481 -1797.3086 m1853.6606 -1794.252 1842.2314 -1793.3213 1831.3433 -1796.5635 c1831.0356 -1796.6553 1830.7402 -1796.7559 1830.439 -1796.8535 C1833.4648 -1790.1367 1836.106 -1783.2305 1838.6416 -1776.6377 c1844.1445 -1762.3311 1846.8271 -1747.0342 1847.9951 -1731.7666 c1848.4556 -1725.7451 1847.1577 -1719.4082 1843.9741 -1714.249 c1843.7119 -1713.8242 1842.3877 -1711.5488 1842.3818 -1711.9961 C1842.1885 -1711.2588 1842.0454 -1710.4941 1841.8486 -1709.7803 c1841.0293 -1706.8057 1838.8345 -1703.7344 1835.7271 -1702.8799 c1832.8281 -1702.082 1829.7334 -1703.3076 1827.1235 -1704.4629 c1825.1157 -1705.3516 1822.5508 -1704.4609 1820.4424 -1705.7813 c1817.9478 -1707.3447 1815.0483 -1708.0479 1812.5576 -1709.8037 c1810.105 -1711.5322 1807.9155 -1713.623 1805.4678 -1715.3525 c1804.3389 -1716.1504 1803.123 -1716.8457 1802.0908 -1717.7773 c1801.543 -1718.2725 1798.5229 -1720.7842 1801.105 -1718.9766 c1799.1865 -1720.3193 1797.6523 -1722.3877 1796.0103 -1724.0293 c1791.3853 -1728.6553 1787.8394 -1735.75 1785.5645 -1741.7871 c1781.8301 -1751.6992 1779.8687 -1761.8584 1778.9839 -1772.1162 C1775.4434 -1767.0693 1771.6143 -1762.2285 1768.062 -1757.1855 c1764.3174 -1751.8691 1760.8311 -1746.46 1756.6338 -1741.4746 c1752.416 -1736.4639 1746.8579 -1731.835 1741.7241 -1727.7744 c1732.6943 -1720.6328 1721.8071 -1714.3818 1710.0181 -1716.085 c1696.0059 -1718.1084 1699.0166 -1734.9121 1701.6479 -1744.6895 c1702.3838 -1747.4238 1702.5278 -1750.3213 1702.9268 -1753.1152 c1703.4248 -1756.6064 1704.6182 -1759.7031 1705.9116 -1762.9717 c1708.5293 -1769.5859 1710.9556 -1776.25 1713.833 -1782.7617 c1716.3828 -1788.5332 1721.1143 -1793.9697 1725.2388 -1798.7363 c1729.3662 -1803.5068 1732.3154 -1809.5654 1737.6689 -1813.1836 c1742.0894 -1816.1709 1745.6758 -1819.4854 1749.1641 -1823.1699 C1745.2866 -1822.4004 1741.4302 -1821.6533 1737.4097 -1821.1279 c1722.7944 -1819.2168 1707.0371 -1817.2236 1692.3652 -1819.2891 c1685.3262 -1820.2803 1677.6191 -1823.0576 1671.1567 -1825.9727 c1664.9746 -1828.7607 1659.0166 -1831.9248 1653.5063 -1835.8965 c1643.833 -1842.8682 1635.7017 -1853.8799 1639.2529 -1866.3379 c1640.6162 -1871.1201 1645.125 -1875.2617 1649.0947 -1877.9912 c1654.1484 -1881.4658 1660.0796 -1883.1836 1665.9263 -1884.8096 c1680.4614 -1888.8535 1696.3594 -1887.6055 1710.8184 -1883.7734 c1717.8125 -1881.9199 1724.5723 -1879.1582 1731.0684 -1875.9961 c1734.5801 -1874.2861 1738.1475 -1872.6963 1741.7148 -1871.1045 C1740.9326 -1872.3535 1740.1406 -1873.5889 1739.3135 -1874.7852 c1735.8154 -1879.8447 1734.1006 -1885.8574 1732.9751 -1891.8301 c1731.7617 -1898.2695 1731.9468 -1904.915 1731.9673 -1911.4355 c1731.9893 -1918.5459 1732.4424 -1925.6182 1734.0479 -1932.5615 c1736.5435 -1943.3594 1742.7217 -1954.7363 1752.7422 -1960.1074 c1764.7861 -1966.5635 1775.0107 -1957.626 1782.8672 -1948.957 c1787.2808 -1944.0879 1790.2627 -1938.3135 1792.2656 -1932.0977 c1794.4287 -1925.3828 1796.624 -1918.5449 1798.2944 -1911.6914 c1799.5083 -1906.7129 1800.3052 -1901.6328 1800.7695 -1896.5107 C1801.918 -1898.2256 1803.0645 -1899.9453 1804.2695 -1901.6494 c1807.6797 -1906.4717 1811.6758 -1910.71 1815.4897 -1915.1855 c1821.1094 -1921.7813 1827.2861 -1928.3887 1836.3237 -1929.6133 c1845.6465 -1930.877 1854.0635 -1924.5635 1861.0703 -1919.0586 c1869.084 -1912.7617 1867.3979 -1903.7598 1867.3979 -1894.625 c1867.3979 -1883.5195 1861.9971 -1871.6729 1856.8374 -1862.002 c1854.0391 -1856.7578 1849.9565 -1852.4863 1845.4712 -1848.6152 C1848.2681 -1848.5039 1851.0527 -1848.3359 1853.8081 -1848.1104 c1861.1826 -1847.5068 1867.9775 -1845.5137 1873.7041 -1840.7031 c1880.8306 -1834.7178 1881.7852 -1824.8691 1880.3145 -1816.3369 c1878.6777 -1806.8418 1873.8877 -1799.9658 1864.481 -1797.3086 cf0 D1746.9639 -1803.7441 m1742.9121 -1800.8936 1740.5415 -1797.3926 1737.6436 -1793.4141 c1734.1665 -1788.6416 1730.2798 -1784.042 1726.6377 -1779.373 c1723.5098 -1775.3633 1722.0337 -1768.9502 1720.3022 -1764.2344 c1718.3013 -1758.7832 1715.9956 -1753.8379 1715.2744 -1748.0273 c1714.6509 -1743.002 1713.4771 -1738.0947 1712.6533 -1733.1055 C1712.4365 -1732.1152 1712.3018 -1731.1152 1712.2495 -1730.1045 c1712.1899 -1729.3877 1712.2451 -1728.9824 1712.2715 -1728.7734 C1713.5815 -1728.5342 1715.0537 -1728.6504 1716.3115 -1728.6348 c1720.3135 -1728.584 1725.0708 -1732.4063 1728.3271 -1734.3867 c1732.6807 -1737.0352 1736.3345 -1740.1152 1740.04 -1743.5996 c1743.9141 -1747.2432 1747.624 -1750.624 1750.7725 -1754.9551 c1754.3242 -1759.8418 1757.5498 -1764.9609 1761.0967 -1769.8525 c1764.3691 -1774.3662 1767.8071 -1778.7402 1770.875 -1783.3994 c1773.7373 -1787.7471 1774.1411 -1793.6123 1775.0874 -1798.5986 c1776.7959 -1807.5986 1778.8281 -1816.375 1780.1514 -1825.3701 C1779.5029 -1825.1875 1778.7871 -1825.085 1778 -1825.085 C1774.6416 -1825.2637 1770.3774 -1825.3086 V1769.5073 -1824.7109 1768.4551 -1824.2949 1767.2148 -1824.1572 c1768.1484 -1824.2607 1764.9199 -1821.0215 1764.8584 -1820.96 c1762.6885 -1818.7822 1760.9727 -1816.1475 1758.8247 -1814.0039 c1755.0938 -1810.2793 1751.2822 -1806.7832 1746.9639 -1803.7441 cf1733.0527 -1860.7979 m1726.7671 -1863.5313 1720.7495 -1866.7529 1714.2871 -1869.0801 c1702.334 -1873.3828 1688.606 -1875.5811 1675.9307 -1873.8213 c1671.0791 -1873.1475 1666.1182 -1871.4873 1661.5 -1869.877 c1659.5596 -1869.2012 1657.5293 -1868.2236 1655.9131 -1866.9395 c1654.8013 -1866.0557 1652.3374 -1864.2402 1651.7939 -1862.8818 c1648.1055 -1853.6641 1661.876 -1845.5547 1668.082 -1842.0068 c1678.5234 -1836.0391 1690.9565 -1831.4971 1703.0449 -1831.6152 c1715.7778 -1831.7383 1728.3076 -1833.9951 1740.9648 -1834.4287 c1746.7568 -1834.6279 1752.1914 -1837.3652 1758.0049 -1837.8789 c1761.4526 -1838.1836 1765.0776 -1838.2275 1768.6074 -1838.1992 C1767.5293 -1839.1016 1766.4375 -1839.9902 1765.332 -1840.8672 c1760.1323 -1844.9941 1755.0205 -1849.3408 1749.3916 -1852.8613 c1744.2539 -1856.0742 1738.5986 -1858.3857 1733.0527 -1860.7979 cf1786.8237 -1903.1855 m1785.8081 -1908.8564 1784.2446 -1914.4189 1782.2803 -1919.8301 c1780.5039 -1924.7246 1779.79 -1929.8477 1777.3149 -1934.4912 c1774.6968 -1939.4023 1770.5811 -1943.1689 1766.3286 -1946.6445 c1762.7339 -1949.582 1761.2017 -1950.1709 1757.042 -1947.5713 c1749.9287 -1943.127 1746.6021 -1931.7061 1745.5762 -1923.957 c1744.8003 -1918.0996 1744.957 -1912.1113 1744.9614 -1906.2168 c1744.9653 -1901.0049 1745.083 -1895.8477 1746.583 -1890.8213 c1747.3066 -1888.3984 1747.7612 -1886.2168 1748.9512 -1883.9453 c1750.1689 -1881.6191 1752.0308 -1879.7617 1753.3486 -1877.5332 c1756.0498 -1872.9658 1758.4702 -1868.4531 1762.5352 -1864.9355 c1769.4907 -1858.916 1775.083 -1851.3682 1781.2842 -1844.4707 C1781.3462 -1844.5645 1781.417 -1844.6523 1781.4761 -1844.7471 c1782.6338 -1846.6006 1783.0259 -1849.5176 1783.7935 -1851.5869 c1784.0063 -1852.1611 1784.2036 -1852.7471 1784.3945 -1853.3369 C1781.5264 -1854.4736 1779.1729 -1858.0537 1780.4258 -1861.1396 c1782.7334 -1866.8223 1785.269 -1872.3506 1788.2109 -1877.6582 C1788.6597 -1886.2021 1788.3027 -1894.9287 1786.8237 -1903.1855 cf1791.3789 -1794.4219 m1791.1982 -1787.54 1791.3027 -1780.6172 1791.646 -1773.7422 c1791.9819 -1767.0127 1793.6831 -1760.3389 1795.3315 -1753.8184 c1798.0298 -1743.1445 1803.2246 -1735.2012 1809.8408 -1728.584 c1813.2393 -1725.1855 1817.6143 -1721.8574 1821.7861 -1719.2598 c1823.4404 -1718.2295 1825.6152 -1717.5225 1827.5059 -1717.5029 c1828.5337 -1717.4922 1829.4463 -1717.1982 1830.3301 -1716.8477 C1830.3887 -1717.0215 1830.4463 -1717.1943 1830.5137 -1717.3682 c1831.293 -1719.3701 1832.9478 -1720.5967 1833.7559 -1722.543 c1835.8052 -1727.4785 1835.0576 -1732.9102 1834.2236 -1738.0293 c1833.2158 -1744.2148 1832.6201 -1750.4268 1831.3682 -1756.5801 c1830.084 -1762.8936 1827.7178 -1768.9922 1825.4106 -1774.9902 c1823.1738 -1780.8057 1820.6719 -1786.5293 1817.9424 -1792.1299 c1815.3271 -1797.4961 1813.0234 -1803.2803 1809.5854 -1808.1514 c1808.9575 -1809.041 1808.3193 -1809.9238 1807.6821 -1810.8086 C1807.6611 -1810.8252 1807.6406 -1810.8418 1807.6191 -1810.8584 c1802.6543 -1814.7891 1797.1851 -1819.0645 1793.4165 -1824.3604 C1792.5845 -1814.3906 1791.6416 -1804.4287 1791.3789 -1794.4219 cf1854.1235 -1890.9053 m1855.1309 -1894.3965 1854.3457 -1898.7979 1854.4258 -1902.4189 c1854.4609 -1903.998 1854.7422 -1905.6846 1854.4927 -1907.2568 c1854.2588 -1908.7295 1851.5962 -1909.9531 1850.4292 -1910.7051 c1845.3857 -1913.9521 1840.8721 -1918.8018 1834.6685 -1915.6367 c1828.8315 -1912.6582 1824.1294 -1905.5742 1819.9224 -1900.7295 c1814.7461 -1894.7686 1810.7856 -1887.8174 1806.02 -1881.5469 c1804.1621 -1879.1035 1802.4668 -1876.5322 1800.8906 -1873.8857 C1800.8008 -1872.585 1800.7012 -1871.2861 1800.584 -1869.9932 c1799.9663 -1863.1797 1798.71 -1856.3457 1796.8535 -1849.7617 c1796.2231 -1847.5273 1795.4678 -1845.2109 1794.6479 -1842.9834 C1796.1777 -1842.3184 1797.6758 -1841.5664 1799.1108 -1840.7178 C1799.7891 -1841.4639 1800.6392 -1842.083 1801.6611 -1842.4902 c1808.4238 -1845.1875 1815.5654 -1846.8477 1822.8477 -1847.7793 C1824.3203 -1848.541 1825.6792 -1849.3789 1826.8525 -1850.2998 c1833.1006 -1855.2021 1840.707 -1860.1885 1844.8174 -1867.1387 c1849.2119 -1874.5684 1851.7451 -1882.6611 1854.1235 -1890.9053 cf1846.4629 -1835.4043 m1840.3076 -1835.4336 1834.1201 -1835.3506 1827.9697 -1835.1719 c1827.4038 -1835.1553 1826.8535 -1835.1113 1826.2974 -1835.0781 C1821.0845 -1832.7305 1815.249 -1831.1582 1809.6641 -1830.3398 C1812.2578 -1826.8076 1814.6963 -1823.125 1817.2505 -1819.5791 C1821.6846 -1815.8516 1826.125 -1812.165 1831.6299 -1810.1074 c1839.4678 -1807.1787 1847.3281 -1807 1855.46 -1808.5615 c1858.2603 -1809.0996 1863.3428 -1809.4326 1865.1406 -1811.9082 c1866.8457 -1814.2578 1867.6348 -1818.1611 1867.9741 -1820.9951 c1869.5381 -1834.0605 1856.1582 -1835.3564 1846.4629 -1835.4043 cf*U*u1 D2070.0752 -2045.4961 m2077.7441 -2052.5361 2088.0469 -2056.709 2098.2334 -2058.2832 c2103.498 -2059.0977 2110.1523 -2058.9766 2116.082 -2057.3936 C2116.127 -2060.1279 2117.0732 -2062.21 2118.8984 -2063.5879 C2118.8086 -2065.0879 2118.7549 -2066.5947 2118.7529 -2068.1123 c2118.748 -2071.499 2118.3418 -2074.7979 2117.7383 -2078.123 c2116.9863 -2082.2646 2116.9082 -2086.167 2116.8633 -2090.374 c2116.6963 -2105.9297 2113.1875 -2121.2197 2113.1875 -2136.752 c2113.1875 -2140.4629 2113.0723 -2144.1904 2113.2695 -2147.8975 c2113.3379 -2149.1904 2113.3896 -2150.4814 2113.416 -2151.7754 c2113.418 -2151.8848 2113.4111 -2151.9951 2113.4111 -2152.1045 C2112.5479 -2153.0713 2112 -2154.3652 2112 -2156 C2112 -2156.9258 L2125.8848 -2156.9258 L2126.1826 -2155.627 2126.3105 -2154.2285 2126.3516 -2152.7949 c2126.5059 -2147.4756 2126.1553 -2142.0781 2126.1553 -2136.752 c2126.1553 -2121.2246 2129.5723 -2105.9229 2129.8477 -2090.374 c2129.9688 -2083.4521 2131.3428 -2076.833 2131.7119 -2069.9346 c2131.7949 -2068.3906 2131.8867 -2066.8652 2131.9883 -2065.3496 C2132.2285 -2065.3428 2132.4707 -2065.3359 2132.7061 -2065.3359 c2136.3779 -2065.3359 2139.9355 -2065.4004 2143.5703 -2064.8281 c2155.6426 -2062.9277 2168.1816 -2058.2383 2179.0127 -2052.7129 c2184.6816 -2049.8203 2189.3105 -2045.2236 2194.958 -2042.3555 c2200.3428 -2039.6211 2206.6777 -2036.248 2210.6533 -2031.6191 c2218.5508 -2022.4219 2222.4971 -2010.6289 2221.7256 -1998.5459 c2221.5 -1995.0117 2218.9395 -1992.0459 2215.2256 -1992.0459 c2205.5107 -1992.0459 2196.3457 -1991.7832 2187.0156 -1994.9375 c2177.6602 -1998.1016 2169.7031 -2003.5391 2162.2344 -2009.873 c2154.6211 -2016.3301 2148.0898 -2023.7734 2141.6348 -2031.3418 c2139.3301 -2034.043 2137.0586 -2036.7021 2134.9248 -2039.4316 C2135.3086 -2035.332 2135.6641 -2031.2344 2136.3672 -2027.1729 c2137.7705 -2019.0605 2139.8291 -2011.0654 2141.7119 -2003.0566 c2145.126 -1988.5352 2147.9375 -1974 2152.4102 -1959.7764 c2154.4199 -1953.3877 2155.6758 -1946.6973 2157.4199 -1940.2285 c2159.4053 -1932.8652 2163.1895 -1925.5635 2166.3047 -1918.6152 c2172.6084 -1904.5605 2179.3955 -1890.3672 2186.8281 -1876.8809 c2189.999 -1871.127 2194.7949 -1866.5586 2197.8906 -1860.8027 c2201.5195 -1854.0537 2206.2051 -1848.0313 2210.8672 -1841.9395 c2214.3838 -1837.3457 2218.0049 -1832.8516 2221.5615 -1828.2969 c2221.583 -1828.2695 2221.6025 -1828.2422 2221.624 -1828.2139 C2224.0234 -1832.2178 2227.1543 -1835.9824 2229.8672 -1839.6729 c2233.7334 -1844.9346 2238.6328 -1849.0146 2243.9834 -1852.6953 c2249.3486 -1856.3857 2255.2031 -1859.0703 2260.7871 -1862.374 c2266.9785 -1866.0371 2273.0635 -1867.3955 2279.8906 -1869.3027 c2286.2588 -1871.0811 2292.0859 -1873.2471 2298.7246 -1874.0459 c2306.3525 -1874.9639 2313.958 -1876.1855 2321.6172 -1876.8164 c2336.8262 -1878.0693 2352.4902 -1875.0352 2367.0176 -1870.8145 c2370.5098 -1869.7998 2373.9697 -1868.6758 2377.4219 -1867.5342 c2379.8965 -1866.7158 2382.8984 -1864.1904 2385.4033 -1863.8975 c2391.8809 -1863.1396 2396.2969 -1857.207 2395.0635 -1850.7266 c2392.6904 -1838.2578 2377.9063 -1829.7207 2367.5918 -1824.5039 c2358.0498 -1819.6787 2348.0762 -1815.3535 2338.0547 -1811.5098 C2341.5098 -1809.7363 2344.8809 -1807.6602 2348.668 -1806.3154 c2356.7344 -1803.4502 2364.6094 -1798.9102 2371.9238 -1794.5176 c2378.5742 -1790.5234 2385.3145 -1785.8408 2389.8232 -1779.4102 c2393.5703 -1774.0664 2398.1514 -1764.5908 2392.5195 -1758.959 c2386.8359 -1753.2754 2376.3643 -1754.5625 2369.1074 -1753.3799 c2360.1211 -1751.9141 2351.2979 -1749.4219 2342.2051 -1748.7354 c2332.9102 -1748.0342 2323.6025 -1747.5703 2314.3096 -1748.5283 c2311.1328 -1748.8564 2307.9443 -1749.3457 2304.7529 -1749.8516 C2311.2363 -1741.6885 2317.875 -1733.6641 2323.835 -1725.0537 c2331.9902 -1713.2744 2335.5293 -1698.416 2339.6641 -1684.8916 c2341.7559 -1678.0527 2343.3145 -1671.4941 2343.915 -1664.3379 c2344.2061 -1660.876 2344.1641 -1657.3945 2344.1641 -1653.9238 c2344.1641 -1650.9395 2345.1113 -1647.1377 2344.3223 -1644.2725 c2341.4785 -1633.9316 2322.7852 -1637.1299 2315.5889 -1639.7529 c2302.4365 -1644.5479 2290.7949 -1651.623 2281.7061 -1662.3721 c2277.1768 -1667.7285 2272.1328 -1672.6279 2268.082 -1678.3818 c2266.9453 -1679.998 2265.9131 -1681.6689 2264.957 -1683.377 C2264.2656 -1671.1992 2262.5957 -1659.168 2260.4902 -1647.1123 c2259.2715 -1640.127 2257.6875 -1633.2207 2255.457 -1626.4854 c2253.4121 -1620.3145 2250.2393 -1615.4111 2246.9834 -1609.9316 c2244.8438 -1606.3291 2241.6729 -1601.8789 2237.3594 -1600.8486 c2231.2188 -1599.3818 2226.0713 -1605.1143 2223.0068 -1609.6172 c2215.248 -1621.0156 2208.8281 -1633.7559 2203.7363 -1646.543 c2198.2979 -1660.2002 2193.4531 -1673.9375 2192.9766 -1688.7598 c2192.5811 -1701.0254 2192.085 -1713.1719 2192.9287 -1725.4395 c2193.3164 -1731.0742 2194.0488 -1736.6787 2194.8418 -1742.2676 c2195.709 -1748.3828 2197.7852 -1753.9951 2199.166 -1759.9551 c2201.8145 -1771.3848 2206.2402 -1782.4688 2210.3496 -1793.4277 c2212.3301 -1798.709 2214.498 -1806.4043 2218.4434 -1811.792 C2215.2041 -1814.6738 2212.8779 -1818.6299 2210.0928 -1821.8877 c2204.7568 -1828.1299 2199.8848 -1834.9209 2195.0039 -1841.541 c2192.9297 -1844.3545 2190.6875 -1847.1074 2188.8848 -1850.1025 c2187.4434 -1852.498 2186.5039 -1855.4482 2184.6582 -1857.5996 c2179.7422 -1863.3262 2175.583 -1869.6436 2172.5107 -1876.5381 c2170.8955 -1880.1631 2169.1826 -1883.7402 2167.4268 -1887.2988 C2167.3887 -1887.127 2167.3633 -1886.9521 2167.3213 -1886.7813 c2166.251 -1882.4512 2163.5186 -1878.583 2161.4746 -1874.6826 c2158.8926 -1869.7539 2156.8604 -1864.6436 2153.9814 -1859.8457 c2148.2441 -1850.2852 2142.623 -1841.0967 2134.1738 -1833.6143 c2126.5469 -1826.8613 2117.0986 -1823.1807 2108.127 -1818.5527 c2104.9824 -1816.9297 2101.0879 -1817.707 2099.2344 -1820.8848 c2097.3379 -1824.1357 2097.5488 -1827.9561 2097.1445 -1831.584 c2096.5527 -1836.8828 2096.7373 -1841.9775 2097.6514 -1847.2266 c2099.1777 -1855.9961 2104.8398 -1864.1602 2110.7188 -1870.5732 c2116.9365 -1877.3574 2124.8184 -1882.4004 2132.4277 -1887.4492 c2139.4512 -1892.1094 2146.5 -1895.748 2154.043 -1898.9727 C2153.7256 -1900.084 2153.3105 -1901.1973 2152.7344 -1902.3555 c2150.626 -1906.5938 2150.2363 -1910.2646 2152.1045 -1914.6357 c2152.4063 -1915.3408 2152.7744 -1915.9238 2153.1914 -1916.3984 C2152.832 -1917.2119 2152.459 -1918.0195 2152.1094 -1918.8379 c2146.4717 -1932.0449 2141.666 -1945.5391 2139.0488 -1959.7139 c2137.7627 -1966.6787 2134.8945 -1973.21 2133.3623 -1980.1221 c2131.6484 -1987.8486 2130.127 -1995.6064 2128.3027 -2003.3105 c2126.5527 -2010.7012 2124.8076 -2018.0859 2123.5117 -2025.5723 c2122.9746 -2028.6729 2122.6201 -2031.79 2122.3057 -2034.9131 C2121.2705 -2032.3555 2120.3174 -2029.7588 2119.21 -2027.2207 c2114.4258 -2016.252 2107.1816 -2009.0605 2097.8076 -2001.8613 c2093.2783 -1998.3818 2088.627 -1995.0938 2083.5225 -1992.5098 c2078.6172 -1990.0254 2073.3291 -1988.4141 2068.2256 -1986.4141 c2062.9688 -1984.3525 2057.7129 -1983.0439 2052.0918 -1982.5391 c2046.9482 -1982.0762 2043.5625 -1987.3936 2042.2246 -1991.5752 c2039.1191 -2001.292 2044.834 -2010.9189 2050.082 -2018.5869 c2056.501 -2027.9648 2061.5625 -2037.6836 2070.0752 -2045.4961 cf0 D2150.8262 -2040.5342 m2156.5488 -2033.8945 2162.252 -2027.4209 2168.7139 -2021.4668 c2175.1689 -2015.5205 2182.2041 -2010.5498 2190.4717 -2007.4736 c2196.4248 -2005.2578 2202.457 -2004.9912 2208.6064 -2005.0029 C2207.9414 -2011.332 2205.6182 -2017.2285 2201.4609 -2022.4258 c2198.6484 -2025.9414 2193.7422 -2028.2451 2189.8506 -2030.3672 c2185.3193 -2032.8379 2181.2695 -2035.9131 2176.9775 -2038.7783 c2169.0977 -2044.0391 2160.334 -2046.3926 2151.417 -2049.2617 c2148.2344 -2050.2871 2145.082 -2051.1162 2141.8506 -2051.584 C2144.5107 -2047.6611 2147.7559 -2044.0957 2150.8262 -2040.5342 cf2357.9492 -1834.2393 m2364.0859 -1837.0996 2370.1992 -1840.2754 2375.2598 -1844.8115 c2377.4854 -1846.8057 2379.8984 -1848.5947 2381.5029 -1851.1504 c2381.5938 -1851.2949 2381.6523 -1851.4063 2381.7207 -1851.5273 C2380.9307 -1851.8281 2380.1426 -1852.1338 2379.3691 -1852.4766 c2365.7295 -1858.707 2350.9053 -1862.2598 2335.9922 -1863.626 c2328.5479 -1864.3076 2321.2305 -1863.9238 2313.8252 -1862.9971 c2306.6055 -1862.0928 2299.1279 -1861.4971 2292.0859 -1859.6367 c2286.1299 -1858.0625 2280.1563 -1856.2344 2274.2305 -1854.5264 c2271.2188 -1853.6582 2268.6709 -1851.9316 2266.0039 -1850.3535 c2262.6211 -1848.3525 2259.0273 -1846.7715 2255.665 -1844.7314 c2250.6396 -1841.6826 2245.9678 -1838.4307 2241.9678 -1834.0908 c2240.8809 -1832.9121 2239.9629 -1831.5986 2239.0645 -1830.2705 C2249.6094 -1827.5664 2259.4219 -1822.124 2270.416 -1820.9248 c2273.4834 -1820.5898 2276.6211 -1820.6465 2279.6064 -1819.8428 c2282.8867 -1818.959 2286.0098 -1817.8389 2289.4307 -1817.6787 c2297.4014 -1817.3047 2305.6162 -1817.543 2313.5469 -1818.3789 c2329.1055 -1820.0205 2343.9531 -1827.7139 2357.9492 -1834.2393 cf2309.0254 -1762.0674 m2316.3496 -1761.5713 2323.4717 -1760.8311 2330.8496 -1761.0615 c2345.791 -1761.5273 2359.9961 -1765.3711 2374.7676 -1767.2158 c2376.9346 -1767.4863 2379.3086 -1767.2871 2381.4561 -1767.7773 C2381.3066 -1768.1865 2381.1475 -1768.5918 2380.9727 -1768.9912 c2380.3828 -1770.293 2379.5625 -1771.5996 2378.6797 -1772.7227 c2374.7998 -1777.6611 2369.1777 -1781.001 2363.877 -1784.1846 c2357.9131 -1787.7656 2351.6426 -1790.8135 2345.3164 -1793.6934 c2342.1875 -1795.1172 2338.9668 -1796.2334 2335.8906 -1797.7979 c2332.7803 -1799.3789 2330.1035 -1801.8584 2326.5332 -1801.8955 c2323.25 -1801.9297 2321.2578 -1803.9492 2320.5469 -1806.3848 C2312.7559 -1805.0186 2304.7832 -1804.6787 2296.8516 -1804.6787 c2290.7793 -1804.6787 2285.127 -1804.7734 2279.2334 -1806.4053 c2274.4219 -1807.7373 2269.3906 -1808.249 2264.3867 -1808.3887 c2259.583 -1808.5225 2253.4883 -1811.1768 2249.0527 -1812.9492 c2245.7607 -1814.2656 2242.3389 -1815.8203 2238.8486 -1816.9863 C2248.7559 -1810.1875 2257.3721 -1801.7266 2266.4287 -1793.8291 c2276.6123 -1784.9492 2285.499 -1775.0635 2293.6484 -1764.3711 C2298.7822 -1763.6631 2303.8447 -1762.417 2309.0254 -1762.0674 cf2261.8623 -1739.4434 m2264.4609 -1730.6982 2265.251 -1721.125 2265.4258 -1711.6064 C2267.375 -1711.1299 2269.0703 -1709.7227 2269.7266 -1707.1641 c2272.9434 -1694.6279 2278.3809 -1684.8857 2287.5332 -1675.7129 c2292.0898 -1671.1484 2295.4307 -1665.8594 2300.6729 -1661.8975 c2305.6055 -1658.1699 2311.1582 -1656.6768 2316.3652 -1653.6621 c2320.6758 -1651.167 2324.998 -1650.8066 2329.8311 -1650.5459 c2330.2559 -1650.5234 2330.6895 -1650.5 2331.127 -1650.4824 C2331.085 -1651.6221 2331.1641 -1652.8027 2331.1641 -1653.9238 c2331.1641 -1660.375 2330.9863 -1666.6953 2329.6387 -1673.0264 c2328.2686 -1679.457 2325.8027 -1685.8105 2323.79 -1692.0664 c2321.8379 -1698.1328 2320.0791 -1704.3623 2317.3809 -1710.1445 c2314.8281 -1715.6143 2311.0664 -1720.041 2307.8545 -1725.0664 c2301.5977 -1734.8555 2293.5723 -1743.5605 2286.3486 -1752.7266 C2284.9258 -1753.5781 2283.9795 -1754.9277 2283.5117 -1756.4277 C2283.3496 -1756.6445 2283.1787 -1756.8574 2283.0176 -1757.0752 c2275.1729 -1767.6924 2265.9014 -1777.0811 2255.9688 -1785.7422 c2249.1299 -1791.7061 2242.6211 -1797.9971 2235.4238 -1803.4453 C2235.6504 -1802.874 2235.8613 -1802.2959 2236.1035 -1801.7324 c2239.0156 -1794.9473 2241.2754 -1787.9404 2244.2598 -1781.1885 c2247.2266 -1774.4746 2249.9141 -1767.6758 2253.0508 -1761.0313 c2256.3711 -1753.998 2259.6426 -1746.915 2261.8623 -1739.4434 cf2215.7715 -1770.167 m2210.8203 -1755.5254 2207.1396 -1740.8779 2205.9287 -1725.4395 c2205.3223 -1717.7148 2205.2656 -1709.9531 2205.4375 -1702.21 c2205.6113 -1694.3467 2205.6035 -1686.2041 2206.9619 -1678.4453 c2208.1895 -1671.4297 2210.8408 -1664.7529 2213.3145 -1658.1084 c2215.9912 -1650.916 2218.7051 -1643.8965 2222.1875 -1637.041 c2225.2471 -1631.0146 2228.8525 -1625.3027 2232.2344 -1619.458 c2233.1006 -1617.9609 2233.9473 -1616.5791 2234.9824 -1615.2871 C2235.2471 -1615.6875 2235.5029 -1616.0928 2235.7578 -1616.4922 c2238.9189 -1621.4463 2241.582 -1625.9004 2243.4629 -1631.5752 c2245.8975 -1638.9248 2247.2969 -1646.6045 2248.582 -1654.2227 c2251.1416 -1669.3965 2252.3545 -1684.5918 2252.3145 -1699.998 c2252.2734 -1715.708 2251.9502 -1731.4863 2245.6621 -1746.1221 c2239.7871 -1759.7959 2232.707 -1773.0508 2227.9736 -1787.1895 c2227.1309 -1789.7061 2225.999 -1792.3584 2224.8066 -1795.0957 C2224.6299 -1794.624 2224.4531 -1794.1533 2224.2764 -1793.6816 c2221.3477 -1785.8711 2218.4443 -1778.0703 2215.7715 -1770.167 cf2123.0361 -1864.4785 m2118.0586 -1859.9609 2113.8799 -1854.5186 2111.4922 -1848.1963 c2110.1133 -1844.5459 2109.7314 -1840.9443 2109.7314 -1837.0693 c2109.7314 -1836.002 2109.8584 -1834.9404 2110.002 -1833.8818 C2115.2891 -1836.4209 2120.5176 -1839.0938 2124.9805 -1842.8066 c2133.2031 -1849.6465 2138.1943 -1858.8047 2143.5977 -1867.8086 c2145.8711 -1871.5967 2147.7568 -1875.6094 2149.5537 -1879.6396 c2150.1279 -1880.9277 2151.0479 -1882.3584 2151.9658 -1883.8457 C2141.5381 -1878.7236 2131.5537 -1872.21 2123.0361 -1864.4785 cf2054.6523 -1995.8418 m2054.7217 -1995.8555 2054.7773 -1995.8672 2054.8525 -1995.8809 c2057.1523 -1996.3125 2059.3916 -1997.0469 2061.6064 -1997.7842 c2065.8252 -1999.1895 2070.0234 -2000.8398 2074.1641 -2002.4609 c2081.9902 -2005.5254 2088.8535 -2011.0596 2095.249 -2016.3789 c2102.0977 -2022.0752 2105.9355 -2028.5449 2109.167 -2036.7783 c2110.2256 -2039.4756 2111.252 -2042.1182 2112.459 -2044.7002 C2111.2578 -2044.8809 2110.0586 -2045.0049 2109.0986 -2045.2158 c2104.9961 -2046.1172 2101.1826 -2045.7793 2097.1211 -2044.9014 c2089.583 -2043.2705 2082.5527 -2039.6738 2077.0908 -2034.2207 c2070.8496 -2027.9922 2067.0859 -2020.5752 2062.2266 -2013.3701 c2058.6973 -2008.1367 2053.8545 -2002.5176 2054.6523 -1995.8418 Cf*U*u1 D2504.2588 -2105.0537 m2509.6152 -2107.7754 2515.1553 -2109.3613 2521.1738 -2108.3877 c2527.6563 -2107.3389 2533.0273 -2103.8379 2539.1328 -2101.6992 c2544.5391 -2099.8047 2549.9736 -2098.0488 2554.875 -2095.0176 c2557.1035 -2093.6396 2559.3457 -2092.3105 2561.4854 -2090.8086 C2562.2363 -2091.9404 2562.9844 -2093.0781 2563.708 -2094.2344 c2566.958 -2099.4258 2568.1191 -2105.416 2569.3809 -2111.332 c2570.8105 -2118.0332 2570.4785 -2124.9219 2570.6191 -2131.7314 c2570.7559 -2138.3477 2570.8467 -2145.0957 2570.0391 -2151.6895 C2569.1055 -2153.2021 2568.8145 -2155.1387 2569.1445 -2156.9258 C2582.3398 -2156.9258 L2584.252 -2144.2178 2583.9961 -2131.0371 2583.3477 -2118.2285 c2582.8965 -2109.292 2580.8535 -2099.7852 2576.9277 -2091.5449 C2577.333 -2091.6494 2577.7383 -2091.7627 2578.1436 -2091.8877 c2588.1016 -2094.9668 2601.3965 -2092.793 2609.5332 -2086.1758 c2619.6016 -2077.9863 2617.252 -2066.2031 2612.1123 -2055.8564 c2606.6572 -2044.874 2591.3574 -2046.5664 2582.9014 -2052.2881 c2577.0967 -2056.2158 2572.6348 -2061.6348 2568.1797 -2066.9727 c2566.9922 -2068.3945 2565.8105 -2069.7939 2564.71 -2071.2217 C2562.1016 -2067.0059 2559.4854 -2062.7949 2556.8184 -2058.6035 c2553.7441 -2053.7734 2551.6318 -2049.7275 2550.5625 -2044.043 c2549.7754 -2039.8633 2548.9043 -2031.7803 2551.8867 -2028.1885 c2552.5752 -2027.3594 2553.0166 -2026.4824 2553.2588 -2025.5977 C2553.9141 -2025.3008 2554.5645 -2024.9609 2555.209 -2024.5635 c2558.709 -2022.4082 2558.9102 -2018.5996 2557.3633 -2015.8027 C2560.5176 -2014.0078 2563.6572 -2012.1533 2566.4023 -2009.877 c2575.2441 -2002.542 2577.9346 -1990.7246 2579.4619 -1979.8662 c2580.3457 -1973.5781 2580.7988 -1966.7783 2578.002 -1960.8799 c2575.6582 -1955.9346 2571.8105 -1951.7207 2568.0039 -1947.8613 c2563.9766 -1943.7793 2559.3604 -1940.5234 2553.6563 -1939.4072 c2548.6533 -1938.4277 2541.6797 -1937.9775 2536.8984 -1939.9102 c2526.0518 -1944.293 2519.0684 -1952.7939 2514.5234 -1963.3135 c2509.791 -1974.2666 2509.3906 -1985.7412 2509.124 -1997.4736 c2508.8906 -2007.8066 2510.7764 -2017.584 2519.8945 -2023.6367 c2524.793 -2026.8887 2532.0254 -2027.1504 2537.6816 -2027.29 c2537.8945 -2027.2949 2538.1055 -2027.3018 2538.3184 -2027.3076 C2536.0684 -2034.7373 2536.9297 -2043.2568 2538.707 -2050.6768 c2540.5586 -2058.4111 2545.168 -2064.7813 2549.5371 -2071.2813 C2541.8369 -2068.8311 2533.9824 -2067.0947 2525.8564 -2068.1914 c2520.5664 -2068.9043 2515.4922 -2070.6465 2511.6963 -2071.1191 c2510.0186 -2071.3281 2508.7227 -2071.6104 2507.1826 -2072.3252 c2506.9746 -2072.4219 2503.248 -2074.168 2505.2197 -2073.4678 c2502.4688 -2074.4443 2500.0566 -2076.2246 2498.3828 -2078.6201 c2495.584 -2082.626 2495.3516 -2087.5 2495.3408 -2092.2285 c2495.3271 -2098.2031 2499.1943 -2102.4805 2504.2588 -2105.0537 cf0 D2576.2588 -2077.5176 m2578.5508 -2074.6982 2580.9258 -2071.9502 2583.3584 -2069.252 c2587.2637 -2064.9199 2591.625 -2060.5576 2597.8037 -2060.7393 c2601.8418 -2060.8574 2602.8906 -2066.6514 2603.5479 -2069.7666 c2604.5654 -2074.5947 2600.833 -2077.1465 2596.6924 -2078.6104 c2592.5 -2080.0928 2587.4551 -2080.6875 2583.1016 -2079.7598 c2580.8135 -2079.2715 2578.5195 -2078.1064 2576.1777 -2077.6143 C2576.2041 -2077.582 2576.2344 -2077.5479 2576.2588 -2077.5176 cf2542.2246 -2006.8467 m2536.7129 -2004.3164 2531.7129 -2009.5811 2532.3506 -2013.9746 C2530.3232 -2013.7158 2528.3301 -2013.2539 2526.4551 -2012.4121 c2521.1113 -2010.0098 2522.0498 -2000.7617 2522.1543 -1996.168 c2522.332 -1988.2891 2522.5391 -1980.7549 2524.709 -1973.1113 c2525.7959 -1969.2852 2527.4834 -1965.6709 2529.7529 -1962.4082 c2530.8516 -1960.8291 2531.5977 -1959.0146 2532.8574 -1957.5459 c2534.0068 -1956.207 2536.3555 -1955.1602 2537.8184 -1954.1748 c2543.1426 -1950.5898 2551.5557 -1950.6953 2556.5908 -1954.9453 c2559.3447 -1957.2695 2561.7939 -1960.0166 2564.0078 -1962.8408 c2566.8682 -1966.4883 2567.2539 -1969.876 2567.0625 -1974.4287 c2566.75 -1981.9131 2564.8936 -1990.4111 2560.9297 -1996.8301 c2559.1914 -1999.6436 2556.2461 -2001.2236 2553.5 -2002.8711 c2550.083 -2004.9199 2546.1777 -2008.6621 2542.2246 -2006.8467 cf2508.4785 -2087.7461 m2508.8701 -2085.1777 2511.0381 -2085.3184 2512.9297 -2083.8398 c2512.8008 -2083.9404 2515.7246 -2083.8877 2515.7539 -2083.8877 c2517.5059 -2083.877 2518.9043 -2083.0645 2520.4258 -2082.3184 c2525.8115 -2079.6826 2534.0283 -2080.541 2539.5693 -2081.9023 c2542.168 -2082.541 2544.8047 -2083.3047 2547.4326 -2084.1406 C2543.1895 -2086.3477 2538.9063 -2088.0322 2534.2266 -2089.6719 c2528.2402 -2091.7686 2522.8311 -2095.7969 2516.3047 -2095.7295 c2513.7246 -2095.7031 2510.6807 -2093.8584 2508.5273 -2092.5596 c2507.8477 -2092.1494 2508.3594 -2088.5225 2508.4785 -2087.7461 cf*U*u1 D2898.6455 -2091.1367 m2909.1543 -2100.6465 2921.9199 -2108 2936.25 -2107 C2936.374 -2107 L2934.5371 -2111 2932.9111 -2115.3262 2931.1367 -2119.3184 c2925.5684 -2131.8535 2916.6133 -2142.877 2912.9746 -2156.2383 c2912.9111 -2156.4717 2912.8633 -2156.7002 2912.8232 -2156.9258 C2926.3896 -2156.9258 L2928.2422 -2151.5273 2931.0127 -2146.584 2934.1367 -2141.7637 c2938.3477 -2135.2695 2941.4473 -2128.249 2944.5371 -2121.1592 c2946.3105 -2117.0879 2948.0879 -2113.1035 2950.1162 -2109.2207 C2950.5723 -2109.1055 2951.0156 -2108.9541 2951.4336 -2108.7598 C2953.5342 -2111.125 2955.9824 -2113.1787 2958.6406 -2115.2607 c2963.9092 -2119.3867 2968.9805 -2123.7402 2974.9668 -2126.8135 c2984.2715 -2131.5918 2995.6162 -2131.6641 3004.8955 -2126.8066 c3016.125 -2120.9258 3011.8535 -2106.1719 3004.002 -2099.2861 c2999.7129 -2095.5244 2994.0518 -2094.4121 2988.5635 -2093.7578 c2981.3613 -2092.8994 2974.4375 -2091.1035 2967.1133 -2091.2451 c2965.3682 -2091.2793 2963.6465 -2091.4736 2961.9346 -2091.7432 C2963.7266 -2089.5186 2965.5488 -2087.3184 2967.3438 -2085.1035 c2971.5225 -2079.9482 2975.917 -2074.5049 2981.2676 -2070.5293 c2983.1582 -2069.125 2984.6191 -2068.3389 2986.4824 -2068.3281 C2986.71 -2068.3545 2986.9355 -2068.3652 2987.1582 -2068.3613 C2987.6992 -2068.4102 2988.2676 -2068.502 2988.9023 -2068.6768 c2992.3779 -2069.6328 2995.3857 -2071.9023 2998.8232 -2073.0293 c3004.9014 -2075.0244 3011.9238 -2077.5752 3018.3848 -2077.3281 c3025.8291 -2077.043 3032.0107 -2073.1709 3038.7568 -2070.583 c3044.6592 -2068.3193 3049.3945 -2064.9326 3053.0332 -2059.7412 c3056.6934 -2054.5186 3057.5898 -2045.6758 3057.7002 -2039.4941 c3057.8213 -2032.6445 3053.2539 -2027.4248 3049.166 -2022.4043 c3044.6055 -2016.8047 3040.1465 -2012.5059 3033.3662 -2009.7441 c3027.2598 -2007.2568 3020.3613 -2006.8965 3013.8535 -2006.8857 c3007.207 -2006.875 2999.8164 -2006.6416 2993.5674 -2009.2178 c2982.5918 -2013.7441 2978.4414 -2024.916 2974.6387 -2035.2275 c2971.7773 -2042.9883 2972.125 -2051.5 2975.8008 -2058.4277 C2966.0137 -2064.1553 2958.7246 -2075.1201 2951.9238 -2083.5898 c2951.0059 -2084.7324 2950.1055 -2085.8848 2949.2109 -2087.043 C2948.8311 -2086.4375 2948.4404 -2085.8359 2948.043 -2085.2363 c2943.6348 -2078.5869 2938.6943 -2072.377 2933.7598 -2066.1133 c2929.9277 -2061.248 2926.3203 -2057.0918 2921.3506 -2053.3506 c2919.0273 -2051.6016 2916.1953 -2050.4512 2913.5869 -2049.2051 c2910.3926 -2047.6787 2907.3281 -2045.6396 2904.2881 -2043.8154 c2898.6357 -2040.4238 2894.7871 -2036.6016 2888.0107 -2039.7285 c2883.124 -2041.9834 2882.9277 -2048.7891 2883.0469 -2053.2969 c2883.4141 -2067.1133 2888.2695 -2081.7461 2898.6455 -2091.1367 cf0 D2979.7881 -2105.5059 m2984.7988 -2106.5693 2990.5479 -2106.1748 2995.1055 -2108.7754 c2997.042 -2109.8789 2998.1113 -2112.8916 2998.7256 -2114.8838 c2998.7725 -2115.0361 2998.8125 -2115.1689 2998.8477 -2115.2891 C2998.2891 -2115.708 2997.5742 -2115.9971 2996.9541 -2116.2305 c2986.2744 -2120.248 2977.4043 -2113.7285 2968.9834 -2106.9854 c2968 -2106.1973 2967.0361 -2105.4482 2966.1035 -2104.6992 C2970.5596 -2104.3389 2974.9404 -2104.4766 2979.7881 -2105.5059 cf2991.3418 -2028.5723 m2993.7617 -2024.0264 2997.0078 -2021.0098 3002.2207 -2020.3223 c3008.5254 -2019.4912 3015.7793 -2019.3398 3022.0879 -2020.2031 c3028.8047 -2021.123 3033.7129 -2023.96 3038.0117 -2029.1133 c3040.0869 -2031.6006 3042.123 -2034.1563 3043.8613 -2036.8906 c3045.0645 -2038.7803 3044.8145 -2041.1533 3044.3398 -2044.1221 c3043.25 -2050.9385 3041.459 -2055.0762 3035.1094 -2058.1221 c3030.3711 -2060.3945 3022.2676 -2065.3252 3016.8242 -2064.3516 c3010.5039 -2063.2207 3004.0488 -2061.4932 2998.3076 -2058.6172 c2995.5234 -2057.2227 2992.6045 -2056.085 2989.6289 -2055.5537 C2981.5615 -2049.2188 2987.5303 -2035.7344 2991.3418 -2028.5723 cf2909.6748 -2061.7002 m2914.9941 -2064.2588 2918.8145 -2067.8672 2922.3916 -2072.5059 c2927.2998 -2078.8711 2932.4727 -2085.0215 2936.8184 -2091.7988 c2937.376 -2092.668 2937.9482 -2093.5293 2938.4932 -2094.4043 C2933.6582 -2094.5254 2928.8867 -2094.3105 2924.1738 -2092.6055 c2918.3105 -2090.4844 2912.5586 -2086.1875 2907.8379 -2082.1826 c2901.8389 -2077.0938 2899.4287 -2070.6006 2897.6055 -2063.1309 c2896.8652 -2060.0996 2896.1641 -2056.8477 2896.0635 -2053.7109 C2900.5088 -2056.5254 2904.8828 -2059.3965 2909.6748 -2061.7002 cf*U*u1 D3409.707 -1998.582 m3412.2148 -2013.627 3415.7832 -2028.0078 3421.8574 -2042.0547 c3424.7852 -2048.8262 3428.8193 -2054.1514 3433.1201 -2060.0488 c3436.2832 -2064.3848 3437.6699 -2069.5449 3442.9043 -2069.9609 C3443.3662 -2071.1045 3444.2588 -2072.0166 3445.3477 -2072.6484 C3440.4531 -2084.1104 3436.7236 -2096.2227 3433.6426 -2108.1592 c3431.5166 -2116.3936 3429.9297 -2124.7568 3428.6953 -2133.168 c3427.5371 -2141.0547 3426.0947 -2148.9512 3425.7568 -2156.9258 C3438.7402 -2156.9258 L3439.2344 -2142.4092 3442.3428 -2127.3809 3445.7422 -2113.3545 c3447.4746 -2106.21 3449.7227 -2099.2852 3452.0801 -2092.332 c3454.6738 -2084.6846 3457.0703 -2076.9111 3460.9248 -2069.7813 c3465.1504 -2061.9688 3469.168 -2053.8398 3472.833 -2045.5957 C3473.1406 -2045.9902 3473.5098 -2046.373 3473.9629 -2046.7363 c3482.3926 -2053.5049 3493.9658 -2050.1621 3503.3584 -2047.2988 c3515.0469 -2043.7363 3526.7695 -2040.6064 3538.0195 -2035.7617 c3548.6348 -2031.1904 3557.9121 -2024.4775 3566.2979 -2016.5859 c3574.6182 -2008.7529 3583.1123 -1999.2148 3588.8652 -1989.3037 c3591.5137 -1984.7402 3592.6973 -1979.6299 3594.9912 -1974.957 c3597.0498 -1970.7637 3598.1816 -1966.0469 3595.4775 -1961.873 c3593.0234 -1958.083 3587.4883 -1957.6152 3583.4063 -1957.0742 c3577.6367 -1956.3076 3571.6748 -1957.2676 3565.9531 -1958.0762 c3559.8896 -1958.9326 3553.8867 -1960.1182 3547.9043 -1961.4365 c3542.2012 -1962.6934 3537.0039 -1965.085 3531.5518 -1967.0859 c3526.627 -1968.8926 3521.832 -1970.918 3517.6045 -1974.0654 c3515.6084 -1975.5518 3513.8223 -1977.165 3512.2588 -1979.1016 c3510.8926 -1980.793 3509.6475 -1983.2832 3507.4395 -1983.9297 c3499.4121 -1986.2793 3502.8311 -1998.8252 3510.8965 -1996.4648 c3517.2891 -1994.5947 3519.7217 -1989.5732 3524.2461 -1985.3086 c3529.3701 -1980.4785 3538.0801 -1978.248 3544.5391 -1975.876 c3552.3711 -1973 3561.2676 -1971.7031 3569.5039 -1970.6006 c3573.9336 -1970.0068 3578.583 -1969.4385 3583.043 -1970.0713 C3582.7109 -1970.8623 3582.3945 -1971.6582 3582.1123 -1972.4893 c3581.25 -1975.0332 3580.2598 -1977.5078 3579.1113 -1979.9355 c3576.7285 -1984.9727 3573.0947 -1989.3545 3569.627 -1993.6787 c3562.6016 -2002.4434 3554.582 -2010.793 3545.2441 -2017.1055 c3535.5801 -2023.6387 3524.4961 -2027.5566 3513.373 -2030.7822 c3507.7129 -2032.4238 3502.0801 -2034.1436 3496.4258 -2035.8037 c3493.8691 -2036.5547 3491.1025 -2037.4648 3488.4219 -2037.5244 c3487.334 -2037.5479 3484.0566 -2038.2686 3483.1543 -2037.5449 c3481.1064 -2035.9004 3478.7803 -2035.6953 3476.7627 -2036.3457 C3477.7646 -2033.877 3478.7432 -2031.4063 3479.666 -2028.9346 c3482.0957 -2022.4307 3484.0654 -2016.0439 3487.8047 -2010.1348 c3491.8223 -2003.7852 3495.9688 -1997.5195 3499.9863 -1991.1699 c3503.499 -1985.6182 3508.2705 -1980.5635 3512.0791 -1975.1592 c3516.7646 -1968.5098 3523.2998 -1963.4004 3528.3643 -1957.0391 c3532.8418 -1951.415 3537.8125 -1946.2646 3542.1768 -1940.5361 c3547.127 -1934.0391 3551.9209 -1927.5234 3557.0938 -1921.2002 c3561.2266 -1916.1494 3563.668 -1909.6123 3566.7969 -1903.8955 c3570.6621 -1896.832 3574.7627 -1889.8809 3578.8711 -1882.9561 c3586.8174 -1869.5625 3595.6885 -1857.3359 3605.7422 -1845.4541 c3610.5625 -1839.7568 3615.4834 -1834.1563 3619.9678 -1828.1875 c3624.9004 -1821.623 3630.5615 -1815.5283 3635.3623 -1808.8936 c3639.1348 -1803.6807 3642.3594 -1797.9014 3645.3252 -1792.1982 c3648.8809 -1785.3623 3652.8867 -1778.8193 3656.5078 -1772.0225 c3659.8789 -1765.6963 3662.043 -1758.9092 3665.0449 -1752.4297 c3668.0107 -1746.0264 3672.6377 -1740.8203 3675.8936 -1734.5928 c3678.7822 -1729.0674 3680.748 -1722.7979 3684.0664 -1717.5693 c3687.7422 -1711.7764 3689.2559 -1705.2246 3691.9238 -1698.8828 c3694.7383 -1692.1934 3697.4512 -1685.4551 3700.2275 -1678.748 c3703.3633 -1671.1768 3705.1416 -1663.5 3707.21 -1655.6084 c3708.9883 -1648.8203 3710.8564 -1642.0557 3712.6191 -1635.2686 c3714.6279 -1627.5391 3715.1953 -1619.5088 3717.1465 -1611.7734 c3717.8389 -1609.0273 3718.2676 -1606.2266 3718.6074 -1603.4102 C3725.1992 -1603.3926 3731.6436 -1603.1816 3737.9785 -1601.1602 c3745.2939 -1598.8262 3752.6523 -1596.3223 3759.8262 -1593.5869 c3772.6074 -1588.7139 3784.957 -1582.5889 3796.1582 -1574.71 c3807.8896 -1566.457 3817.5713 -1555.7666 3826.1973 -1544.3809 c3828.4492 -1541.4082 3830.6201 -1538.3867 3832.7129 -1535.3008 c3833.1631 -1534.6367 3833.5898 -1533.9209 3834.0107 -1533.1855 C3834.0107 -1504.1406 L3828.0039 -1501.8672 3820.377 -1502.1934 3814.6113 -1501.9707 c3800.2598 -1501.417 3786.1113 -1505.2012 3773.2129 -1511.2559 c3760.1152 -1517.4043 3748.7129 -1526.8408 3738.4844 -1536.9385 c3734.8203 -1540.5557 3731.25 -1544.2578 3728.0254 -1548.2549 C3729.332 -1539.3369 3730.7715 -1530.4395 3732.9102 -1521.7012 c3736.7539 -1506.0039 3742.9619 -1490.8389 3748.8984 -1475.833 c3751.9756 -1468.0537 3753.9922 -1459.9521 3757.0918 -1452.207 c3760.3887 -1443.9668 3764.3438 -1435.9863 3768.2852 -1428.042 c3771.7207 -1421.1191 3775.9883 -1414.7021 3779.7441 -1407.9531 c3783.7734 -1400.71 3786.332 -1392.9141 3790.8447 -1385.9277 c3792.4727 -1383.4082 3794.2354 -1380.9473 3795.7588 -1378.3574 C3795.7666 -1379.0527 3795.7695 -1379.7461 3795.793 -1380.4492 c3796.0479 -1387.9229 3798.0713 -1395.0801 3804.5605 -1399.3906 c3812.2949 -1404.5273 3823.7236 -1398.5859 3830.0078 -1393.79 c3831.3809 -1392.7422 3832.7168 -1391.5557 3834.0107 -1390.2725 C3834.0107 -1368.4785 L3831.5117 -1372.6953 3828.6738 -1376.6826 3825.54 -1380.3105 c3823.7236 -1382.4141 3813.0586 -1391.3027 3810.3818 -1387.4775 c3807.6572 -1383.584 3808.749 -1376.8994 3808.7754 -1372.4443 c3808.8184 -1365.0264 3812.2266 -1358.0449 3814.1094 -1350.9834 c3815.9434 -1344.1064 3820.209 -1338.0127 3824.1338 -1332.1758 c3827.9375 -1326.5166 3831.7891 -1321.2949 3834.0107 -1314.7783 C3834.0107 -1287.1885 L3830.6465 -1291.1191 3828.1035 -1295.3125 3825.9629 -1299.8271 C3824.6387 -1294.6055 3817.0469 -1291.7109 3814.2871 -1297.7422 c3812.1777 -1302.3506 3811.3945 -1307.9434 3808.7207 -1312.208 c3806.2676 -1316.1182 3802.6445 -1319.749 3798.8906 -1322.3887 c3790.0693 -1328.5908 3779.3926 -1333.7793 3769.2041 -1337.2314 c3758.3223 -1340.918 3747.4844 -1341.4082 3736.1201 -1340.3496 c3732.2383 -1339.9883 3726.6895 -1339.2695 3723.4209 -1336.7559 C3723.5146 -1336.6055 3723.5234 -1336.1396 3723.4404 -1335.3418 C3723.6055 -1333.9775 3723.9072 -1332.8418 3724.4941 -1331.5928 c3725.5107 -1329.4268 3726.7061 -1327.2109 3728.209 -1325.3564 c3741.6201 -1308.8184 3763.3076 -1300.3203 3782.5527 -1292.6904 c3792.918 -1288.582 3803.9385 -1285.2432 3814.7793 -1282.6729 c3819.7861 -1281.4854 3824.9824 -1281.4834 3829.9766 -1280.3906 c3831.3535 -1280.0889 3832.6924 -1279.9316 3834.0107 -1279.8711 C3834.0107 -1267.0137 L3832.1582 -1267.0381 3830.2764 -1267.1582 3828.3066 -1267.4648 c3822.0947 -1268.4316 3815.8438 -1269.0654 3809.7129 -1270.5195 c3806.2109 -1271.3496 3802.7129 -1272.2832 3799.2305 -1273.2988 C3800.5723 -1272.4072 3801.8857 -1271.4395 3803.1621 -1270.3711 c3809.5977 -1264.9844 3800.3506 -1255.8379 3793.9688 -1261.1797 c3787.8242 -1266.3223 3780.3828 -1267.5459 3772.5938 -1267.623 c3763.3838 -1267.7148 3754.1016 -1267.6016 3745.0859 -1265.5479 c3736.5791 -1263.6104 3729.5176 -1259.8682 3723.3926 -1253.7578 c3720.8135 -1251.1865 3718.9277 -1249.1221 3719.6543 -1245.2598 c3720.4102 -1241.2334 3726.7881 -1241.1641 3729.9258 -1240.9014 c3749.5957 -1239.2549 3770.8525 -1244.3252 3789.6582 -1249.6748 c3798.9717 -1252.3242 3807.9502 -1255.7285 3816.6191 -1260.0166 c3820.4668 -1261.9199 3824.4531 -1263.6318 3828.4912 -1265.0859 c3830.2305 -1265.7119 3832.125 -1266.2588 3834.0107 -1266.8486 C3834.0107 -1225.6592 L3829.2178 -1215.6689 3826.499 -1204.7627 3822.1074 -1194.5918 c3821.3076 -1192.7402 3820.4268 -1190.9209 3819.5078 -1189.1191 C3819.1621 -1187.041 3818.8389 -1184.9707 3818.5352 -1182.9219 c3817.5205 -1176.0742 3817.085 -1169.2578 3816.7764 -1162.3525 c3816.5059 -1156.3135 3816.7773 -1150.334 3820.875 -1145.5723 c3824.3721 -1141.5078 3829.2832 -1138.9688 3834.0107 -1136.5742 C3834.0107 -1121.8232 L3829.3926 -1124.0186 3824.8604 -1126.5137 3820.5957 -1129.1484 c3814.9229 -1132.6533 3809.8867 -1137.375 3806.8398 -1143.3574 c3803.21 -1150.4814 3803.5967 -1158.8604 3803.9824 -1166.6455 C3800.6367 -1163.0381 3796.498 -1160.0566 3792.0439 -1158.0195 c3787.252 -1155.8291 3780.9082 -1153.2354 3775.7227 -1155.3096 c3770.8066 -1157.2764 3769.8359 -1161.5459 3767.4746 -1165.7529 c3764.874 -1170.3848 3763.9258 -1174.8535 3764.4824 -1180.1543 c3765.1055 -1186.0859 3767.2744 -1191.6523 3769.0693 -1197.2939 c3770.9258 -1203.1318 3771.8574 -1209.0918 3774.1758 -1214.8086 c3777.4053 -1222.7715 3782.5596 -1229.3066 3787.9834 -1235.7256 C3786.1348 -1235.248 3784.2891 -1234.7813 3782.4502 -1234.3369 c3770.2148 -1231.3779 3757.6611 -1229.3711 3745.1387 -1228.124 c3734.5039 -1227.0654 3718.7832 -1226.248 3710.7881 -1234.7773 c3703.8438 -1242.1855 3706.0293 -1253.6963 3712.041 -1260.7285 c3719.4551 -1269.3984 3729.1045 -1274.5195 3739.9521 -1277.6523 c3750.9404 -1280.8252 3762.8564 -1280.7197 3774.1895 -1280.6074 c3775.6875 -1280.5928 3777.1631 -1280.5137 3778.6191 -1280.3809 C3776.0332 -1281.4033 3773.4648 -1282.4551 3770.9316 -1283.5547 c3748.2578 -1293.3994 3721.2188 -1304.5029 3711.4629 -1329.251 c3709.5371 -1334.1348 3709.6807 -1340.5742 3713.0625 -1344.7168 c3716.5664 -1349.0107 3722.29 -1350.749 3727.4668 -1352.0088 c3740.4199 -1355.1611 3754.7109 -1354.5146 3767.54 -1351.2793 c3780.3477 -1348.0488 3792.9551 -1341.5361 3804.0859 -1334.5215 c3806.2324 -1333.168 3808.2227 -1331.6504 3810.0977 -1330.0059 C3809.9541 -1330.2217 3809.8125 -1330.4346 3809.668 -1330.6523 c3807.9609 -1333.2344 3806.5508 -1335.8652 3805.3184 -1338.5459 C3801.752 -1337.8662 3797.249 -1339.9043 3796.7031 -1344.6172 c3796.3926 -1347.293 3793.6348 -1350.0244 3792.7637 -1352.6289 c3791.7813 -1355.5635 3789.8906 -1358.3838 3788.7734 -1361.3262 c3787.666 -1364.2432 3786.8584 -1367.2588 3785.5332 -1370.0918 c3783.7568 -1373.8867 3780.9141 -1377.3613 3778.6455 -1380.875 c3774.7842 -1386.8525 3772.6152 -1393.585 3769.3408 -1399.8682 c3765.7949 -1406.6738 3761.3193 -1412.9463 3757.8926 -1419.8096 c3750.959 -1433.6953 3744.6826 -1447.4951 3740.1992 -1462.3594 c3738.1406 -1469.1816 3734.9111 -1475.7656 3732.2891 -1482.3945 c3729.3857 -1489.7324 3727.0488 -1497.3164 3724.2871 -1504.7109 c3718.9336 -1519.041 3717.0488 -1534.6934 3714.7227 -1549.7344 c3713.5977 -1557.0117 3712.7412 -1564.3223 3711.3555 -1571.5596 c3710.7031 -1574.9707 3709.873 -1578.2959 3709.0684 -1581.6221 C3705.7002 -1588.7129 3703.1836 -1595.9629 3703.0205 -1604.334 c3702.9863 -1606.1104 3703.5459 -1607.5059 3704.4453 -1608.5283 C3702.7051 -1618.6094 3700.5273 -1628.5879 3698.2324 -1638.5957 c3694.79 -1653.6045 3690.6836 -1668.1865 3684.7012 -1682.376 c3682.0684 -1688.6211 3678.8643 -1695.0176 3676.8174 -1701.459 c3675.875 -1704.4248 3675.4258 -1707.3857 3673.585 -1709.9453 c3671.5752 -1712.7383 3670.5244 -1715.9219 3668.9424 -1718.9492 c3665.9141 -1724.7412 3663.4854 -1730.4482 3659.7422 -1735.8545 c3655.5254 -1741.9434 3652.2461 -1748.4355 3649.8008 -1755.4668 c3647.4219 -1762.3086 3643.6533 -1768.7012 3639.9053 -1774.8652 c3635.999 -1781.2891 3632.7676 -1788.1152 3629.0156 -1794.6377 c3625.4932 -1800.7627 3620.9434 -1805.8789 3616.5762 -1811.4063 c3611.499 -1817.832 3606.6416 -1824.377 3601.3398 -1830.624 c3591.4199 -1842.3105 3581.6689 -1853.9238 3573.4512 -1866.8965 c3565.3887 -1879.624 3557.7559 -1892.7705 3550.8945 -1906.1846 c3547.5791 -1912.667 3542.8711 -1917.5918 3538.6592 -1923.4863 c3533.915 -1930.126 3529.0918 -1936.6387 3523.5488 -1942.6348 c3518.4951 -1948.1016 3514.0313 -1953.8809 3508.7461 -1959.166 c3503.4043 -1964.5068 3499.3252 -1970.8467 3494.8613 -1976.9063 c3485.8945 -1989.0752 3476.2109 -2001.4785 3470.6338 -2015.7012 c3469.209 -2019.3359 3467.7773 -2022.96 3466.3252 -2026.5713 C3466.875 -2013.1123 3465.8008 -2000.2461 3461.291 -1987.2773 c3457.2031 -1975.5205 3454.8525 -1962.4932 3446.0527 -1953.1367 c3437.1406 -1943.6631 3430.2227 -1930.6826 3417.2168 -1926.3662 c3402.6846 -1921.543 3403.377 -1943.9688 3403.4316 -1952.1563 c3403.5361 -1967.7617 3407.1523 -1983.25 3409.707 -1998.582 cf0 D3786.0977 -1209.8379 m3784.46 -1205.7998 3783.4551 -1201.5176 3782.5723 -1197.2637 c3781.6074 -1192.6094 3779.6533 -1188.127 3778.3369 -1183.5635 c3777.1904 -1179.5898 3776.6543 -1175.9971 3778.6992 -1172.3145 c3779.5195 -1170.8389 3780.2422 -1169.3877 3780.8379 -1167.8271 C3781.9404 -1168.1152 3783.0342 -1168.4414 3784.1191 -1168.7871 c3792.3857 -1171.4238 3797.6045 -1178.6924 3802.2295 -1185.5752 c3804.0059 -1188.2207 3805.5908 -1190.8975 3807.0469 -1193.6191 C3808.584 -1201.9512 3810.6602 -1210.1826 3813.2842 -1218.1104 c3815.8047 -1225.7256 3819.3291 -1232.8438 3823.3945 -1239.7334 c3825.334 -1243.0205 3827.1299 -1246.3896 3829.0625 -1249.6807 c3829.5098 -1250.4424 3830.0156 -1251.2041 3830.5439 -1251.9697 C3830 -1251.7539 3829.4561 -1251.5391 3828.918 -1251.3145 C3828.6104 -1248.3281 3826.5322 -1245.4971 3822.6826 -1245.3623 c3813.2451 -1245.0313 3807.9258 -1239.3594 3802.3125 -1232.5811 c3796.3262 -1225.3525 3789.6855 -1218.6885 3786.0977 -1209.8379 cf3720.8486 -1586.5791 m3723.624 -1580.792 3727.1113 -1575.2344 3729.9736 -1569.584 c3735.918 -1557.8496 3744.4297 -1548.8672 3754.0771 -1540.042 c3763.8271 -1531.1221 3775.167 -1523.7061 3787.6465 -1519.248 c3799.5049 -1515.0127 3811.3027 -1514.8018 3823.7061 -1515.3828 c3825.2041 -1515.4531 3826.6133 -1515.666 3828.0742 -1515.9961 c3828.6055 -1516.1162 3829.1104 -1516.291 3829.6016 -1516.4941 C3828.2813 -1519.0869 3826.0156 -1521.6064 3824.4863 -1524.0986 c3822.5508 -1527.2539 3820.4492 -1530.3057 3818.3066 -1533.3223 c3810.6484 -1544.1094 3801.5459 -1554.5859 3790.9102 -1562.5322 c3780.8721 -1570.0332 3769.4658 -1575.8262 3757.8594 -1580.4697 c3751.3662 -1583.0674 3744.6553 -1585.0781 3738.0645 -1587.415 c3731.9219 -1589.5928 3726.4053 -1590.2656 3720.126 -1590.3877 C3720.3301 -1589.1104 3720.5801 -1587.8428 3720.8486 -1586.5791 Cf3417.2539 -1940.7266 m3419.0791 -1941.9385 3420.582 -1943.373 3422.0967 -1945.1006 c3425.8301 -1949.3604 3429.4414 -1953.7109 3433.1836 -1957.9668 c3436.6094 -1961.8604 3439.9717 -1965.6182 3442.0088 -1970.4521 c3443.9727 -1975.1104 3445.2402 -1980.0635 3446.7402 -1984.8818 c3448.5273 -1990.6221 3450.6689 -1996.1641 3452.0361 -2002.0371 c3453.4277 -2008.0166 3453.5313 -2013.7549 3453.4648 -2019.8613 c3453.3877 -2026.9307 3453.2988 -2034.1309 3451.8457 -2041.0684 c3450.793 -2046.0957 3449.0322 -2051.0957 3446.5039 -2055.5586 c3446.3467 -2055.8359 3446.1904 -2056.1113 3446.0361 -2056.3838 C3445.5127 -2055.3984 3444.9629 -2054.4385 3444.3457 -2053.4883 c3442.7471 -2051.0264 3440.7314 -2048.7861 3438.8945 -2046.5039 c3435.3535 -2042.1055 3433.1348 -2035.8896 3431.1543 -2030.6689 c3426.5234 -2018.4707 3424.0518 -2005.9775 3421.916 -1993.1621 c3419.748 -1980.1563 3416.9219 -1967.1865 3416.4688 -1953.9775 c3416.3145 -1949.4922 3417.001 -1945.1182 3417.2539 -1940.7266 Cf*U*u1 D3428.6982 -382.7563 m3426.8848 -390.1641 3426.9678 -397.8877 3429.0117 -405.833 c3431.832 -416.7974 3437.165 -428.0103 3442.543 -437.9683 c3447.8027 -447.709 3455.1396 -454.0034 3466.2109 -455.6113 c3477.4746 -457.2471 3487.0928 -454.1528 3492.1338 -443.4326 c3497.5859 -431.8379 3499.7432 -418.3311 3499.2471 -405.603 c3498.9863 -398.9116 3497.7158 -392.1636 3496.8848 -385.5225 c3496.0762 -379.0542 3495.2871 -372.9717 3492.5137 -366.9946 c3490.3965 -362.4336 3487.4287 -358.4072 3485.4951 -353.7778 c3485.2881 -353.2822 3485.0723 -352.7881 3484.8535 -352.2954 C3485.0234 -352.3252 3485.1904 -352.3574 3485.3623 -352.3857 c3491.3789 -353.3711 3496.7852 -356.9321 3502.4121 -359.1885 c3509.1152 -361.876 3515.9463 -362.9302 3523.0967 -363.6162 c3530.8691 -364.3618 3538.5977 -365.5054 3546.3398 -366.5146 c3553.7129 -367.4761 3560.5723 -367.9404 3568.0068 -367.2412 c3575.6895 -366.5186 3583.498 -366.2246 3591.1309 -365.123 c3603.0078 -363.4082 3617.3154 -360.4639 3618.8438 -346.3325 c3619.4434 -340.7866 3617.6504 -334.3979 3616.1465 -329.1201 c3614.4561 -323.1899 3611.376 -318.4985 3605.5996 -316.0225 c3600.1914 -313.7046 3594.1387 -312.894 3588.5098 -311.1821 c3581.5459 -309.0649 3574.6113 -307.7104 3567.3584 -307.0645 c3564.4287 -306.8032 3561.4209 -306.6152 3558.4063 -306.5635 C3559.1377 -305.8062 3559.8691 -305.0547 3560.6055 -304.3184 c3571.4336 -293.4907 3581.1758 -280.6367 3590.3076 -268.3564 c3598.7793 -256.9648 3603.873 -244.1997 3603.0977 -229.8745 c3602.3457 -215.9893 3597.3037 -200.874 3591.125 -188.5146 c3588.2266 -182.7188 3583.2334 -179.2119 3578.4385 -175.1255 c3573.1016 -170.5776 3568.6689 -167.1606 3561.377 -167.6445 c3558.0283 -167.8667 3554.8594 -169.0918 3551.6982 -170.1079 c3548.3828 -171.1733 3544.9893 -170.5645 3541.7598 -171.4819 c3534.8965 -173.4312 3528.5586 -176.9604 3522.3525 -180.4072 c3509.7402 -187.4116 3501.1611 -198.9995 3492.2031 -210.0283 c3476.2598 -229.6553 3469.7754 -256.418 3469.3232 -281.2837 c3469.0703 -295.2417 3469.6348 -309.0757 3471.7646 -322.8853 c3471.7705 -322.9229 3471.7764 -322.9663 3471.7822 -323.0039 C3469.2227 -320.7314 3466.8848 -318.2188 3464.5859 -315.6777 c3461.7871 -312.5835 3459.4893 -309.0884 3456.9375 -305.7939 c3454.3945 -302.5122 3451.2148 -299.5742 3448.9229 -296.1455 c3444.9277 -290.1685 3442.7715 -283.2305 3438.7051 -277.2324 c3434.0654 -270.3896 3428.9697 -263.9033 3424.7734 -256.7627 c3420.8906 -250.1538 3418.373 -242.6343 3416.0576 -235.3706 c3413.9053 -228.6191 3418.957 -220.123 3422.3125 -214.689 c3424.084 -211.8213 3425.918 -209.002 3427.5908 -206.0742 c3429.4102 -202.8896 3432 -201.4526 3435.0459 -199.6523 c3438.0107 -197.8999 3439.873 -196.8286 3443.3848 -197.6294 c3446.5781 -198.3574 3449.5488 -199.9434 3452.7441 -200.7134 c3456.834 -201.6992 3461 -198.7744 3461 -194.4458 c3461 -194.1367 3461 -194 Y3461 -188.9087 3456.8398 -186.6997 3453.2266 -187.3691 C3446.4668 -185.3613 3440.3916 -182.7085 3433.1406 -185.9131 c3425.6982 -189.2021 3419.6055 -193.855 3415.5371 -200.9771 c3411.1445 -208.6665 3405.7051 -215.624 3403.876 -224.4917 c3401.7871 -234.6216 3404.4795 -242.7324 3408.2949 -252.0981 c3411.9355 -261.0371 3416.832 -268.8838 3422.4443 -276.7021 c3425.083 -280.3779 3427.7148 -284.0483 3430.1582 -287.8584 C3422.9619 -280.229 3415.2266 -273.0884 3405.6641 -268.7188 c3399.2207 -265.7749 3393.1885 -262.3511 3386.9063 -259.1016 c3380.4746 -255.7744 3373.6123 -254.5542 3366.4678 -253.896 c3354.3359 -252.7793 3337.8936 -259.8096 3336.6357 -273.2881 c3335.8564 -281.6367 3348.8633 -281.5615 3349.6357 -273.2881 c3349.9561 -269.8574 3357.5859 -268.0342 3360.0391 -267.2529 c3365.5117 -265.5093 3373.8008 -267.397 3378.8994 -269.6313 c3384.376 -272.0313 3389.2881 -275.5513 3394.7432 -278.0244 c3401.0908 -280.9019 3406.3496 -283.6367 3411.6514 -288.23 c3422.5293 -297.6553 3432.085 -308.7563 3441.498 -319.6245 c3443.9355 -322.438 3446.2891 -325.6997 3448.7598 -328.9253 C3446.2852 -328.2153 3443.8086 -327.5122 3441.3301 -326.833 c3434.0693 -324.8438 3426.6709 -323.3008 3419.1953 -322.3916 c3411.1816 -321.4165 3403.127 -321.5483 3395.0791 -321.0498 c3380.4805 -320.1465 3366.5605 -321.061 3352.7207 -326.0542 c3339.7461 -330.7349 3328.873 -341.96 3320.0898 -352.3022 c3311.8066 -362.0547 3306.1865 -375.5977 3308.3145 -388.5488 c3310.8027 -403.6963 3327.8525 -408.1396 3340.666 -409.9702 c3348.1045 -411.0332 3355.7539 -412.8071 3363.2871 -412.4331 c3370.8125 -412.0591 3377.9482 -409.3936 3384.8076 -406.4897 c3398.9238 -400.5146 3412.6045 -393.833 3425.2939 -385.1733 c3426.4482 -384.3857 3427.5791 -383.5767 3428.6982 -382.7563 Cf0 D3560.6953 -319.7397 m3572.0127 -319.9561 3581.9521 -323.1143 3592.7754 -325.9336 c3596.75 -326.9688 3601.4424 -326.7319 3603.1221 -331.0928 c3604.7988 -335.4448 3605.5811 -340.3086 3605.8457 -344.9424 c3606.0713 -348.8872 3601.3867 -349.7007 3598.3418 -350.5 c3592.5029 -352.0327 3586.5977 -352.8379 3580.5723 -353.0313 c3574.5449 -353.2251 3568.5596 -354.2983 3562.5332 -354.6714 c3556.4561 -355.0474 3550.5635 -354.0654 3544.5605 -353.2827 c3538.6387 -352.5107 3532.7256 -351.668 3526.793 -350.981 c3520.709 -350.2764 3514.8125 -349.9663 3509.041 -347.7178 c3505.335 -346.2734 3501.7441 -344.6035 3498.1074 -343.0142 C3501.124 -341.7813 3503.9658 -340.1475 3507.1738 -338.9199 c3514 -336.3076 3520.2598 -333.0098 3526.6309 -329.4487 c3531.5527 -326.6982 3536.7646 -324.6636 3541.5518 -321.7271 C3541.9395 -321.6143 3542.3223 -321.4858 3542.7119 -321.3774 c3548.7227 -319.7061 3554.5098 -319.6216 3560.6953 -319.7397 cf3485.417 -255.0508 m3487.3369 -248.7168 3489.5273 -242.48 3491.709 -236.2339 c3494.1641 -229.208 3497.8506 -223.5845 3502.5293 -217.8252 c3506.9404 -212.3936 3511.2305 -207.084 3516.0508 -202.0024 c3518.4844 -199.4365 3520.9863 -196.9487 3523.6113 -194.5781 c3526.0586 -192.3682 3530.1484 -190.9346 3533.0479 -189.3535 c3535.959 -187.7661 3538.9521 -186.2397 3542.0361 -185.0181 c3545.0898 -183.8081 3548.665 -184.0732 3551.8945 -183.5425 c3555.1602 -183.0049 3558.3145 -181.5293 3561.5146 -180.6963 c3564.8369 -179.832 3566.9102 -182.2808 3569.2461 -184.3179 c3574.1855 -188.626 3578.9844 -191.8428 3581.2891 -198.2939 c3583.9248 -205.6753 3586.5918 -212.7344 3588.3633 -220.4253 c3589.8301 -226.7954 3590.8047 -233.0425 3589.8154 -239.5884 c3588.7393 -246.7109 3585.002 -253.0776 3581.0732 -258.9751 c3577.0684 -264.9858 3572.1787 -270.4648 3567.6465 -276.0776 c3562.4355 -282.5308 3557.2852 -289.2559 3551.415 -295.126 c3546.8066 -299.7339 3542.3574 -304.6348 3537.4238 -308.8945 c3537.0811 -309.1904 3536.7129 -309.4536 3536.3525 -309.7275 C3531.8301 -311.085 3527.3965 -312.7383 3522.9766 -314.4707 c3516.4521 -317.0278 3509.7598 -319.2231 3503.3799 -322.1265 c3498.0684 -324.5439 3493.2148 -327.8779 3488.6738 -331.5483 C3488.1064 -331.7783 3487.5703 -332.0742 3487.0967 -332.4517 C3487.0605 -332.2983 3487.0234 -332.1445 3486.9863 -331.9922 c3486.6035 -330.3989 3486.3652 -328.7402 3485.7539 -327.2134 c3484.3594 -323.7275 3484.1885 -319.0532 3483.707 -315.3462 c3483.1309 -310.9131 3482.8008 -306.4507 3482.5518 -301.9893 c3481.7031 -286.7783 3480.9668 -269.7344 3485.417 -255.0508 cf3464.6396 -349.9707 m3465.3281 -350.3101 3466.1084 -350.4951 3466.9688 -350.481 C3467.4824 -351.5088 3468.3672 -352.4282 3469.7129 -353.1055 c3472.0293 -354.271 3472.9209 -357.1118 3473.8535 -359.4014 c3475.4824 -363.396 3477.7969 -366.8135 3479.8516 -370.5923 c3484.8984 -379.8735 3484.6875 -391.9395 3485.9727 -402.2188 c3487.2666 -412.5669 3485.3994 -422.5293 3482.3906 -432.354 c3481.4307 -435.4897 3480.2988 -440.9849 3476.8525 -442.3813 c3473.3047 -443.8188 3469.0566 -443.0801 3465.4453 -442.3281 c3458.3311 -440.8477 3454.8535 -433.728 3451.8721 -427.7534 c3447.5713 -419.1338 3443.5078 -409.999 3441.1055 -400.6611 c3438.3467 -389.939 3442.2275 -380.7969 3447.998 -371.9453 c3452.9941 -364.2813 3458.7559 -357.0254 3464.6396 -349.9707 Cf3371.6543 -397.645 m3364.2363 -400.0659 3357.5439 -399.3521 3349.9648 -398.2695 c3342.541 -397.209 3335.1973 -396.1963 3328.0518 -393.8223 c3321.4639 -391.6328 3320.2852 -384.646 3321.2529 -378.7993 c3323.4492 -365.5332 3333.4238 -356.8628 3342.6309 -348.0308 c3347.6953 -343.1724 3352.4639 -339.8379 3359.1104 -337.5571 c3365.3975 -335.3994 3371.7998 -334.1729 3378.4316 -333.7344 c3385.8359 -333.2451 3393.2539 -333.9883 3400.6445 -334.3687 c3408.1865 -334.7573 3415.5527 -334.752 3423.0332 -336.0127 c3430.5713 -337.2832 3437.9746 -339.3145 3445.2939 -341.4912 c3447.5713 -342.1685 3449.835 -342.8701 3452.1123 -343.5317 C3444.6094 -351.3486 3437.2637 -359.3735 3428.9912 -366.332 c3417.7246 -375.8091 3404.5938 -383.1475 3391.376 -389.499 c3384.9932 -392.5664 3378.3896 -395.4473 3371.6543 -397.645 cf*U*u1 D2851.7119 -236.5195 m2845.248 -228.8574 2836.6953 -226.1606 2827.627 -222.876 c2817.709 -219.2842 2807.9238 -226.1729 2800.6348 -232.1758 c2783.6113 -246.1958 2778.7305 -267.9966 2774.2109 -288.459 c2771.9863 -298.5337 2769.792 -308.6328 2768.1123 -318.8154 c2767.6807 -321.4316 2767.1182 -324.6606 2766.8574 -327.9829 C2766.6367 -327.9775 2766.416 -327.9717 2766.1973 -327.9668 C2761.9629 -326.5322 2758.2236 -323.8511 2754.4238 -321.5503 c2749.2324 -318.4063 2744.5215 -314.6641 2740.1816 -310.4316 c2734.1777 -304.5786 2724.9785 -313.7637 2730.9883 -319.624 c2732.0117 -320.6216 2733.0625 -321.5854 2734.1289 -322.5313 C2731.3994 -321.9878 2728.6211 -321.5786 2725.7188 -321.4043 c2720.7285 -321.104 2715.7012 -321.3286 2710.709 -321.4404 c2705.5195 -321.5562 2700.4678 -321.4766 2695.4121 -322.833 c2687.2402 -325.0264 2677.9434 -329.4009 2675.5791 -338.1006 c2673.1973 -346.8638 2677.8203 -356.7266 2682.2295 -364.0259 c2687.3652 -372.5293 2693.7754 -379.8462 2702.877 -384.123 c2711.2529 -388.0581 2721.4482 -390.1719 2730.6963 -390.166 c2740.2783 -390.1602 2751.1836 -389.9868 2759.2559 -384.1846 c2766.5898 -378.9131 2770.8721 -370.5957 2772.7627 -361.9248 c2773.8027 -357.1523 2773.6221 -352.3374 2773.6221 -347.4883 C2773.0234 -348.1201 2773.0791 -347.835 2773.7891 -346.6323 C2773.9707 -346.2495 2774.1318 -345.8354 2774.2871 -345.4204 C2777.1465 -345.8589 2779.9678 -344.1816 2781.3135 -341.8086 C2782.1172 -341.8442 2782.9209 -341.8789 2783.7256 -341.9082 c2792.085 -342.2104 2800.459 -340.5811 2808.5928 -338.8413 c2815.4053 -337.3843 2821.6299 -336.189 2828.0664 -333.3799 c2834.1836 -330.7095 2840.7227 -327.4263 2846.168 -323.5718 c2856.9033 -315.9717 2865.1895 -304.8008 2868.7568 -292.105 c2871.626 -281.897 2869.0918 -272.2793 2865.4219 -262.6611 c2861.9063 -253.4507 2858.1201 -244.1157 2851.7119 -236.5195 cf0 D2760.8545 -343.8008 m2759.9824 -346.9712 2760.6221 -351.0488 2760.6221 -354.3218 c2760.6221 -360.2241 2758.375 -366.5723 2754.5215 -371.0527 c2750.1836 -376.0947 2743.5625 -376.6841 2737.3135 -377.0264 c2729.9678 -377.4287 2722.8877 -376.7261 2715.748 -374.9575 c2702.5762 -371.6948 2693.1748 -360.9766 2689.0371 -348.2622 c2688.1777 -345.6226 2687.7354 -342.9492 2688.4697 -340.248 c2688.8672 -338.7842 2693.748 -337.4976 2694.9326 -336.9971 c2701.9561 -334.0303 2708.8672 -334.4653 2716.4053 -334.3174 c2723.9863 -334.1685 2731.0586 -334.5591 2738.3506 -336.731 c2745.8623 -338.9683 2752.8525 -341.0068 2760.7451 -341.0068 c2761.1055 -341.0068 2761.4658 -341.0146 2761.8262 -341.0171 C2761.5029 -341.9087 2761.126 -342.8135 2760.8545 -343.8008 cf2857.0273 -284.3521 m2856.6279 -290.9609 2853.1094 -297.2349 2849.3926 -302.5151 c2842.1152 -312.8545 2828.7715 -319.9053 2817.0186 -323.833 c2810.2656 -326.0898 2802.5254 -326.9937 2795.5039 -328.1631 c2790.3916 -329.0146 2785.2744 -328.9785 2780.1523 -328.7183 C2780.2949 -325.9844 2780.4766 -323.3096 2780.9268 -320.582 c2782.1348 -313.2549 2783.7051 -305.9756 2785.2627 -298.7163 c2788.3359 -284.3965 2790.6729 -269.2144 2797.6885 -256.188 c2800.7598 -250.4873 2804.9775 -245.6182 2809.8271 -241.3682 c2812.1924 -239.2954 2814.9336 -237.687 2817.709 -236.2329 c2821.3301 -234.334 2823.3457 -235.2729 2827.0898 -236.3726 c2833.3584 -238.2139 2838.0527 -240.9775 2842.5195 -245.7119 c2847.2246 -250.6982 2849.6504 -258.1909 2852.2109 -264.4175 c2854.8008 -270.7168 2857.4443 -277.4551 2857.0273 -284.3521 cf*U*u1 D2510.7988 -66.3257 m2500.4141 -57.9648 2488.3818 -56.3901 2475.6836 -54.2939 c2460.4766 -51.7827 2444.9551 -54.4277 2429.8584 -56.4648 c2414.9063 -58.4824 2400.1162 -62.0532 2385.6064 -66.167 c2370.75 -70.3789 2357.5576 -77.0874 2343.5547 -83.3828 c2329.1563 -89.8555 2314.1934 -94.7417 2300.2559 -102.2139 c2293.5586 -105.8042 2286.9746 -109.6025 2280.4131 -113.4336 c2273.498 -117.4717 2266.0898 -121.2197 2259.6064 -125.9175 c2258.5684 -126.6694 2257.5303 -127.4326 2256.4922 -128.1934 C2260.5928 -119.6846 2263.4785 -110.8706 2267.2158 -102.188 c2271.0264 -93.3379 2274.1123 -85.0483 2276.2188 -75.5913 c2278.1953 -66.7212 2278.9941 -57.1953 2277.9209 -48.1631 c2277.4268 -44.0059 2276.0605 -40.4434 2274.7529 -36.5122 c2273.5605 -32.9292 2273.5811 -28.5791 2273.0596 -24.8442 c2271.8066 -15.8721 2266.5898 -7.66309 2262.415 0.289551 C2250.0039 0.289551 L2249.4756 -1.22852 2249.5059 -2.98486 2250.4258 -4.79443 c2254.2939 -12.4092 2259.0479 -19.7588 2260.5234 -28.3003 c2261.1914 -32.1685 2261.3193 -36.1377 2262.2168 -39.9683 c2263.1465 -43.9297 2264.8975 -47.2441 2265.25 -51.4033 c2265.9844 -60.0654 2264.4941 -68.7422 2262.5479 -77.144 c2260.3555 -86.6079 2256.0264 -94.8296 2252.6748 -103.8579 c2246.5908 -120.2476 2238.6719 -135.8198 2228.6445 -150.1709 C2227.0742 -151.5288 2225.5195 -152.8955 2223.9873 -154.2769 c2218.2646 -159.437 2212.9775 -165.2397 2207.6836 -170.8345 c2202.3467 -176.4751 2196.8369 -182.1431 2192.8486 -188.8486 c2191.7568 -190.6846 2190.8984 -192.6772 2190.1289 -194.6831 C2183.4707 -192.5581 2176.582 -191.0278 2169.8496 -189.5371 c2162.8281 -187.9819 2155.5488 -188.1431 2148.4434 -188.8735 c2141.3516 -189.6025 2135.0947 -189.1992 2128.4063 -192.3188 c2126.2188 -193.3394 2124.041 -194.3652 2121.9072 -195.4629 C2118.7021 -192.481 2115.6934 -189.3105 2112.7549 -185.9258 c2105.8711 -177.9951 2098.5605 -170.6372 2092.1387 -162.2959 c2086.043 -154.377 2079.3926 -146.5229 2075.2109 -137.3667 c2070.7402 -127.5752 2065.6953 -118.0713 2061.3926 -108.1797 c2052.834 -88.5059 2044.4922 -68.7661 2038.9561 -48.0186 c2036.3604 -38.292 2033.127 -28.938 2032.1787 -18.8472 c2031.6416 -13.1299 2031.6055 -7.3667 2031.5801 -1.62939 c2031.5781 -1.1543 2031.5215 -0.482422 2031.4463 0.289551 C2018.6279 0.289551 L2018.6973 -3.53662 2018.6162 -7.37354 2018.7314 -11.1948 c2019.084 -22.917 2021.4873 -33.5234 2024.6328 -44.7231 c2027.6553 -55.4858 2030.415 -66.0454 2034.4043 -76.5225 c2038.624 -87.605 2043.2051 -98.543 2047.8809 -109.439 c2052.3936 -119.9575 2057.0068 -130.4316 2062.2373 -140.6172 c2067.4561 -150.7793 2073.7568 -159.6777 2080.7715 -168.6729 c2084.5566 -173.5273 2088.4346 -178.3862 2092.4424 -183.1504 C2092.1016 -182.9443 2091.7656 -182.73 2091.4238 -182.5259 c2085.292 -178.8643 2078.8896 -175.7241 2072.8789 -171.8623 c2066.1465 -167.5366 2060.0391 -162.5186 2052.75 -159.1309 c2040.0977 -153.251 2029.2666 -144.8164 2017.2256 -137.8174 c2010.7451 -134.0508 2004.6719 -129.5972 1998.3174 -125.624 c1991.4648 -121.3394 1984.0723 -118.5859 1976.5996 -115.5962 c1973.8125 -114.4814 1971.2236 -112.2031 1968.6738 -110.6265 c1965.9268 -108.9268 1962.9082 -107.9238 1960.0811 -106.4087 c1953.4541 -102.8584 1946.1172 -100.5815 1938.8584 -98.7524 c1924.2041 -95.0605 1909.5259 -91.604 1894.623 -89.1069 c1868.3306 -84.7021 1838.4995 -77.4907 1814.6201 -93.8237 c1804.5132 -100.7368 1798.4507 -110.3232 1796.6709 -122.3608 c1795.7275 -128.7412 1795.3311 -135.1733 1797.1221 -141.4478 c1799.0278 -148.126 1802.5454 -153.3672 1806.0547 -159.2876 c1813.2549 -171.4341 1822.6738 -181.6558 1834.0249 -189.9937 c1846.437 -199.1113 1857.8286 -209.5527 1870.394 -218.481 c1876.3623 -222.7217 1882.6685 -226.4819 1888.8745 -230.3569 c1895.5083 -234.4995 1901.3784 -240.0356 1908.3682 -243.5181 c1909.5688 -244.1162 1910.7813 -244.6709 1911.9971 -245.2114 C1911.3506 -245.292 1910.7051 -245.3726 1910.0586 -245.4541 c1902.1118 -246.4546 1893.8931 -245.9082 1885.8789 -246.8848 c1870.3638 -248.7749 1855.1201 -252.8291 1839.6055 -254.561 c1832.4829 -255.3564 1825.2363 -257.3589 1818.2734 -259.1157 c1811.1064 -260.9233 1804.0703 -262.9937 1797.2568 -265.8438 c1785.3237 -270.835 1773.5801 -276.6787 1767.6235 -288.9111 c1764.5562 -295.2104 1764.4248 -301.1357 1764.4248 -307.9985 c1764.4248 -314.7637 1768.4038 -321.4751 1771.1206 -327.5039 c1776.4663 -339.3657 1786.7598 -347.144 1797.8569 -353.1553 c1811.3979 -360.4897 1825.6572 -362.041 1840.5029 -364.8911 c1856.1743 -367.8999 1872.1138 -367.1602 1888.0234 -366.665 c1898.6812 -366.3335 1909.3438 -366.4937 1919.9946 -365.918 c1931.4648 -365.2979 1942.9248 -363.6997 1954.2949 -362.1118 c1965.2227 -360.5854 1976.0957 -358.689 1986.918 -356.543 c1992.5703 -355.4229 1998.1055 -353.248 2003.6143 -351.5864 c2009.1006 -349.9321 2014.7354 -349.1973 2020.3105 -347.9204 c2029.1729 -345.8901 2037.5371 -341.9058 2046.2217 -339.1304 C2040.3721 -343.7637 2034.7109 -348.6069 2029.2422 -353.5684 c2017.8115 -363.9399 2006.7959 -374.6895 1995.2031 -384.9023 c1983.4854 -395.2261 1971.7344 -405.5947 1962.0254 -417.8599 c1952.748 -429.5801 1944.5859 -442.3623 1937.5811 -455.5571 c1930.6816 -468.5542 1923.958 -482.4487 1919.2158 -496.3877 c1910.1372 -523.0703 1904.9976 -553.0186 1917.1792 -579.4907 c1922.8584 -591.833 1936.4844 -598.8521 1948.5293 -603.4111 c1954.6016 -605.709 1960.9033 -606.8843 1967.248 -608.1172 c1974.4199 -609.5112 1981.0195 -610.5586 1988.21 -608.8018 c1994.9219 -607.1616 2001.2598 -603.6895 2007.3809 -600.5889 c2013.7715 -597.3521 2020.0869 -595.269 2025.7109 -590.647 c2037.2646 -581.1504 2048.2813 -570.7192 2057.0244 -558.522 c2060.9395 -553.0601 2064.5215 -547.4595 2069.0332 -542.4521 c2074.2227 -536.6924 2079.9053 -531.4805 2084.8965 -525.5254 c2094.8438 -513.6572 2104.2744 -501.3037 2112.3135 -488.0522 c2119.8633 -475.6069 2124.6836 -461.748 2130.7227 -448.5381 c2133.7539 -441.9072 2135.5762 -435.1597 2137.6934 -428.2227 c2139.9336 -420.8887 2142.6504 -413.8936 2144.1543 -406.3457 c2145.9004 -397.5708 2147.4219 -388.8525 2148.6611 -380.0791 C2148.875 -389.3672 2149.3223 -398.6504 2150.3369 -407.8721 c2152.0342 -423.3081 2156.0479 -438.2627 2158.4053 -453.5708 c2159.5039 -460.7085 2160.9492 -467.5542 2163.2275 -474.4219 c2164.2617 -477.5396 2165.9082 -480.4697 2166.7744 -483.6313 c2167.8721 -487.6382 2168.7002 -491.7002 2169.9355 -495.6709 c2173.9375 -508.5293 2182.9629 -520.8979 2191.4336 -531.1787 c2195.6465 -536.2905 2200.6934 -540.499 2205.2432 -545.27 c2210.2109 -550.4785 2215.1895 -555.2759 2221.709 -558.4946 c2234.0391 -564.582 2247.4551 -564.4629 2259.8135 -558.7236 c2272.3164 -552.917 2279.4092 -541.9521 2283.6523 -529.3091 c2285.2168 -524.6479 2287.3936 -520.2656 2288.752 -515.5205 c2290.3682 -509.876 2290.6748 -503.9351 2291.2344 -498.1216 c2291.8135 -492.0903 2292.3809 -486.0576 2292.9736 -480.0278 c2293.5811 -473.8521 2292.54 -467.4814 2291.666 -461.3721 c2290.0049 -449.7583 2287.6191 -437.7954 2284.6689 -426.4443 c2283.2646 -421.0391 2281.1406 -415.9673 2280.4629 -410.3828 c2279.7285 -404.3423 2279.7588 -398.2671 2278.0371 -392.3955 c2274.8711 -381.6006 2269.5938 -371.7207 2267.0332 -360.6992 c2265.6367 -354.6831 2264.1182 -348.7036 2262.2617 -342.8115 c2260.4922 -337.1973 2257.7002 -331.9941 2255.8691 -326.4302 c2254.7764 -323.1104 2253.6719 -319.7852 2252.4736 -316.4966 C2256.5928 -319.665 2260.4971 -323.2563 2264.6172 -326.2407 c2270.5156 -330.5122 2276.7344 -334.3804 2282.9209 -338.209 c2288.873 -341.8926 2296.1533 -343.2773 2302.4189 -346.3931 c2316.2148 -353.2539 2330.2441 -359.7275 2344.873 -364.6177 c2373.2803 -374.1138 2402.8428 -376.4136 2432.5928 -374.9351 c2456.2617 -373.7593 2489.9756 -364.5459 2488.9814 -335.1079 c2488.6221 -324.4536 2481.877 -314.2622 2476.8438 -305.2544 c2474.2227 -300.562 2469.6426 -297.2407 2465.2207 -294.4038 c2459.9736 -291.0371 2455.6055 -286.5444 2450.7832 -282.6055 c2432.9063 -268.0039 2411.4453 -260.1953 2390.6748 -250.71 c2380.4492 -246.04 2368.8027 -243.7642 2357.9414 -241.0488 c2345.9023 -238.0381 2333.8672 -236.7778 2321.5654 -235.4194 C2329.6895 -233.2939 2337.7754 -231.0303 2345.7939 -228.52 c2353.1211 -226.2261 2360.3066 -223.7578 2367.3857 -220.7769 c2375.0391 -217.5542 2383.1934 -215.6685 2390.7949 -212.3345 c2404.624 -206.269 2417.3818 -197.5308 2430.3711 -189.8945 c2436.6133 -186.2241 2442.3555 -181.7236 2448.2227 -177.4995 c2454.6406 -172.8799 2461.0625 -168.6235 2467.0156 -163.3809 c2477.9541 -153.7461 2488.6484 -143.9414 2498.2363 -132.9492 c2512.6445 -116.4302 2533.8682 -84.8975 2510.7988 -66.3257 cf0 D1911.8008 -230.6519 m1908.6182 -228.8955 1906.1528 -226.0732 1903.1362 -224.0801 c1899.5684 -221.7231 1895.9497 -219.4482 1892.3193 -217.1895 c1879.0479 -208.9312 1866.8125 -199.7124 1854.6953 -189.8501 c1843.4927 -180.7324 1831.6055 -172.8506 1822.8662 -161.1328 c1819.0239 -155.981 1815.7412 -150.3545 1812.4014 -144.8687 c1808.7793 -138.9189 1808.502 -132.3862 1809.2373 -125.6323 c1812.3008 -97.5044 1846.3252 -94.3975 1868.5361 -97.4771 c1883.2012 -99.5107 1898.0977 -102.3462 1912.5044 -105.7544 c1926.6719 -109.1064 1942.0713 -111.5 1955.0117 -118.4336 c1957.8066 -119.9312 1960.708 -120.9824 1963.4414 -122.6729 c1966.0664 -124.2974 1968.5244 -126.2837 1971.4053 -127.436 c1979.0381 -130.4902 1986.3281 -133.4551 1993.3213 -137.8281 c1999.6152 -141.7632 2005.6338 -146.1187 2012.0566 -149.8516 c2018.3438 -153.5063 2025.3418 -157.4429 2030.9941 -162.0137 c2035.9775 -166.0439 2041.8818 -168.3545 2047.6357 -171.0288 c2054.9336 -174.4204 2061.1914 -179.7935 2067.9414 -184.1304 c2073.8496 -187.9268 2080.2256 -190.9824 2086.2598 -194.5859 c2089.0459 -196.25 2091.5967 -198.2935 2094.377 -199.9922 c2097.124 -201.6709 2100.2793 -202.9766 2102.7451 -205.0537 c2104.0215 -206.1289 2105.2988 -206.9268 2105.8076 -208.3804 C2103.6914 -211.1782 2101.832 -214.1919 2100.1611 -217.1367 c2096.877 -222.9219 2094.2393 -228.7627 2092.873 -235.3096 c2091.3477 -242.6172 2091.6973 -250.3589 2092.1318 -257.7637 c2092.2871 -260.417 2092.6221 -262.9902 2093.0957 -265.5098 C2090.6348 -265.8535 2088.1699 -266.1787 2085.6934 -266.3872 c2077.7627 -267.0552 2069.7002 -266.875 2061.7539 -266.6582 c2054.1475 -266.4507 2046.5527 -265.979 2038.9434 -265.8696 c2031.043 -265.7563 2023.1416 -266.0239 2015.3311 -264.6001 c2000.3193 -261.8628 1985.2783 -259.0737 1970.498 -255.2026 c1964.0537 -253.5146 1957.3535 -252.6582 1951.0029 -250.6665 c1947.7324 -249.6411 1944.6211 -247.2524 1941.6875 -245.5171 c1938.0615 -243.3721 1934.4346 -241.2363 1930.7314 -239.2256 c1924.5918 -235.8921 1917.9219 -234.0298 1911.8008 -230.6519 cf2034.9199 -328.9985 m2028.2451 -331.3765 2021.9443 -334.2188 2015 -335.8096 c2006.8301 -337.6812 1998.9189 -339.4336 1990.8828 -341.9121 c1975.4863 -346.6611 1958.9219 -348.6099 1942.9707 -350.6177 c1927.165 -352.6074 1911.4946 -353.3081 1895.5791 -353.5142 c1887.8555 -353.6143 1880.1509 -353.9785 1872.4263 -353.9785 c1864.126 -353.9785 1855.6836 -354.582 1847.5103 -353.0425 c1832.7554 -350.2637 1817.9053 -349.0635 1804.4185 -341.9297 c1798.7324 -338.9229 1793.7754 -335.8379 1789.2417 -331.2168 c1784.8022 -326.6919 1782.3882 -320.9873 1779.7983 -315.313 c1764.9907 -282.8677 1812.771 -273.6279 1834.1245 -268.8462 c1849.8936 -265.3154 1866.0996 -263.2695 1882.0156 -260.478 c1890.0527 -259.0684 1898.2695 -258.6465 1906.415 -258.4829 c1914.7686 -258.3149 1923.0059 -256.6851 1931.3926 -256.5991 c1932.3525 -256.5894 1933.1973 -256.4033 1933.9365 -256.0938 C1938.332 -258.7534 1942.748 -261.3862 1947.5469 -263.2021 c1953.6748 -265.5215 1960.6875 -266.1147 1967.042 -267.7383 c1974.6934 -269.6929 1982.3799 -271.6704 1990.1494 -273.1001 c2005.1992 -275.8701 2019.874 -278.8208 2035.2314 -278.8599 c2047.3105 -278.8901 2059.3623 -279.791 2071.4414 -279.7876 c2077.3906 -279.7856 2083.3193 -279.6626 2089.2402 -279.0566 c2091.7197 -278.8027 2094.1895 -278.4355 2096.6621 -278.0781 C2098.0156 -281.7329 2099.5879 -285.3438 2101.2842 -288.9873 c2103.8389 -294.4756 2107.0527 -299.9883 2111.1016 -304.6807 C2111.0059 -304.7178 2110.916 -304.7549 2110.7949 -304.7954 c2109.7539 -305.1455 2109.0918 -305.2583 2107.9697 -305.709 c2107.7627 -305.792 2107.5479 -305.8569 2107.3398 -305.936 C2106.1592 -305.4463 2104.7354 -305.3828 2103.1172 -305.9775 c2099.6055 -307.269 2096.1426 -308.6875 2092.7266 -310.2148 C2087.5342 -311.8594 2082.415 -313.8252 2077.3496 -315.7681 c2063.4648 -321.0928 2048.8984 -324.019 2034.9199 -328.9985 cf2137.6934 -362.9829 m2136.3105 -378.7212 2133.8184 -394.3911 2130.1152 -409.7661 c2128.4473 -416.689 2125.4336 -423.272 2123.6221 -430.1724 c2121.6045 -437.8569 2118.1465 -444.8101 2114.8271 -451.9941 c2111.9355 -458.2524 2109.7393 -464.8081 2106.8486 -471.0732 c2103.6191 -478.0723 2099.3135 -484.583 2095.0352 -490.9746 c2086.5391 -503.6675 2076.8906 -516.0093 2066.1074 -526.8384 c2061.2236 -531.7432 2056.6465 -536.7241 2052.5361 -542.3037 c2048.1494 -548.2588 2044.2959 -554.4482 2039.3066 -559.9424 c2029.583 -570.6504 2018.9766 -581.6455 2005.4727 -587.2769 c1999.0303 -589.9629 1993.0664 -593.584 1986.4131 -595.7852 c1979.5967 -598.041 1972.9141 -595.9727 1966.0859 -594.6978 c1953.6895 -592.3833 1938.6631 -587.5371 1930.7979 -576.957 c1926.8535 -571.6514 1925.4609 -565.2358 1924.3066 -558.8892 c1922.9482 -551.416 1922.4678 -544.752 1923.3125 -537.1055 c1926.5645 -507.6777 1938.498 -479.8198 1953.1357 -454.2744 c1960.5928 -441.2607 1969.2422 -427.3501 1979.8945 -416.7085 c1990.7686 -405.8462 2002.5127 -395.7432 2014.0801 -385.6201 c2025.6494 -375.4956 2036.2627 -364.4063 2048.0527 -354.5269 c2059.4023 -345.0166 2071.4717 -336.3687 2084.3164 -328.9883 c2087.7832 -326.9961 2091.3223 -325.1357 2094.9316 -323.4219 C2099.2734 -322.0181 2103.6387 -320.6787 2108.0527 -319.3828 c2112.5889 -318.0508 2118.1055 -316.6055 2121.0967 -313.2803 C2124.582 -315.8745 2127.5684 -319.1787 2131.2461 -321.5684 c2134.2051 -323.4902 2137.958 -324.2881 2141.6621 -324.981 C2140.877 -337.6714 2138.8037 -350.3403 2137.6934 -362.9829 cf2158 -309 m2154.8418 -309 2152.9521 -311.0332 2152.2881 -313.4854 C2150.7002 -312.4819 2148.6367 -312.21 2146.7676 -312.6792 C2144.998 -312.2861 2143.2285 -311.895 2141.4736 -311.4326 c2137.2246 -310.313 2134.5977 -307.9976 2131.377 -305.1489 c2126.4775 -300.8145 2121.6348 -297.5947 2117.8818 -292.0796 c2114.4893 -287.0938 2112.249 -281.5908 2109.7793 -276.1533 C2114.8867 -273.2183 2113.8838 -263.729 2106.7012 -264.0054 c2106.4082 -264.0166 2106.1172 -264.042 2105.8242 -264.0571 C2105.2051 -260.2119 2105.0117 -256.2725 2104.9053 -252.4912 c2104.6934 -244.9497 2105.0537 -238.0288 2107.6553 -230.8848 c2109.7002 -225.27 2113.4668 -219.4536 2117.2832 -214.8843 c2118.3818 -213.5688 2119.5713 -212.4399 2120.8291 -211.438 C2121.5156 -211.9771 2122.2012 -212.519 2122.8984 -213.0444 c2128.3682 -217.1641 2133.6777 -210.4004 2131.8574 -205.0669 C2132.3955 -204.7954 2132.9355 -204.5215 2133.4766 -204.2393 c2139.1836 -201.2612 2145.8262 -202.0625 2152.0195 -201.5381 c2160.1953 -200.8457 2167.2246 -202.4038 2175.0723 -204.3594 c2181.7441 -206.022 2188.6895 -207.0103 2194.7852 -210.3774 c2197.5371 -211.8979 2200.3105 -213.4272 2203.0166 -215.0151 c2206.0801 -216.8125 2207.6836 -221.127 2209.2803 -224.1362 c2212.4961 -230.2002 2217.0693 -236.4561 2217.8711 -243.3818 c2218.7119 -250.6401 2218.1729 -258.4072 2216.9941 -265.5908 c2216.8838 -266.2627 2216.7441 -266.9346 2216.5996 -267.6064 C2216.3271 -267.0786 2216.0957 -266.542 2215.9277 -265.9946 c2213.4834 -258.002 2200.9336 -261.4121 2203.3926 -269.4507 c2204.8545 -274.2334 2207.8945 -277.8789 2211.1084 -281.4985 C2207.0049 -288.5176 2201.1963 -294.627 2194.4473 -298.4297 c2189.25 -301.3584 2183.5664 -303.396 2178.1699 -305.915 c2175.0742 -307.3599 2172.1445 -308.6025 2168.8115 -309.3691 c2167.0117 -309.7832 2164.6465 -309.6909 2162.6621 -309.5786 C2161.9033 -309.2119 2161.0176 -309 2160 -309 C2158 -309 Lf2256.3008 -371.2295 m2258.4336 -378.5039 2261.8135 -385.3726 2264.3906 -392.4912 c2266.9189 -399.4771 2266.8516 -406.603 2267.9082 -413.875 c2268.9521 -421.0469 2271.7891 -427.7319 2273.2939 -434.811 c2276.5039 -449.9121 2281.3281 -466.2607 2279.7998 -481.7964 c2279.0879 -489.0342 2278.418 -496.2759 2277.7119 -503.5146 c2276.9668 -511.166 2273.7754 -517.2217 2271.584 -524.3921 c2267.6143 -537.3765 2259.6016 -546.8462 2245.9063 -549.8711 c2240.1465 -551.1436 2233.5488 -549.6392 2228.2705 -547.2695 c2221.7363 -544.3364 2217.3027 -538.9736 2212.4004 -533.9731 c2200.4941 -521.8271 2188.2461 -508.6602 2182.4707 -492.2148 c2181.0996 -488.3105 2180.334 -484.1787 2179.3105 -480.1753 c2178.2246 -475.9307 2176.0332 -471.9321 2174.7188 -467.7192 c2171.8203 -458.4312 2171.3086 -448.8335 2169.1094 -439.4155 c2164.625 -420.2109 2162.3086 -401.1519 2161.7412 -381.4512 c2161.4521 -371.4141 2161.4395 -361.3701 2161.4336 -351.3301 c2161.4316 -346.6387 2161.4336 -341.9468 2161.4336 -337.2554 c2161.4336 -334.2046 2161.3242 -330.5381 2163.127 -327.9023 C2168.4004 -327.2871 2173.4111 -325.2676 2178.082 -321.4795 c2178.8887 -320.8252 2179.4521 -320.1113 2179.8105 -319.3735 C2186.0518 -316.8604 2192.1621 -314.019 2198.2422 -311.1304 c2206.5264 -307.1938 2213.8057 -300.4951 2219.3271 -292.7524 C2221.4785 -294.2378 2223.7764 -295.5591 2225.9531 -297.3315 c2230.8633 -301.3276 2234.123 -306.7822 2236.8594 -312.396 c2239.375 -317.5566 2241.1035 -323.105 2242.8936 -328.5469 c2245.2637 -335.7485 2248.6191 -342.5059 2250.8135 -349.8003 c2252.9395 -356.8691 2254.2246 -364.1533 2256.3008 -371.2295 cf2507.5811 -89.7915 m2507.0117 -99.7998 2500.7568 -109.2559 2494.7705 -116.896 c2487.8018 -125.7896 2480.0498 -133.875 2471.7363 -141.5015 c2467.1055 -145.7505 2462.5244 -150.0146 2457.8232 -154.1885 c2452.7295 -158.71 2447.1973 -162.3398 2441.6621 -166.2744 c2430.6533 -174.0986 2419.4414 -181.0742 2407.8994 -188.0771 c2402.7275 -191.2153 2397.5361 -194.311 2392.209 -197.1812 c2386.042 -200.5044 2379.6621 -202.6655 2373.0371 -204.874 c2366.3379 -207.1069 2359.9434 -210.04 2353.3057 -212.4434 c2346.625 -214.8623 2339.7295 -216.8413 2332.9121 -218.8374 c2319.8359 -222.667 2306.5781 -225.8564 2293.3271 -229.0195 c2286.5957 -230.6265 2279.8711 -232.25 2273.1191 -233.771 c2269.0078 -234.6968 2264.7148 -236.0522 2260.4316 -236.9927 C2256.832 -236.9482 2253.4219 -237.1699 2249.9746 -238.9209 c2244.2324 -241.8374 2246.8945 -251.332 2253.2549 -251.0337 c2256.1055 -250.8999 2258.9336 -250.4448 2261.7471 -249.8521 C2262.5752 -249.9463 2263.3643 -250.0459 2264.0146 -250.0771 c2267.5352 -250.2471 2271.085 -249.8564 2274.5889 -249.5654 c2282.6338 -248.8979 2290.6914 -248.001 2298.7676 -247.7168 c2306.4609 -247.4463 2314.3125 -247.6143 2321.9658 -248.4648 c2330.2734 -249.3882 2338.9492 -249.7002 2347.0654 -251.729 c2361.5371 -255.3472 2376.6738 -258.2573 2390.1602 -264.7939 c2403.3389 -271.1826 2417.1699 -275.897 2429.7949 -283.437 c2436.1475 -287.2314 2441.8555 -291.8555 2447.3877 -296.7446 c2450.0859 -299.1284 2452.7969 -302.0811 2455.8926 -303.9443 c2459.124 -305.8906 2462.1602 -307.7891 2464.7578 -310.5566 c2466.9463 -312.8882 2468.3486 -316.6611 2469.8818 -319.4556 c2471.5176 -322.4355 2473.0205 -325.4741 2474.2246 -328.6548 c2476.5107 -334.6968 2476.8008 -340.7451 2473.3828 -346.3765 c2470.4023 -351.2852 2464.0234 -354.3633 2459.0137 -356.6636 c2453.0605 -359.3984 2446.1816 -360.7915 2439.6943 -361.3989 c2432.4922 -362.0732 2425.2715 -362.2568 2418.041 -362.312 c2414.4766 -362.3394 2410.9111 -362.3345 2407.3467 -362.3164 c2403.2754 -362.2959 2399.1943 -361.4038 2395.1719 -361.3989 c2378.2988 -361.3774 2360.6777 -356.3652 2344.8145 -350.8882 c2327.7617 -345 2312.3418 -335.3276 2295.332 -329.5146 c2278.3809 -323.7212 2266.5098 -308.769 2251.2373 -300.1738 c2243.7559 -295.9634 2237.5049 -290.0142 2231.4434 -284.019 c2229.8564 -282.4492 2228.2793 -280.8706 2226.7197 -279.2739 C2231.416 -267.3267 2232.5195 -252.3848 2230.4668 -239.9385 c2229.2813 -232.7441 2225.3975 -227.0239 2222.1113 -220.6553 c2218.7549 -214.1489 2215.749 -208.021 2209.585 -203.79 c2208.1689 -202.8179 2206.708 -201.9272 2205.2197 -201.0908 C2205.9082 -200.3462 2206.4199 -199.3364 2206.6514 -198.0288 c2207.1621 -195.1494 2212.3672 -191.7407 2214.4883 -189.8989 c2218.3311 -186.563 2221.3535 -183.1987 2224.3984 -179.1172 c2229.2598 -172.5986 2233.7832 -165.8276 2238.3418 -159.0908 C2241.6523 -156.4678 2245.0674 -153.9624 2248.2031 -151.1343 c2254.2207 -145.708 2261.1045 -140.812 2267.666 -136.0571 c2273.6211 -131.7417 2280.627 -128.3789 2286.9746 -124.6587 c2294.0742 -120.498 2301.2305 -116.4346 2308.4834 -112.5459 c2322.3652 -105.103 2337.5088 -100.2749 2351.8682 -93.8198 c2358.7109 -90.7437 2365.2285 -87.0073 2372.2119 -84.2461 c2379.3574 -81.4214 2386.7783 -79.3066 2394.1807 -77.2754 c2408.7539 -73.2764 2423.5557 -70.3096 2438.5264 -68.3047 c2453.375 -66.3164 2467.6143 -65.8013 2482.4307 -68.3057 c2488.3271 -69.3022 2494.1602 -70.8491 2499.2676 -74.0308 c2501.7939 -75.604 2504.2266 -77.3901 2505.9805 -79.833 c2508.0703 -82.7427 2507.7734 -86.3979 2507.5811 -89.7915 cf*U2167.7676 0.289551 m2167.6631 0.024414 2167.5566 -0.239746 2167.4492 -0.5 c2164.043 -8.71338 2160.7773 -17.0293 2158.0117 -25.4814 c2155.0879 -34.4136 2153.1211 -43.4268 2151.6758 -52.542 C2151.6211 -52.4199 2151.5723 -52.2979 2151.5176 -52.1763 c2148.1045 -44.5664 2145.9883 -36.7769 2143.5752 -28.8198 c2141.0928 -20.6353 2136.6533 -14.0479 2131.1973 -7.56592 c2129.0889 -5.06104 2127.1553 -2.38428 2125.2148 0.289551 C2108.6992 0.289551 L2112.416 -3.95752 2115.3125 -8.82813 2118.9697 -13.2021 c2124.0078 -19.2305 2128.5703 -24.6812 2131.0391 -32.2759 c2133.2451 -39.0605 2134.7666 -45.9629 2137.5664 -52.5552 c2140.8457 -60.2769 2144.0098 -67.6187 2146.0537 -75.7915 c2146.7822 -78.7021 2147.5078 -81.624 2148.2148 -84.5552 C2147.2969 -99.2788 2147.4551 -114.0874 2147.5205 -128.8208 c2147.5566 -137.2305 2148.1631 -145.5771 2148.4932 -153.9683 c2148.7275 -159.9268 2149.6895 -166.6797 2153.0322 -171.7549 c2155.376 -175.3145 2160.0713 -176.042 2163.2402 -173.0703 c2168.0254 -168.5835 2168.0186 -161.5854 2168.4688 -155.5029 c2169.0859 -147.1616 2168.875 -138.6187 2168.5283 -130.1948 c2167.8809 -114.4956 2164.6055 -99.4741 2161.2676 -84.2734 C2161.3379 -83.0864 2161.4014 -81.8994 2161.4834 -80.7129 c2162.5303 -65.5679 2164.3564 -50.7495 2168.3936 -36.083 c2170.4229 -28.7124 2173.0869 -21.5742 2175.8105 -14.4395 c2177.1641 -10.896 2178.5449 -7.35938 2180.0244 -3.8667 c2180.4658 -2.82617 2180.9189 -1.79395 2181.3184 -0.736328 C2181.4297 -0.383301 2181.5811 -0.047363 2181.7285 0.289551 C2167.7676 0.289551 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF