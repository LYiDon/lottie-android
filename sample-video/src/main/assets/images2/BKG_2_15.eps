%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 2.eps)%%CreationDate: 04.10.18 13:22%%Canvassize: 16383%%BoundingBox: 24 -2149 3841 -29%%HiResBoundingBox: 24.6401 -2149 3841 -29.8613%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1655 639 0.25 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5320 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FF8536FD7DFF6084AF84FD7BFF8584FFA985FD2FFFAF84FFFF%FF84AFFD44FFAF5AFFFFFF5AFD2FFF5A8484855AAF36FD44FF5AFD04FF85%A9FD2EFF8BFF6060FF8485FD20FF848B8585FFFF84AFFD1BFF84605AAFFF%FFA885FD2EFF60AF60FF6085FD1CFFAFAF8484608584AF5A6060AF6085FD%1BFF8460FFFFFF6036FD2DFF846036856085FD1BFFAF608584AFAFFD05FF%AFFFFFFF6085FD0AFFAF85A9FD0CFFA860FD04FF36AFFD2CFF843C36AFA8%60A9FD1BFFA9AFFD0EFF5AA9FD04FFA88436605A608460A8FD0BFF85AFFD%04FF8B84FD2DFFA9605A6084FD2DFF60FFFFFF8485AFFF84FFFFFF848BFD%0AFF8584FD05FFA984FD2EFFAF855A85FD2DFFAF5AFFA860AFFD07FF5AFD%0AFF60FFAFFF84FFAFAF84FD60FF856085FD09FF8584FD08FF35855A60FF%85AFAF353684FD5FFFA836A8FD09FFAF60A9FD04FF85FFAF85A96084FF84%FFFF858485FD5EFFAF60AFFD0BFF84AFFD04FF60FD04FF60FFAF85AFFF84%AFFD5EFF8460A9FD0CFFAF5AFFFFFFA885FFFFFF60AFFFFF60FFFFAF60FD%5DFF8460FD0FFF85A8FFFF8584FFFF8460FFFFA884FFFFFF60A8FD5CFFA9%A9FD0FFFA884FFFF60AFFFFF61AFFFFFAF84FFFFFF84AFFD6EFF60FFAF85%FFFFAF84FFFFFF8485FFFFFF8584FD6EFFAFFFAF84FFFF5AAF84FFFF8BA9%FFAFFFA985FD70FF60FFFF84368436A8FF5AFFA83684AF84FD6FFFA960FD%04FFAF84FFFF85FFFF60AF6060FD6FFFAF84FD04FF5AFFFFFF60FFFF84A8%AF5AFD6FFF60AFFFFFFFA985FFFFAF85FFFF84AFFD71FF85FD04FF8484FF%FFAF84FFFFAF84FD70FFAF60FD04FF60FFFFFF85AFFFFFFF85FD70FF84AF%FFFFFF8485FFFFFF8584FFFFFF60AFFD61FFAFA9FD0CFF60AFFFFFFF60FD%04FF60FD04FF8B85FD60FF855A85FD0BFFAF84FD04FF368460858460A8FF%FFFF8485FD5EFF846084FF5AA9FD0AFF5AAFFD05FFAFFFA985368B848584%8560FD5DFF8485AFFFFFFF60FD09FFA9856085FD07FFA8A9FFFFA9AF84AF%FD5CFF5A85FD05FF8584FD08FF605A3C84FD07FFAF85FD60FFAF60FD08FF%85FD07FF8536AF84FD08FF84AFFD60FF5A6084858485A8FFA8AF8485FD06%FF84AFFF84A8FD07FF85AFFD61FFA9AFAFAF36FFFFAF368560FD08FFAF84%FD08FFA8FD65FF5AAFFFFFFF6084FD09FF8485FD6CFFAF5AFD06FF60FD09%FF85AFFD09FFAFFD61FFAF5AFD07FF8460FD07FFAF5AFD0AFF60AFFD60FF%36858485A9FD05FF84AFFD06FF5AFD0BFFAF35AFFD5FFFAFA88435AFFF84%3585608536AFFD04FF6085FD09FF84858460FD61FFAF60FFFFAFAF85A9FF%8585A9FFFFFF8485FD0AFF848460368584A9FD5DFF845AFFFFFF5AFFA860%FD04FFAFFFA860FF8560FD08FF5A6136145A8584FD5CFF8584FD04FF85AF%FF8485FD05FF85848B8461AFFD06FFA86060605A6084FD5CFFAF36A984AF%84FF60FFFFFF8485FFFFFFAF366084AF60FD0BFF8560AFFD5EFF84AF5A60%AF85FFAF84AF5AAFFFFF8485FFFF60FD0CFFA8AFFD60FFA860A9FF60FF84%36846060FD05FF8484FD6EFF60AFFFFF85AFFF848BFD07FF61AFFD6CFFAF%6084FFFFFF84AFFFFF6085FD05FFAF84FD6EFF60858485846184AFA9FF60%85FD04FF5AFD70FFA8FFA9AF5A608484608436FFFFFF8484FD74FFAF84FD%08FF60FD75FFA885FD07FF60A8FD76FF60FD06FF8584FD76FFA984A9FD04%FF855AAF8485A8FD74FF84FD05FF848584AF36FD75FF84A9FD07FFA885FD%0DFFAFFFAF8560AFFD62FF60FD08FF60AFFD0BFFAF36848460A8AF84FD62%FFAFA9FD06FF8484FD0DFF85FF8560FF846084FD68FFAF60FD0DFFAF5A60%84858460846060FD67FF5AAFFD0CFF8560AF8461A98584AF60AFFD23FF85%A9FD41FF8485FD0CFFAF36FFFF8536FF84AF846060AFFD20FFA9845A85FD%40FFA860FD0EFFAF846036AF608560AFFFAF60FD20FFAF84FD42FF8BA9FD%09FF848560FD04FF5AFFFF3C848436856084FD20FFA885FD04FFA9FD3DFF%5A8584846085848460855A84A8FD04FFA985FF60368584AFFD1FFF8B6085%84AF368584AF8461FD0EFF84AFAFFFFFFFAFFD29FFA8AFA9AFA8FFAFFFFF%AFAFFD06FF5A608485A860A8FD1DFFA86084AF84A93684FF601360848436%FD07FFAFFFFFAF5AA984848460353684FD31FF8485FD09FF84FD21FF60FD%05FF608B84FF8485A98584FD05FFAF8584FF84AFFFFF84601360A98B84FD%30FFAF84FD08FFAF84FD21FF85A8FD04FF8536FFFFFFA984846084FD04FF%AF5A855A85AFFFA8603685FFFFA884FD30FF8485FD05FFAFAFFFFF84FF84%AFFD24FF6085AF60FFFFAF855AAFFD05FFAF6060368560FFA985FFFFAFFF%84FD30FFAF84FD04FF843636605A60363636FD23FFA8AF608584FF36A9FF%3684FD07FF84365A84FFFF5AAFA885A884FD30FF84A9FD05FF858B848560%60A9FD26FF8536AFFD04FF60AFFD08FF60FD04FFAF608BAF8B84FD30FF85%84FFAFFD08FF60FD27FFAFFF368484846085FD09FF84A8FD05FF848484FD%31FF84846085FD08FF85A9FD28FFAFFFFFAFFD0BFF84AFFD45FFA8FD39FF%AFFD3CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Layer 3) Ln0 Au*u1 D0 O0.788052 0.235294 0.156313 0.000031 0 0.6 0.74902 Xa0 J 0 j 1 w 10 M []0 d0 XR102.8276 -864.4023 m109.772 -865.3135 116.7534 -865.8154 123.728 -866.4341 c130.7817 -867.0601 137.333 -869.0767 144.1094 -871.0522 c150.7046 -872.9756 157.312 -874.812 164.0591 -876.1279 c166.5493 -876.6133 169.0352 -876.7944 171.519 -876.9087 C170.5801 -882.3672 169.7676 -887.8457 169.1104 -893.3486 c167.3403 -908.1709 167.6055 -923.1719 166.0098 -938.0464 c164.4658 -952.4448 165.144 -966.916 162.2524 -981.1606 c159.3926 -995.2495 154.9668 -1009.1631 154.7529 -1023.6641 c154.6294 -1032.0518 167.6294 -1032.0396 167.7529 -1023.6641 c167.9673 -1009.125 172.8418 -995.1172 175.5063 -980.9414 c178.2744 -966.2153 177.605 -951.1465 179.1992 -936.2822 c180.875 -920.6558 180.4756 -904.8789 182.6187 -889.3218 c183.1343 -885.5801 183.7573 -881.853 184.4316 -878.1353 C186.251 -878.603 188.0435 -879.2061 189.8662 -879.6304 c193.6064 -880.501 197.3896 -880.877 201.0879 -881.9678 c203.7891 -882.7651 207.2715 -882.209 210.0703 -882.2803 c213.7925 -882.375 217.4097 -882.8032 221.0381 -883.6309 c227.3857 -885.0776 233.3589 -886.6528 239.8945 -887.4185 c246.9897 -888.25 253.9941 -889.4863 261.0571 -890.543 c275.2832 -892.6714 289.6123 -894.0166 303.9321 -895.3223 c310.5864 -895.9292 317.251 -896.0791 323.9092 -896.8394 c330.5815 -897.6016 337.2363 -898.437 343.9492 -898.7539 c348.1055 -898.9502 352.2354 -899.1812 356.3901 -899.4487 c359.6724 -899.6602 363.7827 -899.9287 366.7944 -898.25 C369.1504 -897.5576 370.9385 -895.5923 370.5796 -892.3247 c369.3208 -880.8584 366.3311 -869.7935 363.7207 -858.5874 c360.9595 -846.7314 360.1899 -834.5952 357.3623 -822.7529 c354.5015 -810.7729 351.0981 -798.9253 348.2285 -786.9419 c345.0967 -773.8618 342.665 -760.5557 339.002 -747.6167 c337.4063 -741.981 335.9204 -736.3188 334.6411 -730.6021 c333.2861 -724.5444 332.6982 -718.3486 331.1108 -712.3589 c327.8882 -700.1987 325.52 -687.792 322.4756 -675.5815 c319.4443 -663.4233 315.1201 -651.6182 311.1201 -639.7578 c308.1357 -630.9087 302.5225 -622.4409 301.0908 -613.0938 C301.4556 -612.4453 301.7012 -611.7251 301.8457 -610.98 C302.4053 -611.3237 302.7979 -611.5566 302.6108 -611.4316 C307.5986 -614.7568 L313.3062 -618.5625 318.8379 -622.0684 325.0854 -624.917 c330.7754 -627.5112 336.4736 -629.9985 341.7139 -633.4478 c346.73 -636.7495 350.2466 -642.1377 355.2397 -645.626 c359.9561 -648.9209 365.2402 -651.208 369.3682 -655.3301 c373.9341 -659.8892 379.3198 -663.3896 384.2725 -667.5918 c389.4282 -671.9673 393.0933 -677.5918 397.7212 -682.4575 c403.5088 -688.542 412.6875 -679.335 406.9136 -673.2651 c406.082 -672.3911 405.2866 -671.4893 404.5024 -670.5786 C406.96 -669.9043 408.9478 -667.9033 408.8174 -664.5615 c408.5781 -658.4355 406.626 -653.0781 404.3979 -647.4399 c402.002 -641.3779 400.6177 -634.8774 399.1772 -628.5332 c397.6479 -621.7959 396.3169 -615.02 394.6211 -608.3208 c392.7183 -600.8032 392.3442 -592.8682 391.4463 -585.168 c389.7729 -570.8193 387.9434 -556.4883 385.8525 -542.1943 c383.8027 -528.1816 381.9541 -513.9746 379.041 -500.1172 c376.1973 -486.5913 371.7798 -473.2837 367.1738 -460.2695 c362.3379 -446.606 358.0464 -432.8452 352.4087 -419.4761 c349.9111 -413.5537 347.3462 -407.6616 344.9746 -401.687 c342.3506 -395.0776 341.3491 -387.729 339.0874 -380.9272 c338.0322 -377.7539 336.9209 -374.626 335.7393 -371.5205 C335.9087 -371.6357 336.0635 -371.7651 336.2358 -371.877 c343.5845 -376.6577 349.6909 -382.7905 356.8125 -387.7993 c363.6055 -392.5767 371.3354 -395.8691 377.771 -401.104 c383.9443 -406.1255 390.9795 -409.5396 399.0576 -408.1523 c403.3726 -407.4116 404.7588 -401.9995 402.9424 -398.604 c402.1958 -397.209 401.4106 -395.8384 400.6563 -394.4478 c399.7988 -392.8682 399.9375 -390.833 398.9224 -389.1162 c397.3228 -386.4106 394.5518 -384.6602 392.9668 -381.979 c388.8843 -375.0728 386.6436 -367.4785 382.9238 -360.4849 c374.6089 -344.8525 371.5967 -328.1138 366.4683 -311.4038 c363.9331 -303.145 361.3003 -294.9165 358.7095 -286.6753 c355.9839 -278.0044 353.9009 -269.0781 350.9292 -260.5059 c348.5654 -253.6875 345.166 -246.998 341.4805 -240.8257 c340.0464 -238.4233 338.3706 -236.1606 336.8574 -233.8076 c336.6602 -233.5005 336.3838 -233.1045 336.0791 -232.6582 C337.4224 -233.0479 338.7314 -233.499 339.9482 -233.8657 c343.8467 -235.0396 347.8301 -236.0103 351.7056 -237.2251 c359.2988 -239.6055 368.002 -240.2344 375.7827 -238.5762 c378.3882 -238.021 380.8213 -235.0278 380.5547 -232.3086 c379.9297 -225.9365 376.6401 -218.5986 373.4321 -213.0962 c369.02 -205.5293 366.3604 -197.3525 363.3672 -189.1587 c360.0615 -180.1074 355.9448 -171.4766 352.2944 -162.5742 c348.9185 -154.3403 347.9004 -145.0059 346.3447 -136.2769 c344.7324 -127.2324 341.9805 -118.5962 339.8481 -109.6768 c337.6885 -100.6431 335.9014 -91.4922 333.6729 -82.459 c331.4971 -73.6387 329.3384 -64.6499 326.147 -56.1118 c323.6118 -49.3291 316.082 -43.4883 315.7168 -36.1323 c315.4053 -29.8555 307.9692 -28.2803 304.4824 -31.4546 C299.5835 -32.0898 295.6455 -34.1084 291.936 -37.5776 c287.2305 -41.9785 280.4639 -44.395 275.4409 -48.5747 c270.8013 -52.4351 266.8423 -57.0605 262.3115 -61.0483 c256.9116 -65.8013 251.7861 -70.6172 246.9634 -75.9785 c238.3809 -85.5195 229.7876 -95.6992 222.1406 -106.0024 c213.6201 -117.4834 206.3379 -129.8022 198.2129 -141.5552 c190.9082 -152.1211 185.0835 -163.2725 176.9043 -173.2705 c173.1851 -177.8169 169.3818 -182.292 165.5327 -186.7041 c161.709 -191.0874 159.3633 -197.3135 164.6157 -201.6401 c172.7544 -208.3428 183.9248 -202.7988 192.9907 -201.9302 c199.3252 -201.3228 205.3613 -200.5713 211.752 -200.5713 c215.2183 -200.5713 218.6895 -200.623 222.1548 -200.5229 C217.2441 -204.4717 212.1738 -208.2363 207.2778 -212.2163 c202.042 -216.4722 198.0034 -222.2573 194.0454 -227.6572 c189.5757 -233.7544 184.4541 -239.2827 180.0249 -245.3765 c170.8335 -258.0225 161.7588 -270.7578 153.7183 -284.1768 c149.8491 -290.6338 146.5439 -297.3901 142.6729 -303.8413 c138.5005 -310.7949 133.1436 -317.853 130.0479 -325.3438 c124.2134 -339.46 113.3252 -350.0488 103.4565 -361.3887 c101.0244 -364.1836 98.6572 -367.0303 96.2354 -369.8311 c94.3047 -372.0635 92.1807 -373.6523 90.1567 -375.6763 c86.0503 -379.7827 80.9077 -384.1079 77.9712 -389.1685 c74.6992 -394.8066 78.3916 -399.7725 83.9326 -401.4766 c88.2686 -402.8101 94.3418 -401.9761 98.4204 -399.9336 C98.7168 -399.9834 99.2666 -400.0063 100.2515 -399.9663 c102.1729 -399.8882 104.0918 -399.6968 106.0063 -399.5234 c109.8442 -399.1768 113.6689 -398.7539 117.5161 -398.5156 c125.0864 -398.0469 132.2471 -396.4873 139.4854 -394.1709 c149.2578 -391.0435 158.7974 -386.0259 167.793 -381.1348 c169.8857 -379.9966 172.0771 -379.0083 174.2959 -378.0586 C173.0122 -381.0444 171.8486 -384.0659 170.7793 -387.0645 c168.5005 -393.4541 166.103 -399.0864 162.5254 -404.8765 c158.8994 -410.7446 155.0903 -416.4985 151.4102 -422.333 c144.5293 -433.2402 139.7935 -444.7417 134.3354 -456.3608 c128.6934 -468.3726 121.2988 -479.0698 113.5239 -489.7573 c109.5747 -495.1855 105.7378 -500.1128 102.5469 -506.1089 c101.2109 -508.6196 99.9805 -511.187 98.7456 -513.7485 c97.3721 -516.5981 96.2139 -520.7861 94.0947 -523.1445 c89.8135 -527.9092 88.8545 -534.2407 85.8228 -539.6636 c83.2905 -544.1934 80.3267 -548.1953 78.5098 -553.1079 c74.0063 -565.2832 66.7876 -576.8149 58.5688 -586.8149 c56.8184 -588.9448 56.0015 -591.7476 54.4966 -594.0869 c52.6968 -596.8848 50.6392 -599.7114 48.3076 -602.0835 c44.1846 -606.2783 40.7612 -610.7881 38.6099 -616.2832 c37.4692 -619.1958 39.438 -621.9761 41.5967 -623.624 c48.5977 -628.9663 56.4331 -622.8301 63.2305 -620.1226 c71.9673 -616.6426 81.1157 -613.9565 90.0933 -611.1504 c99.1895 -608.3066 108.6514 -606.9287 117.9619 -604.9683 c123.2207 -603.8608 128.5103 -602.0703 133.8477 -600.855 C131.0029 -605.2466 128.9092 -610.375 126.4385 -614.7192 c119.2266 -627.4023 111.3423 -639.8965 104.6255 -652.8267 c97.5928 -666.3647 92.2988 -680.7314 86.1885 -694.6895 c79.7739 -709.3418 72.8755 -723.6855 67.9756 -738.959 c63.1548 -753.9863 57.0889 -768.8066 51.4414 -783.5566 c48.7134 -790.6821 44.936 -797.2847 41.6846 -804.1826 c38.2109 -811.5513 35.0762 -819.0815 31.9854 -826.6167 c29.4395 -832.8242 27.4141 -838.9639 25.3188 -845.2856 c23.5967 -850.4795 25.1611 -855.5933 29.9072 -858.2979 c33.7949 -860.5132 39.0073 -860.5098 43.3511 -860.5815 c50.4019 -860.6978 57.4351 -861.3877 64.5093 -861.416 c70.5532 -861.4399 76.5933 -861.397 82.6348 -861.6128 c89.4951 -861.8574 96.0405 -863.5112 102.8276 -864.4023 cf0 D57.2593 -848.3374 m51.604 -848.2295 45.9653 -847.7461 40.3193 -847.4863 c39.6401 -847.4551 38.9629 -847.395 38.2886 -847.3101 C38.6797 -846.1079 39.1069 -844.9209 39.396 -843.6787 c40.6133 -838.4448 43.1904 -833.3169 45.2466 -828.3042 c47.4326 -822.9731 49.7246 -817.688 52.1191 -812.4473 c54.439 -807.3711 56.9375 -802.3799 59.5806 -797.4648 c62.5508 -791.9414 64.4805 -785.7432 66.6802 -779.8765 c70.9058 -768.6064 74.9585 -757.2749 79.4077 -746.0898 c84.0327 -734.4648 87.27 -722.4023 92.8545 -711.1089 c102.7769 -691.043 108.875 -668.5811 121.2549 -649.792 c127.2876 -640.6357 132.2856 -630.8237 137.6636 -621.2808 c139.3989 -618.2021 141.0239 -615.126 142.5869 -611.9531 c143.6841 -609.7256 145.3994 -605.1855 148.0186 -604.3291 c154.1563 -602.3203 153.5063 -594.3511 149.1963 -592.0601 C148.8696 -589.1211 146.7988 -586.4644 142.9653 -586.5737 c135.478 -586.7876 128.6309 -589.1904 121.4312 -590.8979 c112.9463 -592.9102 104.3501 -594.3403 95.8247 -596.1348 c87.0571 -597.981 78.625 -601.3018 70.0996 -603.9941 c67.0576 -604.9546 64.0767 -605.9746 61.1089 -607.0894 C62.6294 -604.9297 64.2085 -602.8135 65.7217 -600.6484 c67.3433 -598.3286 68.1064 -595.6108 69.8374 -593.4463 c77.981 -583.2637 84.8257 -571.98 89.731 -559.8867 c91.5313 -555.4482 93.7144 -551.665 96.2349 -547.5957 c99.4346 -542.4312 100.2559 -535.7109 104.3364 -531.1694 c108.2788 -526.7822 110.3208 -519.4614 112.981 -514.1982 c116.0073 -508.2104 119.5986 -503.0801 123.6406 -497.7734 c131.3789 -487.6147 138.0684 -477.2803 144.0317 -466.0029 c149.9575 -454.7979 154.0308 -442.9478 160.6631 -432.0679 c167.7007 -420.5234 176.4365 -409.5874 181.0996 -396.8188 c185.1597 -385.7031 189.1001 -373.6826 197.437 -364.9185 c203.2109 -358.8486 194.0327 -349.6416 188.2446 -355.7261 c187.7363 -356.2607 187.2397 -356.8062 186.7534 -357.3613 C185.5615 -357.5269 184.3613 -358.0503 183.2573 -359.0508 c177.7388 -364.0503 169.022 -365.6816 162.5381 -369.1973 c154.5308 -373.5391 146.2227 -377.9829 137.6538 -381.0825 c127.8291 -384.6367 118.2041 -385.3105 107.9248 -386.3369 c105.3691 -386.5918 102.8145 -386.8076 100.2515 -386.9663 c99.415 -387.0181 98.5386 -387.001 97.6631 -387.0117 C98.1055 -386.5947 100.7397 -384.2773 99.209 -385.187 c105.0923 -381.6919 109.4858 -374.2163 113.896 -369.1484 c123.6924 -357.8911 134.1367 -347.3438 140.5132 -333.6694 c143.7466 -326.7354 147.9634 -320.293 151.9033 -313.7275 c156.124 -306.6929 159.8809 -299.4365 163.9966 -292.3428 c171.8384 -278.8281 180.9814 -266.1001 190.1431 -253.4624 c194.2651 -247.7759 199.1074 -242.6445 203.2739 -236.9604 c207.6016 -231.0571 211.8604 -224.9009 217.7261 -220.3926 c225.5156 -214.4058 235.7979 -208.4023 241.2817 -199.9697 c244.8369 -194.5034 241.7583 -188.8154 235.9238 -187.3262 c232.3223 -186.4072 228.4692 -186.9409 224.8442 -187.3374 c220.5186 -187.8105 216.0972 -187.5713 211.752 -187.5713 c204.8149 -187.5713 198.2158 -188.4292 191.3359 -189.0884 c188.4927 -189.3608 186.0615 -189.5244 183.3242 -190.3384 c181.6797 -190.8271 180.0161 -191.2285 178.332 -191.5083 C178.7666 -191.0356 179.1709 -190.5796 179.5 -190.1475 c182.1372 -186.6826 185.2466 -183.4722 188.0327 -180.1123 c193.3677 -173.6797 197.9814 -167.0264 202.1201 -159.7378 c206.5391 -151.957 211.7954 -144.7788 216.6919 -137.2681 c222.0464 -129.0542 226.9937 -120.0503 233.436 -112.6279 c244.7983 -99.5361 254.7671 -85.4033 267.5366 -73.5679 c273.5854 -67.9619 279.5625 -61.9863 285.9038 -56.71 c289.3486 -53.8433 293.8062 -51.8423 297.5918 -49.4463 c299.9165 -47.9751 301.9507 -45.3433 304.6494 -44.5288 C306.2915 -48.4634 308.7803 -51.9751 311.4238 -55.7651 c316.3564 -62.8364 317.8882 -72.7871 319.5742 -81.0859 c320.4771 -85.5322 322.0718 -89.8643 322.8989 -94.3857 c323.7261 -98.9106 324.6177 -103.3638 326.2236 -107.686 c327.8242 -111.9927 328.2813 -117.1372 329.5488 -121.6094 c330.7417 -125.8179 331.9668 -130.0044 332.874 -134.2861 c334.7407 -143.0977 336.0942 -152.0479 337.8613 -160.8862 c338.7583 -165.3711 341.3794 -169.9922 343.2373 -174.1475 c345.2021 -178.542 347.2241 -182.8872 348.8955 -187.4053 c351.9883 -195.7661 355.2549 -204.0459 358.4229 -212.3672 c359.9971 -216.502 362.895 -219.9468 364.4619 -224.0615 c364.7568 -224.8369 365.1543 -225.6953 365.5645 -226.584 C352.1099 -226.0605 339.3979 -216.8359 325.7759 -219.3911 c323.7681 -219.7676 321.5796 -221.897 321.2363 -223.9307 c320.1255 -230.5117 322.8306 -236.0117 326.3208 -241.4399 c330.0537 -247.2456 333.2925 -252.5986 336.3003 -258.8647 c340.2061 -267.0024 341.8481 -276.2207 344.5112 -284.8105 c347.4346 -294.2383 350.4551 -303.6357 353.3784 -313.0635 c356.0767 -321.7671 357.8379 -330.6675 360.4238 -339.4019 c362.9111 -347.8037 366.2407 -355.959 370.0654 -363.8354 c373.79 -371.5054 376.9365 -379.3315 380.9116 -386.9106 c380.9722 -387.0259 381.04 -387.1294 381.1025 -387.2422 C374.687 -383.4697 368.1348 -379.9224 362.0405 -375.6362 c358.8711 -373.4072 356.1133 -370.2925 353.042 -367.8789 c350.1357 -365.5952 347.1475 -363.4277 344.085 -361.3594 c338.271 -357.4341 334.2715 -351.7598 328.7754 -347.4136 c325.1494 -344.5464 319.2002 -345.0908 317.9111 -350.2817 c315.5742 -359.6943 321.2119 -368.7744 324.1426 -377.3564 c326.3052 -383.6904 328.5146 -389.9858 330.1123 -396.4927 c331.8169 -403.4365 334.2651 -409.7212 337.0566 -416.3257 c342.6436 -429.543 347.2881 -442.8477 352.0225 -456.3755 c356.8618 -470.2046 361.7305 -484.042 365.2842 -498.2715 c368.7026 -511.9575 370.3335 -526.1694 372.4834 -540.1001 c374.6968 -554.4463 376.5176 -568.8491 378.2227 -583.2637 c379.0566 -590.314 379.8506 -597.3687 380.6377 -604.4243 c381.4629 -611.8228 383.876 -619.1816 385.4399 -626.4766 c386.8618 -633.1104 388.3945 -639.7251 390.2217 -646.2583 c391.522 -650.9077 393.8955 -655.2393 395.0952 -659.8867 C394.9385 -659.7363 394.7896 -659.5796 394.6299 -659.4316 c390.2646 -655.3804 385.2832 -651.9678 380.5034 -648.4341 c379.2559 -647.5122 377.8311 -645.377 376.4448 -644.1475 c374.1563 -642.1182 371.5391 -640.4292 368.9658 -638.7915 c364.0537 -635.6646 359.9297 -632.9316 355.791 -628.793 c347.2515 -620.2539 336.8486 -616.3877 326.2188 -611.124 c320.2065 -608.1465 314.7437 -603.9214 309.1724 -600.207 c307.5186 -599.1045 305.9961 -598.1396 304.1846 -597.313 c303.251 -596.8867 302.3452 -596.4263 301.4448 -595.9341 c300.9141 -595.644 300.6567 -595.4175 300.541 -595.3052 C298.6436 -588.1792 286.8691 -588.4619 287.7539 -596.3984 c288.1035 -599.5327 289.1719 -601.9448 290.9644 -603.9575 C289.0386 -605.1313 287.6816 -607.2559 287.7539 -609.5996 c288.0781 -620.1426 292.79 -629.6592 297.0171 -639.1035 c301.8848 -649.9785 305.1992 -662.145 308.4819 -673.5903 c311.9502 -685.6831 314.4502 -698.0303 317.2334 -710.29 c320.0649 -722.7617 322.1558 -735.3599 325.5337 -747.7236 c332.1494 -771.938 336.9941 -796.6294 343.4727 -820.8999 c346.6406 -832.7695 347.6284 -844.8247 350.0415 -856.8208 c352.0361 -866.7393 355.04 -876.4824 356.7437 -886.4604 C354.7275 -886.3608 352.7129 -886.1816 350.7017 -886.0166 c344.2241 -885.4868 337.7539 -885.4087 331.2769 -884.6963 c315.6421 -882.9766 299.9839 -882.0625 284.3384 -880.4404 c268.2422 -878.771 252.2461 -876.1685 236.2197 -873.9678 c229.1621 -872.9985 222.6104 -870.4551 215.5117 -869.6289 c211.9087 -869.2095 208.251 -869.2188 204.6294 -869.2012 c200.4917 -869.1816 195.4907 -867.5996 191.4517 -866.6597 c189.8857 -866.2954 188.3555 -865.9624 186.8394 -865.6675 C188.3403 -858.3325 190.5894 -851.1992 191.897 -843.7915 c192.5366 -840.1694 193.064 -836.5273 193.5942 -832.8882 c194.1597 -829.0093 195.5195 -825.7378 196.9326 -822.0903 c199.8901 -814.4556 201.7388 -806.8589 203.437 -798.8828 c204.8628 -792.188 207.231 -785.7412 208.498 -779.0059 c209.8491 -771.8257 210.2729 -764.4692 211.6465 -757.2778 c212.897 -750.7334 212.6406 -744.2295 212.6406 -737.5474 c212.6406 -729.4907 214.5474 -721.0103 215.8906 -713.0771 c218.4531 -697.9414 222.4585 -683.3638 222.6162 -667.8867 c222.6431 -665.2358 223.7104 -662.5317 224.4878 -660.0293 c225.5464 -656.6201 225.8843 -653.8555 226.0288 -650.3198 c226.1606 -647.0815 227.5078 -644.0068 228.1328 -640.8403 c228.8735 -637.0845 229.5234 -633.3154 230.0298 -629.521 c230.9834 -622.3667 230.6851 -615.2471 231.1982 -608.0737 c231.6895 -601.2129 234.9854 -595.0449 235.8413 -588.2222 c236.6465 -581.8062 235.2764 -576.02 237.4668 -569.7666 c239.7495 -563.2476 239.7852 -555.7998 240.8481 -548.9927 c243.2295 -533.7441 243.7563 -518.3911 246.125 -503.1768 c248.335 -488.978 248.6553 -474.604 251.4243 -460.5327 c254.1934 -446.458 256.689 -433.0635 256.6987 -418.6563 c256.7031 -411.5137 257.8574 -404.563 258.1992 -397.4517 c258.5718 -389.7041 257.8257 -381.9175 257.5835 -374.1763 c257.3525 -366.7979 257.5288 -359.3916 257.5288 -352.0098 c257.5288 -347.2578 255.8267 -341.3359 258.3037 -337.0024 c262.4707 -329.7124 251.2373 -323.166 247.0786 -330.4409 c244.1377 -335.5869 243.9365 -341.293 244.2769 -347.0752 c244.6929 -354.1411 244.5288 -361.2275 244.5288 -368.3037 c244.5288 -376.0903 245.0918 -383.8511 245.2534 -391.6328 c245.418 -399.5776 243.9263 -407.3301 243.7285 -415.2466 c243.5488 -422.4268 243.916 -429.5986 242.8501 -436.7319 c241.7407 -444.1548 239.9902 -451.4775 238.542 -458.8374 c237.0791 -466.2715 236.4053 -473.5078 235.9409 -481.0464 c235.4385 -489.1938 233.9487 -497.2539 232.7295 -505.3135 c231.5698 -512.9814 231.3145 -520.5718 230.6382 -528.2783 c229.9165 -536.5044 228.4141 -544.6484 227.1978 -552.8096 c226.6865 -556.2402 226.5508 -559.7993 225.8599 -563.1802 c225.1865 -566.4717 222.916 -569.7422 222.916 -573.1235 c222.916 -580.4458 223.4941 -587.519 221.0439 -594.5146 c218.7646 -601.0234 218.0371 -607.6563 217.9385 -614.5288 c217.8174 -622.9897 216.8564 -630.9985 215.2188 -639.3027 c214.5845 -642.5166 213.5693 -645.4702 213.1489 -648.7676 c212.708 -652.2207 212.4409 -655 211.3906 -658.3818 c209.1235 -665.6807 209.6357 -673.3135 208.8008 -680.8398 c207.1685 -695.5547 203.0693 -709.9448 201.1045 -724.6494 c200.1704 -731.6411 199.6406 -738.3398 199.6406 -745.3862 c199.6406 -752.1987 198.4185 -758.8877 197.3101 -765.6167 c195.0688 -779.2241 192.1616 -792.7871 188.6167 -806.1655 c186.7236 -813.3091 182.3584 -820.355 181.3228 -827.5967 c180.292 -834.8047 179.1934 -841.998 177.6406 -849.1147 c176.5308 -854.1997 175.1987 -859.1885 174.0229 -864.2373 C173.6816 -864.2305 173.3467 -864.2158 173.0015 -864.2139 c165.123 -864.1738 156.8896 -861.2065 149.3789 -859.0439 c142.1304 -856.9565 135.0469 -854.624 127.5278 -853.8037 c119.2456 -852.8999 110.9067 -852.5542 102.6558 -851.3594 c95.2798 -850.291 88.3364 -848.8164 80.8442 -848.5488 c72.9873 -848.2681 65.1187 -848.4873 57.2593 -848.3374 cf*U*u1 D291.4395 -1250.627 m300.1353 -1246.8965 307.6875 -1239.5752 310.0938 -1230.2754 c312.2231 -1222.043 310.5381 -1211.7832 304.1079 -1205.8887 c293.4316 -1196.1025 273.8462 -1199.4316 260.939 -1201.9346 c248.9951 -1204.25 238.1997 -1211.2939 228.895 -1218.874 c224.0781 -1222.7988 220.4199 -1228.123 215.896 -1232.3867 C217.4346 -1224.2354 220.1055 -1216.4463 222.8032 -1208.6113 c225.585 -1200.5332 227.0791 -1192.7393 228.043 -1184.2529 c229.0586 -1175.3096 232.0093 -1166.8184 233.7266 -1157.9766 c234.5234 -1153.8721 235.9092 -1149.2139 235.9165 -1145.0273 c235.9243 -1140.4775 236.0576 -1136.1855 237.3467 -1131.792 c239.7129 -1123.7285 227.1665 -1120.3105 224.8115 -1128.3369 c223.5669 -1132.5771 223.0879 -1136.8789 222.9424 -1141.2861 c222.7939 -1145.793 222.0171 -1150.0889 221.1909 -1154.5205 c219.5537 -1163.3027 216.6025 -1171.6992 215.4736 -1180.5518 c215.2573 -1182.248 215.0278 -1183.9063 214.7856 -1185.5498 C214.3354 -1179.0303 214.3931 -1172.5137 214.0728 -1165.9883 c213.4321 -1152.9443 209.7578 -1141.3193 206.0615 -1128.9395 c204.4619 -1123.582 202.5571 -1118.2451 201.0898 -1112.8701 c200.2388 -1109.752 199.9175 -1106.4355 198.4541 -1103.5088 c196.7915 -1100.1836 195.1294 -1096.8584 193.4668 -1093.5342 c189.7163 -1086.0352 178.5034 -1092.6211 182.2412 -1100.0947 c183.627 -1102.8652 185.0122 -1105.6367 186.3975 -1108.4072 c187.8057 -1111.2236 188.0884 -1114.6191 188.9116 -1117.6348 c190.395 -1123.0703 192.3608 -1128.4932 193.9795 -1133.9141 c195.7188 -1139.7402 197.8555 -1145.3496 199.1821 -1151.3037 c200.6445 -1157.8662 201.0981 -1164.5732 201.2686 -1171.2773 c201.6094 -1184.667 202.9668 -1197.9873 202.9668 -1211.3877 c202.9668 -1212.7773 202.9717 -1214.167 202.9746 -1215.5566 C201.332 -1211.2891 199.5479 -1207.0811 197.5112 -1202.9805 c195.4722 -1198.876 193.2266 -1194.8701 190.2852 -1191.333 c186.79 -1187.1309 182.4819 -1184.793 178.1455 -1181.6641 c169.7598 -1175.6133 159.3184 -1172.8271 149.3701 -1170.6064 c141.5112 -1168.8525 130.7246 -1167.375 124.0811 -1173.1006 c116.3071 -1179.7998 118.7529 -1193.1455 121.856 -1201.459 c125.6274 -1211.5625 132.9058 -1219.7334 141.3081 -1226.2969 c142.0464 -1226.874 142.8062 -1227.417 143.564 -1227.9629 C134.0767 -1228.6787 124.7646 -1231.2598 116.4102 -1235.8398 c109.4814 -1239.6377 101.0781 -1245.6797 102.0894 -1254.7832 c103.0854 -1263.752 113.6719 -1268.6426 121.2202 -1271.291 c130.2964 -1274.4756 140.5073 -1274.5332 150.0132 -1274.5527 c159.791 -1274.5723 169.6323 -1274.5449 179.0625 -1271.6348 c185.1294 -1269.7627 191.769 -1266.6318 197.4907 -1262.8047 C196.7085 -1267.1162 196.7939 -1271.7949 196.978 -1275.8359 c197.5098 -1287.5273 204.0107 -1297.8164 212.6758 -1305.375 c222.8965 -1314.29 237.9204 -1320.2598 251.5142 -1317.082 c263.5586 -1314.2676 277.6704 -1306.3252 277.603 -1292.3213 c277.5713 -1285.7041 272.8936 -1280.1504 268.3794 -1275.8428 c263.7925 -1271.4658 259.3052 -1267.0605 254.7612 -1262.6455 c251.9233 -1259.8877 248.9438 -1257.2227 245.7734 -1254.8262 C249.2734 -1254.7021 252.7734 -1254.6025 256.272 -1254.6025 c268.5273 -1254.6025 279.9819 -1255.541 291.4395 -1250.627 cf0 D177.0581 -1258.5977 m169.3809 -1261.5527 161.0962 -1261.5332 152.9951 -1261.5527 c145.4312 -1261.5693 137.8027 -1261.6328 130.3423 -1260.2344 c126.6123 -1259.5342 123.0586 -1258.3662 119.7427 -1256.5234 c118.0957 -1255.6084 116.7095 -1254.3477 115.0732 -1253.418 c115.0571 -1253.4082 114.9849 -1253.5469 114.9409 -1253.6348 c114.9722 -1253.5703 115.0249 -1253.459 115.1206 -1253.2539 c117.6777 -1247.7764 126.6538 -1244.9395 131.8672 -1243.2705 c140.2856 -1240.5771 149.2529 -1240.3047 157.9878 -1241.1191 c159.9199 -1241.2998 161.9541 -1241.9678 163.9463 -1242.7754 C165.7129 -1244.1426 167.4873 -1245.5 169.3047 -1246.8008 c174.3838 -1250.4375 179.6353 -1252.7773 185.4731 -1254.834 C182.644 -1256.3057 179.7285 -1257.5693 177.0581 -1258.5977 cf199.4951 -1244.0508 m198.4292 -1243.7598 197.3765 -1243.5508 196.3301 -1243.375 C195.6367 -1242.9805 194.9482 -1242.6299 194.2671 -1242.3643 c188.6523 -1240.1787 183.2969 -1237.0557 177.728 -1234.6914 c175.2334 -1233.6318 172.7446 -1232.5625 170.2295 -1231.5635 C166.9824 -1229.0078 163.8179 -1226.3564 160.6099 -1223.9648 c153.4658 -1218.6406 146.2954 -1214.3643 140.3237 -1207.582 c135.3062 -1201.8828 130.7476 -1192.5742 132.1489 -1184.7754 c132.6387 -1182.0508 133.897 -1182.2529 136.7705 -1182.1475 c140.2153 -1182.0195 143.6333 -1182.6328 146.9775 -1183.3799 c155.7065 -1185.3281 164.0845 -1187.877 171.584 -1192.8887 c174.9614 -1195.1465 178.3311 -1196.9316 180.8647 -1200.2393 c183.3335 -1203.4619 185.1255 -1207.2061 186.9229 -1210.8242 c191.7524 -1220.5488 194.7842 -1231.2383 198.2114 -1241.5176 c198.5723 -1242.5996 199.123 -1243.4639 199.7905 -1244.1396 C199.6909 -1244.1113 199.5957 -1244.0781 199.4951 -1244.0508 cf251.8726 -1278.374 m255.8677 -1282.5361 262.5474 -1286.1182 264.4561 -1291.835 c266.2603 -1297.2393 257.4937 -1301.3477 253.7666 -1302.7949 c240.0991 -1308.1016 226.0391 -1301.5742 216.749 -1291.1172 c212.0835 -1285.8652 210.0049 -1279.8281 209.8872 -1272.9258 c209.8286 -1269.4883 209.7344 -1265.1064 211.2983 -1261.9727 c211.439 -1261.6904 211.6021 -1261.4199 211.7593 -1261.1465 C215.2412 -1260.9463 218.6924 -1260.5078 222.1621 -1260.0898 c227.3843 -1259.46 230.2124 -1260.1279 234.6646 -1262.8623 c241.2808 -1266.9248 246.5542 -1272.832 251.8726 -1278.374 cf235.354 -1242.1953 m231.6685 -1242.3291 227.9839 -1242.3604 224.2969 -1242.2939 C225.3213 -1241.3418 226.3511 -1240.3867 227.3628 -1239.3984 c232.6284 -1234.2539 236.8691 -1228.8096 242.9341 -1224.5137 c248.5186 -1220.5576 254.4873 -1217.1396 261.0747 -1215.2002 c265.0308 -1214.0352 269.3965 -1213.8115 273.4819 -1213.3301 c280.2646 -1212.5322 288.8521 -1211.2979 294.9326 -1215.1133 c297.1943 -1216.5322 297.6963 -1219.792 297.7959 -1222.3174 c298.0098 -1227.7295 296.1289 -1231.4619 292.1626 -1235.0459 c282.8486 -1243.4629 269.6655 -1241.6025 258.1851 -1241.6025 c250.5635 -1241.6025 242.9688 -1241.9189 235.354 -1242.1953 cf*U*u1 D89.6626 -1828.4775 m98.5308 -1833.4609 109.3169 -1834.4883 119.2378 -1835.5186 c124.1138 -1836.0254 128.7612 -1836.7793 133.6143 -1837.4268 c141.6421 -1838.4961 149.8926 -1837.4326 157.7861 -1835.9082 c161.5776 -1835.1758 165.3066 -1834.1318 169.0083 -1833.0439 c172.002 -1832.1641 174.6733 -1830.8857 177.4604 -1829.7188 C175.376 -1831.6504 173.3501 -1833.6484 171.4263 -1835.7607 c166.7422 -1840.9053 162.623 -1846.6035 158.7349 -1852.3613 c155.0615 -1857.7998 150.7769 -1863.7031 148.3359 -1869.8164 c143.1436 -1882.8193 140.3442 -1895.4141 141.5723 -1909.4785 c142.666 -1922.002 155.9155 -1930.4551 167.1055 -1932.5381 c190.6724 -1936.9258 211.3027 -1918.6074 227.3516 -1903.9844 c232.7271 -1899.0869 237.5464 -1894.082 242.0117 -1888.7334 C238.9521 -1908.2881 237.8906 -1928.0625 237.8794 -1947.9375 c237.8726 -1961.1602 237.8481 -1974.3896 238.7554 -1987.5879 c239.7109 -2001.4883 243.5454 -2015.0908 246.7129 -2028.627 c248.5059 -2036.2881 250.4717 -2043.8613 252.4663 -2051.4326 C248.9736 -2052.5078 245.481 -2053.3594 241.9229 -2053.9121 C239.3584 -2052.8799 236.8301 -2051.71 234.2651 -2050.8535 c226.6348 -2048.3066 219.3887 -2044.9531 212.0327 -2041.7148 c198.9097 -2035.9395 185.145 -2030.9795 171.1431 -2027.7891 c164.0083 -2026.1621 156.7817 -2027.0547 149.6392 -2026.0693 c142.0435 -2025.0205 134.4502 -2024.2129 126.772 -2024.46 c120.7729 -2024.6533 114.6812 -2025.8936 108.7881 -2026.957 c103.1611 -2027.9727 99.1489 -2031.8242 97.1333 -2036.9902 c92.52 -2048.8125 107.561 -2057.8125 116.3521 -2061.3838 c130.4941 -2067.1289 145.9155 -2069.3516 161.0552 -2070.3721 c175.9922 -2071.3789 191.0566 -2070.8955 206.0181 -2070.8955 c213.249 -2070.8955 220.0176 -2070.0547 227.1069 -2068.6465 c231.6855 -2067.7373 236.2979 -2067.5098 240.8989 -2067.0527 C244.1021 -2068.1836 247.3242 -2069.0811 251.0293 -2069.2324 c253.6406 -2069.3389 255.4346 -2068.1504 256.416 -2066.4551 C256.4873 -2066.7285 256.5601 -2067.001 256.6313 -2067.2754 c259.8779 -2079.793 262.7412 -2092.2988 267.1333 -2104.5186 c271.5986 -2116.9414 278.084 -2128.5098 282.4604 -2141.0107 c283.4043 -2143.7061 284.3315 -2146.377 285.3579 -2149 C299.6201 -2149 L298.2363 -2146.4414 297.0972 -2143.7393 296.0913 -2140.8057 c291.7881 -2128.2578 285.8467 -2116.5977 280.9146 -2104.3428 c278.7124 -2098.8711 276.9658 -2093.2168 275.2871 -2087.5674 c273.5029 -2081.5625 271.2886 -2075.3428 270.3076 -2069.1563 c270.2168 -2068.583 270.1094 -2068.0127 270.0005 -2067.4424 C270.3975 -2067.459 270.791 -2067.4756 271.1782 -2067.4922 c281.6538 -2067.9434 292.3145 -2067.584 302.6323 -2065.6748 c313.186 -2063.7217 323.085 -2058.9688 332.5918 -2054.1631 c340.2231 -2050.3057 348.1421 -2044.9414 350.3975 -2036.1973 c352.6328 -2027.5332 345.5059 -2021.7373 338.1128 -2019.4541 c334.9478 -2018.4766 331.4668 -2018.1309 328.1699 -2018.0039 c322.5889 -2017.79 318.2646 -2019.3516 313.0483 -2020.8506 c310.7891 -2021.5 308.2188 -2021.3145 305.8921 -2021.3203 c303.3408 -2021.3262 300.7236 -2023.0146 298.5781 -2024.2471 c293.9766 -2026.8906 289.9565 -2030.6748 285.9023 -2034.0605 c281.9014 -2037.4023 277.4028 -2040.0176 273.417 -2043.3906 c272.2188 -2044.4043 271.0854 -2045.4863 269.9937 -2046.6094 C268.2607 -2046.3477 266.3916 -2046.75 264.7207 -2048.1621 c264.689 -2048.1895 264.6519 -2048.2109 264.6196 -2048.2363 C263.0171 -2042.4336 261.9634 -2036.501 260.5498 -2030.6484 c257.4336 -2017.7441 253.23 -2004.2773 252.0303 -1991.0508 c250.8413 -1977.9424 250.8843 -1964.7422 250.8794 -1951.5928 c250.8696 -1924.0156 252.3916 -1896.8457 258.96 -1869.9463 c259.4307 -1868.0186 259.0811 -1866.3574 258.2559 -1865.0469 C258.5869 -1864.4434 258.9243 -1863.8438 259.2407 -1863.2314 C259.6094 -1864.6582 260.002 -1866.085 260.4429 -1867.5127 c261.8833 -1872.1748 263.853 -1876.7266 266.207 -1880.9961 c268.6968 -1885.5127 270.9341 -1890.1006 273.3735 -1894.6689 c278.0962 -1903.5107 284.124 -1912.4189 290.6436 -1920.0352 c296.6616 -1927.0664 306.2427 -1933.3291 315.7373 -1933.582 c324.0322 -1933.8027 328.5894 -1924.916 330.4473 -1918.1592 c331.7373 -1913.4707 330.9932 -1907.3086 331.2271 -1902.4385 c331.5103 -1896.5449 331.5566 -1890.6436 330.6948 -1884.793 c329.2803 -1875.1934 322.7622 -1867.041 319.8677 -1857.8711 c318.8672 -1854.7012 318.0278 -1851.5586 316.9829 -1848.4629 C317.9658 -1849.0918 318.9878 -1849.6836 320.0874 -1850.2051 C322.9058 -1853.6904 326.145 -1856.5371 330.1523 -1858.7998 c335.3438 -1861.7314 340.5732 -1864.7422 346.1064 -1867.0732 c351.3394 -1869.2773 356.9409 -1870.6025 362.3525 -1872.2842 c367.957 -1874.0264 373.2163 -1878.0439 379.1787 -1878.0439 c396.623 -1878.0439 420.4053 -1881.7783 432.1377 -1865.4717 c437.9385 -1857.4092 438.9517 -1843.3496 435.0747 -1834.3545 c430.9971 -1824.8945 422.4946 -1817.9922 413.9111 -1812.7314 c408.8628 -1809.6367 404.5083 -1806.332 399.1616 -1803.707 c393.6797 -1801.0166 387.9155 -1798.7373 381.917 -1797.5381 c375.8818 -1796.332 369.6577 -1795.8213 363.5757 -1794.8447 c358.6826 -1794.0586 354.0757 -1791.9912 349.4536 -1790.1563 C353.7393 -1788.6543 357.9795 -1786.9727 362.4971 -1785.9922 c370.8984 -1784.1699 380.48 -1780.2051 387.4897 -1775.1953 c394.6475 -1770.0801 398.4971 -1762.2051 398.8228 -1753.5059 c399.1494 -1744.7852 395.6436 -1738.0322 389.8062 -1731.832 c376.9385 -1718.1631 357.9038 -1715.082 340.7964 -1721.8623 c334.1455 -1724.498 328.2588 -1728.3828 322.5405 -1732.5586 C324.0142 -1729.582 325.5996 -1726.6377 326.9424 -1723.6426 c329.6362 -1717.6338 331.4019 -1711.8652 332.5859 -1705.3896 c333.6357 -1699.6484 333.8848 -1693.9678 334.1045 -1688.1563 c334.3486 -1681.7168 335.0781 -1675.4121 334.3315 -1668.9727 c333.2109 -1659.3066 327.9849 -1646.4131 318.4756 -1642.4014 c313.3921 -1640.2578 307.6846 -1640.5889 302.2749 -1640.6152 c296.7793 -1640.6426 291.1733 -1640.9355 285.8765 -1642.5 c281.0435 -1643.9268 276.7271 -1648.2695 273.3467 -1651.8115 c269.1191 -1656.2402 264.9341 -1660.2637 260.1641 -1664.1211 c255.7109 -1667.7227 253.2129 -1672.166 250.4043 -1677.0752 c247.4805 -1682.1855 244.1621 -1687.0586 241.3809 -1692.2471 c238.897 -1696.8809 236.8115 -1701.8994 235.1714 -1706.8906 c234.8726 -1707.7988 234.6563 -1708.7256 234.4927 -1709.6621 C230.6611 -1705.4805 226.7603 -1701.3613 223.0498 -1697.0703 c219.2461 -1692.6729 214.9404 -1688.7168 210.4048 -1685.0908 c205.4204 -1681.1064 198.9189 -1679.0332 192.9707 -1676.8604 c187.4404 -1674.8398 181.8032 -1673.1152 176.2075 -1671.2881 c172.5884 -1670.1055 169.2417 -1667.7549 165.5728 -1666.4902 c157.1069 -1663.5742 147.7339 -1664.2949 142.3408 -1672.0869 c136.6426 -1680.3193 140.1611 -1691.1035 142.7285 -1699.7793 c145.9526 -1710.6768 153.5703 -1721.2666 160.5518 -1730.1152 c166.2808 -1737.377 173.396 -1744.5762 180.9136 -1750.3623 C180.2642 -1750.3467 179.6147 -1750.3311 178.9609 -1750.3311 c165.0688 -1750.3311 150.1523 -1748.6133 137.1084 -1754.3311 c134.334 -1755.5479 131.75 -1756.9746 129.2388 -1758.668 c126.5337 -1760.4922 123.3179 -1761.5918 120.3511 -1762.9707 c113.897 -1765.9717 107.7256 -1769.4883 101.9111 -1773.5938 c92.0469 -1780.5586 83.9536 -1790.1582 79.4341 -1801.4063 c74.9258 -1812.627 79.5444 -1822.791 89.6626 -1828.4775 cf0 D212.9102 -2057.8467 m205.9312 -2058.3789 198.7368 -2057.8955 191.7378 -2057.8955 c177.1963 -2057.8955 162.5928 -2058.1123 148.1504 -2056.1299 c135.7891 -2054.4326 121.397 -2051.7188 111.4609 -2043.6211 c108.7368 -2041.4004 109.1958 -2039.8242 112.6392 -2039.4043 c119.188 -2038.6055 125.4282 -2037.3232 132.1006 -2037.4121 c139.1377 -2037.5049 146.1011 -2039.3037 153.0923 -2039.3086 c160.5547 -2039.3145 167.4092 -2040.0977 174.6045 -2042.0977 c188.2598 -2045.8936 201.25 -2051.0938 214.1997 -2056.7969 c214.7622 -2057.0449 215.3271 -2057.2715 215.8901 -2057.5127 C214.8999 -2057.6523 213.9077 -2057.7705 212.9102 -2057.8467 cf291.2295 -2046.3311 m294.2646 -2044.0078 297.1523 -2041.5078 300.0981 -2039.0752 c301.7002 -2037.7529 303.3877 -2036.585 305.1396 -2035.4727 c305.8105 -2035.0635 306.5005 -2034.6914 307.2012 -2034.3369 C307.1299 -2034.4541 307.6055 -2034.4404 308.6455 -2034.2939 C316.0449 -2034.1768 322.2935 -2030.6221 329.7192 -2031.083 c331.3018 -2031.1807 338.0698 -2031.9355 337.5747 -2033.8545 c336.2935 -2038.8223 327.896 -2042.0234 323.8599 -2044.0254 c316.458 -2047.6963 309.0146 -2050.8164 300.957 -2052.7578 c294.4326 -2054.3301 287.6372 -2054.5732 280.9023 -2054.5869 C284.1372 -2051.7129 287.5869 -2049.1191 291.2295 -2046.3311 cf252.9844 -1842.917 m251.6274 -1848.1914 249.8789 -1853.4141 247.4053 -1858.2881 c242.2954 -1868.3564 234.791 -1878.7734 226.8989 -1886.8115 c219.7954 -1894.0469 211.7646 -1901.0176 203.7227 -1907.1865 c196.0273 -1913.0889 186.9736 -1918.915 177.1147 -1920.0332 c168.5718 -1921.002 154.4536 -1916.9141 154.4536 -1906.3232 c154.4536 -1901.2773 154.0864 -1896.0693 154.958 -1891.084 c156.0898 -1884.6133 158.5566 -1877.6738 161.8442 -1872.002 c167.9302 -1861.502 174.5947 -1851.2891 182.9487 -1842.4395 c191.4365 -1833.4482 201.9185 -1826.6025 210.7378 -1817.9531 c211.9443 -1816.7695 212.4985 -1815.1504 212.5127 -1813.5146 C217.6597 -1821.6162 225.667 -1827.7041 234.541 -1831.6787 C238.0786 -1837.3018 246.3989 -1838.4912 252.9668 -1839.2354 c253.356 -1839.2793 253.7471 -1839.3203 254.1377 -1839.3623 C253.6851 -1840.4805 253.3076 -1841.6611 252.9844 -1842.917 cf262.0083 -1826.7705 m260.3066 -1826.7383 258.5928 -1826.6865 256.8833 -1826.585 C256.1914 -1825.1875 254.8574 -1824.0908 252.7573 -1823.7139 c233.623 -1820.2764 216.627 -1806.9785 219.5117 -1785.8965 c220.2017 -1780.8574 222.2666 -1776.1348 225.562 -1772.2686 c229.5796 -1767.5547 234.77 -1765.5088 240.5903 -1763.8447 c246.6948 -1762.0996 253.0269 -1761.7168 259.3418 -1761.668 c262.0967 -1761.6465 265.0044 -1763.084 267.5889 -1763.8984 c270.7671 -1764.9014 273.6484 -1765.1426 276.687 -1766.6514 c281.1821 -1768.8838 284.7021 -1772.0986 287.7378 -1776.0645 c290.5054 -1779.6807 290.2637 -1784.583 289.8833 -1788.8623 c289.0791 -1797.916 285.519 -1807.2373 280.7671 -1814.8896 c278.2554 -1818.9355 275.166 -1822.7617 271.0923 -1825.3018 c268.2759 -1827.0576 265.1758 -1826.8291 262.0083 -1826.7705 cf335.3574 -1739.376 m348.1284 -1730.918 362.6914 -1727.8721 376.0093 -1736.8408 c380.4434 -1739.8262 384.6758 -1744.4795 385.7114 -1749.8047 c386.9561 -1756.2061 384.042 -1762.1572 378.6509 -1765.5186 c372.2749 -1769.4941 364.667 -1772.2539 357.3643 -1773.8379 c351.0703 -1775.2031 345.3472 -1778.6768 339.0146 -1779.8613 C335.1763 -1777.7734 329 -1779.4854 329 -1785 C329 -1786.7559 L329 -1790.1953 332.1162 -1793.3926 335.6587 -1793.2559 c336.5166 -1793.2227 337.3584 -1793.1426 338.1934 -1793.043 C337.353 -1796.1738 338.479 -1799.9766 342.4019 -1801.3359 c347.335 -1803.0459 352.0933 -1805.2539 357.1021 -1806.7383 c361.9482 -1808.1738 367.2217 -1808.2813 372.1772 -1809.2344 c377.0469 -1810.1709 381.6548 -1810.6318 386.3979 -1812.2852 c391.5698 -1814.0889 396.9082 -1816.5332 401.3926 -1819.6689 c409.1348 -1825.0811 417.8208 -1829.9473 422.6636 -1838.375 c424.8857 -1842.2432 424.1255 -1847.123 423.7612 -1851.3809 c423.3838 -1855.7979 421.2202 -1859.3086 417.5322 -1861.6982 c411.1631 -1865.8262 402.2295 -1865.2246 394.9893 -1865.1016 c390.8145 -1865.0303 386.6401 -1865.0439 382.4648 -1865.0439 c379.4146 -1865.0439 379.167 -1865.1885 376.3545 -1864.0293 c373.9014 -1863.0186 371.4229 -1862.0781 369.0234 -1860.9443 c364.4326 -1858.7734 359.1455 -1857.7998 354.3164 -1856.2568 c351.6221 -1855.3955 349.0527 -1854.3496 346.5303 -1853.0732 c343.9878 -1851.7871 341.8706 -1849.6201 339.208 -1848.6514 c334.3916 -1846.8975 332.2178 -1843.7891 328.7759 -1840.3477 c327.1357 -1838.707 324.6699 -1838.459 322.8491 -1837.0498 c320.9561 -1835.585 319.4985 -1833.6396 318.1543 -1831.6885 c315.5425 -1827.8945 310.9277 -1828.1914 308.1309 -1830.3838 C305.0044 -1825.1738 295.4014 -1826.0957 296.0674 -1833.3066 c296.394 -1836.8418 297.3623 -1839.001 299.4561 -1841.8203 c301.7378 -1844.8936 303.105 -1848.4102 304.644 -1851.8975 c306.3071 -1855.665 306.9668 -1860.2227 308.2393 -1864.1699 c309.5991 -1868.3887 311.4331 -1872.1484 313.5181 -1876.0557 c315.3389 -1879.4688 316.8818 -1882.835 317.9121 -1886.5713 c319.0967 -1890.8691 318.4517 -1896.2373 318.3032 -1900.6377 c318.1445 -1905.3457 317.8052 -1910.0439 317.6943 -1914.7539 C318.4214 -1913.6064 318.355 -1913.9043 317.4946 -1915.6484 C317.2378 -1916.3223 317.0024 -1917.0049 316.7876 -1917.6943 c316.5029 -1918.5615 316.2446 -1919.7656 315.4907 -1920.2617 c313.7842 -1921.3857 315.4956 -1920.7158 313.4619 -1920.1709 c311.6138 -1919.6768 309.8188 -1918.7129 308.126 -1917.8457 c304.3896 -1915.9297 301.4648 -1912.7461 298.7739 -1909.6025 c292.9551 -1902.8047 287.939 -1894.3613 283.7349 -1886.4893 c281.8179 -1882.9004 280.4463 -1879.165 278.2261 -1875.7607 c275.876 -1872.1582 274.3242 -1868.1162 272.9785 -1864.0566 c270.2871 -1855.9346 269.2671 -1847.835 269.1831 -1839.3555 C272.5151 -1838.793 275.7393 -1837.7207 278.7412 -1835.8486 c287.9795 -1830.0889 294.8652 -1818.7549 298.2397 -1808.6445 c301.7451 -1798.1416 304.9624 -1786.4551 301.791 -1775.4707 c300.752 -1771.873 298.9092 -1768.7041 296.5576 -1765.9102 C298.4668 -1766.5957 300.7368 -1766.5566 302.5229 -1765.7676 c308.6914 -1763.042 313.373 -1758.1875 318.0005 -1753.4229 c323.2437 -1748.0225 329.0903 -1743.5264 335.3574 -1739.376 cf177.2266 -1728.9629 m170.5957 -1722.001 165.1089 -1714.8496 160.2778 -1706.5039 c155.981 -1699.082 152.0127 -1690.2598 152.3462 -1681.4707 c152.5894 -1675.0518 161.6543 -1678.6436 164.8091 -1680.0332 c168.0913 -1681.4785 170.9111 -1683.2227 174.3647 -1684.3496 c179.4258 -1686.0029 184.4971 -1687.6143 189.5146 -1689.3965 c193.8604 -1690.9385 198.9082 -1692.4414 202.5391 -1695.3438 c206.6382 -1698.6211 210.3564 -1702.3633 213.8574 -1706.2627 c220.4619 -1713.6201 227.7559 -1720.6621 233.7788 -1728.5234 c235.5898 -1730.8867 238.2861 -1732.3047 241.0903 -1731.5254 C244.3677 -1731.5615 247.6323 -1729.4717 247.5542 -1725.2432 c247.4736 -1720.8857 246.6792 -1716.3457 247.3218 -1712.0088 c247.9849 -1707.5342 250.5635 -1702.7979 252.606 -1698.8086 c254.7832 -1694.5547 257.5537 -1690.6475 259.9668 -1686.5303 c262.3979 -1682.3828 264.375 -1677.6318 268.0269 -1674.4219 c271.4585 -1671.4063 275.1587 -1668.792 278.3618 -1665.5137 c281.521 -1662.2803 284.3047 -1658.6445 288.0337 -1656.0273 c292.0083 -1653.2363 297.6484 -1653.6768 302.2749 -1653.6152 c306.8071 -1653.5557 312.354 -1652.6074 315.6895 -1656.2051 c321.9409 -1662.9463 321.9771 -1673.9746 321.459 -1682.4014 c320.8208 -1692.7695 321.1797 -1703.8223 317.1992 -1713.6338 c313.5815 -1722.5527 309.4717 -1732.2461 304.0356 -1740.1875 c299.6802 -1746.5508 293.5801 -1752.0879 292.7422 -1760.1553 c292.665 -1760.8994 292.7271 -1761.5723 292.8853 -1762.1846 C287.9341 -1757.8242 281.7852 -1754.5879 276.0327 -1752.2256 c274.6343 -1751.6514 272.5469 -1751.7627 271.0449 -1751.3633 c269.3643 -1750.916 267.7158 -1750.2852 266.0571 -1749.7617 c262.6792 -1748.6963 259.2222 -1748.6406 255.7202 -1748.7256 c248.3511 -1748.9023 240.9575 -1750.0488 233.9316 -1752.2734 c229.4551 -1753.6914 225.4565 -1755.8311 221.9707 -1758.502 C215.9683 -1753.3574 207.6909 -1750.4785 200.8242 -1746.625 c196.4155 -1744.1514 191.8379 -1742.6211 187.9043 -1739.3652 c184.0786 -1736.1992 180.646 -1732.5527 177.2266 -1728.9629 cf91.1294 -1807.5049 m93.4453 -1797.3271 102.9824 -1788.5195 111.2168 -1782.917 c116.1714 -1779.5449 121.5103 -1776.7686 126.9126 -1774.1953 c129.8423 -1772.8008 133.1733 -1771.7959 135.8003 -1769.8936 c138.1753 -1768.1729 140.8223 -1766.5566 143.5493 -1765.4824 c149.3125 -1763.2129 155.1748 -1763 161.2671 -1763 C182.8662 -1763 L188.6611 -1763 193.8823 -1766.2637 199.4912 -1766.4902 c203.897 -1766.667 208.0757 -1768.1719 212.376 -1769.127 C205.4473 -1780.3135 203.9561 -1794.7637 209.3896 -1807.5547 C208.4731 -1807.0195 207.3877 -1806.7344 206.1416 -1806.8564 c201.8799 -1807.2744 196.6084 -1808.8877 192.8857 -1811.0684 c190.3677 -1812.543 188.9194 -1812.8984 186.126 -1813.7383 c182.8311 -1814.7285 179.4458 -1815.335 176.1509 -1816.3242 c173.1196 -1817.2354 170.4355 -1818.9766 167.4224 -1819.9346 c163.7266 -1821.1113 159.9785 -1822.1006 156.2007 -1822.9746 c148.7568 -1824.6963 141.2124 -1825.1846 133.6143 -1824.4268 c124.7866 -1823.5459 115.5469 -1822.4902 106.8438 -1820.7246 c102.8081 -1819.9053 98.8672 -1818.7373 95.2686 -1816.7148 c91.3291 -1814.501 90.124 -1811.9219 91.1294 -1807.5049 cf*U*u1 D1715.7007 -1976.4043 m1711.8623 -1976.4043 1708.0273 -1976.3936 1704.1909 -1976.2559 c1699.7241 -1976.0957 1695.1709 -1974.7666 1690.7627 -1974.7637 c1687.4648 -1974.7617 1683.9536 -1974.79 1680.501 -1974.4639 C1679.9805 -1973.4473 1679.4595 -1972.4287 1678.9404 -1971.4043 c1672.6484 -1958.9795 1664.5791 -1947.5137 1655.3794 -1937.0801 c1652.5918 -1933.918 1649.6797 -1930.9736 1646.5967 -1928.25 C1650.79 -1920.8965 1656.2617 -1913.6152 1664.228 -1911.0625 c1672.1787 -1908.5156 1668.7783 -1895.9619 1660.772 -1898.5273 c1649.7646 -1902.0527 1642.0454 -1910.7979 1636.1816 -1920.4619 C1635.0996 -1919.793 1633.9956 -1919.1475 1632.8633 -1918.5303 c1624.0967 -1913.751 1614.1611 -1908.9912 1604.3779 -1906.8398 c1603.5342 -1906.6543 1602.7432 -1906.6289 1602.0073 -1906.7217 C1601.6294 -1906.5557 1601.2451 -1906.4072 1600.8481 -1906.291 c1597.54 -1905.3184 1593.8936 -1905.1055 1590.4668 -1904.9717 c1588.8857 -1904.9092 1587.3223 -1904.6348 1585.7646 -1904.3037 C1586.8452 -1903.2607 1587.5498 -1901.7656 1587.5371 -1899.8076 c1587.5098 -1895.5811 1587.3457 -1891.373 1587.6201 -1887.1484 c1587.7588 -1885.0127 1588.1748 -1882.9688 1588.8203 -1880.9287 c1589.1675 -1879.8291 1590.1538 -1879.6592 1589.3496 -1879.707 c1597.6787 -1879.208 1597.7271 -1866.2051 1589.3496 -1866.707 c1573.1021 -1867.6797 1574.4619 -1888.1133 1574.5371 -1899.8076 c1574.5435 -1900.791 1574.7334 -1901.6543 1575.0542 -1902.4072 C1572.981 -1902.1758 1570.9004 -1902.002 1568.8237 -1901.8682 c1554.6021 -1900.9492 1537.8364 -1901.2656 1524.6157 -1907.0596 c1522.9883 -1907.7725 1521.4072 -1908.5547 1519.8623 -1909.3926 C1514.7627 -1903.9375 1511.751 -1896.6914 1505.833 -1891.8867 c1502.0786 -1888.8379 1497.4307 -1888.0215 1492.7163 -1887.9043 c1490.5723 -1887.8506 1488.4043 -1888.082 1486.2666 -1888.2119 c1483.9487 -1888.3525 1481.9282 -1887.707 1479.6563 -1887.3975 c1475.083 -1886.7744 1470.7227 -1887.4912 1466.2583 -1888.5518 c1461.4336 -1889.6973 1456.439 -1890.0381 1451.5918 -1891.123 C1451.0654 -1890.7559 1450.4609 -1890.4453 1449.7642 -1890.2148 c1446.4009 -1889.1025 1444.7764 -1882.3594 1443.0674 -1879.5732 c1439.3789 -1873.5596 1437.7334 -1866.6943 1436.0166 -1859.8418 c1434.2607 -1852.832 1434.5278 -1845.4561 1434.6138 -1838.2842 c1434.6914 -1831.7969 1435.6992 -1825.6055 1439.6846 -1820.2949 c1444.2305 -1814.2363 1448.979 -1808.3945 1454.2954 -1802.9902 c1456.3965 -1800.8555 1457.626 -1797.9697 1459.7891 -1795.7725 c1462.1885 -1793.335 1465.2363 -1791.2568 1468.4497 -1790.0684 c1479.4702 -1785.9932 1484.5986 -1799.9854 1484.7617 -1808.3691 c1484.9243 -1816.7412 1497.9248 -1816.7568 1497.7617 -1808.3691 c1497.4697 -1793.3262 1489.4014 -1778.2578 1473.2822 -1776.5029 c1464.7373 -1775.5723 1456.5273 -1781.0762 1450.5967 -1786.5801 c1447.0313 -1789.8887 1444.5918 -1794.2236 1441.2988 -1797.7881 c1437.8008 -1801.5752 1434.6099 -1805.6494 1431.4829 -1809.7432 c1425.7925 -1817.1943 1422.646 -1824.3535 1421.8057 -1833.7432 c1420.9902 -1842.8555 1421.3833 -1852.5059 1423.0679 -1861.4854 c1424.729 -1870.3418 1427.6548 -1879.3066 1432.3408 -1886.9473 c1434.4956 -1890.4609 1436.0645 -1893.998 1438.2969 -1896.9346 C1434.4531 -1899.4414 1430.9072 -1902.4551 1427.6465 -1905.6016 c1424.2754 -1908.8545 1422.3438 -1912.2529 1421.2573 -1915.9189 C1417.6172 -1913.791 1414.2095 -1911.2598 1410.3262 -1909.5732 c1405.0645 -1907.2871 1399.7959 -1905.0459 1394.2783 -1903.4717 c1382.1592 -1900.0127 1369.0898 -1897.7139 1356.5103 -1896.9277 c1350.3794 -1896.5449 1344.0176 -1897.2383 1337.9604 -1896.2471 c1331.8115 -1895.2412 1325.6343 -1894.4277 1319.3994 -1894.2842 c1308.1895 -1894.0264 1296.5977 -1897.1807 1286.4155 -1901.6914 c1268.0186 -1909.8408 1249.3047 -1925.7012 1245.9072 -1946.5127 c1244.0283 -1958.0225 1246.7012 -1969.3232 1254.1201 -1978.335 c1257.1943 -1982.0684 1261.7822 -1984.6494 1265.5781 -1987.5957 c1270.0532 -1991.0684 1274.5698 -1994.2139 1280.0571 -1995.8506 c1288.1108 -1998.2539 1291.5264 -1985.7061 1283.5132 -1983.3154 c1279.7988 -1982.207 1276.6064 -1979.8281 1273.5742 -1977.4746 c1270.1108 -1974.7871 1266.3066 -1972.3525 1263.3125 -1969.1426 c1256.7295 -1962.084 1257.5244 -1950.4844 1260.4233 -1942.0938 c1263.0928 -1934.3662 1270.2471 -1927.7363 1276.375 -1922.6758 c1283.2061 -1917.0361 1291.5361 -1913.1006 1299.9287 -1910.4463 c1309.4307 -1907.4404 1318.877 -1906.8359 1328.751 -1907.9375 c1334.4541 -1908.5732 1339.8135 -1909.6191 1345.5732 -1909.6426 c1350.9644 -1909.665 1356.3467 -1909.8271 1361.7158 -1910.334 c1372.689 -1911.3682 1384.0332 -1913.9121 1394.563 -1917.1084 c1403.8262 -1919.9219 1411.3359 -1925.9053 1420.0254 -1929.7764 C1420.3081 -1939.6689 1422.3076 -1948.9785 1426.5146 -1957.9434 c1430.2788 -1965.9639 1436.4629 -1972.5547 1442.6382 -1978.7813 c1447.8901 -1984.0762 1454.2979 -1986.8447 1461.0947 -1984.9424 C1460.3267 -1989.0146 1459.7178 -1993.1299 1459.2007 -1997.2725 c1458.6084 -2002.0195 1458.2549 -2006.7754 1458.1836 -2011.5469 C1457.623 -2011.4082 1457.0156 -2011.3311 1456.3491 -2011.3457 c1452.7109 -2011.4258 1449.1421 -2011.8691 1445.5527 -2012.4521 c1441.9385 -2013.0391 1438.1689 -2014.6436 1434.5088 -2014.6992 c1426.7168 -2014.8184 1418.9932 -2016.6885 1411.3955 -2018.2275 c1403.1821 -2019.8906 1406.6675 -2032.4199 1414.8516 -2030.7627 c1421.3853 -2029.4395 1427.8291 -2028.002 1434.5088 -2027.6992 c1441.8921 -2027.3652 1448.8633 -2024.5107 1456.3491 -2024.3457 c1457.438 -2024.3223 1458.3823 -2024.0771 1459.1885 -2023.6768 C1460.2231 -2027.9561 1461.9775 -2031.9805 1464.0361 -2036.0811 c1467.0044 -2041.9922 1469.8716 -2048.6924 1474.4741 -2053.5322 c1476.8647 -2056.0459 1478.9038 -2058.915 1481.124 -2061.5781 c1481.6357 -2062.1924 1482.1846 -2062.75 1482.751 -2063.2832 C1481.9746 -2064.0986 1481.3975 -2065.1563 1481.1445 -2066.4629 C1481.0957 -2066.501 1481.0488 -2066.5391 1481 -2066.5762 c1473.3477 -2072.4287 1462.0166 -2075.8906 1461.377 -2087.6709 c1460.9219 -2096.0518 1473.979 -2096.0078 1474.4316 -2087.6709 c1474.4146 -2087.9844 1474.6836 -2087.1045 1474.9053 -2086.7275 c1475.3203 -2086.0225 1476.52 -2085.0371 1477.3057 -2084.3584 c1479.2383 -2082.6855 1481.6421 -2081.5654 1483.8213 -2080.2461 c1487.7852 -2077.8477 1492.04 -2075.3682 1493.7031 -2071.5254 C1497.7188 -2074.8887 1501.3594 -2078.6826 1505.5439 -2081.8691 c1511.1543 -2086.1406 1517.229 -2089.6582 1523.3608 -2093.1162 c1525.1465 -2094.123 1526.938 -2095.0771 1528.7349 -2096 C1526.2417 -2099.4492 1525.1816 -2103.8262 1524.333 -2108.002 c1522.9155 -2114.9795 1519.019 -2120.875 1516.582 -2127.5059 c1513.6831 -2135.3916 1526.2505 -2138.7617 1529.1172 -2130.9609 c1531.2607 -2125.1299 1534.832 -2119.9238 1536.3594 -2113.8467 c1537.3579 -2109.874 1537.2891 -2104.9434 1540.7456 -2102.2422 c1540.9619 -2102.0732 1541.1592 -2101.8994 1541.3418 -2101.7227 C1548.2598 -2104.459 1555.3838 -2106.6328 1562.9043 -2108.2148 c1569.5474 -2109.6123 1576.2896 -2110.5313 1583.0259 -2111.3398 c1589.9512 -2112.1709 1597.3647 -2111.6865 1604.1108 -2113.3398 c1610.7041 -2114.9561 1617.8066 -2115.7021 1624.6104 -2115.8311 c1632.3242 -2115.9766 1639.9951 -2116.583 1647.6821 -2115.6201 c1660.6924 -2113.9902 1674.0835 -2107.2949 1683.293 -2097.9883 c1690.0283 -2091.1816 1693.4126 -2082.3672 1695.4302 -2073.1953 C1697.792 -2071.9111 1699.4634 -2069.3506 1698.6934 -2065.9922 c1698.395 -2064.6895 1697.9185 -2063.543 1697.2764 -2062.4629 C1697.436 -2061.2813 1697.5898 -2060.1025 1697.7334 -2058.9336 c1698.666 -2051.3555 1699.3398 -2043.7754 1699.1104 -2036.1328 c1698.8706 -2028.168 1697.1831 -2020.0273 1695.6816 -2012.2178 c1693.9878 -2003.4043 1690.8193 -1995.4414 1687.1211 -1987.6514 C1696.6592 -1987.8848 1706.0908 -1989.373 1715.7007 -1989.377 c1724.084 -1989.3799 1724.084 -1976.4082 1715.7007 -1976.4043 cf0 D1464.1196 -1972.3203 m1462.4053 -1971.3848 1460.2705 -1971.1875 1458.0557 -1972.333 c1454.2959 -1974.2773 1449.6523 -1967.3262 1447.5288 -1965 c1442.5483 -1959.5439 1438.498 -1954.0605 1435.937 -1947.0371 c1433.3086 -1939.8311 1432.9961 -1932.1816 1432.9297 -1924.5957 c1432.8706 -1917.793 1436.8345 -1914.2764 1442.0469 -1910.2744 c1448.0435 -1905.6699 1453.9629 -1903.6416 1461.4019 -1902.4424 c1468.0205 -1901.375 1474.6475 -1899.0391 1481.2212 -1901.0869 c1484.6113 -1902.1436 1489.207 -1900.9727 1492.7163 -1900.9043 c1496.5195 -1900.8301 1498.272 -1902.2529 1500.6543 -1905.0332 c1503.7549 -1908.6514 1506.001 -1912.8164 1508.9043 -1916.5059 C1508.2134 -1917.0176 1507.5259 -1917.5361 1506.8408 -1918.0605 c1501.311 -1922.293 1495.5752 -1926.3115 1490.3022 -1930.8652 c1481.1602 -1938.7607 1473.8936 -1948.8633 1468.8228 -1959.7871 c1466.9238 -1963.8779 1465.3896 -1968.0645 1464.1196 -1972.3203 Cf1669.4453 -2092.9609 m1664.3545 -2096.7686 1658.4355 -2099.3105 1652.4595 -2101.3535 c1645.3169 -2103.7949 1637.5166 -2103.2686 1630.0947 -2103.0078 c1626.4434 -2102.8789 1622.7881 -2102.8564 1619.1387 -2102.7119 c1615.9307 -2102.584 1612.6436 -2101.5518 1609.4365 -2101.1924 c1606.0713 -2100.8154 1602.8359 -2099.8086 1599.4224 -2099.5469 c1595.5913 -2099.2529 1591.7734 -2099.25 1587.9365 -2098.873 c1573.9199 -2097.4961 1559.9648 -2094.9785 1546.688 -2090.1904 c1540.2383 -2087.8643 1534.3765 -2084.4033 1528.4277 -2081.0488 c1522.8477 -2077.9014 1517.2183 -2074.6846 1512.1943 -2070.6836 c1506.8569 -2066.4336 1502.2212 -2061.5234 1496.6582 -2057.5029 c1491.3359 -2053.6563 1486.3662 -2048.79 1482.7432 -2043.209 c1478.9971 -2037.4395 1475.4463 -2030.9336 1472.8535 -2024.5615 c1470.6401 -2019.1211 1471.0645 -2013.0332 1471.2925 -2007.2939 c1471.7891 -1994.793 1474.1475 -1981.9287 1478.4668 -1970.1885 c1482.4175 -1959.4512 1489.0894 -1949.9297 1497.3086 -1942.0469 c1499.5859 -1939.8633 1502.0459 -1937.9209 1504.5508 -1936.0332 C1505.0669 -1936.1582 1505.6216 -1936.2324 1506.2246 -1936.2324 c1511.2139 -1936.2334 1516.2002 -1936.2578 1521.1865 -1936.4404 c1526.0708 -1936.6191 1531.6958 -1936.541 1536.2456 -1938.4365 c1546.1382 -1942.5576 1556.2539 -1946.1211 1566.1187 -1950.3076 c1570.2222 -1952.0498 1574.0869 -1955.0479 1578.0278 -1957.1758 c1582.6914 -1959.6934 1587.5645 -1961.8135 1592.5288 -1963.6592 c1597.0684 -1965.3477 1601.8086 -1968.4492 1606.0195 -1970.8691 c1609.7725 -1973.0254 1612.9961 -1977.5332 1616.0454 -1980.583 c1623.2231 -1987.7607 1631.084 -1993.9824 1637.8232 -2001.668 c1643.9766 -2008.6865 1650.5293 -2015.0137 1655.1079 -2023.2422 c1659.6865 -2031.4697 1666.7983 -2037.0156 1672.3887 -2044.417 c1675.1426 -2048.0635 1676.4951 -2052.0283 1678.5 -2056.0391 C1681.8252 -2062.6895 L1682.3799 -2063.7969 1682.9336 -2064.9063 1683.4883 -2066.0137 c1683.5361 -2066.1094 1683.5996 -2066.1963 1683.6582 -2066.2861 C1681.7974 -2076.5664 1678.2485 -2086.377 1669.4453 -2092.9609 cf1684.5332 -2039.1523 m1679.145 -2030.999 1671.1367 -2025.2295 1666.333 -2016.6807 c1661.418 -2007.9355 1654.5352 -2001.4668 1648.1953 -1993.8555 c1641.2456 -1985.5137 1632.8506 -1979.0029 1625.2378 -1971.3906 c1622.0112 -1968.1641 1618.7852 -1964.9375 1615.5586 -1961.7109 c1611.7764 -1957.9287 1605.5303 -1956.0703 1600.9434 -1953.4336 c1596.2764 -1950.752 1590.9683 -1949.2051 1586.1294 -1946.7568 c1581.5244 -1944.4277 1577.1035 -1941.7344 1572.6802 -1939.083 c1568.0337 -1936.2969 1562.1108 -1934.7148 1557.0635 -1932.7627 c1551.8647 -1930.752 1546.6602 -1928.7627 1541.501 -1926.6504 c1535.5195 -1924.2012 1528.7754 -1923.4238 1521.998 -1923.2129 C1524.4404 -1921.668 1526.958 -1920.2383 1529.5859 -1918.9814 c1536.1816 -1915.8281 1545.0537 -1915.2324 1552.2632 -1914.7324 c1558.8091 -1914.2773 1565.5596 -1914.582 1572.0923 -1915.1045 c1578.8799 -1915.6484 1585.2432 -1917.7666 1592.0415 -1918.0332 c1595.6504 -1918.1738 1597.1797 -1918.5732 1599.8618 -1920.3203 c1602.6499 -1922.1377 1606.0659 -1922.6768 1609.2998 -1922.9326 c1610.0039 -1922.9883 1610.6436 -1922.9395 1611.2285 -1922.8174 C1613.9004 -1923.9404 1616.5435 -1925.1563 1619.249 -1926.3203 c1623.4224 -1928.1172 1627.5444 -1930.2129 1631.3809 -1932.71 C1632.1787 -1935.793 1635.2832 -1938.0195 1638.2588 -1937.9648 C1647.9941 -1946.5791 1655.9893 -1957.7656 1662.6396 -1968.791 c1663.2549 -1969.8115 1663.8657 -1970.8359 1664.4741 -1971.8633 C1660.5132 -1974.2705 1659.2139 -1981.0596 1664.207 -1983.335 c1666.8633 -1984.5459 1669.5781 -1985.4258 1672.3408 -1986.0664 C1676.0205 -1993.3242 1679.2095 -2000.8154 1681.4565 -2008.6406 c1684.5488 -2019.4092 1685.9673 -2030.4063 1685.9346 -2041.4746 C1685.4941 -2040.6914 1685.0366 -2039.9141 1684.5332 -2039.1523 cf*U*u1 D1535.7725 -2000.6904 m1528.8242 -1997.3105 1520.7495 -2000.002 1515.3916 -2005.2764 C1515.123 -2005.3623 1514.853 -2005.4609 1514.5811 -2005.583 c1505.2554 -2009.7822 1506.5547 -2025.7764 1510.4414 -2033.2734 c1513.2295 -2038.6533 1519.1357 -2041.6572 1524.958 -2042.0225 c1531.186 -2042.4131 1536.4229 -2037.6318 1539.2627 -2032.5957 c1544.27 -2023.7148 1546.8037 -2006.0557 1535.7725 -2000.6904 cf0 D1530.2603 -2016.1826 m1530.2339 -2018.9756 1529.6123 -2021.6572 1528.7734 -2024.3066 c1527.5801 -2028.0762 1524.4658 -2031.0264 1521.6665 -2026.7129 c1520.7031 -2025.2275 1520.9678 -2022.9492 1520.8555 -2021.248 c1520.8472 -2021.124 1520.8491 -2021.001 1520.8423 -2020.877 C1521.5732 -2020.1484 1522.146 -2019.1689 1522.4668 -2017.9102 c1523.1978 -2015.043 1526.6328 -2011.5879 1529.8857 -2012.2734 c1530 -2012.2979 1530.0713 -2012.3418 1530.1172 -2012.3818 C1530.3574 -2013.6064 1530.2715 -2014.9492 1530.2603 -2016.1826 cf*U*u1 D1581.4199 -2037.7305 m1581.2236 -2038.8223 1581.2383 -2039.916 1581.4634 -2040.9346 C1578.8579 -2043.1016 1577.3647 -2046.3389 1578.0327 -2050.3613 c1578.4976 -2053.1592 1580.5439 -2054.6133 1582.0503 -2056.4502 c1584.0537 -2058.8936 1587.2627 -2060.4609 1590.2358 -2061.3027 c1596.1665 -2062.9824 1602.3984 -2060.7803 1606.8496 -2056.8252 c1610.1255 -2053.9141 1613.3574 -2048.3701 1614.0605 -2044.0283 c1617.1187 -2025.1406 1584.6982 -2019.4922 1581.4199 -2037.7305 cf0 D1600.8638 -2042.8086 m1600.9395 -2042.5986 1600.9492 -2042.6016 1600.8638 -2042.8086 C1600.8638 -2042.8086 Lf1601.166 -2041.498 m1601.0566 -2041.9688 1600.9854 -2042.4316 1600.832 -2042.8857 C1600.7847 -2042.998 1600.7183 -2043.1494 1600.6294 -2043.3408 C1600.2354 -2044.0742 1599.7422 -2044.752 1599.2598 -2045.4268 c1598.7808 -2046.0986 1598.3125 -2047.2002 1597.6494 -2047.7012 c1596.5366 -2048.541 1595.1611 -2049.0166 1593.8457 -2048.8125 C1595.9736 -2046.4111 1596.1777 -2042.5479 1594.4282 -2040.127 C1594.4785 -2040.0859 1594.5195 -2040.0527 1594.5459 -2040.0313 C1594.6592 -2040.0059 1594.8203 -2039.9629 1595.0625 -2039.8867 c1595.3882 -2039.792 1595.7178 -2039.7119 1596.0498 -2039.6445 C1596.1348 -2039.6436 1596.2388 -2039.6396 1596.3911 -2039.6299 c1596.7104 -2039.6094 1598.1416 -2039.7334 1598.3433 -2039.7139 C1598.9204 -2039.835 1599.4883 -2039.9941 1600.0464 -2040.1836 C1599.165 -2039.9395 1601.1338 -2041.0195 1600.9648 -2040.7207 C1601.0635 -2040.8125 1601.1689 -2040.8975 1601.2632 -2040.9951 C1601.2676 -2041 1601.0908 -2041.002 1601.0947 -2041.0059 C1601.1182 -2041.0469 1601 -2041.0967 1601 -2041.1504 c1601 -2041.1699 1601 -2041.1855 1601 -2041.209 c1601 -2041.3271 1601.1689 -2041.4189 1601.166 -2041.498 Cf*U*u1 D1876.4639 -1985.9482 m1885.0117 -1995.9932 1895.4023 -2004.4014 1905.3887 -2012.9463 c1924.3955 -2029.21 1948.1709 -2037.3789 1973.1963 -2037.6387 C1973.584 -2048.7695 1973.54 -2059.8965 1973.54 -2071.0459 c1973.54 -2075.1006 1975.1846 -2079.5557 1975.9102 -2083.5479 c1976.666 -2087.7012 1976.4258 -2091.9189 1977.0977 -2096.0488 c1978.4883 -2104.6094 1981.8955 -2112.6191 1984.0527 -2120.9863 c1986.1299 -2129.0459 1986.4336 -2137.8027 1987.5752 -2146.0605 c1987.7129 -2147.0547 1987.8496 -2148.0352 1987.998 -2149 C2001.1572 -2149 L2001.0938 -2148.5225 2001.0234 -2148.0381 2000.9141 -2147.5557 c2000.1621 -2144.249 1999.9316 -2140.8184 1999.5469 -2137.4551 c1998.7266 -2130.2773 1997.9648 -2122.8691 1996.1602 -2115.8682 c1994.4258 -2109.1426 1991.7959 -2102.6973 1990.2334 -2095.918 c1989.4443 -2092.4951 1989.6621 -2088.7773 1989.2217 -2085.2783 c1988.7041 -2081.165 1987.9023 -2077.1074 1987.0693 -2073.0488 c1985.7285 -2066.5146 1986.54 -2059.2637 1986.54 -2052.6084 c1986.54 -2051.168 1986.5234 -2049.7305 1986.5059 -2048.292 C1996.0566 -2054.9619 2010.2813 -2053.084 2021.4775 -2051.5605 c2028.3789 -2050.6221 2036.8027 -2049.8984 2042.5996 -2045.6484 c2048.8867 -2041.0391 2050.1426 -2033.4023 2049.5527 -2026.0508 c2048.9824 -2018.9258 2046.1777 -2011.8398 2040.1465 -2007.6299 c2033.7295 -2003.1514 2024.2988 -2001.5898 2016.6152 -2001.3701 c2005.0996 -2001.041 1993.916 -2006.9219 1984.9922 -2014.7588 C1984.4834 -2005.1592 1984.1592 -1995.5576 1984.6299 -1985.9355 c1984.9775 -1978.8203 1985.9834 -1971.8145 1987.6484 -1964.8906 c1989.4414 -1957.4355 1991.1055 -1949.8291 1993.2803 -1942.4707 c1996.6816 -1930.9629 2005.125 -1922.4238 2016.2969 -1918.1387 c2021.7012 -1916.0664 2029.3691 -1914.6201 2035.1582 -1914.6201 c2043.3232 -1914.6201 2051.8369 -1913.9385 2059.9531 -1914.8105 c2074.0801 -1916.3301 2087.7158 -1921.292 2099.7852 -1928.6943 c2102.7119 -1930.4902 2106.0664 -1931.4971 2108.9961 -1933.3564 c2111.8369 -1935.1592 2114.0557 -1937.5986 2116.1855 -1940.1729 c2120.1631 -1944.9814 2126.4951 -1948.502 2128.3857 -1954.7354 c2130.8115 -1962.7354 2143.3604 -1959.3232 2140.9209 -1951.2803 c2139.2363 -1945.7256 2135.8369 -1941.3408 2131.7373 -1937.3281 c2129.9766 -1935.6045 2128.1309 -1933.9971 2126.4365 -1932.2051 c2124.0664 -1929.6973 2122.2041 -1926.626 2119.1592 -1924.8184 c2116.501 -1923.2393 2114.2773 -1921.2363 2111.4727 -1919.832 c2108.7607 -1918.4736 2106.0898 -1917.2852 2103.4707 -1915.7393 c2097.2197 -1912.0488 2090.4521 -1909.1885 2083.5967 -1906.8398 c2077.0645 -1904.6016 2070.2715 -1903.2031 2063.4434 -1902.2598 c2055.377 -1901.1445 2047.127 -1901.6201 2038.9951 -1901.6201 c2025.6973 -1901.6201 2012.2217 -1904.543 2000.8936 -1911.6768 c1990.1973 -1918.4111 1983.7891 -1928.7158 1980.2568 -1940.6641 c1978.2402 -1947.4863 1976.9023 -1954.5488 1975.1133 -1961.4346 c1973.1885 -1968.8408 1972.2813 -1976.543 1971.7363 -1984.1611 c1971.1523 -1992.3174 1971.2734 -2000.501 1971.6387 -2008.6777 C1967.8545 -2002.7998 1963.5049 -1997.2275 1959.2822 -1991.9492 c1950.0771 -1980.4414 1941.4355 -1969.0879 1929.9258 -1959.7549 c1919.8237 -1951.5645 1908.4746 -1946.1934 1896.2969 -1941.8076 c1884.5254 -1937.5684 1872.2354 -1939.2656 1866.8584 -1951.6953 c1864.3613 -1957.4697 1863.4302 -1962.6738 1865.3433 -1968.8027 c1867.3677 -1975.2891 1872.1382 -1980.8652 1876.4639 -1985.9482 cf0 D2010.9541 -2014.7539 m2016.3008 -2013.5752 2021.9551 -2014.7832 2027.1279 -2016.1367 c2032.6553 -2017.583 2035.2695 -2019.792 2036.4551 -2025.4268 c2036.958 -2027.8135 2037.542 -2033.3213 2035.2197 -2035.0234 c2031.3105 -2037.8896 2024.2939 -2038.1094 2019.667 -2038.8008 c2014.4688 -2039.5791 2009.2188 -2039.5605 2003.9805 -2039.7148 c1999.8086 -2039.8379 1994.8877 -2040.0449 1992.3018 -2036.1777 c1990.6953 -2033.7744 1988.291 -2032.9883 1986.0293 -2033.2754 C1986.0156 -2032.9854 1986.002 -2032.6943 1985.9863 -2032.4043 C1992.25 -2024.8428 2001.4609 -2016.8467 2010.9541 -2014.7539 cf1877.5923 -1959.6133 m1879.1992 -1955.8301 1879.959 -1952.8789 1884.4307 -1952.5332 c1889.2891 -1952.1582 1894.7173 -1954.9727 1899.0835 -1956.7607 c1909.1611 -1960.8867 1917.8623 -1966.2344 1926.0449 -1973.4414 c1935.2715 -1981.5674 1942.4375 -1991.5742 1950.0898 -2001.1406 c1955.6035 -2008.0332 1961.8809 -2016.0039 1965.6602 -2024.2998 C1949.0293 -2023.0039 1930.8916 -2017.9082 1918.5342 -2007.1357 c1910.2373 -1999.9043 1901.7095 -1992.9326 1893.7793 -1985.291 c1890.1631 -1981.8066 1886.7495 -1978.1172 1883.5581 -1974.2412 c1880.6724 -1970.7354 1875.501 -1964.54 1877.5923 -1959.6133 cf*U*u1 D2277.8643 -1962.8838 m2275.292 -1951.1084 2270.6924 -1939.6992 2260.1279 -1933.0547 c2248.6416 -1925.8301 2234.6621 -1924.2598 2221.6367 -1927.0146 c2219.9229 -1927.377 2218.1348 -1927.8389 2216.3271 -1928.3877 C2216.5742 -1926.1602 2216.7793 -1924.0098 2217.0156 -1922.0527 c2217.8779 -1914.916 2219.2295 -1903.9287 2213.8008 -1898.0742 c2207.0303 -1890.7725 2198.0928 -1899.0928 2192.3018 -1903.585 c2185.1895 -1909.1025 2180.1875 -1917.6777 2177.8125 -1926.3086 c2176.8359 -1929.8564 2175.1523 -1933.1992 2173.5938 -1936.5625 C2171.4775 -1932.5332 2169.0352 -1928.6484 2166.8662 -1924.666 C2166.1221 -1922.6719 2165.8467 -1922.5479 2166.041 -1924.292 c2165.915 -1923.1465 2165.7578 -1922.248 2165.4336 -1921.1797 c2164.875 -1919.3408 2164.002 -1917.5576 2163.125 -1915.8535 c2161.1709 -1912.0537 2157.4492 -1908.2695 2152.8828 -1908.2695 c2142.4824 -1908.2695 2143 -1921.5078 2143 -1928.6484 C2143 -1962.9697 L2137.7207 -1962.6875 2132.4805 -1962.0654 2127.2373 -1961.2607 c2120.4756 -1960.2227 2114.0186 -1958.1836 2107.2754 -1957.0557 c2100.8105 -1955.9736 2094.249 -1955.5488 2087.7129 -1956.0967 c2082.9922 -1956.4922 2075.9375 -1957.6484 2073.4727 -1962.4277 c2068.7695 -1971.5479 2078.8018 -1977.792 2085.4229 -1981.8564 c2090.0508 -1984.6973 2095.2246 -1986.5635 2100.0605 -1989.0859 c2105.5742 -1991.9629 2111.0986 -1994.0049 2117.3086 -1994.3672 C2111.0977 -2001.1289 2108.5439 -2009.958 2108.3633 -2019.4541 c2108.2656 -2024.5605 2109.1309 -2029.8174 2110.5918 -2034.6973 c2112.6914 -2041.7061 2118.3184 -2046.8154 2122.3906 -2052.7148 c2125.7217 -2057.541 2128.1113 -2062.0723 2132.8545 -2065.7832 c2138.7666 -2070.4072 2146.4424 -2072.9707 2152.9844 -2076.7197 c2166.377 -2084.3936 2180.5469 -2090.7988 2195.0869 -2096.0576 c2206.8584 -2100.3145 2220.5625 -2104.3516 2233.2109 -2103.6162 c2245.9219 -2102.877 2255.9531 -2096.04 2263.291 -2085.9648 c2264.9883 -2083.6338 2265.4209 -2080.252 2266.6162 -2077.6523 c2267.9678 -2074.7129 2269.3398 -2072.0781 2271.1738 -2069.4004 c2275.1348 -2063.6152 2276.6738 -2056.4824 2278.251 -2049.7432 c2281.5771 -2035.5254 2283.1631 -2021.208 2283.1152 -2006.5908 c2283.0918 -1999.3594 2282.5244 -1992.126 2281.5137 -1984.9678 c2280.4805 -1977.6484 2279.4395 -1970.0947 2277.8643 -1962.8838 cf0 D2183.5156 -1947.1582 m2183.9063 -1941.876 2188.0361 -1936.2598 2189.8418 -1931.3291 c2191.7666 -1926.0742 2193.5088 -1920.916 2197.2529 -1916.5957 c2199.2559 -1914.2842 2201.8789 -1913.0645 2204.0879 -1911.0527 c2204.2617 -1910.8945 2204.4434 -1910.7324 2204.6299 -1910.5684 C2204.6738 -1912.082 2204.6006 -1913.6064 2204.5547 -1915.1113 c2204.3672 -1921.2129 2203.3164 -1927.2188 2202.1563 -1933.1963 c2202.0068 -1933.9658 2201.8691 -1934.7217 2201.7158 -1935.458 C2198.3613 -1937.9707 2195.5693 -1941.0361 2193.8789 -1944.7393 c2193.8672 -1944.7656 2193.8594 -1944.793 2193.8467 -1944.8193 C2190.5088 -1946.5693 2186.873 -1947.9736 2183.46 -1949.2607 c2183.416 -1949.2773 2183.373 -1949.293 2183.3291 -1949.3086 C2183.4014 -1948.6084 2183.4609 -1947.8926 2183.5156 -1947.1582 cf2156 -1938.4063 m2156 -1936.2363 2156.0117 -1934.0654 2156.0234 -1931.8945 C2157.5234 -1934.6465 2159.0801 -1937.3652 2160.625 -1940.0938 c2163.3975 -1944.9912 2164.9316 -1950.8467 2167.6729 -1955.7949 C2163.6855 -1958.0449 2159.8896 -1960.668 2156 -1963.1074 C2156 -1938.4063 Lf2106.6221 -1977.8604 m2102.6719 -1975.8486 2097.8018 -1974.3428 2094.1318 -1971.958 c2092.4512 -1970.8662 2090.7334 -1969.8408 2089.0488 -1968.7607 C2097.3525 -1967.5371 2107.2275 -1969.8574 2114.8535 -1972.1123 c2121.0518 -1973.9443 2127.8799 -1974.9766 2134.6699 -1975.541 C2130.7363 -1978.2949 2126.9248 -1981.2246 2123.1582 -1984.2051 C2122.1338 -1982.6426 2120.4258 -1981.5078 2118.0283 -1981.4199 c2113.8574 -1981.2676 2110.292 -1979.7305 2106.6221 -1977.8604 cf2267.7246 -2037.3525 m2266.1953 -2043.6445 2264.9805 -2049.9834 2263.0928 -2056.1875 c2261.1328 -2062.6279 2256.4766 -2067.8438 2254.0283 -2074.1826 c2251.8018 -2079.9453 2249.0205 -2083.9863 2243.6523 -2087.3262 c2238.9072 -2090.2783 2233.3496 -2090.8711 2227.8887 -2090.6641 c2222.1123 -2090.4443 2216.5439 -2088.5576 2210.957 -2087.2676 c2203.0449 -2085.4395 2195.3486 -2082.5176 2187.8818 -2079.3633 c2181.1484 -2076.5186 2174.5332 -2073.4004 2167.8594 -2070.4209 c2160.4209 -2067.0996 2153.7041 -2061.9746 2146.2461 -2058.5352 c2140.7852 -2056.0176 2137.3613 -2052.9014 2134.3838 -2047.6299 c2130.9688 -2041.584 2124.7949 -2036.8086 2122.791 -2030.1191 c2120.2334 -2021.5771 2120.0635 -2007.8779 2127.959 -2001.8447 c2130.3262 -2000.0352 2131.7412 -1997.332 2130.957 -1994.5264 C2139.4385 -1987.9004 2148.0049 -1982.2305 2157.5918 -1977.25 c2162.3223 -1974.792 2166.7588 -1971.7598 2171.2646 -1968.9238 c2175.8301 -1966.0508 2180.2969 -1964.1436 2185.3721 -1962.3535 c2193.5273 -1959.4785 2203.6055 -1956.0107 2209.5313 -1949.4082 c2211.0547 -1947.7109 2212.2188 -1945.6758 2213.126 -1943.4443 C2219.2158 -1940.1631 2227.1035 -1938.8066 2232.8506 -1938.4883 c2243.293 -1937.9082 2255.292 -1942.9531 2260.6777 -1952.0645 c2263.4492 -1956.7559 2265.2422 -1964.1133 2265.9531 -1969.4922 c2266.9453 -1977.0107 2268.5801 -1984.4561 2269.3633 -1992.0342 c2270.8613 -2006.5186 2271.1846 -2023.1172 2267.7246 -2037.3525 cf*U2169.5664 -2026.3086 m2166.7139 -2026.1787 2162.8838 -2021.1025 2162.7656 -2017.8457 c2162.4629 -2009.4883 2149.4609 -2009.459 2149.7656 -2017.8457 c2150.1484 -2028.3906 2158.6738 -2038.8115 2169.5664 -2039.3086 c2177.9512 -2039.6914 2177.9141 -2026.6895 2169.5664 -2026.3086 cf2217.7344 -2043.8213 m2213.8047 -2040.9551 2211.1396 -2034.1787 2210.9785 -2029.4834 c2210.6914 -2021.124 2197.6904 -2021.0957 2197.9785 -2029.4834 c2198.3115 -2039.167 2203.3184 -2049.3184 2211.1738 -2055.0459 c2214.042 -2057.1387 2218.4121 -2055.5391 2220.0664 -2052.7148 c2221.9941 -2049.4238 2220.5918 -2045.9043 2217.7344 -2043.8213 cf2223.1484 -1981.2051 m2221.4688 -1986.6221 2221.2568 -1992.2666 2221.2539 -1997.8955 c2221.249 -2006.2793 2234.249 -2006.2783 2234.2539 -1997.8955 c2234.2568 -1993.3613 2234.3311 -1989.0234 2235.6836 -1984.6602 c2238.1729 -1976.6309 2225.623 -1973.2236 2223.1484 -1981.2051 cf3841 -2091.2705 m3839.5645 -2091.1943 3838.1338 -2091.1465 3836.665 -2091.1465 c3830.2852 -2091.1465 3823.4268 -2091.8438 3817.1221 -2090.8262 c3802.7588 -2088.5078 3788.6953 -2087.8213 3774.1709 -2087.8213 c3767.2148 -2087.8213 3760.2393 -2087.6709 3753.2852 -2087.8369 c3751.3525 -2087.8828 3749.4297 -2088.0703 3747.4932 -2088.0859 c3746.667 -2088.0938 3745.8467 -2088.0498 3745.0371 -2087.9053 C3745.2002 -2085.5723 3746.8027 -2082.8584 3747.0273 -2080.5234 c3747.3652 -2076.9941 3748.376 -2073.4824 3749.2666 -2070.0615 c3751.1816 -2062.7051 3753.5498 -2055.501 3754.9297 -2048.0117 c3755.5859 -2044.4492 3755.5664 -2040.8408 3756.1885 -2037.2676 c3756.8105 -2033.6963 3757.6152 -2030.167 3758.1514 -2026.5801 c3759.2383 -2019.3193 3759.6621 -2011.8799 3759.3994 -2004.5459 c3759.125 -1996.8711 3758.8467 -1989.5127 3759.3916 -1981.8418 c3759.9199 -1974.4238 3760.1621 -1966.9863 3760.3076 -1959.5508 c3760.4473 -1952.3838 3760.4385 -1945.2129 3760.4385 -1938.0449 c3760.4385 -1930.4502 3758.3916 -1922.3242 3757.1494 -1914.8496 c3755.8896 -1907.2676 3754 -1899.2959 3754 -1891.5938 C3754 -1870 L3754 -1866.4756 3751.4766 -1864.5059 3748.6543 -1864.0869 C3751.5684 -1863.209 3754.4688 -1862.2402 3757.3555 -1861.1602 c3765.7754 -1858.0098 3774.0078 -1854.3965 3782.5234 -1851.498 c3792.3438 -1848.1572 3802.2383 -1845.2217 3811.9609 -1841.5605 c3820.8584 -1838.2109 3829.8223 -1835.0576 3838.7354 -1831.7549 c3839.499 -1831.4717 3840.248 -1831.1592 3841 -1830.8535 C3841 -1816.6592 L3840.667 -1816.8271 3840.3379 -1817 3840.0029 -1817.165 c3833.2168 -1820.5 3825.7402 -1822.5244 3818.668 -1825.1738 c3804.501 -1830.4824 3790.1592 -1835.0391 3775.9072 -1840.0566 c3762.4961 -1844.7793 3749.7031 -1850.9873 3735.8047 -1854.2744 c3720.4492 -1857.9063 3704.5176 -1858.2695 3688.9131 -1860.2188 c3672.9883 -1862.208 3657.4824 -1864.4219 3641.3906 -1864.8418 c3625.7959 -1865.249 3610.209 -1864.9463 3594.6172 -1865.5996 c3579.5146 -1866.2314 3564.46 -1866.707 3549.3438 -1866.707 c3542.0439 -1866.707 3534.6602 -1867.04 3527.3838 -1866.4033 c3519.4629 -1865.7109 3511.8857 -1864.9932 3503.9102 -1865.1533 c3488.7686 -1865.459 3473.6309 -1866.2949 3458.502 -1865.2168 C3458.2178 -1865.1416 3457.8438 -1865.0332 3457.3594 -1864.8779 c3456.7051 -1864.668 3456.0547 -1864.5166 3455.3809 -1864.3779 c3453.4346 -1863.9766 3451.4404 -1863.7695 3449.4756 -1863.4873 c3448.0742 -1863.2861 3446.6816 -1863.0508 3445.2998 -1862.7598 C3446.3467 -1858.3086 3448.3604 -1853.7705 3450.2715 -1849.6348 c3453.3262 -1843.0234 3456.748 -1836.7168 3459.5996 -1830.0078 c3465.4316 -1816.291 3473.7324 -1803.7314 3481.5488 -1791.0986 c3485.3691 -1784.9238 3488.707 -1778.5 3492.7266 -1772.4434 c3497.1846 -1765.7246 3502.0781 -1759.3076 3506.2832 -1752.4199 c3509.9238 -1746.4561 3513.0488 -1740.1836 3516.4414 -1734.0791 c3520.0869 -1727.5215 3524.6377 -1721.6768 3528.6826 -1715.3838 c3536.0371 -1703.9443 3542.2725 -1691.6836 3550.3574 -1680.7051 c3554.1514 -1675.5537 3558.373 -1670.7324 3562.1406 -1665.5557 c3566.3018 -1659.8369 3569.3096 -1653.6309 3571.9736 -1647.1094 c3577.2197 -1634.2676 3584.5146 -1622.3594 3591.6377 -1610.4863 c3594.9277 -1605.0039 3597.5693 -1599.8955 3599.2129 -1593.6475 c3600.043 -1590.4883 3600.7744 -1587.2559 3600.8994 -1583.9873 c3600.9717 -1582.1104 3601.9092 -1580.2461 3602.9834 -1578.5254 C3605.8135 -1578.2197 3608.293 -1577.3955 3610.918 -1576.2432 c3618.5801 -1572.8809 3611.9561 -1561.6836 3604.3574 -1565.0186 c3602.9365 -1565.6416 3601.4082 -1565.9209 3599.8301 -1566.0576 C3599.1133 -1565.9785 3598.3848 -1566.0156 3597.6738 -1566.1748 C3594.8398 -1566.2627 3591.9375 -1566.1924 3589.2852 -1567.0645 c3583.625 -1568.9248 3578.2783 -1571.7217 3572.5713 -1573.5752 c3560.085 -1577.6318 3546.8574 -1579.4951 3533.8633 -1581.1133 c3521.7725 -1582.6182 3509.666 -1584 3497.4814 -1584 C3479.625 -1584 L3478.6768 -1584 3477.1582 -1584.2197 3475.5605 -1584.4229 C3481.7959 -1576.5869 3489.7061 -1569.8457 3496.2734 -1562.4873 c3506.3594 -1551.1875 3516.5566 -1539.8398 3527.1035 -1528.9736 c3531.8848 -1524.0479 3535.8281 -1518.1797 3539.4893 -1512.3984 c3541.3799 -1509.4141 3542.8223 -1506.1768 3544.7432 -1503.2041 c3546.9727 -1499.7559 3550.0762 -1496.5986 3552.6016 -1493.3369 c3560.9678 -1482.5322 3570.292 -1471.6895 3575.9883 -1459.1768 c3578.749 -1453.1113 3581.459 -1447.0098 3584.1895 -1440.9092 c3587.2236 -1434.127 3591.4199 -1428.2598 3595.2744 -1421.9473 c3598.6494 -1416.4199 3601.3369 -1410.3379 3603.7246 -1404.3242 c3606.376 -1397.6484 3609.6934 -1391.1934 3612.2432 -1384.4941 c3614.4883 -1378.5977 3618.3281 -1372.459 3621.8408 -1367.2402 c3625.9473 -1361.1387 3630.3057 -1355.2168 3634.2744 -1349.0225 c3637.8916 -1343.377 3640.9004 -1337.4375 3643.291 -1331.1738 c3644.4551 -1328.124 3644.9844 -1324.8174 3646.0391 -1321.71 c3647.2988 -1317.999 3649.0732 -1314.4883 3650.8857 -1311.0234 c3658.2422 -1296.959 3666.8809 -1283.3271 3675.5615 -1270.1191 c3683.8955 -1257.4395 3688.8955 -1242.5039 3693.7061 -1228.2178 c3695.1816 -1223.8379 3692.0488 -1220.8477 3688.4883 -1220.3496 C3685.3438 -1210.2354 3678.6445 -1200.4375 3667.9785 -1202.1084 c3664.4746 -1202.6572 3661.3984 -1206.2344 3659.2402 -1208.7471 c3656.4375 -1212.0107 3653.0459 -1213.9795 3649.2441 -1215.8906 c3647.3242 -1216.8555 3645.6855 -1219.0186 3643.9717 -1220.3242 c3641.3877 -1222.293 3638.6445 -1224.0635 3635.9434 -1225.8662 c3631.5088 -1228.8262 3627.5762 -1232.8203 3623.5449 -1236.2969 c3615.9824 -1242.8184 3607.8125 -1248.0811 3599.0664 -1252.876 c3589.8838 -1257.9111 3580.9697 -1263.5313 3571.627 -1268.2393 c3563.8936 -1272.1357 3555.9385 -1275.5615 3548.2305 -1279.5039 C3551.4414 -1274.7549 3554.3652 -1269.7598 3557.1406 -1264.7676 c3560.5498 -1258.6328 3564.623 -1252.9541 3568.2803 -1246.9697 c3572.3359 -1240.333 3576.0879 -1233.5146 3580.0938 -1226.8477 c3587.9092 -1213.8389 3596.8555 -1201.1211 3606.3262 -1189.2646 c3610.8389 -1183.6152 3615.4521 -1178.0479 3619.8613 -1172.3154 c3624.7197 -1166 3628.6807 -1159.2832 3633.1035 -1152.6797 c3641.5762 -1140.0313 3651.4961 -1128.1514 3661.0957 -1116.3477 c3670.2148 -1105.1367 3677.3369 -1092.4746 3681.6182 -1078.5928 c3686.1035 -1064.0493 3692.9805 -1050.3262 3696.9473 -1035.6299 c3701.0742 -1020.3369 3703.8809 -1004.7593 3707.8213 -989.4214 c3710.4951 -979.0151 3713.46 -968.686 3716.165 -958.2876 c3719.0332 -947.2661 3720.8477 -935.9912 3723.916 -925.0371 c3726.7813 -914.814 3730.043 -904.7202 3731.6973 -894.2051 c3732.4766 -889.2466 3732.1758 -884.1719 3732.1758 -879.1626 c3732.1758 -878.0039 3733.7598 -876.1992 3734.0215 -874.9355 c3734.5859 -872.2085 3734.5801 -869.9585 3733.6055 -867.3232 c3732.2168 -863.5698 3727.8398 -861.0054 3724.0566 -863.4385 c3721.8262 -864.8735 3720.3564 -866.5786 3718.8311 -868.7261 c3717.8848 -870.0581 3717.1445 -872.5132 3715.7441 -873.4141 c3712.918 -875.2324 3711.1182 -878.9771 3708.8877 -881.4883 c3706.6592 -883.9961 3704.1377 -885.9976 3702.6064 -889.0303 c3696.7637 -900.6055 3689.9619 -912.8726 3679.0596 -920.3496 c3674.0957 -923.7544 3668.6504 -926.4482 3663.3359 -929.248 c3658.0859 -932.0132 3653.1748 -935.4063 3647.8613 -937.9785 c3642.7852 -940.4355 3638.292 -943.9492 3633.4746 -946.8857 C3637.5225 -941.6611 3642.2861 -937.0132 3646.0586 -931.481 c3650.1797 -925.4365 3653.6611 -918.9663 3657.6592 -912.8364 c3662.2305 -905.8271 3667.1064 -899.0171 3671.9668 -892.2065 c3680.5547 -880.1719 3686.4824 -865.8423 3691.9121 -852.1689 c3697.4795 -838.1504 3702.043 -823.8066 3706.9648 -809.5576 c3711.959 -795.0996 3717.4609 -780.7979 3722.5918 -766.3828 c3727.8564 -751.5889 3731.9941 -736.5225 3736.582 -721.5049 c3741.1143 -706.6709 3746.6279 -692.3252 3751.9414 -677.7778 c3757.1309 -663.5728 3759.1992 -648.5762 3763.5313 -634.1504 c3766.9609 -622.7261 3770.4219 -611.3105 3774.0605 -599.9502 c3777.7383 -588.4688 3781.9863 -577.2583 3785.1885 -565.6157 c3788.3428 -554.147 3791.1709 -542.6567 3795.3867 -531.5151 c3799.4258 -520.8408 3805.4775 -511.041 3808.3066 -499.9243 c3810.998 -489.3447 3810.6914 -478.3618 3813.7119 -467.8569 c3816.9512 -456.5923 3822.0156 -446.0742 3825.6592 -434.9932 c3829.5127 -423.2754 3832.4355 -411.2705 3835.9736 -399.457 c3837.4238 -394.6138 3839.126 -389.9106 3841 -385.2866 C3841 -355.2896 L3840.5342 -355.7568 3840.1162 -356.3369 3839.7637 -357.042 c3832.5098 -371.5566 3826.3037 -386.0063 3821.7861 -401.6123 c3819.624 -409.0806 3817.6328 -416.5967 3815.4395 -424.0562 c3813.1572 -431.8154 3810.0234 -439.1382 3807.1465 -446.6831 c3804.4795 -453.6807 3802.1553 -460.8037 3800.1543 -468.0195 c3798.1797 -475.1421 3798.1514 -482.6616 3797.0547 -489.9512 c3794.835 -504.6899 3786.7324 -517.5005 3781.627 -531.3379 c3776.1426 -546.1992 3773.1309 -561.8638 3768.291 -576.938 c3763.5127 -591.8179 3758.3037 -606.5254 3753.7656 -621.4995 c3749.3438 -636.0942 3746.4648 -651.0083 3742.2227 -665.644 c3737.957 -680.355 3731.5635 -694.4512 3726.8643 -709.0532 c3723.1816 -720.4961 3719.8379 -732.0464 3716.5215 -743.5991 c3713.1045 -755.5063 3708.5869 -767.1016 3704.4453 -778.7793 c3696.5449 -801.0503 3688.9414 -823.4883 3680.5869 -845.5898 c3676.6074 -856.1187 3671.9043 -866.3584 3666.4863 -876.2241 c3660.3887 -887.3267 3652.3135 -897.2603 3645.3984 -907.8623 c3638.9307 -917.7803 3633.4961 -928.0039 3625.4102 -936.771 c3619.4736 -943.2065 3611.8779 -951.3877 3611.1123 -960.4893 c3610.8643 -963.437 3613.2969 -965.9082 3615.8848 -966.7568 c3620.9707 -968.4263 3626.041 -965.7837 3630.373 -963.3027 c3636.0479 -960.0522 3641.7637 -957.1694 3647.2344 -953.5308 c3658.2432 -946.2085 3670.3994 -940.6816 3681.8076 -933.9805 c3694.3115 -926.6353 3702.4434 -915.814 3709.6133 -903.4268 c3711.2227 -900.647 3712.4922 -896.4175 3714.7549 -894.1494 c3716.2119 -892.689 3717.626 -891.1895 3718.9824 -889.6406 C3718.8008 -897.2793 3716.0078 -905.2568 3713.918 -912.5132 c3709.5391 -927.7192 3706.6514 -943.2007 3702.626 -958.502 c3698.6006 -973.7983 3694.1621 -988.9741 3690.9023 -1004.4619 c3687.6465 -1019.9297 3684.124 -1035.2832 3678.25 -1049.9946 c3672.6768 -1063.9531 3668.5898 -1078.4165 3661.8691 -1091.8721 c3655.3809 -1104.8623 3645.0146 -1115.8477 3636.0234 -1127.1904 c3631.501 -1132.8955 3627.0625 -1138.668 3622.8926 -1144.6367 c3618.3594 -1151.123 3614.5576 -1157.9697 3609.7666 -1164.2842 c3600.6504 -1176.2969 3590.5391 -1187.4961 3582.3203 -1200.1807 c3578.2617 -1206.4424 3573.748 -1212.3789 3569.8115 -1218.7383 c3565.7168 -1225.3535 3561.9648 -1232.1758 3557.9873 -1238.8604 c3554.3867 -1244.9121 3550.2275 -1250.5918 3546.75 -1256.7129 c3543.3369 -1262.7178 3539.874 -1268.6748 3536.0215 -1274.4033 c3532.7393 -1279.2842 3528.834 -1283.7314 3526.334 -1289.0996 c3523.7715 -1294.6016 3524.9639 -1301.7617 3532.3477 -1301.9111 c3536.4502 -1301.9941 3540.3242 -1299.8135 3543.7227 -1297.7432 c3547.8291 -1295.2412 3551.3145 -1292.4951 3555.6094 -1290.2803 c3561.9697 -1287.001 3568.5332 -1284.1211 3574.9863 -1281.0322 c3581.876 -1277.7344 3588.2285 -1273.7109 3594.8594 -1269.958 c3607.5996 -1262.749 3620.0977 -1256.1699 3631.3516 -1246.6738 c3637.1553 -1241.7764 3642.791 -1237.0244 3649.0098 -1232.6572 c3651.667 -1230.791 3654.1699 -1227.9385 3657.0527 -1226.4893 c3660.2529 -1224.8799 3663.0977 -1222.9072 3665.8496 -1220.6221 c3667.7324 -1219.0576 3669.1914 -1217.0186 3670.8965 -1215.2666 C3671.3613 -1215.7109 3671.8232 -1216.3604 3672.1807 -1216.7627 c3675.6758 -1220.7041 3676.1855 -1224.0869 3677.3516 -1228.2188 c3677.7822 -1229.7432 3677.6055 -1231.5781 3677.6123 -1233.1406 c3677.6152 -1233.668 3677.6689 -1234.1631 3677.7676 -1234.624 C3674.3262 -1244.2344 3670.4258 -1253.7061 3665.0771 -1262.3945 c3663.2979 -1265.2861 3661.2529 -1267.9922 3659.251 -1270.7295 c3657.2168 -1273.5107 3656.0781 -1276.5557 3654.4111 -1279.5205 c3650.793 -1285.9541 3646.7461 -1292.1396 3643 -1298.498 c3639.5566 -1304.3438 3636.5605 -1310.3838 3634.0752 -1316.6973 c3631.4043 -1323.4824 3630.0557 -1330.1719 3626.5137 -1336.6611 c3623.2598 -1342.623 3619.2988 -1348.1953 3615.4141 -1353.7539 c3613.4883 -1356.5098 3611.5654 -1359.2676 3609.6875 -1362.0566 c3607.501 -1365.3057 3606.0645 -1368.7783 3604.1025 -1372.1426 c3597.2178 -1383.9512 3594.2627 -1397.8662 3587.0625 -1409.4111 c3585.3086 -1412.2227 3584.0762 -1415.4043 3582.2695 -1418.2363 c3580.459 -1421.0771 3578.5322 -1423.8359 3576.7754 -1426.7119 c3572.9121 -1433.0371 3570.7324 -1440.2334 3567.6836 -1446.9482 c3561.9424 -1459.5947 3553.832 -1470.4434 3545.4648 -1481.4541 c3541.2646 -1486.9805 3536.3936 -1492.1943 3532.6309 -1498.0176 c3528.4883 -1504.4277 3525.2266 -1511.1133 3520.335 -1517.0654 c3509.96 -1529.6885 3497.9443 -1541.0908 3487.082 -1553.3047 c3477.6885 -1563.8662 3466.0449 -1573.1738 3459.0498 -1585.6377 c3457.7285 -1587.9912 3457.8027 -1591.6738 3460.0664 -1593.5137 c3464.0371 -1596.7441 3468.3398 -1597.5664 3473.3867 -1597.4727 c3478.9902 -1597.3691 3484.5664 -1597.0801 3490.1855 -1597.0801 c3504.2842 -1597.0801 3517.9854 -1596.0234 3531.9941 -1594.3789 c3546.1777 -1592.7139 3560.5293 -1590.7402 3574.2451 -1586.666 c3579.0391 -1585.2412 3583.5957 -1583.4004 3588.1621 -1581.5029 C3587.8887 -1583.3721 3587.7832 -1585.2871 3587.3965 -1587.1055 c3585.8906 -1594.2012 3583.0977 -1599.4502 3579.416 -1605.5879 c3572.0137 -1617.9238 3564.8359 -1630.2959 3559.4375 -1643.6543 c3554.3418 -1656.2627 3545.0547 -1665.7891 3537.2822 -1676.6982 c3529.3447 -1687.8398 3523.2539 -1700.1406 3515.6992 -1711.5137 c3511.8174 -1717.3564 3507.7871 -1722.8926 3504.3682 -1729.0439 c3500.6943 -1735.6533 3497.2764 -1742.3887 3493.2383 -1748.79 c3489.2275 -1755.1494 3484.6445 -1761.1445 3480.4873 -1767.4102 c3476.1611 -1773.9287 3472.5732 -1780.916 3468.4463 -1787.5674 c3460.6094 -1800.1973 3452.6631 -1812.8242 3447.0254 -1826.6309 c3442.5127 -1837.6855 3435.6172 -1847.8975 3432.6934 -1859.585 c3431.6338 -1863.8193 3430.4883 -1868.667 3434.1836 -1871.9492 c3437.6465 -1875.0254 3442.7041 -1875.5469 3447.0967 -1876.1777 c3448.9658 -1876.4453 3450.8369 -1876.6895 3452.6875 -1877.0703 c3452.8311 -1877.0996 3452.9424 -1877.1191 3453.0391 -1877.1348 C3453.0508 -1877.1426 3453.0557 -1877.1484 3453.0684 -1877.1572 c3454.4648 -1878.1563 3456.5098 -1878.0586 3458.125 -1878.1953 c3466.0029 -1878.8643 3473.9375 -1878.8408 3481.8369 -1878.7227 c3497.1699 -1878.4922 3512.1113 -1877.7529 3527.3838 -1879.4033 c3534.6191 -1880.1855 3542.0742 -1879.707 3549.3438 -1879.707 c3557.1328 -1879.707 3564.917 -1879.7129 3572.7041 -1879.4912 c3587.7803 -1879.0615 3602.8262 -1878.0459 3617.915 -1878.0449 c3634.0332 -1878.0439 3650.1641 -1877.9648 3666.2217 -1876.4189 c3673.8418 -1875.6846 3681.334 -1874.2275 3688.9131 -1873.2188 c3697.2295 -1872.1113 3705.6074 -1871.499 3713.9531 -1870.6621 c3723.7803 -1869.6777 3733.3652 -1868.1504 3742.7852 -1865.7246 C3741.707 -1866.7188 3741 -1868.1406 3741 -1870 C3741 -1884.3574 3741 -1891.5938 v3741 -1899.7813 3742.9492 -1908.2949 3744.2891 -1916.3535 c3745.5625 -1924.0166 3747.4912 -1932.041 3747.4912 -1939.8262 c3747.4902 -1947.6152 3747.4346 -1955.4033 3747.2568 -1963.1904 c3747.0869 -1970.6992 3746.6953 -1978.2002 3746.1211 -1985.6895 c3745.4961 -1993.8564 3746.4932 -2001.9775 3746.5195 -2010.1563 c3746.5439 -2017.4814 3745.418 -2024.8662 3743.9961 -2032.0303 c3742.4258 -2039.9355 3741.9492 -2047.7588 3739.8262 -2055.5811 c3737.8389 -2062.9063 3735.5547 -2070.1143 3734.3721 -2077.6309 c3733.3662 -2084.0186 3730.7969 -2088.7363 3733.7402 -2095.0898 c3735.8613 -2099.666 3741.9746 -2100.7637 3746.3857 -2101.0596 c3751.9404 -2101.4316 3757.7549 -2100.8213 3763.3232 -2100.8213 c3778.4229 -2100.8213 3793.4307 -2100.4492 3808.4229 -2102.5645 c3815.123 -2103.5098 3821.375 -2104.1465 3828.1484 -2104.1465 c3832.4541 -2104.1465 3836.7207 -2104.1787 3841 -2104.3438 C3841 -2091.2705 Lf*u1 D3444.7773 -1453.8721 m3446.8994 -1453.3037 3448.8037 -1451.502 3449.3164 -1449.332 c3450.7627 -1443.2197 3449.1035 -1438.2207 3444.9277 -1433.6484 c3440.0566 -1428.3164 3435.625 -1422.7002 3430.5088 -1417.5596 c3419.708 -1406.708 3408.8564 -1395.9063 3398.0303 -1385.0801 c3387.9482 -1374.998 3377.3447 -1364.7256 3368.6309 -1353.4053 c3364.335 -1347.8242 3360.8008 -1341.5791 3356.8203 -1335.7617 c3352.2949 -1329.1494 3347.5195 -1322.7188 3342.4795 -1316.4912 c3340.5957 -1314.1641 3338.7861 -1311.7285 3336.9902 -1309.3096 C3338.1582 -1310 3339.1182 -1310.7285 3341.6895 -1311.2773 c3349.5156 -1312.9482 3357.0137 -1315.873 3364.8457 -1317.5459 c3380.1875 -1320.8223 3394.8506 -1326.8672 3410.1875 -1330.2695 c3416.0713 -1331.5742 3422.1533 -1332.0859 3428.0088 -1332.9287 c3434.0283 -1333.7949 3438.8057 -1333.7881 3442.7227 -1328.5762 c3447.8135 -1321.8037 3439.2158 -1310.0342 3435.5957 -1304.8545 c3432.8203 -1300.8828 3430.1484 -1296.8369 3427.1035 -1293.0605 c3423.5801 -1288.6914 3419.3838 -1285.0977 3415.4609 -1281.1074 c3407.4219 -1272.9297 3399.7129 -1264.4297 3392.4258 -1255.5742 c3385.2197 -1246.8174 3379.416 -1236.9072 3371.4453 -1228.8223 c3363.791 -1221.0566 3357.2188 -1212.2832 3350.2695 -1203.8652 c3342.9492 -1195 3336.6465 -1185.0723 3330.4141 -1175.417 c3325.6445 -1168.0293 3320.5098 -1160.7813 3315.417 -1153.6172 c3312.7861 -1149.917 3309.2422 -1146.3613 3305.2012 -1144.8818 C3313.041 -1145.0645 3320.6914 -1145.9277 3328.4033 -1147.3496 c3336.3564 -1148.8164 3344.1377 -1151.7383 3351.916 -1153.9531 c3359.8643 -1156.2178 3367.8643 -1158.2949 3375.9297 -1160.1035 c3391.5479 -1163.6055 3407.1172 -1167.3369 3422.7441 -1170.8115 c3434.6836 -1173.4658 3448.2441 -1176.75 3459.6309 -1170.5898 c3461.459 -1169.6006 3463.0869 -1167.127 3462.8496 -1164.9775 c3462.1387 -1158.5488 3457.8369 -1153.4951 3454.4844 -1148.1953 c3449.4482 -1140.2334 3443.6777 -1133.4375 3437.2656 -1126.5625 c3430.873 -1119.7061 3425.4697 -1112.0889 3419.542 -1104.8535 c3416.5742 -1101.2314 3413.4072 -1097.7725 3410.3643 -1094.2129 c3406.7607 -1089.998 3404.0898 -1085.2314 3401.1328 -1080.5552 c3390.0518 -1063.0317 3378.4395 -1045.6323 3365.0049 -1029.8408 c3362.1318 -1026.4634 3359.4326 -1022.9932 3356.9922 -1019.2891 c3354.6719 -1015.7686 3353.1943 -1011.8018 3350.7734 -1008.3784 c3348.2188 -1004.7656 3345.7754 -1000.7373 3344.0313 -996.4819 C3349.8916 -998.7671 3355.8271 -1000.8164 3361.6309 -1003.2725 c3368.1895 -1006.0488 3374.6865 -1008.9526 3381.4707 -1011.1475 c3385.0654 -1012.3101 3388.5957 -1014.7842 3392.1328 -1016.2705 c3399.2529 -1019.2622 3410.8154 -1021.5806 3414.9941 -1012.8535 c3420.2949 -1001.7817 3410.3643 -989.7061 3404.9072 -980.8657 c3401.2129 -974.8809 3399.2002 -967.3027 3396.5908 -960.7793 c3393.5889 -953.2749 3389.9307 -946.1465 3386.3174 -938.9204 c3380.0908 -926.4678 3375.1777 -913.2466 3367.7041 -901.5073 c3359.9688 -889.3594 3353.1758 -876.5806 3346.2813 -863.9404 c3339.0762 -850.7295 3330.5723 -838.2764 3323.8242 -824.8301 c3319.9639 -817.1392 3316.8262 -809.1528 3314.6533 -800.8223 c3312.9512 -794.2944 3304.4932 -795.2588 3302.3682 -800.1216 C3298.373 -801.2515 3295.0283 -803.5 3291.5928 -806.3066 c3286.5332 -810.4395 3281.4219 -814.4092 3275.9248 -817.9653 c3269.9219 -821.8486 3263.1836 -824.4878 3256.8965 -827.873 c3249.6201 -831.791 3242.5244 -836.0425 3235.4873 -840.3711 c3209.4004 -856.4155 3183.6611 -873.3076 3159.7529 -892.4863 c3147.709 -902.1484 3136.3447 -912.437 3123.9131 -921.6406 c3117.7539 -926.2007 3111.5703 -930.7256 3105.4883 -935.3906 c3099.4697 -940.0078 3093.1426 -943.9229 3087.6621 -949.2427 c3081.8252 -954.9092 3072.2021 -964.0781 3074.1973 -973.1445 c3075.5254 -979.1802 3081.5391 -981.1245 3086.9023 -981.8281 c3094.416 -982.814 3102.1367 -983.0493 3109.708 -983.6147 c3115.0537 -984.0142 3120.5 -985 3125.8418 -985 C3143.7969 -985 L3155.5156 -985 3167.2451 -985.2798 3178.9629 -985.082 c3189.8184 -984.8989 3200.6475 -984.4014 3211.4795 -985.458 c3217.0039 -985.9961 3222.4141 -987.4238 3227.9453 -988.0151 c3230.9404 -988.3354 3233.9561 -988.4736 3236.9736 -988.5352 C3234.5049 -992.2222 3231.377 -995.3726 3228.1113 -998.5283 c3223.0752 -1003.3936 3218.1426 -1008.3677 3213.0498 -1013.1729 c3207.958 -1017.9766 3202.5918 -1022.4087 3196.7158 -1026.2197 c3190.249 -1030.4131 3184.8809 -1035.7266 3179.5176 -1041.2524 c3174.3555 -1046.5708 3169.3613 -1052.0454 3164.1387 -1057.3057 c3158.5488 -1062.9365 3152.1357 -1067.6162 3145.7656 -1072.3086 c3139.7324 -1076.7534 3134.0449 -1081.7803 3127.7148 -1085.7871 c3121.208 -1089.9053 3114.5527 -1093.7539 3108.2637 -1098.2109 c3099.3262 -1104.5459 3087.3105 -1116.0635 3092.4531 -1128.2188 c3094.4619 -1132.9678 3101.6299 -1134.5166 3105.9102 -1135.8906 c3113.6279 -1138.3701 3121.2646 -1138.2275 3129.2656 -1138.2275 c3144.3926 -1138.2275 3159.4502 -1138.3877 3174.5254 -1136.9336 c3181.4531 -1136.2656 3188.4668 -1135.584 3195.3262 -1134.3945 c3200.4141 -1133.5137 3205.4277 -1132.3867 3210.5176 -1131.7061 C3210.207 -1132.1348 3209.8945 -1132.5596 3209.5723 -1132.9756 c3205.1201 -1138.7168 3198.4375 -1142.8623 3193.1943 -1147.875 c3182.4395 -1158.1553 3169.7813 -1166.2363 3157.834 -1175.0195 c3146.082 -1183.6582 3135.5742 -1193.8105 3124.7861 -1203.5928 c3119.6309 -1208.2676 3114.3975 -1212.8525 3109.0068 -1217.2559 c3103.2598 -1221.9512 3096.749 -1225.5986 3090.9883 -1230.207 c3080.3486 -1238.7188 3069.25 -1246.8193 3059.1084 -1255.6631 c3055.165 -1259.1016 3053.0742 -1263.5723 3055.3047 -1268.5566 c3057.1387 -1272.6592 3062.7168 -1274.709 3066.5146 -1276.2646 c3076.8369 -1280.4912 3084.457 -1282.5342 3095.498 -1284.7539 c3110.5264 -1287.7754 3125.7822 -1290 3141.0957 -1290.7627 c3154.0254 -1291.4072 3167.0527 -1291.3447 3179.9932 -1291.0811 c3184.8965 -1290.9814 3189.7881 -1290.6582 3194.6543 -1290.0732 C3193.3252 -1290.835 3191.9629 -1291.5762 3190.8232 -1292.4277 c3187.7764 -1294.7031 3184.791 -1297.2129 3181.9746 -1299.7656 c3176.2578 -1304.9473 3171.1104 -1311.1895 3165.8066 -1316.8086 c3160.3955 -1322.54 3155.5713 -1328.9873 3150.5742 -1335.0869 c3145.5859 -1341.1748 3140.7705 -1347.4014 3135.7754 -1353.4834 c3130.9189 -1359.3955 3125.1953 -1364.6865 3120.6055 -1370.7764 c3116.0986 -1376.7559 3111.4277 -1382.6123 3106.876 -1388.5586 c3102.8867 -1393.7695 3099.9307 -1398.877 3093.9668 -1402.0918 c3087 -1405.8457 3092.4541 -1416.0449 3099.292 -1413.8408 C3099.0713 -1417.2441 3101.1582 -1420.8369 3105.5596 -1420.8545 c3120.1133 -1420.9121 3134.5742 -1422.2266 3149.002 -1424.0586 c3156.6787 -1425.0342 3164.334 -1426.1758 3171.9941 -1427.2715 c3178.7539 -1428.2383 3186.0918 -1427.0791 3192.9004 -1426.8525 c3199.9141 -1426.6191 3206.8008 -1427.1895 3213.7803 -1427.6592 c3220.6992 -1428.125 3227.4238 -1430.915 3234.3408 -1431.7559 c3242.1064 -1432.6992 3249.8066 -1433.7793 3257.5508 -1434.8477 c3260.5 -1435.2549 3263.5313 -1435.7354 3266.582 -1436.1777 C3268.0938 -1450.6943 3269.7773 -1465.1582 3271.8809 -1479.6064 c3272.9824 -1487.1748 3273.5635 -1494.8213 3273.623 -1502.4668 c3273.6816 -1509.9844 3276.3027 -1518.1035 3277.7139 -1525.4639 c3278.8779 -1531.5313 3280.2734 -1537.6934 3280.2734 -1543.8838 c3280.2734 -1550.8311 3280.0684 -1557.8105 3280.498 -1564.7471 c3281.3223 -1578.0518 3282.7549 -1591.3066 3283.5439 -1604.6211 c3284.333 -1617.9258 3285.9395 -1631.1201 3286.9238 -1644.4043 c3287.3457 -1650.1045 3288.4844 -1655.918 3288.6133 -1661.6133 c3288.6992 -1665.4268 3289.5381 -1669.3516 3289.3643 -1673.1855 C3285.2783 -1676.3916 3286.4902 -1685 3293 -1685 C3295.0859 -1685 L3297.9678 -1685 3300.5986 -1683.1143 3301.3535 -1680.3242 c3302.916 -1674.5576 3302.126 -1668.7305 3301.6855 -1662.8711 c3301.127 -1655.4434 3300.2031 -1648.0547 3299.6426 -1640.6104 c3298.457 -1624.8896 3296.9785 -1609.207 3295.8184 -1593.4746 c3294.6387 -1577.4678 3293.2734 -1561.6602 3293.2734 -1545.5918 c3293.2734 -1538.2402 3291.9395 -1531.085 3290.6016 -1523.8662 c3289.1973 -1516.2881 3286.668 -1508.252 3286.6074 -1500.5254 c3286.4854 -1484.7422 3283.1475 -1469.1221 3281.3887 -1453.4814 c3280.7891 -1448.1543 3280.2373 -1442.8232 3279.6924 -1437.4902 C3279.9043 -1437.4971 3280.1191 -1437.5127 3280.3311 -1437.5166 c3287.8477 -1437.667 3295.3174 -1439.6494 3302.7754 -1440.498 c3309.6113 -1441.2754 3316.5166 -1442.0518 3323.3994 -1442.3281 c3330.2539 -1442.6016 3337.0908 -1442.1025 3343.8662 -1443.374 c3350.4844 -1444.6172 3356.8408 -1446.8203 3363.5244 -1447.7744 c3377.2344 -1449.7314 3391.1191 -1450.1152 3404.5947 -1453.4199 c3411.4707 -1455.1064 3419.3574 -1454.1045 3426.4238 -1454.1045 c3432.6885 -1454.1045 3438.5664 -1455.5352 3444.7773 -1453.8721 cf0 D3424.8789 -1441.1045 m3417.252 -1441.1045 3410.0732 -1441.2783 3402.6104 -1439.6025 c3389.2061 -1436.5928 3375.1807 -1437.1973 3361.7549 -1434.3564 c3355.7705 -1433.0898 3349.9629 -1431.2178 3343.9102 -1430.2441 c3337.1221 -1429.1533 3330.2451 -1429.5342 3323.3994 -1429.3281 c3308.9121 -1428.8906 3294.7637 -1425.3311 3280.3311 -1424.5166 c3279.666 -1424.4785 3279.002 -1424.415 3278.3379 -1424.3682 C3277.6777 -1418.0195 3276.9971 -1411.6729 3276.2188 -1405.3369 c3275.332 -1398.1162 3275.1523 -1391.0732 3274.7256 -1383.8252 c3274.293 -1376.4854 3273.041 -1369.0645 3272.1602 -1361.7588 c3271.2998 -1354.625 3270.4756 -1347.5078 3269.5898 -1340.3643 c3268.6094 -1332.4531 3268.7188 -1324.5508 3268.1113 -1316.6289 c3267.6953 -1311.2051 3265.7803 -1304.8828 3266.7959 -1299.4785 c3267.9961 -1293.0869 3268.2783 -1286.583 3268.3301 -1280.0967 c3268.377 -1274.1982 3268.6826 -1268.3887 3269.5557 -1262.543 c3270.5 -1256.2217 3272 -1250.3789 3272 -1243.9541 C3272 -1205.4629 L3272 -1193.7305 3271.1953 -1181.6191 3273.3457 -1170.0303 c3274.8662 -1161.8379 3262.2539 -1158.3398 3260.7256 -1166.5752 c3258.1289 -1180.5635 3259 -1194.958 3259 -1209.1172 C3259 -1231.0469 L3259 -1238.8389 3259.2871 -1246.6279 3257.8418 -1254.2979 c3256.583 -1260.9736 3255.6475 -1267.7227 3255.4404 -1274.5146 c3255.1982 -1282.3994 3255.4121 -1290.1143 3253.9473 -1297.9131 c3252.7344 -1304.374 3254.7539 -1311.6885 3255.252 -1318.1787 c3255.8672 -1326.209 3255.835 -1334.1855 3256.8291 -1342.209 c3257.7139 -1349.3398 3258.5254 -1356.4453 3259.3848 -1363.5723 c3260.2598 -1370.8271 3261.3955 -1378.1738 3261.8252 -1385.4561 c3262.2578 -1392.7998 3262.5508 -1399.8867 3263.4512 -1407.209 c3264.0967 -1412.4688 3264.667 -1417.7383 3265.2168 -1423.0088 C3255.5508 -1421.7344 3245.9004 -1420.0459 3236.2588 -1418.9883 c3229.1875 -1418.2129 3222.5088 -1415.6211 3215.4355 -1414.8418 c3208.5518 -1414.082 3201.6113 -1413.6885 3194.6807 -1413.8066 c3187.8604 -1413.9219 3180.2764 -1415.4268 3173.5146 -1414.459 c3165.9727 -1413.3799 3158.4316 -1412.3027 3150.8789 -1411.3027 c3136.6279 -1409.417 3122.3203 -1408.0771 3107.9453 -1407.8896 C3110.4092 -1405.5469 3112.5752 -1402.8906 3114.6133 -1399.9805 c3119.0938 -1393.582 3124.0195 -1387.5098 3128.7842 -1381.3193 c3133.4395 -1375.2705 3138.9111 -1369.9072 3143.8242 -1364.0527 c3149.2676 -1357.5684 3154.4268 -1350.8486 3159.7656 -1344.2793 c3164.748 -1338.1504 3169.6689 -1331.8164 3174.999 -1326.001 c3180.5781 -1319.9121 3186.2539 -1313.4111 3192.3682 -1307.8682 c3197.0723 -1303.6055 3202.4131 -1300.1133 3207.7666 -1296.7686 c3212.6006 -1293.748 3218.4219 -1291.9551 3220.8975 -1286.2959 c3222.543 -1282.5371 3221.4248 -1277.9297 3217.0137 -1276.748 c3210.8604 -1275.1006 3204.8867 -1276.3486 3198.6602 -1276.5156 c3191.2686 -1276.7139 3183.8789 -1278.0352 3176.4209 -1278.1426 c3160.7969 -1278.3691 3145.0811 -1278.3525 3129.5088 -1276.9668 c3114.9189 -1275.6689 3099.6406 -1273.1699 3085.6006 -1268.9473 c3082.1582 -1267.9111 3078.6934 -1266.6641 3075.2363 -1265.5762 c3073.8105 -1265.127 3071.5977 -1264.4258 3069.7188 -1263.6426 C3070.292 -1263.1875 3070.8779 -1262.7471 3071.4629 -1262.3105 c3074.3467 -1260.1592 3077.1094 -1257.8564 3079.918 -1255.6084 c3088.4785 -1248.7617 3096.9453 -1241.9824 3105.9531 -1235.749 c3121.6631 -1224.8789 3135.3535 -1211.3809 3149.5205 -1198.6494 c3164.0703 -1185.5752 3180.6934 -1175.332 3195.7656 -1162.9141 c3199.3682 -1159.9463 3202.7051 -1156.7158 3206.084 -1153.502 c3209.8223 -1149.9473 3214.1748 -1147.1631 3217.7285 -1143.3926 c3219.9834 -1141 3222.54 -1137.8594 3224.2227 -1135.0078 c3225.957 -1132.0693 3229.043 -1130.332 3229.8652 -1126.8047 c3230.5869 -1123.708 3228.9346 -1119.3135 3225.3262 -1118.8096 c3212.1484 -1116.9678 3199.7695 -1120.9502 3186.8018 -1122.5488 c3172.3936 -1124.3262 3158.1035 -1125.2275 3143.5879 -1125.2275 c3130.6602 -1125.2275 3116.5996 -1126.9785 3104.4268 -1121.7295 C3104.7744 -1120.7334 3105.2695 -1119.7148 3105.6484 -1118.8213 c3106.6436 -1116.4805 3108.3945 -1114.8164 3110.1563 -1113.0488 c3115.166 -1108.0156 3122.2773 -1104.3818 3128.292 -1100.7002 c3140.2432 -1093.3848 3151.3477 -1084.6191 3162.3887 -1075.98 c3173.9648 -1066.9224 3183.3066 -1055.6523 3193.7363 -1045.374 c3198.8809 -1040.3032 3204.7285 -1036.7388 3210.4424 -1032.3965 c3215.8926 -1028.2544 3220.9492 -1023.6631 3225.8623 -1018.9033 c3234.6396 -1010.4019 3245.8252 -1001.7988 3250.8232 -990.3696 c3251.6689 -988.4355 3251.5723 -986.5664 3250.9063 -984.9785 C3252.582 -981.1348 3250.6836 -975.5952 3245.21 -975.5928 c3237.4404 -975.5898 3229.665 -975.585 3222 -974.1665 c3214.291 -972.7402 3206.6641 -971.835 3198.8193 -971.7285 c3183.1563 -971.5146 3167.4473 -972 3151.7764 -972 C3127.8369 -972 L3119.957 -972 3111.9521 -970.7876 3104.0762 -970.1938 c3100.1533 -969.8984 3096.2246 -969.6416 3092.3242 -969.1143 c3090.9102 -968.9229 3089.6074 -968.9165 3088.1885 -968.8799 c3087.9082 -968.8726 3087.6797 -968.855 3087.4775 -968.834 C3088.9375 -966.0488 3092.9941 -962.4058 3094.4922 -960.8291 c3098.5283 -956.5791 3102.9473 -952.9404 3107.7822 -949.6333 c3114.4971 -945.0396 3120.8857 -939.9355 3127.4375 -935.1045 c3139.8281 -925.9707 3151.5381 -916.2974 3163.2695 -906.354 c3186.6865 -886.5073 3212.8271 -869.8613 3238.8008 -853.6113 c3251.5928 -845.6079 3264.7715 -838.7822 3278.0928 -831.7793 c3283.9238 -828.7148 3289.0244 -824.5444 3294.376 -820.7563 c3297.4727 -818.5645 3300.8594 -814.231 3304.7168 -812.8232 C3308.4736 -823.7104 3313.7168 -834.0625 3319.3984 -844.0688 c3326.7988 -857.1016 3334.6855 -869.8076 3341.834 -883.0146 c3348.4746 -895.2822 3357.1104 -906.6992 3362.9512 -919.3638 c3365.7617 -925.458 3368.0313 -931.7759 3371.0742 -937.7661 c3374.6309 -944.7671 3378.2285 -951.7539 3381.7422 -958.7817 c3385.1719 -965.6421 3387.6201 -973.146 3390.4688 -980.2666 c3392.6875 -985.8135 3395.6523 -990.3633 3398.8555 -995.3696 c3400.3975 -997.7798 3401.7373 -1000.2637 3402.6396 -1002.9814 c3403.0117 -1004.1021 3402.8926 -1005.2554 3402.9336 -1005.9546 C3402.7422 -1005.9385 3402.5479 -1005.917 3402.3545 -1005.8818 c3400.0293 -1005.4604 3397.7754 -1004.606 3395.5889 -1003.7349 c3392.5059 -1002.5068 3389.7412 -1000.0508 3386.5898 -999.1084 c3379.1543 -996.8862 3372.125 -993.668 3364.9766 -990.6885 c3358.6621 -988.0566 3352.2012 -985.8628 3345.8574 -983.3149 c3342.7363 -982.061 3341.2549 -980.6636 3339.0205 -978.2051 c3336.5293 -975.4634 3333.4512 -973.8525 3330.0645 -972.5088 c3322.2637 -969.4136 3318.9121 -981.9907 3326.6074 -985.0439 c3327.3066 -985.3213 3327.9365 -985.7139 3328.5244 -986.1694 C3328.9355 -994.291 3331.9053 -1001.813 3335.7773 -1008.9033 c3337.5801 -1012.2031 3340.1875 -1015.1255 3341.7119 -1018.5366 c3343.748 -1023.0928 3346.5869 -1027.2617 3349.5605 -1031.2466 c3355.2051 -1038.8071 3361.7148 -1045.5879 3367.125 -1053.3306 c3373.4434 -1062.374 3379.7041 -1071.4575 3385.7578 -1080.6812 c3391.1406 -1088.8828 3395.918 -1097.2588 3402.3086 -1104.7363 c3408.6777 -1112.1865 3414.6934 -1119.8408 3420.877 -1127.4404 c3426.9414 -1134.8926 3434.1494 -1141.3359 3439.6699 -1149.2148 c3441.5801 -1151.9404 3443.25 -1154.7988 3445.0889 -1157.5693 c3445.623 -1158.374 3446.6201 -1159.708 3447.5645 -1161.0459 C3443.2373 -1161.585 3438.5664 -1160.7344 3434.4756 -1159.9834 c3425.8555 -1158.4014 3417.3174 -1156.3086 3408.7725 -1154.373 c3390.291 -1150.1865 3371.752 -1146.084 3353.5244 -1140.8916 c3345.2109 -1138.5234 3337.0518 -1135.7188 3328.5313 -1134.2139 c3319.9814 -1132.7031 3311.5234 -1132.2588 3302.8828 -1131.7949 c3296.8652 -1131.4727 3291.5439 -1133.668 3290.5391 -1140.2461 c3289.9453 -1144.126 3290.4961 -1148.0977 3292.0947 -1151.5625 C3292.1738 -1154.6729 3294.4277 -1157.7139 3297.4355 -1158.2393 C3297.7656 -1158.4863 3298.1035 -1158.7266 3298.4551 -1158.9521 c3300.3477 -1160.1641 3302.1963 -1160.2422 3303.7598 -1159.6289 C3303.9063 -1159.8125 3304.0527 -1159.9951 3304.1914 -1160.1787 c3305.9541 -1162.5195 3307.4141 -1165.0859 3308.9707 -1167.5625 c3313.6025 -1174.9277 3319.1084 -1181.9053 3323.873 -1189.2344 c3328.8604 -1196.9063 3334.2949 -1204.4531 3339.9395 -1211.6494 c3343.002 -1215.5527 3346.3242 -1219.2539 3349.5117 -1223.0537 c3352.7412 -1226.9023 3355.4336 -1231.0352 3358.9385 -1234.6797 c3371.6016 -1247.8477 3381.5225 -1263.3535 3393.7568 -1277.0059 c3400.1377 -1284.127 3406.9053 -1290.7861 3413.7236 -1297.4629 c3419.6289 -1303.2451 3423.834 -1310.6973 3428.7539 -1317.3516 C3429.002 -1318.3105 3429.3105 -1319.2324 3429.6816 -1320.1719 C3423.6816 -1319.54 3417.7236 -1318.6387 3411.8291 -1317.3311 c3396.5039 -1313.9316 3381.8652 -1307.9072 3366.5215 -1304.6299 c3359.2939 -1303.0869 3352.335 -1300.4531 3345.1465 -1298.7412 C3345.3945 -1299.0762 3345.6426 -1299.4102 3345.8906 -1299.7441 C3345.3154 -1299.2568 3344.7129 -1298.8066 3344.084 -1298.3945 c3343.4033 -1297.9316 3342.6309 -1297.5859 3341.8955 -1297.2246 c3339.4785 -1296.0391 3336.9141 -1295.0898 3334.3174 -1294.3877 c3329.5898 -1293.1104 3324.5186 -1293.4023 3321.4043 -1297.5654 c3318.5156 -1301.4248 3319.6641 -1305.8145 3321.6484 -1309.7852 c3323.6133 -1313.7188 3326.7656 -1317.1611 3329.4766 -1320.5859 c3333.167 -1325.25 3336.7998 -1330.0322 3340.3193 -1334.8418 c3348.9902 -1346.6895 3356.1465 -1359.4395 3366.0811 -1370.3213 c3386.0762 -1392.2236 3408.1172 -1412.1338 3428.2227 -1433.917 c3430.2871 -1436.1543 3432.2627 -1438.4902 3434.1123 -1440.9092 c3434.3652 -1441.2402 3434.6504 -1441.5547 3434.9395 -1441.8652 C3431.5723 -1441.707 3428.1426 -1441.1045 3424.8789 -1441.1045 cf*U3113.3945 -184.8652 m3120.4873 -183.3257 3126.1992 -183.7461 3132.6172 -187.2666 c3144.5625 -193.8193 3154.084 -205.0981 3164.5801 -213.6304 c3170.3984 -218.3594 3175.1777 -223.1846 3179.7471 -229.1475 c3184.5957 -235.4731 3189.2578 -241.9038 3194.4736 -247.9375 c3203.9502 -258.9009 3213.3652 -270.2715 3223.5742 -280.5459 c3228.7031 -285.7075 3233.9434 -290.5991 3237.5586 -296.9795 c3241.166 -303.3467 3243.4121 -310.4312 3246.3594 -317.1099 c3250.4609 -326.4063 3257.9629 -334.0688 3262.666 -343.1416 c3267.7227 -352.8994 3276.0801 -361.3008 3279.0371 -372.0259 c3279.0469 -372.0596 3279.0596 -372.0898 3279.0684 -372.123 C3274.8418 -376.7998 3270.7686 -381.6196 3266.8945 -386.6343 c3264.9092 -389.2041 3263.7402 -390.5786 3261.1582 -392.377 c3258.498 -394.229 3255.9688 -396.2739 3253.6465 -398.5332 c3251.2217 -400.8926 3249.248 -403.4263 3246.6533 -405.6587 c3243.4775 -408.3911 3240.3105 -411.1328 3237.1436 -413.875 c3214.0234 -433.894 3191.5938 -454.2295 3170.7012 -476.6074 c3168.4961 -478.9688 3166.3145 -481.3516 3164.1387 -483.7397 c3158.5059 -489.9209 3167.6729 -499.1406 3173.3301 -492.9321 c3194.0635 -470.1802 3216.1699 -449.2061 3239.416 -429.0635 c3244.8887 -424.3213 3250.3594 -419.5776 3255.8457 -414.8511 c3261.3379 -410.1187 3265.6426 -404.939 3271.7656 -400.8477 c3274.4082 -399.082 3276.209 -395.6978 3278.1191 -393.1958 c3280.2158 -390.4507 3282.4395 -387.8032 3284.709 -385.2012 c3289.8125 -379.3525 3295.1006 -373.6035 3300.7207 -368.2437 c3305.9971 -363.2119 3311.5283 -358.5386 3315.9951 -352.752 c3320.4209 -347.0176 3324.7432 -341.2285 3329.793 -336.0176 c3339.6768 -325.8188 3350.7598 -317.2612 3358.8857 -305.4155 c3362.5449 -300.083 3366.2461 -295.4614 3371.2773 -291.3218 c3377.0635 -286.5615 3384.1455 -282.9736 3390.3887 -278.8193 c3402.1719 -270.9805 3415.0742 -264.1211 3428.1523 -258.7002 c3433.7178 -256.3931 3439.2041 -254.1763 3444.4785 -251.3213 C3444.8721 -252.7803 3445.2852 -254.2339 3445.6982 -255.6875 c3446.7656 -259.4414 3447.4297 -263.6421 3449.0742 -267.1777 c3451.1074 -271.5503 3452.3223 -276.1943 3455.9424 -279.6162 c3461 -284.396 3467.5586 -284.4771 3473.5889 -281.8779 c3476.1074 -280.793 3478.3516 -278.5381 3480.1904 -276.5664 c3482.5576 -274.0278 3482.8975 -273.4038 3485.5176 -271.3979 c3491.2344 -267.022 3496.1621 -261.9063 3500.793 -256.4141 c3503.0791 -253.7026 3505.1406 -250.8057 3507.2539 -247.9648 C3507.3945 -248.2388 3507.5313 -248.5151 3507.6777 -248.7861 c3509.1211 -251.4629 3510.7578 -254.2236 3512.4473 -256.7871 c3517.6621 -264.7031 3525.3379 -267.1475 3533.9434 -263.4253 c3540 -260.8052 3544.6787 -254.7402 3548.7803 -249.811 c3552.7529 -245.0356 3557.2041 -239.0146 3561.959 -236.189 c3562.6201 -235.7959 3563.4443 -235.561 3563.4033 -235.5269 C3563.6406 -235.5283 3564.0498 -235.5483 3564.2637 -235.5464 C3564.5938 -235.6553 3564.9902 -235.7847 3564.9844 -235.752 C3568.5996 -237.6655 3571.0127 -242.8589 3573.418 -246.4634 c3580.2305 -256.6733 3588.3574 -266.0371 3593.876 -277.0693 c3596.9141 -283.1431 3599.6826 -289.2637 3603.1338 -295.127 c3606.7188 -301.2153 3610.6338 -307.1416 3613.0078 -313.8379 c3614.0918 -316.8945 3616.4375 -319.4756 3617.7158 -322.5093 c3619.0371 -325.6455 3620.043 -328.9224 3621.1465 -332.1387 c3623.4648 -338.8911 3626.1465 -345.4873 3629.0898 -351.9897 c3634.7705 -364.5435 3639.6982 -376.9937 3646.498 -389.0366 c3652.835 -400.2588 3658.4785 -411.3315 3662.2783 -423.6821 c3663.1592 -426.5459 3663.4473 -431.001 3665.2002 -433.4287 c3667.1973 -436.1948 3668.915 -439.0771 3670.4941 -442.1001 c3673.8203 -448.4707 3676.1328 -455.3252 3679.1982 -461.8218 c3685.4844 -475.144 3693.1006 -487.8345 3697.2139 -502.0708 c3700.835 -514.605 3703.4922 -527.4253 3705.1543 -540.3662 C3703.8477 -542.6611 3703.7705 -545.6226 3706.1172 -548.0332 C3706.0361 -547.6094 3705.9551 -547 3705.875 -547 C3705.9473 -547 L3707.1953 -554.5337 3718.624 -554.8696 3718.8652 -547 C3718.875 -547 L3718.873 -546.9761 3718.8691 -546.9526 3718.8672 -546.9287 C3718.8701 -546.7939 3718.8789 -546.6631 3718.875 -546.5234 c3718.8496 -545.5708 3718.7305 -544.7222 3718.5332 -543.9307 C3716.873 -529.0552 3714.1436 -514.8403 3710.2695 -500.7002 c3706.2148 -485.9067 3698.8125 -472.4033 3692.0488 -458.7329 c3688.8184 -452.2061 3686.251 -445.3564 3683.2393 -438.7334 c3681.8135 -435.5991 3680.1611 -432.5586 3678.3359 -429.6416 c3676.2383 -426.2915 3675.5166 -422.5254 3674.3604 -418.7676 c3670.2305 -405.3428 3663.7734 -393.1982 3656.8955 -381.0166 c3649.8203 -368.4858 3644.7188 -355.3027 3638.8584 -342.1948 c3635.9551 -335.7021 3633.8057 -328.8896 3631.4424 -322.1904 c3629.0117 -315.3032 3625.3184 -308.9775 3622.2334 -302.3901 c3619.2158 -295.9478 3615.1074 -290.0361 3611.6426 -283.835 c3608.1328 -277.5547 3605.4883 -270.8379 3601.9541 -264.5654 c3598.8809 -259.1113 3594.7637 -254.356 3591.0352 -249.3584 c3586.8398 -243.7368 3583.6299 -237.4541 3579.3887 -231.8564 c3574.6074 -225.5469 3567.9648 -221.0317 3559.7969 -223.0864 c3553.2988 -224.7212 3548.2109 -230.4302 3544.0225 -235.2993 c3539.5215 -240.5322 3535.4346 -246.249 3530.0703 -250.6597 c3528.7197 -251.7705 3527.5313 -252.21 3526.4961 -252.311 C3526.4199 -252.2822 3525.9053 -252.2334 3525.5703 -252.1841 C3525.7715 -252.1685 3524.8525 -251.6611 3524.6104 -251.4038 c3522.2168 -248.8579 3521.3066 -245.3467 3519.1328 -242.6758 c3515.6934 -238.4492 3515.5596 -233.855 3509.7383 -231.7983 c3503.6992 -229.6655 3499.8506 -236.4604 3497.1631 -240.4507 c3493.8037 -245.4385 3489.2803 -250.1284 3485.1152 -254.4521 c3482.7773 -256.8779 3480.2529 -259.1802 3477.5771 -261.2285 c3474.6191 -263.4927 3472.5674 -265.6909 3470.0596 -268.3809 c3465.9072 -272.833 3463.9189 -269.4243 3462.2266 -265.1563 c3459.7412 -258.8862 3458.1553 -252.1914 3456.4199 -245.6563 c3454.8057 -239.5742 3450.6563 -235.1206 3443.9453 -237.0151 c3441.3193 -237.7568 3438.7852 -239.6069 3436.4434 -240.9521 c3432.7266 -243.0869 3428.6582 -244.5645 3424.6963 -246.1646 c3411.7002 -251.4131 3398.6338 -257.9907 3386.8594 -265.5991 c3375.1162 -273.1875 3362.2178 -280.0586 3353.2188 -290.9961 c3348.9453 -296.1899 3345.6914 -301.9951 3341.1543 -307.0044 c3336.2158 -312.4575 3330.624 -317.3022 3325.4023 -322.4761 c3320.6367 -327.1968 3316.0537 -331.6553 3311.876 -336.96 c3307.0879 -343.0371 3302.5625 -348.7197 3296.8984 -354.0273 c3294.2266 -356.5303 3291.5996 -359.0693 3289.0195 -361.6504 C3287.4268 -358.1753 3285.4688 -354.8784 3283.3379 -351.6396 c3279.0986 -345.1938 3275.0674 -338.8843 3271.5898 -331.9761 c3268.7666 -326.3696 3264.3887 -321.3662 3260.7998 -316.2246 c3256.71 -310.3633 3254.6387 -303.1655 3251.832 -296.6328 c3245.7773 -282.5391 3234.0664 -273.6963 3224.3359 -262.334 c3214.6953 -251.0781 3204.3281 -240.3174 3195.4092 -228.4731 c3191.1357 -222.7993 3186.9238 -217.0698 3182.1992 -211.7583 c3176.8086 -205.6982 3169.4863 -201.0581 3163.3779 -195.7095 c3153.627 -187.1733 3144.6445 -177.8477 3132.4102 -172.9023 c3126.498 -170.5127 3119.7539 -170.3091 3113.5791 -171.562 c3105.9629 -173.1079 3097.7969 -174.2974 3090.4336 -176.7534 c3076.21 -181.4966 3062.5781 -187.5322 3048.6826 -193.1177 c3043.9609 -195.0156 3039.1523 -196.5225 3034.1543 -197.4893 c3032.4824 -197.8125 3030.9609 -198.2939 3029.3809 -198.8135 C3031.5889 -187.6465 3034.9023 -177.2891 3032.0264 -165.7432 c3031.3818 -163.1538 3028.5469 -160.6924 3025.7588 -160.9712 c3022.7119 -161.2759 3020.2598 -162.0835 3017.4971 -163.3911 c3016.2734 -163.9707 3015.1523 -164.77 3014.0488 -165.5464 c3013.7842 -165.7329 3010.5156 -167.4194 3012.4521 -166.7476 c3009.583 -167.7432 3006.8096 -169.0303 3004.252 -170.6636 c3001.1309 -172.6572 3001.2998 -173.085 2998.2559 -174.1709 c2992.5166 -176.2188 2987.0957 -179.2715 2980.875 -179.2544 c2978.3154 -179.2471 2976.7539 -179.9141 2976.1504 -177.7446 c2975.5029 -175.4194 2974.8789 -173.2544 2973.9219 -171.0254 c2971.8467 -166.1885 2966.1875 -165.1885 2961.6563 -165.8833 c2959.6348 -166.1929 2957.8906 -167.5151 2955.8672 -167.8535 c2952.6162 -168.397 2949.3467 -169.6055 2946.1992 -170.5737 c2932.2109 -174.8774 2917.9961 -178.0283 2903.7656 -181.4385 c2889.0654 -184.9609 2874.6543 -189.5576 2860.1816 -193.8994 c2852.792 -196.1162 2845.4033 -198.333 2838.0137 -200.5498 c2830.5713 -202.7822 2822.6816 -203.9238 2815.1035 -205.6836 c2800.0469 -209.1792 2785.1094 -213.1743 2770.2285 -217.3472 c2757.8721 -220.812 2745.1787 -225.8638 2732.2607 -227 c2731.8789 -227.0337 2731.4971 -227.0728 2731.1152 -227.0996 C2730.7607 -227.04 2730.3926 -227 2730 -227 C2729 -227 2728 -227 V2728 -227.2471 L2719.8584 -227.5728 2719.8398 -239.8208 2728 -239.9922 C2728 -240.4717 L2742 -240.209 2755.0176 -235.1694 2768.1816 -231.4155 c2782.9668 -227.1987 2797.8584 -223.2012 2812.8018 -219.5762 c2820.4189 -217.728 2828.0918 -216.0181 2835.7656 -214.4194 c2843.3203 -212.8457 2850.6924 -210.3149 2858.085 -208.0977 c2872.6162 -203.7383 2887.0957 -199.0596 2901.7988 -195.3091 c2916.2754 -191.6162 2931.2334 -189.1709 2945.4258 -184.4697 c2950.8076 -182.6875 2956.6113 -181.6846 2961.8457 -179.5884 c2962.3262 -179.396 2962.8027 -179.2119 2963.2813 -179.0352 C2963.6748 -180.4165 2963.8428 -182.0601 2964.2441 -183.2671 c2968.498 -196.0703 2986.3301 -192.7173 2995.8164 -189.0317 c2998.7119 -187.9067 3001.5635 -186.7056 3004.5234 -185.751 c3007.6094 -184.7554 3009.3457 -182.8262 3012.0059 -181.127 c3014.5967 -179.4727 3017.9531 -179.1636 3020.2705 -177.1392 C3020.1143 -181.7139 3019.0596 -186.2402 3017.957 -190.8037 c3016.5908 -196.4565 3013.7969 -204.8525 3018.9541 -209.5781 c3022.7188 -213.0269 3027.1924 -213.0371 3031.877 -211.665 c3038.1338 -209.8325 3044.4893 -208.5557 3050.6289 -206.2437 c3064.5742 -200.9922 3077.9902 -194.6421 3092.1289 -189.8779 c3098.9883 -187.5669 3106.3184 -186.4014 3113.3945 -184.8652 cf*u1 D1864.8213 -314.8604 m1861.4243 -313.7676 1858.9526 -309.958 1857.0557 -307.1538 c1854.7427 -303.7344 1852.4712 -300.2983 1850.2168 -296.8618 c1847.8369 -293.2339 1846.459 -289.064 1845.3623 -284.9019 c1844.8115 -282.811 1842.9683 -281.4063 1842.2012 -279.3745 c1842.0518 -278.978 1841.9346 -278.5771 1841.8198 -278.1753 C1845.6138 -275.9253 1849.1865 -273.3652 1853.0049 -271.0479 c1859.0352 -267.3872 1865.2886 -264.7256 1870.8398 -260.3135 c1879.8867 -253.124 1886.3481 -241.2139 1875.917 -231.8779 c1873.9048 -230.0771 1871.6606 -228.5801 1869.2739 -227.3057 C1871.605 -225.9404 1873.8076 -224.291 1876.0205 -222.6147 c1881.8457 -218.2017 1888.3716 -214.5127 1894.4082 -210.3691 c1906.8394 -201.8364 1918.167 -191.7432 1928.9219 -181.2104 c1939.748 -170.6069 1949.334 -157.9785 1955.5195 -144.1519 c1958.1426 -138.2871 1960.1348 -132.8164 1959.8447 -126.354 c1959.5801 -120.4634 1958.1338 -114.7563 1953.9805 -110.4038 c1950.085 -106.3203 1943.6797 -106.9038 1938.584 -107.3169 c1931.8721 -107.8613 1925.1436 -107.7549 1918.4609 -108.6807 c1903.6567 -110.7314 1891.2075 -117.9771 1878.6797 -125.7065 c1866.1968 -133.4082 1854.083 -141.9912 1844.7964 -153.4053 c1841.6797 -157.2358 1838.7002 -161.1392 1835.8242 -165.1074 C1834.103 -162.6045 1833.2563 -159.4106 1832.1104 -156.665 c1830.2275 -152.1533 1829.1924 -147.4341 1827.9502 -142.7202 c1825.3799 -132.9688 1819.0107 -124.2666 1811.8574 -117.3101 c1808.4434 -113.9893 1804.4854 -111.1558 1800.4438 -108.6582 c1795.5752 -105.6499 1789.8838 -101.7876 1783.7979 -103.3735 c1775.7212 -105.4785 1768.6357 -111.2163 1764.7534 -118.563 c1757.7656 -131.7876 1759.8232 -149.8647 1761.0151 -164.2471 c1762.8486 -186.373 1766.6563 -208.4414 1776.4097 -228.5591 C1774.3052 -229.5059 1772.2412 -230.5439 1770.2363 -231.6929 C1766.5264 -229.9453 1761.1611 -231.582 1760.7734 -236.6025 C1749.8457 -235.7588 1743.2109 -221.5215 1744.8672 -211.8618 c1746.2734 -203.6646 1733.7466 -200.1553 1732.332 -208.4058 c1729.8027 -223.1523 1736.8516 -240.1182 1750.2051 -246.7739 C1747.9473 -248.7681 1745.79 -250.8828 1743.8975 -253.1411 C1736.7236 -253.1909 1728.9238 -253.291 1722.7471 -249.4185 c1717.1924 -245.9365 1713.165 -241.126 1714.8691 -234.3608 c1716.917 -226.228 1704.3799 -222.7793 1702.333 -230.9048 c1699.7402 -241.2021 1703.3198 -250.3413 1711.3408 -257.0869 c1719.0898 -263.603 1728.0073 -265.4365 1737.4561 -265.9414 C1737.3945 -266.2949 1737.3311 -266.6475 1737.2871 -267.0068 c1735.8276 -279.0063 1748.2905 -285.1948 1756.2607 -291.1699 c1763.4336 -296.5469 1771.3384 -300.8555 1780.5537 -300.5239 c1786.3745 -300.3145 1792.6782 -297.4512 1793.9995 -292.0024 C1797.0352 -291.9326 1800.0313 -291.6353 1802.9976 -291.166 C1803.8291 -299.8364 1805.9795 -308.1206 1809.7773 -316.1689 c1813.6201 -324.313 1818.7095 -332.9126 1828.5947 -333.6279 c1836.9639 -334.2339 1836.9053 -321.2295 1828.5947 -320.6279 c1824.9395 -320.3633 1821.7935 -311.2837 1820.5229 -308.5918 c1817.4854 -302.1543 1816.1714 -295.1538 1815.752 -288.0957 C1820.4229 -286.6206 1825.2549 -285.2427 1829.9385 -283.585 C1830.627 -285.5 1831.5293 -287.3335 1832.7012 -289.0215 c1832.9585 -289.3921 1833.1489 -289.6494 1833.3066 -289.8525 C1833.3174 -290.0513 1833.3843 -290.3984 1833.5615 -291.0078 c1833.9702 -292.415 1834.4883 -293.7866 1835.0078 -295.1553 c1836.0957 -298.0249 1837.4272 -300.7856 1838.9917 -303.4229 c1840.394 -305.7881 1842.3447 -307.7163 1843.6597 -310.1348 c1845.0278 -312.6504 1846.6563 -315.0098 1848.397 -317.2788 c1851.8535 -321.7852 1855.8608 -325.6255 1861.3652 -327.3965 c1869.3687 -329.9712 1872.7681 -317.4175 1864.8213 -314.8604 cf0 D1836.8955 -186.4463 m1840.3242 -180.8257 1844.1523 -175.4502 1848.0796 -170.1704 c1852.4956 -164.2344 1857.0488 -157.8813 1862.6997 -153.0811 c1872.8208 -144.4829 1884.1045 -137.3706 1895.6025 -130.7793 c1901.4209 -127.4438 1907.104 -124.5518 1913.6045 -122.7876 c1919.9795 -121.0581 1926.4775 -120.8916 1933.0322 -120.7437 c1935.3691 -120.6909 1937.7119 -120.3877 1940.04 -120.1987 c1941.4297 -120.0864 1942.8154 -120.0449 1944.208 -120.0356 c1944.7354 -120.0322 1945.1113 -120.0942 1945.3594 -120.1499 C1947.7891 -122.981 1947.127 -129.5215 1946.21 -132.4932 c1941.874 -146.5527 1932.6436 -156.9043 1923.4893 -167.9849 c1914.7861 -178.5195 1903.2241 -187.8125 1892.3032 -195.9526 c1886.6733 -200.1489 1880.7334 -204.0952 1874.9146 -207.978 c1872.2354 -209.7656 1869.2954 -211.1851 1866.8828 -213.3613 c1865.6211 -214.499 1862.0195 -217.2998 1860.3389 -217.4966 c1857.2754 -217.8555 1855.3423 -219.8872 1854.5498 -222.2441 C1850.0444 -221.3032 1845.4902 -220.7373 1841.2129 -220.311 c1833.9629 -219.5884 1826.8076 -219.668 1819.6709 -220.1563 C1823.8271 -208.2764 1830.3809 -197.126 1836.8955 -186.4463 cf1774.3242 -167.6958 m1773.1284 -155.3589 1771.4766 -140.9292 1774.6436 -128.813 c1776.2002 -122.8584 1779.9429 -119.0249 1785.4814 -116.5586 c1789.0205 -114.9824 1795.0615 -120.5454 1797.9004 -122.5156 c1801.3125 -124.8843 1804.2607 -127.9385 1806.9756 -131.0586 c1813.0308 -138.0181 1815.1445 -145.5767 1817.4956 -154.25 c1819.4277 -161.376 1822.5371 -169.8354 1827.48 -175.3926 c1827.7275 -175.6704 1827.9834 -175.9077 1828.2432 -176.1265 C1825.1377 -180.9043 1822.1797 -185.7881 1819.3613 -190.791 c1814.0015 -200.3037 1808.9971 -210.1118 1805.8584 -220.606 c1805.7632 -220.9238 1805.6992 -221.2319 1805.6494 -221.5352 C1803.1665 -221.833 1800.6802 -222.1479 1798.1865 -222.4663 c1794.9058 -222.8853 1791.6538 -223.5259 1788.4512 -224.3525 C1788.3447 -223.708 1788.1406 -223.0469 1787.8135 -222.3784 c1779.4863 -205.3564 1776.1387 -186.4131 1774.3242 -167.6958 cf1766.4702 -282.5615 m1762.2144 -279.7471 1757.8413 -276.6826 1753.8262 -273.5317 c1748.8184 -269.6016 1749.8555 -266.7681 1753.3003 -262.397 c1756.2036 -258.7134 1759.6465 -255.3545 1763.3984 -252.3027 C1766.0254 -260.2715 1770.2002 -267.7017 1774.0947 -275.4902 c1775.5918 -278.4854 1777.0425 -281.4258 1778.897 -284.2183 c1779.3608 -284.9165 1780.5869 -286.3066 1780.6885 -287.1719 C1780.7515 -287.6392 L1775.9199 -288.6563 1770.0449 -284.9258 1766.4702 -282.5615 cf1835.4551 -266.9272 m1832.7422 -266.5459 1829.832 -267.6455 1828.6455 -270.2305 C1827.0674 -270.8149 1825.459 -271.3184 1823.834 -271.7822 c1819.8682 -272.9136 1816.0635 -274.291 1812.1436 -275.6074 c1806.1948 -277.605 1800.1187 -278.8813 1793.8384 -279.0093 c1792.8604 -279.0293 1792.0005 -279.23 1791.2505 -279.5591 C1788.7852 -274.209 1785.4077 -269.105 1782.8262 -263.9414 c1779.5454 -257.3804 1776.1738 -251.3394 1774.6191 -244.5176 C1777.9121 -242.5498 1781.2681 -240.7666 1784.5786 -239.1753 c1790.4419 -236.3564 1796.8789 -235.6172 1803.2676 -234.8345 c1810.6211 -233.9341 1817.8438 -232.9595 1825.2637 -232.7617 c1838.2456 -232.4165 1851.9331 -233.2832 1863.6807 -239.2563 c1868.3389 -241.625 1869.6187 -243.5791 1865.8105 -247.5298 c1861.1748 -252.3398 1855.2778 -254.9229 1849.5127 -258.064 c1844.6279 -260.7256 1840.2236 -264.1079 1835.4551 -266.9272 Cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF