%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 1.eps)%%CreationDate: 03.10.18 13:09%%Canvassize: 16383%%BoundingBox: 107 -2157 3835 1%%HiResBoundingBox: 107.3311 -2156.9258 3834.0107 0.289551%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -741.4468 408.3306 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 76 8%%BeginData: 4950 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFFCFFFFFCFCFFFCFFD2BFFCFFFFFFFCFFFCFFFCFFD38FFCFFD%0BFFCFCFFFFFC9FFFFCFFD2CFFCAFFFFCFC9FFFFFFCAFD05FFCAFD30FFC9%CFCFFD0BFFCFFFCFCFFFFFCAFD25FFCFFD06FFCFFFFFCFCFFFFFCFFFFFFF%CACFCFCFCACFFD2FFFC9CFC9CFCAFD07FFCACFFFC9CAFFC9FD25FFC9CFCA%CFCACFFFFFCAFFFFFFC9FFFFCFCACFCAFFCFFFFFFFCAFD30FFCFCFC9CFCF%FD07FFCFFFC9FFCFFD25FFCFFD05FFCFCFCFFFCFFFFFCFFFFFC9CFFD06FF%CFCFFD32FFCFC9CFCAFD05FFCAFFC9CFCAFD27FFCAFD06FFCFCACFCFFFC9%FFCACFFD06FFCACFFD24FFCAFD10FFFD05CFFFCFCFC9CFCAFD29FFCAFD07%FFCACFCFCFCACFFD06FFCAFD21FFCFCFFFFFCACFCAFD10FFCACFC9CFC9FF%CAC9C9CFFD2AFFC9CFFD06FFC9CFCFCFC9FFFFFFCACFCAFD22FFCFCFFFC9%FFFFFFCAFD12FFCACFFD04FFCFCFCACFFD26FFCFFFC9CFCFFD08FFCFCFCF%C9CFCFFD0FFFCFFD11FFCFFFCFFFCFFFFFFFCFFD14FFCACFCAFFFFCFCAFF%CACFFD22FFCFCFCACFCAFFCFFFCACFCACFC9FFFFFFC9FFFFFFCFFFCACFCA%FD0AFFCFCAFFCAFD10FFCFC9CFCAFFCAFFCFCFFD13FFCFCFCACFC9CFCAFF%FFCFCFFD23FFCAFD0AFFCFCAFFCFCFCFFD06FFCFCFFD09FFCFFFFFCFFD12%FFCACFCFFFCFCFCFFD12FFCACFFFCFC9CFCFFFCACFCAFD24FFCFCAFD07FF%CACFC9CFC9FFCFC9CAFD05FFCFCFFD06FFCACFC9CFCACFCAFD10FFCFCACF%C9CEC9CFCACFCAFD10FFCFCFFFFFC9FFCFFD2AFFFD04CFFFCFCFC9CFFFFF%CFCFFFFFCAFFCFCFCFFFFFFFCFFD06FFCFCFCFCAFD13FFCFFFFFCFC9CFCF%FFCFCFFD0FFFCFCFFFFFCFCFFFCFFD2CFFCFFFCAFFCACFFFFFFFCFC9FFFF%CFCAFFCFCFCACFCFFD07FFCFCFCAFD13FFC9FFFFFFC9CFCAFFCAFD11FFCF%FFFFFFCFCFFFCAFD2FFFCFCFFD04FFCFCFFFFFCFCFFD23FFCFCACFCFCFFF%CFFD13FFC9FFFFCFC9FFCFCFFD2EFFCFCFFD04FFCACFCAFFFFFFCAFD25FF%CAFFCACFCAFD12FFCFFFFFCFCAFFFFFFCFFD2EFFCFCFFD07FFCFFFFFCFFD%3DFFC9CFCFFFCAFFCAFD2FFFCAFD05FFC9FFFFCFFFFFCAFD41FFCFCFCFFD%34FFCAFFFFFFCFCFFFCFFD41FFCACFCAFD2FFFCAFFFFFFC9CFFD04FFCACF%CAFD73FFCFCFFFCAFD7CFFCACFCAFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFDFCFFFDFCFFFDE2FFCAFD7DFFCFC9CFFD7DFFCFCFC9FD7CFF%C9CFC9CFFD7CFFCFCFCFC9FD7CFFCFCFCACFFD7CFFCFCFFFCAFD08FFCAFD%73FFCACFC9CFFD08FFCFFD75FFCFCAFD08FFCAFD74FFCFCACFFD08FFCFFD%74FFCAFD09FFCFCAFD73FFCACFFD09FFCFFD74FFCFFD04FFCFC9CFFFFFCA%FD75FFCACFCACFFFCFFFCAFFCFCFFD74FFCFCFCFFFC9FFFFCAFFC9CFFD75%FFCFC9CFCAFFFFFFFD04CFFD43FFCFFD31FFCACFCFFD05FFCFC9FD43FFCA%CFCFFD30FFCFFD08FFCFFD43FFCFCFFFCAFD2FFFCFFD08FFCAFD43FFCACF%C9CFCAFD2DFFCACFFD3BFFCFFFFFCFCFFD0DFFCACFCFFD2EFFCFFD09FFCA%FD31FFCACFCACFCACFFD0CFFCACFCACFCAFD2DFFCAFD09FFCFFFFFCACFCF%FD2DFFCFFFC9FFCAFD0CFFCFCFCFCACFCFFD2BFFCFFD0AFFCACFCAFFCACF%FD2DFFCFCACFC9CFCAFD0BFFC9C9C9CFC9FD2BFFCACFFD0AFFCFC9FFCFCF%FD2CFFFD04CFC9CFCACFFD08FFCFFFCFCFC9FFCFFFCFFD2AFFCFFD07FFC9%CFCFFFCAFFCFFD1FFFCFCFCAFD0BFFCACFCFFFC9CECFCFCAFD07FFCACFCA%CFCFCFCACFCACFCAFD28FFCFCAFD07FFCFCFCFFFCFFD20FFFD05CFFD0BFF%CAFFCFCFCACFFFCFFD08FFCACECFFFFFFFCFFFCFFD28FFCFCFFD08FFCFCF%CACFCAFD20FFCFC9FFFFCFFFFFCAFD0BFFCACFC9CFCAFD09FFC9FD2FFFC9%FD0AFFCFCFC9FD21FFCAFFFFFFCAFFCACFFD0BFFCFCAFD0CFFCFFD0CFFCF%FD1DFFCAFFFFFFCAFD0CFFCACFFD20FFCACFFFFFCACFCACFCAFD0BFFCFFD%0CFFCFCAFD0BFFCACFCAFD1BFFCFCFCAFFCACFCAFD0BFFCFCFFD21FFCFCF%CAFFFFCFC9FD16FFCFC9FFCFFFCAFD0BFFCACFFD0EFFCAFD0DFFCFFFCACF%FFFFCAFD09FFCFCAFD25FFCAFFC9C9CAFD15FFCACFC9CFC9CFFD0BFFCFCA%FD0BFFCFFFCACFC9FD0CFFCFC9C9CACFCAFD0AFFCFFD14FFCFCFFFCFFD0E%FFCFC9CFCAFD17FFCFCFC9FD0DFFCFFFCFFD09FFCFCFFFFD04CFFD0CFFCF%CAFD0CFFCAFD13FFCFCFCACFC9CFCFFD0DFFCFFFFFCFCFFD17FFCFCFFD0C%FFC9CEC9CFFD09FFCFC9CFCAFFCFFD0DFFCAFD0EFFCFFD12FFFD05CFCAFD%11FFCFFD19FFCAFD0EFFCFCFFD0AFFCFC9CFCFFD0EFFCFFD0DFFCFCFFD12%FFCAFFC9CEC9CFCACFCFFD0EFFCFCAFD17FFCACFFD0EFFCAFD0BFFCAFD11%FFCAFD0CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 Au*u1 D0 O0.00238 0.11249 0.431525 0 1 0.878431 0.623529 Xa0 J 0 j 1 w 10 M []0 d0 XR147.1782 -1925.9463 m151.0532 -1930.4014 155.0146 -1935.2861 159.9512 -1938.5752 c165.6279 -1942.3574 171.3511 -1946.0479 177.4233 -1949.1689 c179.9785 -1950.4824 182.6548 -1951.5723 185.3296 -1952.6143 c188.604 -1953.8896 192.3535 -1953.4541 195.8081 -1953.9521 c199.2178 -1954.4434 202.5986 -1955.1758 206.0024 -1955.7168 C206.0405 -1956.5928 206.0698 -1957.4688 206.0918 -1958.3457 C203.8203 -1962.8438 201.4155 -1967.2539 198.8354 -1971.4912 c192.4741 -1981.9395 184.5327 -1991.3057 176.6563 -2000.6211 c156.7485 -2024.1641 135.5581 -2049.3604 133.8013 -2081.4922 c133.3765 -2089.2588 133.8457 -2097.0684 134.0459 -2104.835 c134.146 -2108.7275 133.7959 -2112.8135 134.6348 -2116.6445 c135.1401 -2118.9521 136.9668 -2121.8691 137.1416 -2123.9238 c137.3672 -2126.5752 138.0825 -2128.9678 138.1348 -2131.6709 c138.1973 -2134.9424 138.1431 -2138.1455 138.6069 -2141.3965 c139.5693 -2148.1396 143.4336 -2153.2793 149.3618 -2156.5391 c149.6392 -2156.6914 149.9146 -2156.8154 150.189 -2156.9258 C154.8428 -2156.9258 L159.2241 -2155.0762 161.3013 -2148.2725 155.9233 -2145.3145 c151.5996 -2142.9355 151.2095 -2139.752 151.1455 -2135.1289 c151.0762 -2130.1309 150.7588 -2125.377 149.6479 -2120.541 c149.1743 -2118.4805 148.0581 -2116.5332 147.4565 -2114.4961 c146.5859 -2111.5459 147.1133 -2107.8945 147.0459 -2104.835 c146.8867 -2097.5879 146.542 -2090.3506 146.7368 -2083.0996 c147.4575 -2056.2783 165.4507 -2034.0361 181.9849 -2014.3848 c189.96 -2004.9063 198.0435 -1995.5186 205.2109 -1985.3994 c209.2427 -1979.707 212.6621 -1973.6777 215.8022 -1967.4951 C217.7256 -1966.5645 219.165 -1964.7061 219.1484 -1961.9082 c219.146 -1961.5088 219.127 -1961.1104 219.1211 -1960.7109 C220.8232 -1957.123 222.4775 -1953.5088 224.1304 -1949.8945 c230.5713 -1935.8066 236.0093 -1921.2471 239.6958 -1906.1914 c241.3862 -1899.2871 242.0117 -1892.1611 243.8174 -1885.3115 c245.6978 -1878.1768 246.71 -1870.8564 247.564 -1863.5371 c248.7573 -1853.3105 248.9814 -1842.9951 249.0098 -1832.6875 C250.8838 -1836.1953 255.6963 -1838.207 259.249 -1834.4902 c259.4092 -1834.3232 259.5591 -1834.1484 259.7163 -1833.9795 C266.2539 -1837.0781 273.3745 -1839.0576 280.4263 -1840.8105 c294.459 -1844.2969 310.542 -1842.4063 324.7666 -1840.4756 c337.8154 -1838.7051 352.4033 -1835.2627 363.1484 -1827.3047 c367.8169 -1823.8467 371.8149 -1819.7314 375.5205 -1815.2754 c380.3965 -1809.4131 383.4292 -1802.8682 386.8232 -1796.0801 c391.1929 -1787.3418 403.8867 -1773.5352 391.2065 -1766.0176 c383.457 -1761.4229 372.1978 -1762.4531 363.5991 -1762.8691 c353.2612 -1763.3691 342.9082 -1763.4727 332.9023 -1766.4326 c320.6006 -1770.0713 310.4243 -1778.1621 298.5171 -1782.4736 c287.7119 -1786.3867 277.709 -1792.3623 269.2485 -1800.1396 c264.1011 -1804.8711 260.5889 -1810.9336 256.7188 -1816.7051 C256.5649 -1816.5645 256.3999 -1816.4414 256.2485 -1816.2969 c253.9487 -1814.1064 251.1982 -1814.0684 249 -1815.1777 C249 -1795.8193 L249 -1788.125 244.665 -1779.6279 242.2427 -1772.3613 c237.3252 -1757.6094 237.458 -1741.3398 237.2041 -1725.876 c236.9395 -1709.7666 237.1313 -1693.6426 237.1313 -1677.5313 c237.1313 -1664.8047 236.6948 -1652.8564 241.1343 -1640.9932 C244.8535 -1639.9785 247.8193 -1635.9893 245.3428 -1631.7383 C247.2813 -1627.8584 249.3154 -1624.0225 251.2598 -1620.1533 c254.8257 -1613.0566 257.7881 -1605.6104 261.3462 -1598.4854 c264.6479 -1591.874 267.9448 -1585.2656 270.8848 -1578.4834 c273.8774 -1571.5811 278.3218 -1565.333 282.6719 -1559.21 c291.0659 -1547.3965 301.6162 -1537.5195 310.0024 -1525.6963 c319.8511 -1511.8105 328.2979 -1496.9658 335.8477 -1481.7236 c343.106 -1467.0693 348.4561 -1451.7354 355.0747 -1436.8408 c358.2183 -1429.7666 361.2275 -1423.6709 362.2739 -1415.8535 c363.3901 -1407.5137 362.7207 -1399.2773 364.7627 -1391.0781 c368.6108 -1375.626 373.8423 -1361.0391 368.9316 -1345.1191 c366.4683 -1337.1338 353.918 -1340.542 356.3955 -1348.5742 c360.707 -1362.5508 355.1821 -1375.7559 351.811 -1389.292 c350.0483 -1396.3701 350.311 -1403.2344 349.8584 -1410.4531 c349.3936 -1417.8623 346.8687 -1423.6729 343.8496 -1430.2793 c337.8291 -1443.4531 333.1846 -1457.1816 326.9722 -1470.3086 c320.4985 -1483.9873 313.1694 -1497.2539 304.9707 -1509.9736 c300.9619 -1516.1934 296.6646 -1522.2217 292.1836 -1528.1084 c287.7593 -1533.9209 282.0366 -1538.9141 277.4595 -1544.6787 c273.2729 -1549.9512 269.3882 -1555.4434 265.7124 -1561.0811 c261.3818 -1567.7227 258.4951 -1574.7969 255.0732 -1581.9229 c251.0186 -1590.3672 247.0366 -1598.8691 242.9727 -1607.3232 C243.04 -1604.0322 242.9883 -1600.7441 242.7358 -1597.3789 c241.7622 -1584.4014 238.3228 -1571.9902 233.6323 -1559.9043 c230.6758 -1552.2842 227.8652 -1545.1504 222.979 -1538.6348 c218.5654 -1532.75 213.9282 -1527.0313 209.0552 -1521.5215 c199.7983 -1511.0537 187.4629 -1497.1992 173.0195 -1494.4619 c165.9463 -1493.1221 159.3594 -1495.5918 155.2104 -1501.543 c149.3599 -1509.9346 150.6172 -1521.5391 151.2998 -1531.1816 c151.6221 -1535.7402 152.0923 -1540.2939 152.1431 -1544.8662 c152.208 -1550.7139 155.439 -1557.1094 157.6978 -1562.3701 c160.1343 -1568.0449 163.1343 -1573.4756 165.917 -1578.9834 c167.5103 -1582.1367 169.0366 -1585.3291 170.3774 -1588.5977 c171.5532 -1591.4658 174.0161 -1593.4854 176.0225 -1595.8008 c183.2495 -1604.1406 189.2803 -1613.0518 199.0083 -1618.7676 c203.9507 -1621.6709 207.9644 -1625.2266 213.3154 -1627.6016 c218.8936 -1630.0762 224.5479 -1632.2148 229.0542 -1636.4707 c229.0806 -1636.4961 229.1079 -1636.5146 229.1343 -1636.5391 C226.4834 -1643.5156 224.6689 -1650.6895 224.2246 -1658.501 c223.313 -1674.5254 224.1504 -1690.832 224.1504 -1706.8828 c224.1504 -1722.4316 224.2129 -1737.9736 225.5811 -1753.4736 c226.2666 -1761.2402 227.3188 -1768.4248 229.7832 -1775.8174 c232.353 -1783.5273 236.1514 -1791.4951 236.1514 -1799.6777 c236.1514 -1815.2305 236.3809 -1830.8047 235.8511 -1846.3516 c235.6182 -1853.1992 235.1626 -1860.0703 234.231 -1866.8613 c233.2192 -1874.2383 230.9517 -1881.3486 229.9014 -1888.6846 c227.7412 -1903.7793 223.1045 -1918.4502 217.5054 -1932.5918 c217.145 -1933.502 216.771 -1934.416 216.4028 -1935.3281 C213.0786 -1919.1191 206.6592 -1903.6543 196.6816 -1890.1533 c188.8774 -1879.5938 179.1265 -1870.3809 168.3408 -1862.9189 c159.6196 -1856.8857 150.4238 -1851.6992 141.8403 -1845.4453 c135.1001 -1840.5352 127.4277 -1834.7578 118.7964 -1834.2588 c107.0283 -1833.5781 106.5654 -1847.418 107.7944 -1855.5557 c111.7993 -1882.0684 130.0693 -1906.2754 147.1782 -1925.9463 cf0 D282.1875 -1806.0645 m292.0962 -1797.8652 304.9355 -1794.1504 316.1392 -1788.1748 c327.5581 -1782.084 338.73 -1776.9004 351.8843 -1776.4102 c360.4126 -1776.0928 368.9688 -1775.3037 377.5039 -1775.8223 c379.3569 -1775.9336 381.1323 -1776.2197 382.9321 -1776.6631 C381.6611 -1778.9053 380.0996 -1781.0186 378.793 -1783.2266 c376.6763 -1786.8037 375.002 -1790.7119 373.1436 -1794.4287 c370.1191 -1800.4775 367.0762 -1805.4854 362.4937 -1810.4805 c358.3965 -1814.9463 353.7432 -1818.4805 348.2793 -1821.1025 c342.4111 -1823.9189 335.0806 -1825.25 328.7598 -1826.6338 c320.7686 -1828.3838 312.5718 -1828.9238 304.4165 -1829.2158 c297.5288 -1829.4629 290.5952 -1829.9238 283.8818 -1828.2744 c278.4829 -1826.9473 273.0239 -1825.5635 267.8564 -1823.4717 C272.1304 -1817.2832 276.2241 -1810.999 282.1875 -1806.0645 cf229.6958 -1614.2754 m229.502 -1616.4922 229.4097 -1618.7109 229.457 -1620.9111 C227.2686 -1619.6807 224.9893 -1618.582 222.6143 -1617.5547 c219.8652 -1616.3662 217.1333 -1615.1777 214.4785 -1613.7871 c211.1943 -1612.0654 208.7979 -1609.249 205.5693 -1607.542 c200.3716 -1604.793 196.3877 -1600.2139 192.6714 -1595.7695 c190.7769 -1593.5029 188.9648 -1591.168 187.1035 -1588.874 c185.1953 -1586.5225 182.6274 -1584.377 181.5791 -1581.9346 c178.8545 -1575.5879 175.6289 -1569.4941 172.5083 -1563.3379 c169.7002 -1557.7988 165.2026 -1550.2529 165.1318 -1543.8682 c165.0146 -1533.2969 162.0996 -1522.0322 164.6118 -1511.5879 c165.2124 -1509.0918 166.5352 -1507.8867 167.7671 -1507.2002 c167.2061 -1507.5127 169.0718 -1507.0254 168.874 -1507.0332 c170.1611 -1506.9824 170.0967 -1507.0186 172.105 -1507.6279 c177.4829 -1509.2598 183.5449 -1514.4346 188.1587 -1518.6641 c198.3022 -1527.9619 207.3584 -1538.8193 215.0176 -1549.665 c218.6519 -1554.8105 220.5659 -1561.8311 222.7505 -1567.7129 c225.5713 -1575.3076 227.708 -1583.1064 229.0186 -1591.1016 c230.2725 -1598.7549 230.3701 -1606.5703 229.6958 -1614.2754 cf121.729 -1848.1367 m129.4136 -1851.5664 135.9238 -1857.3486 142.7798 -1862.1162 c147.5859 -1865.458 152.7305 -1868.3223 157.6777 -1871.4482 c163.7578 -1875.2891 169.0444 -1879.7148 174.334 -1884.5557 c190.939 -1899.752 200.9844 -1920.5166 204.6089 -1942.4922 C201.0747 -1941.8896 197.5479 -1941.1455 194.0225 -1940.7188 c185.998 -1939.7461 179.6538 -1935.7988 172.8662 -1931.5107 c159.8076 -1923.2607 150.0249 -1909.9834 141.2529 -1897.4404 c134.0317 -1887.1162 127.3608 -1876.2061 123.2563 -1864.2422 c121.4346 -1858.9316 120.1548 -1853.3721 120.1714 -1847.7422 C120.7471 -1847.8525 121.3682 -1847.9766 121.729 -1848.1367 cf*U*u1 D3407.2539 -2015.959 m3411.0596 -2022.0732 3415.4297 -2027.8281 3419.9268 -2033.4443 c3428.4014 -2044.0303 3438 -2053.7891 3448.377 -2062.5137 c3448.9229 -2062.9727 3449.5195 -2063.3311 3450.1406 -2063.6025 C3449.3145 -2065.6133 3448.4902 -2067.624 3447.6689 -2069.6348 c3441.877 -2083.8223 3440.791 -2099.2773 3435.2363 -2113.4102 c3429.7266 -2127.4297 3425.6445 -2141.7607 3425.4707 -2156.9258 C3438.4707 -2156.9258 L3438.6387 -2142.3271 3443.0938 -2128.7695 3448.3838 -2115.3096 c3453.7217 -2101.7266 3454.3418 -2086.6992 3460.2012 -2073.1348 c3463.2617 -2066.0527 3466.2842 -2058.9805 3469.3516 -2051.9404 C3481.6348 -2050.9727 3493.8184 -2048.6328 3505.7969 -2045.8584 c3520.3262 -2042.4941 3534.9512 -2039.0156 3549.3789 -2035.2402 c3560.5957 -2032.3047 3571.5703 -2027.6094 3577.915 -2017.4033 c3579.667 -2014.5859 3581.8809 -2012.291 3583.3555 -2009.2695 c3584.6787 -2006.5605 3585.5684 -2003.6406 3586.5371 -2000.793 c3587.3906 -1998.2842 3588.418 -1996.3086 3588.5146 -1993.6074 c3588.5898 -1991.5068 3588.7725 -1989.4102 3588.875 -1987.3105 c3589.3027 -1978.5713 3588.6973 -1967.4199 3580.0986 -1962.6318 c3576.0986 -1960.4043 3571.2324 -1961.8359 3567.0547 -1962.8213 c3561.7598 -1964.0703 3556.5645 -1965.8066 3551.4561 -1967.6621 c3547.6699 -1969.0381 3544.2295 -1970.6504 3540.4268 -1971.5908 c3535.7793 -1972.7393 3531.1387 -1973.9082 3526.5234 -1975.1787 c3519.9424 -1976.9902 3513.4434 -1979.0957 3507.1016 -1981.6025 C3513.9668 -1972.4668 3521.5566 -1963.7773 3528.6445 -1954.917 c3538.9102 -1942.085 3547.9375 -1928.6699 3557.0498 -1915.002 c3565.877 -1901.7607 3574.3154 -1888.1807 3584.2539 -1875.7334 c3593.0332 -1864.7383 3602.7363 -1854.5254 3612.6045 -1844.5137 c3617.7617 -1839.2813 3622.8184 -1834.4258 3626.9609 -1828.3281 c3631.5605 -1821.5596 3635.6875 -1814.4785 3639.6563 -1807.3262 c3647.0576 -1793.9902 3654.2969 -1780.4561 3661.2734 -1766.8965 c3668.4434 -1752.959 3676.8584 -1739.6963 3684.4375 -1725.9824 c3691.752 -1712.748 3696.2373 -1698.8623 3699.7764 -1684.2041 c3703.2402 -1669.8584 3706.9453 -1655.4277 3709.8398 -1640.9668 c3712.0098 -1630.124 3713.8223 -1619.2139 3715.5566 -1608.293 C3715.9473 -1608.3584 3716.3457 -1608.3896 3716.75 -1608.3721 c3723.209 -1608.0869 3729.4375 -1606.0898 3734.5557 -1602.0859 c3736.2227 -1600.7813 3739.5908 -1599.8945 3742.3184 -1598.8408 c3746.2441 -1597.3232 3750.1816 -1595.7559 3754.0762 -1594.1602 c3767.5293 -1588.6514 3780.7598 -1582.5947 3793.584 -1575.7432 c3804.2129 -1570.0645 3815.8789 -1562.6396 3823.6523 -1553.2617 c3825.4756 -1551.0625 3827.0205 -1548.709 3828.3105 -1546.1641 c3829.5879 -1543.6426 3829.9063 -1540.7158 3831.0283 -1538.249 c3833.3428 -1533.1621 3833.8975 -1527.4219 3833.0908 -1521.9238 c3831.627 -1511.9658 3822.752 -1505.6621 3813.4941 -1503.2051 c3803.9824 -1500.6797 3794.1924 -1503.4688 3785.4375 -1507.1885 c3768.1406 -1514.5371 3754.3105 -1528.1055 3739.959 -1539.8242 c3734.9844 -1543.8857 3730.165 -1547.999 3725.5352 -1552.3037 C3729.3242 -1534.4219 3733.6523 -1516.6738 3738.4258 -1498.8906 c3742.3506 -1484.2705 3745.8945 -1469.2695 3750.832 -1454.957 c3755.6592 -1440.9609 3764.6895 -1428.8018 3771.1914 -1415.5938 c3777.4023 -1402.9785 3784.0605 -1390.4824 3791.2578 -1378.374 C3791.2305 -1382.0293 3791.4541 -1385.6387 3791.8828 -1389.0654 c3793.127 -1399.0049 3799.4307 -1405.3799 3809.8154 -1403.0586 c3818.833 -1401.043 3827.3838 -1394.8359 3834.0107 -1388.0391 C3834.0107 -1366.959 L3829.3965 -1374.3721 3823.7061 -1381.0625 3816.3008 -1385.8145 c3813.3105 -1387.7334 3809.0947 -1390.3828 3805.4414 -1390.6797 C3805.3975 -1390.6016 3805.3477 -1390.5127 3805.293 -1390.4121 c3804.7793 -1389.4795 3804.7314 -1387.8115 3804.6367 -1386.7549 c3803.835 -1377.7744 3804.084 -1367.0039 3808.0645 -1358.7754 c3808.9707 -1356.9014 3809.7402 -1354.9941 3810.4531 -1353.0693 C3811.2754 -1352.1553 3812.0293 -1351.2119 3812.6201 -1350.2041 c3813.6797 -1348.3965 3813.5313 -1346.2617 3813.5117 -1344.3457 C3813.7246 -1343.7549 3813.9395 -1343.1641 3814.165 -1342.5732 c3816.4199 -1336.6514 3819.2598 -1330.9463 3822.0596 -1325.2676 c3822.5625 -1324.248 3823.0625 -1323.1133 3823.5762 -1321.9248 C3824.1865 -1321.3516 3824.7979 -1320.7813 3825.4131 -1320.2158 c3828.4717 -1317.4072 3831.4375 -1314.4795 3834.0107 -1311.2695 C3834.0107 -1292.252 L3833.4336 -1292.2588 3832.8525 -1292.3594 3832.2832 -1292.5742 c3821.9902 -1296.4668 3817.8281 -1304.6641 3813.2813 -1313.792 C3810.6582 -1316.2441 3808.0273 -1318.6895 3805.4043 -1321.1367 c3798.2324 -1327.8262 3787.5156 -1334.374 3777.4092 -1334.3418 c3769.2842 -1334.3164 3761.0781 -1334.0869 3753.0234 -1332.958 c3747.0654 -1332.123 3736.3428 -1330.6377 3732.9756 -1325.8594 c3729.6152 -1321.0898 3737.2266 -1313.1436 3741.1973 -1309.748 c3747.8359 -1304.0723 3756.3203 -1300.0527 3764.3867 -1296.8604 c3773.8906 -1293.0986 3783.9502 -1291.3301 3793.7344 -1288.4512 c3800.6865 -1286.4063 3807.6025 -1284.2627 3814.6309 -1282.4922 C3821.1631 -1281.8516 3827.6514 -1280.8125 3834.0107 -1279.3105 C3834.0107 -1249.6162 L3829.3896 -1246.667 3824.5566 -1243.9434 3820.0059 -1240.501 c3809.4414 -1232.5088 3799.4004 -1223.8047 3790.4238 -1214.0488 c3789.2129 -1212.7324 3788.0488 -1211.373 3786.8857 -1210.0146 c3786.3789 -1209.4219 3786.0391 -1209.0566 3785.8027 -1208.8271 C3785.291 -1207.4795 3784.7168 -1206.1533 3784.1563 -1204.8271 c3782.8936 -1201.8379 3781.5938 -1198.8652 3780.3701 -1195.8594 c3777.582 -1189.0107 3774.458 -1181.4893 3774.2783 -1174.001 c3774.2422 -1172.499 3774.2783 -1172.2461 3774.7959 -1170.6875 C3774.7998 -1170.6865 3774.8047 -1170.6855 3774.8086 -1170.6836 C3774.7725 -1170.9492 3775.416 -1170.5078 3775.0156 -1170.6113 C3777.8076 -1169.6582 3780.751 -1171.1504 3783.2422 -1172.7031 c3791.6641 -1177.9531 3797.667 -1187.7666 3803.167 -1195.7598 c3805.8154 -1199.6084 3809.0605 -1203.4414 3811.1465 -1207.6133 c3814.1484 -1213.6152 3817.1895 -1219.5957 3820.4297 -1225.4736 c3824.4492 -1232.7637 3828.9463 -1239.7939 3834.0107 -1246.3877 C3834.0107 -1197.3906 L3833.2998 -1195.3242 3832.6338 -1193.3262 3832.0049 -1191.4629 c3828.5049 -1181.0957 3825.1367 -1170.6807 3821.6768 -1160.2998 c3820.0039 -1155.2803 3818.7227 -1151.501 3821.2842 -1146.582 c3823.2031 -1142.8984 3826.9111 -1140.5625 3830.376 -1138.5234 c3831.5752 -1137.8184 3832.7695 -1137.25 3834.0107 -1136.7568 C3834.0107 -1122.8984 L3831.1797 -1123.5947 3828.3594 -1124.8906 3826.3711 -1125.9043 c3816.8223 -1130.7754 3808.6787 -1138.1445 3806.9805 -1149.1758 c3805.874 -1156.3662 3808.6953 -1162.418 3810.9414 -1169.1563 c3813.082 -1175.5791 3815.2461 -1181.9941 3817.3379 -1188.4326 c3818.3535 -1191.5596 3819.3887 -1194.7715 3820.4844 -1198.0068 C3820.4688 -1197.9854 3820.4561 -1197.9629 3820.4404 -1197.9414 c3817.3193 -1193.6436 3814.4189 -1189.1865 3811.3652 -1184.8428 c3805.0938 -1175.9219 3798.248 -1166.7432 3788.8613 -1160.8906 c3781.9121 -1156.5596 3771.1318 -1155.3672 3765.1953 -1162.0801 c3759.7285 -1168.2627 3761.0596 -1177.3877 3762.8516 -1184.7295 c3764.8613 -1192.957 3768.3965 -1200.8037 3771.7246 -1208.5596 c3772.7432 -1210.9316 3773.3848 -1213.9336 3775.4102 -1216.4297 c3780.2539 -1222.4014 3785.5244 -1227.9531 3791.1191 -1233.2266 c3792.9893 -1234.9893 3794.9063 -1236.7383 3796.8477 -1238.4707 C3794.4648 -1237.2988 3792.0869 -1236.1182 3789.7129 -1234.9355 c3784.2744 -1232.2256 3778.5195 -1230.3887 3772.7656 -1228.4502 c3753.8213 -1222.0693 3725.0361 -1217.2959 3714.5244 -1240.0127 c3706.5947 -1257.1484 3726.1348 -1268.7539 3739.3174 -1274.1738 c3748.7949 -1278.0703 3758.6914 -1280.3262 3768.7559 -1281.6309 C3766.7373 -1282.248 3764.7285 -1282.8984 3762.7461 -1283.6309 c3746.5469 -1289.6162 3726.2783 -1299.2656 3720.3369 -1316.8594 c3713.2588 -1337.8184 3738.4639 -1344.0625 3753.5332 -1346.0283 c3761.6729 -1347.0908 3769.915 -1347.3184 3778.1143 -1347.3438 c3786.1133 -1347.3691 3794.5098 -1344.1445 3801.7725 -1339.8555 C3800.9727 -1341.8359 3800.1719 -1343.8174 3799.3701 -1345.7998 C3781.502 -1365.4033 3770.1699 -1389.8516 3758 -1413.1465 c3751.5879 -1425.4219 3743.999 -1436.9219 3738.9502 -1449.8887 c3733.7207 -1463.3174 3730.6504 -1478.0313 3726.8691 -1491.9297 c3719.7988 -1517.918 3713.5508 -1543.8633 3708.7207 -1570.2695 C3702.4004 -1578.3184 3696.0547 -1588.8467 3695.498 -1598.8711 c3695.3027 -1602.3887 3698.6025 -1605.4023 3701.998 -1605.3711 c3702.3125 -1605.3682 3702.623 -1605.3574 3702.9316 -1605.3398 C3701.4121 -1614.8086 3699.8418 -1624.2695 3698.0547 -1633.6924 c3695.2822 -1648.3154 3691.4004 -1662.7754 3688.0586 -1677.2861 c3684.6582 -1692.0557 3680.502 -1706.0811 3673.2148 -1719.4219 c3665.6992 -1733.1777 3657.3203 -1746.4414 3650.0488 -1760.335 c3642.9697 -1773.8604 3635.7832 -1787.3828 3628.4316 -1800.7656 c3624.8027 -1807.3721 3620.9395 -1813.8428 3616.8125 -1820.1514 c3612.4414 -1826.835 3606.5762 -1832.0947 3601.0039 -1837.7686 c3591.1357 -1847.8174 3581.6279 -1858.1973 3572.9033 -1869.2617 c3563.0703 -1881.7314 3554.627 -1895.2383 3545.8242 -1908.4404 c3536.5889 -1922.2939 3527.374 -1935.8223 3516.9697 -1948.8281 c3506.9053 -1961.4082 3496.0195 -1973.6309 3487.4248 -1987.2744 c3485.834 -1989.8008 3484.291 -1992.3535 3482.7793 -1994.9238 C3475.3457 -2000.8408 3469.2646 -2008.2383 3465.7441 -2017.251 C3464.2598 -2013.1367 3462.5762 -2009.0781 3460.7344 -2005.0762 c3454.7119 -1991.9873 3448.0918 -1979.9648 3439.5645 -1968.3135 c3436.3418 -1963.9102 3433.7109 -1959.6152 3431.0098 -1954.9043 c3428.3623 -1950.2861 3425.0723 -1945.8496 3421.0098 -1942.3887 c3416.6289 -1938.6572 3411.6953 -1936.0732 3406.2344 -1939.0049 c3402.5859 -1940.9639 3399.876 -1944.6777 3398.2422 -1948.3838 c3391.4648 -1963.7578 3394.8252 -1983.876 3398.7002 -1999.6387 c3400.084 -2005.2705 3404.2275 -2011.0977 3407.2539 -2015.959 cf0 D3763.8848 -1267.9336 m3756.5859 -1266.6934 3749.249 -1264.4561 3742.4688 -1261.4941 c3736.4473 -1258.8633 3729.1738 -1255.2119 3726.1084 -1249.5664 c3725.4199 -1248.2988 3725.4893 -1246.9658 3726.4785 -1245.1104 c3728.7266 -1240.8936 3733.1572 -1238.0938 3737.5996 -1236.7471 c3747.8174 -1233.6504 3759.6338 -1237.7822 3769.3105 -1240.9863 c3782.0342 -1245.1992 3793.5723 -1251.6768 3805.9004 -1256.8682 c3811.4707 -1259.2139 3816.9502 -1261.0752 3822.1797 -1264.1621 c3823.7246 -1265.0742 3825.2764 -1266.0137 3826.8516 -1266.918 C3823.6563 -1267.6621 3820.46 -1267.9111 3817.2813 -1268.5713 c3815.8115 -1268.877 3814.3496 -1269.2109 3812.8906 -1269.5576 C3806.6113 -1270.1396 3800.2871 -1270.3438 3793.9551 -1270.2959 c3787.3418 -1270.2461 3780.7334 -1269.8018 3774.1572 -1269.1123 c3770.6484 -1268.7441 3766.042 -1268.2998 3763.8848 -1267.9336 cf3720.9189 -1575.7441 m3723.2813 -1572.8809 3725.8369 -1570.1621 3728.4023 -1567.4609 c3736.5859 -1558.8457 3745.9922 -1551.7803 3754.998 -1544.1006 c3762.1543 -1537.998 3769.3643 -1531.9932 3777.167 -1526.7227 c3784.6787 -1521.6494 3793.4004 -1516.4707 3802.5918 -1515.416 c3809.1016 -1514.6689 3819.7188 -1517.0039 3820.4307 -1524.8301 c3820.8594 -1529.5469 3818.9844 -1534.1328 3817.5322 -1538.5176 c3815.71 -1544.0176 3810.9355 -1548.165 3806.5762 -1551.6699 c3784.5938 -1569.3428 3756.4121 -1579.7705 3730.2715 -1589.6035 c3728.0508 -1590.4385 3726.4395 -1592.1943 3724.4004 -1593.3877 c3723.5313 -1593.8965 3722.5684 -1594.29 3721.5664 -1594.5898 C3720.6602 -1593.4619 3719.4102 -1592.7422 3718.0605 -1592.4326 C3718.9463 -1586.8438 3719.9121 -1581.2871 3720.9189 -1575.7441 Cf3493.04 -2003.3018 m3501.7051 -1997.1699 3512.335 -1993.1533 3521.9268 -1990.0928 c3526.4209 -1988.6582 3530.9756 -1987.416 3535.5391 -1986.2256 c3539.9609 -1985.0723 3545.1426 -1984.5156 3549.2637 -1982.5215 c3556.7939 -1978.877 3566.168 -1975.5547 3574.4199 -1974.5156 C3574.623 -1974.7676 3574.7734 -1975.082 3574.8887 -1975.3818 c3575.5645 -1977.1299 3575.7695 -1978.9785 3575.8936 -1980.8301 c3576.1758 -1985.0566 3575.7363 -1989.3008 3575.5234 -1993.5195 C3575.4023 -1993.7803 3575.2559 -1994.1211 3575.0742 -1994.5684 c3574.5176 -1995.9414 3574.0156 -1997.3193 3573.5381 -1998.7227 c3572.5498 -2001.6289 3571.6055 -2004.4824 3569.6709 -2006.9316 c3565.7832 -2011.8535 3563.0469 -2015.8711 3557.2891 -2018.8242 c3552.5762 -2021.2422 3547.168 -2022.4316 3542.0605 -2023.7061 c3534.5273 -2025.5869 3526.9492 -2027.2891 3519.4141 -2029.1689 c3504.8711 -2032.7988 3490.2773 -2036.5381 3475.3779 -2038.3633 C3480.7871 -2026.4531 3486.5293 -2014.7168 3493.04 -2003.3018 Cf3411.6279 -1951.4121 m3416.4258 -1954.5537 3419.5459 -1960.8203 3422.0313 -1965.5674 c3426.3125 -1973.749 3432.8887 -1980.8662 3437.8447 -1988.7051 c3443.0449 -1996.9287 3446.9512 -2005.8691 3450.9121 -2014.7295 c3454.084 -2021.8213 3456.5303 -2029.3467 3457.707 -2037.0449 C3454.7422 -2037.3447 3452 -2039.3262 3452 -2043 C3452 -2045.916 L3452 -2046.9043 3452.2578 -2047.8477 3452.6982 -2048.6992 C3452.5215 -2048.6621 3452.3496 -2048.6191 3452.166 -2048.5898 C3443.8672 -2041.0898 3436.1875 -2032.9297 3429.1191 -2024.252 c3424.9336 -2019.1133 3421.1338 -2013.6641 3417.6328 -2008.0391 c3414.8145 -2003.5117 3411.7607 -1998.668 3410.5918 -1993.4277 c3408.7363 -1985.1152 3407.7188 -1976.6064 3407.7197 -1968.0869 c3407.7197 -1962.9414 3407.8867 -1955.3906 3411.6279 -1951.4121 Cf*U*u1 D1199.085 -1997.5713 m1209.1758 -1999.6973 1219.4165 -2001.5156 1229.71 -2001.3564 c1235.3555 -2001.2695 1240.9321 -2000.7646 1246.52 -1999.9785 c1249.5396 -1999.5537 1252.5186 -1998.8906 1255.481 -1998.1787 c1258.6919 -1997.4082 1262.0503 -1994.4258 1264.9756 -1992.8545 c1270.2476 -1990.0234 1275.6846 -1987.543 1280.8594 -1984.5254 c1286.0454 -1981.5 1291.3145 -1979.375 1296.0654 -1975.5889 c1300.2358 -1972.2656 1302.4316 -1967.4258 1306.1226 -1963.7344 c1307.8438 -1962.0137 1309.5645 -1960.292 1311.2856 -1958.5713 C1312.0723 -1960.2207 1313.4746 -1961.5996 1315.498 -1962.165 C1315.5195 -1962.2324 1315.7207 -1962.4551 1316.0835 -1963.0098 c1316.7759 -1964.0684 1317.354 -1965.2627 1317.8398 -1966.4297 c1319.1655 -1969.6084 1320.1836 -1972.9111 1321.4072 -1976.1299 c1324.8843 -1985.2754 1329.8242 -1994.5869 1335.0278 -2002.8477 c1339.8687 -2010.5322 1345.1021 -2017.957 1349.9131 -2025.6582 C1345.7461 -2026.5889 1341.3789 -2026.9814 1337.2427 -2027.5332 c1334.3882 -2027.9141 1331.543 -2028.3145 1328.7021 -2028.793 c1326.457 -2029.1709 1323.7949 -2030.415 1321.5508 -2030.415 c1316.3291 -2030.416 1311.1123 -2030.4932 1305.9004 -2030.8418 c1297.1646 -2031.4238 1290.1548 -2033.1191 1283.3052 -2038.6504 c1277.3745 -2043.4395 1270.457 -2051.2969 1270.8193 -2059.4336 c1271.208 -2068.1836 1280.0732 -2070.5859 1287.272 -2071.0938 c1294.8164 -2071.625 1303.2192 -2070.9023 1310.7241 -2069.9814 c1321.9009 -2068.6094 1332.4502 -2064.373 1342.6025 -2059.6797 c1349.3691 -2056.5508 1356.4131 -2054.4434 1362.8638 -2051.0957 C1363.8179 -2053.4121 1364.7334 -2055.7363 1365.6074 -2058.0566 c1373 -2077.6836 1376.1865 -2098.4111 1376.2715 -2119.3203 c1376.3208 -2131.5244 1377.6597 -2144.541 1376.0977 -2156.9258 C1388.9072 -2156.9258 L1390.2065 -2145.0127 1389.4941 -2132.7686 1389.2871 -2120.7393 c1388.8862 -2097.4326 1385.7676 -2074.8438 1377.5122 -2052.9258 c1376.2715 -2049.6309 1374.938 -2046.3408 1373.5303 -2043.0723 C1373.6475 -2042.8809 1373.752 -2042.6875 1373.8428 -2042.4922 C1375.6924 -2045.8477 1378.5713 -2046.416 1383 -2046.416 c1389.6143 -2046.416 1390.7539 -2037.252 1386.4316 -2034.0752 C1386.498 -2033.8477 1386.5586 -2033.6484 1386.6104 -2033.5098 c1387.3232 -2031.6055 1388.1895 -2029.8193 1388.8086 -2027.8789 C1388.8638 -2027.6455 1388.9189 -2027.4385 1388.9741 -2027.2051 C1389.2393 -2024.9492 1389.2803 -2024.9141 1389.0977 -2027.0742 C1389.8618 -2025.8975 1390.5459 -2024.6768 1391.2339 -2023.4561 c1392.9956 -2020.3271 1394.4766 -2017.04 1395.8501 -2013.7256 c1400.8799 -2001.5898 1402.4492 -1988.3301 1403.5903 -1975.3174 c1404.7344 -1962.2705 1404.9165 -1948.623 1403.7559 -1935.5615 c1402.8701 -1925.5918 1400.5596 -1913.9521 1391.5405 -1908.1689 c1377.5864 -1899.2217 1369.5654 -1919.9063 1366.7373 -1929.626 c1363.0474 -1942.3057 1361.8608 -1955.499 1358.6338 -1968.252 c1357.6523 -1972.1328 1358 -1976.3994 1358 -1980.3828 C1358 -1997.4375 L1358 -2003.2988 1357.7026 -2007.9902 1360.6558 -2013.2041 c1362.0088 -2015.5928 1363.5684 -2017.8555 1365.0684 -2020.1553 C1364.2393 -2020.5918 1363.3892 -2020.9775 1362.5234 -2021.334 C1356.498 -2011.2109 1349.4839 -2001.7031 1343.373 -1991.6309 c1338.3838 -1983.4063 1334.5376 -1974.208 1331.2354 -1965.1963 c1329.2197 -1959.6943 1326.7451 -1953.8184 1321.8428 -1951.0137 C1322.7148 -1949.999 1323.2661 -1948.6338 1323.2588 -1946.9063 c1323.2559 -1946.2061 1323.2412 -1945.5117 1323.229 -1944.8164 C1323.291 -1944.2852 1323.2764 -1943.7559 1323.1943 -1943.2383 C1322.7607 -1928.1152 1319.9941 -1914.0566 1313.8691 -1900.0117 c1307.624 -1885.6895 1297.918 -1870.4932 1285.1455 -1861.1768 c1281.9448 -1858.8418 1278.5942 -1856.9297 1274.9531 -1855.3672 c1271.647 -1853.9482 1269.6416 -1851.9678 1266.1143 -1849.6924 c1262.8481 -1847.5859 1259.2251 -1846.0254 1255.6885 -1844.4404 c1252.7026 -1843.1025 1250.5488 -1840.9404 1247.709 -1839.5195 c1234.0405 -1832.6855 1227.1846 -1853.9277 1235.4658 -1861.0752 C1236.1855 -1870.2354 1238.6001 -1880.0986 1242.5874 -1888.0781 c1243.6621 -1890.2285 1244.9297 -1892.5479 1246.123 -1894.9531 C1239.6299 -1891.7783 1232.9829 -1889.3984 1224.9507 -1889.4023 c1218.2471 -1889.4053 1211.499 -1889.5742 1204.9561 -1891.1699 c1203.501 -1891.5244 1202.0659 -1892.1123 1200.7061 -1892.7275 c1202.6807 -1891.834 1199.4155 -1892.458 1199.0356 -1892.4746 c1196.1934 -1892.6035 1193.5742 -1893.2871 1191.0981 -1894.6875 c1187.0078 -1896.999 1182.9116 -1903.252 1182.3721 -1907.832 c1181.6748 -1913.7461 1186.6782 -1917.6563 1190.8511 -1920.8477 c1193.0039 -1922.4941 1194.9165 -1924.7744 1197.3633 -1925.9453 c1199.6294 -1927.0293 1202.0098 -1927.9102 1204.3525 -1928.8135 c1207.3135 -1929.9551 1210.4277 -1931.084 1213.3223 -1932.5605 C1212.1411 -1933.1621 1210.9316 -1933.6836 1209.8672 -1934.2002 c1206.2241 -1935.9668 1203.063 -1937.8262 1199.77 -1940.1777 c1190.6787 -1946.6699 1183.3857 -1955.1074 1174.7192 -1962.0313 c1166.6309 -1968.4922 1167.6182 -1976.3604 1173.7065 -1983.8301 c1180.2324 -1991.8369 1189.2188 -1995.4941 1199.085 -1997.5713 cf0 D1371 -1978.4883 m1371 -1972.207 1372.2314 -1966.6895 1373.3203 -1960.4707 c1375.6064 -1947.418 1377.2666 -1931.3691 1384.4155 -1920.418 c1384.3384 -1920.5361 1384.9194 -1919.9414 1385.1919 -1919.6035 C1385.437 -1919.8262 1386.0947 -1920.335 1386.1343 -1920.373 c1387.0498 -1921.2598 1387.5195 -1922.5322 1388.0649 -1923.6631 c1393.0249 -1933.9473 1391.3262 -1948.29 1391.2363 -1959.3262 c1391.1777 -1966.4639 1390.8506 -1973.582 1390.0557 -1980.6768 c1389.3306 -1987.1475 1388.5254 -1993.9727 1386.8521 -2000.2744 c1385.3076 -2006.0889 1382.8555 -2011.6191 1380.0088 -2016.9014 c1379.708 -2017.46 1379.4307 -2017.9854 1379.167 -2018.4941 C1376.6631 -2013.8047 1371 -2008.4043 1371 -2003.1221 C1371 -1978.4883 Lf1374.2227 -2029.7842 m1374.1729 -2029.9092 1374.125 -2030.0293 1374.0742 -2030.1572 c1373.3711 -2031.9248 1372.7944 -2033.8965 1372.5957 -2035.8779 C1371.7002 -2034.8887 1370.5347 -2034.125 1369.2524 -2033.752 C1369.1152 -2033.4717 1368.9707 -2033.1963 1368.832 -2032.918 C1370.7148 -2031.9805 1372.5273 -2030.9404 1374.2227 -2029.7842 Cf1356.5825 -2037.3789 m1356.917 -2038.0332 1357.2524 -2038.6875 1357.5781 -2039.3477 C1351.75 -2042.5752 1345.1025 -2044.0176 1339.0269 -2047.0244 c1329.9932 -2051.4961 1320.4902 -2055.1855 1310.5425 -2056.9785 c1304.6118 -2058.0469 1297.9121 -2057.9561 1291.8853 -2058.1455 c1289.2393 -2058.2285 1286.6157 -2058.2129 1284.0542 -2057.6006 C1284.418 -2056.8135 1285.0557 -2055.9727 1285.3682 -2055.4648 c1288.1782 -2050.8975 1293.0776 -2046.2314 1298.353 -2044.875 c1306.1279 -2042.875 1314.7969 -2043.417 1322.7598 -2043.415 c1326.8066 -2043.4141 1331.4482 -2041.415 1335.5078 -2040.7891 c1340.9404 -2039.9502 1346.4019 -2039.3594 1351.8179 -2038.4033 c1353.3799 -2038.1279 1354.9761 -2037.7832 1356.5825 -2037.3789 Cf1186.3418 -1969.5039 m1188.0063 -1967.8398 1189.6758 -1966.1816 1191.3579 -1964.5352 c1197.4585 -1958.5635 1204.895 -1951.5449 1211.5986 -1947.7832 c1218.0508 -1944.1641 1225.4033 -1941.9785 1229.3623 -1935.1846 c1230.7954 -1932.7256 1230.4727 -1929.2939 1228.3457 -1927.3086 c1221.9058 -1921.2969 1213.5234 -1918.5215 1205.4741 -1915.3711 c1202.1865 -1914.084 1199.3892 -1911.2129 1196.6616 -1909.002 c1196.4854 -1908.8574 1196.334 -1908.6865 1196.1636 -1908.5352 C1196.2261 -1908.4229 1196.2861 -1908.3164 1196.3584 -1908.1826 c1197.0957 -1906.8213 1197.251 -1905.9043 1198.7124 -1905.5107 c1199.9189 -1905.1855 1201.5107 -1905.4043 1202.7476 -1905.4014 c1205.0879 -1905.3965 1207.5732 -1903.9092 1209.8594 -1903.3525 c1215.2729 -1902.0322 1221.2231 -1902.4043 1226.75 -1902.4014 c1236.7476 -1902.3965 1244.9468 -1909.1553 1253.4722 -1913.5146 c1257.6318 -1915.6426 1263.4834 -1913.0957 1263.2529 -1907.9023 c1262.9063 -1900.1064 1259.1865 -1892.6875 1255.8965 -1885.7637 c1251.6597 -1876.8486 1248.4678 -1866.8379 1248.2515 -1856.8975 c1248.2393 -1856.3262 1248.1396 -1855.7354 1247.9712 -1855.1543 C1251.8921 -1856.9561 1255.8325 -1858.6914 1259.5527 -1860.918 c1262.1631 -1862.4795 1264.147 -1865.1523 1267.0259 -1866.165 c1269.8521 -1867.1602 1272.4463 -1868.4336 1275.0195 -1869.9648 c1279.8569 -1872.8457 1283.8008 -1876.9893 1287.3701 -1881.2861 c1301.7432 -1898.585 1308.9834 -1919.3516 1310.0938 -1941.3789 C1306.6289 -1944.8438 1303.1641 -1948.3076 1299.6997 -1951.7725 c1297.8535 -1953.6191 1296.0068 -1955.4658 1294.1606 -1957.3125 c1292.6987 -1958.7734 1292.0195 -1960.9092 1290.7349 -1962.5303 c1288.0996 -1965.8555 1284.4961 -1968.4629 1280.585 -1970.0811 c1275.6382 -1972.1279 1271.1479 -1975.1611 1266.356 -1977.6025 c1261.5273 -1980.0615 1256.6851 -1982.4336 1252.0605 -1985.2695 c1247.9229 -1987.8066 1241.1455 -1987.7549 1236.4219 -1988.0918 c1231.8984 -1988.416 1225.7188 -1989.416 1221.2979 -1988.3623 c1216.96 -1987.3271 1212.5024 -1986.7656 1208.1055 -1986.0469 c1200.7261 -1984.8398 1192.0146 -1983.6377 1186.3418 -1978.3145 c1184.9033 -1976.9639 1183.4634 -1975.458 1182.2949 -1973.8633 c1182.0234 -1973.4922 1181.8521 -1973.2432 1181.7383 -1973.0781 C1183.1133 -1971.6777 1184.958 -1970.8877 1186.3418 -1969.5039 cf*U*u1 D2064.5283 -2037.8018 m2068.4355 -2041.7217 2071.4717 -2046.1758 2075.8076 -2049.7412 c2080.4678 -2053.5732 2085.6025 -2056.2783 2091.2109 -2058.4453 c2097.0488 -2060.7012 2103.1348 -2061.8818 2108.9746 -2064.2295 c2112.2158 -2065.5313 2116.0566 -2066.7939 2119.8184 -2066.9893 C2118.666 -2077.2422 2117.3887 -2087.4551 2115.7451 -2097.6875 c2113.3164 -2112.8027 2110.8633 -2127.917 2109.4316 -2143.167 c2109.002 -2147.7451 2108.7129 -2152.333 2108.5391 -2156.9258 C2121.5781 -2156.9258 L2122.8008 -2129.2129 2128.7002 -2102.0293 2132.1875 -2074.5303 c2132.7725 -2069.9199 2133.2598 -2065.3047 2133.7324 -2060.6904 C2135.5801 -2059.0342 2137.3496 -2057.2686 2139.0801 -2055.5313 C2142.2422 -2056.3945 2146.1133 -2055.7598 2149.832 -2053.8721 c2152.4736 -2052.5293 2154.9355 -2050.627 2157.1816 -2048.6602 C2157.2842 -2048.6875 2157.8008 -2048.4746 2158.748 -2048.0098 C2160.3438 -2047.3926 2161.9121 -2046.6826 2163.4766 -2045.9902 c2166.708 -2044.5625 2169.8457 -2042.9141 2173.0078 -2041.3408 c2182.1328 -2036.8008 2191.5088 -2034.0898 2197.9072 -2025.5547 c2200.7324 -2021.7861 2202.1133 -2017.6016 2202.3467 -2012.9131 c2202.5566 -2008.6992 2199.5332 -2005.0977 2199.3467 -2000.9121 c2199.1123 -1995.6709 2194.0801 -1993.2383 2189.5664 -1995.2998 c2167.9932 -2005.1475 2152.374 -2023.3154 2136.1445 -2040.0234 C2136.0996 -2040.0391 2136.0547 -2040.0557 2136.0098 -2040.0723 C2136.3955 -2037.1094 2136.8115 -2034.1484 2137.3018 -2031.1924 c2139.7246 -2016.5898 2143.1309 -2002.1543 2147.4668 -1988.002 c2149.5469 -1981.2148 2151.9307 -1974.5244 2154.5195 -1967.916 c2157.3027 -1960.8115 2161.3281 -1954.0596 2163.7021 -1946.834 c2166.6211 -1937.9463 2168.9199 -1928.8779 2171.1738 -1919.7988 C2173.3945 -1918.834 2175 -1916.6768 2175 -1913.9033 C2175 -1911 L2175 -1909.7637 2174.6875 -1908.7197 2174.1631 -1907.8652 C2174.6309 -1906.043 2175.1064 -1904.2236 2175.5957 -1902.4082 c2179.4395 -1888.1465 2184.5928 -1874.2949 2191.8496 -1861.3984 c2198.8145 -1849.0215 2208.3311 -1838.3311 2217.5439 -1827.6172 c2217.9443 -1827.1514 2218.3369 -1826.6797 2218.7363 -1826.2129 C2218.7627 -1826.248 2218.7939 -1826.2813 2218.8203 -1826.3164 c2219.7363 -1827.542 2219.3555 -1828.8955 2220.2373 -1830.1748 c2221.9521 -1832.6641 2223.791 -1835.0459 2225.8008 -1837.3037 c2229.9482 -1841.9609 2235.0791 -1845.7305 2239.6426 -1849.9609 c2244.4092 -1854.3789 2250.0313 -1857.5918 2255.4863 -1861.1279 c2260.7383 -1864.5322 2266.1377 -1867.2754 2272.0137 -1869.459 c2277.9844 -1871.6787 2284.4697 -1872 2290.7852 -1872 C2315.4834 -1872 L2326.709 -1872 2337.9277 -1872.1553 2349.1504 -1872.3916 c2363.1348 -1872.6855 2390.5684 -1873.4951 2391.3652 -1853.7969 c2391.7939 -1843.2139 2381.6201 -1834.8848 2373.8838 -1829.4463 c2364.6865 -1822.9795 2353.7188 -1818.8965 2342.9434 -1815.9805 c2336.8945 -1814.3438 2330.7988 -1813.2598 2324.668 -1812.5801 C2340.6816 -1806.5 2361.0811 -1797.0273 2362.7021 -1777.7627 c2363.4668 -1768.6758 2358.4004 -1758.8311 2351.2412 -1753.5674 c2343.9639 -1748.2168 2333.6211 -1748.8691 2325.2637 -1750.376 c2317.501 -1751.7754 2309.8857 -1754.7842 2302.8281 -1758.3955 C2309.2441 -1749.3516 2315.2002 -1740.0898 2319.9512 -1729.9473 c2325.6699 -1717.7402 2330.3496 -1704.7461 2332.9102 -1691.4961 c2335.2627 -1679.3252 2336.4561 -1665.4219 2331.0605 -1653.8584 c2325.5313 -1642.0078 2311.6885 -1639.7051 2302.1436 -1647.8379 c2301.0117 -1648.8027 2300.0293 -1650.1133 2299.167 -1651.3135 c2300.1006 -1650.0137 2296.1973 -1653.2734 2296.6943 -1652.8682 c2294.3105 -1654.8105 2292.4756 -1657.0908 2290.6934 -1659.585 c2286.6797 -1665.1992 2285.3047 -1671.8311 2282.0908 -1677.8066 c2279.1914 -1683.1982 2275.2549 -1688.0078 2271.5977 -1692.8887 c2267.207 -1698.751 2264.2969 -1705.4658 2261.0898 -1712.0273 c2261.0645 -1712.0781 2261.04 -1712.1299 2261.0156 -1712.1816 C2261.3242 -1710.6807 2261.626 -1709.1807 2261.9385 -1707.6797 c2265.1621 -1692.2031 2265.748 -1677.1943 2264.4785 -1661.4668 c2263.9033 -1654.3398 2263.1572 -1647.2305 2262.707 -1640.0928 c2262.4707 -1636.3574 2262.375 -1632.6172 2262.3525 -1628.875 c2262.3389 -1626.5566 2260.8193 -1623.7979 2260.1719 -1621.5449 c2257.166 -1611.0898 2251.6709 -1602.3955 2239.3652 -1604.998 c2233.8145 -1606.1729 2228.917 -1610.7061 2224.998 -1614.5361 c2220.5332 -1618.8994 2218.5918 -1627.1602 2216.7402 -1632.9746 c2212.6621 -1645.7881 2210.6318 -1659.1934 2208.5107 -1672.4365 c2204.7148 -1696.1299 2204.4561 -1720.3408 2204.3633 -1744.2891 c2204.3398 -1750.4219 2204.043 -1756.5078 2205.127 -1762.5547 c2206.0479 -1767.6885 2206.6484 -1772.8789 2207.4121 -1778.0371 c2209.0029 -1788.7881 2211.627 -1799.2842 2217.0254 -1808.791 C2216.4082 -1809.1426 2215.8105 -1809.6318 2215.2539 -1810.2969 c2206.0469 -1821.2988 2196.3809 -1831.9141 2187.9395 -1843.5352 c2179.4814 -1855.1816 2173.2598 -1868.4219 2168.3369 -1881.9082 c2167.8027 -1883.373 2167.3018 -1884.8486 2166.8086 -1886.3262 C2164.1338 -1878.0068 2161.1006 -1869.7939 2156.582 -1862.4678 c2154.8369 -1859.6367 2152.7754 -1857.0146 2150.7285 -1854.4014 c2148.9629 -1852.1475 2145.5742 -1849.7451 2144.2969 -1847.3154 c2142.9063 -1844.6709 2140.8477 -1842.2881 2139.0156 -1839.9551 c2131.8232 -1830.7979 2113.8496 -1809.9629 2100.9053 -1821.1201 c2093.5156 -1827.4893 2094.6963 -1839.7363 2097.8594 -1847.8418 c2102.0303 -1858.5273 2109.7939 -1867.4258 2117.2344 -1875.9717 c2123.7881 -1883.499 2130.2705 -1891.043 2136.9795 -1898.4404 c2143.2754 -1905.3828 2150.1836 -1912.3057 2158.4863 -1916.7744 C2157.7744 -1919.6621 2157.0605 -1922.5469 2156.3193 -1925.4199 c2154.4883 -1932.5195 2152.9014 -1940.1543 2149.6875 -1946.7715 c2146.3633 -1953.6152 2143.4307 -1960.6582 2140.7041 -1967.7598 c2130.1436 -1995.2627 2124.3379 -2024.4512 2121.2607 -2053.6807 c2121.2529 -2053.7568 2121.2441 -2053.832 2121.2363 -2053.9082 C2121.1045 -2053.9424 2120.9727 -2053.9668 2120.8428 -2053.9795 c2120.7207 -2053.9912 2120.5977 -2053.9863 2120.4766 -2053.9932 C2118.7461 -2047.6162 2117.9795 -2041.0518 2116.5938 -2034.5879 c2115.1162 -2027.6943 2111.6992 -2022.4219 2106.665 -2017.5684 c2097.6309 -2008.8555 2085.417 -2002.3066 2074.7539 -1995.8447 c2072.168 -1994.2773 2069.7129 -1992.5029 2067.126 -1990.9355 c2066.248 -1990.4033 2065.8867 -1990.3037 2065.75 -1990.3252 C2065.7305 -1990.209 2065.6621 -1990.002 2065.4971 -1989.6514 c2065.1299 -1988.8721 2064.7588 -1988.1016 2064.3486 -1987.3438 c2062.0234 -1983.0469 2056.624 -1981.3193 2052.5176 -1984.2422 c2043.1689 -1990.8975 2041.0332 -2002.6748 2045.3008 -2012.7422 c2049.4238 -2022.4678 2057.1729 -2030.4209 2064.5283 -2037.8018 cf0 D2188.4082 -2010.5752 m2189.2061 -2012.5439 2189.7217 -2013.623 2188.7344 -2015.8203 c2186.1777 -2021.5059 2179.7012 -2024.2539 2174.3525 -2026.4824 c2170.5781 -2028.0557 2166.9248 -2029.873 2163.2695 -2031.7002 c2162.6602 -2032.0049 2162.0303 -2032.29 2161.3936 -2032.5684 C2169.6484 -2024.2822 2178.3574 -2016.502 2188.4082 -2010.5752 Cf2332.541 -1826.9258 m2343.9756 -1829.0703 2355.2861 -1833.0791 2365.166 -1839.2666 c2369.1162 -1841.7412 2373.168 -1844.7852 2376 -1848.5371 c2377.2051 -1850.1348 2377.9834 -1851.7373 2378.418 -1853.6738 c2378.6406 -1854.6602 2377.9111 -1855.248 2377.8545 -1855.3105 c2373.7129 -1859.9316 2362.4648 -1859.3203 2356.5 -1859.4268 c2347.043 -1859.5967 2337.5537 -1859 2328.0938 -1859 C2306.1152 -1859 L2298.3691 -1859 2290.1875 -1859.9502 2282.5137 -1858.7666 c2276.8906 -1857.8994 2271.8262 -1855.6641 2266.9463 -1852.8447 c2264.4229 -1851.3867 2261.9883 -1849.8203 2259.5498 -1848.2275 c2256.5176 -1846.249 2252.7021 -1844.5098 2250.1201 -1841.9688 c2246.0762 -1837.9893 2241.5869 -1834.5078 2237.4785 -1830.6035 C2238.6934 -1830.7188 2239.9561 -1830.4092 2241.1328 -1829.5068 c2242.0332 -1828.8164 2242.9141 -1827.9102 2243.7881 -1827.1934 C2243.8096 -1827.1934 2243.8301 -1827 2243.8516 -1827 C2244 -1827 L2244 -1827.1973 L2244.083 -1827.1973 2244.166 -1827.293 2244.248 -1827.291 c2273.5703 -1827.1348 2303.4258 -1821.4629 2332.541 -1826.9258 cf2325.4883 -1763.6172 m2332.0996 -1761.9277 2340.8965 -1760.7393 2346.084 -1766.1895 c2350.8223 -1771.166 2350.6582 -1779.748 2346.4727 -1784.7852 c2340.9404 -1791.4434 2332.2256 -1795.5078 2324.3965 -1798.748 c2303.291 -1807.4854 2280.7451 -1812.3926 2257.9844 -1813.9023 C2271.5703 -1799.5156 2283.6592 -1783.668 2301.3701 -1773.9395 c2309.1484 -1769.666 2316.8398 -1765.8291 2325.4883 -1763.6172 cf2253.333 -1765.2227 m2255.5127 -1757.7168 2258.2266 -1750.3721 2261.1494 -1743.1279 c2263.8428 -1736.4531 2266.8867 -1729.9189 2269.9805 -1723.4219 c2273.1816 -1716.6973 2276.0762 -1709.1455 2280.2656 -1702.9883 c2283.6582 -1698.0029 2287.542 -1693.377 2290.8926 -1688.3584 c2294.7461 -1682.5859 2296.3936 -1676.0752 2299.583 -1670.042 c2300.9844 -1667.3896 2302.5713 -1665.0664 2304.7422 -1662.9932 c2305.8438 -1661.9414 2307.3604 -1661.5664 2308.4531 -1660.4727 c2309.5049 -1659.4219 2310.2813 -1658.1006 2311.3359 -1657.0303 c2315.6348 -1652.6699 2319.5029 -1659.2559 2320.585 -1662.8818 c2324.0127 -1674.373 2320.9648 -1688.2041 2317.6445 -1699.3848 c2313.5518 -1713.166 2307.9834 -1726.3945 2300.5732 -1738.7256 c2296.9238 -1744.7979 2292.0703 -1750.0205 2288.3828 -1756.0049 c2284.5801 -1762.1758 2279.6172 -1767.5518 2274.5742 -1772.7188 c2266.7021 -1780.7842 2258.4668 -1788.7744 2249.5928 -1795.6982 c2246.8945 -1797.8027 2244.3984 -1800.165 2242.1523 -1802.7393 C2242.6855 -1801.4424 2243.4238 -1800.0547 2244.248 -1798.0742 c2246.4102 -1792.877 2247.168 -1787.4707 2247.9766 -1781.998 C2250.3379 -1776.5449 2251.6465 -1771.0264 2253.333 -1765.2227 cf2217.752 -1717.9512 m2218.584 -1689.6641 2221.2979 -1660.3418 2230.2842 -1633.334 c2232.2266 -1627.4971 2234.0225 -1623.0723 2239.1191 -1619.4355 c2243.6445 -1616.2061 2245.1836 -1617.1621 2246.7217 -1621.8809 c2247.3809 -1623.8994 2247.8906 -1625.9648 2248.5371 -1627.9883 c2248.8994 -1629.1211 2249.3691 -1630.2646 2249.8652 -1631.3398 c2248.8047 -1629.0381 2249.4512 -1634.6426 2249.4482 -1634.5654 c2249.666 -1642.3672 2250.4746 -1650.1455 2251.1719 -1657.915 c2252.5889 -1673.6953 2252.5488 -1688.6445 2249.4023 -1704.2236 c2246.2832 -1719.6719 2243.1641 -1735.0547 2240.3691 -1750.5703 c2238.7861 -1759.3574 2237.4873 -1768.2617 2235.9873 -1777.0898 C2233.7246 -1782.5283 2230.9551 -1787.7998 2228.7236 -1793.2637 c2227.9561 -1795.1436 2227.2363 -1797.0498 2226.5732 -1798.9756 C2221.3496 -1787.959 2220.1328 -1775.625 2218.3848 -1763.627 c2216.207 -1748.6904 2217.3086 -1733.0352 2217.752 -1717.9512 cf2148.0439 -1891.3691 m2142.2051 -1885.1807 2136.5996 -1878.7676 2131.1426 -1872.2744 c2125.2598 -1865.2744 2119.002 -1858.6602 2114.0127 -1850.959 c2111.0352 -1846.3633 2105.8037 -1836.0068 2109.1973 -1831.2402 C2109.6963 -1831.3955 2110.8662 -1831.6006 2110.6543 -1831.5049 c2113.417 -1832.7471 2115.8359 -1834.6592 2118.1035 -1836.6328 c2122.7207 -1840.6484 2127.1563 -1845.5391 2130.6631 -1850.2607 c2135.7168 -1857.0645 2141.7129 -1863.1201 2146.1895 -1870.3789 c2151.7754 -1879.4375 2154.6357 -1890.5107 2157.7695 -1900.8926 C2154.2451 -1897.9766 2151.0566 -1894.5625 2148.0439 -1891.3691 cf2056.7715 -1999.6045 m2058.207 -2000.8936 2059.9336 -2001.7773 2061.915 -2002.9785 c2072.4609 -2009.3711 2083.0771 -2016.0459 2093.1426 -2023.1943 c2097.8291 -2026.5234 2102.0781 -2030.5918 2103.624 -2036.2432 c2104.8008 -2040.5449 2105.4639 -2044.9434 2106.2314 -2049.3223 C2105.1504 -2048.9004 2104.083 -2048.5479 2103.0352 -2048.3281 c2091.5234 -2045.9121 2082.5605 -2039.9541 2075.4463 -2030.6348 c2069.3076 -2022.5918 2061.4268 -2016.709 2056.9941 -2007.2871 c2055.5762 -2004.2734 2055.6924 -2001.9824 2056.7715 -1999.6045 Cf*U590.2979 -181.5547 m590.353 -181.2466 590.3501 -181.0918 590.2979 -181.5547 C590.2979 -181.5547 Lf*u1 D602.9902 -213.9897 m611.6064 -208.5767 620.0112 -202.8623 627.8267 -196.2817 c639.0098 -186.8662 648.9551 -175.5615 658.8599 -164.8374 c678.4834 -143.5903 696.5889 -120.8384 711.5215 -96.0298 c727.1089 -70.1338 742.8843 -44.7109 755.4072 -17.1162 c758.0215 -11.3555 760.4375 -5.55127 762.7095 0.289551 C748.8735 0.289551 L740.4434 -20.0601 730.207 -39.6655 719.1387 -58.6885 c704.3682 -84.0747 688.7983 -109.2358 670.2295 -132.04 c658.0664 -146.9775 644.8828 -161.0601 631.3872 -174.793 c624.6958 -181.6021 617.9248 -188.0684 610.1831 -193.687 c604.8608 -197.5493 599.3091 -201.0864 593.6948 -204.5186 C593.209 -204.3418 592.7251 -204.1611 592.2358 -203.9941 C595.1157 -200.3687 597.5005 -196.5449 599.0713 -193.6133 c600.4165 -191.103 601.625 -188.4863 602.6069 -185.813 c602.7222 -185.499 602.8145 -185.1797 602.8975 -184.8564 c603.6821 -181.8071 603.8945 -183.4048 603.2314 -184.4878 c605.4155 -180.9204 607.5161 -177.3022 609.583 -173.666 c617.0513 -160.5288 623.6729 -146.918 629.6172 -133.0288 c641.5786 -105.0791 650.8208 -75.7031 655.7114 -45.6611 c656.438 -41.1978 657.0366 -36.7178 657.5469 -32.228 C663.1724 -21.3496 668.8882 -10.5181 674.6479 0.289551 C659.9165 0.289551 L659.874 0.209473 659.8311 0.129395 659.7886 0.049316 C659.7915 0.129395 659.7939 0.209473 659.7969 0.289551 C646.8184 0.289551 L646.7788 -0.750977 646.7363 -1.80615 646.6992 -2.84229 c646.3848 -11.585 645.7046 -20.2446 644.6978 -28.8384 C640.1987 -37.5659 635.7251 -46.3066 631.3003 -55.0723 c616.8159 -83.7656 602.749 -112.668 588.915 -141.6797 c582.7676 -154.5718 576.3462 -167.2568 570.8569 -180.4575 c568.9536 -185.0356 567.7568 -188.4531 565.6304 -193.6938 c565.0864 -195.0342 564.5811 -196.3774 564.186 -197.7178 C561.9438 -197.3262 559.7095 -196.9292 557.4937 -196.5034 c555.376 -196.0967 553.251 -195.7061 551.123 -195.3262 C553.2725 -185.1523 552.1729 -174.105 552.1938 -163.9004 c552.2271 -147.6782 552.3965 -131.4556 553.0444 -115.2456 c554.3008 -83.7993 557.4141 -52.3843 563.8438 -21.5576 c565.3623 -14.2754 567.0112 -6.98096 568.8096 0.289551 C555.54 0.289551 L555.3828 -0.339844 555.2197 -0.967285 555.0645 -1.59717 c549.6411 -23.6177 545.7461 -46.0093 543.4219 -68.5674 c541.1655 -90.4639 539.9248 -112.4727 539.4736 -134.4771 c539.2324 -146.2598 539.1978 -158.0464 539.1846 -169.8315 c539.1768 -177.0728 540.3418 -185.8765 538.4966 -193.3091 C530.4648 -192.1885 522.3877 -191.4082 514.2974 -191.2427 c499.9546 -190.9497 486.8228 -197.1523 474.3506 -203.5542 c470.5977 -205.4805 467.2598 -207.4087 464.2852 -209.9204 C463.8291 -208.8784 463.0757 -207.9102 461.9536 -207.1201 c439.5078 -191.3179 413.104 -183.7583 389.2192 -170.7305 c376.6938 -163.8984 364.6563 -156.542 351.3389 -151.2466 c347.8022 -149.8403 343.3857 -148.481 338.9014 -147.7646 C339.4043 -145.3682 338.6543 -142.7456 335.9414 -141.1133 c312.833 -127.2114 290.1826 -111.9502 264.4063 -103.3501 c258.5371 -101.3921 252.501 -99.9956 246.3906 -99.0488 c245.2676 -98.875 244.0952 -98.6846 242.9038 -98.4976 C242.6909 -95.4175 240.6045 -92.4038 236.6509 -92.2217 c231.8188 -91.999 228.2388 -87.3169 224.4014 -84.7534 c218.9302 -81.0986 213.4995 -77.3862 208.1357 -73.5752 c203.0039 -69.9292 198.2085 -66.2588 192.5986 -63.3965 c186.9312 -60.5054 181.1904 -57.814 175.2964 -55.4165 c164.54 -51.0425 149.8223 -46.8003 138.6211 -51.7534 c132.0254 -54.6704 127.9385 -60.8398 129.9131 -68.0962 c131.7471 -74.8359 137.9341 -80.1382 143.1475 -84.3315 c149.5508 -89.4819 156.4521 -93.9614 163.4463 -98.2578 c169.8652 -102.2012 176.2173 -106.4609 183.1431 -109.4458 c188.9185 -111.9346 194.9028 -113.8159 200.896 -115.6958 c206.9775 -117.603 211.9238 -121.9961 218.355 -122.9189 C219.4443 -123.1167 220.5425 -123.2178 221.6494 -123.2231 C223.7158 -123.3184 225.2686 -122.5981 226.3135 -121.4561 C231.1685 -127.3013 237.7295 -131.8804 243.9863 -135.9805 c245.2813 -136.8286 246.6021 -137.6362 247.9312 -138.4297 c248.5054 -138.7725 251.1768 -140.4219 250.5684 -139.8237 c253.4375 -142.6436 256.6797 -145.0947 259.8887 -147.5068 c273.2549 -157.5527 295.1816 -170.6235 311.939 -161.3398 c315.6187 -159.3008 316.1675 -154.0435 313.2544 -151.1309 c312.2544 -150.1309 311.2539 -149.1309 310.2539 -148.1309 c306.1357 -144.0137 300.4526 -147.1831 299.3413 -151.4907 C295.2783 -151.437 291.0103 -149.8809 287.4878 -148.5474 c280.2949 -145.8242 273.5684 -141.4287 267.3604 -136.9517 c262.9199 -133.7495 259.2197 -129.9712 254.4922 -127.2046 c248.4937 -123.6934 242.7476 -119.6294 237.7944 -114.7388 c236.5571 -113.5171 235.2178 -112.0415 234.4175 -110.5483 C235.3799 -110.7427 236.3354 -110.9834 236.9033 -111.0527 c248.0811 -112.4155 258.4268 -114.6836 268.9746 -118.7876 c288.4292 -126.3574 306.1436 -138.082 323.9111 -149.0063 C319.9697 -150.9219 317.1714 -154.5791 316.687 -160.8589 c315.9521 -170.3823 325.5391 -180.8359 331.2944 -187.377 c339.6172 -196.835 350.5474 -203.5034 361.98 -208.5347 c376.2388 -214.8091 391.3662 -218.8311 405.9326 -224.3003 c413.7119 -227.2212 421.2876 -230.6011 428.6582 -234.4365 c435.3901 -237.9395 442.0283 -242.2476 449.6724 -243.2354 c452.353 -243.582 454.7129 -241.4893 455.6904 -239.0605 C458.7231 -247.6499 465.4141 -255.8359 471.4048 -261.6006 c480.021 -269.8916 489.8467 -276.9785 500.1567 -283.0566 C491.0078 -285.0537 482.3579 -288.5 473.3945 -292.4351 c460.522 -298.0869 448.1763 -304.8945 436.6875 -313.0044 c425.1045 -321.1807 414.5503 -331.0259 404.0908 -340.5659 c394.3638 -349.438 385.7056 -359.3462 377.7534 -369.8213 c362.9297 -389.3486 351.4678 -411.5107 343.7788 -434.752 c337.6792 -453.1885 330.2651 -477.0811 340.3296 -495.4165 c352.668 -517.8945 380.3193 -507.9009 398.1147 -499.2729 c409.8613 -493.5781 420.4561 -483.9448 430.5122 -475.6968 c441.5952 -466.6064 452.1211 -456.8496 462.1011 -446.563 c463.1919 -445.4385 464.2778 -444.3057 465.3604 -443.1694 C461.8857 -455.7764 458.7729 -468.4819 456.1323 -481.291 c454.6685 -488.3896 452.1699 -496.4966 452.1729 -503.7622 c452.1753 -509.6597 452.4043 -515.4487 453.2554 -521.2915 c455.0234 -533.4292 462.1992 -543.6055 473.4424 -548.5947 c484.4487 -553.4785 499.7603 -555.9805 511.0923 -550.8672 c530.7095 -542.0146 539.6753 -517.8589 546.1128 -499.0039 c555.6094 -471.1895 561.3989 -442.2393 565.3438 -413.1548 c569.5654 -382.0327 572.9102 -350.1465 566.9512 -319.0156 c566.1318 -314.7344 565.1177 -310.4609 564.2339 -306.1689 C569.6362 -306.9985 575.0488 -307.5669 580.4321 -307.8188 c595.9673 -308.5449 611.6377 -304.7646 624.228 -295.5181 C628.7588 -309.874 645.144 -320.0313 658.0317 -325.6895 c668.2676 -330.1836 678.9766 -332.4878 690.2061 -332.4878 c696.0547 -332.4878 704.2153 -332.0493 709.1191 -328.5405 c714.2212 -324.8901 717.7515 -319.6396 720.3506 -314.0103 c722.6294 -309.0752 723.6094 -303.5244 725.9658 -298.6763 c728.8916 -292.6558 730.9917 -286.1699 731.6318 -279.4888 c732.2192 -273.3579 731.5474 -267.2417 729.2065 -261.5215 c726.4712 -254.8364 721.9941 -250.647 716.189 -246.5684 c705.4717 -239.0386 692.7241 -236.0908 680.7271 -231.4326 c667.9761 -226.481 651.8413 -229.4985 642.0444 -239.1782 c637.5537 -243.6152 632.8076 -247.8188 628.3638 -252.2744 C624.2271 -246.3696 619.4629 -241.2134 614.1846 -236.2012 c610.7861 -232.9751 607.1841 -230.0049 603.418 -227.2202 c599.9893 -224.6851 596.1411 -223.3765 592.5059 -221.2783 c592.2573 -221.1348 592.001 -221.0127 591.751 -220.8735 C592.8457 -220.2158 593.9399 -219.5562 595.0327 -218.895 C598.7588 -219.6831 601.9902 -217.0684 602.9902 -213.9897 Cf0 D221.2026 -110.1816 m216.0591 -109.7246 211.916 -105.6182 207.0703 -104.0259 c201.748 -102.2773 196.3799 -100.7056 191.126 -98.7515 c184.5527 -96.3066 178.7817 -92.3501 172.8174 -88.7432 c162.7471 -82.6528 148.5166 -75.3491 142.7427 -65.2886 c142.7183 -65.2461 142.5337 -64.6768 142.4219 -64.4717 C144.0229 -63.126 146.7725 -62.7969 149.5703 -62.7437 c160.561 -62.5342 171.5078 -67.4858 181.1836 -72.1895 c185.7656 -74.4175 190.3384 -76.5776 194.4307 -79.6133 c199.3447 -83.2588 204.3423 -86.791 209.3823 -90.2598 c213.4448 -93.0566 218.1504 -95.5127 221.708 -98.9355 c222.3091 -99.5142 222.9287 -100.0386 223.5591 -100.5327 C221.4077 -102.9624 220.7964 -106.585 221.2026 -110.1816 Cf454.0664 -231.4829 m454.0786 -231.6909 454.1133 -231.8994 454.1313 -232.1074 C452.9556 -231.0811 451.3779 -230.4561 449.6724 -230.2354 c447.0947 -229.9023 444.7285 -227.7593 441.957 -227.4009 c443.9814 -227.6626 439.4316 -225.4985 439.5942 -225.5908 c438.1509 -224.7705 436.6851 -223.9907 435.2197 -223.2114 c428.8867 -219.8423 422.3096 -216.9644 415.6802 -214.2354 c403.082 -209.0488 390.0034 -205.2427 377.1875 -200.6641 c364.7842 -196.2324 352.7744 -190.4116 343.2573 -181.1338 c339.9834 -177.9419 337.0908 -174.0869 334.4785 -170.3447 c332.6851 -167.7759 329.0439 -163 329.9263 -160 C329.9277 -160 L329.8711 -161 330.0439 -160.2725 330.1748 -160.1543 C330.6157 -160.0034 331.3896 -159.8032 331.0283 -159.8467 c334.3296 -159.4497 336.6265 -160.1465 339.8833 -161.0142 c347.6011 -163.0703 354.8833 -166.6772 361.9521 -170.3223 c368.0615 -173.4727 374.0107 -176.9316 379.9492 -180.3896 c388.5542 -185.4004 397.8921 -189.1948 406.9907 -193.2007 c423.6416 -200.5327 440.4507 -207.8223 455.3921 -218.3423 c455.876 -218.6831 456.3574 -218.9375 456.8335 -219.126 C454.8477 -222.9185 453.8062 -227.0806 454.0664 -231.4829 cf649.0664 -250.4521 m653.5776 -246.2168 658.5981 -242.9106 664.9111 -242.1694 c671.8516 -241.355 676.9268 -244.708 683.3125 -246.3491 c694.2637 -249.1631 705.582 -253.7051 714.0786 -261.3457 c722.7769 -269.1675 718.3506 -284.687 714.0869 -293.4604 c710.5327 -300.7734 709.4658 -315.8032 700.0313 -318.3242 c689.5303 -321.1299 677.5928 -319.2603 667.5244 -315.6089 c655.1221 -311.1108 634.373 -300.5923 636.1904 -284.7402 c636.3252 -283.5664 636.1738 -282.5659 635.8257 -281.7261 C636.5083 -279.9116 636.9951 -277.9517 637.2583 -275.7935 c637.7422 -271.8223 636.7158 -267.749 635.0742 -263.9106 C639.4395 -259.1616 644.3613 -254.8701 649.0664 -250.4521 cf403.7456 -480.1597 m394.522 -486.9512 384.7017 -492.0371 373.5952 -495.0752 c364.0615 -497.6831 355.252 -496.4771 350.584 -486.9883 c347.0884 -479.8828 348.457 -470.1377 349.7598 -462.6875 c351.4097 -453.2524 354.3394 -444.0615 357.3843 -434.9995 c364.6172 -413.4727 376.2163 -393.1948 389.9248 -375.1367 c396.876 -365.98 404.8584 -357.562 413.2832 -349.7583 c422.8433 -340.9033 432.6729 -331.8555 443.2485 -324.2295 c453.7603 -316.6499 465.2085 -310.4331 476.958 -305.0098 c489.501 -299.2202 501.6675 -294.4072 515.6787 -294.2402 c517.2515 -294.2217 518.5293 -293.748 519.5122 -292.9917 C520.6914 -293.5117 521.873 -294.0278 523.0664 -294.5239 C502.499 -331.6128 487.1421 -371.7383 474.501 -412.2158 C472.1733 -415.5029 469.7275 -418.7095 467.0957 -421.7905 c448.3984 -443.6807 426.9087 -463.1045 403.7456 -480.1597 cf548.335 -437.8633 m543.6699 -463.2827 537.5908 -489.5532 526.752 -513.1592 c522.4224 -522.5884 516.7188 -532.1597 507.7925 -537.8691 c499.0752 -543.4448 481.9634 -540.4834 474.0713 -534.2173 c467.1694 -528.7373 465.6675 -519.8037 465.2793 -511.5166 c464.7388 -499.9795 467.8169 -488.436 470.2646 -477.2231 c474.6235 -457.2573 480.2295 -437.585 486.333 -418.082 C487.5762 -416.2813 488.7896 -414.46 489.9385 -412.5952 c497.6821 -400.0288 504.8379 -387.1045 511.4258 -373.8965 c518.0898 -360.5347 524.0239 -346.7998 529.3066 -332.8354 c531.8789 -326.0352 534.2183 -319.1479 536.4067 -312.2148 c537.6396 -308.3086 538.4917 -304.353 539.2539 -300.3765 C542.9434 -301.5205 546.666 -302.5542 550.416 -303.4546 C553.627 -316.0454 555.9932 -329.332 556.7573 -342.2676 c558.6387 -374.1001 554.0732 -406.5981 548.335 -437.8633 cf613.792 -254.3008 m615.7373 -256.8911 617.7686 -259.5527 619.5596 -262.3423 C617.9136 -264.5835 616.3975 -266.937 615.0771 -269.458 c612.0894 -275.1611 618.0303 -280.3569 622.7051 -279.0811 C621.8574 -280.48 620.6499 -281.8154 619.0933 -283.144 c609.0977 -291.6758 596.3779 -294.835 583.4873 -294.8857 c575.7271 -294.9165 567.9756 -293.7979 560.3394 -292.1689 C559.6782 -290.7788 558.9131 -289.4463 557.9868 -288.2222 c555.0234 -284.3052 551.8779 -280.9033 547.6538 -278.6523 C548.8569 -276.7676 550.0591 -274.8828 551.2939 -273.0195 c555.3901 -266.8403 546.0654 -259.7373 541.0854 -265.1426 c539.1758 -267.2158 537.5522 -269.5122 535.978 -271.8452 c535.1768 -273.0327 534.2163 -274.1841 533.29 -275.3472 C531.4199 -275.2627 529.5444 -275.2412 527.6802 -275.2397 c524.3901 -275.2373 522.3975 -277.2393 521.6899 -279.6714 C517.2373 -277.6079 512.8691 -275.3584 508.5938 -272.9414 c496.9971 -266.3853 484.6528 -258.1963 476.3027 -247.6675 c473.0728 -243.5952 469.6333 -239.1826 467.8262 -234.2583 c465.9448 -229.1328 467.8228 -224.9189 471.3188 -221.0205 c474.6284 -217.3296 479.4951 -215.4932 483.8418 -213.2827 c488.4175 -210.9561 493.0527 -208.8179 497.8906 -207.0938 c508.3047 -203.3823 518.8154 -204.125 529.6265 -205.2427 c533.1846 -205.6104 536.7612 -206.0547 540.3345 -206.5703 C541.6919 -207.2856 543.2227 -207.5645 544.6343 -207.2261 C550.0322 -208.1006 555.4028 -209.1519 560.6699 -210.4092 c562.9492 -210.9531 565.2485 -211.3989 567.5537 -211.8115 C568.1587 -212.4263 568.7715 -212.9565 569.3906 -213.4038 C560.1113 -211.6836 550.5474 -210.9414 541.4092 -209.4658 c533.2109 -208.1416 529.6938 -220.667 537.9531 -222.001 c551.9961 -224.2695 566.4312 -224.8823 579.9326 -229.7002 c592.7119 -234.2607 605.6113 -243.4077 613.792 -254.3008 cf581.3779 -216.3916 m580.083 -215.9658 578.7793 -215.5654 577.4609 -215.209 C578.4985 -215.002 579.5332 -214.6504 580.5586 -214.1792 C580.8325 -214.2388 581.1079 -214.2944 581.3818 -214.3564 C581.2681 -215.0303 581.2744 -215.7168 581.3779 -216.3916 Cf590.187 -182.73 m590.2349 -182.1533 590.272 -181.7808 590.2979 -181.5547 C590.2739 -181.6855 590.2402 -181.8428 590.1943 -181.9932 c589.6421 -183.811 590.2539 -182.085 589.4766 -183.7817 c588.0107 -186.9824 586.2461 -190.0498 584.3589 -193.0176 c582.6621 -195.6875 580.7583 -198.1416 578.4966 -200.3481 C578.0161 -200.248 577.5352 -200.1499 577.0542 -200.0532 C577.7334 -197.9878 578.6914 -196.0083 579.5825 -194.0342 c580.457 -192.0972 581.3921 -190.1216 581.8926 -188.0479 c582.7871 -184.3408 584.7588 -180.6396 586.3379 -177.0493 c592.1938 -163.7339 598.9053 -150.7944 605.1885 -137.6787 c615.3198 -116.5303 625.6094 -95.457 636.0879 -74.478 C634.2476 -81.5562 632.1934 -88.6016 629.9136 -95.6191 c620.5552 -124.4224 607.6914 -152.0337 592.0068 -177.9268 c591.0132 -179.5664 590.3481 -180.7856 590.187 -182.73 cf*U*u1 D3437.3027 -396.0674 m3436.126 -414.0176 3437.999 -432.6792 3451.4004 -446.1333 c3461.0898 -455.8623 3475.6094 -458.8174 3488.5488 -454.3989 c3504.1885 -449.0591 3500.9795 -428.9375 3501.7813 -416.1533 c3502.0537 -411.8135 3502.9531 -407.623 3504.2441 -403.48 c3505.1699 -400.5112 3504.3701 -396.3931 3504.1426 -393.3438 c3503.6035 -386.1055 3502.2617 -378.8809 3499.6025 -372.1138 c3495.8809 -362.6431 3489.0801 -355.4414 3481.041 -349.7197 C3481.5469 -349.3691 3482.0039 -348.9546 3482.375 -348.459 C3487.918 -350.7793 3493.8584 -352.3193 3499.5791 -353.6865 c3504.1367 -354.7764 3510.0264 -355.0303 3514.2334 -357.123 c3520.5322 -360.2568 3526.9531 -363.145 3533.5293 -365.6484 c3555.9766 -374.1943 3584.502 -375.7515 3606.1396 -363.9336 c3614.5039 -359.3652 3621.2598 -351.4736 3621.5381 -341.6704 c3621.79 -332.7764 3616.0156 -324.562 3610.209 -318.3975 c3603.7031 -311.4917 3595.3662 -306.041 3586.6367 -302.4116 c3577.623 -298.6646 3568.2656 -298.9126 3558.7637 -299.9209 C3568.1797 -291.9775 3577.2656 -283.7173 3585.957 -274.9351 c3591.0898 -269.749 3596.0879 -264.4346 3600.6465 -258.7329 c3602.6035 -256.2871 3605.293 -253.4927 3606.2549 -250.4644 c3607.3467 -247.0269 3608.1338 -243.5576 3608.7109 -239.999 c3610.8408 -226.8857 3609.8916 -213.6162 3608.0664 -200.5347 c3606.6436 -190.3379 3605.4492 -178.7427 3596.6006 -172.1167 c3589.1855 -166.564 3579.0615 -166.9814 3570.2705 -167.147 c3559.1572 -167.3564 3548.5107 -169.2842 3538.042 -173.0928 c3513.9902 -181.8438 3493.7832 -199.7681 3486.1035 -224.6206 c3481.0059 -241.1177 3478.8174 -257.1479 3479.6787 -274.4375 c3480.5527 -291.9668 3483.8311 -309.2861 3485.4766 -326.7441 c3485.5918 -327.9692 3485.959 -329.123 3486.541 -330.1133 C3485.501 -330.9985 3484.4531 -331.8662 3483.3516 -332.6665 C3483.21 -332.729 3483.0703 -332.7969 3482.9287 -332.8604 C3482.4844 -330.1333 3481.7461 -327.4883 3480.5322 -325.5908 c3476.1992 -318.8154 3469.418 -313.7134 3463.6846 -308.2104 c3450.3838 -295.4438 3441.3398 -280.1855 3433.2529 -263.7798 c3428.7441 -254.6338 3424.502 -245.3643 3421.2197 -235.7002 c3418.5078 -227.7148 3415.8691 -218.6289 3416.499 -210.1064 c3416.9199 -204.4038 3423.7363 -201.2637 3428.3945 -200.0552 c3438.2021 -197.5112 3447.877 -194.4873 3457.7012 -191.9995 c3465.8232 -189.9429 3462.376 -177.4043 3454.2441 -179.4634 c3443.8125 -182.105 3433.5293 -185.2881 3423.1123 -187.9897 c3416.2422 -189.772 3409.3203 -194.8457 3405.9316 -201.1543 c3402.248 -208.0127 3403.3125 -216.1519 3404.7012 -223.4619 c3406.7627 -234.313 3410.3867 -244.4912 3414.7158 -254.6304 c3422.7939 -273.5469 3431.9883 -292.7852 3446.0947 -307.9883 c3446.9961 -308.959 3447.8867 -309.9097 3448.7803 -310.8662 C3448.5752 -310.7119 3448.3691 -310.5591 3448.166 -310.4019 c3443.3408 -306.6689 3438.4707 -302.8047 3433.8213 -298.8623 c3421.1162 -288.0874 3411.6719 -274.0635 3398.9521 -263.2759 c3381.7305 -248.6709 3351.0908 -242.5439 3336.3486 -263.4575 c3331.5059 -270.3271 3342.7852 -276.8125 3347.5732 -270.019 c3353.541 -261.5527 3364.457 -262 3373.4268 -264.4253 c3385.4248 -267.6689 3393.9297 -275.6118 3402.2012 -284.5303 c3407.209 -289.9297 3411.9561 -295.5586 3417.0605 -300.8687 c3421.7119 -305.707 3426.8809 -309.6777 3432.0605 -313.8848 c3442.0977 -322.0361 3451.3838 -329.8706 3464.9736 -330.2441 c3465.8809 -330.269 3466.6836 -330.1318 3467.3945 -329.8799 C3468 -330.5483 3468.5762 -331.2207 3469.0283 -331.8301 C3467.2969 -333.834 3466.6738 -336.7104 3468.4072 -339.2129 C3467.4844 -338.6226 3466.3438 -338.2598 3464.9736 -338.2461 c3438.2578 -337.9839 3414.5098 -322.7788 3387.8281 -322.7876 c3362.4863 -322.7959 3339.1445 -340.0874 3322.8135 -358.0361 c3314.2314 -367.4678 3306.6816 -378.334 3305.502 -391.3447 c3304.9941 -396.9521 3308.9277 -402.707 3312.4258 -406.7207 c3316.3418 -411.2129 3322.127 -413.9961 3327.7158 -415.7158 c3333.3965 -417.4639 3339.7422 -417.4663 3345.6016 -418.353 c3353.1445 -419.4951 3360.7236 -420.3662 3368.3506 -420.6592 c3382.75 -421.2124 3396.1572 -418.3335 3409.1963 -412.3335 c3419.0176 -407.8145 3428.2607 -402.0479 3437.3027 -396.0674 Cf0 D3582.5645 -314.7031 m3590.79 -318.312 3598.1631 -323.9077 3603.874 -330.8247 c3607.8916 -335.6914 3610.6641 -342.4912 3605.9648 -347.666 c3598.668 -355.7012 3586.541 -358.1235 3576.1973 -359.0015 c3563.3203 -360.0942 3550.5742 -357.9131 3538.4453 -353.6475 c3532.377 -351.5137 3526.5596 -348.7339 3520.7949 -345.8979 c3515.7266 -343.4043 3509.8574 -342.7148 3504.376 -341.4639 c3502.7021 -341.082 3500.958 -340.6963 3499.1875 -340.2788 C3499.8809 -339.9941 3500.5742 -339.7046 3501.2617 -339.3999 c3503.1074 -338.582 3506.4912 -335.7969 3507.2539 -335.5879 c3510.8047 -334.6138 3514.2363 -332.9414 3517.4668 -331.2041 c3524.6211 -327.3564 3531.3838 -322.3242 3537.9111 -317.0801 C3542.5664 -315.7334 3547.2988 -314.6543 3552.042 -313.8188 c3562.1504 -312.0381 3573.1602 -310.5767 3582.5645 -314.7031 cf3496.9746 -233.1987 m3500.4941 -221.6743 3505.2832 -211.7085 3513.8301 -203.0479 c3521.5225 -195.252 3531.3037 -189.4976 3541.498 -185.6284 c3551.7109 -181.752 3561.8535 -180.2847 3572.6934 -180.104 c3579.543 -179.9897 3589.1133 -179.2285 3592.1533 -186.9331 c3594.0557 -191.7554 3594.5303 -197.4727 3595.3213 -202.5718 c3596.334 -209.1001 3596.8193 -215.7148 3596.9424 -222.3164 c3597.0605 -228.6382 3596.6133 -234.9492 3595.3262 -241.1416 c3593.8115 -248.4214 3588.1787 -253.6792 3583.2666 -258.9917 c3575.2979 -267.6089 3566.8379 -275.8086 3558.0264 -283.5581 c3549.6211 -290.9507 3540.9668 -298.7939 3531.7939 -305.3267 C3525.0205 -307.4297 3518.4238 -310.0815 3512.1689 -313.2964 c3507.5215 -315.6851 3503.123 -318.5386 3498.7422 -321.3994 C3498.4736 -321.2026 3498.1816 -321.0288 3497.8701 -320.8774 C3494.6133 -291.6611 3488.168 -262.0278 3496.9746 -233.1987 cf3478.2148 -364.0229 m3481.8779 -367.3159 3484.9893 -371.1694 3487.1729 -375.8408 c3489.4678 -380.752 3490.4453 -386.5693 3491.0146 -391.915 c3491.3135 -394.7261 3491.415 -397.5557 3491.4678 -400.3804 c3491.5283 -403.5967 3489.8027 -407.4888 3489.3652 -410.7529 c3488.4951 -417.2568 3488.4834 -423.7715 3488.4746 -430.3208 c3488.4688 -434.2573 3488.3291 -440.7583 3483.9092 -442.2676 c3474.1807 -445.5894 3463.8525 -441.8735 3457.7861 -433.8511 c3447.8955 -420.7715 3448.7109 -402.0293 3451.2822 -386.5605 C3457.127 -382.3027 3461.5898 -378.4658 3468.0332 -373.7241 c3471.6289 -371.0776 3475.5488 -367.853 3478.2148 -364.0229 Cf3458.8174 -363.481 m3461.1016 -359.478 3463.6729 -356.7266 3467.1152 -356.2417 C3467.3857 -356.395 3467.6543 -356.5503 3467.9229 -356.7061 C3466.2246 -359.5728 3461.3184 -362.9551 3457.8975 -365.2119 C3458.1982 -364.6318 3458.4932 -364.0488 3458.8174 -363.481 cf3349.0576 -405.8174 m3338.0684 -404.2134 3324.7148 -404.7578 3318.9551 -393.3848 c3316.7402 -389.0098 3321.4248 -381.7339 3323.5908 -378.1509 c3326.9756 -372.5508 3331.4688 -367.6807 3335.9785 -362.979 c3344.6055 -353.9844 3355.0996 -346.377 3366.3154 -340.9253 c3378.1826 -335.1572 3390.8701 -334.9199 3403.5547 -337.6431 c3413.4648 -339.7705 3423.0156 -343.3291 3432.7266 -346.1763 c3439.1338 -348.0552 3445.6543 -349.4819 3452.252 -350.3384 C3448.2314 -354.7622 3445.5156 -360.603 3443.3867 -365.8994 c3441.6953 -370.1074 3440.4395 -374.5044 3439.5049 -378.9707 C3436.1553 -381.2192 3432.8008 -383.4604 3429.4229 -385.666 c3417.873 -393.2065 3405.8262 -400.8145 3392.5938 -405.0059 c3378.6963 -409.4082 3363.2324 -407.8867 3349.0576 -405.8174 cf*U*u1 D2853.0957 -236.6729 m2844.3555 -229.7886 2831.915 -227.4917 2821.1123 -229.1587 c2809.7988 -230.9048 2799.5498 -238.5313 2791.8594 -246.6055 c2787.8789 -250.7847 2784.4424 -255.5664 2781.502 -260.521 c2778.4355 -265.6865 2777.2383 -271.4316 2774.6826 -276.7212 c2768.8516 -288.7891 2766.625 -302.5083 2765.6719 -315.7632 c2765.4063 -319.4443 2765.2178 -323.1479 2765.0381 -326.8486 C2764.1201 -326.4063 2763.21 -325.9722 2762.3066 -325.5527 C2759.9453 -320.1929 2754.3525 -316.4473 2749.417 -313.5322 c2743.8242 -310.228 2734.7871 -305.7866 2728.1719 -308.4756 c2724.6416 -309.9106 2721.6016 -314.2686 2724.2881 -318.0239 c2726.3359 -320.8862 2728.7012 -323.23 2731.2871 -325.2217 C2721.5664 -322.9468 2711.3438 -322.3457 2701.625 -320.4766 c2691.4346 -318.5161 2681.9453 -324.8799 2679.3975 -334.6299 c2676.5342 -345.5869 2678.8516 -358.6431 2684.0996 -368.4819 c2686.708 -373.3726 2690.6533 -377.21 2694.9932 -380.5444 c2700.25 -384.583 2706.498 -388.437 2712.9629 -390.0913 c2718.6797 -391.5547 2724.7314 -390.6191 2730.0713 -388.3267 c2736.6611 -385.4985 2740.793 -380.3599 2746.5313 -376.4395 c2752.0723 -372.6553 2757.1523 -368.1665 2762.0508 -363.5996 c2765.4668 -360.4146 2768.8877 -357.2261 2771.7783 -353.5967 C2773.9385 -354.9561 2776.3564 -354.5439 2778.207 -353.188 C2780.5801 -353.7319 2782.9707 -354.1597 2785.3789 -354.3838 c2791.7988 -354.981 2798.4795 -353.8105 2804.623 -352.0122 c2817.2402 -348.3184 2828.3984 -340.5293 2838.1602 -331.9414 c2847.4766 -323.7446 2856.9609 -313.457 2862.6377 -302.3364 c2865.377 -296.9707 2866.6162 -291.1875 2867.1094 -285.2256 c2867.6719 -278.4253 2865.4805 -272.0234 2865.3955 -265.3408 c2865.2607 -254.6797 2861.7148 -243.4619 2853.0957 -236.6729 cf0 D2758.415 -349.0327 m2753.7969 -353.6182 2749.043 -358.0552 2744.0088 -362.1836 c2741.4023 -364.3218 2738.4727 -366.0054 2736.0635 -368.3726 c2733.3984 -370.9897 2730.5479 -373.2783 2727.3574 -375.2173 c2722.5488 -378.1401 2717.3184 -378.5225 2712.2227 -376.1069 c2709.2197 -374.6836 2706.6445 -372.4751 2703.7813 -370.811 c2701.376 -369.4136 2699.1406 -367.4204 2697.4434 -365.2144 c2694.2656 -361.083 2692.4219 -355.9126 2691.7383 -350.7744 c2691.1514 -346.3667 2690.584 -340.2012 2692.5742 -336.0166 c2694.1484 -332.707 2698.8086 -333.1509 2701.7686 -333.6792 c2709.3223 -335.0269 2716.9727 -335.7407 2724.5234 -337.1167 c2731.209 -338.3345 2737.1865 -341.3003 2743.7188 -342.7876 c2749.2041 -344.0361 2754.5635 -345.79 2759.9014 -347.5776 C2759.3896 -348.0815 2758.8828 -348.5684 2758.415 -349.0327 cf2854.1094 -285.2256 m2853.791 -291.6401 2850.9961 -297.3447 2847.2998 -302.4614 c2833.3516 -321.7671 2810.9355 -342.8516 2785.3789 -341.3838 c2782.9453 -341.2441 2780.4355 -340.7183 2777.9248 -340.0083 C2777.1172 -336.8438 2777.7129 -332.9443 2777.9492 -330.0771 c2778.4316 -324.2158 2778.4326 -318.3447 2778.9287 -312.4829 c2780.0381 -299.3706 2784.4336 -287.7241 2788.707 -275.4712 c2792.4014 -264.8774 2800.2314 -254.9844 2809.2656 -248.4346 c2813.5332 -245.3408 2818.1914 -243.1387 2823.3174 -241.938 c2828.7578 -240.6636 2833.6895 -242.2627 2838.8906 -243.6699 c2849.3086 -246.4868 2852.292 -257.1426 2852.4131 -266.7383 c2852.4531 -269.8936 2853.5566 -273.1743 2853.9033 -276.3276 c2854.2285 -279.2856 2854.2568 -282.2573 2854.1094 -285.2256 cf*U*u1 D1872.9067 -1801.0703 m1866.0601 -1796.5225 1856.8633 -1796.207 1848.9209 -1796.4512 c1841.147 -1796.6895 1833.1289 -1797.7793 1825.8013 -1800.4844 C1829.1914 -1794.7793 1832.2393 -1788.8721 1834.8525 -1782.709 c1841.75 -1766.4453 1849.7246 -1749.7754 1851.3003 -1731.9502 c1852.0239 -1723.7695 1850.3828 -1715.0498 1844.4702 -1709.0234 c1836.2163 -1700.6123 1823.502 -1701.5723 1814.2002 -1707.3135 c1803.0586 -1714.1904 1793.5415 -1722.665 1787.6719 -1734.5254 c1782.5093 -1744.9561 1780.4956 -1756.5967 1779.2681 -1768.0635 c1779.2227 -1768.4893 1779.1826 -1768.918 1779.1416 -1769.3467 C1777.272 -1766.4561 1775.2725 -1763.666 1773.1758 -1760.998 c1768.9766 -1755.6543 1764.3306 -1750.792 1759.1152 -1746.4326 c1754.3589 -1742.4561 1750.9482 -1736.9639 1746.8418 -1732.1279 c1738.9551 -1722.8428 1728.6768 -1714.5879 1716.7314 -1711.373 c1709.3481 -1709.3867 1701.6421 -1711.2324 1697.1362 -1717.6406 c1693.168 -1723.2861 1692.6372 -1730.8877 1692.8389 -1737.5615 c1693.0703 -1745.2461 1694.5527 -1752.9863 1696.5498 -1760.3926 c1698.7617 -1768.5938 1702.0674 -1774.9268 1707.3677 -1781.6543 c1716.9233 -1793.7842 1728.4756 -1803.8359 1740.4575 -1813.4854 c1745.71 -1817.7148 1751.2568 -1820.9512 1757.0771 -1824.3252 c1758.7529 -1825.2969 1760.8394 -1826.4092 1762.8462 -1827.7061 C1762.0684 -1827.5166 1761.29 -1827.3281 1760.5093 -1827.1553 c1754.2207 -1825.7656 1747.6924 -1824.8975 1741.3345 -1823.834 c1727.3022 -1821.4844 1713.2837 -1820.1797 1699.0537 -1820.4561 c1685.6597 -1820.7168 1673.333 -1823.4736 1662.7227 -1831.9834 c1654.0469 -1838.9414 1645.8081 -1850.7695 1643.7207 -1861.7598 c1639.9248 -1881.7432 1662.1992 -1886.8252 1677.2578 -1887.4727 c1694.8984 -1888.2314 1713.873 -1885.3467 1730.9561 -1881.0869 c1738.7949 -1879.1328 1746.3667 -1876.2988 1753.5078 -1872.6582 C1753.0293 -1873.9453 1752.5625 -1875.2305 1752.1172 -1876.5049 c1749.8428 -1883.0137 1748.3101 -1889.7705 1746.8877 -1896.5068 c1745.7334 -1901.9727 1744.1455 -1907.1973 1742.7207 -1912.5898 c1738.0693 -1930.1914 1737.854 -1953.5488 1759.5747 -1958.7539 c1769.0244 -1961.0186 1778.2178 -1960.791 1785.0894 -1953.0576 c1791.0859 -1946.3096 1793.4287 -1936.9121 1795.2153 -1928.2969 c1797.6558 -1916.5293 1797.5366 -1904.7705 1797.8457 -1892.7861 C1800.582 -1896.7773 1803.6016 -1900.5459 1806.9121 -1903.9941 c1817.9829 -1915.5244 1838.2627 -1928.5186 1854.7705 -1921.2979 c1863.1968 -1917.6113 1867.7988 -1906.1396 1869.0562 -1897.6797 c1870.7451 -1886.3184 1867.0605 -1875.1895 1861.041 -1865.6367 c1857.6846 -1860.3105 1853.5381 -1855.5469 1848.8203 -1851.4355 C1853.3325 -1851.4033 1857.8843 -1850.3545 1862.5078 -1847.6748 c1876.415 -1839.6143 1890.0356 -1812.4482 1872.9067 -1801.0703 cf0 D1752.1484 -1806.2959 m1741.5474 -1797.8145 1731.1221 -1789.1523 1722.0254 -1779.0332 c1718.4121 -1775.0146 1714.1934 -1770.4707 1711.9082 -1765.5117 C1711.9009 -1765.4102 1711.0439 -1763.2393 1710.8838 -1762.7832 c1710.2983 -1761.1162 1709.791 -1759.4229 1709.3047 -1757.7256 c1707.3428 -1750.874 1706.0273 -1743.8164 1705.812 -1736.6846 c1705.7144 -1733.4463 1705.854 -1730.9463 1706.5703 -1728.0488 c1706.9995 -1726.3105 1706.9922 -1726.4502 1707.6743 -1725.2344 c1708.1172 -1724.4453 1707.9453 -1724.498 1709.1499 -1723.8047 c1708.3115 -1724.2881 1709.0898 -1723.9424 1709.5933 -1723.7324 C1709.7861 -1723.7422 1710.8467 -1723.5723 1710.9355 -1723.5703 c1712.127 -1723.5547 1713.6348 -1723.9814 1715.1113 -1724.4365 c1721.2061 -1726.3174 1726.6655 -1730.3672 1731.3008 -1734.627 c1735.8057 -1738.7666 1739.688 -1743.5967 1743.3901 -1748.4492 c1747.8325 -1754.2725 1753.562 -1758.4541 1758.5908 -1763.7842 c1766.5459 -1772.2158 1772.8281 -1782.6426 1776.6973 -1793.625 C1776.376 -1795.1592 1776.0005 -1796.6758 1775.5381 -1798.1641 c1774.3027 -1802.1396 1776.7588 -1804.9785 1779.8525 -1805.8662 C1781.0845 -1813.2939 1781.2881 -1820.9023 1781.3101 -1828.4707 C1781.209 -1828.6035 1781.1172 -1828.7402 1781.0205 -1828.875 C1780.582 -1827.792 1780.0166 -1826.748 1779.3521 -1825.8018 c1772.5918 -1816.1699 1760.9263 -1813.3193 1752.1484 -1806.2959 cf1742.0713 -1863.7461 m1731.251 -1868.293 1719.9971 -1870.04 1708.5488 -1872.1064 c1693.7998 -1874.7695 1676.1396 -1876.9639 1661.728 -1871.8486 c1654.8208 -1869.3965 1655.373 -1864.6426 1658.8203 -1857.7734 c1664.376 -1846.7031 1673.4795 -1837.7773 1685.6631 -1834.8232 c1698.2505 -1831.7705 1712.7866 -1833.1846 1725.5039 -1834.6016 c1738.0278 -1835.9971 1750.6411 -1838.2676 1762.9155 -1841.0518 c1766.3789 -1841.8379 1769.6743 -1842.2393 1772.9512 -1841.7031 C1764.3203 -1851.2002 1753.959 -1858.751 1742.0713 -1863.7461 cf1784.0161 -1917.8828 m1782.6445 -1925.1162 1781.542 -1932.7578 1778.4434 -1939.5 c1777.2329 -1942.1328 1775.6787 -1944.7373 1773.1807 -1946.3096 c1770.3682 -1948.0801 1767.2368 -1946.8887 1764.252 -1946.4521 c1747.5444 -1944.0068 1753.2153 -1922.8096 1756.4565 -1911.7383 c1759.6992 -1900.6611 1761.4121 -1889.2344 1765.2354 -1878.2939 c1767.2896 -1872.4141 1770.04 -1865.7051 1773.8828 -1860.7451 c1776.4229 -1857.4668 1779.5054 -1854.835 1782.0518 -1851.6533 C1782.5938 -1855.7998 1783.4248 -1859.9258 1784.5342 -1863.9922 C1784.9404 -1869.7119 1785.0674 -1875.46 1785.0518 -1881.2207 c1785.0337 -1887.8555 1784.7983 -1894.4883 1784.6016 -1901.1191 c1784.4399 -1906.5801 1785.0313 -1912.5293 1784.0161 -1917.8828 cf1790.0713 -1792.5254 m1791.0654 -1785.791 1791.2617 -1778.8184 1791.8638 -1772.2021 c1792.8247 -1761.6445 1794.3984 -1750.7891 1798.897 -1741.0869 c1804.0425 -1729.9883 1813.9468 -1721.6992 1824.752 -1716.3018 c1831.4868 -1712.9375 1837.5845 -1719.0273 1838.2832 -1725.1299 c1839.2012 -1733.1563 1836.8721 -1741.3838 1834.4336 -1748.9404 c1832.2944 -1755.5693 1828.7646 -1761.626 1826.543 -1768.1611 c1822.2188 -1780.875 1815.9961 -1792.6084 1808.3945 -1803.6602 c1805.2593 -1808.2178 1801.9375 -1812.7617 1798.5107 -1817.1387 C1798.0176 -1817.4063 1797.5117 -1817.667 1796.9834 -1817.918 c1795.9561 -1818.4063 1794.8882 -1818.9141 1793.8086 -1819.4463 C1793.3877 -1811.5801 1792.6099 -1802.6025 1791.1719 -1796.5781 c1790.8472 -1795.2188 1790.4736 -1793.8682 1790.0713 -1792.5254 Cf1856.46 -1889.9521 m1856.8516 -1894.541 1855.9038 -1899.0586 1853.9121 -1903.1875 c1852.856 -1905.377 1851.3682 -1908.8574 1848.8804 -1909.7246 c1843.6216 -1911.5566 1836.748 -1908.876 1832.0205 -1906.666 c1825.0713 -1903.418 1819.0171 -1898.0703 1813.8994 -1892.4424 c1806.2617 -1884.042 1800.5654 -1873.1377 1797.3345 -1861.7471 C1796.9468 -1856.8535 1796.3877 -1851.9707 1795.5537 -1847.1025 c1795.1543 -1844.7715 1794.6265 -1842.4668 1794.0742 -1840.1689 c1793.9609 -1839.6973 1793.8042 -1839.2656 1793.6147 -1838.8691 C1793.627 -1838.8457 1793.6401 -1838.8232 1793.6519 -1838.8008 C1793.8721 -1838.6689 1794.0898 -1838.5352 1794.3062 -1838.4004 c1795.4155 -1837.707 1796.4756 -1836.9688 1797.4932 -1836.1895 C1797.9814 -1837.0703 1798.6523 -1837.8721 1799.5269 -1838.5068 c1807.127 -1844.0205 1815.7832 -1847.4824 1824.2666 -1851.3682 c1832.9482 -1855.3447 1840.1353 -1860.1943 1846.3599 -1867.4688 c1851.6768 -1873.6816 1855.7588 -1881.7383 1856.46 -1889.9521 cf1852.0454 -1838.0166 m1844.3066 -1840.0586 1835.7407 -1835.8242 1828.8096 -1832.9004 c1822.0303 -1830.04 1815.2969 -1827.6914 1808.1128 -1826.7861 C1810.6123 -1825.207 1812.6792 -1823.292 1815.0991 -1821.293 c1819.0522 -1818.0273 1823.71 -1815.502 1828.3428 -1813.3574 c1833.9307 -1810.7705 1840.4487 -1810.0137 1846.5166 -1809.5762 c1852.3154 -1809.1572 1859.5244 -1808.7559 1864.9014 -1811.4063 c1870.1353 -1813.9854 1867.1338 -1821.1641 1865.1392 -1825.6152 c1862.7446 -1830.957 1857.8657 -1836.4805 1852.0454 -1838.0166 cf*U*u1 D701.729 -2142.3008 m709.6123 -2148.2637 718.0762 -2153.0879 726.9717 -2156.9258 C800.8335 -2156.9258 L798.2461 -2148.0762 794.7539 -2139.4834 790.6177 -2131.2529 c788.1563 -2126.3555 785.2617 -2120.2197 781.3013 -2116.3281 c775.9507 -2111.0693 770.1279 -2106.3535 763.7588 -2102.3799 c762.3667 -2101.5117 760.9668 -2100.7275 759.5586 -2100.0078 C758.3027 -2096.0039 757.2964 -2091.9199 756.522 -2087.8398 c755.5688 -2082.8164 754.0825 -2072.7256 758.9834 -2069.5303 c766.0425 -2064.9277 774.3159 -2068.9824 779.5752 -2074.0879 c785.541 -2079.8789 789.5415 -2087.6758 792.9434 -2095.1631 c800.27 -2111.2891 802.4004 -2129.4219 803 -2147.3291 C803 -2156.9258 L826.7676 -2156.9258 L839.624 -2148.3203 854.9746 -2143.9102 869.8267 -2139.6543 c878.9312 -2137.0459 888.4854 -2133.3984 897.9893 -2136.1924 c900.9653 -2137.0674 903.2173 -2137.5283 905.8789 -2139.7129 c908.1147 -2141.5488 911.7837 -2145.1387 911.1885 -2148.417 c910.6924 -2151.1484 906.5762 -2152.9219 904.4819 -2154.1104 c902.9609 -2154.9736 901.3789 -2155.9609 899.7715 -2156.9258 C921.0078 -2156.9258 L923.4521 -2153.4043 924.605 -2149.1572 923.7261 -2143.8564 c922.2163 -2134.752 912.9395 -2127.709 905.0259 -2124.4258 c894.9336 -2120.2402 882.562 -2122.4043 872.4507 -2125.2598 c862.8315 -2127.9756 852.9834 -2130.7305 843.502 -2134.2793 C844.2373 -2133.2988 844.9756 -2132.3213 845.6987 -2131.3301 c849.6211 -2125.9531 853.2588 -2120.373 856.7153 -2114.6875 c858.4385 -2111.8545 860.0732 -2108.9688 861.6787 -2106.0684 c863.4341 -2102.8975 866.1035 -2099.1826 866.9814 -2095.6484 c868.6182 -2089.0547 869.8555 -2082.3975 870.7324 -2075.6602 c871.6025 -2068.9746 872.2285 -2061.2188 869.1733 -2054.9727 c865.645 -2047.7578 857.811 -2047.6641 851.46 -2050.9199 c847.1196 -2053.1445 843.2046 -2056.8496 839.3784 -2059.8398 c834.5083 -2063.6455 829.9038 -2067.7178 825.6514 -2072.2061 c818.1782 -2080.0938 812.3262 -2089.2363 808.2822 -2099.2695 C807.1978 -2095.9766 805.9688 -2092.7168 804.5669 -2089.498 c797.5249 -2073.3291 784.2739 -2052.8682 764 -2054.8262 c754.0068 -2055.79 746.1196 -2061.1406 743.6382 -2071.0762 c741.7197 -2078.7578 742.876 -2087.1484 744.7197 -2094.9102 C738.6143 -2093.6953 732.2935 -2093.3555 725.6655 -2093.5049 c713.7983 -2093.7734 701.4834 -2095.3154 691.7764 -2102.7168 c685.2124 -2107.7217 681.7905 -2115.4648 684.9868 -2123.4834 c688.186 -2131.5098 695.0146 -2137.2207 701.729 -2142.3008 cf0 D816 -2130.5674 m816 -2118.4248 817.9282 -2107.5449 823.6631 -2096.7002 c828.6318 -2087.3057 835.9883 -2079.5322 844.0107 -2072.6729 c847.9434 -2069.3105 852.165 -2065.9688 856.4468 -2063.0723 c857.0918 -2062.6357 857.5645 -2062.3438 858.0151 -2062.1211 C858.3403 -2063.2813 858.2363 -2063.2949 858.3203 -2064.6602 c858.5283 -2068.0254 858.2163 -2071.4287 857.8403 -2074.7705 c857.1992 -2080.4629 855.9331 -2086.125 854.5723 -2091.6836 c853.3447 -2096.6953 848.9526 -2102.2744 846.3408 -2106.7051 c842.9648 -2112.4336 839.2939 -2117.9824 835.4521 -2123.4072 c829.5376 -2131.7598 822.959 -2139.6182 816 -2147.1191 C816 -2130.5674 Lf778.6675 -2136.416 m780.5215 -2139.8828 782.1855 -2143.4629 783.6987 -2147.1133 C781.6958 -2144.1465 779.8428 -2141.0801 778.0327 -2137.9932 c775.2744 -2133.2871 772.6001 -2128.458 770.0381 -2123.5742 C773.6636 -2127.3203 776.1733 -2131.752 778.6675 -2136.416 cf697.625 -2114.7891 m698.3208 -2113.709 699.8745 -2112.8125 700.9619 -2112.123 c705.6875 -2109.1328 710.8062 -2107.7363 716.3408 -2107.0859 c727.3911 -2105.7842 738.7349 -2105.5957 749.1274 -2109.5615 C750.8228 -2114.1123 752.8203 -2118.5615 755.1763 -2122.7227 c761.373 -2133.666 766.6797 -2144.8887 773.6689 -2155.3379 C757.0161 -2153.7373 740.4941 -2150.0381 725.8652 -2142.125 c719.376 -2138.6143 712.9209 -2134.7725 707.1348 -2130.1768 c704.3633 -2127.9746 701.478 -2125.5127 699.3291 -2122.6777 c697.4629 -2120.2158 696.6318 -2118.3379 696.7495 -2116.1973 c696.7246 -2116.6465 697.1367 -2115.5459 697.625 -2114.7891 cf*U*u1 D2506.9141 -2104.8691 m2517.6299 -2108.3037 2530.7939 -2104.5996 2541.2969 -2102.0332 c2546.5703 -2100.7441 2551.4453 -2099.4854 2556.0332 -2096.4551 c2558.3535 -2094.9229 2560.5205 -2093.168 2562.6191 -2091.3252 C2562.9805 -2091.3467 2563.3428 -2091.3555 2563.7051 -2091.3711 C2567.127 -2099.083 2569.7041 -2106.9287 2570.2539 -2115.7744 c2570.6895 -2122.7695 2570.3447 -2129.8174 2570.6309 -2136.8242 c2570.9072 -2143.5605 2571.6602 -2150.2754 2572.7715 -2156.9258 C2585.9238 -2156.9258 L2583.4551 -2143.209 2583.8564 -2129.6445 2583.2539 -2115.7744 c2582.9375 -2108.4707 2581.4443 -2101.5869 2579.1543 -2094.9023 C2583.3672 -2095.0508 2587.7305 -2094.3867 2591.3672 -2093.7119 c2601.2559 -2091.8779 2609.8818 -2086.7227 2614.4912 -2077.5293 c2619.2363 -2068.0664 2617.3857 -2052.4824 2604.9824 -2050.3262 c2594.1309 -2048.4395 2584.1836 -2057.0547 2576.2207 -2063.1797 c2573.2832 -2065.4385 2570.2559 -2067.5547 2567.3184 -2069.7979 C2566.459 -2068.4727 2565.5332 -2067.1914 2564.5088 -2065.9746 c2560.2852 -2060.9561 2556.0059 -2056 2552.2686 -2050.6016 c2545.9697 -2041.5029 2543.3125 -2032.3252 2546.4805 -2022.709 C2551.6133 -2024.5703 2557.2383 -2023.2793 2562.3027 -2019.1895 c2568.8887 -2013.8721 2572.7393 -2004.8555 2575.8311 -1997.2236 c2579.4883 -1988.1992 2587.2422 -1976.6055 2581.1064 -1967.043 c2576.1523 -1959.3213 2566.2236 -1953.5615 2558.0684 -1949.7881 c2538.085 -1940.541 2524.2949 -1962.4121 2518.4404 -1978.2695 c2515.4111 -1986.4717 2512.4668 -1996.1006 2515.1445 -2004.7578 c2517.7695 -2013.2432 2525.6523 -2017.6924 2533.3516 -2021.0088 C2531.0234 -2029.5547 2531.5859 -2038.4414 2535.4531 -2047.1709 c2538.0527 -2053.0391 2541.6523 -2058.2637 2545.5742 -2063.3203 c2549.3076 -2068.1348 2553.5654 -2072.5254 2556.7891 -2077.6436 C2548.4639 -2076.2832 2540.2676 -2073.4844 2532.0283 -2071.9912 c2522.2783 -2070.2236 2507.8232 -2069.1631 2500.2813 -2077.3242 c2495.8047 -2082.1689 2493.1143 -2087.3389 2494.3496 -2094.0264 c2495.4102 -2099.7754 2501.9043 -2103.2637 2506.9141 -2104.8691 cf0 D2583.8086 -2073.6152 m2588.3691 -2070.1064 2592.959 -2066.6055 2598.1436 -2064.0576 c2601.7197 -2062.3008 2603.9619 -2062.7354 2604.1152 -2067.0303 c2604.2832 -2071.7217 2600.4238 -2076.2598 2596.5986 -2078.4502 c2593.6299 -2080.1514 2589.3623 -2080.9648 2585.625 -2081.5752 c2583.5527 -2081.9131 2581.3916 -2081.9092 2579.2998 -2081.8545 c2578.4316 -2081.832 2575.998 -2080.8281 2576.4971 -2081.6387 c2576.1055 -2081.0029 2575.6582 -2080.4805 2575.1729 -2080.0527 C2578.002 -2077.8477 2580.96 -2075.8057 2583.8086 -2073.6152 cf2538.5547 -2009.2188 m2534.6133 -2007.627 2529.2314 -2005.3652 2527.6807 -2001.3018 c2525.5703 -1995.7773 2528.6416 -1988.8193 2530.3438 -1983.5498 c2533.082 -1975.0742 2540.4697 -1957.6328 2551.9805 -1961.249 c2557.3604 -1962.9395 2563.1426 -1967.4219 2567.335 -1971.0605 c2570.2549 -1973.5947 2570.668 -1973.8096 2570.0078 -1977.0908 c2569.0156 -1982.0293 2566.002 -1986.1172 2564.4033 -1990.8096 c2562.5713 -1996.1875 2559.9297 -2001.3457 2556.7275 -2006.0313 c2555.3652 -2008.0254 2553.6709 -2009.7832 2551.5313 -2010.9121 c2552.1797 -2010.5703 2550.6953 -2010.7129 2551.1758 -2010.8223 c2550.1016 -2010.5781 2549.1182 -2009.0684 2548.4785 -2008.3164 c2545.8213 -2005.2012 2540.7539 -2006.1699 2538.5547 -2009.2188 Cf2507.2949 -2089.3174 m2509.6699 -2084.3604 2516.1074 -2083.7627 2520.9229 -2083.7734 c2528.791 -2083.79 2536.5449 -2085.9414 2544.252 -2087.9404 C2540.8633 -2089.1387 2537.0859 -2089.6973 2533.752 -2090.4736 c2527.832 -2091.8516 2521.875 -2092.9395 2515.7822 -2092.9883 c2513.8564 -2093.0039 2505.7607 -2092.5195 2507.2949 -2089.3174 cf*U*u1 D2932.4014 -2110.3105 m2929.6758 -2116.3389 2927.1113 -2122.4551 2924.3369 -2128.4414 c2919.9229 -2137.9668 2914.6084 -2147.1885 2910.9111 -2156.9258 C2924.7012 -2156.9258 L2927.3525 -2150.8672 2930.6074 -2145.0078 2933.5322 -2139.207 c2937.5049 -2131.3262 2940.8174 -2123.1455 2944.4639 -2115.1191 C2945.5801 -2115.459 2946.7627 -2115.5146 2947.8809 -2115.2158 C2957.3223 -2118.2832 2966.79 -2121.2188 2976.6201 -2122.8955 c2986.1504 -2124.5205 3001.9805 -2127.8369 3008.748 -2118.7656 c3013.3496 -2112.6006 3008.4541 -2102.748 3003.207 -2098.9756 c2997.6758 -2094.998 2989.3086 -2093.7773 2982.6875 -2093.4365 c2974.4561 -2093.0127 2964.4824 -2092.2178 2955.9141 -2094.3691 C2957.6006 -2092.042 2959.4131 -2089.8057 2961.3828 -2087.6816 c2965.2783 -2083.4805 2967.9209 -2078.2256 2971.5098 -2073.748 c2974.5693 -2069.9307 2978.209 -2066.0596 2983.0254 -2064.6445 c2987.6855 -2063.2754 2994.0117 -2067.4033 2998.2793 -2068.9336 c3004.125 -2071.0303 3010.4912 -2070.4668 3016.5889 -2070.3232 c3024.0625 -2070.1484 3031.4902 -2069.2412 3038.7891 -2067.6348 c3047.7695 -2065.6582 3056.2344 -2057.1582 3058.2871 -2048.2246 c3062.3984 -2030.332 3044.709 -2014.6807 3030.7559 -2007.1719 c3023.332 -2003.1768 3015.0781 -2000.5645 3006.626 -2000.2559 c2996.2432 -1999.877 2987.2441 -2006.2539 2981.2256 -2014.2168 c2975.4766 -2021.8223 2971.2607 -2030.9258 2967.5928 -2039.6992 c2965.1113 -2045.6387 2960.0127 -2056.5146 2963.6113 -2063.1084 C2961.9121 -2065.0352 2960.3203 -2067.0664 2958.7637 -2069.1533 c2955.167 -2073.9736 2951.7451 -2078.6836 2947.9756 -2083.3711 c2947.1055 -2084.4531 2946.2783 -2085.5605 2945.4697 -2086.6797 C2942.585 -2083.0107 2939.8857 -2079.2031 2936.7451 -2075.708 c2934.1299 -2072.7979 2932.0488 -2070.1074 2929.752 -2066.8555 c2924.3076 -2059.1436 2919.0244 -2050.8223 2911.9033 -2044.5244 c2908.9697 -2041.9307 2905.4941 -2039.7012 2901.4863 -2039.4521 c2896.6777 -2039.1533 2893.3467 -2043.6719 2891.4629 -2047.5215 c2887.4482 -2055.7256 2885.9551 -2065.627 2885.4453 -2074.6699 c2884.0146 -2100.1113 2913.1641 -2104.9043 2932.4014 -2110.3105 Cf0 D2977.3291 -2106.3223 m2981.3379 -2106.4668 2985.1221 -2106.4971 2989.0576 -2107.3564 c2991.0479 -2107.791 2993.0889 -2108.3555 2994.9346 -2109.2207 c2995.4277 -2109.4521 2996.1074 -2109.8096 2996.5742 -2110.167 C2996.6436 -2110.5762 2996.7295 -2110.9824 2996.8457 -2111.3828 C2994.1113 -2111.5527 2991.332 -2111.4004 2988.6025 -2111.2695 c2981.2637 -2110.9141 2974.0576 -2109.3545 2966.9736 -2107.4883 c2965.3691 -2107.0654 2963.7715 -2106.6152 2962.1777 -2106.1533 C2967.3389 -2105.4863 2973.1133 -2106.1689 2977.3291 -2106.3223 cf2977.9199 -2048.8203 m2979.5049 -2044.2305 2981.6748 -2039.9346 2983.8047 -2035.584 c2987.6504 -2027.7314 2993.5645 -2014.2852 3003.834 -2013.3281 c3019.3066 -2011.8848 3037.582 -2023.877 3044.3926 -2037.373 c3047.3965 -2043.3262 3045.4209 -2048.9316 3039.9805 -2052.7861 c3034.8545 -2056.417 3027.6924 -2056.6641 3021.6006 -2057.0996 c3015.207 -2057.5566 3007.8896 -2058.4014 3001.7354 -2056.3984 c2996.5313 -2054.7051 2991.5957 -2051.7842 2986.0146 -2051.4775 c2982.6992 -2051.2949 2979.5 -2051.9531 2976.5156 -2053.1943 C2976.9326 -2051.7188 2977.4229 -2050.2617 2977.9199 -2048.8203 cf2904.0098 -2051.6855 m2904.71 -2050.5527 2905.5117 -2051.9941 2903.5859 -2052.4199 C2903.7246 -2052.1748 2903.8594 -2051.9287 2904.0098 -2051.6855 cf2901.8291 -2056.4707 m2902.125 -2055.5273 2902.4756 -2054.6367 2902.8828 -2053.7715 C2905.6143 -2055.8301 2907.8643 -2058.9365 2909.916 -2061.4824 c2915.4141 -2068.3047 2919.8154 -2075.9707 2925.5098 -2082.6396 c2929.8887 -2087.7666 2933.8164 -2093.2764 2938.2402 -2098.3545 C2938.2129 -2098.4043 2938.1855 -2098.4541 2938.1592 -2098.5039 C2934.123 -2097.2246 2930.0703 -2095.999 2925.9707 -2094.9287 c2916.5908 -2092.4805 2904.5947 -2090.6367 2899.4941 -2081.2539 c2895.9717 -2074.7754 2899.835 -2062.8379 2901.8291 -2056.4707 cf*U2185.4844 0.289551 m2171.9707 0.289551 L2169.9199 -7.28369 2167.9561 -14.876 2165.8916 -22.4043 c2162.4492 -34.9595 2158.1846 -47.2563 2154.8896 -59.856 c2154.3535 -61.9067 2153.8477 -63.9644 2153.3574 -66.0249 C2145.373 -44.2388 2136.0352 -22.9272 2126.4473 -1.83154 c2126.125 -1.12354 2125.7988 -0.417969 2125.4756 0.289551 C2111.2461 0.289551 L2124 -27.3916 2136.2441 -55.3389 2145.9727 -84.2476 c2146.8096 -86.7344 2147.6123 -89.2324 2148.4004 -91.7349 C2148.0352 -94.1602 2147.6895 -96.5884 2147.3779 -99.0229 c2143.9902 -125.5303 2145.2539 -152.9414 2153.5762 -178.4575 c2155.1563 -183.3032 2162.9531 -185.5005 2165.4561 -180.0103 c2171.4512 -166.8589 2169.5391 -150.8628 2169.1074 -136.7632 c2168.8877 -129.5752 2168.332 -122.4082 2167.4551 -115.271 c2166.4502 -107.103 2164.3691 -99.4517 2161.9746 -91.5928 c2161.9492 -91.5088 2161.9219 -91.4253 2161.8965 -91.3408 C2166.9258 -60.7104 2177.0762 -30.3604 2185.2402 -0.575684 c2185.3193 -0.287109 2185.4053 0.000977 2185.4844 0.289551 Cf*u1 D2514.4785 -61.6499 m2510.2041 -59.1919 2505.3125 -57.6934 2500.4717 -56.8936 c2493.8594 -55.8013 2487.0391 -55.0767 2480.3682 -54.394 c2450.3311 -51.3223 2418.5547 -57.4092 2389.457 -64.5181 c2361.3926 -71.375 2333.8535 -80.6084 2308.125 -93.8579 c2288.0898 -104.1758 2269.6621 -117.8789 2252.6426 -132.8633 C2260.3672 -113.8008 2265.8262 -93.7773 2268.7197 -73.105 c2270.6318 -59.4458 2271.6348 -45.5972 2271.2871 -31.8018 c2271.0146 -20.9556 2269.1367 -10.3237 2267.124 0.289551 C2253.9648 0.289551 L2255.002 -5.1001 2256.041 -10.4897 2256.8555 -15.9194 c2258.4922 -26.8384 2258.5391 -37.8311 2258.0342 -48.835 c2257.1563 -68.002 2253.8965 -86.96 2248.6182 -105.3965 c2243.2441 -124.1631 2235.459 -142.0859 2225.6943 -158.873 C2220.7148 -164.2397 2215.9219 -169.7788 2211.3379 -175.4873 c2207.123 -180.7349 2203.2383 -186.2622 2199.1328 -191.6006 c2198.1465 -192.8823 2197.1934 -194.1729 2196.2832 -195.4824 C2195.5332 -195.0908 2194.7871 -194.708 2194.0537 -194.3418 c2186.6279 -190.6309 2178.6152 -188.4395 2170.4063 -187.3838 c2153.5947 -185.2212 2136.6504 -188.0073 2120.1533 -191.2593 C2118.2363 -189.6719 2116.5469 -187.7036 2114.9814 -186.0093 c2110.2607 -180.9004 2106.3506 -175.4321 2102.4492 -169.6704 c2094.1865 -157.4658 2085.2441 -145.5386 2077.5723 -132.9629 c2069.8203 -120.2568 2063.8857 -106.5234 2058.4551 -92.6992 c2052.9053 -78.5728 2047.3604 -64.3882 2042.626 -49.9648 c2037.2295 -33.5215 2033.2012 -16.7349 2030.7031 0.289551 C2017.5508 0.289551 L2017.8047 -1.5708 2018.0615 -3.43115 2018.3486 -5.28955 c2022.957 -35.1147 2033.2734 -63.0996 2043.9863 -91.1563 c2049.2695 -104.9946 2054.9473 -118.7124 2061.9346 -131.7881 c2068.9023 -144.8252 2078.0391 -156.4897 2086.2236 -168.7588 c2091.0342 -175.9688 2095.7344 -183.2231 2101.2002 -189.9131 C2091.8047 -185.8369 2082.8799 -180.6738 2074.0039 -175.5615 c2061.7178 -168.4858 2049.2998 -161.814 2037.3193 -154.2119 c2013.1113 -138.8511 1989.5361 -122.1978 1963.0313 -110.9224 c1934.9121 -98.96 1904.7085 -91.7354 1874.5532 -87.2871 c1860.6538 -85.2368 1846.3247 -82.9536 1832.251 -83.2817 c1822.5693 -83.5078 1813.251 -85.1582 1805.5454 -91.3472 c1797.1514 -98.0889 1795.0132 -111.5718 1794.792 -121.6504 c1794.54 -133.123 1799.1382 -144.2778 1805.1826 -153.8013 c1818.2939 -174.4604 1839.1113 -191.2085 1858.3184 -205.9453 c1877.041 -220.3105 1897.3765 -232.4839 1918.8174 -242.291 C1901.3994 -242.4819 1856.5117 -243.3359 1831.7441 -247.1338 c1824.4897 -248.2461 1817.2515 -249.7192 1810.1255 -251.4697 c1803.8848 -253.002 1797.4692 -256.4209 1791.5718 -258.9595 c1780.3721 -263.7803 1768.4771 -270.3955 1762.4478 -281.4585 c1755.8989 -293.4746 1759.4668 -307.0786 1766.4365 -317.959 c1773.0596 -328.2969 1782.6362 -338.1792 1792.3672 -345.6167 c1812.4346 -360.9531 1837.7778 -365.4604 1862.4673 -366.1694 c1874.5347 -366.5161 1886.5371 -368.0215 1898.625 -368.4229 c1911.9346 -368.8647 1925.2627 -368.499 1938.5488 -367.6494 c1965.8623 -365.9023 1993.0156 -361.6621 2019.7988 -356.1167 c2021.9814 -355.665 2024.166 -355.1987 2026.3496 -354.7251 C2024.5908 -355.8237 2022.8398 -356.9272 2021.1377 -358.0767 c2010.5264 -365.2402 2000.3125 -373.0249 1990.6387 -381.4102 c1970.9072 -398.5127 1954.0449 -418.9893 1941.8467 -442.1128 c1928.6484 -467.1333 1922.1074 -496.0723 1919.7676 -524.0986 c1918.5674 -538.4727 1918.9326 -552.9624 1920.7178 -567.2695 c1922.2559 -579.5938 1923.6992 -594.2422 1931.6748 -604.3018 c1946.1807 -622.5991 1975.6523 -611.0337 1992.5693 -603.3882 c2018.1846 -591.8115 2040.9414 -573.8745 2060.75 -554.1323 c2081.3906 -533.562 2098.6182 -510.0718 2111.5332 -483.9375 c2123.6973 -459.3213 2130.9766 -433.2881 2136.8779 -406.5742 c2139.8955 -392.9131 2142.8105 -379.2769 2146.373 -365.7422 c2147.7021 -360.6914 2148.9395 -355.5015 2150.8193 -350.6035 C2151.8213 -372.9414 2154.3809 -395.1274 2158.1855 -417.2363 c2163.3369 -447.1685 2170.7178 -476.6963 2184.2334 -504.0425 c2191.4961 -518.7368 2200.6309 -533.4297 2211.0752 -546.0386 c2221.8633 -559.062 2238.5039 -570.6567 2255.2803 -560.9233 c2264.7217 -555.4458 2271.0342 -543.9678 2275.4512 -534.415 c2280.5615 -523.3647 2283.4893 -511.9512 2284.7051 -499.8613 c2287.5723 -471.3428 2281.2266 -442.083 2274.1973 -414.6045 c2267.1797 -387.1729 2259.9336 -359.5532 2250.3428 -332.8945 c2249.1699 -329.6338 2247.9473 -326.3784 2246.6719 -323.1362 C2248.0781 -324.2114 2249.4766 -325.2798 2250.8633 -326.3423 c2274.1914 -344.2158 2299.4854 -357.9536 2327.3662 -367.3994 c2361.4131 -378.9346 2400.2236 -384.0386 2436.1309 -379.8096 c2450.5879 -378.1064 2467.3203 -374.585 2477.3311 -363.0464 c2482.1865 -357.4497 2484.5381 -350.5195 2484.6709 -343.1528 c2484.875 -331.812 2479.752 -322.5425 2473.5195 -313.4326 c2470.1934 -308.5703 2466.6836 -303.8384 2463.71 -298.7451 c2460.3301 -292.9551 2455.5361 -288.043 2450.7734 -283.3389 c2441.1855 -273.8687 2429.9785 -266.0029 2418.1211 -259.6533 c2405.04 -252.6475 2388.8438 -249.8066 2374.3867 -247.0791 c2359.4707 -244.2656 2344.3535 -242.5342 2329.2578 -241.0381 c2322.6289 -240.3809 2315.9922 -239.6187 2309.3506 -238.9302 C2314.6719 -237.0928 2319.9756 -235.2095 2325.2969 -233.4312 c2354.082 -223.8115 2382.4746 -212.9175 2409.8311 -199.7363 c2423.8418 -192.9854 2437.498 -185.5117 2450.75 -177.374 c2462.8525 -169.9429 2474.0283 -160.5508 2485.2207 -151.8081 c2490.7686 -147.4741 2496.1709 -142.9619 2501.3701 -138.2144 c2503.835 -135.9634 2506.5918 -133.7573 2508.1309 -130.7534 c2509.7559 -127.5835 2511.6445 -124.5449 2513.5107 -121.5142 c2519.999 -110.979 2528.6348 -99.7441 2529.6787 -87.022 c2530.5713 -76.1592 2523.459 -66.8154 2514.4785 -61.6499 cf0 D2122.2432 -206.5244 m2123.6982 -206.9004 2125.2227 -207.1509 2126.8398 -207.2314 c2130.5801 -207.4175 2132.6387 -204.9302 2133.0361 -202.083 C2152.6143 -198.8535 2172.2705 -198.0703 2189.9551 -207.0566 C2189.8301 -207.373 2189.6973 -207.6831 2189.5791 -208.0044 c2187.3154 -214.1914 2196.1523 -218.9321 2200.4434 -214.3286 c2200.543 -214.2217 2200.6406 -214.1118 2200.7402 -214.0049 C2204.5352 -217.0132 2207.4727 -220.1279 2209.7871 -224.77 c2212.3213 -229.854 2212.9766 -235.9346 2213.2637 -241.522 c2213.6504 -249.0801 2213.4023 -256.979 2211.4941 -264.3813 C2209.8281 -262.603 2208.1416 -260.8545 2206.4434 -259.1416 c2202.0488 -254.7085 2193.3564 -259.1616 2195.5801 -265.4658 c2197.4619 -270.8018 2199.9551 -275.7773 2202.8984 -280.4639 C2200.7061 -282.7065 2198.3535 -284.7759 2196.3223 -287.2983 c2192.2705 -292.3286 2187.918 -297.1001 2183.0283 -301.3286 c2178.8223 -304.9653 2173.8975 -307.6289 2168.5205 -309.0117 c2162.5967 -310.5352 2156.5332 -308.8296 2150.752 -307.4902 c2145.4219 -306.2559 2140.1396 -304.4092 2135.1133 -302.0249 C2133.9844 -300.3237 2132.1211 -299.1406 2129.8398 -299.2422 c2129.8281 -299.2427 2129.8164 -299.2446 2129.8047 -299.2451 C2126.4512 -297.3179 2123.2549 -295.145 2120.2959 -292.7358 c2112.9482 -286.7534 2108.2754 -279.9287 2106.3447 -270.729 c2103.6387 -257.8413 2104.4521 -243.7188 2107.5469 -230.9888 c2109.791 -221.7607 2114.0205 -211.5088 2122.2432 -206.5244 Cf1852.3218 -184.4395 m1835.3613 -169.6509 1814.667 -153.1919 1808.8057 -130.3921 c1807.5376 -125.458 1807.4775 -120.2192 1808.4136 -115.2256 c1809.3628 -110.1611 1810.2031 -105.0049 1813.9678 -101.2305 c1819.6694 -95.5132 1830.3779 -96.2344 1837.7354 -96.2212 c1844.9844 -96.2075 1852.4395 -97.4712 1859.6338 -98.3145 c1867.8574 -99.2783 1876.0454 -100.5093 1884.2031 -101.9209 c1899.6172 -104.5879 1914.8647 -108.1973 1929.8047 -112.835 c1943.6904 -117.1455 1957.3242 -122.0571 1970.3311 -128.584 c1983.1396 -135.0112 1995.3271 -142.625 2007.3799 -150.3516 c2031.6338 -165.8999 2056.001 -180.8726 2081.3418 -194.6089 c2088.9316 -198.7236 2096.7871 -202.457 2104.9473 -205.3125 C2099.7588 -212.4316 2096.4414 -221.2446 2094.5059 -229.6729 c2091.9277 -240.8945 2090.8721 -253.4614 2092.2402 -265.4307 C2086.2188 -263.9175 2080.0469 -263.2026 2073.9629 -261.8989 c2067 -260.4067 2060.9375 -258.7354 2053.7246 -258.7085 c2046.8867 -258.6826 2040.2891 -257.2905 2033.5254 -257.1895 c2025.8643 -257.0752 2018.1865 -256.4072 2010.6006 -255.3467 c1995.3525 -253.2148 1980.2734 -249.2769 1965.3896 -245.4111 c1951.4502 -241.7905 1937.8701 -236.7822 1924.7656 -230.8311 c1898.7002 -218.9932 1873.9053 -203.2583 1852.3218 -184.4395 cf1973.501 -351.0791 m1941.9492 -355.5195 1909.8311 -356.9448 1878.0645 -354.2026 c1864.8057 -353.0581 1851.4258 -353.2358 1838.2725 -350.9482 c1826.4053 -348.8843 1815.0503 -344.9717 1804.8252 -338.562 c1798.0947 -334.3428 1792.8784 -328.7251 1787.3789 -323.0938 c1781.46 -317.0322 1775.7056 -310.2207 1772.9639 -302.0801 c1766.7114 -283.5122 1788.6685 -273.98 1802.2681 -268.4546 c1811.2935 -264.7876 1820.0576 -262.3203 1829.6587 -260.5801 c1840.061 -258.6943 1850.6738 -257.5923 1861.2095 -256.7949 c1882.7275 -255.1665 1904 -255.2368 1926 -255.2363 c1930.3281 -255.2363 1932.3105 -251.4312 1931.9541 -247.938 C1932.6992 -248.2393 1933.4414 -248.5483 1934.1895 -248.8442 c1947.4365 -254.0854 1961.1406 -258.1572 1975.0977 -261.0049 c1982.7275 -262.562 1990.1865 -264.9067 1997.8643 -266.3608 c2005.6719 -267.8398 2013.5801 -268.8667 2021.4941 -269.5684 c2027.2285 -270.0771 2033.1387 -269.7236 2038.7969 -270.7676 c2044.7275 -271.8623 2050.7383 -271.6792 2056.7354 -271.7656 c2062.1807 -271.8433 2067.0352 -273.75 2072.3066 -274.8804 c2075.7832 -275.625 2079.2773 -276.1372 2082.752 -276.7456 C2083.873 -278.085 2085.6182 -279 2088 -279 C2093.8369 -279 L2094.2344 -279 2094.6094 -278.9648 2094.9707 -278.9082 C2095.2246 -279.7515 2095.4844 -280.5918 2095.7695 -281.4185 c2098.8623 -290.3687 2105.1719 -297.873 2112.9619 -303.9141 C2106.8818 -306.7119 2101.002 -310.2095 2094.9414 -312.8291 c2081.4395 -318.6655 2068.4482 -325.6719 2056.123 -333.6963 C2029.2246 -341.8564 2001.2588 -347.1724 1973.501 -351.0791 cf2264.6016 -430.0068 m2270.9404 -456.8999 2276.4746 -487.1709 2269.0498 -514.4009 c2265.4395 -527.6416 2253.7109 -559.2002 2235.1436 -549.9155 c2222.5879 -543.6377 2214.0996 -529.3252 2207.082 -517.7642 c2198.5176 -503.6538 2190.9727 -489.2573 2185.4209 -473.666 c2177.0869 -450.2612 2172.5664 -425.6782 2168.6357 -401.2163 c2164.8477 -377.6426 2163.3428 -353.6162 2163.3428 -329.7446 c2163.3428 -324.7871 2157.8301 -321.6841 2153.5625 -324.1318 c2143.6572 -329.8135 2139.2207 -343.3867 2136.2051 -353.6929 c2132.0762 -367.8037 2128.8809 -382.1406 2125.7832 -396.5029 c2119.6406 -424.9766 2112.4766 -452.7534 2099.5146 -478.981 c2086.5732 -505.1694 2068.8506 -528.1362 2047.9736 -548.4717 c2027.957 -567.9683 2004.5947 -585.105 1978.4453 -595.3545 c1969.0723 -599.0283 1957.6533 -602.6733 1947.5146 -600.0186 c1937.3887 -597.3672 1936.2764 -582.3066 1934.7793 -574.0269 c1929.6592 -545.71 1931.8457 -516.0864 1938.7217 -488.2754 c1945.3516 -461.4551 1957.2998 -437.0952 1974.9697 -415.8203 c1991.3398 -396.1094 2011.4629 -379.9395 2032.79 -365.9087 c2042.9404 -359.231 2052.6406 -352.0415 2062.6719 -345.3066 C2071.5791 -342.5044 2080.3438 -339.2979 2088.8496 -335.5254 c2097.9648 -331.4829 2106.3125 -326.1968 2115.5 -322.3052 c2120.416 -320.2227 2126.2607 -317.9219 2130.7109 -314.3486 C2136.6875 -316.9932 2142.792 -318.9829 2148.5215 -320.3101 c2161.1875 -323.2432 2172.3535 -323.2397 2183.8926 -316.6001 c2194.7041 -310.3794 2202.2129 -299.9365 2210.9014 -291.3359 C2215.0918 -296.2881 2219.7412 -300.9102 2224.6328 -305.2935 C2230.8711 -318.0796 2236.1719 -331.2915 2240.7461 -344.7607 c2250.1982 -372.5957 2257.8594 -401.4004 2264.6016 -430.0068 cf2509.9814 -102.4541 m2506.4834 -108.4971 2502.584 -114.2988 2499.0508 -120.3223 c2492.0723 -132.2202 2478.6123 -140.7368 2467.7344 -148.9731 c2462.4082 -153.0059 2457.0693 -157.02 2451.8037 -161.1313 c2445.5254 -166.0337 2438.1563 -169.8677 2431.2539 -173.8188 c2404.5684 -189.0947 2376.2754 -201.3232 2347.4512 -211.9326 c2320.1006 -221.9995 2292.2539 -232.7744 2263.3613 -236.9819 c2261.0938 -237.3125 2258.8242 -237.7305 2256.5508 -238.1191 C2253.3496 -238.4321 2250.2266 -238.8086 2247.0352 -239.231 C2246.998 -239.2319 2247 -239.2354 2247 -239.2363 C2247 -239.2451 L2246 -239.3213 2245.7734 -239.3892 2245.1973 -239.4688 c2237.8457 -240.4858 2239.7021 -252.4102 2246.8887 -252.2363 c2250.5488 -252.1479 2254.1797 -251.6025 2257.8066 -250.9897 C2286.4268 -248.4771 2315.1875 -252.2954 2343.6484 -255.5698 c2358.8984 -257.3242 2374.0576 -259.8232 2388.958 -263.5391 c2395.8672 -265.2617 2403.7031 -266.873 2410.084 -270.1074 c2416.418 -273.3188 2422.4541 -277.0874 2428.2295 -281.2129 c2433.4131 -284.9155 2438.1855 -289.1772 2442.7129 -293.6494 c2447.4844 -298.3608 2451.0869 -303.2305 2454.6406 -308.8447 c2457.8662 -313.9409 2461.5264 -318.7544 2464.8457 -323.7896 c2467.7441 -328.186 2471.168 -333.313 2471.375 -338.7456 c2471.6182 -345.1265 2471.4912 -349.9902 2467.6621 -354.4028 c2463.7246 -358.9414 2457.9258 -361.5684 2451.9941 -363.4556 c2436.7588 -368.3018 2420.0908 -368.3965 2404.2676 -367.8579 c2388.5605 -367.3228 2373.0127 -365.6538 2357.6523 -362.3052 c2329 -356.0576 2301.6113 -344.8052 2276.8457 -329.1172 c2264.9365 -321.5728 2253.7969 -312.605 2242.8223 -303.771 c2240.2559 -301.7051 2237.6973 -299.5645 2235.1836 -297.3472 C2234.7422 -296.4697 2234.3057 -295.5884 2233.8555 -294.7173 c2230.3789 -287.9917 2226.0684 -281.6553 2221.3018 -275.666 C2224.3936 -268.1514 2225.7979 -259.9063 2226.2266 -251.6255 c2227.0166 -236.3311 2224.9414 -220.8022 2214.6602 -208.8418 c2213.1758 -207.1147 2211.457 -205.4985 2209.6006 -203.9824 C2219.3359 -192.4248 2228.0615 -180.1274 2235.6699 -167.2109 C2242.166 -160.2915 2248.9863 -153.6743 2256.0176 -147.3071 c2277.9277 -127.4683 2301.6523 -110.5767 2328.6182 -98.3457 c2355.1211 -86.3237 2383.7744 -78.3545 2412.2988 -72.8877 c2427.5459 -69.9658 2442.8789 -67.5903 2458.4043 -66.8877 c2465.7295 -66.5562 2473.0664 -66.7461 2480.3682 -67.394 c2486.6201 -67.9492 2493.2236 -68.6514 2499.3779 -69.8555 c2508.3105 -71.6035 2516.9199 -77.0649 2516.6787 -87.022 c2516.5508 -92.2998 2512.5293 -98.0542 2509.9814 -102.4541 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF