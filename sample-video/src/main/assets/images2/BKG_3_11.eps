%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 3.eps)%%CreationDate: 04.10.18 2:08%%Canvassize: 16383%%BoundingBox: -1 -2160 3795 -29%%HiResBoundingBox: -0.372559 -2159.9277 3794.0508 -29.2861%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -855.458 291.3179 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5442 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD33FFA97FA9FD11FFA9A9A9FD05FFA9A9A9FD21FFA9557FFD3AFF%A9A9A95555FD12FF557F7F55FFFFFFA9552B55557F7FA9A9FD1BFFA97F55%A9FD39FF7F557F7F2B55FD12FF7FA9FFA9557F557FA9FFFFFFA9A97F7F7F%A9FD19FF7FFFA955FD39FFA9557F7E7F2BA9FD12FF2BA9FFFF7FFD0BFF7F%7FA9FD16FFA97EFFA955A9FD05FFA9FD4AFF7FA9FFFF7F7F7FA9A9FFA9A9%FFFFA9FFFF7F7FFD17FFFD047F557F7FFFFFFF7F55A9FD48FF7F7FFFA955%A9A9A97F7F5555557F55FD047FFD17FFA9557FFFFFFFA9A955A97F7FA9A9%FD48FFA9557F7FFD06FF7FA97FA9FFA9A9FD19FF7FA9FD07FF555BFFA97F%FD09FFA954FD47FF7E7F7FFD1CFF7F7FFD09FFA9FFA97F7FFD08FF7F7F7F%FD65FF55FD0EFF7FA9FD07FF7F55A9FD64FF7F7FFD0BFF7F55FFA955FD07%FFA97FFD65FF7FA9FFFFFFA9FD07FFFD057FFD6EFF547FA9FF54557FFFA9%FD04FF7FA9FD72FFA97FA9A955FF7FFD05FF7FFD72FFA9A97F5555FFFF7F%A9FFFFFF7FA9FD72FF7F2BA9A9A9FFFF7FA9FFFFA97FFD73FFAF7F54A9FF%FFFF7F7F7F5455FD77FF55A9FFFF7F5555A9557FA9FD76FFFD057F557FA9%7F55FD11FFA9A9FD64FFA97FA9FFFD047FA9FD11FF7F2AFD67FFA955557F%FD13FFA9A9FD68FF7FFDFCFFFD85FF7F7FFD7EFF557FA9FD7CFFA97F55FD%7EFFA9FDFCFFFDFCFFFD8AFFA97FA9FD7EFF2BFD7EFF7F55FD7EFF7F55FD%7EFF557FFD7EFF557FFD7EFF2BA9FD7DFFA955A9FD7DFFA92AFD7EFF7F55%FD09FFA9FD74FF7F2BFD06FFA9FD047FFD73FF7F55FD05FF7E2B7FFFFFA9%55FD72FFA955FD04FFA955A9A97FA9FFA97FFD71FFA955FD04FF7FA9FFA9%7FF9A9A97F7FFD71FF2BA9FFFFFF7FFFA97F7F7FA9FF7F7F7FFD70FF557F%FFFFA97FFF7FA9FD06FF55A9FD6FFF547FFFFFFF7F7F7FFD05FFA9557FFD%70FF7F55FFFFFF7F7FFFA9A9A9FFA97F7FA9FFFFFF7F7FFD6BFF7F7FA9FF%FFA97F7F555555FFFF7FFF55FFFFFF7F55FD6BFFA97FA9FFFFFFA9FFA9A9%7E7FFF7FA97FA9FFFFFF2BA9FD6AFF7F7F7EFD08FF55FF7FFFA9A9FFFFFF%7F55FD61FFA97FFD07FF7FA97FFD08FFA9557FA9A97FFFFFFF7F5555FD60%FFA92BFD07FF7FA955FD09FFA92BFF7F7FFFFFA9557F5555FD5FFF7F55FD%07FFA9A97FA9FD08FFA97FFF7F2AA9FF7F7EA97F55A9FD5EFFA954A9FD06%FF7EA97FFD0AFF7FFF7FFF55FF7FA97F7F55FD15FFA9A9FD48FF7FA97FFD%06FFFD04A9FD08FF7FA9FF7FFFA97FFF5555557FFD14FF7F5555FD48FF7F%A97FA9FD05FF7FFF7FA9FD08FFA9A9A97FFFFF7F7FFF55A97FFD13FFA97F%7FA9FD48FF7FFF7FA9FD05FF7FFFA9A9FD08FF7FA97F55A9FFFF7F7FA97F%7FA9FD12FF7FA97FA9FD48FFA9A9A97FFD05FF55FF7EA9FD08FF7FA9A955%7FFFFFFF7F55A97FFD04FFA9A9FD0DFF7FA97FFD49FFA9A97FFD05FFA97F%FFA9A95B7F7FA9A9FFFFFF7FFF7FA95BA9FFFFA92BA97FA9FFFFFF55FFFF%A9A9FD09FF7FA97FA9FD40FFA9FD08FFA97F7FA9FD04FFA97FFF55FFFFA9%A97F7F7FA9FF7FFFA9A9FF55FFFFFF7F7F7FFFFFFF55FFFFFF55FD0AFFA9%7F7FFD41FFA92B7F7FA9FD04FF7FA97FFD05FF55FFFF7FFD06FFA92BA954%FFA97FFF7F7FFFFFFF557FFFA955A9FFFF7FA9FD0AFF7F7F7EFD0BFFA9FD%0AFFA97EFD2AFF7F54A97F7F7EFFFFA97E7FA9FFFFFF7F7FFFA97FFD05FF%A955FFFFFF7FA97FFFFF7FA9FFFFFF7F7F7FFFFFFFA97FFD0BFFA97FA9FD%0AFFA97F7FA95BA9FD06FF557FFD24FFA9FD06FFA97FFFFFA97FA97FA97F%FD04FF7FFFFF55FFFFA9FFFFFF7F7F7FA9A9A97FFFFFFF7F7FFD08FFA95B%A9FD05FF7FA9FD04FF7F7F7FFD07FFA97F7F55FFA955FF7F7F7FA9FFFFFF%7F55FFFFFFFD05A9FD19FFA97F557FFD07FFA9557FA9FF7F557FA9FFFFFF%7F7FFF7F7FFFFF7FFFFF7FFFFFA97F7F7F85FD047F85FD08FF7FA9FD06FF%7F55FD04FFA955A9FD06FFA9557FA955A97FFFFF7F7FFF55FFFFFF7F7FA9%FF557F7FA97F7F5BA9A9FD09FFA9FD08FFFD04A97F7FFD0BFFA97F7F7F55%7F55FFFFFF55FFFF7FFFFFFF55A97F5555A9FD04FFA9FFA9FD09FFA9557F%FD07FF7F7F7EFFFFFF7F55A9FD05FF7E55557F7EFF7F7FA97F7FFFA97FFF%FFFF7F7F7FA9FD07FF7F7F7FA97E7F557F7F7F557F54FD05FFA9557EA97F%557FFD0FFFA97F7F557FFF7FA9FF7F7FFD04FF557FFFFF7F7F7FFD0EFF7F%A9FD08FFA9A97FFFFFFFA955A9FD04FFA955FFFFFFA97FA97FA97FFFA97F%A9FFFFFFA97F7FA9FD09FF7F55FFFFFFA97FA9FD08FF7FA9FFFFFF7FFD10%FFA97F7F7FA9FF7FFFFF5BFD06FFA9FFFFFFA9A97F7F55FD057F557FFD04%FF7FA9FD08FFA97F7FA9FFFF7F7F7FFD05FF7F7FA9FFFFFF7FFFA9A97F7F%A9FD05FF7FA955FD08FFA97FFD05FFA9A97F7F7FAFA97F7F7F55FD05FFA9%FD0FFF7FA9557F7FA97FFF7F7FFD0FFFA9FFA9FFA9FF55A9FFFFFFA97FFD%09FF7FA97FFFFFFF7F7FFD06FFFD057FA97F7F7FA9FD07FF7FA97FA9FD07%FFA9FD04FFA97F7F7FA9A9A97F7FA9A9A97F7FFD14FF7FA9557FA97FA9FF%7FA9FD16FF5B7FFFFF7FA9FD08FFA97FA97FA9FFA97F7EFD09FFA9FFA9FD%0BFF7EFF7FFD0CFF7F54FD07FFA9FD04FFA9FD14FF7FFF54A9A97FA9FF7F%FD04FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Layer 5) Ln0 Au*u1 D0 O0.841245 0.759243 0 0 0.176471 0.121569 1 Xa0 J 0 j 1 w 10 M []0 d0 XR729.2324 -1824.4473 m727.5596 -1830.5781 724.4556 -1835.8262 720.9189 -1841.0566 c716.7827 -1847.1758 713.1211 -1853.3896 709.4502 -1859.8027 c701.7285 -1873.2949 692.9702 -1886.4043 682.4678 -1897.8984 c677.6045 -1903.2197 671.4331 -1906.6982 665.3091 -1910.4053 c658.7061 -1914.4023 652.1455 -1918.3594 645.2163 -1921.7783 c631.917 -1928.3418 617.311 -1932.377 602.9365 -1935.8418 c599.5371 -1936.6611 596.1943 -1936.7773 592.7988 -1935.9395 c589.3716 -1935.0938 586.5391 -1931.8613 583.7827 -1929.7939 c578.9517 -1926.1699 573.6841 -1923.6699 568.8013 -1920.335 C578.3213 -1918.1348 579.4458 -1906.8926 581.7241 -1898.6299 c585.8027 -1883.8379 587.4512 -1868.3633 586.8799 -1853.0703 c586.3232 -1838.1816 586.5264 -1823.2764 586.5264 -1808.3789 c586.5264 -1793.3047 587.1138 -1778.2354 584.9727 -1763.2773 c582.7334 -1747.6338 578.751 -1732.5283 574.5962 -1717.3105 c574.4346 -1716.7188 574.252 -1716.1377 574.0835 -1715.5488 C577.0391 -1711.3584 579.519 -1706.9268 581.167 -1701.9658 c583.5796 -1694.7051 584.6558 -1686.9707 585.1255 -1679.3584 c586.1504 -1662.7363 583.1421 -1644.8594 572.5742 -1631.5908 c567.7207 -1625.498 560.3735 -1621.3672 553.2192 -1618.4014 C553.6772 -1614.3447 550.3887 -1609.6426 545.1641 -1610.9092 c542.582 -1611.5352 539.9849 -1612.0928 537.3872 -1612.6465 C535.1504 -1607.998 532.7788 -1603.418 530.1465 -1598.9775 c527.3096 -1594.1904 524.709 -1589.748 522.7651 -1584.501 c520.9331 -1579.5557 518.9238 -1574.7754 516.5684 -1570.0547 c511.4131 -1559.7266 507.001 -1549.0664 501.2109 -1539.0723 c495.5625 -1529.3242 489.7949 -1519.6465 484.3496 -1509.7813 c481.8057 -1505.1719 479.521 -1500.4033 476.8638 -1495.8711 c473.8247 -1490.6855 469.8477 -1486.0029 466.106 -1481.3203 c461.9775 -1476.1553 453.3384 -1481.7158 455.2422 -1487.6445 c459.7856 -1501.7969 463.1382 -1516.416 468.4448 -1530.3037 c470.9282 -1536.8027 471.2251 -1543.1777 472.4346 -1549.9277 c473.8384 -1557.7617 476.0942 -1565.4326 478.0674 -1573.1348 c481.9619 -1588.3398 483.374 -1604.1045 486.1733 -1619.543 c486.9214 -1623.668 487.3188 -1627.7373 487.8774 -1631.791 C481.5386 -1635.6211 475.54 -1639.9932 469.9849 -1645.0088 c459.6143 -1654.3721 453.4507 -1665.2402 451.8906 -1679.1699 c450.3799 -1692.666 454.6035 -1705.4424 460.9341 -1717.1162 c467.5254 -1729.2715 479.5693 -1737.8887 492.0381 -1743.3418 c498.377 -1746.1143 505.208 -1747.9414 512.0303 -1749.041 c513.7295 -1749.3154 515.3706 -1749.4668 516.978 -1749.5234 C517.1523 -1750.165 517.3135 -1750.8076 517.4941 -1751.4473 c519.4033 -1758.207 520.272 -1765.2568 521.918 -1772.0938 c523.7256 -1779.6016 524.8667 -1786.9814 525.2417 -1794.7012 c525.9565 -1809.4258 525.9116 -1824.8984 524.3042 -1839.5557 c523.9028 -1843.2129 523.0127 -1846.7734 522.3115 -1850.3506 C521.8291 -1849.4629 521.3389 -1848.5801 520.8389 -1847.7021 c517.1992 -1841.3105 512.6821 -1835.4111 508.8599 -1829.1162 c504.9023 -1822.5986 501.4521 -1816.0137 496.5845 -1810.1094 c491.4155 -1803.8389 487.3613 -1796.8203 481.4917 -1791.1211 c475.0947 -1784.9111 468.9087 -1778.6182 462.1758 -1772.7695 c448.3813 -1760.7871 438.584 -1744.9102 424.0107 -1733.9053 c421.5713 -1732.0625 420.2939 -1728.5596 418.6963 -1726.042 c416.0952 -1721.9424 412.833 -1718.2168 410.1953 -1714.1074 c407.5947 -1710.0557 405.4961 -1705.8027 403.335 -1701.5176 c401.3921 -1697.666 398.5225 -1694.2588 396.0122 -1690.7754 c390.3975 -1682.9814 385.7656 -1674.6338 379.8281 -1666.998 c373.7212 -1659.1455 366.8301 -1651.9639 360.333 -1644.4414 c360.063 -1644.1289 359.7822 -1643.8643 359.4966 -1643.625 C360.6621 -1637.0801 361.751 -1630.5195 362.7329 -1623.9326 c364.1045 -1614.7324 364.4106 -1604.8047 363.3008 -1595.5508 c362.7798 -1591.207 361.6479 -1586.9932 361.1143 -1582.6426 c360.5161 -1577.7637 359.875 -1572.9355 358.1816 -1568.2979 c356.4712 -1563.6113 356.1035 -1557.9063 355.123 -1553.0059 c354.1313 -1548.0469 352.6841 -1543.2588 351.1289 -1538.4492 c348.1606 -1529.2695 344.5815 -1520.2939 341.0054 -1511.3389 c338.1055 -1504.0771 335.5332 -1496.0742 330.707 -1489.8584 c327.9795 -1486.3467 323.3687 -1484.21 319.9102 -1481.4941 c317.2739 -1479.4248 314.8306 -1477.1436 312.5415 -1474.7109 C322.8955 -1469.46 334.2661 -1466.4727 343.772 -1459.3809 c348.542 -1455.8223 352.8208 -1451.041 351.8096 -1444.6846 c351.3975 -1442.0918 350.0215 -1439.6094 348.3442 -1437.6152 c349.5923 -1439.0996 347.5654 -1434.498 347.623 -1434.6709 c346.8945 -1432.4863 346.1665 -1430.3018 345.4385 -1428.1172 c344.2051 -1424.418 343.5171 -1420.4316 342.5708 -1416.6475 c341.6421 -1412.9336 340.2446 -1409.9014 338.5054 -1406.5049 c336.0923 -1401.791 336.0737 -1396.0361 334.4248 -1390.9824 c332.8066 -1386.0215 329.0576 -1382.6182 323.8062 -1382.2119 c321.4473 -1382.0293 318.7598 -1383.168 316.5103 -1383.7637 c313.2256 -1384.6328 309.8516 -1384.5771 306.5391 -1385.6934 c300.3022 -1387.7959 293.8433 -1390.6064 287.9121 -1393.4492 c282.3369 -1396.1221 277.3901 -1401.6621 271.5039 -1403.4785 c270.4971 -1403.7891 269.3623 -1404.082 268.2334 -1404.2051 C268.2373 -1404.1934 268.2393 -1404.1865 268.2432 -1404.1748 c268.5781 -1403.168 269.125 -1402.2129 269.5947 -1401.2656 c272.8364 -1394.7344 273.5381 -1385.8809 274.1299 -1378.7002 c274.7021 -1371.7617 274.3906 -1364.5674 273.7681 -1357.6436 c273.0894 -1350.0928 272.6387 -1342.1953 271.2998 -1334.7402 c267.9434 -1316.0527 249.1904 -1303.29 234.376 -1294.0078 c224.5381 -1287.8447 213.9351 -1284.0225 203.5444 -1278.9541 c193.3892 -1274 182.1362 -1274.2109 171.0981 -1274.251 c160.7373 -1274.2881 151.2314 -1276.3691 141.4126 -1279.5713 c131.2231 -1282.8945 120.7334 -1287.0605 111.6206 -1292.7373 c107.019 -1295.6045 102.8389 -1299.2373 98.3101 -1302.2568 c94.1211 -1305.0498 90.2544 -1308.2305 86.3364 -1311.3896 c79.0415 -1317.2725 72.7031 -1323.7656 69.1074 -1332.5391 c68.3184 -1334.4639 68.9517 -1336.5811 70.2319 -1338.1797 C66.6865 -1340.585 63.355 -1343.2217 60.3203 -1345.9258 c49.3369 -1355.7119 44.4722 -1368.8223 41.0356 -1382.7871 c37.3062 -1397.9434 37.0161 -1413.0684 37.0161 -1428.5703 c37.0161 -1435.9004 36.5625 -1443.3984 37.1924 -1450.7031 c37.4736 -1453.9609 38.2354 -1457.126 39.2661 -1460.2188 c40.4072 -1463.6426 42.834 -1466.4814 44.0737 -1469.7129 c45.4326 -1473.2549 47.7402 -1476.3359 49.3374 -1479.7441 C48.4072 -1480.6045 47.5566 -1481.5566 46.8237 -1482.6367 c43.0059 -1488.2607 44.7598 -1494.748 46.6973 -1500.7529 c48.771 -1507.1797 50.3867 -1513.6191 53.7793 -1519.5264 c57.2207 -1525.5186 62.6973 -1529.542 68.8359 -1532.4316 c74.9092 -1535.291 80.8848 -1537.4658 87.6777 -1537.3291 c94.7808 -1537.1855 101.5493 -1534.5039 108.2251 -1532.3926 c109.105 -1532.1143 109.9917 -1531.8574 110.8833 -1531.6201 C111.7451 -1532.75 112.9927 -1533.6426 114.4272 -1534.2393 c122.104 -1537.4316 129.0796 -1541.9131 137.147 -1544.1152 c140.7715 -1545.1055 144.5718 -1546.1436 148.0107 -1547.6719 c152.1729 -1549.5225 155.9487 -1551.832 160.4937 -1552.6172 c172.0571 -1554.6143 192.1841 -1556.334 197.4248 -1542.9043 C200.4785 -1548.0078 202.4609 -1553.8633 205.2598 -1559.0713 c208.3911 -1564.8955 211.312 -1570.8525 214.5405 -1576.624 c216.1387 -1579.4805 218.0176 -1582.1924 220.0688 -1584.7422 c222.6211 -1587.9141 224.2192 -1592.3047 226.0342 -1595.9268 c228.812 -1601.4717 231.8955 -1606.5029 235.834 -1611.2949 c240.1011 -1616.4883 243.4731 -1621.832 247.1709 -1627.4189 c251.0122 -1633.2217 254.8809 -1639.0859 258.8716 -1644.7832 c262.4805 -1649.9355 267.2378 -1654.1475 269.8389 -1659.9639 c271.0703 -1662.7168 273.3115 -1663.6123 275.5166 -1663.2852 C274.7505 -1666.0439 273.9688 -1668.79 273.1885 -1671.5215 c271.0039 -1679.168 268.8198 -1686.8145 266.6348 -1694.4609 c264.394 -1702.3037 264.1729 -1711.0391 263.5708 -1719.127 c262.3945 -1734.9355 260.6055 -1750.71 259.3193 -1766.5176 c258.7192 -1773.8906 257.6812 -1781.1387 256.4873 -1788.4336 c255.1914 -1796.3535 255.1079 -1804.1719 254.6812 -1812.1563 c253.8315 -1828.0469 254.2349 -1844.1172 252.6089 -1859.9453 c251.7681 -1868.1338 251.8628 -1876.5596 251.4409 -1884.7959 c251.0029 -1893.3467 250.7964 -1902.0117 251.5859 -1910.5469 c251.8994 -1913.9355 252.5112 -1917.2813 253.3833 -1920.5674 c254.3208 -1924.0996 254.9712 -1928.248 256.7202 -1931.4863 c259.4766 -1936.5908 262.7974 -1942.75 268.3477 -1945.2061 c268.416 -1945.2363 268.4839 -1945.2568 268.5522 -1945.2852 C266.0225 -1947.5488 265.0674 -1951.4424 268.3066 -1954.3848 c273.0542 -1958.6982 278.3755 -1960.624 284.6206 -1961.6709 c291.7388 -1962.8652 297.9653 -1966.749 305.2207 -1967.5205 c311.1763 -1968.1543 317.728 -1967.9453 323.4795 -1966.1719 c329.75 -1964.2373 335.4014 -1958.9063 339.9434 -1954.3848 c344.2847 -1950.0645 343.4854 -1940.9102 342.5137 -1935.4658 c341.2197 -1928.2168 338.0903 -1921.5176 336.6445 -1914.29 c333.5654 -1898.8926 332.0078 -1883.874 331.043 -1868.2129 c330.583 -1860.7471 329.3335 -1853.3926 328.9419 -1845.9277 c328.5078 -1837.6572 328.9443 -1829.3506 329.0757 -1821.0771 c329.2544 -1809.8301 330.2178 -1798.8047 331.8936 -1787.7939 C349.1055 -1821.3613 368.3916 -1853.707 390.9971 -1883.9502 c396.6606 -1891.5273 400.8765 -1900.0332 405.4404 -1908.2871 c410.501 -1917.4395 416.1807 -1926.2764 421.4893 -1935.2891 c431.8003 -1952.7939 441.0396 -1970.959 450.2227 -1989.1025 C450.0757 -1989.5586 449.9697 -1990.0469 449.9126 -1990.5684 c450.1143 -1988.7188 448.9941 -1989.9111 447.1611 -1990.3008 c445.3599 -1990.6846 443.4521 -1990.625 441.6216 -1990.9902 c435.3115 -1992.249 429.165 -1992.5762 422.7886 -1993.1475 c410.1235 -1994.2813 397.6577 -1996.9492 384.9619 -1997.8389 c360.3809 -1999.5596 335.5552 -1997.0537 311.0396 -1995.6328 c299.0981 -1994.9404 287.2241 -1992.3643 275.2925 -1991.2373 c269.1919 -1990.6602 263.0957 -1990.5039 256.9731 -1990.4111 c249.8433 -1990.3037 242.7764 -1988.8086 235.7627 -1987.6758 c229.4004 -1986.6475 222.9946 -1985.8311 216.647 -1984.7236 c213.5664 -1984.1865 210.8755 -1982.5518 208.0957 -1981.2031 c204.8525 -1979.6289 201.4312 -1978.585 197.9722 -1977.6104 c192.2061 -1975.9863 185.8584 -1975.1934 180.3374 -1972.8242 c175.0728 -1970.5645 170.5977 -1966.835 165.3135 -1964.5664 c162.8726 -1963.5186 160.5361 -1963.9609 158.7363 -1965.1484 C158.4141 -1964.9365 158.0645 -1964.7383 157.667 -1964.5664 c153.4731 -1962.7461 145.9404 -1958.7158 145.4624 -1953.4346 c144.9272 -1947.5195 152.6016 -1946.6074 156.6035 -1945.2734 c163.2817 -1943.0469 169.9531 -1940.7969 176.5044 -1938.2148 c183.5366 -1935.4434 190.7534 -1933.5615 197.2261 -1929.5 c202.5435 -1926.1631 208.6108 -1922.2324 212.9331 -1917.6367 c217.7275 -1912.5381 216.5317 -1904.9131 211.4678 -1900.6367 c201.5029 -1892.2207 186.9902 -1891.7402 175.4609 -1886.499 c169.4346 -1883.7598 163.2578 -1881.3945 156.8979 -1879.542 c149.79 -1877.4717 142.1987 -1876.7305 135.2905 -1874.0391 c129.1206 -1871.6357 122.5698 -1869.1514 116.1353 -1867.6631 c109.2671 -1866.0752 102.2363 -1863.0049 95.1279 -1863.002 c87.4531 -1862.999 79.9673 -1862.8076 72.481 -1861.0801 c65.0664 -1859.3691 57.3677 -1859.4092 49.9077 -1857.7607 c43.4004 -1856.3232 37.2236 -1852.8105 30.4526 -1852.8076 c22.9888 -1852.8047 15.8682 -1851.9873 8.49316 -1850.9795 c5.54443 -1850.5762 2.58838 -1850.3232 -0.372559 -1850.1641 C-0.372559 -1863.5918 L4.24268 -1863.833 8.86914 -1864.2061 13.542 -1864.8271 c20.085 -1865.6963 27.3467 -1864.7422 33.6831 -1866.3828 c40.8345 -1868.2344 47.5938 -1871.0859 54.9663 -1872.1006 c58.4771 -1872.583 62.0088 -1872.8008 65.5366 -1873.1123 c69.0981 -1873.4268 72.4702 -1874.5693 76.0122 -1875.0215 c83.8667 -1876.0244 92.2476 -1874.9385 99.895 -1876.8252 c106.2813 -1878.4004 112.9116 -1879.8672 119.0659 -1882.1475 c125.9209 -1884.6875 132.9038 -1887.2109 140.0181 -1888.8779 c146.7515 -1890.4551 153.4941 -1891.8135 159.9917 -1894.2383 c166.4536 -1896.6484 172.688 -1900.0635 179.2378 -1902.1572 c185.2012 -1904.0635 192.2969 -1904.6182 197.9185 -1907.4453 c199.0801 -1908.0293 200.2085 -1908.6641 201.332 -1909.3174 C201.625 -1909.5039 201.918 -1909.6914 202.2109 -1909.8779 C199.3643 -1912.0752 196.5142 -1914.2939 193.52 -1916.3223 c181.6318 -1924.376 166.686 -1928.2148 153.1479 -1932.7383 c147.563 -1934.6035 142.751 -1935.8115 138.1611 -1939.7764 c133.7168 -1943.6162 131.312 -1950.9033 132.8262 -1956.6133 c135.167 -1965.4434 142.9561 -1972.2539 151.1055 -1975.791 c153.5503 -1976.8525 155.8911 -1976.4121 157.6914 -1975.2207 C158.0117 -1975.4277 158.3584 -1975.6221 158.752 -1975.791 c164.0371 -1978.0605 168.6157 -1981.543 173.7759 -1984.0488 c180.2129 -1987.1758 187.6465 -1988.3057 194.5166 -1990.1465 c201.0083 -1991.8857 206.6733 -1995.8164 213.1909 -1997.2598 c220.6958 -1998.9209 228.5391 -1999.5801 236.1299 -2000.8359 c250.3501 -2003.1904 264.4824 -2003.1328 278.7749 -2004.5771 c285.168 -2005.2236 291.4878 -2006.2822 297.8604 -2007.0703 c304.6523 -2007.9092 311.3174 -2008.5605 318.1431 -2009.1758 c331.5537 -2010.3818 345.2939 -2011.0869 358.7603 -2011.0869 c372.4648 -2011.0869 385.9565 -2011.1367 399.5688 -2009.2842 c406.1357 -2008.3906 412.6772 -2007.3145 419.2578 -2006.5225 c426.2676 -2005.6777 433.2622 -2005.6035 440.252 -2004.4355 c448.8579 -2002.998 459.4971 -2002.5713 462.3149 -1993.498 C463.3315 -1992.4033 464 -1990.9727 464 -1989.2939 c464 -1988.8691 464 -1988 Y464 -1985.9717 463.1626 -1984.46 461.915 -1983.46 C452.8726 -1965.5771 443.8252 -1947.5635 433.6235 -1930.3467 c428.5854 -1921.8438 423.4082 -1913.4268 418.4321 -1904.8906 c413.395 -1896.25 409.1284 -1887.1875 403.3926 -1878.9668 c397.604 -1870.6699 391.3252 -1862.7246 385.5781 -1854.3906 c379.6494 -1845.792 374.3672 -1836.8486 369.0127 -1827.8916 c358.5977 -1810.4688 348.7964 -1792.6113 339.6841 -1774.4678 c338.5688 -1772.248 336.7993 -1771.2705 334.9595 -1771.1797 C337.9761 -1757.1475 341.8408 -1743.293 344.2231 -1729.1387 c346.8618 -1713.458 348.2954 -1697.7539 351.7354 -1682.2158 c353.394 -1674.7246 354.9775 -1667.2285 356.4678 -1659.7168 C364.9951 -1669.377 373.5659 -1678.9648 380.3115 -1690.0391 c383.7852 -1695.7402 387.8115 -1701.0293 391.3281 -1706.6992 c395.4507 -1713.3457 398.5889 -1720.4004 403.1318 -1726.8584 c406.6914 -1731.9189 409.9009 -1737.5498 413.9204 -1742.2402 c418.2715 -1747.3164 424.4233 -1750.7402 428.7056 -1755.8496 c433.3228 -1761.3584 437.7622 -1766.998 442.6846 -1772.2441 c447.9087 -1777.8115 453.8896 -1782.6318 459.585 -1787.6973 c464.3848 -1791.9658 468.8413 -1796.9561 473.4805 -1801.4609 c478.4995 -1806.334 481.8965 -1812.6475 486.3311 -1818.0273 c490.8237 -1823.4766 494.0122 -1829.6318 497.6348 -1835.6768 c501.7256 -1842.5039 506.5405 -1848.8672 510.4761 -1855.7793 c513.563 -1861.2012 516.1313 -1866.9082 518.8623 -1872.5166 C519.085 -1873.5967 519.5674 -1874.4854 520.2266 -1875.1787 C523.4248 -1881.0645 528.3916 -1886.3291 531.7021 -1892.123 c534.8247 -1897.5869 537.9897 -1902.8223 540.6514 -1908.5898 c543.5811 -1914.9395 548.9453 -1920.3281 553.9878 -1925.0283 c557.2222 -1928.043 560.6104 -1931.1416 564.3662 -1933.4844 c569.1914 -1936.4932 574.1655 -1938.5947 578.6626 -1942.1875 c587.7783 -1949.4697 596.8545 -1950.6758 608.0913 -1947.9678 c628.9395 -1942.9434 648.9102 -1935.7305 667.2314 -1924.46 c675.7813 -1919.2012 684.7412 -1914.4727 691.6602 -1907.0898 c699.2646 -1898.9756 705.7861 -1889.8164 711.9668 -1880.5947 c718.0376 -1871.5352 722.582 -1861.4873 728.7407 -1852.5254 c734.0898 -1844.7402 739.249 -1837.1348 741.7676 -1827.9023 c743.978 -1819.8018 731.436 -1816.3691 729.2324 -1824.4473 cf0 D50.0161 -1447.6855 m49.6055 -1433.9639 49.0522 -1419.4678 50.3477 -1405.8076 c51.5664 -1392.96 53.9551 -1378.376 60.0098 -1366.8232 c65.2139 -1356.8926 75.0513 -1349.8154 84.8027 -1344.8213 c96.689 -1338.7344 108.8628 -1339.417 121.8076 -1339.5049 c134.9463 -1339.5928 147.9995 -1342.1895 160.0264 -1347.5254 c163.6279 -1349.123 167.5127 -1351.5244 170.9517 -1354.5068 C168.3389 -1358.2861 170.0381 -1364.9756 176.0508 -1364.9795 c176.9746 -1364.9805 178.0313 -1364.9473 179.1602 -1364.9121 C180.3125 -1367.3867 181.0034 -1370.0049 181.0405 -1372.7148 c181.0757 -1375.3057 181.2705 -1377.8945 181.333 -1380.4854 c181.4077 -1383.5635 180.5449 -1385.7324 179.978 -1388.6113 c179.752 -1389.7578 179.4307 -1390.7949 179.0625 -1391.7871 C176.752 -1389.6885 174.7129 -1387.9561 171.8892 -1386.4902 c166.2744 -1383.5752 160.124 -1381.4814 153.8267 -1380.8857 c140.7871 -1379.6523 130.1763 -1390.0723 121.7539 -1398.4863 c117.2524 -1402.9844 113.5464 -1408.3184 110.6602 -1413.9717 c107.2666 -1420.6172 105.9131 -1428.0313 103.999 -1435.1748 c102.4116 -1441.1016 100.2617 -1448.2559 99.3789 -1453.5088 c98.8774 -1456.4932 98.1479 -1459.8779 98.376 -1463.0586 C93.3198 -1463.6855 88.8271 -1465.5283 83.8423 -1466.9063 c76.377 -1468.9688 68.729 -1470.3691 61.4785 -1473.1494 c61.1841 -1473.2627 60.8887 -1473.377 60.5928 -1473.4922 C56.3926 -1465.0879 50.3057 -1457.3574 50.0161 -1447.6855 cf185.0757 -1538.9873 m184.355 -1541.0166 176.4819 -1540.5879 174.5874 -1540.5811 c167.9116 -1540.5566 162.2495 -1540.2549 156.2109 -1537.2422 c150.1392 -1534.2129 143.5493 -1532.3115 136.9985 -1530.625 c134.9233 -1530.0898 132.8262 -1528.9844 130.8008 -1527.8643 C138.209 -1526.4102 145.2764 -1523.8037 152.4507 -1521.4951 c158.7949 -1519.4541 164.9829 -1517.8633 171.5181 -1516.6504 c173.6567 -1516.2539 175.46 -1518.2295 176.9292 -1519.457 c179.3398 -1521.4707 179.665 -1522.1689 182.647 -1524.9473 c185.7964 -1527.8818 188.4932 -1531.1855 191.1597 -1534.543 C188.6392 -1534.6328 186.1411 -1535.9854 185.0757 -1538.9873 cf270.0967 -1638.2217 m265.5879 -1632.2471 261.5596 -1625.6367 257.4229 -1619.3867 c253.7305 -1613.8086 250.3779 -1608.4277 246.0273 -1603.2939 c241.2485 -1597.6533 238.1763 -1591.1406 234.8564 -1584.5859 c231.7734 -1578.5 227.4717 -1573.2959 224.2441 -1567.2871 c220.7974 -1560.8701 217.2734 -1554.3857 214.1045 -1547.832 c211.0186 -1541.4502 208.5972 -1535.2813 203.9497 -1529.8594 c199.5459 -1524.7207 195.814 -1519.458 190.8438 -1514.8271 c186.873 -1511.1279 183.1924 -1506.8027 177.9585 -1504.7568 c172.4585 -1502.6074 165.2104 -1504.0889 159.6865 -1505.6826 c152.7378 -1507.6885 145.8662 -1509.9541 139.0049 -1512.2363 c131.3667 -1514.7773 123.5405 -1516.001 115.6348 -1517.3779 c108.7534 -1518.5771 102.313 -1520.7988 95.647 -1522.7822 c88.1646 -1525.0078 82.4556 -1524.3271 75.397 -1521.207 c69.3271 -1518.5234 65.2817 -1514.7656 62.7764 -1508.5283 c61.5278 -1505.4209 60.6855 -1502.1377 59.7334 -1498.9316 c58.9341 -1496.2393 56.9604 -1492.5635 57.5298 -1489.6797 c57.8521 -1488.0479 63.5752 -1486.332 64.9097 -1485.7002 c69.1001 -1483.7168 73.9468 -1482.7969 78.4248 -1481.707 c82.2939 -1480.7656 86.1816 -1479.8604 89.9756 -1478.6426 c93.6362 -1477.4678 96.9624 -1475.9912 100.8628 -1475.8506 c103.9922 -1475.7383 105.9531 -1473.8447 106.7432 -1471.5371 C111.1074 -1470.9932 114.8667 -1466.6777 111.5728 -1462.2471 c110.625 -1460.9717 111.9497 -1456.9395 112.186 -1455.1855 c112.9199 -1449.7344 115.1445 -1444.0176 116.5347 -1438.6309 c119.4077 -1427.498 121.9756 -1417.4512 129.9409 -1408.7168 c136.1299 -1401.9297 143.9727 -1393.6514 153.8267 -1393.8857 c158.5088 -1393.998 163.8643 -1396.8203 167.8438 -1399.0801 c168.0815 -1399.2148 168.3081 -1399.3789 168.5361 -1399.54 C165.0518 -1402.1738 163.9473 -1407.7373 168.9468 -1409.9697 c169.6665 -1410.291 170.4082 -1410.5859 171.1587 -1410.8691 C172.9312 -1412.9854 175.8857 -1414.1348 178.6147 -1412.9199 C185.7559 -1414.2061 193.3813 -1413.7402 199.8154 -1410.8672 c208.2471 -1407.1016 214.7813 -1398.6504 217.3525 -1389.9004 c220.5625 -1378.9766 213.6567 -1368.0986 206.5117 -1360.541 c200.8574 -1354.5596 193.729 -1352.7637 186.1509 -1352.2207 C184.0596 -1349.3564 181.6895 -1346.6973 179.0728 -1344.3242 c168.5664 -1334.793 153.2397 -1330.2754 139.5269 -1328.0293 c125.4902 -1325.7305 110.0239 -1325.3506 95.9424 -1327.3838 c92.3198 -1327.9072 88.7271 -1328.9072 85.2139 -1330.2441 C87.3022 -1327.7148 89.8027 -1325.4707 92.1909 -1323.3711 c97.2246 -1318.9463 102.5806 -1315.0088 108.1484 -1311.2969 c114.0161 -1307.3848 119.2295 -1303.084 125.5542 -1299.8652 c132.2197 -1296.4746 139.4634 -1293.8691 146.5645 -1291.5537 c160.0737 -1287.1484 174.688 -1285.7949 188.8301 -1287.8369 c195.9922 -1288.8711 202.519 -1292.7979 209.123 -1295.5645 c216.2124 -1298.5332 222.6265 -1301.9824 229.1274 -1306.0557 c239.5527 -1312.5879 249.9224 -1319.8906 255.9912 -1330.8838 c259.4253 -1337.1045 258.9907 -1343.5508 259.7422 -1350.3711 c260.6099 -1358.2441 261.3027 -1365.8271 261.3057 -1373.7725 c261.3086 -1380.8018 260.0215 -1387.5889 258.2412 -1394.3652 c256.709 -1400.1973 252.687 -1405.2793 255.8208 -1411.4609 c261.6479 -1422.9551 277.8647 -1415.2559 285.2461 -1410.3477 c292.1494 -1405.7559 299.2441 -1402.9111 306.7686 -1399.5391 c310.1865 -1398.0068 313.457 -1397.0928 317.1665 -1396.7529 c318.9395 -1396.5908 320.6055 -1396.1406 322.3086 -1395.6563 c322.3477 -1395.6455 322.375 -1395.6367 322.4121 -1395.627 C322.9731 -1397.2539 323.1147 -1399.2959 323.4658 -1400.7656 c324.3672 -1404.5352 325.0171 -1407.96 326.5601 -1411.5684 c328.3511 -1415.7559 329.8755 -1419.4648 330.9912 -1423.9258 c332.1938 -1428.7373 333.519 -1433.4229 335.0874 -1438.127 c335.6333 -1439.7656 336.1797 -1441.4043 336.7256 -1443.042 c337.2681 -1444.6689 338.5698 -1445.6758 339.1313 -1447.2432 c338.5435 -1445.6025 337.2319 -1448.1396 335.9438 -1449.1016 c334.2368 -1450.374 332.3911 -1451.457 330.5527 -1452.5254 c323.7041 -1456.502 316.1968 -1459.0713 308.9668 -1462.2139 c301.4121 -1465.4971 293.8584 -1469.2285 286.5703 -1473.085 c279.1255 -1477.0244 271.9756 -1481.4512 264.5249 -1485.4023 c260.3027 -1487.6416 260.624 -1492.2461 263.0483 -1495.0693 C263.0767 -1497.0244 263.8853 -1499.0029 265.7988 -1500.4502 c270.3789 -1503.9141 270.4673 -1513.1787 271.4775 -1518.2305 c272.9663 -1525.6758 274.8857 -1533.001 277.3721 -1540.1875 c279.4521 -1546.1992 279.3687 -1552.373 280.4712 -1558.624 c281.7729 -1566.0059 282.8691 -1572.8516 283.0474 -1580.3613 c283.4082 -1595.6025 284.9854 -1610.6484 283.3682 -1625.8789 c282.519 -1633.877 280.9561 -1641.8428 279.0581 -1649.7334 C276.4565 -1645.6348 273.0347 -1642.1143 270.0967 -1638.2217 cf193.2104 -1366.3604 m193.979 -1366.7109 194.6787 -1367.1318 195.27 -1367.6533 c200.2559 -1372.0508 205.0249 -1378.1396 205.0293 -1385.0488 c205.0327 -1390.2559 199.6343 -1396.0713 195.4414 -1398.585 c193.7813 -1399.5801 191.7212 -1400.2002 189.5103 -1400.5107 C189.9897 -1399.6387 190.4424 -1398.7461 190.8267 -1397.8037 c193.2847 -1391.7734 194.4531 -1385.4443 194.2954 -1378.9238 c194.1914 -1374.6162 194.1382 -1370.4307 193.2104 -1366.3604 Cf350.561 -1615.0518 m350.3306 -1622.8857 348.6216 -1630.71 347.4668 -1638.459 c345.1948 -1653.7021 341.4619 -1669.041 338.002 -1684.0674 c334.4199 -1699.623 333.5732 -1715.7129 330.6768 -1731.418 c327.8389 -1746.8027 323.4521 -1761.8936 320.4868 -1777.2695 c317.5664 -1792.4141 316.29 -1807.5898 316.0454 -1822.9883 c315.9136 -1831.2793 315.6074 -1839.5518 316.042 -1847.8389 c316.4629 -1855.8594 317.7842 -1863.8057 318.2622 -1871.8359 c319.2705 -1888.7627 321.5498 -1904.9492 324.874 -1921.5693 c326.2861 -1928.6309 329.9331 -1934.7861 330.1216 -1942.1426 c330.2271 -1946.2588 329.0488 -1947.4033 325.6943 -1949.8105 c322.9531 -1951.7764 320.7134 -1953.5732 317.3711 -1954.3525 c310.6816 -1955.9131 303.666 -1954.3691 297.4526 -1951.9258 c293.7734 -1950.4785 290.5229 -1949.5459 286.6274 -1948.8926 c283.2402 -1948.3242 280.0928 -1947.5488 277.499 -1945.1934 c276.9438 -1944.6895 276.3638 -1944.3076 275.7729 -1944.0283 C278.8979 -1941.2715 279.6943 -1936.0986 274.9092 -1933.9814 c270.9399 -1932.2246 268.2217 -1925.9404 267.2964 -1921.9971 c265.5308 -1914.4717 264.1934 -1907.8115 264.1177 -1900.0137 c263.9639 -1884.1113 265.2212 -1868.1455 266.2451 -1852.2988 c266.7383 -1844.6631 266.6035 -1837.0068 266.6777 -1829.3613 c266.7583 -1821.0635 267.853 -1812.8115 267.9336 -1804.5098 c268.0054 -1797.1445 269.4395 -1790.0498 270.5137 -1782.7939 c271.6782 -1774.9287 272.3086 -1766.999 272.894 -1759.0742 c274.0684 -1743.1826 275.8018 -1727.3545 277.1792 -1711.4814 c278.5894 -1695.2266 284.584 -1679.6895 288.7183 -1663.9844 c292.6611 -1649.0068 295.9863 -1633.8828 297.0151 -1618.3945 c298.0034 -1603.5176 296.2891 -1588.4209 295.9316 -1573.5361 c295.7559 -1566.2188 293.4258 -1559.127 292.4614 -1551.915 c291.9702 -1548.2363 292.1504 -1544.5889 291.3125 -1540.9453 c290.4976 -1537.4014 288.9526 -1533.958 287.9316 -1530.46 c285.6792 -1522.7422 284.061 -1515.0137 282.4839 -1507.1279 c281.4287 -1501.8506 279.7803 -1497.2705 276.6763 -1493.4033 C280.4966 -1491.0732 284.2441 -1488.6221 288.1992 -1486.5322 c292.2051 -1484.416 296.501 -1482.751 300.6714 -1480.9063 C304.8281 -1485.8203 309.6211 -1489.9131 314.752 -1493.7988 c317.3853 -1495.7939 320.3608 -1497.2998 322.1968 -1500.1191 c323.9648 -1502.834 324.7358 -1506.1895 325.8882 -1509.1875 c331.2197 -1523.0537 337.1938 -1536.4727 341.3174 -1550.8164 c343.417 -1558.1201 343.5869 -1566.1113 346.1909 -1573.2451 c348.5903 -1579.8184 348.1689 -1587.0957 349.9033 -1593.8311 c351.6499 -1600.6133 350.7642 -1608.1348 350.561 -1615.0518 cf548.043 -1630.2412 m553.8706 -1632.333 559.3433 -1636.1162 563.3818 -1640.7832 c570.7017 -1649.2422 572.0322 -1662.4648 572.2427 -1673.1377 c572.3755 -1679.8984 571.6406 -1686.5576 570.1304 -1693.1426 c569.7314 -1694.8828 569.2134 -1696.5273 568.625 -1698.123 C568.5376 -1697.8398 568.4448 -1697.5605 568.3584 -1697.2764 c567.314 -1693.8438 566.5371 -1690.3428 565.9043 -1686.8145 c565.3267 -1683.5889 563.127 -1680.1309 561.9863 -1677.0332 c560.8691 -1674 560.1152 -1670.873 559.5322 -1667.6992 c558.9126 -1664.3252 556.8843 -1660.8281 555.5649 -1657.6758 c552.6802 -1650.7842 551.3442 -1643.5342 548.2505 -1636.71 c547.1187 -1634.2129 546.0078 -1631.7021 544.8975 -1629.1885 C545.9453 -1629.5283 546.9956 -1629.8652 548.043 -1630.2412 cf484.6431 -1544.6455 m484.0415 -1541.291 484.0688 -1537.8525 483.3584 -1534.4805 c483.3081 -1534.2422 483.2485 -1534.0068 483.1929 -1533.7695 C489.8306 -1545.21 495.7759 -1556.877 501.52 -1568.8438 c504.5654 -1575.1885 507.8008 -1581.3389 510.2295 -1587.957 c512.958 -1595.3906 516.7793 -1601.7148 520.6714 -1608.5508 c521.9487 -1610.7939 523.3193 -1613.1641 524.6318 -1615.5938 C517.6846 -1617.4824 510.9404 -1620.542 504.332 -1623.3652 c502.7842 -1624.0264 501.2515 -1624.7148 499.7339 -1625.4287 C499.1665 -1621.0361 498.7676 -1616.6045 498.0439 -1612.2637 c495.4702 -1596.8213 493.6323 -1581.3086 489.6895 -1566.1387 c487.8359 -1559.0078 485.9434 -1551.9033 484.6431 -1544.6455 cf481.4326 -1721.7764 m471.2236 -1713.6904 465.5713 -1699.6641 464.7358 -1686.9336 c463.7964 -1672.6172 470.0952 -1662.4014 480.3979 -1653.0996 c483.6528 -1650.1611 487.1641 -1647.4961 490.8486 -1645.0703 C492.7891 -1651.6875 494.627 -1658.3311 496.2271 -1665.041 c497.8896 -1672.0127 499.5571 -1678.6709 501.6855 -1685.5039 c502.688 -1688.7197 502.8789 -1692.2393 503.8276 -1695.5342 c504.9175 -1699.3213 506.2168 -1703.0078 507.1704 -1706.835 c509.625 -1716.6865 511.5381 -1726.5957 513.7568 -1736.4521 C502.0293 -1735.0527 490.2476 -1728.7578 481.4326 -1721.7764 cf518.7529 -1699.5586 m517.9844 -1696.4824 516.7642 -1693.4707 515.8853 -1690.418 c514.9473 -1687.1592 514.7656 -1683.7939 513.7549 -1680.5498 c511.4194 -1673.0547 509.7598 -1665.5859 507.8818 -1657.9482 c506.271 -1651.3955 504.376 -1644.9141 502.4517 -1638.4473 C506.647 -1636.3691 510.9497 -1634.5283 515.2739 -1632.9053 c520.1982 -1631.0576 524.8838 -1629.0938 529.9194 -1627.668 C532.0591 -1634.1338 535.8169 -1639.9287 538.2856 -1646.2549 c539.5493 -1649.4932 540.0454 -1652.959 541.1396 -1656.2607 c542.2422 -1659.5889 543.7368 -1662.7969 545.0757 -1666.0332 c547.7617 -1672.5264 548.9253 -1679.4707 551.6201 -1686.0156 c554.228 -1692.3496 555.2261 -1699.208 557.4253 -1705.7285 c558.2383 -1708.1387 558.9956 -1710.5527 559.7334 -1712.9707 C559.4116 -1713.3643 559.1001 -1713.7598 558.7681 -1714.1523 c550.9116 -1723.4512 539.1758 -1732.792 526.7256 -1735.7695 C523.8086 -1723.7725 521.7515 -1711.5586 518.7529 -1699.5586 cf567.2827 -1907.6064 m563.5591 -1908.0518 561.5088 -1910.9678 561.1475 -1913.9307 C557.5151 -1910.4033 554.2612 -1906.5635 551.876 -1902.0283 c548.752 -1896.0889 546.2847 -1889.4678 542.3105 -1884.0645 c538.7041 -1879.1602 535.4707 -1873.999 531.9375 -1869.0449 C532.3496 -1866.7354 533.2749 -1864.5371 534.0449 -1862.3105 c534.8726 -1859.9199 534.1846 -1857.0537 534.8477 -1854.5527 c536.7266 -1847.4717 537.4351 -1839.8428 537.9375 -1832.5146 c538.9517 -1817.7246 539.0498 -1802.2021 537.7495 -1787.4365 c537.1372 -1780.4795 535.6763 -1773.7158 534.0449 -1766.9404 c532.5259 -1760.6309 531.5381 -1754.249 529.9614 -1747.9697 C531.582 -1747.5615 533.2202 -1747.0918 534.9014 -1746.5703 c545.8428 -1743.1729 555.7837 -1735.9434 563.9429 -1727.625 C563.9648 -1727.7061 563.9878 -1727.7871 564.0103 -1727.8682 c568.2217 -1743.166 571.9922 -1758.707 573.3071 -1774.5625 c574.5234 -1789.2227 573.5264 -1804.3389 573.5264 -1819.0459 c573.5264 -1827.3525 573.4321 -1835.665 573.5684 -1843.9707 c573.7036 -1852.208 574.3789 -1860.4131 573.8618 -1868.6523 c573.3062 -1877.5098 571.3916 -1886.5957 569.1885 -1895.1738 c568.5698 -1897.584 567.915 -1899.9727 567.3335 -1902.3936 c566.9849 -1903.8457 566.5645 -1905.2725 566.0918 -1906.6895 c565.4224 -1908.6953 564.6465 -1907.9219 567.2827 -1907.6064 cf*U591.9497 -2158.8896 m589.0156 -2157.7256 586.9565 -2155.1836 584.7144 -2153.0791 c582.3745 -2150.8828 579.5776 -2149.0977 576.8745 -2147.3926 c570.8511 -2143.5938 564.1826 -2141.1396 557.8198 -2137.8809 c552.6802 -2135.248 547.7588 -2130.667 543.2949 -2126.9492 c538.0391 -2122.5713 532.3555 -2117.6309 527.9834 -2112.4082 c524.3447 -2108.0596 521 -2104.4766 518.6934 -2099.2051 c516.5605 -2094.333 514.2358 -2088.4678 509.394 -2085.6318 c504.3179 -2082.6582 496.6016 -2084.7441 491.0205 -2084.7441 c483.125 -2084.7441 475.4463 -2084.5762 467.6602 -2086.0771 c460.7354 -2087.4131 453.7422 -2087.5898 446.8066 -2088.9727 c438.8687 -2090.5566 430.4531 -2090.4199 422.3784 -2090.6973 c406.7651 -2091.2354 391.1104 -2091.2314 375.4897 -2091.0762 c345.6729 -2090.7803 316.0156 -2085.2324 286.2378 -2084.042 c278.5649 -2083.7354 271.2764 -2081.292 263.7642 -2079.751 c254.4766 -2077.8467 245.3594 -2076.5244 236.3325 -2073.4609 c228.0869 -2070.6621 220.1777 -2066.876 212.0771 -2063.6865 c203.3989 -2060.2695 194.73 -2057.375 185.8496 -2054.5977 c177.6025 -2052.0186 170.7764 -2046.7852 162.9829 -2043.2588 c159.5313 -2041.6973 156.4375 -2039.6445 153.1157 -2037.8516 c149.021 -2035.6416 144.4395 -2034.5693 140.3125 -2032.4219 c133.1035 -2028.6719 125.8345 -2024.043 119.0718 -2019.5498 c112.6807 -2015.3037 106.1699 -2014.04 101.3779 -2007.6777 c98.7769 -2004.2246 94.4531 -2004.3457 91.6353 -2006.2012 C87.9644 -2005.25 83.2134 -2007.2705 82.8936 -2012.2324 c82.4766 -2018.708 79.8428 -2024.8887 79.2896 -2031.3682 c78.9321 -2035.5488 77.6997 -2039.6289 77.0288 -2043.7754 c76.3643 -2047.8828 75.7681 -2051.9688 74.7139 -2056 c73.7388 -2059.7266 71.1743 -2065.5127 67.188 -2066.8135 c60.7437 -2068.916 55.4351 -2061.9736 52.459 -2057.377 c44.7271 -2045.4346 32.8188 -2037.1816 24.4634 -2025.7783 c19.3892 -2018.8535 16.0952 -2010.4277 12.2695 -2002.7764 c9.15088 -1996.54 4.41162 -1990.0811 4.13867 -1982.9219 c4.0166 -1979.7109 2.01953 -1977.7344 -0.372559 -1976.9873 C-0.372559 -2006.5195 L4.14111 -2015.6367 8.14697 -2025.3906 14.168 -2033.6084 c19.1636 -2040.4258 25.3403 -2046.2061 31.2734 -2052.1816 c34.1763 -2055.1045 37.0493 -2058.1182 39.5435 -2061.4033 c42.3379 -2065.085 44.5596 -2069.0068 47.7827 -2072.3828 c53.6025 -2078.4795 61.3618 -2080.7227 69.5356 -2079.6016 c76.5962 -2078.6328 81.46 -2072.1982 84.4282 -2066.3174 c88.8442 -2057.5674 88.8901 -2047.8818 91.3291 -2038.5566 c92.5503 -2033.8887 92.5527 -2029.0811 93.9116 -2024.3721 c94.3496 -2022.8555 94.7144 -2021.2021 95.0146 -2019.5146 C102.9004 -2026.6641 113.4155 -2031.002 122.3008 -2036.6396 c127.8823 -2040.1826 133.5864 -2044.4121 139.9146 -2046.5361 c146.793 -2048.8447 152.7622 -2052.8184 159.3516 -2055.8125 c166.1021 -2058.8809 171.9736 -2063.2295 178.9956 -2065.9023 c186.4419 -2068.7373 194.1563 -2070.6846 201.6279 -2073.5234 c216.2061 -2079.0625 230.2939 -2086.1113 245.5532 -2089.627 c252.8149 -2091.3008 260.2578 -2092.2227 267.5518 -2093.8164 c274.4692 -2095.3281 280.6992 -2096.8203 287.834 -2097.1055 c294.7896 -2097.3838 301.731 -2098.4902 308.6919 -2098.9121 c316.3521 -2099.376 323.9316 -2100.1182 331.562 -2100.8926 c362.457 -2104.0273 393.25 -2104.7012 424.29 -2103.6318 c433.5918 -2103.3115 442.8574 -2102.9854 452.0005 -2101.1621 c456.0493 -2100.3545 460.0933 -2100.4082 464.165 -2099.8389 c468.8213 -2099.1875 473.3643 -2097.9053 478.0771 -2097.7441 c486.3633 -2097.4609 494.75 -2097.3271 503.0298 -2097.1963 C503.085 -2097.2461 503.1284 -2097.2871 503.1909 -2097.3418 C503.6133 -2097.9199 503.998 -2098.5215 504.3462 -2099.1475 C505.2329 -2100.6094 505.915 -2102.2051 506.6084 -2103.7646 c507.9619 -2106.8086 509.207 -2109.7764 511.1118 -2112.5371 c520.3267 -2125.8926 534.1289 -2135.8721 546.4502 -2146.1074 c552.6548 -2151.2607 560.9946 -2152.8447 567.7031 -2157.0176 c569.1416 -2157.9121 570.5156 -2158.8984 571.8579 -2159.9277 C593.7588 -2159.9277 L593.2407 -2159.5176 592.6416 -2159.1641 591.9497 -2158.8896 cf661.5396 -2159.9277 m678.6875 -2159.9277 L681.896 -2155.5869 684.5962 -2150.8418 686.7168 -2145.6426 c689.165 -2139.6396 689.751 -2133.3555 689.751 -2126.9463 c689.751 -2119.0156 690.3164 -2110.8535 689.2969 -2102.9873 c688.4019 -2096.0801 687.2949 -2089.2422 685.4556 -2082.5166 c684.4629 -2078.8867 682.9448 -2075.6563 681.5273 -2072.2217 c679.9922 -2068.5029 681.0483 -2064.7178 679.1885 -2060.9473 c676.7642 -2056.0332 682.9443 -2052.8242 685.8892 -2050.5098 c692.2144 -2045.5371 698.2881 -2040.334 704.4341 -2035.1299 c716.1299 -2025.2275 728.2637 -2015.7021 738.7388 -2004.4834 c748.6699 -1993.8467 759.3628 -1982.5107 766.3735 -1969.6934 c769.2114 -1964.5049 774.6548 -1960.5557 778.0693 -1955.6182 c782.188 -1949.6641 786.6025 -1943.8037 790.4082 -1937.6465 c798.1694 -1925.0898 805.3613 -1911.7588 811.5615 -1898.3721 c819.0044 -1882.3027 825.8491 -1865.8193 826.1089 -1847.8398 c826.23 -1839.4521 813.23 -1839.4639 813.1089 -1847.8398 c812.8926 -1862.8389 807.2236 -1876.7744 801.0684 -1890.2236 c794.8965 -1903.709 787.6284 -1916.8984 780.0518 -1929.6504 c776.6318 -1935.4063 772.5728 -1940.9072 768.7559 -1946.4141 c764.9297 -1951.9346 759.8154 -1956.2578 755.9922 -1961.7197 c753.9521 -1964.6338 752.7236 -1967.9473 750.4678 -1970.7422 c748.23 -1973.5156 745.9683 -1976.2695 743.7119 -1979.0273 c738.7446 -1985.0986 733.6631 -1990.8809 728.311 -1996.6143 c717.8496 -2007.8184 705.4766 -2017.2715 693.7969 -2027.1611 c688.1367 -2031.9531 682.4897 -2036.6895 676.6968 -2041.3174 c672.002 -2045.0684 667.5405 -2049.1904 665.647 -2055.1543 c664.7026 -2058.1279 665.5703 -2061.6279 666.6152 -2064.4277 c667.7485 -2067.4629 667.6992 -2069.0381 668.2632 -2072.4004 c668.876 -2076.0527 670.6846 -2079.0469 671.8594 -2082.5039 c673.1826 -2086.4014 674.1123 -2090.4219 674.9185 -2094.4531 c676.3657 -2101.6875 676.751 -2108.6826 676.751 -2116.0371 c676.751 -2123.2832 677.4468 -2130.752 675.6318 -2137.8184 c673.4463 -2146.3311 668.0635 -2153.9268 661.5396 -2159.9277 Cf959.6616 -1996.8467 m959.6616 -2003.7295 960.936 -2010.4883 960.936 -2017.3779 c960.936 -2031.9434 964.2402 -2045.7666 968.3306 -2059.6738 c970.4639 -2066.9277 972.4658 -2074.2334 974.5488 -2081.5039 c976.6177 -2088.7207 979.6011 -2095.334 982.1948 -2102.3369 c984.9194 -2109.6914 986.1948 -2117.4668 986.6279 -2125.2686 c987.0552 -2132.9502 987.2612 -2142.2402 984.9058 -2149.6289 c983.8276 -2153.0107 983.4966 -2156.4727 983.2134 -2159.9277 C995.8896 -2159.9277 L995.9692 -2159.3281 996.0571 -2158.7266 996.165 -2158.125 c996.7725 -2154.7344 997.9399 -2151.5732 998.4063 -2148.1494 c998.8809 -2144.6689 999.2451 -2141.1855 999.4951 -2137.6826 c1000.043 -2130.0098 999.7266 -2122.2539 998.5693 -2114.6514 c997.5205 -2107.7627 995.793 -2101.0313 993.0835 -2094.6006 c990.3184 -2088.0361 988.1274 -2081.5908 986.1289 -2074.7422 c984.1743 -2068.0439 982.3618 -2061.3037 980.3936 -2054.6104 c978.2988 -2047.4902 975.4707 -2040.1191 975.2104 -2032.624 c975.1108 -2029.7578 974.5547 -2026.9844 973.9565 -2024.1895 c973.4292 -2021.7275 973.936 -2018.5967 973.936 -2016.0625 c973.936 -2009.1172 972.6616 -2002.293 972.6616 -1995.3369 c972.6616 -1992.4814 972.874 -1989.502 972.4165 -1986.6602 C972.9995 -1987.3477 973.5298 -1987.9932 973.9604 -1988.499 c975.8145 -1990.6797 977.4443 -1993.082 979.4067 -1995.166 c984.0615 -2000.1084 989.3687 -2004.3418 993.4209 -2009.8467 c997.7334 -2015.7051 1000.8594 -2022.6895 1004.5073 -2028.9863 c1008.3647 -2035.6445 1010.9575 -2042.4375 1013.5767 -2049.6445 c1015.5166 -2054.9814 1017.6992 -2060.2393 1020.4443 -2065.2148 c1023.5464 -2070.8369 1025.3633 -2077.2393 1027.8228 -2083.1553 c1032.6108 -2094.6719 1035.2251 -2106.7764 1039.1655 -2118.6055 c1041.2261 -2124.791 1041.3125 -2130.6816 1042.0181 -2137.1221 c1042.7671 -2143.9551 1043.5928 -2150.6563 1044.0825 -2157.5117 c1044.1401 -2158.3203 1044.2139 -2159.125 1044.2979 -2159.9277 C1057.4805 -2159.9277 L1057.1274 -2157.2314 1056.874 -2154.5186 1056.79 -2151.7773 c1056.5674 -2144.498 1054.8657 -2137.2559 1054.3848 -2129.9629 c1054.1504 -2126.4082 1054.188 -2123.207 1053.1836 -2119.7598 c1052.1265 -2116.1338 1050.8174 -2112.582 1049.6982 -2108.9746 c1047.6494 -2102.374 1046.0615 -2095.6475 1044.1123 -2089.0186 c1042.0229 -2081.916 1038.5249 -2075.082 1035.8174 -2068.1826 c1033.2939 -2061.751 1029.8433 -2055.7852 1027.3096 -2049.3711 c1024.6338 -2042.5977 1022.6865 -2035.4805 1019.3628 -2028.9795 c1012.7563 -2016.0596 1005.646 -2002.7549 995.29 -1992.4678 c992.2925 -1989.4902 989.1172 -1986.7412 986.4858 -1983.4268 c983.9688 -1980.2559 981.4312 -1977.1074 978.4932 -1974.3115 c971.8325 -1967.9736 960.5654 -1966.457 958.2886 -1977.7363 c957.6084 -1981.1055 958.5723 -1984.501 959.418 -1987.7461 c960.1528 -1990.5625 959.6616 -1993.957 959.6616 -1996.8467 cf1146.5293 -2012.1494 m1147.3066 -2028.5137 1146.9946 -2044.9199 1146.9946 -2061.2969 c1146.9946 -2078.7744 1152.6304 -2095.3555 1155.1191 -2112.5137 c1156.2134 -2120.0557 1159.2393 -2127.2637 1161.187 -2134.6025 c1163.2383 -2142.3291 1162.2871 -2150.8438 1162.2871 -2158.7871 c1162.2871 -2159.168 1162.2759 -2159.5469 1162.272 -2159.9277 C1175.3066 -2159.9277 L1175.3574 -2153.1768 1175.2871 -2146.4209 1175.2871 -2139.6709 c1175.2871 -2132.3066 1171.7451 -2124.5068 1169.6738 -2117.5527 c1167.5698 -2110.4883 1166.6313 -2103.0967 1165.1162 -2095.8887 c1163.3706 -2087.583 1161.4863 -2079.2813 1160.4023 -2070.8555 c1159.4336 -2063.3262 1159.9946 -2055.5 1159.9946 -2047.916 c1159.9946 -2039.6572 1160.2236 -2031.3916 1160.0703 -2023.1338 c1159.7861 -2007.9268 1159 -1992.79 1159 -1977.5693 C1159 -1930.29 L1159 -1914.3447 1158.416 -1898.3262 1158.9414 -1882.3906 c1159.4355 -1867.3857 1163.7964 -1852.0498 1167.9629 -1837.7031 c1171.7358 -1824.7129 1172.5098 -1810.6016 1178.46 -1798.3066 c1184.5459 -1785.7314 1192.9048 -1774.2344 1201.437 -1763.2305 c1205.4268 -1758.085 1210.4531 -1753.7686 1215.1855 -1749.334 c1219.6509 -1745.1504 1224.1387 -1740.5469 1229.1909 -1737.0605 c1231.8208 -1735.2461 1234.668 -1733.7695 1237.3486 -1731.9844 c1239.9814 -1730.2324 1242.8774 -1728.8232 1245.8042 -1727.6396 c1248.8662 -1726.4023 1252.1514 -1725.6885 1254.9458 -1723.8945 c1255.8008 -1723.3457 1256.7178 -1722.7871 1257.6729 -1722.2832 C1255.9199 -1724.6289 1254.4819 -1727.1104 1253.5273 -1728.8994 c1251.0156 -1733.6084 1248.0278 -1738.0371 1245.5308 -1742.7686 c1241.9409 -1749.5703 1238.9795 -1756.7236 1235.8193 -1763.7305 c1229.5039 -1777.7354 1223.5317 -1791.9033 1217.9585 -1806.2197 c1215.3276 -1812.9775 1213.1138 -1819.8887 1210.8057 -1826.7607 c1208.2202 -1834.46 1205.0039 -1841.6738 1201.5649 -1849.0195 c1195.4087 -1862.168 1191.3301 -1876.2686 1187.3174 -1890.123 c1186.4209 -1893.2197 1185.25 -1896.2373 1184.0806 -1899.2383 c1182.73 -1902.7061 1182.1382 -1906.1592 1181.5327 -1909.8301 c1180.186 -1917.9912 1179.3779 -1926.2373 1179.0063 -1934.4971 c1178.6782 -1941.7939 1178.8535 -1949.123 1178.8535 -1956.4258 c1178.8535 -1964.2734 1178.2607 -1971.918 1177.5928 -1979.7373 c1176.9424 -1987.3486 1175.2529 -1994.7266 1174.25 -2002.2822 c1173.2065 -2010.1455 1172.9766 -2018.1055 1173.2207 -2026.0273 c1173.4438 -2033.2666 1174.3887 -2040.4482 1175.5508 -2047.5889 c1176.7803 -2055.1426 1180.0762 -2062.2861 1182.3833 -2069.541 c1183.4341 -2072.8457 1183.4141 -2076.1523 1184.8125 -2079.415 c1186.7109 -2083.8438 1187.5659 -2087.5566 1188.2505 -2092.3359 c1189.4453 -2100.6777 1192.3965 -2108.7871 1194.5728 -2116.9199 c1198.3545 -2131.0527 1202.1816 -2145.4082 1204.2959 -2159.9277 C1217.311 -2159.9277 L1215.4629 -2146.7314 1212.2813 -2133.709 1209.0396 -2120.8047 c1207.1479 -2113.2715 1205.0757 -2105.8369 1202.9277 -2098.375 c1201.8115 -2094.4961 1201.0415 -2090.7646 1200.5303 -2086.7598 c1199.9292 -2082.0479 1198.9268 -2078.6543 1196.7402 -2074.4795 c1195.1895 -2071.5195 1195.3848 -2067.5449 1194.3662 -2064.3398 c1193.29 -2060.9551 1192.0205 -2057.6338 1190.8594 -2054.2773 c1188.2993 -2046.877 1187.1553 -2039.2939 1186.5264 -2031.5117 c1185.9351 -2024.1963 1186.0273 -2016.8359 1186.5264 -2009.5195 c1187.0801 -2001.3975 1189.0361 -1993.5371 1190.0244 -1985.4717 c1191.875 -1970.3662 1191.7871 -1955.416 1191.8633 -1940.2324 c1191.9014 -1932.5127 1192.4619 -1924.7588 1193.4946 -1917.1094 c1194.0137 -1913.2656 1194.7021 -1909.4463 1195.4443 -1905.6396 c1196.123 -1902.1602 1198.2324 -1898.541 1199.3628 -1895.1484 c1200.3745 -1892.1123 1200.4976 -1888.2207 1201.8267 -1885.3818 c1203.2437 -1882.3574 1204.2588 -1879.1563 1205.2637 -1875.9785 c1207.6421 -1868.4541 1210.2246 -1861.0605 1213.5732 -1853.9082 c1219.0205 -1842.2725 1223.1675 -1830.4941 1227.3325 -1818.3545 c1231.7383 -1805.5137 1237.1069 -1792.9717 1242.5137 -1780.5264 c1247.4976 -1769.0547 1252.3623 -1757.3643 1258.3413 -1746.3701 c1260.4995 -1742.4014 1263.0352 -1738.6807 1265.1597 -1734.6982 c1265.9385 -1733.2383 1266.7832 -1731.8184 1267.665 -1730.4199 c1267.8281 -1730.1621 1268 -1729.9043 1268.1758 -1729.6494 C1272.8198 -1729.3926 1276.9092 -1723.0449 1272.7842 -1718.3555 c1271.5435 -1716.9453 1270.2861 -1716.1123 1269.0361 -1715.7236 C1270.1602 -1711.874 1268.1948 -1707.1787 1263.0903 -1707.5303 c1256.2778 -1708 1251.5952 -1711.8027 1245.416 -1713.96 c1238.687 -1716.3086 1232.332 -1719.3447 1226.6763 -1723.7109 c1224.3115 -1725.5361 1221.3188 -1726.6162 1218.9219 -1728.582 c1216.6641 -1730.4336 1214.5381 -1732.4297 1212.3442 -1734.3555 c1206.6196 -1739.3809 1200.9482 -1744.5859 1195.667 -1750.0918 c1185.8257 -1760.3525 1177.5029 -1773.2393 1170.4814 -1785.541 c1162.9678 -1798.7061 1160.354 -1812.8486 1157.0703 -1827.4512 c1153.7598 -1842.1738 1148.9985 -1856.4902 1146.8691 -1871.4805 c1144.6729 -1886.9434 1145.7202 -1902.9229 1145.7202 -1918.5039 c1145.7202 -1949.7051 1145.0488 -1980.9775 1146.5293 -2012.1494 cf1768.228 -1987.6553 m1763.4272 -1983.3838 1759.4414 -1978.458 1754.0713 -1974.75 c1743.8018 -1967.6582 1728.501 -1967.8037 1716.7114 -1969.6875 c1706.458 -1971.3262 1696.6953 -1976.2441 1689.231 -1983.4238 c1679.064 -1993.2031 1669.4941 -2003.7305 1660.2358 -2014.3652 c1651.9463 -2023.8867 1643.7363 -2033.3203 1638.4658 -2044.8623 c1633.2534 -2056.2754 1624.2188 -2065.293 1623.6084 -2078.501 c1623.2207 -2086.8848 1636.2227 -2086.8477 1636.6084 -2078.501 c1636.9224 -2071.709 1641.2363 -2065.7539 1644.6416 -2060.1172 c1648.3701 -2053.9463 1651.1021 -2047.125 1655.0742 -2041.1113 c1663.7041 -2028.0449 1675.585 -2016.3232 1686.3262 -2005.0049 c1691.1348 -1999.9375 1695.8945 -1994.1582 1701.4565 -1989.9023 c1706.5332 -1986.0186 1712.5 -1983.8389 1718.6875 -1982.501 c1730.7295 -1979.8965 1744.1748 -1981.7363 1752.9458 -1990.7344 c1755.0264 -1992.8682 1756.6865 -1995.0029 1759.0356 -1996.8477 c1760.8096 -1998.2402 1762.8604 -2000.3047 1762.4644 -2002.7773 c1761.3589 -2009.6865 1758.415 -2017.0059 1756.1265 -2023.6133 c1751.29 -2037.5752 1737.6343 -2048.9795 1727.0122 -2058.6416 c1716.2695 -2068.4131 1704.7485 -2076.5459 1691.8208 -2083.084 c1685.1919 -2086.4355 1678.7407 -2090.1611 1671.709 -2092.623 c1668.5596 -2093.7256 1665.668 -2095.9619 1662.7314 -2097.5449 c1659.1128 -2099.4941 1655.3467 -2100.7617 1651.3188 -2101.5439 c1637.3735 -2104.25 1623.668 -2108.5313 1609.7334 -2111.4238 c1602.709 -2112.8818 1596.0117 -2115.3389 1588.855 -2116.4639 c1581.0371 -2117.6924 1573.0127 -2117.8506 1565.1152 -2117.8779 c1556.7334 -2117.9063 1556.7305 -2130.9063 1565.1152 -2130.8779 c1580.1865 -2130.8262 1595.3633 -2129.5908 1609.7578 -2124.8682 c1623.3936 -2120.3945 1637.8857 -2118.6729 1651.748 -2115.0938 c1658.4067 -2113.374 1664.7163 -2111.2363 1670.7988 -2107.958 c1677.6123 -2104.2861 1684.7295 -2101.3721 1691.6118 -2097.8008 c1697.8296 -2094.5732 1704.104 -2091.8945 1709.915 -2087.9346 c1716.1855 -2083.6621 1722.2979 -2079.8047 1728.1084 -2074.8936 c1739.5181 -2065.252 1750.9199 -2054.8525 1759.957 -2042.8975 c1764.4077 -2037.0098 1767.4946 -2030.8086 1769.7578 -2023.793 c1771.8506 -2017.3057 1775.0044 -2010.0498 1775.4404 -2003.2051 c1775.8359 -1997 1772.7466 -1991.6758 1768.228 -1987.6553 cf1693.0654 -1964.4707 m1693.2734 -1964.6543 1693.3721 -1964.6396 1693.0654 -1964.4707 C1693.0654 -1964.4707 Lf1546 -2117.8779 m1543.4263 -2117.8965 1541.3398 -2118.2305 1539.3379 -2119.1553 C1524.8291 -2119.1719 1510.2964 -2119.4063 1495.7939 -2119.0107 c1480.6553 -2118.5977 1466.0381 -2116.2139 1451.1094 -2114.043 c1444.4907 -2113.0811 1439.2334 -2110.0254 1433.0342 -2107.916 c1426.1416 -2105.5703 1419.5747 -2102.6504 1413.2959 -2098.9531 c1407.291 -2095.418 1402.3306 -2091.6123 1397.4717 -2086.5996 c1392.9658 -2081.9512 1386.9727 -2078.2451 1383.8691 -2072.4521 c1380.7021 -2066.541 1376.4814 -2061.3936 1373.4551 -2055.3398 c1373.2158 -2054.8623 1372.4717 -2053.6973 1372.4487 -2052.8896 C1372.5635 -2052.8125 1372.6943 -2052.7246 1372.8594 -2052.6191 c1375.7676 -2050.7559 1378.8042 -2049.0781 1381.7202 -2047.1963 c1394.0649 -2039.2285 1407.6865 -2035.1797 1422.3037 -2034.2344 c1436.4775 -2033.3184 1451.502 -2032.8701 1465.2402 -2036.7256 c1472.2026 -2038.6787 1478.8516 -2041.1914 1485.6504 -2043.6113 c1493.1396 -2046.2754 1501.0137 -2047.8623 1508.2856 -2051.083 c1518.7285 -2055.708 1528.584 -2061.8994 1537.5498 -2068.9531 c1541.9233 -2072.3936 1545.9624 -2076.1094 1549.8145 -2080.1201 c1553.0137 -2083.4512 1558.1211 -2088.2207 1558.8477 -2092.9727 c1559.3838 -2096.4805 1563.7334 -2098.3672 1566.8433 -2097.5117 c1570.5547 -2096.4912 1571.918 -2093.0156 1571.3828 -2089.5156 c1570.4614 -2083.4863 1565.1699 -2077.8311 1561.3003 -2073.416 c1556.5146 -2067.9541 1551.1074 -2063.1953 1545.4111 -2058.7129 c1534.1074 -2049.8203 1521.8535 -2042.6309 1508.5469 -2037.1787 c1501.7329 -2034.3867 1494.2803 -2032.916 1487.3223 -2030.4404 c1480.0181 -2027.8418 1472.8359 -2025.2695 1465.3242 -2023.2676 c1454.3647 -2020.3467 1442.3594 -2020.3281 1430.8042 -2020.8154 C1433.2856 -2015.125 1436.3203 -2009.708 1439.9229 -2004.6445 c1443.9883 -1998.9297 1449.5898 -1995.1074 1454.7319 -1990.5176 c1460.4766 -1985.3896 1467.1157 -1985.5596 1474.3525 -1985.6289 c1481.6416 -1985.6992 1488.8999 -1986.0801 1495.9189 -1988.1797 c1502.6646 -1990.1982 1509.001 -1994.5654 1515.229 -1997.7871 c1518.5625 -1999.5117 1521.833 -2001.3467 1525.0596 -2003.2627 c1528.7637 -2005.4619 1532.6719 -2007.2695 1536.2915 -2009.5723 c1538.9663 -2011.2734 1541.0986 -2014.002 1543.4619 -2016.1016 c1546.2549 -2018.582 1549.3311 -2020.7441 1552.1445 -2023.2129 c1556.6021 -2027.125 1556.6416 -2033.3613 1561.8345 -2036.9619 c1567.1147 -2040.624 1572.0952 -2034.6074 1571.3828 -2029.6221 c1571.0586 -2027.3486 1569.5723 -2025.8516 1567.7544 -2024.8154 C1566.9673 -2023.2383 1566.1226 -2020.2275 1565.6299 -2019.1484 c1564.166 -2015.9385 1560.6592 -2013.4395 1558.0601 -2011.2119 c1551.8247 -2005.8662 1545.6826 -1999.2861 1538.1714 -1995.7715 c1534.6719 -1994.1348 1531.2573 -1992.2568 1527.8667 -1990.3066 C1528.1191 -1989.6289 1528.2715 -1988.8701 1528.2866 -1988.0205 c1528.4673 -1977.7158 1532.2422 -1968.3438 1537.0464 -1959.3564 c1540.6826 -1952.5537 1549.5264 -1945.1406 1557.4688 -1944.8203 c1562.0898 -1944.6338 1569.4419 -1943.8818 1573.6851 -1946.0547 c1578.1563 -1948.3438 1582.9854 -1950.0078 1587.4063 -1952.2754 c1588.9912 -1953.0889 1590.5649 -1954.0029 1591.936 -1955.1465 c1593.8486 -1956.7412 1594.5039 -1958.9727 1596.1411 -1960.7578 c1598.5088 -1963.3379 1598 -1966.8936 1598 -1970.1797 c1598 -1970.1826 1598 -1970.1855 1598 -1970.1885 C1596 -1974.085 1593.8076 -1978.2344 1592.4863 -1982.5264 c1589.3047 -1992.8584 1588.9785 -2003.0313 1588.252 -2013.7324 c1587.5151 -2024.584 1587.4902 -2035.126 1587.8223 -2046.0049 c1588.1445 -2056.5615 1586.3828 -2067.3838 1589.4248 -2077.6797 c1591.7939 -2085.7012 1604.3447 -2082.2832 1601.9639 -2074.2246 c1599.4619 -2065.7539 1601.0225 -2056.624 1600.8818 -2047.916 c1600.7275 -2038.3408 1600.0034 -2028.8145 1600.7354 -2019.2422 c1602.0771 -2001.7002 1602.1714 -1984.6777 1613.8647 -1970.4082 c1624.0879 -1957.9336 1640.4482 -1951.585 1656.3516 -1952.6465 c1663.292 -1953.1094 1671.9131 -1955.9785 1676.1279 -1961.8789 c1677.3525 -1963.5938 1678.3184 -1965.4805 1679.5464 -1967.1992 c1680.0337 -1967.9063 1680.335 -1968.3145 1680.4717 -1968.46 C1680.6807 -1968.9512 1680.8848 -1969.4434 1681.103 -1969.9307 c1682.4395 -1972.96 1685.2231 -1975.374 1688.2759 -1976.4473 c1696.2061 -1979.2354 1699.5854 -1966.6729 1691.7319 -1963.9121 c1692.4448 -1964.1631 1692.8516 -1964.3525 1693.0654 -1964.4707 C1692.8662 -1964.2939 1692.5723 -1963.9375 1692.4482 -1963.3545 c1692.0229 -1961.3457 1690.0825 -1959.7158 1689.0176 -1958.0225 c1686.3716 -1953.8145 1683.5977 -1950.3311 1679.4854 -1947.4434 c1672.1528 -1942.2939 1663.6733 -1940.1348 1654.8286 -1939.5449 c1638.3062 -1938.4424 1621.1226 -1945.4082 1609.0264 -1956.7051 C1608.7334 -1956.0635 1608.4019 -1955.4287 1608.021 -1954.8037 c1605.0205 -1949.8809 1601.3306 -1945.6582 1596.4951 -1942.4902 c1593.7646 -1940.7012 1590.8643 -1939.7402 1587.8188 -1938.6738 c1584.6157 -1937.5518 1581.6045 -1935.5254 1578.5913 -1933.9824 c1572.6777 -1930.9541 1563.9014 -1931.8242 1557.4688 -1931.8203 c1545.2188 -1931.8125 1534.4844 -1941.0146 1527.4644 -1950.2422 c1523.562 -1955.3721 1521.127 -1962.2109 1518.8687 -1968.1934 c1517.0547 -1972.998 1516.0015 -1978.0537 1515.5464 -1983.1611 C1507.9121 -1978.9014 1500.0469 -1975.21 1491.291 -1973.8525 c1483.2451 -1972.6055 1475.1089 -1972.6016 1466.9888 -1972.5996 c1458.7861 -1972.5977 1451.7314 -1976.2402 1445.5396 -1981.3252 c1439.2476 -1986.4922 1433.6006 -1991.5215 1428.6978 -1998.083 c1423.856 -2004.5635 1420.4316 -2011.9736 1417.3926 -2019.4268 c1417.0986 -2020.1484 1417.0117 -2020.8965 1417.0737 -2021.6338 C1404.4844 -2022.8926 1392.1865 -2026.3281 1381.0332 -2032.4268 c1375.7388 -2035.3213 1370.5317 -2038.6807 1365.46 -2041.9307 c1360.5371 -2045.0859 1358.9014 -2050.3125 1359.8184 -2055.9072 c1360.8086 -2061.9473 1365.4873 -2068.5801 1368.9839 -2073.498 c1372.8599 -2078.9492 1375.7524 -2084.7012 1381.0073 -2089.0303 c1386.1646 -2093.2793 1390.4604 -2098.3984 1395.5586 -2102.7314 c1401.0967 -2107.4385 1407.8687 -2111.0898 1414.3662 -2114.2852 c1423.2695 -2118.6641 1432.9155 -2122.4053 1442.3218 -2125.5488 c1447.7227 -2127.3545 1454.2456 -2127.7803 1459.8696 -2128.6631 c1465.7451 -2129.5859 1471.6558 -2130.2236 1477.5742 -2130.8037 c1489.6411 -2131.9863 1501.7295 -2132 1513.8418 -2132 C1540.9023 -2132 L1542.0757 -2132 1543.1689 -2131.7764 1544.1831 -2131.1885 c1544.4946 -2131.0059 1544.7178 -2130.8623 1544.9048 -2130.7354 C1545.0947 -2130.7998 1545.4238 -2130.8438 1546 -2130.8398 c1554.3799 -2130.7783 1554.3857 -2117.8164 1546 -2117.8779 cf1885.083 -2033.4072 m1891.3857 -2045.3643 1900.1357 -2055.7813 1905.708 -2068.1416 c1908.5889 -2074.5322 1910.4893 -2081.3418 1912.2393 -2088.1104 c1913.875 -2094.4375 1913.2314 -2101.4541 1913.0239 -2107.915 c1912.8379 -2113.6973 1912.6816 -2118.958 1911.1187 -2124.5664 c1909.2466 -2131.2842 1907.9912 -2138.1162 1906.624 -2144.9521 c1905.958 -2148.2832 1905.3403 -2151.2656 1903.9019 -2154.3438 c1903.3311 -2155.5654 1902.5479 -2158.165 1901.8506 -2159.9277 C1915.5845 -2159.9277 L1916.7407 -2157.4268 1917.853 -2154.957 1918.3984 -2152.2314 c1919.7349 -2145.5469 1920.8662 -2138.7803 1922.502 -2132.1621 c1923.8516 -2126.7051 1925.4229 -2121.5547 1925.8486 -2115.9043 c1926.7568 -2103.835 1926.6641 -2091.4658 1923.4883 -2079.748 c1920.0996 -2067.2451 1914.6367 -2055.7705 1907.5439 -2044.9824 c1900.3564 -2034.0508 1892.4429 -2022.8291 1889.7524 -2009.8105 c1888.4673 -2003.5908 1888.7979 -1996.9961 1888.8862 -1990.6855 c1888.9771 -1984.1855 1888.8721 -1977.6855 1889.1724 -1971.1895 c1889.7515 -1958.666 1892.4077 -1945.4043 1895.6572 -1933.3037 c1896.2056 -1931.2617 1896.9336 -1929.3193 1897.7764 -1927.4248 C1897.7632 -1927.668 1897.748 -1927.9131 1897.7363 -1928.1563 c1897.437 -1934.291 1897.5684 -1940.4668 1897.7578 -1946.6035 c1898.167 -1959.8613 1901.541 -1971.877 1905.9736 -1984.2959 c1910.1602 -1996.0264 1914.209 -2007.6865 1919.9219 -2018.7607 c1925.376 -2029.332 1931.626 -2039.5039 1939.2871 -2048.626 c1946.7061 -2057.459 1952.7383 -2066.6563 1958.1943 -2076.8447 c1960.707 -2081.5371 1962.1328 -2087.3906 1963.1074 -2092.5957 c1964.2227 -2098.5498 1965.2549 -2104.5049 1966.2168 -2110.501 c1967.1953 -2116.5938 1967.6953 -2122.668 1967.6875 -2128.8379 c1967.6777 -2135.9834 1966.0156 -2142.7793 1965.416 -2149.8662 c1965.1289 -2153.252 1964.9541 -2156.5898 1964.7236 -2159.9277 C1978.1465 -2159.9277 L1978.1592 -2156.5703 1978.2119 -2153.2197 1978.416 -2149.8662 c1978.8066 -2143.4268 1980.5088 -2137.2471 1980.6699 -2130.75 c1980.8379 -2123.9521 1980.2061 -2117.2754 1979.2822 -2110.5498 c1977.6689 -2098.7979 1975.4424 -2087.5371 1971.9727 -2076.2305 c1970.3418 -2070.916 1967.0898 -2066.1699 1964.1895 -2061.4961 c1960.9873 -2056.3369 1958.3125 -2051.2705 1954.4795 -2046.4844 c1947.1875 -2037.3809 1940.2451 -2028.7373 1934.5127 -2018.4922 c1928.3311 -2007.4463 1924.0791 -1996.0039 1919.7173 -1984.1631 c1915.165 -1971.8057 1911.3018 -1959.8398 1910.7578 -1946.6035 c1910.2212 -1933.5273 1912.21 -1920.2539 1910.3662 -1907.2822 c1910.083 -1905.2861 1907.79 -1903.0684 1905.8267 -1902.7422 c1896.8115 -1901.2432 1891.7842 -1910.7109 1888.1714 -1917.4912 c1882.4678 -1928.1943 1880.7319 -1940.1162 1878.7153 -1951.9316 c1876.396 -1965.5225 1876.0542 -1978.6709 1875.8618 -1992.4229 c1875.7637 -1999.4385 1876.0229 -2006.3398 1877.2168 -2013.2666 c1878.4443 -2020.3887 1881.7422 -2027.0693 1885.083 -2033.4072 cf2407.6465 -2040.2441 m2414.6514 -2042.3467 2420.8545 -2045.5371 2427.1328 -2049.2285 c2432.5742 -2052.4268 2436.2178 -2058.4023 2441.5869 -2061.4922 c2447.4023 -2064.8389 2453.3135 -2061.334 2457.6182 -2057.2334 c2459.9609 -2055.001 2461.7803 -2051.7861 2464.502 -2049.998 c2467.4238 -2048.0771 2470.4561 -2046.3291 2473.5137 -2044.6357 c2480.0586 -2041.0107 2486.9238 -2037.9678 2493.8389 -2035.127 c2508.7471 -2029.002 2525.2754 -2026.6475 2541.2842 -2026.4102 c2547.6777 -2026.3154 2554.4785 -2025.7666 2560.6904 -2027.5254 c2563.875 -2028.4268 2566.0273 -2030.9863 2568.4658 -2033.0332 c2571.3027 -2035.416 2574.4346 -2037.457 2577.5098 -2039.5107 c2584.502 -2044.1836 2591.0029 -2032.918 2584.0703 -2028.2861 c2578.3555 -2024.4668 2573.416 -2018.9551 2567.126 -2016.1563 c2560.7813 -2013.332 2553.833 -2013.3799 2547.0195 -2013.3809 c2530.6279 -2013.3848 2515.2266 -2015.2578 2499.4141 -2019.6338 c2485.4492 -2023.498 2471.7334 -2030.1904 2459.4365 -2037.8174 c2456.3535 -2039.7295 2454.041 -2041.8467 2451.6357 -2044.5479 c2450.582 -2045.7314 2449.5244 -2046.8994 2448.4258 -2048.041 C2448.0576 -2048.3916 2447.6895 -2048.7422 2447.3213 -2049.0938 C2447.2334 -2049.1348 2447.1758 -2049.1729 2447.0996 -2049.2129 C2442.3848 -2044.9961 2437.9404 -2040.5 2432.4199 -2037.2539 c2419.8643 -2029.8721 2406.8418 -2025.5303 2392.2256 -2024.9473 c2376.8535 -2024.334 2361.959 -2026.8545 2346.7041 -2027.9434 c2332.1699 -2028.9814 2317.957 -2030.6494 2304.6367 -2036.9912 c2299.917 -2039.2383 2295.543 -2042.3018 2291.3633 -2045.6982 C2291.1758 -2043.9521 2290.2813 -2042.252 2288.416 -2041.0303 c2282.6152 -2037.2295 2276.5664 -2033.9082 2270.3926 -2030.7559 c2264.4844 -2027.7393 2258.9287 -2024.1582 2253.0869 -2021.0107 c2241.2988 -2014.6572 2228.5029 -2012.3262 2215.7178 -2008.834 c2202.8535 -2005.3203 2190.251 -2000.5244 2177.6035 -1996.3086 c2164.3057 -1991.877 2150.2227 -1988.4043 2136.4883 -1985.5771 c2123.792 -1982.9639 2110.041 -1984.2031 2097.166 -1984.0117 c2083.3926 -1983.8086 2070.0283 -1982.0371 2056.2041 -1982.9648 c2042.6973 -1983.8711 2028.8984 -1985.7588 2015.79 -1989.1475 c2008.8262 -1990.9473 2001.7275 -1992.1699 1994.7627 -1993.9707 c1991.3438 -1994.8545 1988.0078 -1996.1113 1984.6582 -1997.2275 c1981.7598 -1998.1934 1978.4873 -2000.3545 1975.4629 -2000.6367 c1967.1895 -2001.4092 1967.1143 -2014.416 1975.4629 -2013.6367 c1981.0762 -2013.1133 1986.0801 -2010.4414 1991.3916 -2008.6709 c1998.0342 -2006.457 2004.7568 -2004.9063 2011.5996 -2003.4365 c2025.2344 -2000.5088 2038.5713 -1997.5527 2052.5029 -1996.2617 c2066.3213 -1994.9805 2079.5723 -1996.3457 2093.3418 -1996.9111 c2106.5381 -1997.4531 2119.6973 -1996.7373 2132.8633 -1998.1201 c2139.0527 -1998.7705 2145.3574 -2000.959 2151.3516 -2002.5732 c2157.6963 -2004.2822 2164.3008 -2005.5625 2170.5254 -2007.6367 c2183.3457 -2011.9102 2196.1201 -2016.374 2209.0166 -2020.4141 c2221.6592 -2024.374 2234.6563 -2026.0605 2246.5254 -2032.2363 c2252.4121 -2035.2979 2257.9092 -2038.9883 2263.832 -2041.9814 c2270.0146 -2045.1064 2276.0576 -2048.458 2281.8555 -2052.2549 c2282.2715 -2052.5273 2282.6865 -2052.7402 2283.0967 -2052.9072 C2280.0176 -2055.7207 2276.9971 -2058.5449 2273.9668 -2061.1611 c2265.2988 -2068.6475 2256.7666 -2076.1709 2247.8594 -2083.3633 c2241.2314 -2088.7158 2234.6406 -2093.4932 2234.0322 -2102.7148 c2233.4805 -2111.0889 2246.4834 -2111.0352 2247.0322 -2102.7148 c2247.2676 -2099.1426 2252.3506 -2096.167 2254.9053 -2094.2178 c2260.2178 -2090.166 2265.4648 -2085.9883 2270.5098 -2081.6055 c2281.1738 -2072.3398 2291.5215 -2062.6338 2302.4346 -2053.665 c2313.1904 -2044.8252 2327.9336 -2042.4375 2341.3779 -2041.3369 c2356.5488 -2040.0947 2371.6074 -2037.8096 2386.8584 -2037.8555 c2393.9199 -2037.877 2400.8457 -2038.2021 2407.6465 -2040.2441 cf2366.6875 -2159.9277 m2384.0879 -2143.4736 2407.4922 -2133.1563 2429.832 -2125.9795 c2444.5342 -2121.2559 2459.1758 -2116.1563 2474.1289 -2112.2412 c2489.1113 -2108.3193 2504.8184 -2106.7598 2520.2441 -2105.8945 c2534.6514 -2105.0879 2550.3506 -2103.7598 2564.2383 -2108.2754 c2570.7549 -2110.3936 2577.8574 -2111.4199 2584.1738 -2114.0879 c2590.6475 -2116.8213 2596.7881 -2120.5332 2603.1895 -2123.4678 c2607.8955 -2125.625 2609.4805 -2131.748 2614.7441 -2133.1953 c2622.21 -2135.249 2625.7969 -2127.625 2627.624 -2121.8652 c2629.6064 -2115.6152 2635.8984 -2113 2641.6504 -2110.8701 c2648.8867 -2108.1904 2656.292 -2106.0752 2663.8828 -2104.6787 c2672.9199 -2103.0156 2682.9043 -2104.1172 2692.083 -2104.1172 c2700.5439 -2104.1172 2708.2227 -2107.2617 2716.4541 -2108.9219 c2725.5869 -2110.7637 2733.2002 -2114.8086 2741.4785 -2118.9473 c2744.8857 -2120.6514 2751.0986 -2122.2168 2753.4609 -2125.3662 c2756.9023 -2129.9541 2760.3428 -2134.541 2763.7842 -2139.1289 c2768.749 -2145.75 2780.0439 -2139.2813 2775.0088 -2132.5684 C2768.127 -2123.3926 L2766.0752 -2120.6563 2764.0879 -2116.8574 2761.207 -2114.9443 c2754.3457 -2110.3848 2746.8965 -2107.1504 2739.543 -2103.4746 c2735.9277 -2101.666 2732.415 -2100.0908 2728.7539 -2098.8057 C2729.1934 -2091.7441 2736.1914 -2085.3828 2740.71 -2080.5459 c2746.7988 -2074.0293 2752.0889 -2066.7578 2756.9785 -2059.3164 c2761.3691 -2052.6328 2765.1006 -2046.3311 2771.0195 -2040.8174 c2776.9619 -2035.2813 2784.3145 -2030.958 2791.793 -2027.8516 c2808.8525 -2020.7646 2828.9307 -2020.375 2847.1328 -2021.0947 c2856.7422 -2021.4746 2865.8018 -2024.6162 2875.0908 -2026.7539 c2877.5518 -2027.3203 2880.3057 -2027.4756 2882.5957 -2027.7949 c2883.4629 -2027.916 2884.3164 -2028.1016 2885.165 -2028.3057 C2885.4824 -2030.6016 2887.25 -2032.4766 2889.4209 -2033.3467 C2887.6123 -2039.8447 2886.5195 -2046.9824 2886.5195 -2053.5352 c2886.5195 -2061.1348 2885.0977 -2070.4775 2888.0215 -2077.6816 c2889.3535 -2080.9609 2892.2959 -2083.2441 2896.0156 -2082.2207 c2899.1309 -2081.3643 2901.8877 -2077.5137 2900.5527 -2074.2246 c2898.2529 -2068.5586 2899.5107 -2061.0879 2899.5107 -2055.0879 c2899.5107 -2047.7451 2900.8594 -2040.4502 2902.959 -2033.4092 c2905.1992 -2025.8984 2910.2734 -2020.0176 2915.3564 -2014.2314 c2920.4043 -2008.4844 2926.0039 -2003.2451 2931.8027 -1998.2686 c2943.3262 -1988.3799 2957.8213 -1981.582 2972.46 -1977.7842 c2980.3359 -1975.7402 2988.5645 -1972.6924 2996.668 -1971.7549 c3004.8828 -1970.8037 3013 -1971.583 3022 -1971.583 c3030 -1971.583 3030 -1958.583 3022 -1958.583 c3013 -1958.583 3003.7578 -1957.9346 2994.9023 -1958.959 c2985.6523 -1960.0293 2976.4521 -1963.334 2967.4629 -1965.666 c2950.5088 -1970.0645 2934.5918 -1978.8232 2921.3633 -1990.1758 c2911.8047 -1998.3789 2901.8906 -2007.9521 2895.3916 -2019.1211 C2893.5625 -2017.584 2891.208 -2016.4365 2888.7822 -2015.79 c2886.1787 -2015.0967 2883.3828 -2014.7998 2880.6973 -2014.6641 c2875.6846 -2014.4102 2870.3096 -2012.0508 2865.4512 -2010.8447 c2853.6904 -2007.9238 2841.9561 -2007.8848 2829.9297 -2008.2012 c2818.4893 -2008.501 2806.5742 -2009.5039 2795.5332 -2012.7656 c2776.7998 -2018.2988 2759.3242 -2030.2021 2749.2334 -2047.1279 c2743.7852 -2056.2666 2737.5957 -2064.8477 2730.3252 -2072.6309 c2724.1895 -2079.1973 2717.9209 -2086.4922 2716.1855 -2095.4248 C2711.5117 -2094.209 2706.8789 -2092.8613 2702.165 -2091.8408 c2695.4961 -2090.3965 2688.2432 -2091.1172 2681.4648 -2091.1172 c2673.7344 -2091.1172 2666.3291 -2091.0566 2658.7012 -2092.4609 c2644.7188 -2095.0332 2629.9102 -2099.5469 2619.5215 -2109.5879 c2617.4814 -2111.5605 2616.4453 -2114.3027 2615.5508 -2116.9268 C2611.7109 -2113.2832 2607.4453 -2111.5098 2602.4297 -2109.0098 c2596.3262 -2105.9678 2590.7324 -2102.4844 2584.167 -2100.4492 c2577.0723 -2098.25 2569.8457 -2096.1328 2562.6699 -2094.2285 c2548.7686 -2090.54 2532.6328 -2092.2012 2518.4375 -2092.9961 c2503.0469 -2093.8594 2487.4609 -2095.7148 2472.4492 -2099.2627 c2460.6563 -2102.0498 2448.4473 -2105.6699 2437.082 -2109.8535 c2425.2051 -2114.2236 2413.1543 -2117.6406 2401.5566 -2122.79 c2381.7148 -2131.5986 2363.1533 -2143.3594 2349.1055 -2159.9277 C2366.6875 -2159.9277 Lf*u1 D3181.3555 -1902.9385 m3185.4951 -1907.5771 3190.082 -1911.5029 3194.7197 -1915.6172 c3199.5723 -1919.9219 3204.25 -1924.8242 3209.7725 -1928.2715 c3214.4922 -1931.2188 3218.4736 -1935.2949 3222.3984 -1939.1934 c3226.9561 -1943.7188 3232.7119 -1947.001 3237.6992 -1951.0303 c3242.5625 -1954.959 3247.1279 -1958.8994 3252.4492 -1962.2539 c3257.9199 -1965.7012 3263.7822 -1968.4971 3269.5723 -1971.3545 c3281.0654 -1977.0273 3293.0078 -1981.6064 3304.8008 -1986.5801 c3317.167 -1991.7959 3330.1445 -1994.6328 3343.1543 -1997.6885 c3349.7939 -1999.248 3356.4326 -2000.8076 3363.0918 -2002.2822 c3369.3262 -2003.6631 3375.6709 -2003.8691 3381.8965 -2005.4404 c3384.8223 -2006.1787 3387.7314 -2006.9648 3390.6211 -2007.8301 c3393.7773 -2008.7754 3396.7715 -2008.835 3399.8105 -2010.2959 c3405.3721 -2012.9697 3410.5313 -2016.3174 3416.3242 -2018.5029 c3417.0508 -2018.7773 3417.7373 -2018.916 3418.3818 -2018.9453 C3414.707 -2033.5879 3409.917 -2047.8359 3404.7979 -2062.1855 c3401.3613 -2071.8174 3396.8496 -2080.9453 3393.9443 -2090.793 c3390.9795 -2100.8398 3388.8389 -2111.2129 3386.2979 -2121.377 c3383.8145 -2131.3105 3381.498 -2141.7373 3380.3301 -2151.916 c3380.0264 -2154.5693 3379.8447 -2157.2432 3379.7344 -2159.9277 C3393.0332 -2159.9277 L3393.2012 -2151.9258 3394.751 -2144.0957 3396.4863 -2136.3027 c3400.0049 -2120.502 3403.1602 -2104.2842 3408.2285 -2088.8965 c3410.6387 -2081.5781 3414.1299 -2074.7188 3416.7119 -2067.4863 c3419.5596 -2059.5117 3422.375 -2051.5332 3425.0332 -2043.4932 c3430.0488 -2028.3203 3433.04 -2013.1348 3436.1582 -1997.5146 c3439.2021 -1982.2617 3439.2832 -1966.9902 3441.3701 -1951.6777 c3443.3115 -1937.4443 3443.3887 -1922.8857 3444.7832 -1908.5742 c3447.8945 -1876.667 3446.7754 -1843.6826 3444.1797 -1811.7715 c3443.3545 -1801.6338 3442.6348 -1791.4932 3441.8105 -1781.3555 c3441.0781 -1772.3604 3440 -1763.5117 3440 -1754.4814 C3440 -1694.8145 L3440 -1684.8877 3439.8037 -1675.0752 3441.1768 -1665.2197 c3442.4443 -1656.124 3442.1504 -1647.082 3443.4746 -1638.0234 c3444.8125 -1628.8818 3445.8906 -1619.8516 3446.8428 -1610.6377 c3447.043 -1608.6992 3447.4316 -1606.8145 3447.9199 -1604.9609 C3448.6533 -1612.0234 3448.4707 -1619.0801 3448.8203 -1626.1924 c3449.1592 -1633.0596 3450.3281 -1639.8057 3451.3818 -1646.5869 c3452.5703 -1654.2383 3453.3545 -1661.5566 3456.4346 -1668.7051 c3459.2754 -1675.2979 3463.2773 -1681.3467 3464.874 -1688.4229 c3465.5137 -1691.2549 3465.9688 -1694.1533 3466.7275 -1696.9346 c3467.6328 -1700.2549 3469.7559 -1702.665 3470.9941 -1705.7617 c3476.1699 -1718.7061 3481.0918 -1732.002 3483.7813 -1745.7139 c3485.1777 -1752.8359 3485.377 -1759.9346 3485.9209 -1767.1475 c3486.5693 -1775.7529 3487.0918 -1784.3633 3487.2461 -1792.9922 c3487.5215 -1808.543 3485.2119 -1823.9014 3483.3428 -1839.3018 c3481.4834 -1854.6191 3481.0859 -1870.1816 3479.9863 -1885.5713 c3478.8477 -1901.5273 3476.3438 -1917.3398 3473.6338 -1933.0918 c3471.7734 -1943.9033 3470.2793 -1954.8789 3467.1484 -1965.4141 c3465.5137 -1970.915 3467.1074 -1976.6992 3465.6465 -1982.252 c3464.4189 -1986.9189 3463.9658 -1991.6426 3463.0781 -1996.3691 c3461.1504 -2006.6406 3460.0752 -2017.2988 3457.5488 -2027.4219 c3455 -2037.6328 3452.2109 -2047.9629 3450.1436 -2058.2959 c3447.8965 -2069.5322 3446.7773 -2080.7744 3444.9189 -2092.0674 c3443.0977 -2103.1279 3440.9775 -2114.1279 3439.9883 -2125.3066 c3438.9902 -2136.583 3438.7578 -2148.1055 3438.2744 -2159.4258 c3438.2676 -2159.5928 3438.2637 -2159.7607 3438.2568 -2159.9277 C3451.4209 -2159.9277 L3451.4258 -2159.7598 3451.4258 -2159.5918 3451.4316 -2159.4238 c3451.9482 -2143.7314 3452.2012 -2127.7275 3454.6221 -2112.2051 c3455.7813 -2104.7773 3457.1973 -2097.3926 3458.3408 -2089.9609 c3459.5098 -2082.3643 3460.207 -2074.7822 3461.6055 -2067.2314 C3465.5283 -2074.1709 3466.2334 -2084.0596 3466.9414 -2091.2842 c3468.1191 -2103.2969 3467.625 -2115.5127 3467.625 -2127.5664 c3467.625 -2138.4805 3469.4277 -2149.0811 3467.9863 -2159.9277 C3481.0303 -2159.9277 L3481.082 -2159.5586 3481.1348 -2159.1875 3481.1865 -2158.8184 c3482.2549 -2151.2471 3481.3916 -2143.8828 3480.8779 -2136.2842 c3479.8643 -2121.3086 3481.1875 -2106.2666 3479.9414 -2091.2842 c3478.9209 -2079.0137 3477.0244 -2064.4014 3468.5273 -2054.791 c3467.4199 -2053.5381 3466.1689 -2052.9082 3464.9209 -2052.7402 C3465.6563 -2049.7949 3466.3857 -2046.8457 3467.0342 -2043.8652 c3468.6045 -2036.6445 3470.6748 -2029.5078 3471.6787 -2022.1885 c3471.9531 -2020.1855 3472.2734 -2018.1904 3472.6094 -2016.1982 C3476.8584 -2020.333 3482.0957 -2023.1973 3486.4824 -2027.2119 c3491.1133 -2031.4512 3492.7842 -2038.7393 3494.8711 -2044.4277 c3500.248 -2059.0811 3501.582 -2075.2988 3503.5625 -2090.6748 c3505.7559 -2107.7051 3505.8379 -2124.9473 3505.8555 -2142.0889 c3505.8613 -2148.0322 3506.001 -2154.0234 3505.3242 -2159.9277 C3518.4814 -2159.9277 L3518.8848 -2155.291 3518.8535 -2150.583 3518.8564 -2146.0439 c3518.8672 -2126.8906 3518.7578 -2107.7236 3516.3076 -2088.6973 c3514.1904 -2072.2588 3512.6357 -2055.2227 3506.8896 -2039.5635 c3504.5137 -2033.0869 3502.415 -2025.7148 3497.8379 -2020.3828 c3492.6572 -2014.3477 3485.1621 -2011.1094 3479.9961 -2005.0898 c3478.4912 -2003.3369 3476.708 -2002.7705 3475.0254 -2002.9951 C3475.1152 -2002.5137 3475.208 -2002.0322 3475.2959 -2001.5498 c3475.8945 -1998.2773 3476.7275 -1995.0146 3476.8594 -1991.6836 c3477.0137 -1987.8369 3479.3506 -1984.2197 3479.3506 -1980.376 c3479.3506 -1976.832 3478.5918 -1972.2744 3479.6846 -1968.8701 c3480.7959 -1965.4063 3481.585 -1961.8408 3482.3262 -1958.2832 c3483.9541 -1950.4736 3485.1367 -1942.5479 3486.4893 -1934.6875 c3489.1807 -1919.0479 3491.5166 -1903.3379 3492.8359 -1887.5176 c3494.125 -1872.0703 3494.2207 -1856.4141 3496.1309 -1841.0332 c3497.4551 -1830.3672 3499.123 -1819.6162 3499.8818 -1808.8965 c3500.7725 -1796.3252 3500.083 -1783.6748 3499.2109 -1771.124 c3498.459 -1760.3027 3497.8125 -1749.7266 3495.6855 -1739.0664 c3493.5996 -1728.6074 3489.7148 -1718.1846 3485.8828 -1708.2598 c3484.2324 -1703.9873 3482.6729 -1699.7988 3480.2461 -1695.9043 c3478.1455 -1692.5322 3477.918 -1687.2207 3477.0459 -1683.3545 c3475.8955 -1678.2578 3473.1318 -1673.3359 3470.8174 -1668.6973 c3468.0137 -1663.0762 3466.2559 -1658.1738 3465.2832 -1651.9736 c3463.5703 -1641.0576 3461.8262 -1630.3271 3461.5771 -1619.2578 c3461.4551 -1613.8223 3461.5811 -1608.5664 3460.7422 -1603.1836 c3459.8379 -1597.374 3459.6025 -1591.4502 3461.2773 -1585.7734 c3463.0332 -1579.8252 3456.6611 -1576.4121 3452.249 -1578.2539 C3448.8223 -1574.8711 3441.1543 -1576.3896 3440.8633 -1582.7715 c3440.5527 -1589.5635 3436.7441 -1595.834 3435.0527 -1602.3438 c3433.2178 -1609.4043 3433.3008 -1617.123 3432.6113 -1624.3516 c3431.9854 -1630.9209 3429.3945 -1637.5723 3429.3945 -1644.1582 c3429.3945 -1651.9629 3428.9424 -1659.2871 3427.9336 -1667.0176 c3425.8848 -1682.7158 3427 -1698.8965 3427 -1714.6943 C3427 -1759.3662 L3427 -1766.0703 3428.1074 -1772.7988 3428.6563 -1779.4834 c3429.332 -1787.7168 3429.9453 -1795.9521 3430.6055 -1804.1865 c3431.9023 -1820.3447 3432.8389 -1836.4375 3433.0918 -1852.6514 c3433.3447 -1868.8232 3433.626 -1885.0654 3432.4307 -1901.2051 c3431.3594 -1915.6768 3430.1846 -1930.1201 3429.1807 -1944.5938 c3428.833 -1949.6074 3427.9043 -1954.5811 3427.0801 -1959.5332 c3426.6113 -1962.3555 3426.627 -1965.3105 3426.6533 -1968.252 C3424.1523 -1967.0137 3421.0391 -1963.9688 3419.5195 -1962.4688 c3415.9277 -1958.9229 3411.998 -1955.6904 3407.6172 -1953.168 c3397.25 -1947.2002 3387.2305 -1940.4961 3376.5449 -1935.0381 c3365.2725 -1929.2803 3353.5752 -1924.3574 3342.0908 -1919.0449 c3330.5137 -1913.6895 3319.2686 -1908.8525 3307.0762 -1905.0234 c3295.7871 -1901.4785 3285.0977 -1897.4268 3273.4043 -1895.2129 c3261.2881 -1892.918 3249.0391 -1891.4434 3237.0742 -1888.3828 c3231.1826 -1886.876 3225.6416 -1884.167 3219.8203 -1882.3799 c3214.7666 -1880.8291 3210.1563 -1878.3965 3205.0859 -1876.8447 c3199.7949 -1875.2246 3194.7744 -1872.6953 3189.7402 -1870.3809 c3187.623 -1869.4072 3185.8359 -1868.5244 3183.5801 -1868.0986 c3182.5293 -1867.8994 3179.627 -1867.1768 3178.9854 -1866.2256 c3176.0137 -1861.8174 3170.3584 -1862.8691 3167.8691 -1866.0176 C3164.623 -1866.793 3161.9668 -1869.6797 3163.2832 -1873.7822 c3166.8584 -1884.9229 3173.6377 -1894.29 3181.3555 -1902.9385 cf0 D3181.707 -1880.9111 m3184.7314 -1882.3906 3187.8369 -1883.71 3190.9102 -1885.0811 c3193.3105 -1886.1523 3195.8633 -1887.8604 3198.4063 -1888.5166 c3201.3691 -1889.2813 3204.2852 -1890.0742 3207.0352 -1891.4346 c3212.7744 -1894.2734 3219.0156 -1895.6348 3225.0527 -1897.9268 c3236.7461 -1902.3662 3248.9619 -1904.2148 3261.2656 -1906.2402 c3267.6152 -1907.2861 3273.9414 -1908.4297 3280.2031 -1909.9189 c3286.4629 -1911.4063 3292.2578 -1913.8691 3298.334 -1915.8721 c3310.5508 -1919.8994 3322.1504 -1923.9482 3333.792 -1929.458 c3346.3672 -1935.4092 3359.2217 -1940.7666 3371.6172 -1947.0977 c3382.5576 -1952.6865 3393.4043 -1959.4033 3403.7246 -1966.0156 c3411.4121 -1970.9395 3416.7432 -1979.1611 3425.8633 -1981.3457 C3424.875 -1988.6338 3423.1934 -1995.8496 3421.8613 -2003.0605 c3421.6387 -2004.2656 3421.4053 -2005.4658 3421.165 -2006.6641 C3420.75 -2006.3955 3420.291 -2006.1602 3419.7813 -2005.9678 c3414.6094 -2004.0166 3409.8584 -2000.7471 3404.873 -1998.3506 c3399.9063 -1995.9629 3394.3252 -1995.2969 3389.0371 -1993.8604 c3376.8828 -1990.5596 3364.3135 -1989.3037 3352.0303 -1986.4268 c3340.1934 -1983.6553 3328.2969 -1981.2021 3316.7744 -1977.2744 c3311.0264 -1975.3154 3305.6934 -1972.2305 3299.9902 -1970.2852 c3293.4951 -1968.0703 3287.2197 -1965.416 3281.0156 -1962.4922 c3270.4941 -1957.5342 3259.7988 -1952.416 3250.6094 -1945.1953 c3246.1406 -1941.6836 3241.917 -1937.9375 3237.2969 -1934.5781 c3232.1455 -1930.832 3227.9141 -1926.1699 3223.0605 -1922.0635 c3218.6113 -1918.2988 3213.7461 -1915.2041 3209.374 -1911.3252 c3204.5645 -1907.0586 3199.4199 -1902.9863 3194.9238 -1898.4023 c3189.6797 -1893.0557 3184.5508 -1887.2705 3180.6602 -1880.8008 C3181.8105 -1881.1836 3183.7217 -1881.8965 3181.707 -1880.9111 cf*U*u1 D3617.2969 -723.9336 m3612.3232 -723.0967 3607.9336 -724.6846 3604.1094 -727.3794 C3600.7793 -727.5537 3598.8809 -729.8701 3598.4199 -732.5059 C3597.4746 -733.5425 3596.5732 -734.6113 3595.7266 -735.6865 c3589.5313 -743.5503 3585.1367 -752.5996 3583.8398 -762.5649 c3582.6328 -771.8369 3583.5986 -780.0537 3589.627 -787.397 c3595.1143 -794.0811 3604.2998 -798.0879 3612.6055 -799.6514 c3621.4297 -801.3125 3628.8975 -799.7583 3636.625 -795.4595 c3647.084 -789.6411 3648.4648 -776.2715 3647.293 -765.6387 c3646.1094 -754.9082 3641.208 -744.1646 3633.1641 -736.8652 c3629.8311 -733.8408 3626.0166 -731.6943 3621.9434 -730.2109 C3622.3125 -727.3843 3620.9756 -724.5527 3617.2969 -723.9336 cf0 D3623.2559 -745.4678 m3629.3164 -749.6206 3632.4834 -757.5688 3634.0371 -764.436 c3635.4023 -770.4761 3635.874 -780.2715 3630.0635 -784.2344 c3625.4404 -787.3872 3620.4121 -787.9351 3614.959 -786.9082 c3609.5303 -785.8862 3604.2646 -783.4956 3600.2246 -779.7002 c3595.9121 -775.6494 3596.3301 -770.978 3596.5967 -765.4414 c3596.9365 -758.3818 3600.1348 -752.5503 3603.3682 -747.2407 c3604.8613 -744.7891 3606.6943 -742.6177 3608.6797 -740.5566 C3613.8906 -741.0186 3618.7412 -742.3745 3623.2559 -745.4678 cf*U3557.7852 -2159.9277 m3558.8555 -2144.082 3563.1406 -2128.3213 3565.2021 -2112.6709 c3566.4775 -2102.9863 3569.3066 -2093.8672 3571.8311 -2084.4629 c3574.4102 -2074.8535 3577.0508 -2065.0762 3580.5205 -2055.7461 c3587.4053 -2037.2314 3595.6582 -2018.8389 3603.5898 -2000.7393 c3607.3125 -1992.2451 3611.332 -1983.8896 3615.6934 -1975.7051 c3620.5508 -1966.5918 3627.1318 -1958.084 3632.751 -1949.416 c3643.375 -1933.0313 3653.3506 -1916.168 3662.6855 -1899.0156 c3681.3975 -1864.6377 3690.3936 -1825.5928 3695.5146 -1787.0371 c3698.0645 -1767.835 3701.9492 -1748.8965 3704.1348 -1729.6143 c3706.2705 -1710.7734 3706.6582 -1692.2432 3705.3115 -1673.3047 c3704.6533 -1664.0479 3704.3965 -1654.8525 3704.3965 -1645.5762 c3704.3965 -1636.4707 3705.457 -1626.6172 3704.1641 -1617.6064 c3701.208 -1596.998 3703.5762 -1576.083 3702.9727 -1555.3652 c3702.7012 -1546.0352 3701.207 -1536.8027 3700.8906 -1527.459 c3700.5557 -1517.5693 3700.7012 -1507.9434 3699.3828 -1498.1133 c3698.2188 -1489.4414 3698.9082 -1480.3711 3698.9082 -1471.6377 c3698.9082 -1461.1699 3697.1289 -1450.584 3696.0332 -1440.1748 c3693.8555 -1419.4844 3691.6777 -1398.793 3689.5 -1378.1025 c3688.4639 -1368.2637 3687.2393 -1358.4697 3687.0508 -1348.5693 c3687.0137 -1346.5996 3686.9951 -1344.6338 3686.9795 -1342.6699 C3691.1523 -1372.5029 3697.2471 -1402.0283 3704.124 -1431.377 c3713.4658 -1471.251 3723.0664 -1510.8799 3730.6758 -1551.1338 c3738.2256 -1591.0781 3745.9834 -1630.498 3748.5352 -1671.1426 c3749.7813 -1690.9834 3752.1543 -1710.7285 3753.1328 -1730.5986 c3754.0977 -1750.1924 3753.752 -1769.9326 3753.2305 -1789.5371 c3752.1992 -1828.3643 3749.2744 -1866.5537 3736.3496 -1903.4814 c3731.29 -1917.9355 3721.9238 -1930.2549 3715.0098 -1943.7695 c3711.6475 -1950.3408 3707.5742 -1956.54 3703.5879 -1962.7422 c3701.6133 -1965.8135 3699.667 -1968.8994 3697.7734 -1972.0215 c3695.8223 -1975.2354 3694.3633 -1979.3174 3692.0176 -1982.2285 c3683.2354 -1993.1338 3677.9971 -2006.3232 3671.3633 -2018.5303 c3663.9873 -2032.1035 3659.1289 -2046.377 3653.2422 -2060.5615 c3647.7344 -2073.8311 3643.8896 -2087.79 3638.6221 -2101.1768 c3635.9316 -2108.0146 3633.1191 -2114.7852 3630.7871 -2121.7578 c3628.1807 -2129.5508 3627.0479 -2137.8643 3625.7969 -2145.9629 c3625.082 -2150.5879 3624.374 -2155.25 3623.6992 -2159.9277 C3637.2959 -2159.9277 L3638.9922 -2146.0244 3640.6699 -2132.209 3645.5713 -2118.7891 c3651.7676 -2101.8242 3658.0039 -2084.8691 3664.2129 -2067.9121 c3670.5879 -2050.5 3678.1328 -2034.0801 3686.5449 -2017.5488 c3694.7031 -2001.5166 3703.9854 -1986.2939 3713.6387 -1971.1357 c3723.5371 -1955.5918 3732.9697 -1939.6016 3741.5625 -1923.29 c3750.3691 -1906.5723 3755.2744 -1888.0732 3759.0195 -1869.6523 c3762.9043 -1850.543 3763.6729 -1831.7197 3765.123 -1812.376 c3768.0615 -1773.168 3766.8398 -1733.6836 3763.5703 -1694.5547 c3761.9775 -1675.4814 3761.4121 -1656.1074 3758.7061 -1637.1592 c3755.835 -1617.0586 3752.7227 -1597.1465 3748.8564 -1577.2139 c3741 -1536.7041 3733.1436 -1496.4092 3723.4492 -1456.2871 c3713.8711 -1416.6445 3704.2471 -1376.8828 3699.1992 -1336.3564 c3697.4063 -1321.9668 3695.6895 -1307.5918 3695.3018 -1293.083 c3694.9043 -1278.1914 3696.9619 -1263.3398 3697.1113 -1248.4463 c3697.4424 -1215.5469 3702.2207 -1182.8574 3707.0762 -1150.3838 c3711.751 -1119.1123 3717.415 -1087.8848 3721.4912 -1056.5313 c3723.4746 -1041.2773 3726.6826 -1026.3438 3729.1055 -1011.1689 c3730.334 -1003.4697 3732.6357 -996.1265 3734.6563 -988.605 c3736.6738 -981.0889 3736.8613 -972.981 3740.0986 -965.8276 c3743.5264 -958.2529 3732.3262 -951.6382 3728.874 -959.2661 c3725.0996 -967.606 3724.3721 -976.3755 3722.1201 -985.1494 c3719.5723 -995.0781 3717.1914 -1004.6553 3715.3721 -1014.7485 c3711.8027 -1034.5498 3709.0234 -1054.3545 3705.8398 -1074.2178 c3699.3418 -1114.7646 3692.5859 -1155.2559 3687.7939 -1196.0557 c3685.3828 -1216.582 3684.5654 -1236.9971 3684 -1257.6309 c3683.7578 -1266.4346 3682.6973 -1275.2012 3682.3281 -1284.002 c3682.2168 -1286.6436 3682.1934 -1289.29 3682.2285 -1291.9395 C3681.4707 -1286.2539 3680.8242 -1280.5479 3680.458 -1274.7617 c3679.4756 -1259.2207 3679.6416 -1243.6191 3680.3223 -1228.0693 c3681.6523 -1197.6416 3685.5098 -1167.3809 3688.9424 -1137.1406 c3690.6201 -1122.3662 3692.2246 -1107.6885 3694.7979 -1093.0352 c3697.3887 -1078.2837 3700.3047 -1063.5933 3702.7139 -1048.8101 c3705.0996 -1034.165 3707.9082 -1019.9653 3711.9434 -1005.667 c3713.9668 -998.4971 3716.4453 -991.4658 3718.7998 -984.3994 c3721.0547 -977.6328 3724.1953 -971.1475 3726.1182 -964.2749 c3728.3818 -956.186 3715.8379 -952.7578 3713.583 -960.8188 c3711.2285 -969.2329 3707.4658 -977.3403 3704.6963 -985.6475 c3701.2832 -995.8872 3698.1777 -1006.1538 3695.5166 -1016.6182 c3690.6045 -1035.9365 3688.4248 -1056.0483 3684.7969 -1075.6484 c3677.4336 -1115.4189 3673.25 -1155.8506 3669.5596 -1196.1211 c3667.6875 -1216.5479 3666.5703 -1237.043 3666.8223 -1257.5596 c3667.0674 -1277.4746 3669.665 -1296.5156 3672.6641 -1316.1494 c3674.1816 -1326.084 3673.9902 -1336.1113 3674.0264 -1346.1299 c3674.0654 -1356.8574 3675.3779 -1367.4492 3676.5 -1378.1025 c3678.6777 -1398.793 3680.8555 -1419.4844 3683.0332 -1440.1748 c3684.0498 -1449.835 3685.9082 -1459.8145 3685.9082 -1469.5254 c3685.9082 -1479.0029 3685.3379 -1488.6836 3686.3828 -1498.1133 c3687.3926 -1507.2246 3687.668 -1516.0557 3687.834 -1525.2227 c3688.0166 -1535.3301 3689.5586 -1545.2871 3689.9727 -1555.3652 c3690.8184 -1575.8975 3688.5137 -1596.3965 3691.043 -1616.874 c3692.1143 -1625.5439 3691.3965 -1634.6475 3691.3965 -1643.3789 c3691.3965 -1653.3906 3691.6016 -1663.3145 3692.3115 -1673.3047 c3693.6582 -1692.252 3693.2412 -1710.7656 3691.1348 -1729.6143 c3688.9531 -1749.1348 3685.0693 -1768.3145 3682.4131 -1787.749 c3679.7012 -1807.5918 3675.5234 -1827.3633 3669.8916 -1846.5762 c3664.2715 -1865.75 3656.7871 -1883.251 3646.9072 -1900.6367 c3639.9609 -1912.8604 3632.8984 -1925.0225 3625.3574 -1936.8926 c3617.2783 -1949.6113 3608.127 -1961.8789 3601.252 -1975.2998 c3594.6318 -1988.2246 3589.0469 -2001.668 3583.5273 -2015.0889 c3577.8506 -2028.8936 3571.2773 -2042.5869 3566.4102 -2056.6836 c3561.9395 -2069.6357 3558.5801 -2083.1563 3555.0273 -2096.3857 c3553.0957 -2103.5771 3552.6279 -2110.9746 3551.3047 -2118.2773 c3550.0215 -2125.3604 3548.8027 -2132.4521 3547.6709 -2139.5654 c3546.5713 -2146.4727 3545.6885 -2153.1953 3545.209 -2159.9277 C3557.7852 -2159.9277 Lf*u1 D3410.377 -348.7168 m3408.6143 -347.3862 3406.2314 -347.0732 3403.7988 -348.7998 c3400.4336 -351.189 3397.748 -353.7393 3395.3691 -357.1182 c3392.9453 -360.563 3392.2617 -364.9443 3390.8994 -368.8325 c3389.5 -372.8267 3388.7305 -377.1807 3388.8613 -381.4116 c3389.0078 -386.1563 3391.8076 -390.0049 3394.6328 -393.5771 c3400.0137 -400.3789 3407.0195 -405.3882 3415.2949 -407.939 c3425.2002 -410.9927 3433.6348 -409.2178 3441.5234 -402.6021 c3447.9707 -397.1963 3451.0557 -389.4277 3451.8906 -381.2744 c3452.7695 -372.6914 3448.791 -364.9546 3443.501 -358.5298 c3435.4824 -348.792 3422.1797 -345.8652 3410.377 -348.7168 Cf0 D3435.3916 -390.2158 m3431.8271 -394.79 3427.5254 -397.2461 3421.7734 -396.1436 c3415.5156 -394.9443 3411.2881 -392.0303 3406.8467 -387.6553 c3405.1094 -385.9443 3403.5889 -384.1797 3402.3203 -382.0977 c3400.915 -379.792 3402.2988 -376.188 3402.9531 -373.8174 c3403.9121 -370.3418 3404.7695 -366.958 3406.5586 -364.0923 C3406.9355 -363.9561 3407.3164 -363.79 3407.6992 -363.5723 c3415.2188 -359.3003 3424.7363 -359.418 3431.6035 -365.0293 c3439.1387 -371.1865 3441.6211 -382.2202 3435.3916 -390.2158 cf*U*u1 D3793.4746 -325.6919 m3791.5098 -319.4214 3789.4033 -313.8271 3785.4121 -308.4785 c3776.8047 -296.9453 3769.9502 -284.3628 3761.9287 -272.3877 c3758.0742 -266.6323 3753.4365 -262.4434 3747.8008 -258.4771 c3745.2129 -256.6563 3742.5498 -254.9502 3739.9814 -253.1016 c3737.0918 -251.0215 3733.9551 -249.7959 3730.8818 -247.9878 c3725.6768 -244.9238 3721.6797 -240.2104 3716.1914 -237.4321 c3713.082 -235.8579 3713.9766 -235.3247 3714.2178 -232.0288 c3714.5547 -227.4297 3714.2178 -222.6743 3714.2178 -218.061 c3714.2178 -211.4131 3713.3926 -204.8081 3713.293 -198.1558 c3713.1777 -190.4478 3712.3906 -182.7896 3711.2939 -175.1655 c3710.2871 -168.1626 3707.6904 -161.4907 3705.1162 -154.9194 c3703.3457 -150.3984 3701.4502 -145.9863 3698.4082 -142.1733 c3689.2773 -130.7305 3675.335 -147.019 3669.0996 -153.2612 c3659.1572 -163.2148 3650.9941 -174.4917 3643.6582 -186.4497 c3642.0029 -189.1479 3640.9316 -192.02 3639.9023 -195.0117 c3639.4785 -196.2461 3637.7217 -197.5005 3636.8379 -198.397 c3635.2734 -199.9849 3634 -201.8447 3632.8457 -203.7393 c3630.9482 -206.8574 3629.4971 -210.0405 3627.3125 -213.0049 c3624.9805 -216.1694 3624.2041 -220.0576 3621.5313 -222.9985 c3621.4063 -223.1362 3621.2969 -223.2769 3621.1875 -223.417 C3620.6582 -222.9771 3620.1348 -222.5171 3619.6387 -222.001 c3617.5303 -219.8066 3615.4355 -217.7349 3613.2168 -215.6411 c3607.8682 -210.5908 3603.5625 -204.6597 3598.7988 -199.0537 c3594.875 -194.4365 3589.415 -189.6045 3584.1797 -186.5083 c3577.7363 -182.6978 3570.5615 -180.5645 3563.5566 -178.0493 c3560.2969 -176.8789 3557.5898 -175.1978 3554.6924 -173.3403 c3551.9004 -171.5513 3548.6309 -170.4751 3545.7129 -168.8828 c3539.0635 -165.2539 3531.7236 -162.7065 3524.4697 -160.606 c3520.918 -159.5776 3517.4277 -158.6479 3513.957 -157.8359 C3515.6445 -154.5957 3514.1777 -151.3428 3511.459 -149.2612 c3506.0781 -145.1401 3499.9619 -141.8784 3493.7178 -139.2671 c3488.7666 -137.1963 3483.8135 -135.0889 3482.0918 -129.6152 c3480.374 -124.1519 3483.7139 -116.8892 3485.5605 -111.8462 c3486.3525 -109.6816 3488.1895 -107.6611 3489.1797 -105.5259 c3490.6006 -102.4609 3491.0332 -99.7188 3490.501 -96.3882 c3489.4961 -90.1021 3482.626 -90.2432 3478.0264 -90.7295 c3474.8818 -91.062 3471.5049 -94.2231 3468.5361 -92.7451 c3465.2432 -91.1055 3465.2793 -88.5332 3465.9658 -85.0332 c3467.1924 -78.7725 3468.2715 -72.6763 3470.1367 -66.5713 c3472.2314 -59.7207 3475.7754 -53.5151 3477.6387 -46.6299 c3479.124 -41.1416 3480.3848 -36.3613 3476.3037 -31.6631 c3472.0498 -26.7656 3462.458 -30.583 3457.9521 -32.9155 c3451.9033 -36.0464 3446.1133 -40.6318 3440.4121 -44.3999 c3434.0313 -48.6167 3427.834 -53.1782 3422.0264 -58.1577 c3410.8994 -67.6987 3403.2129 -80.0063 3393.9355 -91.1821 c3389.3457 -96.7109 3386.8271 -103.1255 3383.9639 -109.6162 c3380.9121 -116.5347 3376.4111 -122.7881 3373.3555 -129.7549 c3368.5361 -140.7441 3366.8799 -151.7881 3364.4434 -163.4263 c3362.5762 -172.3501 3357.7031 -180.2109 3358.1387 -189.1348 C3346.9268 -198.1943 3338.4541 -209.8862 3329.2041 -220.8379 c3320.3057 -231.3726 3312.7236 -242.6143 3305.0225 -254.0234 c3301.5303 -259.1968 3299.2588 -264.749 3296.876 -270.4824 c3294.3047 -276.6675 3293.5625 -283.2803 3291.9043 -289.729 c3288.4102 -303.313 3285.3379 -317.103 3281.4434 -330.5776 c3279.6377 -336.8247 3278.4678 -343.1138 3276.9121 -349.4019 c3275.2988 -355.9194 3272.3916 -361.6929 3272.874 -368.6021 c3273.1484 -372.5376 3276.207 -374.6196 3279.2891 -374.8369 C3279.3662 -375.6055 3279.5781 -376.3984 3279.9697 -377.2041 c3282.8018 -383.0298 3288.7324 -383.9268 3294.0078 -386.5527 c3297.0381 -388.061 3299.8867 -390.0811 3302.6992 -391.9512 c3305.7578 -393.9854 3310.5195 -394.6543 3313.9746 -395.8901 c3320.3584 -398.1733 3325.7676 -402.6934 3332.0127 -405.2852 c3337.708 -407.6489 3342.3574 -411.7632 3348.3242 -413.4438 c3351.0449 -414.2104 3353.8389 -417.9487 3356.4736 -419.3032 c3359.501 -420.8584 3362.4248 -422.6196 3365.4082 -424.2559 c3368.5088 -425.9561 3371.752 -427.1582 3374.5332 -429.374 c3377.7383 -431.9282 3380.5957 -434.9194 3383.3457 -437.9458 c3385.2295 -440.0186 3386.5664 -442.231 3387.9502 -444.5483 C3381.6465 -444.2598 3375.998 -441.7319 3369.7861 -440.2021 c3362.3359 -438.3682 3354.584 -438.0928 3346.9512 -438.1719 c3338.543 -438.2593 3330.3223 -437.7002 3321.9424 -437.4834 c3315.8066 -437.3247 3310.0479 -435.5854 3303.8115 -435.7754 c3297.6797 -435.9629 3291.9736 -438.0508 3286.4395 -440.5391 c3281.4668 -442.7744 3277.9004 -446.6348 3276.0244 -451.7026 c3273.6328 -458.1621 3277.4609 -465.0327 3281.5527 -469.7505 c3285.5566 -474.3657 3292.0254 -477.876 3297.6104 -480.1201 c3304.3633 -482.8335 3310.5986 -486.6143 3317.377 -489.2651 c3323.4658 -491.647 3328.7178 -494.8599 3334.541 -497.7349 c3337.1035 -499 3339.5352 -500.5415 3341.7256 -502.373 c3342.9141 -503.3667 3343.916 -504.6763 3345.2656 -505.4668 c3346.9434 -506.4497 3348.6641 -506.6514 3350.1582 -507.998 c3355.0029 -512.3618 3357.9375 -517.5664 3363.8906 -520.543 c3366.7207 -521.9585 3368.8896 -525.0273 3371.2383 -527.1079 c3374.1729 -529.7065 3377.4844 -531.8506 3380.5537 -534.2788 c3386.0615 -538.6362 3391.957 -542.4727 3397.6895 -546.5171 c3403.9863 -550.9604 3411.3232 -553.7529 3418.0879 -557.3672 c3424.375 -560.7261 3430.8457 -563.5635 3437.3447 -566.479 c3444.2148 -569.561 3451.1836 -572.415 3458.7051 -573.3623 c3464.8418 -574.1348 3472.2119 -574.3652 3477.9238 -571.6152 c3484.0742 -568.6533 3487.3359 -562.7192 3489.7148 -556.6104 c3491.6738 -551.5825 3492.5947 -546.1992 3493.5879 -540.8828 C3494.9824 -541.2144 3496.5518 -541.0234 3498.1563 -540.0537 c3504.1045 -536.458 3511.4502 -535.0103 3517.2275 -531.1895 c3520.0303 -529.3359 3523.166 -528.5811 3526.0156 -526.8965 c3527.2334 -526.1768 3528.2676 -525.2324 3529.2744 -524.2563 C3529.2285 -543.5771 3529.0283 -565.5918 3528.4395 -580.6328 c3527.8271 -596.2813 3527.3965 -611.8975 3527.3965 -627.5586 c3527.3965 -631.5059 3529.4717 -638.4316 3533.2773 -640.2661 c3540.2217 -643.6147 3546.2383 -641.6758 3551.5508 -636.4346 c3555.3887 -632.6475 3558.666 -627.5654 3561.832 -623.1997 c3566.1133 -617.2944 3571.1211 -609.7842 3577.3076 -605.8506 c3577.8203 -605.5244 3578.0713 -605.2412 3578.1797 -605.0137 C3578.2109 -605.0498 3578.2354 -605.083 3578.2734 -605.123 c3579.1289 -606.0244 3580.1445 -606.7168 3581.042 -607.5723 c3583.4766 -609.8901 3586.3438 -611.814 3589.4033 -613.1777 c3595.7656 -616.0137 3601.5996 -614.9565 3603.7793 -607.6953 c3604.6924 -604.6543 3604.1563 -601.0322 3604.1563 -597.9136 c3604.1563 -594.7617 3604 -591.6025 3604 -588.4531 C3604 -588.4487 L3608 -589.6143 3611.0947 -590.5703 3614.917 -591.0723 c3620.1006 -591.7529 3626.1934 -592.8193 3630.9688 -590.2109 c3635.7031 -587.625 3636.5361 -581.2568 3636.3164 -576.4639 c3636.2129 -574.1997 3635.9922 -571.5864 3635.3447 -569.2285 C3639.3262 -569.4556 3643.3418 -569.3203 3647.3281 -569.3203 c3653.1992 -569.3203 3658.5244 -569.7124 3663.9912 -567.354 c3672.1133 -563.8501 3675.1191 -553.874 3671.4453 -546.3149 c3667.3809 -537.9556 3657.9629 -532.9048 3651.1211 -527.1846 c3649.4902 -525.8203 3647.6719 -525.4067 3645.9766 -525.6299 C3643.1699 -524.0137 3640.3066 -522.5 3637.4717 -520.9272 c3635.4287 -519.7939 3633.5576 -518.4399 3631.4043 -517.5313 c3629.0127 -516.5229 3627.667 -514.1392 3625.1953 -513.0967 c3623.29 -512.2935 3622.3223 -510.2925 3620.541 -509.3184 c3618.5254 -508.2168 3616.459 -507.335 3614.3232 -506.4951 c3609.4541 -504.5796 3604.4727 -503.3687 3599.7158 -501.1069 c3596.8389 -499.7388 3593.9531 -498.3936 3591.0645 -497.0576 C3596.6934 -493.8301 3601.8359 -489 3606.5879 -485.1455 c3610.1035 -482.2939 3612.877 -478.5762 3616.0215 -475.3374 c3619.709 -471.5391 3623.666 -468.0029 3627.626 -464.4932 c3641.8633 -451.8745 3650.1074 -434.2822 3657.0254 -416.8774 c3660.3047 -408.6284 3662.1016 -399.7671 3665.6553 -391.667 c3669.499 -382.9063 3672.7998 -372.5762 3674.0186 -363.0596 c3675.5703 -350.9478 3677.5518 -337.0806 3675.8477 -324.252 C3677.8594 -325.5122 3679.9414 -326.6309 3681.8916 -327.6421 c3688.499 -331.0693 3696.291 -332.2632 3703.333 -334.5884 c3717.5195 -339.2729 3732.3887 -341.9463 3747.2979 -342.9077 c3754.2168 -343.354 3761.1279 -343.2227 3768.0225 -342.5107 c3774.1875 -341.874 3781.7617 -341.3228 3787.4883 -338.8521 c3792.9102 -336.5132 3795.2275 -331.2847 3793.4746 -325.6919 cf0 D3375.2119 -173.4521 m3377.4736 -166.2676 3378.3906 -158.7979 3379.8252 -151.4258 c3381.1953 -144.3887 3383.7305 -137.7402 3386.9033 -131.3276 c3390.2109 -124.6416 3394.5977 -118.4561 3397.1191 -111.4048 c3399.6211 -104.4097 3404.5068 -98.8345 3409.0322 -93.1182 c3413.6982 -87.2231 3417.7998 -81.0078 3422.8789 -75.437 c3432.7891 -64.5654 3445.2402 -56.561 3457.6152 -48.8086 c3460.1201 -47.2397 3462.3965 -45.4336 3464.9551 -43.9683 C3463.1777 -49.4272 3460.3633 -54.5513 3458.5664 -60.0278 c3456.5674 -66.1196 3455.1719 -72.1206 3454.0215 -78.4214 c3452.8135 -85.0322 3451.9707 -91.2627 3454.6836 -97.6064 c3457.0488 -103.1377 3466.0742 -106.8667 3471.6406 -106.1987 c3472.5537 -106.0889 3473.418 -105.8628 3474.2598 -105.5884 C3468.7705 -115.6494 3466.3174 -129.8081 3472.5059 -139.7412 c3475.666 -144.8125 3481.0918 -147.8667 3486.4082 -150.1802 c3489.6934 -151.6099 3492.9434 -153.1274 3496.085 -154.8359 C3491.2627 -154.3774 3486.3555 -154.2104 3481.2539 -154.4077 c3466.6553 -154.9722 3452.0664 -155.2056 3437.5293 -156.7881 c3422.5127 -158.4229 3406.584 -160.2622 3392.6426 -166.416 c3386.7949 -168.9976 3380.9541 -172.1675 3375.4707 -175.4561 c3375.043 -175.7129 3374.625 -175.9951 3374.2031 -176.2676 C3374.5645 -175.3413 3374.9121 -174.4063 3375.2119 -173.4521 cf3623.3301 -579.731 m3623.2793 -580.6289 3622.248 -579.7368 3623.3447 -579.2017 C3623.3379 -579.3784 3623.3398 -579.5537 3623.3301 -579.731 cf3594.7705 -513.0884 m3598.9346 -515.0684 3603.2363 -516.6006 3607.6367 -517.9502 c3612.6113 -519.4766 3615.5986 -523.0405 3620.248 -525.001 c3620.1484 -524.9595 3622.8223 -527.5244 3623.5742 -527.9785 c3625.4844 -529.1328 3627.4551 -530.1089 3629.377 -531.2695 c3633.9355 -534.0239 3638.7598 -536.2813 3643.2451 -539.167 c3644.4688 -539.9536 3645.6729 -540.2593 3646.7949 -540.2173 C3650.6729 -543.1768 3654.5791 -546.0923 3657.9033 -549.7002 c3663.1758 -555.4219 3656.6221 -556.3203 3651.1816 -556.3203 c3644.9131 -556.3203 3638.6641 -556.2661 3632.4033 -556.1021 c3626.6885 -555.9526 3619.5977 -558.2119 3620.3828 -565.3164 c3620.6973 -568.1553 3622.2676 -570.4131 3622.8594 -573.1294 c3623.2734 -575.0308 3623.4063 -576.9326 3623.3535 -578.8638 C3622.2061 -578.7773 3621.043 -578.5591 3619.9199 -578.4912 c3615.374 -578.2163 3611.1523 -577.4146 3606.9268 -575.6865 c3600.2832 -572.9702 3592.6953 -576.2852 3591.3574 -583.4849 c3590.8203 -586.3682 3591 -589.3022 3591 -592.2124 C3591 -599.0293 L3589.9121 -598.0933 3588.9121 -597.0542 3587.7188 -596.2285 c3585.0449 -594.3784 3582.9551 -591.3018 3579.1221 -591.7935 c3579.1182 -591.7939 3579.1152 -591.7949 3579.1113 -591.7954 C3578.8184 -590.9229 3578.3057 -590.0635 3577.5137 -589.2632 c3570.0781 -581.749 3569.4551 -568.4126 3567.8867 -558.3989 c3565.9248 -545.8745 3563.0322 -532.9712 3564.3418 -520.252 c3565.2002 -511.915 3552.1914 -511.998 3551.3418 -520.252 c3549.916 -534.0962 3553.2842 -548.2188 3555.3506 -561.8545 c3557.2197 -574.188 3558.7051 -587.6768 3567.2139 -597.2412 C3563.9961 -599.9365 3561.2188 -603.312 3558.3789 -606.7271 c3553.1309 -613.0386 3548.5176 -619.8564 3543.3145 -626.1826 c3542.6943 -626.9102 3542.0352 -627.5996 3541.3359 -628.251 C3541.1494 -628.332 3540.9932 -628.4185 3540.8584 -628.5083 C3540.7344 -627.8677 3540.6182 -627.2256 3540.4609 -626.6094 c3539.3623 -622.3193 3540.3027 -616.3408 3540.3496 -611.9355 c3540.584 -590.3936 3542 -568.8965 3542 -547.3467 C3542 -489.2012 L3545.2285 -490.2095 3548.498 -491.8032 3551.4551 -493.0542 c3556.4453 -495.1655 3561.1953 -497.6992 3566.1387 -499.916 c3575.7441 -504.2236 3585.2666 -508.5693 3594.7705 -513.0884 cf3774.6846 -328.4536 m3770.2676 -329.3945 3765.7637 -329.7964 3761.2637 -330.0537 c3751.2959 -330.623 3741.1543 -329.7246 3731.3242 -328.0967 c3721.7148 -326.5059 3712.5293 -323.8428 3703.2705 -320.9155 c3698.8633 -319.5225 3694.3818 -318.3633 3689.9355 -317.1055 c3688.0801 -316.5815 3686.2207 -315.2314 3684.6025 -314.2188 c3683.1221 -313.292 3679.6982 -311.7134 3678.7432 -310.3374 c3676.7383 -307.4482 3673.5684 -306.9458 3670.9375 -307.8428 C3670.5996 -307.1895 3670.25 -306.541 3669.874 -305.9033 c3665.625 -298.6865 3654.3867 -305.2241 3658.6494 -312.4648 c3663.0293 -319.9048 3663.041 -328.2002 3663.082 -336.6763 c3663.125 -345.562 3662.5996 -354.2578 3660.9336 -362.9941 c3659.332 -371.397 3656.5439 -380.2886 3653.1143 -388.106 c3649.7666 -395.7354 3648.0859 -404.1099 3645.083 -411.9043 c3639.3135 -426.8843 3632.0498 -443.3525 3619.7598 -454.1328 c3613.1445 -459.9351 3606.6445 -465.8838 3600.9316 -472.5933 c3598.1191 -475.895 3594.3203 -478.2656 3590.9355 -480.915 c3587.8418 -483.3359 3584.8125 -486.3379 3580.9453 -487.3789 c3578.9023 -487.9287 3577.5967 -489.1406 3576.9141 -490.6089 C3574.9023 -489.7031 3572.8906 -488.7988 3570.877 -487.8955 c3566.002 -485.709 3561.2695 -483.2471 3556.3457 -481.1641 c3551.7959 -479.2393 3546.9121 -476.5728 3542.0293 -475.8496 c3539.9609 -475.5435 3537.9395 -475.9683 3536.4414 -477.0537 C3532.9756 -476.6646 3529.1709 -478.6426 3529.1709 -483 C3529.2598 -493.644 3529.2803 -508.4717 V3528.5596 -508.6064 3527.8184 -508.875 3527.0684 -509.3184 c3524.5107 -510.8306 3522.4189 -512.7969 3520.3145 -514.873 c3518.2354 -516.9229 3514.582 -517.6382 3512.0254 -519.1064 c3506.9199 -522.0381 3501.252 -523.959 3495.9443 -526.5122 C3496.3643 -522.043 3496.4961 -517.5635 3496.499 -512.9604 c3496.5049 -505.2358 3497.8564 -498.0518 3499.0127 -490.4512 c3500.2471 -482.335 3500.4893 -474.3042 3500.4893 -466.1118 c3500.4893 -459.1143 3501.1484 -452.1904 3501.1484 -445.2104 c3501.1484 -437.1582 3499.2217 -429.2856 3498.2734 -421.3247 c3497.4609 -414.5093 3497.5127 -407.3228 3495.7119 -400.6851 c3494.9092 -397.7275 3494.3652 -395.6479 3494.4209 -392.5596 c3494.4844 -389.0566 3493.1582 -385.873 3490.6035 -383.5166 c3484.4551 -377.8428 3475.2383 -387.0127 3481.4121 -392.709 c3481.7734 -393.043 3481.5205 -398.7349 3481.8828 -400.041 c3482.6709 -402.8896 3483.7979 -405.5249 3483.9414 -408.5098 c3484.3223 -416.4365 3485.5547 -424.479 3486.7568 -432.3169 c3487.8701 -439.5757 3488.4697 -446.4775 3487.709 -453.8188 c3486.9121 -461.5112 3487.666 -469.4131 3487.3984 -477.1489 c3487.1348 -484.8174 3485.6631 -492.3945 3484.1738 -499.8999 c3482.6348 -507.6533 3483.6865 -516.0137 3483.3359 -523.874 c3483.0186 -531.0234 3481.0996 -538.8296 3479.3584 -545.7617 c3477.9727 -551.2822 3476.5293 -559.0317 3470.1563 -560.5303 c3463.7813 -562.0293 3456.4297 -560.0356 3450.459 -557.9424 c3443.3096 -555.4365 3436.1484 -552.0669 3429.3867 -548.6611 c3416.0586 -541.9473 3403.4355 -535.0366 3391.333 -526.2622 c3385.8779 -522.3076 3380.5254 -518.2056 3375.7578 -513.4385 c3374.6992 -512.3799 3373.5869 -510.8857 3372.2246 -510.2051 c3370.8086 -509.4966 3368.4385 -508.7939 3367.332 -507.6133 c3364.9473 -505.0693 3363.0293 -502.1816 3360.502 -499.7534 c3358.3809 -497.7153 3356.0176 -495.9619 3353.3242 -494.7813 c3351.3125 -493.8989 3349.625 -491.978 3347.3281 -490.3335 c3344.9063 -488.5996 3342.3848 -487.1431 3339.7158 -485.8252 c3336.498 -484.2363 3333.6768 -482.0342 3330.4082 -480.5654 c3324.1553 -477.7563 3317.8271 -475.4399 3311.7852 -472.1631 c3305.9385 -468.9922 3299.7207 -467.2734 3294.1904 -463.4507 c3290.6357 -460.9937 3285.7627 -456.2305 3290.8203 -452.9292 c3295.5361 -449.8506 3301.4209 -448.771 3306.9277 -448.7124 c3313.1367 -448.6465 3319.5059 -450.2432 3325.7432 -450.6592 c3334.166 -451.2212 3342.4102 -451.1509 3350.8535 -451.1519 c3358.6563 -451.1528 3365.9844 -452.4272 3373.4248 -454.7188 c3380.2129 -456.8091 3386.1299 -458.0962 3393.2832 -457.3154 c3399.2549 -456.6636 3404.8701 -452.5781 3403.5635 -445.9072 c3403.0459 -443.2637 3401.5986 -441.3003 3399.9521 -439.2417 c3398.002 -436.8047 3396.8643 -433.8467 3394.8242 -431.4058 c3390.3398 -426.0391 3385.3652 -421.3052 3379.7627 -417.1226 c3373.8203 -412.6865 3365.9434 -410.8008 3360.0186 -406.2197 c3357.3281 -404.1396 3354.9785 -402.1445 3351.7793 -400.9082 c3349.2207 -399.9194 3347.2188 -398.7178 3344.8965 -397.1792 c3342.5313 -395.6113 3339.5957 -394.4624 3336.9727 -393.374 c3333.5254 -391.9434 3330.1982 -389.7148 3326.9639 -387.854 c3323.9023 -386.0933 3320.6992 -384.6772 3317.4307 -383.3545 c3314.2578 -382.0703 3310.5449 -381.5806 3307.6709 -379.6694 c3304.8691 -377.8062 3301.9844 -376.0322 3298.9727 -374.5327 c3296.7861 -373.4448 3292.3203 -372.9585 3291.1943 -370.6426 c3289.9707 -368.126 3287.9063 -367.1904 3285.835 -367.332 C3285.8652 -361.2954 3289 -355.8433 3290.0762 -349.9331 c3291.459 -342.3462 3293.6943 -334.9902 3295.627 -327.5322 c3299.4375 -312.8262 3303.7383 -298.0654 3306.6289 -283.1563 c3309.3545 -269.1016 3318.2109 -257.5366 3326.0244 -245.918 c3334.3281 -233.5703 3344.7539 -222.5425 3354.1416 -211.0176 c3357.7031 -206.6436 3361.9287 -202.811 3366.2783 -199.2041 C3368.8398 -198.8589 3371.2129 -197.2065 3371.835 -194.6587 C3376.3906 -190.9067 3380.9111 -187.1719 3386.1357 -184.3481 c3392.0879 -181.1313 3397.9561 -177.917 3404.4365 -175.9028 c3412.126 -173.5127 3420.0723 -172.1992 3428.0195 -171.0068 c3442.8184 -168.7861 3457.876 -167.9673 3472.8262 -167.5972 c3487.6631 -167.2295 3501.9824 -166.7363 3516.2051 -171.7837 c3521.1748 -173.5474 3526.3457 -174.6436 3531.2959 -176.5229 c3536.1621 -178.3701 3540.5645 -181.709 3545.4707 -183.3125 c3549.9883 -184.7891 3553.958 -188.1758 3558.4609 -189.9688 c3563.3135 -191.9014 3568.3867 -193.2437 3573.1699 -195.3569 c3582.7188 -199.5752 3588.834 -207.7891 3595.3066 -215.5244 c3598.3184 -219.123 3601.3428 -221.9316 3604.0254 -224.8335 c3605.7129 -226.6592 3607.7441 -228.1079 3609.4209 -229.96 c3610.6582 -231.3262 3613.4785 -232.9307 3614.3076 -234.4229 c3617.0889 -239.4292 3623.208 -237.9541 3625.5088 -234.1792 C3627.2529 -234.4702 3629.1289 -233.9468 3630.7246 -232.1909 c3633.0117 -229.6738 3634.9365 -226.9941 3636.1992 -223.8174 c3637.4805 -220.5903 3639.7861 -218.0361 3641.5811 -215.0898 c3643.4414 -212.0342 3644.5752 -209.0664 3647.1309 -206.4727 c3650.0527 -203.5078 3651.624 -200.8354 3652.9707 -196.9209 c3654.9639 -191.1265 3659.3936 -185.4414 3662.8906 -180.4365 c3667.0313 -174.5107 3672.0293 -168.833 3677.0869 -163.668 c3681.1191 -159.5498 3684.7676 -155.1255 3689.6855 -152.0332 C3689.9863 -152.5591 3690.2363 -153.1777 3690.4707 -153.627 c3691.5117 -155.624 3692.3525 -157.792 3693.1719 -159.8853 c3695.7881 -166.563 3698.0586 -173.2349 3699.0049 -180.354 c3700.0215 -188.0093 3700.2051 -195.6777 3700.3604 -203.3848 c3700.5 -210.29 3701.2178 -217.1162 3701.2178 -224.0474 c3701.2178 -227.5371 3701.4053 -231.0596 3700.9619 -234.5264 c3700.5313 -237.9019 3701.0635 -242.1982 3703.7656 -244.6025 c3708.1484 -248.501 3713.6885 -250.9854 3718.3701 -254.5688 c3720.7842 -256.417 3722.9346 -258.397 3725.5771 -259.9521 c3728.7461 -261.8174 3730.8096 -262.354 3733.4199 -264.3267 c3738.5244 -268.1836 3744.1631 -271.1509 3748.5273 -275.9229 c3753.6797 -281.5557 3757.6133 -289.4238 3761.4453 -295.9946 c3764.752 -301.6621 3768.0342 -307.4243 3772.0928 -312.5908 c3774.0293 -315.0566 3775.9629 -317.3604 3777.5928 -320.063 c3779.0195 -322.4312 3779.5684 -324.958 3780.376 -327.5068 C3778.4434 -327.7393 3776.6025 -328.0449 3774.6846 -328.4536 cf*U3588.2598 -536.5068 m3591.0811 -538.3657 3592.9111 -541.4995 3594.9727 -544.1079 c3597.3916 -547.1685 3600.5205 -549.6025 3602.7793 -552.7983 c3604.8193 -555.6855 3608.416 -557.0376 3611.6719 -555.1299 c3614.5303 -553.4561 3616.0527 -549.1357 3614.0039 -546.2368 c3611.2139 -542.2886 3607.4766 -539.2578 3604.5879 -535.4473 c3601.6543 -531.5791 3598.9268 -527.9873 3594.8223 -525.2813 c3587.7988 -520.6533 3581.2949 -531.9155 3588.2598 -536.5068 cf*u1 D2098.3711 -229.6606 m2103.5234 -232.6782 2111.2783 -231.4595 2116.8955 -231.0625 c2123.6338 -230.5864 2130.3447 -229.5762 2137.0137 -228.5342 c2143.8125 -227.4717 2150.1094 -225.1787 2156.5898 -222.9106 c2169.4463 -218.4121 2182.3076 -214.0317 2194.9004 -208.8042 c2207.0449 -203.7617 2218.0957 -197.2539 2229.0898 -190.0854 c2234.6934 -186.4316 2240.1514 -182.5444 2245.2598 -178.2212 c2248.2002 -175.7324 2251.9033 -173.5527 2255.0645 -171.0195 C2255.3535 -171.0713 2255.6494 -171.1123 2255.9619 -171.1299 c2261.7217 -171.4585 2266.5078 -175.3916 2272.0234 -176.6279 c2278.5029 -178.0796 2284.9531 -179.6582 2291.4277 -181.1304 c2297.7334 -182.5645 2304.3564 -182.7231 2310.7461 -183.7632 c2317.3252 -184.834 2323.5156 -186.9116 2329.8066 -189.0376 c2335.832 -191.0737 2341.5117 -191.5659 2347.8223 -191.3789 c2354.3604 -191.1851 2360.9082 -191.4268 2367.0928 -193.7207 c2372.9102 -195.8799 2379.5146 -195 2385.6426 -195 C2399.335 -195 L2396.9141 -199.3604 2394.7773 -203.9492 2392.3291 -208.2163 c2388.7676 -214.4219 2385.8545 -220.8369 2383.1777 -227.4834 c2381.375 -231.959 2378.6426 -237.9775 2378.6074 -242.8423 c2378.5566 -249.7417 2385.7754 -251.5293 2391.1758 -250.6147 c2393.8691 -250.1582 2396.3369 -248.7139 2399.1211 -248.3545 c2400.8564 -248.1304 2402.1563 -248.1421 2403.7969 -247.3975 c2404.1543 -247.2354 2404.459 -247.1323 2404.7236 -247.0596 C2405.209 -248.3125 2405.5947 -249.9556 2405.9492 -250.6431 c2407.1543 -252.9824 2409.1445 -255.2178 2411.2939 -256.7256 c2416.1182 -260.1104 2421.0918 -259.8101 2426.373 -257.7676 c2429.2051 -256.6724 2431.6787 -254.8506 2434.4971 -253.7607 c2436.9629 -252.8066 2438.4658 -254.2349 2440.9512 -254.998 c2445.6748 -256.4482 2451.6475 -255.1523 2455.2725 -251.9546 c2460.1855 -247.6211 2458.4805 -238.4834 2458.3398 -232.7959 c2458.0518 -221.207 2455.5654 -210.0684 2452.8066 -198.9199 C2460.7197 -201.6016 2469.7842 -201.2915 2478.0518 -200.6152 c2489.418 -199.6855 2502.4785 -198.4326 2512.207 -191.9648 C2512.7412 -192.6865 2513.2881 -193.3936 2513.8711 -194.0576 c2516.5361 -197.0942 2517.8984 -200.7158 2521.3926 -203.0557 c2525.2012 -205.6055 2529.0068 -208.2837 2532.4893 -211.2197 c2540.3418 -217.8408 2551.9551 -213.2832 2560.6494 -210.9292 c2570.4121 -208.2861 2579.8262 -204.7158 2589.335 -201.314 c2593.5752 -199.7969 2597.5313 -197.6118 2601.2344 -195.0728 c2605.6338 -192.0566 2610.4941 -189.7285 2615.1309 -187.0923 c2618.9824 -184.9019 2621.5869 -181.2783 2625.5078 -179.1108 c2630.291 -176.4658 2635.082 -173.8291 2639.9043 -171.2539 c2648.5898 -166.6147 2656.1426 -161.6016 2662.1904 -153.707 c2664.8086 -150.29 2668.959 -146.4727 2667.5156 -141.6177 c2666.2637 -137.4082 2663.3418 -135.6372 2659.4541 -135.188 C2656.3018 -130.7031 2651.541 -129.123 2646.5078 -127.3369 c2644.0781 -126.4741 2641.9229 -124.5684 2639.8398 -123.1011 c2636.6973 -120.8857 2633.1455 -119.2251 2629.7783 -117.3784 c2623.8281 -114.1147 2618.2578 -109.9683 2612.0898 -107.0151 c2605.5439 -103.8813 2598.4307 -102.2144 2591.666 -99.6743 c2585.207 -97.249 2578.376 -95.8696 2571.6309 -94.5098 c2568.0098 -93.7793 2564.3896 -93.0513 2560.7871 -92.229 c2556.6055 -91.2744 2552.7441 -88.6216 2548.5742 -87.415 c2541.0928 -85.25 2532.8281 -84.5522 2525.1602 -83.1582 c2517.0801 -81.689 2509.0537 -79.9741 2501.0146 -78.293 c2487.7832 -75.5264 2474.791 -72.8447 2461.377 -71.8438 C2461.0771 -71.229 2460.6836 -70.6626 2460.1621 -70.1978 c2457.1338 -67.5015 2452.9443 -67.147 2449.0596 -66.811 c2443.6445 -66.3423 2438.4805 -63.2891 2433.5479 -61.2939 c2421.3389 -56.3545 2408.0664 -54.585 2395.1504 -52.5205 c2389.1143 -51.5557 2383.1152 -50.0444 2377.1367 -49.0967 c2374.5381 -48.6846 2372.166 -47.5869 2369.4775 -47.2749 c2366.4219 -46.9199 2364.2656 -48.2432 2361.9492 -50.063 c2358.126 -53.0664 2356.6035 -60.4502 2355.7539 -64.9102 c2354.8418 -69.7041 2353.6719 -75.4463 2354.1328 -80.6396 C2343.1748 -82.6333 2332.127 -84.8789 2321.5596 -88.0923 c2309.8008 -91.6685 2298.498 -96.8369 2288.0322 -103.2451 c2283.3145 -106.1333 2278.625 -108.98 2274.0225 -112.0459 c2271.0029 -114.0571 2267.877 -115.8677 2265.3672 -118.3374 C2257.4639 -114.8545 2251.9443 -105.4961 2245.5186 -100.1406 c2240.9248 -96.312 2235.7832 -93.1997 2230.7871 -89.9399 c2225.2451 -86.3237 2221.0605 -81.2578 2216.252 -76.7515 c2206.5957 -67.7002 2194.5049 -62.3755 2182.1943 -57.9019 c2168.9844 -53.1011 2155.7549 -51.709 2141.8008 -51.709 c2134.8877 -51.709 2128.0352 -51.5386 2121.1621 -52.3657 c2116.1406 -52.9702 2109.6377 -52.543 2106.6816 -57.5889 c2103.835 -62.4478 2108.7295 -69.8203 2110.2832 -74.481 c2112.3916 -80.8047 2114.6465 -87.0283 2117.4922 -93.0635 c2123.0938 -104.9434 2132.3789 -115.1992 2140.9473 -125.0049 c2145.1133 -129.7725 2148.5625 -135.8452 2153.584 -139.5264 C2151.3672 -140.916 2148.4121 -141.7036 2146.2168 -143.0537 c2140.8535 -146.3535 2135.5342 -149.8574 2130.249 -153.2979 c2125.1846 -156.5942 2120.6025 -160.6738 2116.2432 -164.8364 c2111.6104 -169.2612 2106.5332 -173.5874 2104.0703 -179.5317 c2101.9082 -184.749 2098.7041 -189.314 2097.1553 -194.8281 c2095.583 -200.4268 2093.5762 -206.3794 2093.4102 -212.2563 c2093.3281 -215.061 2094.2451 -217.7173 2094.2969 -220.5005 c2094.3564 -223.7363 2095.3809 -227.9092 2098.3711 -229.6606 cf0 D2435.5088 -240.1729 m2430.999 -240.313 2426.5762 -243.1787 2422.7246 -245.2378 c2418.8438 -247.3125 2417.6572 -245.498 2416.3174 -241.9414 c2414.7783 -237.8545 2412.5039 -235.3887 2408.4531 -233.7437 c2406.7324 -233.0449 2404.2637 -233.7539 2402.5566 -234.1123 C2401.666 -234.3457 2400.7949 -234.6392 2399.9453 -234.9917 c2399.4512 -235.1772 2399.0977 -235.3198 2398.8418 -235.4307 C2398.5986 -235.4375 2398.2148 -235.4712 2397.626 -235.5474 c2396.3457 -235.7129 2395.0977 -235.9438 2393.8564 -236.2207 C2393.8906 -236.0889 2393.9238 -235.9507 2393.9619 -235.8262 c2394.8115 -233.0337 2395.9297 -230.3154 2397.0879 -227.6401 c2401.3945 -217.6934 2407.0869 -208.3862 2412.2871 -198.873 c2414.709 -194.4424 2418.0137 -190.9482 2421.5469 -187.3813 c2423.7949 -185.1108 2427.7754 -178.4722 2430.623 -177.9922 c2431.7988 -177.7944 2432.7275 -177.3652 2433.4453 -176.7881 C2434.582 -178.0107 2434.8086 -180.8022 2435.2969 -182.7773 c2436.5078 -187.6733 2437.8223 -192.5503 2439.0342 -197.4492 c2441.7773 -208.54 2444.7393 -219.4189 2445.2734 -230.8779 c2445.3926 -233.4492 2445.4131 -236.0259 2445.4395 -238.5991 c2445.4473 -239.8516 2445.4512 -241.104 2445.4531 -242.3564 C2442.0146 -242.2241 2439.1523 -240.0596 2435.5088 -240.1729 cf2367.7637 -75.0132 m2368.2861 -72.8638 2367.9727 -70.5547 2368.2891 -68.3662 c2368.5898 -66.2939 2369.209 -64.2842 2369.8652 -62.3032 c2370.082 -61.7158 2370.3086 -61.1328 2370.5371 -60.5498 C2370.6445 -60.5894 2370.751 -60.6289 2370.8848 -60.667 c2380.6367 -63.4409 2390.5137 -64.8398 2400.5469 -66.4756 c2408.373 -67.752 2416.1309 -69.3066 2423.6865 -71.6416 C2418.6289 -71.9307 2413.5732 -72.3657 2408.5146 -73.0317 c2401.0693 -74.0122 2393.5762 -74.4336 2386.1094 -75.2183 c2379.7061 -75.8911 2373.4561 -77.1216 2367.1641 -78.2964 C2367.2402 -77.2764 2367.4668 -76.2354 2367.7637 -75.0132 cf2109.6934 -198.2842 m2111.1631 -194.3691 2113.1484 -190.9399 2114.8916 -187.1514 c2115.6182 -185.5713 2115.999 -183.4194 2117.3193 -182.2236 c2118.9238 -180.771 2120.2197 -179.1997 2121.7432 -177.6768 c2128.1846 -171.2383 2134.7813 -165.6587 2142.5801 -160.9307 c2146.5137 -158.5454 2150.248 -155.8628 2154.1563 -153.458 c2155.9775 -152.3374 2158.0469 -151.5527 2159.9863 -150.666 c2161.5518 -149.9507 2162.8037 -148.1924 2164.4004 -147.8394 c2167.2031 -147.2197 2169 -144.3501 2169 -141.5718 c2169 -141.2764 2169 -141 Y2169 -139.6123 2168.6885 -138.4409 2168.165 -137.4814 C2168.4746 -134.043 2166.3975 -130.1328 2161.957 -129.751 c2158.9805 -129.4951 2154.7207 -121.1191 2152.9629 -118.998 c2147.9141 -112.9038 2142.4727 -107.1821 2137.7246 -100.8306 c2132.9492 -94.4429 2128.9648 -87.769 2126.0586 -80.3286 c2124.6602 -76.748 2123.502 -73.0742 2122.2871 -69.4292 c2121.835 -68.0732 2121.2363 -66.7051 2120.6455 -65.3276 C2121.4268 -65.2705 2122.2109 -65.2393 2122.9355 -65.1523 c2127.2891 -64.6284 2131.6191 -64.709 2135.9961 -64.709 c2143.9551 -64.709 2152.0176 -64.2998 2159.9131 -65.4907 c2174.2432 -67.6519 2189.8936 -73.2524 2201.8398 -81.5474 c2207.7549 -85.6553 2212.6191 -91.4224 2217.666 -96.5054 c2222.458 -101.333 2229.5762 -104.4502 2235.0977 -108.3994 c2245.3125 -115.7075 2251.3359 -128.3994 2264.1533 -131.6943 C2267.0137 -133.8433 2271.2002 -133.9219 2273.1035 -129.7764 c2274.3418 -127.0801 2276.6328 -125.6685 2279.1123 -124.2046 c2281.9336 -122.5386 2284.4824 -120.4648 2287.335 -118.8516 c2293.7783 -115.2061 2299.8594 -111.0176 2306.5449 -107.7983 c2319.8672 -101.3818 2334.2637 -97.6211 2348.8008 -95.2466 c2363.2168 -92.8916 2377.1914 -89.0024 2391.8154 -87.6572 c2407.3867 -86.2246 2422.6807 -84.1782 2438.3457 -84.2334 c2454.1426 -84.2896 2469.3984 -84.9741 2484.8975 -88.1768 c2500.4063 -91.3813 2515.8779 -94.6343 2531.46 -97.4673 c2539.4766 -98.9248 2546.8535 -100.0703 2554.207 -103.7295 c2557.2588 -105.248 2561.083 -105.605 2564.3955 -106.2852 c2568.5293 -107.1338 2572.668 -107.9395 2576.7813 -108.8848 c2583.4199 -110.4102 2589.5693 -113.1812 2596.0938 -114.957 c2603.4941 -116.9717 2609.5156 -120.3481 2615.9307 -124.4248 c2621.4453 -127.9292 2627.6035 -130.5034 2633.2793 -134.3262 c2636.1143 -136.2358 2638.707 -138.1909 2641.9238 -139.436 c2643.5635 -140.0703 2647.5781 -140.7148 2648.54 -142.1924 c2649.5547 -143.7529 2650.9043 -144.6377 2652.3369 -144.9985 C2652.3721 -145.0605 2652.4121 -145.1196 2652.4492 -145.1807 C2651.6172 -146.269 2650.7715 -147.3413 2649.8887 -148.3936 c2647.3379 -151.436 2644.1924 -153.7627 2640.8535 -155.8643 c2634.3799 -159.9395 2627.3535 -163.3066 2620.6543 -166.9985 c2614.0479 -170.6387 2608.8154 -175.7886 2602.1699 -179.4146 c2595.5391 -183.0327 2589.6563 -187.2935 2582.5557 -190.0059 c2575.3555 -192.7554 2568.0488 -195.2192 2560.6592 -197.4097 c2557.2324 -198.4258 2553.7715 -199.3228 2550.2969 -200.1621 c2546.9551 -200.9697 2542.6553 -202.96 2539.8018 -200.3848 c2537.5859 -198.3862 2534.959 -196.7759 2532.5527 -195.0229 c2531.1445 -193.9976 2529.5684 -193.0933 2528.2285 -191.9858 c2526.9375 -190.9185 2526.0898 -188.731 2525.1211 -187.3677 c2523.0811 -184.4941 2521.3047 -181.4507 2519.2441 -178.5791 c2517.9111 -176.7222 2513.6836 -173.2017 2513.4375 -170.8379 c2512.5791 -162.5864 2499.5703 -162.5024 2500.4375 -170.8379 c2500.877 -175.0605 2502.2578 -178.0278 2504.8125 -181.2783 C2497.4043 -185.7529 2488.4063 -186.2993 2479.9521 -187.4131 c2471.873 -188.478 2458.6426 -189.9756 2452.1152 -183.9785 c2451.1084 -183.0527 2450.0195 -182.5303 2448.9297 -182.3174 C2447.125 -174.1841 2444.3604 -165.5518 2435.9453 -163.6831 c2433.3477 -163.106 2431.2275 -163.9834 2429.8037 -165.5029 C2428.9932 -165.3306 2428.1133 -165.2979 2427.168 -165.457 c2422.4219 -166.2559 2418.6348 -170.8911 2415.7861 -174.4429 c2413.5781 -177.1958 2411.125 -179.6846 2408.7344 -182.2373 C2408.2041 -182.0884 2407.6299 -182 2407 -182 C2387.4814 -182 L2381.2754 -182 2374.8652 -182.7871 2368.9883 -180.6064 c2363.5566 -178.5908 2356.9658 -178.292 2351.2275 -178.2905 c2347.9648 -178.29 2344.3711 -178.9604 2341.1426 -178.521 c2337.9287 -178.0835 2334.8008 -177.0166 2331.7412 -175.9829 c2325.9414 -174.0229 2320.2432 -172.2969 2314.2021 -171.2251 c2307.1992 -169.9829 2300.0137 -169.7603 2293.083 -168.1846 c2286.5996 -166.7104 2280.1406 -165.1362 2273.6523 -163.6826 c2270.8574 -163.0562 2267.9238 -161.1304 2265.2461 -160.0605 c2263.0508 -159.1841 2260.7852 -158.6523 2258.4688 -158.3594 C2256.2061 -155.7759 2252.3711 -154.8457 2249.5918 -158.2598 c2246.5127 -162.043 2241.1611 -164.7041 2237.3984 -167.8887 c2231.7471 -172.6724 2225.709 -176.8228 2219.4883 -180.8311 c2207.9131 -188.2891 2196.1836 -194.5298 2183.3359 -199.5181 c2170.4404 -204.5254 2157.3789 -209.0288 2144.2656 -213.4312 c2137.208 -215.8008 2129.8008 -216.6875 2122.4189 -217.5396 c2117.8809 -218.0635 2111.9736 -219.2085 2106.9766 -218.6089 C2105.8242 -211.9058 2107.3633 -204.4912 2109.6934 -198.2842 cf*U2536.166 -164.3354 m2538.1094 -167.8257 2542.2305 -169.4678 2546.6084 -168.6108 c2551.2402 -167.7046 2555.1875 -162.3179 2553.8652 -157.5811 c2552.6563 -153.248 2548.5234 -151.7188 2544.4521 -151.5942 c2542.5762 -151.5371 2540.7314 -151.8984 2538.8633 -151.9312 c2535.3213 -151.9932 2532.3633 -154.8364 2532.3633 -158.4268 c2532.3633 -160.9771 2533.9395 -163.291 2536.166 -164.3354 Cf*u1 D1406.6367 -120.5796 m1412.0322 -124.3667 1417.5815 -127.5176 1423.709 -129.9595 c1429.4746 -132.2568 1435.2373 -134.9194 1441.2412 -136.5483 c1446.9766 -138.1045 1453.6826 -138.5718 1459.6113 -139.1426 c1462.5439 -139.4253 1465.5205 -138.8911 1468.4033 -138.417 c1472.0176 -137.8232 1475.437 -137.48 1479.0908 -137.167 c1485.3457 -136.6313 1491.6577 -135.0127 1497.5625 -132.9336 c1503.5249 -130.8345 1509.6826 -129.3555 1515.4487 -126.7251 c1519.5327 -124.8618 1523.4248 -122.4248 1527.041 -119.6885 C1527.9453 -125.5674 1530.9512 -130.4736 1534.7026 -135.188 c1538.9893 -140.5747 1545.0879 -144.981 1551.3833 -147.6782 c1554.4473 -148.9907 1557.3306 -149.8164 1560.6802 -149.8784 c1562.3799 -149.9102 1563.6484 -150.8037 1565.4917 -150.5771 c1567.498 -150.3311 1569.4282 -149.7134 1570.9023 -148.2393 c1572.8408 -146.3008 1573.4189 -143.7764 1573.4814 -141.1299 c1573.5679 -137.4399 1574.0586 -132.7715 1573.1563 -129.2017 c1571.5537 -122.8667 1567.7959 -116.8706 1564.9766 -110.9932 c1562.3091 -105.4331 1558.0361 -100.8828 1552.835 -97.6343 c1551.6631 -96.9023 1550.4043 -96.3618 1549.127 -95.8579 C1549.5513 -95.6016 1549.9771 -95.3481 1550.4067 -95.103 c1555.9189 -91.9609 1561.6904 -88.7134 1565.4277 -83.4341 c1571.7173 -74.5498 1573.9092 -62.5508 1573.5615 -51.8384 c1573.3701 -45.9536 1570.1895 -40.2705 1565.1045 -37.2803 c1559.8535 -34.1929 1553.8926 -36.5503 1548.9785 -38.9902 c1543.1797 -41.8696 1536.1118 -46.2666 1532.0044 -51.3237 c1527.6963 -56.6274 1524.3423 -62.3462 1521.7104 -68.6387 c1519.5591 -73.7832 1519.5947 -79.6699 1519.5942 -85.1753 C1515.2295 -84.8872 1510.9712 -82.3647 1506.583 -81.8618 c1495.7617 -80.6211 1484.6587 -80.6704 1473.8008 -81.3936 c1462.3779 -82.1543 1451.5161 -83.7124 1440.8179 -87.9517 c1430.4346 -92.0664 1419.627 -97.2412 1411.5293 -105.0493 c1410.5132 -106.0293 1409.9365 -107.1035 1409.6948 -108.186 C1404.4575 -108.2803 1401.0225 -116.6377 1406.6367 -120.5796 cf0 D1553.1191 -116.3442 m1555.2847 -120.1338 1556.8403 -124.2666 1558.9478 -128.1133 c1560.4985 -130.9443 1560.3936 -133.605 1560.3887 -136.7354 C1551.7783 -134.832 1543.0811 -128.1094 1540.2446 -119.644 c1539.4717 -117.3369 1539.6934 -114.6968 1539.6885 -112.3062 C1539.7998 -111.5474 1539.9775 -110.8042 1540.2227 -110.0752 C1540.3901 -109.4585 1540.4844 -109.0488 1540.5298 -108.7817 C1540.6689 -108.5586 1540.8457 -108.2568 1541.0713 -107.8516 c1541.248 -107.5347 1541.4102 -107.2153 1541.5659 -106.895 C1542.1543 -107.1763 1542.7461 -107.4482 1543.3438 -107.6978 c1547.9268 -109.6118 1550.6421 -112.0088 1553.1191 -116.3442 cf1532.501 -87.791 m1532.623 -85.7603 1532.5938 -83.7275 1532.6265 -81.6938 c1532.7129 -76.4023 1533.9434 -72.3125 1536.4873 -67.6655 c1539.1025 -62.8877 1542.127 -59.1455 1546.4868 -55.9058 c1548.8848 -54.124 1551.4136 -52.5391 1553.998 -51.0459 c1555.1411 -50.3853 1557.6758 -48.5229 1559.1284 -48.7974 c1563.9995 -49.7188 1558.2329 -69.3999 1557.0259 -72.1113 c1554.8418 -77.0176 1551.2476 -79.4946 1546.7578 -82.1948 c1544.417 -83.6025 1542.0156 -84.9092 1539.6626 -86.2964 c1539.061 -86.6514 1536.5801 -88.666 1535.001 -89.5059 C1534.6753 -89.3965 1534.3501 -89.2886 1534.0293 -89.189 c1533.478 -89.0176 1532.9512 -88.9238 1532.4458 -88.8862 C1532.4648 -88.5215 1532.4756 -88.1558 1532.501 -87.791 cf1420.7217 -114.2417 m1425.4204 -109.7109 1430.5869 -107.7817 1436.0566 -104.5825 c1442.3291 -100.9136 1449.1328 -98.4287 1456.1489 -96.6211 c1469.4741 -93.1875 1484.4502 -93.645 1498.104 -94.1812 c1504.9648 -94.4512 1510.6772 -96.6724 1517.271 -98.1768 c1518.9561 -98.5615 1520.2646 -98.2646 1521.5537 -98.2842 C1521.8042 -98.5869 1522.0732 -98.8838 1522.3843 -99.1655 c1523.8359 -100.4785 1525.4526 -100.9741 1526.9985 -100.9019 C1527.0762 -100.9482 1527.1533 -100.9946 1527.2314 -101.04 C1526.7852 -102.3804 1526.2832 -104.0464 1525.7773 -104.4028 c1521.2344 -107.6025 1516.9468 -111.1245 1511.9917 -113.8511 c1506.7407 -116.7412 1501.042 -117.7095 1495.5166 -119.8721 c1490.1729 -121.9644 1484.7197 -122.9731 1479.1367 -124.1489 c1476.2319 -124.7603 1473.1455 -123.9487 1470.2681 -124.6621 c1467.2988 -125.3975 1464.4209 -126.083 1461.3545 -126.2036 c1456.2217 -126.4058 1449.6973 -125.1265 1444.6973 -124.0132 c1439.0884 -122.7637 1434.1611 -119.6577 1428.7168 -117.9746 c1425.916 -117.1084 1423.2402 -115.7974 1420.6699 -114.2866 C1420.6875 -114.2705 1420.7051 -114.2578 1420.7217 -114.2417 cf*U*u1 D259.2339 -333.6201 m268.625 -330.4912 276.6577 -323.1909 280.1382 -313.874 c284.1904 -303.0269 281.3882 -290.7129 278.7793 -279.8433 c277.4849 -274.4507 276.7178 -269.3599 274.2246 -264.3213 c271.5771 -258.9712 266.3867 -256.314 260.9063 -254.7124 c255.355 -253.0903 247.8662 -251.7466 241.3105 -252.7642 C240.4893 -252.3647 239.5234 -252.1304 238.4033 -252.1343 c234.2139 -252.1484 229.9346 -252.5132 226.6475 -255.4092 c222.501 -259.062 221.4268 -264.9907 220.3242 -270.1484 c218.0835 -280.6313 215.2119 -292.4438 215.9946 -303.2061 c217.5156 -324.1187 238.8721 -340.4043 259.2339 -333.6201 cf0 D231.6362 -280.3623 m232.2729 -276.4595 233.0137 -272.5854 233.9961 -268.7544 c234.0264 -268.6367 234.0513 -268.5342 234.0791 -268.4238 C236.0869 -269.1167 238.3994 -268.7998 240.3389 -266.7778 c243.4209 -263.564 253.6621 -266.3213 257.4502 -267.248 c265.6782 -269.2622 265.4507 -279.792 267.041 -286.689 c268.7095 -293.9224 270.3335 -301.9321 268.0645 -309.1812 c266.1436 -315.3193 260.2461 -319.5957 254.4116 -321.54 c241.8506 -325.7251 229.7642 -313.7842 228.8901 -301.77 c228.373 -294.6543 230.498 -287.335 231.6362 -280.3623 cf*U*u1 D421.9331 -633.8271 m429.0015 -632.5537 435.2485 -628.7471 439.8774 -623.2871 c444.8799 -617.3862 445.6348 -607.2183 445.2246 -599.8418 c444.4438 -585.8042 430.8013 -576.1816 417.2583 -580.3296 C416.7783 -580.2324 416.2813 -580.2002 415.7705 -580.2646 c408.8076 -581.1421 405.9219 -585.5293 402.0264 -590.835 c397.7231 -596.6958 396.8096 -604.7539 396.1455 -611.8022 c394.8857 -625.1694 409.1616 -636.1284 421.9331 -633.8271 cf0 D411.311 -600.7251 m411.8687 -598.8838 413.2798 -597.8081 414.2881 -596.2534 c414.5029 -595.9224 416.5566 -593.1655 415.7705 -593.2646 c415.9932 -593.2368 416.2134 -593.2012 416.4312 -593.1592 C417.5103 -593.4912 418.7627 -593.499 420.1592 -593.0322 c426.7031 -590.8447 431.9355 -594.6416 432.3047 -601.2788 c432.5376 -605.4697 431.8345 -609.4497 430.5342 -613.4155 c429.3125 -617.1421 425.001 -619.478 421.5029 -620.6348 c416.5405 -622.2754 409.3989 -618.9487 409.0967 -613.4063 c408.8735 -609.3105 410.1333 -604.6157 411.311 -600.7251 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF