%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 4.eps)%%CreationDate: 04.10.18 2:08%%Canvassize: 16383%%BoundingBox: -1 -2160 3789 -20%%HiResBoundingBox: -0.372559 -2159.9277 3788.4912 -20.9761%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -855.458 291.3179 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5326 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD06FFA955A9FD2BFFA9FD12FFA97F7FFD2AFF7FA9FD10FFA97F55%A9FD26FFA9A9A97F2BFD12FF7F55A955A9FFFFFF7F2B5555A97FA9A9FD1C%FF7F2BA9FD12FFA9FD26FFA9557FA92B7FFD13FF7FFFFF55A97F7F7FA97F%A9A9A9FD047FA9FD18FF7FA9A955FD39FFA9557F7E7F2BFD13FF7F7FFFFF%7FA9FD0AFFA955A9FD16FFA954FFFF55A9FD05FFA9A9FD36FFA9FD13FF7F%A9FF7F7FA9FFFFFFA9A9FFFFA9FFFFA955FD17FFFD047F55557FA9FFFFA9%5555FD49FF7F7FFF7F7FA97F557F7F552B7F55FD047FFD17FFA9557FA9A9%FFFFA9FD047FA97FFD49FF7FA97F7FFD05FFA97FA97FFFA97FA9FD18FF7F%A9FD07FFA97FA9FF7FFD49FFA97EA9FD06FFA97F55A9FD1BFF7F7FFD0BFF%A97F7FFD70FF55FD0EFF7FA9FD6EFFA97FFD0BFFA97FFFA955FD0FFFA9FD%5EFFA9A9FFFFFF7FFD07FF7F555BA955FD0EFFA95555FD5DFF7F7FA9FF54%5555FD06FF7FA9FFA9FD10FF7FA9FD5EFFA97F7FA955A97FFD05FF7FFD74%FFA95555FFFFA97FFFFFFFA97FFD72FFA955A97FA9FFFFA9A9FFFFA97FFD%73FFA97F54FD04FFA9A97F545555A9FD74FFA955A9FFFF7F55557F7FA955%A9FD75FFFD047FA9A92B7F7F55A9FD77FFA9A9FFA97F5555A9FD7CFF557F%A9FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD1AFF557FFD7DFFA92BFD%7EFF557FFD7EFF557FFD7EFF2BA9FD7DFFA955A9FD7DFFA92BA9FD7DFF7F%55A9FD10FFA97F547FFD69FF7F54FD11FF7FA9FF55A9FD68FF7F55FD06FF%A97F7F557FA9FD05FF7FA9FFA97FFD68FF7F2BFD05FFA955A9A9FFA97FA9%FD05FF557F55FD69FF7F55A9FD04FF547F7F7F54FFA97FFD06FFA9FD6AFF%A92BA9FFFFFF7FA9FFFFA92B7FFF55A9FD70FFA955A9FFFFFF7FA9A9557F%55FFA97F7F7FFD70FF557FFFFFFF7FFF55FD07FF55FD70FF7F55FFFFFF7F%557FFD05FFA92BA9FD04FFA9FD6BFF7E55A9FFFF7FA9FFA97FFFFFFF7F85%7FFD04FFA97FFD6AFFA955A9FFFFFF557F2B7F55FFFF7FFF7FA9FFFFFF7F%7FFD6AFFA97F7FFD06FF7F7FA9FF7FFF7FA9FFFFFFA955FD6BFF557FFD07%FFA955FFA97FA97FFFFFFF7F55A9FD61FF7FFD08FF7F54FD08FFA97F7FA9%A9A9FFFFFFA931FD62FF55FD08FF7F7FA9FD08FF7F55A9A955FFFFFFA955%7FFD61FF2BA9FD07FF7F55A9FD09FF55FF7F557FFFFFFF557FFD61FF557F%FD07FF7FA97FFD08FFA97FFF7FA97FA9FFFF7F55A9FD16FFA9FD49FF5455%A9FD05FFA97FA985FD09FF7FFF7FFFA97FFFFFA97F7FFD15FF5555A9FD48%FFA955A9FD06FF7FFF7FFD08FF7FA9A97FFFFF7F7FFFA9557FFD14FF5555%7FFD49FFA9557FFD05FF7FA9A97FFD08FF7FA9FF2BFFFFFF7FA9A97F7FFD%13FF7FA97FFD4BFF5585FD05FF7FA9A97FFD08FF7FFF7F7F55FFFFFF557F%7E7FFD12FFA97FA97FFD41FFA97FFD07FFA95554FD05FF55FF7EA9FD047F%A9A9FFFF7FFFA9A97F7FFFFFFF2BA97FFD04FFA9FFFF55FD0AFFFD04A9FD%41FFA9557FFD07FF55A9FD04FFA97FFF7FFFFFFFA9A97F7F55FF7FFF7FA9%FF55A9FFFFFF2B7FFFFFA97F7FFF7FA9FD0AFF7FA97FFD17FFA9FD2BFF55%7F55A9FD04FF7F7F7FFD04FF7FFFA97FFD06FFA955FD04A97FFF857FFFFF%FFA955A97F7FA9FFFF7FFD0BFF7F7FA9FD16FF5555FD2BFFA97FFF7F7F7F%A9FFA97F7FFFFFFF7F7FFF7FFD06FF7F55A9FFA97F55A9FFFF55A9FD04FF%7EA9FFFFFF7F7FFD05FFA9FD05FF7FA97FFD0AFF7F547F557F7EFFA9FFFF%FFA97F54FD22FF7F547FFD07FF7F55FFA9A97F7F547F7FFFFFFF55FFA97F%FD07FFA97F7FFD04A9FFA97F7FFD08FFA955FD05FFA955FD04FFA9A9A9FD%09FF7F7F55FF7F7FFF7F557F7FFFFFFF7FA97FFF7FA97F7F7FA97FA9A9FD%16FF7F7FFD0BFF7F7F7FFF7F7F7FFFFFFF7FA9FF7FA9FFFF55FFA9557FFF%FFA97F857F7F7F857FFD08FFA955FD06FFA9557FFD04FF7FA97FFD06FFA9%2B7FA97F7FA9A9A955FFFF7F85FFA97FFF7F7FFD04A9FFA9A97F7F7FFFFF%FD05A97F7F7FFD06FFA9FD057FFD0DFFA9A97F557F557FFFA97FFFFF55FF%FFFFA97F7FA97F55A9FD10FF55FD07FFA97FA97FFFFFA97FA9A9FD05FF7F%7FFF7F7F7FFF7FA955FFFFA97FFFFFFF7FA9A97FFD09FF7F557F7FA97F7F%7FA9A9A9FD05FF7F55FFFFFF55FD11FF7FA97F7FA9A97FFFA97FFD04FFA9%54FFFFA9547F7FFD07A97FA9FD04FF7FA9FD08FF55FF7EA9FFFF54A97FFD%05FFA97FFFFFFFA955FFA9FFFF7F54FD05FF55FF7EA9FD08FF55A9FD06FF%A9A97FA9FFA97F7F7FFD04FFA9FD10FFA97F7FA97FA97FA9FF7F7FFD0BFF%A97FA97F7F7FA97FA955A9FFFFFFA9A9FD08FFA97FFF7FFFFF7FA97FFD06%FFA97F7FA9FFA9A9A97F7F7FFD06FF7FA9FF7FFD0DFFFD057FA97F5B7FA9%557FFD15FFA9A97F7FFF7F7FFFFF55FD16FF7F7FA9FF7FA9FD08FFA97FFF%7FA9FF7FA97FA9FD07FFA9FD057FA9FD08FF7FA9A97FFD0BFFA9557FA9FD%05FFA9FFFFFF7F7FFD14FF55FF2BFD047FFF7F7FFD17FFA9A9FFFFA9FD09%FFA9FFA9FFFFFFA9FFA9FD16FFA9FFFFA9FD0BFF7FFD22FFA9FFA9A9FFA9%A9FFA9A9FD83FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Layer 6) Ln0 Au0 O0.841245 0.759243 0 0 0.176471 0.121569 1 Xa0 J 0 j 1 w 10 M []0 d0 XR618.1528 -2154.4863 m612.373 -2154.4824 606.7002 -2154.4248 601.126 -2152.7344 c598.2842 -2151.873 595.6875 -2149.7578 593.0903 -2148.3516 c589.7939 -2146.5684 585.9219 -2144.5752 583.2549 -2141.9082 c578.0889 -2136.7432 573.1948 -2131.5664 567.2251 -2127.3281 c561.0273 -2122.9268 554.5938 -2118.8701 548.4033 -2114.457 c542.8555 -2110.5029 537.9473 -2106.0176 532.0083 -2102.6211 c529.3584 -2101.1064 527.2705 -2099.5176 525.3296 -2097.1484 c524.3682 -2095.9746 522.5479 -2095.3184 521.3799 -2094.3506 c519.4258 -2092.7305 518.0425 -2091.0469 516.8672 -2088.8057 c513.9771 -2083.2949 509.646 -2080.8232 503.5034 -2080.6113 c498.0972 -2080.4238 493.1094 -2083.1309 487.8213 -2083.3955 c472.77 -2084.1484 458.1792 -2086.4219 443.2881 -2088.6123 c436.1631 -2089.6602 428.3242 -2088.5352 421.1187 -2088.7236 c413.4058 -2088.9258 405.7236 -2090.0361 398.0747 -2090.9648 c382.23 -2092.8867 366.3931 -2092.7705 350.458 -2092.4023 c342.9521 -2092.2285 335.4443 -2091.8555 327.9727 -2091.1074 c320.0503 -2090.3154 312.0259 -2090.7949 304.1572 -2089.4453 c299.5552 -2088.6563 295.1763 -2087.0059 290.5527 -2086.2031 c285.4258 -2085.3145 280.2539 -2084.7412 275.1406 -2083.7627 c270.686 -2082.9102 266.5352 -2081.1934 262.1064 -2080.3037 c256.8506 -2079.2471 251.6982 -2077.6953 246.4937 -2076.4209 c237.8857 -2074.3125 229.2744 -2072.2686 221.2231 -2068.4854 c217.0103 -2066.5059 211.6167 -2066.1328 207.1162 -2064.7637 c201.9277 -2063.1855 197.0459 -2060.9658 192.0244 -2058.9561 c187.4263 -2057.1162 183.2485 -2055.3613 179.0186 -2052.7754 c174.832 -2050.2158 170.9893 -2048.1504 166.3687 -2046.4824 c157.3018 -2043.209 151.0278 -2037.4248 143.771 -2031.3809 c140.835 -2028.9346 137.4448 -2026.5156 134.1709 -2024.5479 c130.3687 -2022.2637 126.6899 -2021.1318 123.2383 -2018.1592 c116.561 -2012.4082 110.8096 -2006.708 102.5034 -2003.3232 c99.9536 -2002.2842 97.0693 -2003.7197 95.502 -2005.8672 C92.4404 -2005.2803 88.4248 -2007.1406 87.9253 -2010.4971 c87.5991 -2012.6855 86.1982 -2015.0996 85.0781 -2017.0068 c83.1963 -2020.2139 82.7075 -2024.0596 82.4678 -2027.6924 c82.2183 -2031.4785 80.8418 -2035.1719 79.9629 -2038.8691 c79.0225 -2042.8262 78.1431 -2046.793 77.0659 -2050.7168 c75.9336 -2054.8418 74.6475 -2060.9824 70.6104 -2063.2656 c68.3984 -2064.5156 64.3843 -2063.5068 62.0825 -2063.0039 c58.6338 -2062.25 55.6274 -2060.5342 52.7163 -2058.6045 c46.7534 -2054.6514 42.314 -2048.3779 37.6963 -2043.0293 c32.4316 -2036.9307 27.2754 -2031.043 22.9155 -2024.2227 c18.4087 -2017.1709 14.9502 -2009.4111 10.6816 -2002.1982 c7.08105 -1996.1133 3.32031 -1990.125 -0.372559 -1984.0957 C-0.372559 -2009.0664 L-0.12207 -2009.4873 0.134277 -2009.9043 0.383789 -2010.3262 c5.22559 -2018.5078 9.11768 -2027.2217 14.5308 -2035.0527 c19.7441 -2042.5947 25.9585 -2049.2012 31.8765 -2056.1641 c37.5386 -2062.8262 43.564 -2069.002 51.502 -2072.918 c58.3472 -2076.2959 67.1899 -2077.9619 74.5977 -2075.5908 c81.4219 -2073.4072 84.873 -2067.2607 87.3394 -2061.0186 c90.5698 -2052.8408 91.8872 -2044.0537 94.2056 -2035.6064 c94.8169 -2033.3799 95.4238 -2031.5107 95.4321 -2029.1738 c95.4385 -2027.2666 95.52 -2025.3447 96.3032 -2023.5684 c97.3926 -2021.0977 98.9673 -2018.793 99.8682 -2016.2422 C104.9297 -2018.5605 108.897 -2022.6758 112.9521 -2026.376 c115.1753 -2028.4053 117.5356 -2030.2676 119.9746 -2032.0293 c122.6743 -2033.9805 125.8618 -2034.7227 128.6919 -2036.4238 c134.1548 -2039.707 138.5718 -2044.4854 143.5728 -2048.416 c149.0977 -2052.7578 154.9229 -2055.873 161.4414 -2058.4619 c167.4648 -2060.8545 172.4272 -2064.6221 178.2393 -2067.3789 c185.2959 -2070.7256 192.8809 -2073.5791 200.2456 -2076.1758 c206.8105 -2078.4902 213.7056 -2079.4473 220.1177 -2082.0586 c226.5566 -2084.6816 233.1641 -2086.5332 239.9111 -2088.2646 c246.7192 -2090.0117 253.5771 -2091.8193 260.4692 -2093.2051 c263.7129 -2093.8564 266.7998 -2095.1729 270.0415 -2095.9482 c273.9385 -2096.8809 277.9473 -2097.375 281.9077 -2097.9463 c288.9053 -2098.957 295.5249 -2101.0938 302.4507 -2102.2813 c310.2539 -2103.6191 318.2271 -2103.4502 326.1035 -2103.957 c342.0815 -2104.9873 357.9233 -2105.6055 373.9458 -2105.6113 c389.21 -2105.6162 404.1621 -2102.6523 419.3623 -2101.7979 c429.8291 -2101.209 440.144 -2102.1416 450.5449 -2100.584 c460.6128 -2099.0752 470.5122 -2097.7686 480.6406 -2096.791 c484.6343 -2096.4063 488.6152 -2096.5068 492.5723 -2095.791 c496.2432 -2095.1279 499.75 -2093.7744 503.5034 -2093.6113 c505.5933 -2093.5195 504.7285 -2093.7715 505.6421 -2095.3672 c507.2241 -2098.1309 508.5571 -2100.1035 510.8711 -2102.3418 c514.23 -2105.5918 518.0811 -2108.708 521.792 -2111.5498 c525.0068 -2114.0117 528.9131 -2115.4063 531.9995 -2118.0596 c536.0405 -2121.5342 540.3838 -2124.6777 544.7446 -2127.7344 c553.0693 -2133.5674 561.5796 -2138.6172 568.7964 -2145.835 c572.1831 -2149.2217 575.333 -2152.542 579.3418 -2155.1895 c581.8911 -2156.873 584.5298 -2158.3994 587.166 -2159.9277 C624.3604 -2159.9277 L623.9512 -2157.0684 621.8853 -2154.4893 618.1528 -2154.4863 cfu199.3901 -1348.5859 m200.0508 -1348.8496 200.4126 -1348.9746 199.3901 -1348.5859 C199.3901 -1348.5859 Lf*u1 D724.4414 -1861.4971 m722.7314 -1864.4375 719.9419 -1865.6934 717.605 -1868.0371 c715.0908 -1870.5586 712.6011 -1873.1035 710.0977 -1875.6357 c704.7847 -1881.0098 699.374 -1886.2754 693.6245 -1891.1836 c688.3032 -1895.7246 682.1738 -1899.0215 676.7471 -1903.3613 c670.9277 -1908.0137 664.9502 -1912.3467 658.3154 -1915.7734 c652.3491 -1918.8545 645.54 -1920.2734 639.4458 -1923.1982 c632.146 -1926.7021 623.9751 -1928.3184 616.4248 -1931.208 c610.8086 -1933.3574 604.8223 -1937.2305 598.5283 -1936.2266 c591.9263 -1935.1738 586.5005 -1927.8691 582.4517 -1923.125 c578.8198 -1918.8691 575.1074 -1914.7051 571.3706 -1910.5645 C574.1885 -1907.126 575.7036 -1901.6631 576.4741 -1898.0996 c577.3389 -1894.0996 577.8613 -1890.0078 578.293 -1885.9414 c578.4229 -1884.7158 578.522 -1883.4863 578.5698 -1882.2539 c578.5459 -1882.8711 579.9209 -1879.6846 579.9678 -1879.584 C580.7661 -1877.6748 581.4458 -1875.7969 581.9458 -1873.7852 c583.749 -1866.5391 583.1875 -1858.3359 582.8486 -1850.9551 c582.458 -1842.4512 582.5176 -1833.9414 582.2119 -1825.4336 c581.6318 -1809.3223 580.2065 -1793.2529 579.1548 -1777.1699 c578.1152 -1761.2793 576.0068 -1746.1152 571.7808 -1730.7295 c567.6172 -1715.5703 562.5669 -1700.627 557.1279 -1685.8818 c551.71 -1671.1914 545.0879 -1657.2168 540.9507 -1642.0576 c536.9282 -1627.3213 534.6294 -1612.2627 530.1489 -1597.6553 c527.4248 -1588.7744 525.3452 -1579.2832 523.8501 -1570.1211 c522.0996 -1559.3906 518.3081 -1549.085 517.1543 -1538.29 c515.9424 -1526.9521 514.6768 -1515.3135 515.7798 -1503.9219 c516.1592 -1500.0078 516.1782 -1495.7578 517.0537 -1491.9414 c518.0122 -1487.7637 518.4424 -1483.3867 515.8135 -1479.7178 c512.8872 -1475.6338 507.4854 -1475.4717 504.5879 -1479.7178 c502.103 -1483.3594 502.7822 -1488.2031 501.749 -1492.2617 c500.0137 -1499.0801 498.8877 -1505.6426 498.1592 -1512.6787 c497.3906 -1520.0986 495.3555 -1526.8711 495.5171 -1534.4414 c495.6841 -1542.2646 495.8018 -1550.0684 495.8018 -1557.8955 c495.8018 -1573.8965 494.9438 -1590.1709 496.48 -1606.0889 c497.2163 -1613.7207 495.8901 -1622.0645 497.3506 -1629.5381 c498.9385 -1637.6621 500.1401 -1645.8525 501.6641 -1653.9883 c504.6284 -1669.8164 510.9556 -1684.7246 516.4399 -1699.8057 c518.9419 -1706.6855 521.3052 -1713.2969 522.813 -1720.4609 c524.2822 -1727.4395 527.7222 -1734.1504 529.7861 -1740.9785 c533.8955 -1754.5713 532.6636 -1769.3242 532.6636 -1783.3311 c532.6636 -1790.624 532.1631 -1797.7197 531.231 -1804.9531 c530.2539 -1812.5313 530.4307 -1820.208 529.3013 -1827.7441 c528.583 -1832.5371 527.5454 -1837.2988 526.5806 -1842.0479 c525.6665 -1846.5488 524.5791 -1851.4355 521.4023 -1854.916 c520.7256 -1855.6572 520.2671 -1856.4424 519.9854 -1857.2402 C516.1943 -1853.2793 512.0649 -1849.5498 508.2148 -1845.6992 c503.5229 -1841.0078 500.4502 -1834.4033 496.6553 -1828.9834 c492.7227 -1823.3672 487.1924 -1818.3848 483.9443 -1812.4072 c480.6758 -1806.3936 475.6587 -1801.6797 472.3691 -1795.6729 c471.5273 -1794.1338 470.0713 -1793.3594 468.6055 -1792.5508 c467.0039 -1791.668 465.9292 -1790.1416 464.8813 -1788.7012 c462.582 -1785.5371 460.5366 -1782.2236 458.6797 -1778.7852 c456.9624 -1775.6045 454.6279 -1772.9365 453.0122 -1769.6357 c451.1431 -1765.8164 449.7607 -1761.9902 447.4873 -1758.3438 c443.1226 -1751.3438 438.0215 -1744.6201 433.3389 -1737.8271 c428.8677 -1731.3398 423.0405 -1725.9287 418.4316 -1719.5508 c416.2339 -1716.5098 413.9399 -1713.417 411.9482 -1710.249 c410.0703 -1707.2617 407.5059 -1704.9033 405.5576 -1702.0967 c403.5229 -1699.166 401.1118 -1696.5176 398.6177 -1693.9775 c395.2295 -1690.5273 392.9902 -1685.6895 390.3472 -1681.665 c385.6436 -1674.502 381.2915 -1667.1875 376.7051 -1659.959 c374.6064 -1656.6523 373.0732 -1652.9902 370.6279 -1649.9268 c369.604 -1648.6436 364.8408 -1644.375 365.0732 -1642.7031 c365.5054 -1639.6016 364.5469 -1636.5391 361.7271 -1635.1602 C361.8745 -1632.4727 361.9946 -1629.7822 362.0723 -1627.0908 c362.6777 -1606.1475 359.7495 -1585.4102 357.6704 -1564.6201 c355.7109 -1545.0215 353.1519 -1525.6807 344.1045 -1507.8574 c340.0039 -1499.7793 333.9053 -1492.0918 328.1807 -1485.0996 c324.5327 -1480.6445 319.7729 -1476.1436 314.6094 -1472.9365 C316.6211 -1471.8799 318.6426 -1470.8311 320.6563 -1469.7412 c325.8853 -1466.9111 330.2808 -1463.5791 335.9038 -1461.5684 c340.7983 -1459.8174 345.5498 -1457.6406 348.2837 -1452.9922 c351.4619 -1447.5889 349.4497 -1440.042 347.9067 -1434.4766 c346.9829 -1431.1426 345.6733 -1427.9795 344.7412 -1424.6611 c343.7773 -1421.2295 343.4771 -1417.6074 342.6934 -1414.1299 c341.9731 -1410.9326 340.9272 -1407.7959 339.6187 -1404.7939 c338.5977 -1402.4531 337.2129 -1400.4746 336.7109 -1397.9727 c335.6753 -1392.8164 334.8296 -1387.1494 330.4897 -1383.6152 c329.0571 -1382.4492 327.4854 -1381.9971 325.9785 -1382.0537 C324.7446 -1379.6816 322.2246 -1378.1484 318.8999 -1379.3105 c308.751 -1382.8564 298.043 -1384.1729 287.7485 -1387.1914 c283.5059 -1388.4355 277.9897 -1390.1094 274.1519 -1392.8682 C274.4229 -1391.8311 274.7085 -1390.7959 275.0381 -1389.7578 c277.1987 -1382.9531 278.9297 -1376.6318 277.9248 -1369.4531 c276.9795 -1362.7012 277.7061 -1355.9072 276.7793 -1349.1826 c276.2876 -1345.6162 275.2725 -1342.1758 274.5688 -1338.6504 c273.8179 -1334.8877 273.9453 -1331.1592 272.8521 -1327.3906 c269.1279 -1314.5527 262.4136 -1304.3643 251.5522 -1296.6406 c240.8608 -1289.0371 228.7183 -1283.9971 215.7993 -1281.7969 c209.1646 -1280.666 202.5391 -1279.377 195.8662 -1278.5068 c188.1177 -1277.4951 180.2217 -1277.709 172.4263 -1277.709 c165.4346 -1277.709 158.126 -1277.0801 151.2222 -1278.2451 c143.8154 -1279.4941 136.4272 -1280.8682 129.0303 -1282.1758 c122.6675 -1283.2998 116.7178 -1287.0029 111.0806 -1289.9629 c104.8179 -1293.252 98.2559 -1295.8721 92.2285 -1299.6602 c87.042 -1302.9189 84.5195 -1310.4014 81.0127 -1315.1836 c76.5996 -1321.2002 73.5767 -1328.0508 73.2119 -1335.5518 c73.1304 -1337.2266 73.5898 -1338.5586 74.3711 -1339.5625 C65.4102 -1348.0625 58.9634 -1358.9551 53.1982 -1369.7227 c46.0239 -1383.123 41.1997 -1397.5146 38.0532 -1412.3721 c34.9741 -1426.9121 35.2349 -1441.1582 41.0547 -1454.8965 c43.9824 -1461.8076 47.9468 -1468.0156 49.7476 -1475.3691 c49.9121 -1476.042 50.2021 -1476.6553 50.5781 -1477.2041 C49.1812 -1478.4092 47.9722 -1479.791 47.021 -1481.3936 c40.4004 -1492.543 47.7075 -1507.0098 52.814 -1517.1787 c57.5703 -1526.6504 58.9292 -1540.4453 71.8125 -1542.1563 c85.3101 -1543.9482 99.2773 -1538.0186 110.8276 -1531.5947 c111.3066 -1531.3281 111.7813 -1531.0625 112.2563 -1530.7979 C112.7383 -1531.7627 113.5044 -1532.6504 114.6089 -1533.3701 c117.5806 -1535.3066 120.6182 -1537.0078 123.937 -1538.2832 c127.2578 -1539.5586 129.2817 -1541.2314 132.1064 -1543.3525 c137.8442 -1547.6602 146.1685 -1549.0586 153.0269 -1550.3818 c160.8174 -1551.8848 168.6641 -1553.5781 176.6421 -1553.1191 c181.189 -1552.8574 185.2339 -1551.8203 189.3643 -1549.9473 c189.8101 -1549.7451 190.6372 -1549.5576 191.5215 -1549.3477 C192.752 -1552.6289 193.9014 -1555.6846 195.8091 -1558.6846 c197.7827 -1561.7881 200.0483 -1564.6523 201.7979 -1567.8994 c205.3262 -1574.4473 208.0352 -1580.6719 213.0522 -1586.3262 c215.1079 -1588.6426 217.4141 -1590.3789 219.2324 -1592.918 c221.6411 -1596.2813 223.7651 -1599.8477 225.8315 -1603.4268 c230.0664 -1610.7617 234.189 -1617.7021 239.186 -1624.5742 c249.0625 -1638.1572 256.8281 -1652.6357 263.6729 -1667.9521 c267.0874 -1675.5947 278.2871 -1668.9766 274.8975 -1661.3916 c268.314 -1646.6582 260.9282 -1632.5625 251.4644 -1619.4639 c246.5 -1612.5928 242.0234 -1605.8467 237.9375 -1598.4287 c234.1968 -1591.6357 230.0728 -1584.3789 224.2695 -1579.1709 c219.3867 -1574.7891 216.3877 -1568.8232 213.7207 -1562.9375 c212.1665 -1559.5078 210.0649 -1556.5234 207.9219 -1553.4395 c205.7769 -1550.3535 204.6104 -1547.3652 203.3013 -1543.8789 c197.8711 -1529.416 187.9248 -1517.3408 181.4277 -1503.4141 c180.834 -1502.1406 180.0215 -1501.2754 179.1021 -1500.7383 C178.2959 -1497.5313 175.4595 -1495.0137 171.4536 -1496.4775 c167.9302 -1497.7646 164.3862 -1498.5195 160.6826 -1499.0762 c157.2769 -1499.5889 153.2773 -1499.5254 150.1538 -1501.082 c147.6411 -1502.334 145.1445 -1503.4492 142.4912 -1504.376 c139.4653 -1505.4326 136.2446 -1505.7949 133.2759 -1507.0088 c130.3862 -1508.1904 127.0771 -1508.6016 124.1201 -1509.7891 c121.1431 -1510.9854 118.2793 -1512.4053 115.4561 -1513.9248 c109.231 -1517.2754 103.3262 -1521.1416 96.9204 -1524.1621 c91.1846 -1526.8672 84.6621 -1528.9141 78.3379 -1529.4424 c71.1919 -1530.0391 70.3379 -1526.5557 68.4331 -1520.5918 c66.7319 -1515.2646 63.8428 -1510.3613 61.4404 -1505.3359 c60.1475 -1502.6309 59.1362 -1499.8496 58.3267 -1496.9648 c57.811 -1495.127 56.6045 -1490.0635 57.937 -1488.373 c60.7314 -1484.8271 66.7915 -1483.7314 70.9077 -1482.6826 c77.6309 -1480.9707 85.4009 -1480.6777 91.6865 -1477.7021 c100.7153 -1473.4277 112.5728 -1471.1279 114.1167 -1459.3574 c114.9219 -1453.2207 113.9443 -1447.0254 113.8579 -1440.8701 c113.7754 -1434.9648 116.1704 -1428.293 118.7295 -1423.0674 c121.3511 -1417.7148 125.0845 -1413.1895 129.3794 -1409.1035 c133.5508 -1405.1357 140.5 -1400.2969 146.3931 -1399.7822 c152.855 -1399.2178 159.8672 -1405.9336 164.6353 -1409.5254 c166.542 -1410.9619 168.4287 -1411.1074 170.002 -1410.3828 C170.5093 -1410.7197 171.084 -1411.0078 171.7437 -1411.2217 c182.6997 -1414.7705 193.6074 -1416.2881 204.0068 -1410.5117 c213.937 -1404.9961 219.918 -1393.2959 220.9307 -1382.335 c221.4473 -1376.7402 218.6504 -1371.084 215.9346 -1366.4102 c213.1147 -1361.5566 210.4893 -1356.1758 206.2031 -1352.4355 c204.0225 -1350.5322 201.5557 -1349.4014 198.8726 -1348.3896 c199.0791 -1348.4678 199.2437 -1348.5303 199.3901 -1348.5859 c198.9033 -1348.3916 198.2603 -1348.124 197.895 -1347.9336 c196.8994 -1347.4141 195.8374 -1347.0596 194.7495 -1346.8135 c192.3398 -1346.2676 189.7949 -1346.5957 187.7041 -1347.6738 C184.8594 -1343.8799 181.4639 -1340.4922 177.7778 -1337.5371 c172.4546 -1333.2705 166.2563 -1328.9502 159.3589 -1328.0645 c152.6099 -1327.1973 145.8555 -1326.0938 139.0732 -1325.3691 c131.458 -1324.5547 123.5728 -1325.1016 115.9209 -1325.1016 c109.1704 -1325.1016 102.5254 -1325.083 95.9404 -1326.7764 c93.0278 -1327.5254 90.167 -1328.6992 87.4189 -1330.1309 C89.167 -1325.6338 92.4468 -1321.7275 94.9785 -1317.6172 c96.4307 -1315.2588 97.8486 -1311.4766 100.271 -1309.9541 c103.2744 -1308.0674 107.1606 -1305.6523 110.48 -1304.4531 c116.5313 -1302.2676 121.8418 -1298.499 127.7954 -1296.1094 c134.4824 -1293.4258 142.4204 -1292.9648 149.4849 -1291.6914 c156.5249 -1290.4229 163.5347 -1290.709 170.6724 -1290.709 c178.4707 -1290.709 186.2681 -1290.6152 194.0435 -1291.3086 c207.2192 -1292.4824 221.0283 -1295.21 233.085 -1300.6943 c238.665 -1303.2324 243.9014 -1306.6992 248.5947 -1310.6328 c253.6948 -1314.9063 255.7905 -1320.1504 258.5107 -1326.0215 c261.4561 -1332.3789 261.2207 -1338.9463 262.7988 -1345.6172 c264.5884 -1353.1797 263.3867 -1360.6689 264.5947 -1368.2793 c265.6558 -1374.9619 264.5938 -1379.877 262.5024 -1386.3027 c260.4766 -1392.5293 259.5444 -1396.1582 258.9893 -1402.3066 c258.501 -1407.709 263.4165 -1413.2988 269.0537 -1411.5039 c273.7124 -1410.0205 277.7476 -1406.8877 281.3872 -1403.708 c283.3643 -1401.9805 287.1567 -1401.0703 289.6133 -1400.2305 c293.312 -1398.9648 297.1523 -1398.1064 300.9634 -1397.2588 c307.6304 -1395.7773 314.3047 -1394.4785 320.7983 -1392.3594 C320.9541 -1392.5117 321.1177 -1392.6621 321.2974 -1392.8086 c323.8403 -1394.8789 323.7871 -1399.4941 324.3931 -1402.5127 c324.854 -1404.8096 325.9941 -1406.6064 327.1221 -1408.6211 c328.6587 -1411.3652 329.3794 -1414.5664 330.1582 -1417.585 c330.9009 -1420.4648 331.2607 -1423.4424 331.8101 -1426.3623 c332.3696 -1429.334 333.7305 -1431.959 334.4951 -1434.8496 c335.1919 -1437.4873 335.9912 -1440.082 336.582 -1442.748 c336.8887 -1444.1318 336.9932 -1445.6396 336.7402 -1447.042 c336.8325 -1446.5303 336.1821 -1447.3105 335.5386 -1447.6924 c332.0098 -1449.7891 327.6597 -1450.6367 323.9297 -1452.373 c321.5713 -1453.4707 319.3472 -1455.3916 317.1216 -1456.7607 c314.0508 -1458.6494 310.8184 -1460.2363 307.605 -1461.8613 c301.7666 -1464.8145 296.6309 -1468.8535 290.4819 -1471.042 c284.7896 -1473.0674 279.6826 -1475.583 275.2207 -1479.7188 c272.6294 -1482.1201 272.7642 -1485.1309 274.2402 -1487.3945 C271.5581 -1487.9287 269.27 -1489.9678 269.3677 -1493.5293 c269.5532 -1500.293 271.5723 -1506.6436 272.9507 -1513.2139 c274.4697 -1520.4531 275.9756 -1527.7139 277.9834 -1534.834 c282.127 -1549.5264 285.3013 -1564.4766 287.3115 -1579.627 c289.3276 -1594.8203 286.4819 -1610.3105 286.4819 -1625.5146 c286.4819 -1631.7461 284.6123 -1637.5049 283.8486 -1643.6084 c282.8599 -1651.5078 281.8145 -1659.3867 280.0933 -1667.165 c276.6606 -1682.6768 274.1797 -1698.3223 270.917 -1713.8662 c270.1606 -1717.4688 269.2632 -1720.9639 268.8223 -1724.625 c268.4429 -1727.7715 268.9209 -1730.9043 268.2832 -1734.0342 c267.6611 -1737.083 266.1748 -1739.8096 265.7271 -1742.9463 c265.2427 -1746.335 264.3145 -1749.5303 264.1323 -1752.9912 c263.7808 -1759.6699 260.1592 -1765.959 260.1504 -1772.668 c260.1421 -1778.9561 259.1919 -1785.5166 257.7026 -1791.6182 c256.2095 -1797.7354 255.7798 -1803.7959 254.2407 -1809.9512 c252.2949 -1817.7354 250.1323 -1825.4648 249.146 -1833.4453 c247.8228 -1844.1563 248.0957 -1854.9063 248.2583 -1865.6719 c248.3281 -1870.291 248.2671 -1874.9111 248.3784 -1879.5303 c248.4873 -1884.0176 249.5747 -1888.4443 249.6509 -1892.9014 c249.7285 -1897.4609 250.4609 -1902.002 250.8218 -1906.543 c251.209 -1911.4131 251.3833 -1916.0352 252.5342 -1920.8223 c253.4678 -1924.7051 254.1484 -1928.5254 255.6016 -1932.252 c257.1538 -1936.2324 257.1846 -1940.7705 259.7236 -1944.4131 c264.479 -1951.2373 275.7549 -1944.749 270.9482 -1937.8525 c269.4424 -1935.6914 269.1255 -1932.5957 268.5591 -1930.0664 c267.981 -1927.4844 266.9951 -1924.8643 266.3379 -1922.292 c264.5562 -1915.3193 264.1055 -1908.7822 263.3677 -1901.6641 c261.9214 -1887.7139 261.3979 -1874.0195 261.167 -1859.9854 c261.0425 -1852.3896 261.0503 -1844.8096 261.7134 -1837.2363 c262.4219 -1829.1396 264.8125 -1821.2637 266.7764 -1813.4072 c268.2993 -1807.3154 268.6138 -1801.0635 270.2383 -1795.0742 c271.9072 -1788.9199 272.8247 -1781.96 273.1035 -1775.5977 c273.4019 -1768.793 277.0801 -1762.2227 277.1016 -1755.5098 c277.1211 -1749.3242 278.8042 -1743.3135 280.8184 -1737.4893 c281.8525 -1734.501 281.7065 -1730.8711 281.71 -1727.7529 c281.7144 -1724.1494 282.6826 -1720.8203 283.4526 -1717.3223 c285.2456 -1709.1719 286.4531 -1700.8984 287.8633 -1692.6777 c290.4746 -1677.4531 294.4146 -1662.6816 296.3818 -1647.3232 c297.1626 -1641.2275 299.4819 -1635.0771 299.4819 -1628.9033 c299.4819 -1621.0244 300.002 -1613.373 300.4771 -1605.5254 c301.6763 -1585.7148 299.0361 -1566.0771 294.7061 -1546.7529 c292.6567 -1537.6074 289.6128 -1528.7373 287.6406 -1519.5684 c285.8213 -1511.1094 282.6055 -1502.1855 282.3677 -1493.5293 c282.3354 -1492.3535 282.0444 -1491.3486 281.5796 -1490.502 C282.5513 -1490.249 283.5151 -1489.7422 284.4131 -1488.9102 c286.7759 -1486.7207 289.4648 -1485.2822 292.4556 -1484.1211 c295.2197 -1483.0469 299.1211 -1482.46 301.5283 -1480.7119 c301.8481 -1480.4795 302.1763 -1480.2646 302.4995 -1480.0391 C303.2065 -1481.1494 304.2676 -1482.0908 305.7354 -1482.6836 c308.3623 -1483.7441 310.4907 -1486.0557 312.4746 -1487.9902 c314.6504 -1490.1113 317.0552 -1491.7646 318.916 -1494.2266 c323.501 -1500.293 328.269 -1506.3359 332.0757 -1512.9375 c339.563 -1525.9229 342.4116 -1542.0283 343.8809 -1556.7217 c345.5137 -1573.0508 347.7144 -1589.4082 348.7427 -1605.7832 c349.7534 -1621.8789 348.9219 -1638.0547 347.1631 -1654.0674 c345.3994 -1670.1211 341.5552 -1685.7158 339.0913 -1701.6289 c337.9521 -1708.9863 337.6343 -1716.3428 335.4238 -1723.5029 c333.2544 -1730.5313 331.8848 -1737.7324 331.3579 -1745.0879 c330.8281 -1752.4775 329.8115 -1759.3477 328.1587 -1766.6055 c326.3457 -1774.5674 324.313 -1782.4746 322.6426 -1790.4697 c319.3999 -1805.9912 317.0806 -1822.2705 315.6128 -1838.0586 c314.2173 -1853.0693 315.4043 -1868.4248 315.458 -1883.4814 c315.5146 -1899.3643 316.1353 -1915.1875 318.644 -1930.8936 c319.2104 -1934.4385 319.9492 -1937.7041 321.3442 -1941.0186 c322.6001 -1944.0039 324.4263 -1947.0566 324.6597 -1950.3496 c324.9971 -1955.1123 316.4067 -1957.3008 313.1187 -1957.6357 c305.478 -1958.4131 298.5459 -1957.208 291.3247 -1954.8008 c285.2739 -1952.7842 279.668 -1950.791 273.8823 -1947.3701 c266.6489 -1943.0938 260.1123 -1954.333 267.3208 -1958.5947 c269.9883 -1960.1719 272.853 -1961.0283 275.6519 -1962.2969 c277.043 -1962.9277 277.8955 -1964.0127 279.4058 -1964.5156 c281.0981 -1965.0801 282.791 -1965.6445 284.4834 -1966.208 c291.7554 -1968.6328 298.6304 -1970.5664 306.3442 -1970.8633 c317.9126 -1971.3096 332.2354 -1967.8691 336.6641 -1955.624 c338.9419 -1949.3242 336.5044 -1943.3672 333.9287 -1937.5898 c330.7954 -1930.5615 330.3154 -1922.3438 329.6147 -1914.7559 c328.2007 -1899.4482 328.6152 -1884.0752 328.3965 -1868.7275 c328.2935 -1861.5078 328.043 -1854.2949 328.1602 -1847.0742 c328.2915 -1838.9648 329.5132 -1831.0703 330.6572 -1823.0625 c332.0615 -1813.2334 333.6138 -1803.5332 335.4717 -1793.8682 C337.8799 -1798.998 341.3057 -1803.7246 343.978 -1808.8662 c349.1807 -1818.875 355.2275 -1828.5098 360.5986 -1838.4766 c362.771 -1842.5088 365.019 -1846.1904 366.5229 -1850.5439 c368.2012 -1855.4004 371.5356 -1859.3779 374.5864 -1863.4541 c377.7339 -1867.6611 379.7759 -1872.0781 382.3203 -1876.6162 c382.7212 -1877.3301 385.374 -1880.9199 385.3652 -1880.8291 c385.6152 -1883.4883 386.5908 -1885.9121 387.959 -1888.1855 c392.7319 -1896.1152 398.4414 -1903.3408 402.978 -1911.4854 c408.0229 -1920.543 414.3623 -1928.7275 419.7139 -1937.5986 c424.9673 -1946.3066 428.749 -1955.6123 433.0073 -1964.8105 c435.1851 -1969.5146 438.2217 -1973.6465 440.7471 -1978.1504 c441.8237 -1980.0693 442.2329 -1982.2422 443.7305 -1983.9082 c444.3799 -1984.6318 445.6597 -1986.1621 445.7764 -1987.2109 c445.8066 -1987.4824 445.8516 -1987.7432 445.9067 -1987.9971 C439.8203 -1992.3262 431.9639 -1991.793 424.8232 -1993.6553 c415.6567 -1996.0449 405.9902 -1995.5 396.6372 -1996.7266 c386.1992 -1998.0967 375.9585 -2000.3369 365.3882 -2000.458 c354.4209 -2000.584 343.4443 -2000.458 332.4761 -2000.458 c321.5112 -2000.458 310.3496 -2001.6113 299.4463 -2000.0234 c294.7441 -1999.3389 290.2397 -1998.2305 285.4678 -1997.9492 c283.2988 -1997.8213 281.1191 -1997.835 278.9478 -1997.8262 c276.4976 -1997.8164 273.6357 -1996.0859 271.3364 -1995.3213 c266.1553 -1993.5986 260.3203 -1993.5176 254.9409 -1992.6973 c249.3286 -1991.8428 243.7197 -1990.9697 238.1011 -1990.1592 c235.9673 -1989.8516 233.8809 -1990.0029 231.7817 -1989.4854 c229.2813 -1988.8682 227.3135 -1986.8018 225.1724 -1985.5479 c220.6104 -1982.875 214.2651 -1983.7871 209.3745 -1981.5986 c205.5508 -1979.8877 201.9751 -1981.8877 200.3462 -1984.7285 C200.3247 -1982.1279 199.0039 -1979.4834 195.9736 -1978.3105 c193.5493 -1977.3721 191.4731 -1975.6387 189.3008 -1974.25 c186.915 -1972.7246 183.9482 -1972.084 181.3828 -1970.8789 c175.5156 -1968.123 169.5767 -1964.9707 163.4067 -1962.9619 c160.4854 -1962.0107 157.6709 -1961.6709 154.8721 -1960.2715 c153.6694 -1959.6699 152.4663 -1959.0684 151.2632 -1958.4678 C151.3213 -1958.4121 151.3745 -1958.3711 151.4351 -1958.3076 C156.8384 -1955.1201 160.6055 -1950.5205 165.8281 -1947.1992 c171.1665 -1943.8047 175.8594 -1940.2939 181.6372 -1937.5371 c188.4414 -1934.292 195.6528 -1932.4229 202.4634 -1929.2256 c207.7104 -1926.7617 212.875 -1922.8457 214.9375 -1917.2441 c217.2832 -1910.8711 214.8408 -1904.6563 210.6899 -1899.6758 c206.6069 -1894.7783 200.8638 -1892.5254 195.2886 -1889.7881 c188.7192 -1886.5635 182.2769 -1885.0967 175.3569 -1882.8633 c169.1011 -1880.8447 162.8384 -1878.6309 156.479 -1876.9414 c148.4004 -1874.7949 140.4463 -1873.3945 132.1587 -1872.2734 c124.6558 -1871.2578 117.332 -1869.3916 109.8408 -1868.3232 c102.0723 -1867.2148 94.5737 -1866.0732 86.9688 -1864.1064 c79.7134 -1862.2305 72.2588 -1861.1602 64.8516 -1860.0908 c57.3677 -1859.0107 50.5879 -1855.916 42.9385 -1855.6455 c28.5815 -1855.1387 13.7192 -1855.5059 -0.372559 -1855.6162 C-0.372559 -1869 L40.8809 -1869 L48.0581 -1869 54.3813 -1871.8008 61.396 -1872.8027 c69.4536 -1873.957 77.4688 -1875.168 85.356 -1877.208 c92.3184 -1879.0078 99.2642 -1879.9443 106.3848 -1880.9023 c114.5044 -1881.9951 122.4453 -1883.9844 130.5737 -1885.084 c145.4941 -1887.1035 159.3281 -1891.3525 173.605 -1895.96 c176.6509 -1896.9424 179.8335 -1897.4873 182.9165 -1898.3408 c186.022 -1899.2002 188.7954 -1901.0781 191.6982 -1902.4463 c194.8765 -1903.9443 205.1753 -1908.166 202.5044 -1913.2988 c199.8853 -1918.3301 190.7549 -1919.8701 185.9351 -1921.4102 c179.3452 -1923.5156 172.646 -1927.1484 166.6831 -1930.6455 c161.8228 -1933.4971 156.7964 -1937.2598 152.4614 -1940.873 c150.1816 -1942.7734 148.7959 -1944.7891 146.1558 -1946.3457 c142.7725 -1948.3408 140.1982 -1950.0986 138.0415 -1953.4707 c134.6274 -1958.8076 137.8237 -1964.9678 142.356 -1968.248 c145.1113 -1970.2422 148.4297 -1971.5566 151.4702 -1973.0762 c154.3882 -1974.5352 157.7524 -1974.4365 160.6855 -1975.709 c166.2607 -1978.1279 171.7271 -1980.7607 177.2935 -1983.2324 c182.5122 -1985.5508 187.2007 -1988.7891 192.5176 -1990.8457 c195.7368 -1992.0918 198.1973 -1990.6973 199.4443 -1988.4189 C199.5825 -1990.1777 200.5923 -1991.8291 202.813 -1992.8232 c207.9106 -1995.1045 212.959 -1996.0068 218.4082 -1997.0322 C217.9668 -1996.082 218.3467 -1996.2588 219.5483 -1997.5625 C220.8711 -1998.4404 222.2183 -1999.1953 223.624 -1999.9326 c226.2051 -2001.2871 228.7363 -2002.2754 231.6338 -2002.6426 c243.0391 -2004.0869 254.9565 -2004.8643 266.1919 -2007.375 c271.3555 -2008.5293 275.2363 -2010.8115 280.6519 -2010.833 c285.957 -2010.8545 290.7939 -2011.6533 295.9902 -2012.5586 c308.0249 -2014.6563 320.3408 -2013.5117 332.4761 -2013.458 c344.0659 -2013.4063 355.6592 -2013.5693 367.248 -2013.4365 c378.3198 -2013.3096 389.083 -2009.6689 400.064 -2009.4785 c409.8965 -2009.3076 420.4141 -2008.2412 429.9136 -2005.7646 c434.6772 -2004.5225 439.6641 -2004.4746 444.437 -2003.1719 c449.2104 -2001.8682 453.3115 -1999.1113 456.8726 -1995.7559 c458.8662 -1993.877 459.2236 -1991.6377 458.5967 -1989.668 C458.8018 -1988.9512 458.8789 -1988.1357 458.7764 -1987.2109 c458.3711 -1983.5625 457.1807 -1980.4932 455.1118 -1977.4512 C454.7627 -1976.998 454.4136 -1976.5469 454.0645 -1976.0947 C454.1045 -1976.0488 453.8853 -1975.5459 453.3862 -1974.5508 C452.228 -1971.9541 450.832 -1969.5449 449.311 -1967.1455 c443.5806 -1958.1016 440.0884 -1948.0352 435.1606 -1938.5605 c430.7085 -1930 425.2983 -1922.0049 419.7109 -1914.1572 c413.7593 -1905.7979 409.3848 -1896.3125 403.5718 -1887.8271 c402.3584 -1886.0566 401.0361 -1884.4287 399.9639 -1882.5615 c398.7778 -1880.4961 398.6235 -1879.8506 397.9854 -1877.5322 c397.3901 -1875.3672 395.6235 -1873.4072 394.438 -1871.5361 c392.9492 -1869.1865 392.1826 -1866.4453 390.748 -1864.1309 c388.0347 -1859.75 384.8643 -1855.7207 381.8618 -1851.541 c378.8916 -1847.4072 377.6089 -1842.6621 375.3823 -1838.1299 c370.8389 -1828.8809 365.6113 -1819.459 360.0566 -1810.7744 c356.9727 -1805.9531 354.5488 -1800.8203 351.6924 -1795.8535 c349.3369 -1791.7588 345.8296 -1788.0859 345.5586 -1783.1563 c345.3384 -1779.1494 342.2192 -1777.0635 339.0908 -1776.9033 C339.1963 -1776.4551 339.2939 -1776.0068 339.4014 -1775.5586 c341.1685 -1768.1807 342.812 -1760.7832 344.0098 -1753.2881 c345.1396 -1746.2227 344.6123 -1739.0859 346.3706 -1732.0371 c348.1738 -1724.8066 350.1211 -1718.1084 350.9814 -1710.6484 c351.9292 -1702.4375 353.7896 -1694.4258 355.312 -1686.3066 c357.1094 -1676.7178 358.6274 -1667.0664 359.7803 -1657.374 C363.1064 -1662.0332 365.7915 -1667.0967 368.9902 -1671.9014 c372.8613 -1677.7158 376.3066 -1683.9385 380.1597 -1689.8057 c382.2246 -1692.9512 384.1426 -1696.1816 386.2734 -1699.2852 c388.333 -1702.2832 391.0068 -1704.6943 393.3745 -1707.4385 c401.9023 -1717.3223 408.6909 -1728.6201 417.3535 -1738.5488 c421.5928 -1743.4072 424.7842 -1748.8271 428.5356 -1754.0449 c432.5356 -1759.6084 437.5757 -1765.2227 439.9111 -1771.7617 c442.0771 -1777.8252 445.9282 -1782.7383 449.0684 -1788.2578 c452.4248 -1794.1582 456.3491 -1799.9619 462.0439 -1803.7754 c463.4409 -1804.7109 464.5884 -1808.5566 466.1104 -1810.1309 c468.3438 -1812.4424 470.2104 -1814.8311 471.9043 -1817.5615 c473.7925 -1820.6064 475.2705 -1823.1777 477.7349 -1825.8242 c480.5562 -1828.8545 483.0278 -1832.1797 485.4297 -1835.5449 c489.1528 -1840.7598 492.1841 -1846.4766 496.1294 -1851.5137 c500.4834 -1857.0713 505.9805 -1861.8506 510.9683 -1866.8379 c521.5332 -1877.4033 530.6445 -1889.0039 542.3154 -1898.4941 c545.9717 -1901.4668 548.7715 -1905.3193 551.8477 -1908.8672 c555.2773 -1912.8232 559.21 -1916.3965 562.9102 -1920.0967 c569.7593 -1926.9453 574.9248 -1935.21 582.2617 -1941.6436 c589.7002 -1948.166 597.9629 -1950.4844 607.6421 -1948.4248 c612.5532 -1947.3799 616.9893 -1944.8506 621.6357 -1943.0723 c626.8101 -1941.0918 632.1919 -1939.667 637.4336 -1937.8799 c642.0107 -1936.3184 646.2544 -1934.0313 650.7588 -1932.3223 c655.4824 -1930.5313 660.2871 -1929.1504 664.877 -1926.998 c674.228 -1922.6143 681.8232 -1915.2939 690.4209 -1909.7344 c699.1421 -1904.0947 706.9106 -1897.0303 714.3149 -1889.793 c718.1094 -1886.085 721.8047 -1882.2754 725.5342 -1878.5029 c729.0903 -1874.9053 733.043 -1872.5693 735.666 -1868.0576 c739.8887 -1860.7959 728.6519 -1854.2549 724.4414 -1861.4971 cf0 D140.6353 -1518.3701 m145.8618 -1517.2119 150.7715 -1515.2207 155.583 -1512.8711 c157.8447 -1511.7666 161.645 -1511.9541 164.1387 -1511.6123 c166.2686 -1511.3203 168.3486 -1510.9121 170.4023 -1510.3867 C174.8291 -1519.7441 180.8823 -1528.2598 185.8823 -1537.3066 C184.2646 -1537.7646 182.7729 -1538.7842 181.1958 -1539.373 c178.3521 -1540.4346 174.7109 -1540.2676 171.7349 -1540.1885 c165.1982 -1540.0156 158.5708 -1538.3223 152.1904 -1536.9844 c147.0601 -1535.9092 141.4907 -1534.5859 137.4609 -1531.0605 c133.7739 -1527.835 129.0811 -1526.2822 124.7061 -1524.124 C129.7158 -1521.6914 134.8799 -1519.6455 140.6353 -1518.3701 cf197.3931 -1387.209 m199.0264 -1378.3057 197.9253 -1369.085 194.7476 -1360.6533 C195.2544 -1360.8486 195.7705 -1361.0537 196.3027 -1361.3086 c198.9258 -1362.5664 200.1509 -1365.293 201.5015 -1367.6816 c205.0137 -1373.8936 209.1841 -1378.7012 207.1333 -1386.1563 c205.3901 -1392.4912 200.8149 -1397.8076 194.9253 -1400.5781 c193.7017 -1401.1533 192.3833 -1401.4795 191.0146 -1401.6338 C194.5186 -1397.6582 196.4268 -1392.4756 197.3931 -1387.209 cf94.314 -1341.4238 m105.3901 -1335.8848 119.6992 -1338.0996 131.7393 -1338.0996 c138.5518 -1338.0996 145.0439 -1339.1729 151.7065 -1340.502 c154.1602 -1340.9922 156.6533 -1340.625 159.1118 -1341.1465 c162.1016 -1341.7793 164.8765 -1344.3174 167.2681 -1346.0889 c176.2407 -1352.7354 182.1855 -1360.833 184.5112 -1371.9268 c185.6533 -1377.374 185.293 -1383.2178 183.7397 -1388.5254 c181.9771 -1394.5469 177.6108 -1396.0908 171.8652 -1396.1924 c170.8013 -1396.2109 169.874 -1396.4395 169.0801 -1396.8193 C164.4053 -1393.3799 159.7183 -1390.2871 154.2466 -1388.0771 c147.623 -1385.4033 140.6343 -1387.2529 134.4902 -1390.1768 c122.9233 -1395.6787 113.4316 -1405.2158 107.5044 -1416.5068 c104.769 -1421.7158 102.9668 -1427.3965 101.8657 -1433.1582 c100.5474 -1440.0566 101.2256 -1446.6484 101.4331 -1453.5977 c101.4961 -1455.7031 101.8804 -1457.8301 100.3633 -1459.3799 c98.876 -1460.8984 96.5229 -1461.7949 94.6245 -1462.665 c89.5645 -1464.9863 84.4937 -1466.4531 79.0977 -1467.6338 c74.4868 -1468.6436 68.6772 -1469.5078 63.1494 -1471.0869 C62.7642 -1470.0615 62.1475 -1469.1289 61.269 -1468.4297 C58.1606 -1459.0156 52.4111 -1450.7246 49.9082 -1441.0713 c46.6367 -1428.4541 50.4634 -1413.7705 54.3838 -1401.751 c56.5249 -1395.1875 58.2148 -1388.9082 61.1748 -1382.6084 c63.8081 -1377.0049 66.8052 -1371.46 69.8564 -1366.0732 c75.4907 -1356.1279 84.0918 -1346.5332 94.314 -1341.4238 cf569.7681 -1866.7529 m569.2617 -1872.5898 565.8428 -1877.4785 565.5239 -1883.2168 c565.3291 -1886.7207 564.7925 -1890.2012 564.1401 -1893.6445 c563.7202 -1895.8623 563.1724 -1898.0508 562.4844 -1900.2002 c562.4678 -1900.2529 562.4551 -1900.292 562.4409 -1900.3379 C562.3394 -1900.3623 562.2393 -1900.3896 562.1411 -1900.4189 C559.5078 -1897.5459 556.8735 -1894.6699 554.2466 -1891.7773 c549.4287 -1886.4717 543.1821 -1882.2119 538.0898 -1877.0859 c534.5229 -1873.4961 531.123 -1869.7432 527.7681 -1865.9512 C528.749 -1865.6631 529.7144 -1865.0723 530.5947 -1864.1074 c539.1543 -1854.7314 540.7642 -1839.7803 542.3379 -1827.6768 c543.2422 -1820.7217 543.1387 -1813.71 544.002 -1806.7393 c544.9731 -1798.8975 545.6636 -1791.2393 545.6636 -1783.3311 c545.6636 -1769.0586 546.2671 -1754.7832 543.1606 -1740.7539 c541.6914 -1734.1162 538.9282 -1727.6895 536.7803 -1721.2461 c534.4258 -1714.1826 532.855 -1707.0176 530.292 -1699.9707 c524.8257 -1684.9385 518.334 -1669.9561 514.9526 -1654.293 c513.3408 -1646.8262 512.2627 -1639.2471 510.9458 -1631.7246 c509.4722 -1623.3066 510.166 -1614.6162 509.48 -1606.0889 c508.2905 -1591.3018 508.7168 -1576.3457 508.7876 -1561.4795 C509.4731 -1564.3701 510.125 -1567.2686 510.7012 -1570.1855 c513.4297 -1584.0039 516.7319 -1597.4268 520.6577 -1610.9551 c522.7109 -1618.0283 523.6753 -1625.54 525.2808 -1632.7344 c527.0532 -1640.6768 529.1235 -1648.5469 531.5996 -1656.3008 c536.3511 -1671.1777 543.2925 -1685.3105 548.4365 -1700.0762 c553.5786 -1714.8379 558.4116 -1729.7539 562.0122 -1744.9746 c565.7222 -1760.6582 566.0811 -1776.666 567.231 -1792.6729 c568.3887 -1808.792 569.4805 -1824.9131 569.5249 -1841.0811 c569.5483 -1849.6582 570.5117 -1858.1807 569.7681 -1866.7529 cf*UU674.6885 -2107.8369 m675.1699 -2116.2813 675.4502 -2124.8818 675.4194 -2133.3398 c675.3921 -2140.8652 673.9673 -2151.3906 669.5425 -2157.7051 c668.9951 -2158.4863 668.4355 -2159.2217 667.8696 -2159.9277 C682.9375 -2159.9277 L684.8071 -2155.7217 685.8975 -2151.1934 686.8857 -2146.5488 c688.5181 -2138.873 688.5259 -2131.2725 688.1675 -2123.4658 c687.79 -2115.2441 687.7012 -2107.0479 687.0454 -2098.8389 c686.501 -2092.0254 686.0112 -2085.5557 684.7759 -2078.8223 c683.6123 -2072.4766 681.0308 -2065.2119 682.7148 -2058.8164 c684.2686 -2052.9141 692.4897 -2049.8076 697.0415 -2046.4512 c703.1479 -2041.9473 708.2646 -2036.7471 713.0103 -2030.8398 c717.1333 -2025.709 721.2324 -2020.499 725.5879 -2015.5791 c730.3062 -2010.249 736.1519 -2005.9902 741.2319 -2001.0215 c745.9609 -1996.3965 751.0674 -1991.8154 755.0723 -1986.541 c759.8584 -1980.2373 763.8159 -1974.127 767.2339 -1966.9307 c770.3169 -1960.4395 772.9736 -1954.1152 776.8184 -1948.0225 c780.6689 -1941.9189 784.5361 -1935.8369 788.2314 -1929.6377 c791.7827 -1923.6807 795.2344 -1917.6416 798.228 -1911.3818 c801.373 -1904.8047 802.9854 -1897.6797 806.4663 -1891.252 c810.4189 -1883.9541 814.8799 -1876.8838 817.9434 -1869.1377 c820.7988 -1861.917 823.5884 -1854.8701 827.8193 -1848.3105 c832.3789 -1841.2432 821.1211 -1834.7324 816.5947 -1841.75 c812.8545 -1847.5469 810.0972 -1853.7607 807.564 -1860.1602 c804.8018 -1867.1387 801.4473 -1873.6543 797.7578 -1880.1875 c794.3008 -1886.3086 791.5381 -1892.3389 789.2212 -1898.9795 c786.7842 -1905.9619 783.2236 -1912.3584 779.5449 -1918.7539 c772.5215 -1930.9668 763.9795 -1942.3672 758.3198 -1955.2754 c755.5488 -1961.5957 752.6851 -1969.585 747.9351 -1974.7148 c745.5942 -1977.2432 743.7534 -1980.1162 741.3003 -1982.5684 c738.6372 -1985.2314 735.9741 -1987.8955 733.311 -1990.5586 c728.6172 -1995.252 723.4531 -1999.417 718.6782 -2004.0234 c713.6284 -2008.8945 709.2314 -2014.7939 704.8872 -2020.2988 c700.5693 -2025.7695 696.0425 -2030.9785 690.48 -2035.2256 c684.9058 -2039.4824 677.5352 -2042.3555 673.5762 -2048.3232 c665.7212 -2060.165 670.7388 -2074.373 673.1519 -2087.1855 c674.3994 -2093.8076 674.3042 -2101.0957 674.6885 -2107.8369 cf*u1 D444.8022 -1311.7148 m463.3604 -1327.4424 490.1235 -1336.1191 513.5811 -1326.833 c525.2559 -1322.2109 534.0273 -1313.9063 538.8105 -1302.3398 c543.165 -1291.8105 543.6733 -1278.6318 542.812 -1267.3994 c541.6333 -1252.0322 531.4629 -1237.3301 520.2251 -1227.293 c514.377 -1222.0684 507.2676 -1218.8486 500.3174 -1215.4053 c492.5874 -1211.5752 482.937 -1213.0889 474.6563 -1213.2012 c474.3799 -1213.2051 474.1133 -1213.2246 473.855 -1213.2559 C463.6729 -1212.209 452.7451 -1213.1563 443.8433 -1217.251 c433.4985 -1222.0088 428.0088 -1236.6016 426.0508 -1246.9063 c423.8384 -1258.5479 424.7075 -1270.4736 426.4795 -1282.1045 c428.2715 -1293.8672 435.9355 -1304.2012 444.8022 -1311.7148 cf0 D439.4614 -1246.2891 m440.6914 -1241.1748 442.9053 -1236.2402 446.2808 -1232.1816 c450.9639 -1226.5498 457.8281 -1226.3242 464.6924 -1226.2129 c469.7051 -1226.1309 474.605 -1226.1602 479.5107 -1227.2852 c482.0288 -1227.8633 484.0977 -1227.0664 485.5181 -1225.6377 C488.9722 -1225.6006 492.3594 -1225.9385 495.2217 -1227.3564 c501.2168 -1230.3271 507.2349 -1233.0928 512.2695 -1237.5898 c521.562 -1245.8896 529.4473 -1257.999 530.0068 -1270.6406 c530.4897 -1281.5508 529.687 -1293.8193 523.8994 -1303.3438 c517.7896 -1313.3975 504.229 -1317.4707 493.1973 -1317.6748 c481.0195 -1317.9004 469.8008 -1313.0137 459.6919 -1306.6211 c449.8774 -1300.415 441.9238 -1291.5586 439.2837 -1280.0586 c436.8315 -1269.375 436.9067 -1256.9121 439.4614 -1246.2891 cf*U487.1733 -1267.4404 m490.479 -1269.6104 493.8984 -1270.9395 497.8843 -1270.3887 c502.6445 -1269.7314 504.751 -1264.7266 504.853 -1260.5059 c504.9385 -1256.9629 501.8315 -1254 498.353 -1254 C493.0869 -1254 L491.5249 -1254 490.0781 -1254.5762 488.9473 -1255.5215 C487.2603 -1255.9609 485.7236 -1257.042 484.8418 -1258.5479 c482.981 -1261.7236 484.2173 -1265.501 487.1733 -1267.4404 cf*u1 D220.8042 -76.4634 m229.5957 -80.8594 238.7319 -87.4453 248.71 -88.5151 c257.877 -89.498 264.8066 -86.6514 269.5825 -78.4849 c274.2622 -70.4834 272.7822 -61.5381 267.6304 -54.2793 c261.9585 -46.2886 256.6606 -37.7275 248.8667 -31.5869 c242.6772 -26.7104 234.4199 -25.8267 226.6821 -26.5566 C226.2202 -24.5596 224.8335 -22.7808 222.3022 -22.0166 c218.7861 -20.9546 215.1216 -20.4175 211.626 -21.8315 c206.7998 -23.7842 204.7173 -27.7939 202.5146 -32.2539 c198.0034 -41.3867 197.5679 -51.312 202.3828 -60.417 c206.0449 -67.3428 213.9785 -73.0503 220.8042 -76.4634 cf0 D214.4971 -37.2817 m215.5903 -35.0684 215.7178 -34.1289 216.9199 -34.145 C217.5923 -37.4873 220.6084 -40.6079 224.9351 -39.8179 c229.7334 -38.9424 236.7666 -38.4888 240.8892 -41.7363 c245.9458 -45.7207 249.7983 -51.1494 253.1392 -56.5781 c255.3169 -60.1162 260.2168 -63.7773 259.4907 -68.4551 c259.189 -70.3984 258.3262 -72.3848 257.0767 -73.9028 c255.1021 -76.3018 253.23 -75.7983 250.4072 -75.6968 c244.7041 -75.4922 239.2939 -71.2021 234.3867 -68.7485 c228.9741 -66.0425 223.7051 -63.6265 219.0156 -59.7676 c214.8394 -56.3306 212.0908 -52.4517 211.7422 -46.916 c211.5317 -43.5742 213.0566 -40.1978 214.4971 -37.2817 cf*U*u1 D457.8701 -401.9126 m467.75 -405.1235 475.9971 -405.5342 485.5059 -400.811 c499.3784 -393.9199 508.8589 -375.5464 496.4722 -362.71 c489.0679 -355.0366 476.7358 -354.7407 466.2607 -354.8179 C462.9536 -354.5474 459.3535 -353.5488 456.2905 -355.3276 c452.5503 -357.499 449.4927 -360.0952 446.9243 -363.5962 c442.105 -370.165 438.0308 -379.8936 440.0493 -388.0503 c441.9878 -395.8833 451.0527 -399.6973 457.8701 -401.9126 cf0 D455.8628 -373.5981 m457.0547 -371.3896 458.6782 -369.3086 460.7148 -367.8169 C460.9648 -367.8418 461.2231 -367.855 461.4902 -367.8545 c463.1309 -367.8506 464.7788 -367.8306 466.4277 -367.8252 C466.5381 -367.834 466.6436 -367.8481 466.7563 -367.8545 c467.1553 -367.8774 467.5293 -367.8608 467.8901 -367.8257 C473.2461 -367.8467 478.5918 -368.1348 483.7217 -369.8257 c492.3145 -372.6582 489.1777 -381.8657 483.9028 -386.4409 c479.4556 -390.2979 473.2886 -392.6748 467.4971 -391.2085 c462.9922 -390.0674 457.356 -388.8232 453.7109 -385.7813 c450.5425 -383.1367 454.2832 -376.5249 455.8628 -373.5981 cf*U*u1 D1428.5464 -132.543 m1441.3447 -136.9902 1454.8813 -139.1665 1468.3794 -137.4668 c1483.2603 -135.5933 1496.6123 -128.9834 1510.6709 -124.3315 c1515.7217 -122.6606 1519.8501 -119.7432 1524.082 -116.7476 C1523.291 -123.6201 1525.6367 -130.3701 1528.3374 -136.6162 c1531.0332 -142.8511 1534.1338 -149.8682 1541.0469 -152.3364 c1547.7256 -154.7207 1556.0181 -152.4097 1561.8643 -148.8765 c1568.0708 -145.125 1569.0254 -138.9297 1568.8647 -132.2129 c1568.6685 -124.0073 1567.373 -117.4614 1562.7954 -110.4595 c1559.313 -105.1323 1557.7559 -99.9111 1551.8071 -96.6548 c1550.4146 -95.8926 1549.0078 -95.0801 1547.5864 -94.2563 C1557.2031 -88.9897 1566.665 -80.6064 1568.6846 -70.3848 c1569.9736 -63.8574 1568.5537 -56.8901 1568.7734 -50.2583 c1568.9707 -44.3184 1567.0732 -36.8877 1560.6348 -35.0288 c1555.583 -33.5708 1549.7646 -37.5498 1545.834 -40.2266 c1540.5986 -43.792 1538.4409 -48.5669 1535.6328 -54.1328 c1532.0825 -61.1694 1528.6553 -68.1421 1526.3638 -75.7407 c1525.5977 -78.2813 1524.8203 -80.853 1524.2075 -83.4424 C1522.5908 -82.5229 1520.4531 -81.8438 1518.8799 -81.04 c1515.7959 -79.4634 1512.7515 -77.9331 1509.4805 -76.7729 c1504.376 -74.9624 1497.8145 -74.7153 1492.4355 -74.5078 c1485.6016 -74.2437 1478.7285 -74.4443 1471.8906 -74.4443 c1465.4268 -74.4443 1459.6191 -77.6797 1453.25 -78.3311 c1447.1401 -78.9565 1441.9175 -80.6812 1436.5059 -83.626 c1431.2354 -86.4941 1426.4844 -90.0854 1421.5249 -93.4307 c1416.5967 -96.7554 1412.2939 -100.2969 1409.0117 -105.3096 c1407.7031 -107.3086 1407.6768 -109.2637 1408.4121 -110.8799 C1406.4985 -111.7656 1405.1738 -113.6313 1405.4907 -116.4893 c1406.7612 -127.9473 1419.564 -129.4219 1428.5464 -132.543 cf0 D1538.0586 -82.6724 m1539.6108 -76.9028 1541.6299 -71.5259 1543.9238 -66.0059 c1545.8232 -61.4355 1548.6885 -56.7485 1551.1665 -52.4512 c1551.8779 -51.2168 1553.9854 -50.0537 1555.8643 -49.1279 C1555.8779 -50.1982 1555.7383 -51.3218 1555.6865 -52.2998 c1555.4277 -57.1851 1556.2515 -62.0161 1556.1006 -66.9019 c1555.9512 -71.7456 1552.1802 -74.376 1548.8389 -77.2324 c1545.5215 -80.0679 1541.5337 -83.1118 1537.4395 -84.8672 C1537.646 -84.1499 1537.8569 -83.4214 1538.0586 -82.6724 cf1539.6035 -106.9746 m1539.6021 -106.3281 1539.5806 -105.7075 1539.5464 -105.1016 C1540.2461 -105.5151 1540.9512 -105.9214 1541.6748 -106.3042 c1545.6348 -108.3994 1547.4443 -108.6235 1549.2197 -112.9512 c1551.3682 -118.1904 1555.3711 -121.5459 1555.6274 -127.5371 c1555.73 -129.9341 1555.895 -132.3188 1555.8945 -134.7197 c1555.894 -135.6118 1555.8271 -136.4717 1555.6582 -137.333 C1555.1807 -137.7393 1554.6719 -138.1025 1554.0991 -138.3789 C1551.7686 -139.7876 1546.1528 -141.6929 1544.083 -139.002 c1540.8535 -134.8027 1538.7012 -128.8506 1537.4131 -123.7554 c1535.8579 -117.605 1539.6177 -112.9014 1539.6035 -106.9746 cf1420.2363 -111.8711 m1422.8599 -107.8647 1426.9297 -105.4497 1430.8135 -102.8086 c1435.2827 -99.7695 1439.6353 -96.7183 1444.3984 -94.1265 c1448.875 -91.6904 1453.4404 -91.4492 1458.3584 -90.6538 c1464.4453 -89.6694 1469.5586 -87.4443 1475.8398 -87.4443 c1481.3711 -87.4443 1486.9058 -87.3813 1492.4355 -87.5078 c1497.1934 -87.6162 1503.1689 -87.9834 1507.5566 -89.8599 c1509.7715 -90.8071 1511.8853 -92.0435 1514.0288 -93.1392 c1515.3115 -93.7944 1517.8652 -94.665 1518.6851 -95.3198 C1519.374 -95.9253 1520.1172 -96.4521 1520.9141 -96.9004 C1523.1597 -98.2871 1522.7959 -98.9341 1521.5732 -95.8369 c1521.9497 -96.7905 1522.3945 -97.5205 1522.9121 -98.1284 C1523.021 -98.7539 1523.1646 -99.3735 1523.5449 -100.0225 c1523.5762 -100.0757 1523.6191 -100.1255 1523.6543 -100.1777 C1522.1006 -102.8506 1518.7197 -104.6982 1516.2998 -106.2959 c1512.0957 -109.0718 1508.7236 -111.4702 1503.7329 -112.8545 c1498.4858 -114.3091 1493.3433 -117.1011 1488.1855 -118.9316 c1482.2764 -121.0278 1476.2295 -122.8599 1470.0869 -124.1299 c1459.8818 -126.2407 1449.6108 -124.8652 1439.6626 -122.2822 c1435.0283 -121.0786 1430.6406 -119.2861 1426.085 -117.8726 c1424.3975 -117.3491 1422.6733 -116.9463 1420.9824 -116.4307 c1420.4292 -116.2632 1419.8853 -116.0698 1419.3506 -115.8511 c1418.5337 -115.4863 1418.2686 -115.1973 1418.2319 -115.2202 C1418.1191 -114.8359 1417.9771 -114.4756 1417.8096 -114.1362 C1418.7173 -113.6523 1419.5527 -112.9155 1420.2363 -111.8711 cf*U*u1 D2129.4141 -248.5889 m2142.8945 -248.1392 2154.4463 -243.9814 2166.6855 -238.6484 c2180.0039 -232.8452 2192.252 -225.1465 2204.3789 -217.2173 c2216.6289 -209.2075 2225.2637 -198.5547 2235.4395 -188.2256 c2237.8301 -185.7983 2239.3086 -181.8584 2241.2275 -179.0112 c2243.1855 -176.1064 2245.6582 -173.4375 2247.3926 -170.4014 c2248.6719 -168.1621 2250.0938 -166.2515 2251.333 -164.2822 C2251.7754 -164.5239 2252.2646 -164.729 2252.8105 -164.8838 c2257.9434 -166.3379 2262.9209 -168.7656 2267.6172 -171.2686 c2272.9404 -174.1055 2278.8066 -175.8604 2284.4063 -178.0488 c2290.4717 -180.4194 2297.0625 -181.7637 2303.2002 -184.1255 c2309.4727 -186.5405 2315.6982 -189.1655 2322.1924 -190.9399 c2334.5391 -194.314 2347.8633 -194.7495 2360.543 -195.8447 c2374.8164 -197.0767 2389 -198.0269 2403 -198.0283 c2405.3281 -198.0283 2407.0488 -197.1553 2408.1719 -195.8657 C2407.2715 -197.4243 2406.3867 -198.9932 2405.5479 -200.5903 c2398.4512 -214.1128 2394.6592 -229.2329 2394.0723 -244.4019 c2393.8496 -250.1592 2397.0215 -256 2403.4238 -256.1226 c2410.6875 -256.2617 2417.8857 -251.8936 2424.7559 -249.9922 c2424.9063 -249.9507 2425.2715 -249.8857 2425.627 -249.8096 C2425.9648 -250.3477 2426.3008 -250.8867 2426.6514 -251.418 c2428.4844 -254.2539 2431.3555 -257.0806 2434.7109 -257.9951 c2440.5059 -259.5737 2445.7998 -257.2217 2450.1982 -253.6265 C2452.46 -254.0171 2454.9648 -254.5996 2457.2285 -254.8809 c2459.5635 -255.1714 2461.7012 -254.5264 2463.7451 -253.4448 C2464.4316 -253.0391 2465.0137 -252.5293 2465.502 -251.9272 C2465.377 -252.2178 2467.5791 -249.6084 2467.6514 -249.4922 c2469.7695 -246.0874 2469.2295 -242.6968 2469.043 -238.9219 c2468.7578 -233.1465 2467.9531 -227.6123 2466.3809 -222.0361 c2464.9316 -216.896 2462.7871 -211.9434 2460.5879 -207.0879 c2459.3691 -204.3979 2458.0098 -201.7729 2456.6328 -199.1611 c2455.9316 -197.8311 2455.6152 -196.5347 2455.1914 -195.0645 C2462.9121 -196.3223 2470.7217 -196.6646 2478.5742 -196.7075 c2483.3301 -196.7339 2488.0869 -196.7119 2492.8428 -196.7119 c2497.7803 -196.7119 2502.4326 -195.6147 2507.3037 -195.3955 c2510.8135 -195.2373 2512.8477 -192.8467 2513.4121 -190.1582 C2515.6934 -192.9092 2518.1475 -195.5498 2519.8828 -198.6167 c2524.166 -206.1826 2528.2734 -214.8315 2537.9277 -216.1689 c2547.2266 -217.457 2557.9775 -213.7339 2566.71 -210.8926 c2576.7031 -207.6416 2586.5635 -204.2271 2595.8086 -199.1631 c2600.2979 -196.7041 2603.9541 -193.1426 2608.3457 -190.5586 c2612.7188 -187.9854 2617.0723 -185.6104 2621.002 -182.3691 c2628.0039 -176.5942 2636.0957 -172.3213 2642.8838 -166.1689 c2646.1035 -163.25 2648.582 -159.4951 2651.6729 -156.4043 c2655.0605 -153.0171 2658.4619 -149.6777 2661.9736 -146.4214 c2664.8682 -143.7368 2667.9463 -139.7271 2667.8105 -135.5938 c2667.7813 -134.7036 2667.623 -133.917 2667.3691 -133.2119 C2667.7168 -130.8936 2666.9902 -128.3838 2664.6133 -126.6738 c2659.6162 -123.0801 2655.9297 -118.332 2649.8945 -116.2368 c2643.9365 -114.168 2639.9648 -108.252 2634.0977 -106.272 c2627.2012 -103.9443 2620.3984 -101.354 2613.5176 -98.9805 c2607.3584 -96.8555 2601.4287 -94.0923 2595.0635 -92.6577 c2589.1621 -91.3276 2583.418 -89.1001 2577.4365 -88.3218 c2569.5205 -87.2925 2561.9922 -86.2705 2554.2305 -84.3301 c2550.7432 -83.458 2547.3359 -82.3447 2543.7178 -82.3408 c2540.5771 -82.3374 2537.5 -82.2593 2534.4297 -81.562 c2531.1855 -80.8257 2528.1133 -79.4312 2524.8301 -78.6743 c2520.9736 -77.7856 2516.6865 -77.9956 2512.9336 -76.917 c2506.5195 -75.0732 2499.2158 -75.7607 2492.6191 -75.043 c2484.7451 -74.186 2476.7441 -74.4395 2468.8369 -74.4458 c2464.5049 -74.4492 2460.1729 -74.4771 2455.8438 -74.54 C2455.791 -74.3418 2455.7266 -74.145 2455.6465 -73.9507 c2453.8848 -69.7026 2451.4443 -66.5786 2446.7178 -65.6074 c2444.4268 -65.1367 2442.0469 -65.2441 2439.7246 -65.1816 c2436.1602 -65.0869 2432.6094 -64.1011 2429.165 -63.2646 c2423.5264 -61.896 2418.1582 -59.5786 2412.4551 -58.2876 c2406.2881 -56.8921 2400.2773 -55.563 2394.2891 -53.4976 c2391.7754 -52.6313 2388.8828 -51 2386.1875 -51 C2378.2939 -51 L2373.9854 -51 2368.209 -49.8003 2364.9629 -53.3535 c2361.5898 -57.0459 2360.3389 -61.8496 2357.6396 -65.9814 c2354.1895 -71.2637 2351.9746 -77.3716 2349.6406 -83.1973 c2349.0752 -84.6079 2349.0313 -85.8696 2349.3457 -86.9482 C2344.0029 -88.1592 2338.6172 -88.9702 2333.1162 -89.8159 c2327.0439 -90.7495 2320.9326 -91.3311 2314.874 -92.2827 c2308.4551 -93.2905 2302.3584 -96.2725 2296.2559 -98.373 c2284.9023 -102.2793 2273.8535 -106.8374 2263.1074 -112.1924 c2262.5605 -112.4648 2262.0635 -112.8711 2261.623 -113.3486 C2257.8242 -103.1172 2248.5186 -96.5571 2240.7031 -89.4653 c2231.8154 -81.4019 2225.2715 -71.8374 2214.375 -66.1157 c2204.0723 -60.7056 2195.4902 -52.6558 2184.7266 -48.0044 c2178.4941 -45.311 2171.9453 -43.2202 2165.585 -40.835 c2158.4199 -38.1479 2151.0391 -34.4805 2143.4883 -33.168 c2134.6699 -31.6348 2118.4355 -29.7671 2117.3174 -42.3271 c2116.8428 -47.6523 2119.5244 -52.6025 2121.5566 -57.3457 c2124.1914 -63.4985 2126.4141 -69.7227 2128.4717 -76.0894 c2131.874 -86.6187 2134.6094 -97.9424 2140.0469 -107.7568 c2143.293 -113.6157 2147.166 -118.9971 2150.1904 -125.0356 c2151.4434 -127.5376 2154.3018 -129.6328 2155.9502 -131.9468 c2157.3682 -133.9385 2158.541 -136.0815 2159.582 -138.2876 C2151.4873 -141.8013 2145.251 -149.3057 2139.1455 -155.6045 c2135.1914 -159.6841 2131.5723 -164.1357 2128.8047 -169.1099 c2125.502 -175.0493 2124.1904 -181.7764 2122.7266 -188.3345 c2122.0537 -191.3491 2121.7695 -195.0879 2120.3516 -197.8569 c2118.7539 -200.9775 2117.0303 -204.0059 2115.6963 -207.2559 c2114.4639 -210.2603 2113.5469 -213.3076 2113.0635 -216.52 c2112.5195 -220.1367 2113.2432 -224.3242 2112.3945 -227.8081 c2111.1797 -232.7944 2110.7285 -237.9741 2113.3867 -242.5708 c2116.5059 -247.9653 2123.8486 -248.7744 2129.4141 -248.5889 cf0 D2456.291 -241.9014 m2455.3496 -241.7681 2454.4238 -241.5371 2453.6436 -241.3511 c2449.3789 -240.3345 2446.0938 -239.6328 2442.666 -243.0146 c2441.8604 -243.8081 2439.124 -245.8213 2438.5684 -245.5479 c2437.1875 -244.8687 2436.2744 -242.2617 2435.3477 -241.0352 c2429.5791 -233.395 2420.0479 -237.2617 2412.7578 -240.2241 c2410.9121 -240.9741 2409.0488 -241.6533 2407.1641 -242.2881 C2407.4043 -237.3589 2407.958 -232.6943 2409.1758 -227.8501 c2411.8008 -217.3965 2416.2568 -207.6133 2421.7871 -198.4175 c2425.4756 -192.2827 2427.9199 -184.8618 2431.8047 -178.6821 C2435.9668 -184.8071 2439.9727 -191.0571 2442.5635 -197.9956 c2443.376 -200.1719 2443.4199 -202.0771 2444.5889 -204.2021 c2446.002 -206.771 2447.3203 -209.3892 2448.5996 -212.0259 c2451.2256 -217.4351 2453.2734 -223.0693 2454.7588 -228.8926 c2455.8594 -233.2041 2455.8809 -237.5166 2456.291 -241.9014 Cf2373.1563 -64.1719 m2373.2002 -64.1118 2373.2363 -64.0566 2373.2754 -64 C2384.3164 -64 L2386.8857 -64 2390.0801 -65.7739 2392.4893 -66.6045 c2401.1104 -69.5771 2410.1406 -70.7578 2418.8086 -73.5391 c2421.3242 -74.3467 2423.7754 -75.1245 2426.2559 -75.8198 C2424.7285 -75.9414 2423.2012 -76.0645 2421.6738 -76.2075 c2406.5205 -77.6299 2391.6816 -80.584 2376.4629 -81.1499 c2372.084 -81.313 2367.8955 -81.9854 2363.7461 -82.9893 C2366.6758 -76.5693 2370.2168 -70.6211 2373.1563 -64.1719 Cf2124.4404 -233.6196 m2124.7969 -231.2256 2125.4404 -229.0928 2125.4434 -226.6362 c2125.4492 -221.0303 2125.9141 -215.873 2128.29 -210.7168 c2130.7764 -205.3223 2133.2246 -200.8613 2134.5439 -195.0146 c2136.8047 -184.9956 2138.5664 -175.9126 2145.4453 -167.9316 c2148.5654 -164.311 2152.0801 -161.0269 2155.4111 -157.6035 c2158.6465 -154.2788 2162.6758 -149.6064 2167.6514 -149.3184 c2173.6826 -148.9697 2175.3691 -142.062 2172.6641 -138.4565 C2172.7959 -137.0947 2172.5293 -135.6479 2171.9473 -134.272 c2169.9932 -129.6548 2167.4648 -125.439 2164.2998 -121.5469 c2160.7021 -117.1235 2158.3896 -112.293 2155.4346 -107.4155 c2152.6641 -102.8408 2149.8516 -98.9756 2148.0859 -93.8618 c2146.3652 -88.8828 2144.1992 -84.1968 2143.3477 -78.9858 c2142.6875 -74.9365 2140.3877 -70.6411 2139.1367 -66.7031 c2137.4111 -61.2744 2135.0039 -56.0249 2132.7813 -50.7847 c2132.0088 -48.9644 2131.2598 -47.146 2130.5889 -45.2866 C2136.3486 -45.1299 2141.8311 -45.7583 2147.2607 -47.7944 c2158.4355 -51.9854 2170.2598 -55.4839 2181.0635 -60.5322 c2190.1201 -64.7646 2197.8428 -71.4502 2206.4043 -76.5391 c2210.6777 -79.0786 2214.5859 -81.3647 2218.2373 -84.7935 c2222.0508 -88.374 2225.4141 -92.4292 2229.0293 -96.2036 c2235.5078 -102.9673 2246.6563 -108.7725 2249.5879 -118.2168 c2251.2383 -123.5342 2257.3574 -123.791 2260.5225 -120.998 C2261.6133 -123.8408 2264.0537 -125.4297 2267.7041 -125.6221 c2270.998 -125.7954 2272.9844 -123.8906 2273.6836 -121.4902 C2284.918 -116.2393 2296.5088 -112.1553 2308.1738 -107.8237 c2322.5566 -102.4829 2338.4824 -103.2212 2353.3203 -99.5439 c2360.0186 -97.8833 2366.3086 -95.0708 2373.2256 -94.3657 c2376.502 -94.0317 2379.8164 -94.0405 2383.1064 -94.0273 c2387.4434 -94.0098 2391.8301 -93.1382 2396.127 -92.5601 c2411.6621 -90.4697 2427.0391 -88.4521 2442.7227 -87.8384 c2458.0586 -87.2388 2473.6445 -86.8989 2488.9746 -87.7505 c2503.3506 -88.5493 2517.1699 -90.0254 2530.9746 -94.0977 c2537.3896 -95.9902 2544.2559 -95.2363 2550.7754 -96.8657 c2558.4727 -98.79 2565.9521 -100.0669 2573.8457 -100.8848 c2579.7871 -101.5005 2585.7939 -103.7134 2591.6074 -105.1934 c2597.9473 -106.8071 2603.8623 -109.4243 2610.0625 -111.5161 c2614.6191 -113.0537 2619.123 -114.7461 2623.6475 -116.377 c2628.624 -118.1704 2632.0732 -120.4409 2636.3086 -123.521 c2639.9492 -126.168 2643.8438 -127.3877 2647.707 -129.5107 c2649.4746 -130.4819 2651.0596 -131.8071 2652.6055 -133.1992 C2652.3008 -134.5166 2652.3623 -135.9341 2652.793 -137.2158 C2652.7891 -137.2207 2652.7852 -137.2246 2652.7813 -137.229 C2651.5215 -138.4912 2650.127 -139.6235 2648.8379 -140.8555 c2645.9102 -143.6519 2643.1035 -146.5884 2640.2412 -149.4512 c2637.8672 -151.8252 2636.0645 -154.6025 2633.6914 -156.9766 c2631.0654 -159.6021 2627.7256 -161.7075 2624.5684 -163.623 c2621.2568 -165.6323 2620.6982 -165.9683 2617.582 -168.2163 c2614.6777 -170.312 2612.3154 -172.9995 2609.2959 -174.9453 c2605.9043 -177.1313 2602.2988 -178.9858 2598.8545 -181.0889 c2594.9707 -183.46 2591.7676 -186.5571 2587.7158 -188.7764 c2581.0898 -192.4058 2573.8477 -194.8398 2566.71 -197.2095 c2558.877 -199.8105 2550.7061 -202.5767 2542.4492 -203.4072 c2535.4932 -204.1069 2533.1563 -195.6724 2530.374 -190.7573 c2526.4785 -183.8755 2519.1475 -178.9531 2516.2041 -171.3696 c2513.2051 -163.6421 2500.6309 -166.999 2503.6689 -174.8257 c2504.752 -177.6182 2506.1943 -180.0303 2507.7813 -182.3975 C2507.623 -182.3945 2507.4678 -182.3882 2507.3037 -182.3955 c2503.7451 -182.5557 2500.3125 -183.5527 2496.7715 -183.7119 c2491.9668 -183.9282 2487.1016 -183.7119 2482.291 -183.7119 c2472.2422 -183.7119 2462.2539 -183.6274 2452.4238 -181.3115 c2451.1191 -181.0044 2449.9375 -181.0698 2448.9023 -181.3994 C2445.5234 -175.6147 2441.5967 -170.1299 2437.876 -164.5508 c2435.1777 -160.5039 2430.2236 -161.0342 2427.4873 -163.5645 C2427.0977 -163.835 2426.7178 -164.1616 2426.3516 -164.5522 c2421.8691 -169.332 2419.0547 -174.9409 2416.4043 -180.8647 c2414.3828 -185.3818 2411.8447 -189.6001 2409.3496 -193.8481 C2410.707 -190.0474 2408.5918 -185.0288 2403 -185.0283 c2390 -185.0269 2375.9805 -184.5444 2362.3594 -183.021 c2350.0508 -181.6445 2337.6787 -181.2813 2325.5732 -178.4043 c2313.2246 -175.4697 2301.918 -169.1021 2289.5938 -165.9277 c2277.8594 -162.9058 2267.8555 -155.6367 2256.249 -152.3486 c2255.2988 -152.0791 2254.416 -152.0215 2253.6055 -152.1216 C2250.7773 -147.981 2242.1455 -149.3105 2241.457 -155.9834 c2241.168 -158.7817 2237.1572 -162.1079 2235.7617 -164.5508 c2234.1836 -167.313 2231.8311 -169.834 2230.002 -172.4502 c2228.3535 -174.8091 2227.123 -178.1436 2225.1182 -180.1787 c2217.3066 -188.1074 2210.5566 -198.1479 2200.9287 -204.0176 c2181.124 -216.0918 2160.8779 -230.9502 2137.4766 -235.0278 c2133.6719 -235.6909 2128.3652 -236.2637 2124.6191 -235.2871 C2124.5059 -235.2397 2124.4082 -235.2026 2124.3184 -235.1699 C2124.2832 -234.6543 2124.3711 -234.0859 2124.4404 -233.6196 cf*U2541.5322 -165.1162 m2541.6367 -165.1191 2541.7188 -165.1201 2541.7861 -165.1201 C2542.1035 -165.207 2542.6816 -165.4072 2542.877 -165.4575 C2542.9268 -165.4854 2542.9766 -165.5146 2543.0273 -165.543 C2543.5879 -166.0576 2544.1973 -166.5059 2544.834 -166.8623 c2547.3896 -168.2939 2550.6172 -167.939 2552.7109 -165.8457 c2554.7715 -163.7842 2555.1797 -160.4126 2553.7285 -157.9443 C2555.3086 -154.7744 2554.5986 -150.9307 2551.3945 -149.0542 c2548.4922 -147.354 2544.083 -148.2183 2542.502 -151.3862 c2542.3721 -151.6465 2542.248 -151.9033 2542.125 -152.1592 C2541.9277 -152.147 2541.7314 -152.1221 2541.5322 -152.1162 c2537.9893 -152.0142 2535.0322 -155.1504 2535.0322 -158.6162 c2535.0322 -162.2368 2537.9912 -165.0142 2541.5322 -165.1162 cf*u1 D3435.2412 -350.4297 m3431.1006 -348.0068 3426.1523 -346.8618 3421.5137 -345.8696 c3416.9629 -344.896 3411.999 -343.5005 3407.3555 -344.6333 c3399.3535 -346.5864 3393.5527 -353.1187 3390.8418 -360.6831 C3387.1826 -366.4746 3385.6094 -373.4692 3385.3359 -380.3818 c3385.166 -384.6929 3385.2422 -389.1543 3386.6357 -393.2783 c3388.1816 -397.8545 3391.915 -401.0742 3395.6367 -403.9038 c3403.4824 -409.8682 3414.7168 -411.7139 3424.2676 -411.1309 c3434.7002 -410.4941 3443.4277 -404.9023 3449.3682 -396.4512 c3454.3926 -389.3018 3455.2822 -379.8174 3453.1318 -371.5435 c3450.6787 -362.104 3443.3857 -355.1963 3435.2412 -350.4297 cf0 D3438.8252 -388.8047 m3432 -401.0049 3415.4404 -399.8989 3404.7139 -394.2637 c3398.457 -390.9761 3398.1279 -386.8486 3398.3359 -380.3818 c3398.4287 -377.5244 3398.8486 -374.7627 3399.7168 -372.1982 C3400.9053 -371.4551 3401.8301 -370.2021 3402.1973 -368.3486 c3402.3027 -367.8169 3402.4375 -367.2466 3402.5986 -366.6563 C3403.4941 -365.4561 3404.5479 -364.3359 3405.791 -363.3179 c3407.6934 -361.7612 3408.2363 -359.8774 3407.9023 -358.1221 C3408.6426 -357.6665 3409.459 -357.3516 3410.3613 -357.2319 c3413.2344 -356.8511 3416.6953 -358.1138 3419.4844 -358.7104 c3422.6309 -359.3833 3425.7979 -360.2036 3428.6797 -361.6548 c3438.8848 -366.7954 3444.7344 -378.2432 3438.8252 -388.8047 cf*U*u1 D3787.8535 -337.1924 m3786.6738 -331.208 3785.6445 -325.1851 3783.7578 -319.3574 c3781.6406 -312.8213 3777.8848 -307.5767 3773.6221 -302.2793 c3771.6191 -299.7905 3769.4697 -297.417 3767.5234 -294.8828 c3765.1621 -291.8081 3763.7754 -287.8789 3761.8721 -284.5156 c3758.5176 -278.5869 3754.6563 -273.8511 3749.2617 -269.6836 c3743.9873 -265.6094 3740.7803 -259.5742 3735.5703 -255.3892 c3730.6396 -251.4282 3726.3145 -246.9702 3720.9014 -243.6133 c3718.2012 -241.9385 3715.2705 -240.6782 3712.5332 -239.0684 c3711.3809 -238.3911 3710.4277 -237.4736 3709.418 -236.6157 C3709.4238 -236.5806 3709.4287 -236.5566 3709.4346 -236.5195 C3709.6992 -235.6992 3709.9727 -234.8818 3710.2539 -234.0674 c3711.3008 -230.9873 3710.293 -227.0776 3710.9502 -223.8438 c3711.6836 -220.2402 3712.75 -216.7065 3713.873 -213.209 c3714.9346 -209.9053 3716.5703 -206.7021 3717.1396 -203.2817 c3717.8398 -199.0713 3718.46 -194.8525 3718.9893 -190.6167 c3720.1016 -181.7153 3719.4336 -172.9961 3718.7686 -164.0967 c3718.2646 -157.3525 3718.9756 -150.5396 3718.2656 -143.8296 c3717.6797 -138.2935 3714.8936 -129.7358 3707.9355 -129.7358 c3700.1377 -129.7358 3693.0781 -136.1733 3687.6221 -140.9648 c3685.1064 -143.1753 3681.9727 -145.0791 3679.6426 -147.4375 c3676.2295 -150.8926 3672.9668 -154.478 3669.7695 -158.1338 c3663.3877 -165.4316 3657.082 -172.3853 3650.1865 -179.1978 c3644.4316 -184.8838 3639.9375 -191.229 3636.375 -198.4712 c3635.0068 -201.252 3633.1719 -203.7627 3631.4414 -206.3062 C3629.7861 -203.853 3626.707 -202.416 3623.4355 -204.1304 C3622.5664 -203.6924 3621.874 -203.0928 3621.1465 -202.4609 c3619.5137 -201.0425 3618.0703 -199.3955 3616.626 -197.7896 c3615.1904 -196.1929 3613.6729 -194.6963 3612.0811 -193.2544 c3610.9766 -192.2549 3609.7422 -191.3887 3608.5381 -190.5156 c3607.7344 -189.9707 3606.8887 -189.4995 3606.0029 -189.1016 C3604.2822 -188.4478 3603.917 -188.2729 3604.9072 -188.5776 C3600.4854 -184.1665 3595.7051 -180.3394 3589.8594 -178.0244 c3583.4521 -175.4868 3576.666 -174.1938 3570.1172 -172.0957 c3564.5586 -170.3145 3559.2061 -167.8726 3553.6055 -166.2231 c3546.7021 -164.1899 3539.8262 -162.2017 3533.0664 -159.6548 c3529.8682 -158.4492 3526.9082 -156.6338 3523.5615 -155.9087 c3520.0332 -155.145 3516.5732 -154.0781 3513.0547 -153.2671 C3515.4756 -149.5 3513.7334 -143.0098 3507.8301 -142.9004 c3501.9844 -142.792 3497.1621 -141.3057 3491.9141 -138.8438 c3488.4639 -137.2246 3481.2461 -134.9209 3481.1689 -130.415 c3481.0732 -124.8462 3486.6602 -120.0894 3488.5117 -115.1851 c3488.9414 -114.0464 3489.2803 -112.9111 3489.5996 -111.7368 c3489.7422 -111.2139 3489.7939 -110.8984 3489.7998 -110.7061 C3489.9336 -110.5879 3490.1064 -110.418 3490.3389 -110.1626 c3492.3262 -107.979 3493.9004 -105.353 3494.3506 -102.4189 c3494.9102 -98.7773 3493.4766 -95.6274 3489.8105 -94.4233 c3485.083 -92.8696 3480.877 -95.1616 3476.2354 -95.5073 c3473.4131 -95.7178 3465.5039 -97.2559 3464.5498 -93.4038 c3463.7051 -89.9971 3466.3447 -84.7427 3467.3926 -81.5952 c3469.0234 -76.6992 3470.6143 -71.6865 3471.792 -66.668 c3473.252 -60.4453 3473.1807 -54.1577 3473.707 -47.8428 c3474.0879 -43.2642 3473.5449 -36.7026 3468.0547 -35.3369 c3465.3105 -34.6538 3462.7383 -32.9927 3459.7891 -34.9585 c3456.9346 -36.8628 3453.6152 -38.1421 3450.5986 -39.8042 c3444.0127 -43.4331 3437.9561 -47.9346 3432.0488 -52.562 c3421.2842 -60.9941 3410.0576 -70.501 3402.4922 -81.96 c3398.627 -87.8135 3393.8184 -92.9019 3389.8799 -98.7266 c3385.8623 -104.6685 3384.334 -112.2202 3381.0039 -118.5771 c3377.877 -124.5469 3373.834 -130.6738 3372.1885 -137.2617 c3370.7676 -142.9497 3369.873 -148.8896 3368.1475 -154.481 c3365.8438 -161.9443 3362.2676 -171.0034 3365.5723 -178.314 C3364.1289 -179.0645 3362.7002 -179.8262 3361.292 -180.5991 c3349.6191 -187.0059 3338.8115 -195.4019 3330.2266 -205.6045 c3320.7324 -216.8872 3313.2969 -230.0576 3306.4424 -243.0488 c3299.4746 -256.2539 3293.6104 -269.5552 3289.2871 -283.8672 c3287.1963 -290.7856 3285.5527 -297.8306 3284.2178 -304.9307 c3282.7813 -312.5684 3280.7988 -320.2412 3280.208 -328.0034 c3279.6982 -334.6968 3279.3418 -341.4175 3278.1602 -348.041 c3276.9746 -354.6919 3275.5947 -361.292 3275.0908 -368.0186 C3273.1328 -370.332 3272.6338 -373.7783 3275.4824 -376.4824 c3285.3252 -385.8232 3298.3535 -387.3389 3309.6328 -394.0322 c3314.8379 -397.1206 3322.3652 -397.2549 3326.8262 -401.4038 c3331.832 -406.0601 3338.3037 -408.082 3342.9473 -413.2339 c3347.2539 -418.0142 3351.3896 -422.4917 3356.5977 -426.334 c3362.1299 -430.4165 3368.8525 -432.5518 3374.0547 -437.041 c3376.3896 -439.0562 3378.2793 -441.293 3380.96 -442.8809 c3383.3447 -444.2935 3385.7275 -444.4907 3387.3848 -446.2563 c3387.5098 -446.3896 3387.6348 -446.5234 3387.7598 -446.6567 C3387.666 -446.6851 3387.5664 -446.7148 3387.4551 -446.7466 c3384.5518 -447.5747 3380.8145 -447.0083 3377.8359 -447.0083 c3374.3984 -447.0083 3370.5908 -447.4746 3367.1973 -446.9082 c3363.8496 -446.3496 3360.6631 -445.167 3357.2832 -444.6978 c3349.4141 -443.6055 3341.4971 -445.6123 3333.6563 -443.8306 c3326.7695 -442.2661 3320.2012 -442.5181 3313.1777 -442.897 c3305.9434 -443.2866 3300.1396 -443.8501 3293.584 -447.2373 c3284.3477 -452.0098 3275.2695 -463.54 3276.2012 -474.4976 c3276.7393 -480.8315 3281.459 -483.9932 3287.0244 -485.8853 c3293.6816 -488.1484 3301.0547 -490.9893 3307.0781 -494.666 c3320.3369 -502.7603 3333.5605 -510.9473 3346.626 -519.3501 c3352.8145 -523.3296 3358.6016 -527.6777 3364.5088 -532.0469 c3370.6904 -536.6182 3377.5029 -539.998 3383.96 -544.0986 c3396.6025 -552.1274 3410.5332 -557.4849 3423.9326 -564.0327 c3436.0947 -569.9751 3449.5625 -577.3423 3463.3525 -578.1064 c3475.0967 -578.7573 3482.2305 -568.0781 3487.6758 -559.3667 c3490.2852 -555.1919 3491.9336 -550.7363 3493.0566 -546.1382 C3497.9336 -544.8159 3502.7207 -543.2549 3507.3672 -541.2412 c3513.127 -538.7441 3517.75 -534.9351 3523.1846 -532.0156 c3525.6582 -530.687 3527.8691 -528.8223 3530.0352 -527.0552 c3532.1289 -525.3457 3534.084 -522.3481 3536.6289 -521.3833 c3538.8184 -520.5532 3540.9307 -519.8843 3542.9629 -519.0981 C3543.2363 -521.1816 3543.4736 -523.291 3543.7236 -525.4541 c3544.541 -532.5308 3546.1006 -539.4424 3548.0918 -546.2764 c3550.1514 -553.3472 3549.7568 -559.9141 3550.1309 -567.1626 c3550.3066 -570.5962 3551.3604 -573.9761 3552.2227 -577.2793 c3553.0469 -580.4395 3552.8145 -583.8486 3553.2773 -587.0869 c3554.2441 -593.8496 3555.8066 -600.5977 3557.3594 -607.2437 c3559.3184 -615.6313 3560.9658 -626.7979 3570.6094 -629.6025 c3580.6475 -632.5215 3588.9287 -615.2651 3593.4219 -608.9956 c3596.7959 -604.2871 3600.0547 -598.7158 3603.9785 -594.4946 c3605.1787 -593.2041 3608.6289 -595.3047 3610.2148 -595.8726 c3612.7656 -596.7861 3615.2422 -597.187 3617.7773 -598.2061 c3627.0459 -601.9307 3638.4238 -601.3823 3640.4805 -589.5176 c3641.4746 -583.7822 3638.6045 -578.6523 3637.9551 -573.2515 c3637.6729 -570.8994 3637.2119 -568.5791 3636.7969 -566.248 c3636.7305 -565.8755 3636.6787 -565.5137 3636.6279 -565.1499 C3637.8184 -565.2407 3638.9834 -565.4985 3640.1494 -565.8184 c3642.5615 -566.4795 3645.0781 -566.6865 3647.7188 -566.936 c3653.5615 -567.4878 3658.7236 -567.0088 3663.7256 -563.708 c3667.9268 -560.9355 3672.5898 -556.1323 3672.627 -550.7637 c3672.6504 -547.4873 3671.8271 -544.6362 3670.5957 -541.6304 c3670.791 -542.1079 3670.4648 -541.2524 3670.127 -540.4595 C3676.9619 -538.5254 3684.4619 -537.9443 3685.9238 -529.1533 c3687.3574 -520.5337 3680.7881 -514.5547 3673.6963 -511.0869 c3667.9814 -508.292 3661.834 -506.6802 3655.6875 -505.166 c3649.6543 -503.6792 3644.5693 -498.6094 3638.5742 -497.2666 c3632.3242 -495.8677 3625.6348 -496.1694 3619.6006 -493.9502 c3614.6836 -492.1416 3609.6289 -490.4849 3604.5117 -488.9697 C3606.8047 -487.4497 3609.0449 -485.8296 3611.2295 -484.1045 c3619.3027 -477.729 3628.8936 -473.0601 3635.4873 -464.9272 c3641.3311 -457.7192 3646.0898 -449.0596 3650.6152 -440.9766 c3652.7354 -437.1904 3653.1631 -432.7964 3655.0254 -428.9927 c3657.3086 -424.3276 3659.2695 -419.5083 3661.4873 -414.812 c3665.3477 -406.6392 3666.2686 -397.1978 3667.6602 -388.3516 c3669.248 -378.2583 3670.1309 -367.8408 3672.3574 -357.873 c3674.1484 -349.8589 3674.4482 -341.4009 3675.8779 -333.2871 c3676.0791 -332.147 3676.2617 -330.9971 3676.4219 -329.8438 C3676.6172 -329.9678 3676.8125 -330.0947 3677.0088 -330.2124 c3679.6162 -331.7749 3682.6318 -332.3843 3685.4014 -333.5615 c3688.0605 -334.6914 3690.4346 -336.7207 3692.8066 -338.3457 c3696.2764 -340.7227 3699.2012 -342.52 3703.2158 -343.9229 c3710.2148 -346.3677 3717.7031 -347.583 3724.9023 -349.2969 c3728.502 -350.1538 3732.1748 -350.7422 3735.8457 -351.1968 c3740.0898 -351.7222 3744.6387 -351.3901 3748.8145 -352.1519 c3755.6172 -353.3926 3762.4375 -353.1514 3769.3047 -353.4028 c3774.4746 -353.5923 3780.5996 -355.2822 3784.9375 -351.4692 c3789.1846 -347.7373 3788.8525 -342.2627 3787.8535 -337.1924 cf0 D3378.625 -164.0913 m3379.9219 -159.7773 3381.25 -155.6943 3382.2109 -151.2759 c3383.4902 -145.3931 3384.7422 -139.7197 3387.4023 -134.2993 c3390.1914 -128.6167 3393.5293 -123.23 3395.8877 -117.3389 c3398.4053 -111.0493 3400.6201 -105.3848 3404.8652 -100.021 c3408.998 -94.7993 3412.8301 -89.5879 3416.7031 -84.1489 c3420.3633 -79.0078 3426.1406 -75.0366 3430.8047 -70.8525 c3435.5645 -66.5835 3440.2412 -62.4023 3445.4092 -58.6113 c3450.2266 -55.0786 3455.3203 -51.9307 3460.6191 -49.1768 C3460.5752 -49.6699 3460.5371 -50.1616 3460.5195 -50.6489 c3460.1348 -61.4927 3457.0469 -71.2559 3453.7559 -81.4878 c3451.2568 -89.2607 3449.4922 -100.3037 3457.8828 -105.3198 c3462.8564 -108.293 3467.7139 -109.0513 3473.4355 -108.6426 c3474.6191 -108.5581 3475.7822 -108.4844 3476.9404 -108.3779 C3475.9316 -111.0781 3474.6445 -113.1279 3473.1758 -115.8467 c3469.3994 -122.8408 3466.2617 -130.3438 3469.8594 -138.0723 c3472.6758 -144.1216 3479.6582 -147.4302 3485.3535 -150.0688 c3486.7783 -150.729 3488.1797 -151.3296 3489.5771 -151.896 C3489.4717 -151.8999 3489.3652 -151.9033 3489.2598 -151.9072 c3473.748 -152.5244 3458.5195 -155.9771 3443.0605 -157.1816 c3428.5273 -158.3145 3414.4678 -161.0918 3400.3447 -164.6372 c3392.6387 -166.5718 3384.9082 -169.3545 3377.4258 -172.6309 C3376.5986 -170.3599 3377.8613 -166.6318 3378.625 -164.0913 cf3625.8711 -508.4424 m3628.668 -508.8003 3632.4297 -508.5801 3635.002 -509.8652 c3637.9668 -511.3462 3640.9473 -512.7896 3643.957 -514.1738 c3648.2852 -516.1636 3652.4746 -517.7031 3657.0449 -518.9019 c3661.0723 -519.958 3672.9521 -523.4272 3673.1943 -526.6377 C3672.9941 -526.6797 3672.3809 -526.8662 3671.9482 -527.0034 c3670.3203 -527.4624 3668.5986 -527.6533 3666.9404 -527.9561 c3662.1592 -528.8281 3658.8203 -531.4243 3657.0186 -535.9307 c3656.0859 -538.2642 3656.6318 -541.373 3657.4531 -543.605 c3658.1221 -545.4219 3660.5684 -548.8496 3659.1152 -550.5737 c3657.2764 -552.7578 3655.1533 -554.125 3652.3027 -554.2285 c3650.7822 -554.2837 3649.2285 -554.0757 3647.7188 -553.936 c3646.7441 -553.8345 3645.7676 -553.7515 3644.7891 -553.687 C3646.5293 -554.4492 3646.4189 -554.4116 3644.459 -553.5737 C3639.9434 -552.0342 3634.6982 -551.561 3630.0859 -552.9263 c3624.0801 -554.7041 3622.9922 -560.146 3623.6582 -565.6201 c3624.2246 -570.2705 3624.873 -574.7593 3626.1758 -579.1519 c3626.8613 -581.4668 3628.1465 -584.897 3627.7227 -587.3472 c3627.7051 -587.4473 3627.6895 -587.5229 3627.6738 -587.5952 C3627.1885 -587.5601 3626.623 -587.4297 3626.2627 -587.3506 c3620.1113 -586.0059 3614.0615 -582.2261 3607.7393 -581.2773 C3607.5811 -581.0356 3607.4102 -580.7954 3607.2129 -580.5605 c3605.9141 -579.0083 3605.3789 -576.6445 3604.5273 -574.8408 c3603.5566 -572.7861 3601.7109 -570.8818 3600.3457 -569.0703 c3596.624 -564.1357 3594.291 -558.4604 3591.083 -553.1768 c3587.5684 -547.3877 3584.3008 -541.4644 3580.583 -535.7988 c3577.7646 -531.5029 3574.5693 -527.9995 3573.3398 -522.8701 c3571.3867 -514.7197 3558.8516 -518.1772 3560.8047 -526.3262 c3562.082 -531.6543 3564.7285 -536.019 3567.9502 -540.3735 c3572.0869 -545.9644 3575.3906 -552.1768 3578.915 -558.1582 c3582.3369 -563.9639 3585.0928 -570.2334 3589.1201 -575.6318 c3590.6738 -577.7148 3592.7236 -579.856 3593.7168 -582.2769 c3594.1465 -583.3237 3594.5781 -584.2979 3595.0518 -585.2295 C3591.1836 -588.9209 3588.4766 -594.3555 3585.1826 -598.5488 c3581.1992 -603.6191 3577.916 -610.8442 3573.0449 -615.4375 C3572.6367 -614.563 3572.3223 -613.644 3572.0234 -612.7202 c3571.0039 -609.5669 3570.4756 -606.2734 3569.7227 -603.0522 c3568.6436 -598.4312 3567.7031 -593.7515 3566.7354 -589.0996 c3565.6797 -584.0288 3565.916 -578.8652 3564.7578 -573.8232 c3563.6396 -568.9517 3563.04 -564.7559 3563.04 -559.7534 c3563.04 -553.8521 3562.2754 -548.4878 3560.627 -542.8203 c3557.6113 -532.4521 3556.5957 -522.1748 3555.1563 -511.5317 c3554.2686 -504.9644 3551.416 -498.8354 3548.791 -492.6938 C3552.1787 -493.2383 3555.7744 -492.9204 3559.1729 -492.9204 c3565.9082 -492.9204 3572.8008 -494.3828 3579.3945 -495.9946 C3580.7764 -497.7959 3583.0488 -498.8311 3585.9141 -497.9541 c3586.0918 -497.8999 3586.2617 -497.833 3586.4375 -497.7773 C3592.0186 -499.231 3597.5928 -500.772 3603.1348 -502.3311 c3610.7959 -504.4863 3617.9482 -507.4277 3625.8711 -508.4424 cf3770.2744 -340.48 m3767.3115 -340.1909 3764.2871 -340.3706 3761.3125 -340.3096 c3757.1055 -340.2241 3752.8965 -339.0962 3748.7471 -339.0566 c3741.1914 -338.9849 3733.8643 -338.0723 3726.5146 -336.3228 c3719.1035 -334.5581 3710.0029 -333.8105 3703.3184 -329.9731 c3698.3467 -327.1191 3694.4902 -323.1626 3689.0244 -321.0923 c3684.3691 -319.3286 3680.3711 -316.6182 3676.0088 -314.4297 C3675.5498 -312.7021 3674.9199 -311.0068 3674.0537 -309.3638 c3670.1445 -301.9453 3658.9238 -308.5161 3662.8291 -315.9253 c3665.6943 -321.3623 3663.5283 -329.1772 3662.3906 -334.8481 c3660.8877 -342.3467 3660.3496 -350.0698 3659.2588 -357.6328 c3657.9473 -366.7275 3656.5723 -375.8218 3655.125 -384.8955 c3653.8145 -393.106 3653.1309 -402.1772 3649.5439 -409.7705 c3647.8047 -413.4541 3646.2197 -417.21 3644.5176 -420.9111 c3642.6895 -424.8877 3641.7988 -429.0752 3640.0586 -433.0645 c3638.5605 -436.5 3636.1689 -439.5864 3634.2656 -442.8057 c3631.9668 -446.6924 3629.7646 -450.6187 3627.2432 -454.3687 c3622.252 -461.791 3613.5381 -467.2036 3606.1211 -471.9746 c3599.3281 -476.3447 3593.3887 -481.1333 3586 -484.1504 C3583.3965 -483.5562 3580.7969 -482.9844 3578.2129 -482.4585 c3571.9531 -481.1841 3565.5635 -479.9204 3559.1729 -479.9204 c3555.6309 -479.9204 3551.9922 -480.2969 3548.5586 -479.3193 c3545.457 -478.4365 3542.6738 -477.5356 3539.4258 -477.2876 c3534.9473 -476.9453 3532.8867 -480.5132 3533.2109 -484 C3532.7324 -485.1699 3532.6465 -486.5674 3533.1582 -488.1484 c3535.0352 -493.9482 3537.627 -499.3062 3539.7412 -504.9697 c3539.918 -505.4438 3540.0654 -505.916 3540.2246 -506.3887 C3537.3418 -508.165 3533.4355 -508.5693 3530.416 -509.959 c3525.627 -512.1636 3522.4375 -516.9214 3518.0938 -519.8916 c3510.6875 -524.9561 3503.4033 -528.9106 3495.2646 -531.8008 C3495.7148 -527.1416 3496.0547 -522.4692 3496.667 -517.9058 c3497.6523 -510.5571 3497.2158 -503.0356 3497.2158 -495.6357 c3497.2158 -487.5352 3498.6992 -479.5166 3499.4805 -471.4746 c3501.0439 -455.3965 3499.8496 -438.7183 3499.8496 -422.5708 c3499.8496 -408.8096 3499.6416 -394.3848 3488.7305 -384.4043 c3482.5586 -378.7593 3473.3398 -387.9272 3479.5371 -393.5967 c3489.3623 -402.5825 3486.8496 -418.4575 3486.8496 -430.4697 c3486.8496 -446.5977 3487.623 -462.876 3485.6484 -478.9087 c3484.7148 -486.4961 3484.2158 -493.915 3484.2158 -501.5601 c3484.2158 -509.2441 3483.5098 -516.5767 3482.9443 -524.2051 c3481.9443 -537.7188 3479.8242 -550.5225 3470.6855 -561.1748 c3467.4941 -564.8955 3464.2148 -565.6626 3459.5313 -564.4072 c3452.2129 -562.4458 3445.3281 -559.8594 3438.4609 -556.6543 c3425.084 -550.4121 3411.3955 -544.5093 3398.4199 -537.4805 c3392.1748 -534.0967 3386.0625 -530.3711 3379.957 -526.7456 c3373.1396 -522.6982 3367.2695 -517.4346 3360.7012 -513.0615 c3347.9609 -504.5815 3334.9277 -496.46 3321.9326 -488.3774 c3315.7363 -484.5239 3309.6035 -481.186 3302.8223 -478.4946 c3299.5898 -477.2119 3296.6426 -475.439 3293.3633 -474.2524 c3291.9736 -473.75 3290.5361 -473.3672 3289.1367 -472.8926 C3289.166 -472.4565 3289.2412 -472.0259 3289.4121 -471.6074 C3290.5439 -466.9565 3293.6475 -462.7573 3297.5068 -460.0566 c3303.5986 -455.7939 3309.6465 -456.1001 3316.7646 -455.6992 c3320.1768 -455.5068 3323.5664 -455.4043 3326.9785 -455.6235 c3330.416 -455.8442 3333.918 -457.1284 3337.3965 -457.521 c3345.2793 -458.4102 3352.8438 -456.6113 3360.625 -458.6782 c3367.3887 -460.4746 3374.2852 -460.0083 3381.2246 -460.0083 c3387.627 -460.0083 3393.3008 -459.5518 3398.3447 -455.2251 c3403.1553 -451.0991 3402.8965 -445.4902 3399.4854 -440.5391 c3398.0508 -438.457 3396.0635 -435.7363 3393.8203 -434.4839 c3390.9063 -432.8569 3387.8027 -432.2168 3385.3652 -429.8232 c3380.7139 -425.2544 3375.5615 -422.3667 3369.8936 -419.2974 c3363.5928 -415.8848 3358.7363 -411.4971 3353.9951 -406.1797 c3349.7539 -401.4219 3345.5459 -397.9141 3339.9688 -394.7925 c3337.0781 -393.1748 3334.8291 -390.8506 3332.0244 -389.1396 c3328.832 -387.1919 3325.0078 -386.0645 3321.4678 -384.9414 c3315.8145 -383.1489 3310.7861 -379.7822 3305.2275 -377.6128 c3299.2637 -375.2852 3293.3398 -373.5688 3287.9619 -370.0508 C3288.5566 -355.9595 3292.8281 -342.1929 3293.208 -328.0034 c3293.3965 -320.9746 3295.792 -313.4971 3297.0928 -306.583 c3298.5332 -298.9219 3300.5459 -291.3755 3302.8613 -283.9355 c3307.333 -269.561 3313.9277 -256.3477 3321.124 -243.1675 c3327.9805 -230.6099 3335.6377 -217.9219 3345.873 -207.8169 c3355.4189 -198.3921 3367.2715 -191.5391 3379.4268 -186.062 c3385.584 -183.2876 3392.1016 -180.6152 3398.5352 -178.603 c3405.4785 -176.4316 3412.7305 -175.2427 3419.79 -173.5005 c3434.4541 -169.8813 3449.8008 -169.9072 3464.709 -167.6323 c3479.666 -165.3506 3496.1592 -162.7544 3511.1289 -166.1445 c3523.3594 -168.9146 3534.9941 -174.1128 3546.9141 -178.0483 c3558.0693 -181.7324 3569.2031 -185.272 3580.5371 -188.5273 c3586.2021 -190.1543 3590.4531 -192.7261 3594.709 -196.7822 c3598.5439 -200.4365 3603.1895 -202.3345 3606.8604 -206.3438 c3611.8643 -211.8086 3618.7891 -219.0503 3626.5371 -216.9019 C3626.4854 -217.2183 3626.4297 -217.5327 3626.3965 -217.8579 c3625.5313 -226.1938 3638.54 -226.1104 3639.3965 -217.8579 c3639.6484 -215.4312 3643.4707 -211.9082 3644.9082 -210.0464 c3647.2871 -206.9644 3648.5566 -203.0483 3650.4805 -199.6431 c3655.0947 -191.4771 3662.4941 -185.5283 3669.0879 -179.0103 c3676.3701 -171.8125 3681.5693 -162.1689 3689.8535 -155.96 c3695.0186 -152.0889 3699.6016 -146.541 3705.54 -143.833 C3705.9414 -146.3281 3705.5137 -150.2886 3705.4795 -151.4863 c3705.29 -158.0728 3705.8096 -164.5938 3706.3174 -171.1572 c3706.8721 -178.3242 3706.7188 -185.4072 3705.7441 -192.5347 c3705.2646 -196.0454 3704.9932 -199.8887 3703.6934 -203.1904 c3702.1729 -207.0532 3700.8887 -211.0005 3699.7471 -214.9897 c3698.7949 -218.3149 3697.4863 -222.272 3697.4863 -225.7568 c3697.4863 -228.7695 3697.3867 -231.272 3696.5977 -234.1709 c3694.7451 -240.9702 3699.4102 -245.8896 3704.6543 -249.4102 c3709.9443 -252.9609 3715.7852 -255.1621 3720.584 -259.4854 c3722.8984 -261.5703 3725.1748 -263.6152 3727.6074 -265.5688 c3730.4004 -267.8125 3732.3066 -270.542 3734.6113 -273.248 c3738.7275 -278.0806 3744.3643 -281.3867 3747.9893 -286.5938 c3752.1709 -292.6001 3754.6211 -299.4302 3759.2217 -305.1948 c3763.3213 -310.3311 3768.2471 -315.1304 3770.6953 -321.3408 c3773 -327.1865 3773.6113 -333.3872 3775.0459 -339.4429 c3775.167 -339.9531 3775.2832 -340.46 3775.3809 -340.9702 C3773.6719 -340.9004 3771.9453 -340.6426 3770.2744 -340.48 cf*U3594.3721 -525.2461 m3597.3555 -530.8613 3601.4551 -535.5874 3606.4111 -539.5474 c3611.7666 -543.8262 3618.0273 -546.8525 3623.0352 -551.5747 c3629.127 -557.3213 3638.3369 -548.145 3632.2266 -542.3823 c3623.3359 -533.9956 3611.582 -529.9482 3605.5967 -518.6846 c3601.6621 -511.2793 3590.4414 -517.8477 3594.3721 -525.2461 cf*u1 D3198.0176 -1881.5508 m3201.0342 -1888.9434 3204.5293 -1896.1289 3207.4629 -1903.5557 c3209.9795 -1909.9268 3212.5605 -1915.3457 3216.9248 -1920.7168 c3221.7061 -1926.6016 3226.8184 -1932.3701 3232.0859 -1937.8311 c3237.3818 -1943.3213 3243.3652 -1947.8623 3249.1484 -1952.8184 c3254.293 -1957.2285 3258.707 -1962.8545 3264.8428 -1965.9404 c3270.6553 -1968.8643 3276.6318 -1971.3242 3282.1816 -1974.7646 c3287.666 -1978.1641 3293.0508 -1981.3125 3299.0752 -1983.6787 c3312.2207 -1988.8418 3325.4512 -1993.8164 3339.1045 -1997.4912 c3353.4053 -2001.3418 3368.1875 -2003.5742 3382.5977 -2007.04 c3389.4307 -2008.6836 3396.3594 -2010.5967 3402.5195 -2014.0518 c3405.3906 -2015.6611 3407.8516 -2017.7891 3411.0088 -2018.8232 c3412.748 -2019.3926 3415.3438 -2019.8955 3415.9893 -2021.8506 c3416.9521 -2024.7666 3419.2627 -2026.1455 3421.666 -2026.3301 C3420.5059 -2030.9609 3419.2832 -2035.5742 3417.8779 -2040.126 c3414.8301 -2049.999 3410.5879 -2059.4531 3407.4121 -2069.2852 c3404.625 -2077.9141 3400.7773 -2085.7715 3397.3281 -2094.1016 c3393.4199 -2103.5371 3390.1221 -2112.9043 3388.8037 -2123.0479 c3387.5039 -2133.041 3388.2129 -2143.252 3388.5615 -2153.2949 c3388.6377 -2155.5059 3388.7188 -2157.7168 3388.7969 -2159.9277 C3401.7988 -2159.9277 L3401.5391 -2152.5879 3401.2695 -2145.249 3401.1533 -2137.9053 c3400.9131 -2122.7295 3404.4199 -2108.2012 3411.2637 -2094.6074 c3417.7578 -2081.707 3421.6172 -2067.5762 3426.7295 -2054.0869 c3432.4023 -2039.1182 3435.708 -2023.3965 3439.584 -2007.8955 c3443.2021 -1993.4199 3445.3086 -1978.0928 3451.4434 -1964.4902 c3454.3096 -1958.1348 3455.5088 -1951.3281 3456.8965 -1944.5449 c3458.4102 -1937.1494 3461.4346 -1930.4121 3463.3125 -1923.1465 c3467.0996 -1908.4941 3471.7842 -1893.8086 3474.3213 -1878.8809 c3476.9219 -1863.5781 3478.7969 -1847.5928 3478.7813 -1832.0537 c3478.7383 -1792.1816 3469.5996 -1752.9336 3461.8711 -1714.0059 c3458.2891 -1695.9619 3456.5332 -1677.7373 3454.0977 -1659.54 C3456.2764 -1665.7051 3458.332 -1671.9033 3460.7705 -1677.9854 c3466.707 -1692.79 3472.9609 -1707.2227 3478.0723 -1722.3574 c3483.2236 -1737.6123 3486.7666 -1753.541 3490.2432 -1769.2744 c3491.0234 -1772.8086 3491.1338 -1776.4756 3491.6934 -1780.0566 c3492.2695 -1783.7383 3493.4834 -1787.2813 3493.917 -1790.9814 c3494.8662 -1799.083 3494.7168 -1807.2686 3494.7559 -1815.4092 c3494.833 -1831.4004 3495.8457 -1847.4473 3496.248 -1863.4404 c3496.6533 -1879.582 3496.7871 -1894.9941 3493.7803 -1910.9189 c3490.8828 -1926.2666 3486.916 -1941.3965 3482.9648 -1956.5 c3480.1777 -1967.1563 3477.3711 -1977.8096 3474.5723 -1988.4629 C3471.2129 -1990.2275 3469.2588 -1994.415 3472.165 -1997.6309 C3465.4775 -2023.0645 3458.7822 -2048.4951 3452.1211 -2073.9297 c3449.6895 -2083.2168 3447.4277 -2092.6064 3446.1973 -2102.1367 c3444.9688 -2111.6396 3444.5723 -2121.2109 3443.8604 -2130.7598 c3443.1309 -2140.5195 3441.96 -2150.123 3441.791 -2159.9277 C3454.8145 -2159.9277 L3454.876 -2155.0449 3455.0391 -2150.1641 3455.3916 -2145.2861 c3455.9141 -2138.0645 3456.8818 -2130.8945 3457.3506 -2123.6611 c3457.8555 -2115.875 3458.2793 -2108.0684 3459.4902 -2100.3525 c3459.9014 -2097.7373 3460.3965 -2095.1299 3460.9238 -2092.5264 C3461.6143 -2095.0859 3462.1738 -2097.6807 3462.4443 -2100.3545 c3463.5957 -2111.7109 3463.9375 -2123.9102 3462.3105 -2135.2207 c3461.1221 -2143.4785 3459.6279 -2151.6924 3458.2578 -2159.9277 C3471.3359 -2159.9277 L3472.5059 -2152.8457 3473.7266 -2145.7744 3474.8457 -2138.6758 c3476.7422 -2126.6445 3476.4805 -2114.2148 3475.5947 -2102.0938 c3475.1563 -2096.085 3473.8428 -2090.7832 3471.9082 -2085.0996 c3470.0957 -2079.7715 3468.4004 -2074.499 3468.252 -2068.832 c3468.2256 -2067.8242 3468.0098 -2066.9395 3467.6582 -2066.1738 C3468.6455 -2062.7949 3469.6523 -2059.4287 3470.6523 -2056.0801 c3475.2676 -2040.6328 3478.6211 -2024.6895 3482.6934 -2009.085 c3482.8311 -2008.5576 3482.9707 -2008.0293 3483.1094 -2007.502 C3484.4063 -2008.7637 3485.709 -2010.0078 3486.7969 -2011.248 c3489.5156 -2014.3516 3492.8721 -2016.9072 3495.6563 -2020.002 c3498.457 -2023.1133 3499.793 -2027.0986 3501.6348 -2030.8086 c3505.3574 -2038.3076 3508.7422 -2045.9736 3511.293 -2053.9668 c3513.957 -2062.3164 3517 -2072.293 3517 -2081.1074 C3517 -2093.8457 L3517 -2098.5635 3517.6797 -2103.7529 3517.0488 -2108.4258 c3516.4219 -2113.0547 3516.0488 -2117.707 3515.5127 -2122.3477 c3514.9697 -2127.0479 3513.6387 -2131.5762 3512.874 -2136.2314 c3511.5205 -2144.4688 3508.9795 -2152.1582 3506.2061 -2159.9277 C3520.1221 -2159.9277 L3522.5898 -2152.8047 3524.4063 -2145.5059 3525.6348 -2138.0234 c3527.2324 -2128.3076 3530 -2118.2637 3530 -2108.3271 C3530 -2093.8457 L3530 -2088.5557 3530.6523 -2082.8652 3529.8301 -2077.6367 c3528.3906 -2068.4648 3526.5713 -2059.3965 3523.8604 -2050.5117 c3521.0811 -2041.4033 3516.9219 -2032.8203 3512.8438 -2024.2471 c3510.9736 -2020.3154 3509.4297 -2016.4795 3506.6973 -2013.0596 c3503.7754 -2009.4023 3500.4629 -2006.2813 3497.0225 -2003.1406 c3493.9766 -2000.3604 3491.8984 -1996.8223 3488.5586 -1994.3096 c3490.0195 -1995.4082 3488.1543 -1993.5908 3487.0674 -1992.5781 C3493.6846 -1967.8594 3500.4717 -1943.124 3505.5879 -1918.0791 c3508.7939 -1902.3809 3509.8691 -1887.2656 3509.4629 -1871.2646 c3509.0557 -1855.2578 3508.5938 -1839.2871 3507.9512 -1823.2881 c3507.5449 -1813.1455 3507.9678 -1803 3507.1074 -1792.874 c3506.6855 -1787.9053 3505.5879 -1783.2148 3504.5576 -1778.3555 c3503.5449 -1773.5791 3503.4238 -1768.7383 3502.3633 -1763.9375 c3500.1367 -1753.8633 3497.3604 -1743.9209 3495.1348 -1733.8457 c3492.9258 -1723.8467 3489.0293 -1714.0771 3485.6191 -1704.4199 c3482.2344 -1694.8369 3477.9141 -1685.6914 3474.0313 -1676.3066 c3470.2676 -1667.2109 3467.4238 -1657.8096 3463.9053 -1648.6279 c3460.5352 -1639.833 3455.8467 -1631.4932 3454.8916 -1621.8984 c3453.8633 -1611.5762 3455.127 -1601.1855 3456.4033 -1590.9492 c3457.2363 -1584.2676 3447.3027 -1582.4531 3444.291 -1587.6689 c3436.5908 -1601.002 3436.3623 -1614.8564 3437.1699 -1629.8457 c3438.0596 -1646.3398 3441.7988 -1662.7324 3443.6143 -1679.1533 c3445.3945 -1695.2568 3447.9912 -1710.9844 3451.2305 -1726.8701 c3454.4268 -1742.5439 3456.7314 -1758.5352 3460.3555 -1774.0889 c3462.0488 -1781.3555 3462.1621 -1788.9424 3463.1504 -1796.3203 c3464.248 -1804.5107 3465.3662 -1812.4854 3465.6377 -1820.7695 c3466.1504 -1836.3828 3465.2383 -1852.46 3463.0449 -1867.9395 c3460.8662 -1883.3125 3455.8916 -1897.8242 3452.3896 -1912.8789 c3450.8193 -1919.6309 3448.6094 -1925.8818 3446.4883 -1932.4443 c3444.1602 -1939.6465 3443.4004 -1947.2686 3441.332 -1954.5449 c3440.7236 -1956.6836 3439.832 -1958.6895 3438.9004 -1960.6797 C3438.834 -1960.6318 3438.7734 -1960.5811 3438.7031 -1960.5342 c3433.8555 -1957.3213 3428.9414 -1954.2334 3423.8799 -1951.3682 c3418.7979 -1948.4902 3413.8945 -1946.7158 3408.4131 -1944.8438 c3405.9961 -1944.0176 3404.0313 -1942.1533 3401.6055 -1941.4482 c3399.1094 -1940.7227 3396.9082 -1939.6201 3394.5762 -1938.4951 c3389.0156 -1935.8135 3382.9688 -1933.4902 3377.127 -1931.4951 c3371.1719 -1929.4619 3365.0293 -1929.3682 3359.2744 -1926.7158 c3353.5313 -1924.0684 3347.7363 -1922.8828 3341.5859 -1921.4238 c3329.7676 -1918.6211 3317.626 -1916.2891 3306.5371 -1911.2109 c3295.9893 -1906.3799 3285.6143 -1901.4463 3275.6846 -1895.5352 c3270.6641 -1892.5469 3265.3105 -1890.5742 3260.9766 -1886.5117 c3256.4092 -1882.2305 3251.1953 -1878.6055 3246.625 -1874.2744 c3238.1445 -1866.2393 3230.2148 -1857.4199 3222.292 -1848.8369 c3220.9414 -1847.373 3218.0234 -1845.0215 3217.3916 -1843.1406 c3216.5693 -1840.6914 3215.582 -1838.3008 3214.4424 -1835.9824 c3213.4014 -1833.8643 3211.793 -1832.2314 3210.8379 -1830.0469 c3209.75 -1827.5605 3208.6895 -1825.457 3207 -1823.3203 c3204.9375 -1820.709 3199.8926 -1820.8154 3197.8086 -1823.3203 c3193.8486 -1828.0762 3193.2715 -1833.0508 3193.2715 -1839.0498 c3193.2715 -1846.2266 3193.1543 -1853.415 3193.3945 -1860.5889 c3193.6475 -1868.0986 3195.1914 -1874.625 3198.0176 -1881.5508 cf0 D3206 -1849.6953 m3206 -1849.4082 L3206.2783 -1849.9551 3206.6055 -1850.4893 3207.0234 -1851.0039 c3208.9883 -1853.4219 3211.0117 -1855.7471 3213.0996 -1858.0596 c3221.3066 -1867.1445 3229.7969 -1876.2471 3238.6855 -1884.6699 c3246.9238 -1892.4766 3255.8633 -1899.9932 3266.002 -1905.1514 c3270.9893 -1907.6885 3275.4043 -1911.3008 3280.5918 -1913.4189 c3286.6582 -1915.8965 3292.4668 -1918.8467 3298.377 -1921.6855 c3308.9629 -1926.7705 3319.8965 -1929.5146 3331.2451 -1932.2979 c3337.1152 -1933.7373 3343 -1935.1211 3348.8955 -1936.4531 c3352.0059 -1937.1563 3354.7988 -1939.0342 3357.7764 -1940.1494 c3361.3105 -1941.4727 3364.7148 -1941.7354 3368.3477 -1942.5264 c3374.2637 -1943.8145 3379.2949 -1947.0645 3384.9844 -1948.7178 c3390.3359 -1950.2734 3395.6084 -1953.1045 3400.5938 -1955.5713 c3405.5801 -1958.0381 3410.9316 -1959.1172 3415.8496 -1961.7793 c3421.4531 -1964.8125 3426.833 -1968.2402 3432.1406 -1971.7588 c3432.9199 -1972.2754 3433.6904 -1972.585 3434.4395 -1972.7402 C3433.7861 -1975.3936 3433.2451 -1978.0801 3432.7148 -1980.748 c3430.75 -1990.6221 3428.0684 -2000.3594 3425.626 -2010.127 c3425.4453 -2010.8496 3425.2686 -2011.5752 3425.0898 -2012.2998 C3423.5273 -2010.541 3421.5723 -2009.1348 3419.1992 -2008.0742 c3416.6592 -2006.9385 3414.3818 -2006.1875 3412.043 -2004.6572 c3409.2227 -2002.8105 3406.2539 -2001.1094 3403.0859 -1999.9268 c3389.5615 -1994.8789 3375.5303 -1991.7891 3361.3926 -1988.9609 c3347.6182 -1986.207 3334.1143 -1983.041 3320.9043 -1978.1689 c3314.748 -1975.8984 3308.7207 -1973.3291 3302.5313 -1971.1436 c3296.6016 -1969.0498 3291.3223 -1965.0918 3285.9902 -1961.8506 c3280.9766 -1958.8027 3275.3262 -1956.6885 3270.0898 -1954.0547 c3267.5898 -1952.7979 3265.6514 -1950.4141 3263.6885 -1948.4873 c3261.0771 -1945.9238 3258.2773 -1943.5518 3255.4795 -1941.1953 c3244.4336 -1931.8936 3233.7188 -1921.9463 3225.1582 -1910.207 c3221.127 -1904.6768 3219.2207 -1898.0137 3216.5498 -1891.7764 c3213.6348 -1884.9697 3210.3291 -1878.292 3207.8018 -1871.3252 c3205.3906 -1864.6797 3206 -1856.6582 3206 -1849.6953 Cf*U3567.2285 -2159.9277 m3567.3369 -2153.0244 3567.666 -2146.1436 3568.4424 -2139.3311 c3570.4297 -2121.8955 3574.0078 -2104.541 3577.9561 -2087.4619 c3582.0918 -2069.5723 3586.9297 -2051.8398 3592.9775 -2034.4971 c3598.8838 -2017.5625 3607.3906 -2001.9824 3614.29 -1985.4961 c3621.376 -1968.5635 3630.1367 -1952.2451 3639.2051 -1936.2803 c3643.7891 -1928.2119 3648.9023 -1920.5732 3653.1084 -1912.2803 c3655.1396 -1908.2764 3657.1221 -1904.251 3659.2207 -1900.2803 c3661.5889 -1895.8008 3664.7568 -1892.1465 3667.7705 -1888.1133 c3672.5801 -1881.6748 3675.4043 -1874.1133 3678.8496 -1866.9219 c3682.1484 -1860.0381 3687.0127 -1853.4609 3689.1279 -1846.0645 c3691.4141 -1838.0713 3692.8965 -1829.8906 3695.2676 -1821.876 c3698.0889 -1812.3389 3701.1133 -1802.8633 3703.9346 -1793.3262 c3706.4951 -1784.6699 3709.3213 -1777.0508 3710.083 -1767.9414 c3710.4375 -1763.71 3710.5576 -1759.4648 3710.9404 -1755.2354 c3711.3828 -1750.3555 3713.1914 -1745.5615 3714.2158 -1740.7734 c3715.9482 -1732.6777 3716.6064 -1724.1299 3717.6367 -1715.9092 c3718.8984 -1705.8428 3720.6377 -1695.7373 3722.2949 -1685.7178 c3723.7705 -1676.7939 3725.4014 -1667.8975 3726.7031 -1658.9463 c3728.0947 -1649.3809 3727.5 -1639.5762 3727.5 -1629.9229 c3727.5 -1610.5469 3724.0439 -1591.9287 3720.8682 -1572.8721 c3719.2842 -1563.3682 3717.9941 -1553.9277 3715.2021 -1544.707 c3712.4424 -1535.5908 3710.2266 -1526.3311 3707.2676 -1517.2725 c3704.5137 -1508.8389 3703.9922 -1498.9141 3702.4678 -1490.168 c3700.7393 -1480.251 3699.0225 -1470.332 3697.2676 -1460.4199 c3695.6621 -1451.3516 3693.6436 -1442.374 3692.2305 -1433.2725 c3690.6719 -1423.2285 3689.2344 -1413.2568 3686.085 -1403.5576 c3680.2842 -1385.6934 3679.5566 -1365.585 3677.5 -1347 c3675.6191 -1330.0039 3673.7148 -1313.2031 3672.5693 -1296.1133 c3671.4629 -1279.6123 3671.5 -1263.2109 3671.5 -1246.667 c3671.5 -1229.3184 3670.4229 -1211.8818 3673.7119 -1194.8018 c3675.2285 -1186.9326 3676.7246 -1179.0703 3677.3604 -1171.0713 c3678.0801 -1162.002 3677.4805 -1152.7666 3677.8428 -1143.667 c3678.5029 -1127.0977 3682.7852 -1111.3623 3684.9727 -1095.0215 c3687.0186 -1079.7461 3688.0156 -1063.7246 3691.7686 -1048.728 c3695.666 -1033.1504 3700.1953 -1018.0879 3708.6123 -1004.2808 c3710.4072 -1001.3369 3712.4092 -998.5757 3714.5029 -995.897 C3713.541 -1000.5 3712.6846 -1005.1719 3711.623 -1009.8403 c3707.4209 -1028.3198 3700.8965 -1046.0703 3696.2637 -1064.4229 c3691.374 -1083.7959 3692.6836 -1104.7324 3690.7607 -1124.5449 c3688.7432 -1145.3359 3686.5859 -1166.0879 3686.5 -1187 c3686.4199 -1206.3428 3688.3438 -1225.8408 3685.1523 -1245.042 c3681.9033 -1264.5908 3682.5977 -1284.3828 3684.0215 -1304.0723 c3685.4385 -1323.6631 3686.7529 -1343.3408 3689.9912 -1362.7275 c3693.2666 -1382.3359 3699.2881 -1401.166 3703.9473 -1420.4199 c3705.8867 -1428.4346 3708.9238 -1436.1533 3711.0117 -1444.1328 c3713.4883 -1453.6006 3715.6563 -1463.1689 3718.1318 -1472.6611 c3723.2109 -1492.1367 3727.9043 -1511.6738 3731.7734 -1531.4297 c3739.4854 -1570.8076 3744.8379 -1610.7344 3750.3408 -1650.4688 c3755.9043 -1690.6348 3757.2813 -1731.3271 3756.9805 -1771.8418 c3756.8262 -1792.5859 3753.168 -1813.3643 3749 -1833.6357 c3747.9883 -1838.5547 3746.9043 -1843.459 3745.8213 -1848.3633 c3744.7168 -1853.3652 3742.4375 -1857.3594 3739.9326 -1861.7646 c3735.0195 -1870.4063 3730.8184 -1879.0508 3727.3223 -1888.3633 c3721.6992 -1903.3438 3715.29 -1918.25 3708.749 -1932.8584 c3702.5488 -1946.707 3695.1641 -1959.8291 3689.6543 -1973.9961 c3678.5527 -2002.5449 3672.0254 -2032.5605 3664.8574 -2062.2402 c3661.2266 -2077.2734 3653.0781 -2091.2295 3646.2559 -2105.0049 c3639.7383 -2118.167 3635.1865 -2132.2676 3631.3018 -2146.4072 c3630.083 -2150.8418 3628.958 -2155.3604 3627.9863 -2159.9277 C3641.2744 -2159.9277 L3644.2705 -2145.5957 3648.6641 -2131.1719 3654.4375 -2117.9951 c3662.0908 -2100.5254 3672.4922 -2084.2666 3677.3926 -2065.6973 c3682.2598 -2047.2549 3686.126 -2028.5664 3691.375 -2010.1953 c3696.6738 -1991.6455 3702.8857 -1973.3105 3711.875 -1956.209 c3721.082 -1938.6914 3727.1436 -1919.8848 3735.6572 -1902.0986 c3739.7441 -1893.5586 3742.3379 -1884.4834 3746.7949 -1876.0918 c3751.5693 -1867.1006 3756.6836 -1859.4023 3758.8994 -1849.3643 c3763.3125 -1829.3721 3767.0908 -1809.1758 3769.1563 -1788.791 c3771.1396 -1769.21 3769.6709 -1749.208 3769.4492 -1729.5654 c3769.2178 -1709.0137 3767.7334 -1688.4854 3765.5049 -1668.0596 c3763.3359 -1648.1836 3760.0049 -1628.4736 3757.2617 -1608.6768 c3754.5059 -1588.7754 3751.5781 -1568.8965 3748.1777 -1549.0938 c3744.8018 -1529.4307 3740.9102 -1509.8301 3736.0684 -1490.4736 c3733.7197 -1481.0889 3731.3467 -1471.71 3728.8682 -1462.3584 c3726.4131 -1453.0996 3724.5381 -1443.6914 3721.8281 -1434.5127 c3716.543 -1416.6094 3711.1992 -1398.7217 3706.8672 -1380.5449 c3702.1621 -1360.8076 3700.0605 -1341.0225 3698.3799 -1320.8516 c3697.1768 -1306.4248 3695.9707 -1292.0029 3695.7969 -1277.5186 c3695.6143 -1262.4658 3698.4063 -1248.0283 3699.541 -1233.1113 c3700.6494 -1218.5234 3699.6504 -1203.835 3699.5078 -1189.2305 c3699.3545 -1173.4541 3700.5771 -1157.6973 3702.0313 -1142 c3703.4805 -1126.3574 3704.8877 -1110.7793 3705.7754 -1095.0908 c3706.1992 -1087.6211 3706.2178 -1079.7705 3707.7461 -1072.4287 c3709.3203 -1064.876 3711.5967 -1057.4736 3713.8867 -1050.1143 c3718.0449 -1036.7549 3722.041 -1023.4409 3724.9375 -1009.7417 c3727.3555 -998.3125 3728.1055 -985.1357 3735.5957 -975.5962 c3738.0986 -972.4092 3737.1865 -968.5664 3735 -966.2407 C3735 -965 L3735 -958.9263 3725.9063 -955.5962 3723.1377 -961.7192 c3716.293 -976.855 3703.1396 -987.4761 3694.8838 -1001.7192 c3686.2334 -1016.6431 3680.4922 -1034.8403 3678.0029 -1051.8672 c3676.7637 -1060.3428 3675.4277 -1068.7988 3674.0342 -1077.25 c3672.5898 -1086.0078 3672.1748 -1094.8027 3670.4668 -1103.5225 c3666.7627 -1122.4297 3664.6064 -1140.6992 3664.502 -1160 c3664.4512 -1169.1543 3663.498 -1177.7705 3661.8037 -1186.7813 c3659.9248 -1196.7676 3658 -1206.1543 3658 -1216.333 C3658 -1273.4375 L3658 -1292.3779 3659.9336 -1311.6855 3661.9063 -1330.5313 c3663.875 -1349.334 3666.4746 -1368.2686 3669.3164 -1386.9648 c3670.7217 -1396.2148 3673.1074 -1404.8721 3675.5146 -1413.8711 c3678.1123 -1423.583 3679.084 -1433.6973 3680.7813 -1443.585 c3684.041 -1462.5713 3687.7949 -1481.5088 3691.1162 -1500.4961 c3694.3398 -1518.9229 3698.9082 -1536.9209 3704.7246 -1554.7275 c3706.1758 -1559.1699 3706.3584 -1564.5107 3707.1279 -1569.1279 c3707.9277 -1573.9277 3708.7305 -1578.7275 3709.5303 -1583.5283 c3711.2041 -1593.5723 3713.1836 -1603.6025 3714.1104 -1613.751 c3715.8379 -1632.6719 3714.8848 -1652.1953 3711.7051 -1670.8535 c3708.5234 -1689.5313 3706.9512 -1708.8213 3702.7324 -1727.2725 c3701.8477 -1731.1396 3702.1152 -1735.2842 3701.2715 -1739.2266 c3700.3984 -1743.3047 3699.0303 -1747.2607 3698.418 -1751.3896 c3697.0566 -1760.5752 3697.6484 -1769.8916 3695.2275 -1778.9189 c3694.0352 -1783.3662 3692.0488 -1787.6738 3690.7324 -1792.124 c3689.4326 -1796.5166 3688.0791 -1800.8936 3686.7324 -1805.2725 c3683.9766 -1814.2324 3680.4824 -1823.3252 3678.7324 -1832.5225 c3678.0723 -1835.9922 3676.8652 -1839.5068 3676.5 -1843 c3676.2021 -1845.8438 3673.3135 -1849.21 3672.1201 -1851.791 c3669.0469 -1858.4346 3665.5625 -1864.9414 3662.4316 -1871.5859 c3659.2207 -1878.3994 3653.9414 -1883.3701 3650.2129 -1889.7197 c3645.6445 -1897.499 3642.0039 -1905.7988 3637.6904 -1913.7197 c3633.6152 -1921.2021 3628.7314 -1928.2275 3624.6377 -1935.7197 c3620.3633 -1943.54 3616.4502 -1951.5059 3612.0371 -1959.2412 c3608.2549 -1965.8701 3605.4629 -1973.0693 3602.5547 -1980.1084 c3599.2871 -1988.0166 3595.2959 -1995.5215 3591.6758 -2003.2637 c3577.7979 -2032.9395 3569.5225 -2064.9092 3562.5449 -2096.7979 c3559.2012 -2112.085 3556.5869 -2127.8105 3555.0059 -2143.3848 c3554.4512 -2148.8506 3554.2031 -2154.377 3554.1191 -2159.9277 C3567.2285 -2159.9277 Lf2357.5488 -2159.9277 m2373.4531 -2145.832 2393.0352 -2136.958 2412.5508 -2128.8438 c2423.4082 -2124.3301 2434.1309 -2119.125 2445.2295 -2115.2676 c2457.418 -2111.0322 2470.2031 -2108.6699 2482.8633 -2106.3467 c2507.1953 -2101.8809 2531.3623 -2095.0586 2556.2578 -2094.9688 c2566.9434 -2094.9297 2578.958 -2096.6035 2589.2148 -2099.6484 c2591.6201 -2100.3633 2593.0498 -2102.2256 2594.8633 -2103.8633 c2597.2207 -2105.9922 2599.8438 -2107.8301 2602.6328 -2109.335 c2604.7832 -2110.4961 2607.415 -2110.791 2609.2041 -2112.4121 c2611.7061 -2114.6816 2614.0156 -2117.207 2616.4043 -2119.5957 c2618.8682 -2122.0605 2623.1445 -2122.1533 2625.5957 -2119.5957 c2629.6387 -2115.3779 2632.626 -2109.8008 2637.377 -2106.3145 c2642.9395 -2102.2324 2651.542 -2100.9863 2658.1396 -2099.4736 c2672.2031 -2096.249 2687.8203 -2096.7305 2701.6641 -2101.0322 c2707.5869 -2102.8721 2713.3848 -2105.8584 2719.1836 -2108.1543 c2724.498 -2110.2588 2729.7939 -2113.1094 2734.2637 -2116.6865 c2744.9844 -2125.2646 2751.3203 -2139.3809 2759.3877 -2150.2813 c2764.3154 -2156.9395 2775.6074 -2150.4678 2770.6123 -2143.7188 c2761.5029 -2131.4111 2754.4063 -2116.2568 2742.2881 -2106.5596 c2738.1357 -2103.2363 2733.6035 -2100.5752 2728.8398 -2098.3154 C2729.6973 -2096.999 2729.9785 -2095.2832 2729.2676 -2093.2715 c2726.5596 -2085.6064 2731.668 -2079.7139 2735.2051 -2073.1885 c2737.0469 -2069.7891 2739.5557 -2066.8145 2741.3477 -2063.3672 c2742.4434 -2061.2578 2742.542 -2060.666 2744.2627 -2059.1816 c2746.3867 -2057.3516 2748.7402 -2055.7637 2750.9297 -2054.0107 c2757.9746 -2048.3711 2763.4736 -2041.2842 2771.125 -2036.2998 c2779.6523 -2030.7441 2788.5654 -2029.1279 2798.3945 -2027.5127 c2806.835 -2026.125 2814.8066 -2022.9941 2823.375 -2021.8701 c2832.8008 -2020.6328 2842.3828 -2020.3809 2851.8555 -2021.1621 c2860.1152 -2021.8438 2868.9141 -2026.377 2876.2871 -2029.9072 c2878.1797 -2030.8125 2880.2178 -2032.0967 2882.2422 -2033.0645 c2882.8945 -2033.376 2883.5381 -2033.7002 2884.1777 -2034.0332 C2884.0273 -2035.2764 2884.3936 -2036.5205 2885.0957 -2037.6152 C2881.3828 -2047.8789 2878.584 -2058.4688 2876.7324 -2069.2715 c2875.3271 -2077.4688 2887.8535 -2080.9785 2889.2676 -2072.7285 c2892.1172 -2056.1074 2897.1084 -2040.1172 2904.5459 -2024.9727 c2908.0479 -2017.8418 2912.2949 -2011.1299 2915.9473 -2004.082 c2919.2305 -1997.749 2922.3047 -1991.3184 2926.2334 -1985.3477 c2934.6699 -1972.5273 2952.002 -1968.252 2965.96 -1964.3242 c2974.5371 -1961.9092 2983.377 -1959.5967 2992.1279 -1957.9541 c2993.9063 -1957.6201 2995.7979 -1957.6279 2997.5996 -1957.5537 c2998.7998 -1957.5205 3000 -1957.5029 3001.2002 -1957.502 C3001.1426 -1957.4727 3001.0996 -1957.4512 3001.0469 -1957.4258 c3002.4092 -1958.1055 3003.8672 -1958.5352 3005.332 -1958.916 c3005.5605 -1958.9707 3005.7891 -1959.0293 3006.0166 -1959.085 C3008.7109 -1961.7363 3013.8252 -1962.375 3016.6123 -1958.2803 c3018.6328 -1955.3135 3017.8643 -1951.8203 3015.5801 -1949.2891 c3013.502 -1946.9873 3009.6709 -1946.6826 3006.875 -1945.8467 c3005.4727 -1945.4268 3004.6826 -1944.498 3003 -1944.5 c2999.9932 -1944.5029 2997.001 -1944.5469 2994 -1944.75 c2988.5117 -1945.1221 2983.2637 -1946.7207 2977.9297 -1947.9365 c2967.7139 -1950.2637 2957.584 -1952.9336 2947.7266 -1956.5039 c2939.04 -1959.6504 2929.9189 -1963.1895 2922.8838 -1969.3154 c2916.9893 -1974.4492 2912.9229 -1981.7402 2909.3135 -1988.5537 c2905.0596 -1996.584 2900.7207 -2004.5322 2896.376 -2012.5127 c2894.502 -2015.9561 2892.7461 -2019.4551 2891.1035 -2023.001 C2890.9258 -2022.9004 2890.7471 -2022.8027 2890.5693 -2022.709 c2889.1914 -2021.9863 2887.7656 -2021.3506 2886.3691 -2020.665 c2886.0234 -2020.4941 2885.6865 -2020.3066 2885.3506 -2020.1162 c2884.6074 -2019.6895 2882.7676 -2018.6416 2882.8486 -2018.6816 c2877.8145 -2016.2012 2872.5996 -2014.0527 2867.3486 -2012.0801 c2856.8008 -2008.1191 2846.3965 -2007.4189 2835.2012 -2007.8594 c2824.1602 -2008.2939 2812.0381 -2009.5059 2801.6055 -2013.3457 c2796.3115 -2015.2949 2790.4541 -2015.5635 2784.9385 -2016.5381 c2779.1191 -2017.5674 2774.0576 -2020.2148 2768.7773 -2022.7031 c2758.6924 -2027.4561 2751.0127 -2036.1348 2743.0703 -2043.6689 c2739.1748 -2047.3643 2732.6992 -2049.9961 2730.7324 -2055.2715 c2729.0313 -2059.8369 2725.6875 -2063.4766 2723.3877 -2067.7188 c2718.9092 -2075.9814 2714.1963 -2083.4951 2715.6787 -2092.6406 C2711.6563 -2090.9258 2707.6045 -2089.2676 2703.4707 -2087.9834 c2687.9824 -2083.1719 2670.3057 -2083.4854 2654.6836 -2086.9375 c2646.6846 -2088.7051 2637.8008 -2090.4561 2630.8154 -2094.8877 c2626.6758 -2097.5137 2623.7295 -2101.2764 2620.7275 -2104.9922 C2618.0703 -2102.1709 2615.0811 -2099.3428 2611.9277 -2098.7539 c2609.4629 -2098.2939 2607.2109 -2097.1016 2605.2383 -2095.5684 c2602.957 -2093.7949 2600.8906 -2090.5449 2598.2813 -2089.3369 c2593.0186 -2086.9023 2587.6514 -2085.6982 2581.9385 -2084.8398 c2575.8066 -2083.9199 2569.627 -2082.6494 2563.4512 -2082.1953 c2536.2285 -2080.1943 2509.3887 -2088.3359 2482.8848 -2093.1699 c2470.1719 -2095.4902 2457.4629 -2097.8428 2445.0938 -2101.6445 c2432.7441 -2105.4404 2421.0186 -2111.3652 2409.0947 -2116.3066 c2385.7979 -2125.9609 2362.6221 -2136.4766 2344.4043 -2154.4033 c2342.6631 -2156.1172 2342.2129 -2158.1084 2342.5898 -2159.9277 C2357.5488 -2159.9277 Lf2379.5723 -2039.7197 m2390.0322 -2040.0332 2400.4805 -2040.6543 2410.9355 -2041.083 c2419.8926 -2041.4492 2429.7334 -2040.2861 2438.4453 -2042.5967 c2441.709 -2043.4619 2444.7178 -2045.1143 2447.7188 -2046.6123 c2447.9805 -2046.7432 2448.248 -2046.8633 2448.5156 -2046.9844 C2448.7891 -2050.5859 2452.1543 -2054.0947 2456.1953 -2053.3613 C2459.7783 -2056.9004 2467 -2055.5625 2467 -2049 C2467.5 -2049 L2467.4668 -2048.5879 2467.418 -2048.1973 2467.3613 -2047.8164 C2483.2021 -2039.7139 2499.8438 -2032.9063 2517.7627 -2031.6572 c2537.5693 -2030.2783 2557.2324 -2035.3398 2577 -2035.5 c2585.3857 -2035.5684 2585.3789 -2022.5684 2577 -2022.5 c2556.6152 -2022.335 2536.4707 -2017.3545 2516.0313 -2018.7783 c2495.8213 -2020.1855 2476.9111 -2028.1934 2459.082 -2037.4678 C2456.7773 -2036.3271 2454.1992 -2035.3408 2451.6074 -2034.0586 c2442.9883 -2029.7959 2435.0176 -2028.5596 2425.4512 -2028.4805 c2413.8242 -2028.3828 2402.207 -2027.6836 2390.5947 -2027.1533 c2379.209 -2026.6338 2367.6191 -2025.8154 2356.2773 -2027.2451 c2345.0918 -2028.6553 2334.457 -2032.1426 2324.04 -2036.3486 c2313.7949 -2040.4863 2303.5586 -2044.7471 2293.4004 -2049.0938 c2291.376 -2049.96 2289.375 -2050.877 2287.3945 -2051.8311 C2287.4609 -2051.752 2287.5303 -2051.6816 2287.5957 -2051.5977 c2291.7363 -2046.3047 2291.5254 -2041.2842 2287.1631 -2036.1836 c2285.2979 -2034.002 2282.3984 -2033.1563 2280.3711 -2031.2559 c2277.999 -2029.0313 2275.1523 -2027.2568 2272.377 -2025.5957 c2260.6846 -2018.5986 2249.8896 -2010.4873 2237.6709 -2004.2275 c2224.7725 -1997.6191 2210.3145 -1993.2842 2196.3262 -1989.6729 c2181.9004 -1985.9482 2167.0605 -1983.7148 2152.1953 -1982.8154 c2137.3643 -1981.918 2122.3711 -1982.5 2107.5186 -1982.5 c2100.1289 -1982.5 2092.7842 -1982.1523 2085.4824 -1983.3613 c2077.8789 -1984.6211 2070.2725 -1985.7178 2062.5791 -1986.2529 c2047.9648 -1987.2695 2033.3789 -1986.3145 2018.7715 -1988.0029 c2003.9883 -1989.7109 1989.9053 -1996.2275 1975 -1996.5 c1966.627 -1996.6533 1966.6123 -2009.6533 1975 -2009.5 c1988.1748 -2009.2588 2000.3486 -2004.4531 2013.1182 -2001.874 c2026.1523 -1999.2412 2039.8701 -1999.5098 2053.1035 -1999.5 c2060.0967 -1999.4951 2067.0088 -1999.2461 2073.9473 -1998.3799 c2080.7832 -1997.5254 2087.6953 -1996 2094.5869 -1996 C2135.5977 -1996 L2163.3086 -1996 2189.916 -2000.2666 2216.0459 -2009.5723 c2228.5605 -2014.0283 2239.6426 -2020.1465 2250.9434 -2027.0566 c2256.0313 -2030.166 2260.6094 -2033.8711 2265.8154 -2036.8828 c2268.2051 -2038.2656 2270.3887 -2039.7373 2272.4043 -2041.627 c2273.4678 -2042.625 2274.7832 -2043.1816 2276.0273 -2043.9053 C2276.416 -2044.1602 2276.8057 -2044.4072 2277.1953 -2044.6621 C2277.2002 -2044.668 2277.2041 -2044.6709 2277.209 -2044.6777 C2275.834 -2049.1113 2279.4824 -2053.8145 2283.3447 -2053.8604 C2277.5781 -2056.8867 2272.0547 -2060.3496 2266.915 -2064.3906 c2258.0723 -2071.3428 2252.1709 -2080.4131 2244.4043 -2088.4043 c2238.5605 -2094.416 2247.7451 -2103.6162 2253.5957 -2097.5957 c2260.1172 -2090.8877 2265.1084 -2082.8027 2272.2246 -2076.6758 c2279.1396 -2070.7207 2287.2314 -2066.2246 2295.4463 -2062.3438 c2304.2715 -2058.1758 2313.5186 -2054.8994 2322.4697 -2051.0039 c2331.7188 -2046.9785 2341.1895 -2043.4766 2351.041 -2041.249 c2360.4453 -2039.123 2370.002 -2039.4326 2379.5723 -2039.7197 cf1892.2446 -2064.3594 m1895.6406 -2070.5381 1898.9717 -2076.751 1902.5303 -2082.8389 c1905.7632 -2088.3701 1912.5 -2093.0059 1912.5 -2100.0098 c1912.5 -2112.8018 1912.9863 -2125.6514 1910.7285 -2138.2988 c1909.3765 -2145.8711 1907.0723 -2153.1172 1903.8057 -2159.9277 C1917.8975 -2159.9277 L1923.9805 -2144.1494 1925.5 -2126.9473 1925.5 -2109.5928 c1925.5 -2103.7021 1926.3066 -2097.5195 1923.9902 -2092.0117 c1921.2314 -2085.4492 1916.4053 -2080.8105 1912.8984 -2074.8115 c1906.2476 -2063.4336 1900.3223 -2051.6377 1893.603 -2040.3008 c1887.3809 -2029.8027 1880.0938 -2020.6982 1878.8281 -2008.1289 c1878.1982 -2001.874 1878.8164 -1995.4883 1879.1938 -1989.2373 c1879.5947 -1982.5977 1879.3921 -1975.9541 1880.3457 -1969.3535 c1882.1904 -1956.585 1887.2119 -1945.0088 1891.1807 -1932.8633 c1893.042 -1927.1689 1895.1602 -1921.4756 1898.5381 -1916.7979 C1898.6758 -1925.334 1899.1973 -1933.8037 1901.0752 -1942.2754 c1903.5703 -1953.5322 1906.1016 -1964.7695 1910.2617 -1975.5508 c1912.2798 -1980.7813 1914.708 -1985.8311 1917.5747 -1990.6475 c1920.7939 -1996.0566 1924.8789 -2000.8555 1928.0664 -2006.3047 c1931.2344 -2011.7207 1934.0283 -2017.3359 1937.3721 -2022.6523 c1940.9805 -2028.3877 1945.8105 -2032.9717 1950.2148 -2038.0664 c1966.4873 -2056.8896 1978.0771 -2080.1855 1983.0381 -2104.6104 c1985.5 -2116.7334 1986.0879 -2128.8301 1983.8467 -2141.0137 c1982.6768 -2147.373 1981.166 -2153.6387 1979.7852 -2159.9277 C1992.9307 -2159.9277 L1994.2402 -2154.2158 1995.6367 -2148.5195 1996.6953 -2142.7656 c1998.9775 -2130.3584 1998.2012 -2118.709 1996.46 -2106.3047 c1993.0996 -2082.3711 1981.9141 -2057.7422 1967.2676 -2038.6602 c1963.5674 -2033.8398 1959.7402 -2029.1396 1955.6553 -2024.6387 c1951.1045 -2019.625 1947.5615 -2014.6455 1944.2549 -2008.7168 c1941.1914 -2003.2227 1938.2861 -1997.6758 1934.7012 -1992.4932 c1931.1074 -1987.2979 1927.5938 -1982.3936 1924.8066 -1976.6855 c1919.7383 -1966.3037 1917.1665 -1954.7197 1914.6514 -1943.5127 c1913.2065 -1937.0752 1911.9106 -1930.8438 1911.6138 -1924.2305 c1911.2969 -1917.1699 1911.5 -1910.0664 1911.5 -1903 c1911.5 -1897.7109 1906.0669 -1895.3848 1901.7192 -1897.3877 c1891.7891 -1901.9629 1885.7485 -1910.9746 1881.7598 -1920.8232 c1879.8418 -1925.5566 1878.333 -1930.4258 1876.7324 -1935.2725 c1874.4834 -1942.0801 1871.6895 -1948.5547 1869.8994 -1955.541 c1866.6182 -1968.3496 1866.6523 -1981.3008 1865.8843 -1994.3965 c1865.0894 -2007.9473 1866.6738 -2020.3613 1873.313 -2032.3564 c1879.3105 -2043.1914 1886.2671 -2053.4824 1892.2446 -2064.3594 cf*u1 D1770.8477 -1992.5098 m1771.3755 -1991.5791 1771.6396 -1990.4141 1771.5 -1989 c1770.8345 -1982.2656 1766.0664 -1979.0723 1759.7246 -1978.1641 c1752.3428 -1977.1064 1745.9004 -1975.2783 1738.728 -1972.9824 c1730.1841 -1970.2471 1721.4443 -1970.1191 1712.583 -1970.9658 c1706.6772 -1971.5303 1701.9565 -1973.4189 1697.3457 -1975.8945 C1696.0283 -1967.4404 1688.8779 -1964.0781 1681.2109 -1961.542 c1673.5713 -1959.0137 1668.0278 -1950.3906 1661.7593 -1945.5518 c1653.5732 -1939.2334 1645.708 -1940.8135 1636.584 -1943.7813 c1627.7251 -1946.6641 1618.606 -1951.0625 1611.0249 -1956.5449 c1608.0742 -1958.6787 1605.3379 -1961.0088 1602.8682 -1963.5674 C1602.4502 -1961.4453 1601.7671 -1959.3887 1600.6123 -1957.4697 c1597.9941 -1953.1191 1593.2036 -1950.9932 1588.9473 -1948.6553 c1586.2056 -1947.1484 1583.834 -1945.1797 1580.9473 -1943.9141 c1578.1426 -1942.6855 1574.9551 -1942.2324 1571.9141 -1941.9297 c1564.666 -1941.208 1557.4224 -1942.415 1550.3579 -1943.9902 c1544.2539 -1945.3506 1538.7178 -1944.916 1532.8179 -1947.5781 c1526.3535 -1950.4941 1522.0239 -1956.1875 1517.4497 -1961.3125 c1510.5752 -1969.0146 1504.1201 -1978.2451 1500.6426 -1988.2139 C1496.9141 -1987.2725 1493.3311 -1986.2969 1489.7354 -1984.7012 c1482.1904 -1981.3545 1475.8696 -1980.001 1467.6753 -1981.2422 c1460.4268 -1982.3398 1453.2969 -1984.4766 1446.8457 -1987.9033 c1435.0391 -1994.1758 1423.1543 -2003.3115 1420.7324 -2017.2725 c1420.7065 -2017.4219 1420.6948 -2017.5654 1420.6782 -2017.7109 C1408.7598 -2018.1602 1395.6953 -2021.002 1386.0874 -2027.3916 c1380.8408 -2030.8818 1377.0879 -2035.1563 1376.7148 -2041.6201 c1376.3564 -2047.8281 1381.2793 -2054.3408 1383.6816 -2059.7881 c1393.6504 -2082.3867 1411.9038 -2101.6816 1434.2412 -2112.2891 c1448.1475 -2118.8926 1463.042 -2123.4346 1477.7939 -2127.6982 c1492.9863 -2132.0898 1509.6172 -2133.0313 1525.272 -2135.2676 c1539.8882 -2137.3555 1554.7197 -2136.0156 1569.4023 -2135.6055 c1576.5498 -2135.4043 1583.5083 -2135.3037 1590.6074 -2134.332 c1598.3042 -2133.2773 1605.873 -2131.3086 1613.373 -2129.3311 c1628.3496 -2125.3818 1643.3193 -2121.375 1657.9453 -2116.2461 c1671.6216 -2111.4512 1685.7412 -2106.4434 1698.2861 -2099.1563 c1710.2778 -2092.1895 1721.6299 -2083.8525 1731.8345 -2074.4668 c1736.9014 -2069.8066 1741.6768 -2064.8311 1746.2905 -2059.7256 c1751.0029 -2054.5117 1755.9292 -2049.7588 1760.8926 -2044.793 c1765.6641 -2040.0195 1768.6484 -2033.9609 1772.7578 -2028.6729 c1776.8462 -2023.4121 1780.3613 -2018.3066 1782.1338 -2011.8125 c1784.7476 -2002.2373 1782.0801 -1991.3662 1770.8477 -1992.5098 Cf0 D1768.7324 -2011.2725 m1766.54 -2018.0811 1759.8867 -2023.0342 1756.5615 -2029.2676 c1753.563 -2034.8887 1748.1455 -2038.9277 1743.6035 -2043.2285 c1738.375 -2048.1797 1733.9419 -2054.1055 1728.8677 -2059.252 c1719.0205 -2069.2383 1708.0742 -2077.7422 1696.2188 -2085.2119 c1683.7876 -2093.0439 1670.0537 -2097.9932 1656.3154 -2103.0547 c1641.7324 -2108.4277 1626.6504 -2112.3086 1611.6582 -2116.3311 c1604.7002 -2118.1982 1597.7173 -2119.9473 1590.627 -2121.2373 c1582.9702 -2122.6309 1575.2813 -2122.4404 1567.5371 -2122.6572 c1552.5933 -2123.0752 1537.8667 -2124.0371 1523.001 -2121.9141 c1507.1299 -2119.6465 1491.1685 -2118.0918 1475.7715 -2113.5664 c1462.0923 -2109.5459 1448.1191 -2105.1631 1435.5166 -2098.3906 c1425.105 -2092.7949 1416.2368 -2084.9072 1408.7012 -2075.8613 c1404.9414 -2071.3477 1401.7764 -2066.332 1398.9033 -2061.2197 c1395.9316 -2055.9307 1393.9541 -2050.1836 1390.9302 -2044.957 c1389.3047 -2042.1484 1389.4233 -2041.5859 1391.5962 -2039.5957 c1393.9839 -2037.4102 1396.855 -2036.0869 1399.8594 -2034.9443 c1406.2344 -2032.5205 1413.0986 -2031.54 1419.8682 -2030.9258 c1434.3105 -2029.6133 1448.8818 -2034.4951 1462.6055 -2038.4453 c1469.9619 -2040.5625 1477.2739 -2042.835 1484.6055 -2045.0371 c1491.3193 -2047.0547 1498.6914 -2048.3301 1505.0332 -2051.3389 c1507.4355 -2052.4785 1509.7114 -2053.8809 1512.0786 -2055.0908 c1515.3594 -2056.7676 1515.3564 -2056.7598 1518.0752 -2058.6084 c1522.9443 -2061.9189 1528.1758 -2063.5566 1532.5889 -2067.5088 c1541.7612 -2075.7217 1552.1455 -2082.7266 1557.3877 -2094.2813 c1560.8467 -2101.9053 1572.0479 -2095.291 1568.6123 -2087.7188 c1563.3564 -2076.1328 1553.4312 -2068.2744 1543.9805 -2060.2275 c1541.7852 -2058.3584 1539.6543 -2056.4229 1537.5962 -2054.4043 c1535.6406 -2052.4854 1532.3999 -2051.6191 1529.9619 -2050.4727 c1527.0576 -2049.1055 1524.9678 -2046.9619 1522.2808 -2045.3877 c1519.7002 -2043.876 1516.6865 -2042.8496 1514.0308 -2041.3877 c1508.124 -2038.1367 1501.8291 -2036.5186 1495.3945 -2034.666 c1487.4248 -2032.373 1479.5073 -2029.9004 1471.5615 -2027.5264 c1459.418 -2023.8984 1446.6514 -2019.7275 1433.8745 -2018.2285 C1436.6475 -2008.9902 1445.1411 -2003.6309 1453.4072 -1999.1289 c1458.8115 -1996.1855 1465.0957 -1994.8838 1471.1313 -1993.7773 c1477.7939 -1992.5566 1483.6821 -1996.2666 1489.6357 -1998.6777 c1493.4517 -2000.2227 1497.4668 -2000.8232 1501.332 -2001.9385 C1502.5342 -2002.8252 1503.9941 -2003.3438 1505.4297 -2003.4121 C1506.2061 -2003.7637 1506.9707 -2004.1563 1507.7192 -2004.6123 c1510.208 -2006.1279 1513.1841 -2007.0771 1515.7515 -2008.5488 c1518.8428 -2010.3203 1521.8579 -2012.2246 1524.9355 -2014.0205 c1531.0195 -2017.5713 1536.8423 -2021.1689 1542.25 -2025.7373 c1544.4795 -2027.6211 1546.4717 -2029.7471 1548.73 -2031.5977 c1549.7012 -2032.3936 1550.6709 -2033.1875 1551.624 -2034.0049 c1552.5859 -2034.8301 1553.1787 -2036.6006 1552.7324 -2034.7275 c1554.6772 -2042.8809 1567.2124 -2039.4219 1565.2676 -2031.2725 c1563.9785 -2025.8682 1557.938 -2022.6875 1554.2114 -2019.0537 c1548.6006 -2013.583 1541.6587 -2008.1611 1534.6812 -2004.5625 c1527.6982 -2000.9609 1521.3735 -1995.916 1513.9541 -1993.1836 c1513.5986 -1993.0527 1513.2515 -1992.9121 1512.9043 -1992.7715 C1515.5498 -1985.3506 1520.1416 -1978.8916 1524.9326 -1972.5117 c1527.7734 -1968.7295 1531.1484 -1964.9238 1534.6841 -1961.7783 c1538.9121 -1958.0166 1543.6294 -1957.5098 1549 -1957.5 c1553.7935 -1957.4912 1558.854 -1955.3047 1563.6865 -1954.8369 c1568.7451 -1954.3477 1574.0195 -1954.5654 1578.3857 -1957.2871 c1581.6787 -1959.3398 1585.7925 -1961.0156 1588.7705 -1963.4902 c1590.7925 -1965.1699 1590.4736 -1968.5225 1590.5 -1971 c1590.5308 -1973.8672 1592.0742 -1975.7529 1594.0874 -1976.6592 C1590.8848 -1984.1172 1589.564 -1992.1445 1588.8818 -2000.2021 c1587.0884 -2021.3867 1591.3159 -2042.584 1584.7324 -2063.2715 c1582.1826 -2071.2832 1594.7354 -2074.6855 1597.2676 -2066.7285 c1603.0479 -2048.5645 1601.5679 -2029.7568 1601.5 -2011 c1601.4521 -1997.7188 1602.4644 -1982.1309 1612.4219 -1972.2188 c1617.8203 -1966.8447 1624.4863 -1963.2734 1631.2798 -1959.9883 c1634.7021 -1958.334 1638.0029 -1956.9805 1641.6152 -1955.8047 c1644.8125 -1954.7646 1648.5352 -1952.7852 1651.7192 -1954.6123 c1657.9585 -1958.1934 1662.334 -1964.0039 1667.8115 -1968.5723 c1670.873 -1971.125 1673.9722 -1972.8506 1677.7549 -1974.0771 c1678.8027 -1974.417 1684.4121 -1976.0293 1684.5 -1977 c1684.6982 -1979.1934 1685.7607 -1980.8047 1687.1953 -1981.8418 C1685.4878 -1982.7549 1683.7646 -1983.3535 1682.1709 -1984.5625 c1680.333 -1985.9561 1678.5288 -1987.3926 1676.7432 -1988.8535 c1673.6201 -1991.4082 1670.6924 -1994.1895 1667.8115 -1997.0117 c1661.0361 -2003.6494 1654.7896 -2011.9014 1649.3877 -2019.7197 c1644.2178 -2027.2002 1640.2764 -2035.374 1635.3188 -2042.9844 c1630.7324 -2050.0244 1628.6631 -2058.6045 1628.5 -2067 c1628.3369 -2075.3877 1641.3369 -2075.3721 1641.5 -2067 c1641.6182 -2060.918 1643.083 -2054.5918 1646.5439 -2049.5449 c1651.0415 -2042.9883 1654.3408 -2035.6787 1658.6812 -2029.0156 c1666.7651 -2016.6074 1677.022 -2005.1191 1688.5952 -1995.8994 c1691.1367 -1993.874 1694.4302 -1992.7441 1697.2036 -1990.9844 c1700.2993 -1989.0205 1703.2739 -1986.5869 1706.728 -1985.2676 c1712.9297 -1982.8984 1721.9063 -1982.7549 1728.415 -1983.7598 c1735.2852 -1984.8203 1741.9746 -1987.7734 1748.6152 -1989.7402 c1750.9355 -1990.4277 1753.5469 -1990.4805 1755.9487 -1990.708 c1756.7627 -1990.7842 1757.4316 -1990.8721 1758.2344 -1991.0176 c1758.585 -1991.0811 1758.8545 -1991.1445 1759.0771 -1991.2051 C1760.2349 -1993.7949 1762.8506 -1995.1348 1765.3916 -1995.2168 C1763.2432 -1998.7031 1765.542 -2004.4971 1770.249 -2005.2979 C1769.9639 -2007.3301 1769.3589 -2009.3242 1768.7324 -2011.2725 cf*U942.4834 -2030.4111 m944.3232 -2038.2744 947.3037 -2045.8828 950.4902 -2053.2832 c957.1685 -2068.7979 966.1846 -2083.29 971.46 -2099.376 c977.6211 -2118.1621 978.3433 -2140.0078 973.3013 -2159.9277 C986.7002 -2159.9277 L991.8433 -2136.4727 989.8066 -2111.0508 981.6499 -2089.2354 c974.9189 -2071.2344 964.3066 -2055.0195 957.9355 -2036.8145 c956.4346 -2032.5254 955.2397 -2028.1406 954.2896 -2023.6982 c953.2134 -2018.668 953.373 -2013.4922 952.8672 -2008.3828 c952.4141 -2003.8076 951.8408 -1999.2578 951.5859 -1994.6641 c951.3838 -1991.0215 952.1626 -1987.6025 952.8003 -1984.124 C952.9189 -1984.3262 953.0415 -1984.5303 953.1499 -1984.7305 c955.8525 -1989.7266 959.1699 -1994.0352 962.3916 -1998.6865 c968.6533 -2007.7285 975.6572 -2016.293 983.9443 -2023.5547 c992.6777 -2031.207 1000.7612 -2039.9033 1008.0601 -2048.9395 c1011.6597 -2053.3965 1014.731 -2057.8682 1018.7432 -2061.9844 c1022.7344 -2066.0781 1026.3491 -2070.3682 1029.3032 -2075.2734 c1032.1738 -2080.041 1033.9189 -2085.5322 1036.1421 -2090.6221 c1038.3716 -2095.7266 1040.5137 -2100.8516 1042.3486 -2106.1133 c1046.5938 -2118.2852 1047.6631 -2131.0859 1048.7388 -2143.8418 c1049.1914 -2149.209 1049.8286 -2154.5674 1050.4585 -2159.9277 C1063.4116 -2159.9277 L1062.269 -2145.2686 1061.0063 -2130.3477 1058.4219 -2115.8838 c1055.9199 -2101.8818 1049.2505 -2089.2002 1044.0806 -2076.0957 c1038.9854 -2063.1787 1028.5264 -2054.707 1020.4551 -2043.877 c1003.4785 -2021.0977 979.0029 -2004.9844 965.2031 -1979.7129 c964.3413 -1978.1348 963.4985 -1976.5488 962.6201 -1974.9805 c961.877 -1973.6523 961.5693 -1973.4883 961.4536 -1973.5703 C961.4619 -1973.4375 961.4644 -1973.2373 961.4531 -1972.9355 c961.3511 -1970.1709 960.7129 -1967.373 958.8672 -1965.2432 c953.98 -1959.6045 947.2217 -1963.8682 944.3223 -1969.1035 c943.6807 -1970.2617 943.249 -1971.5801 942.7832 -1972.8164 c942.7275 -1972.9648 941.2568 -1975.8672 942.4038 -1974.4043 c940.2012 -1977.2148 940.3579 -1980.752 939.5195 -1984.1289 c937.6758 -1991.5547 938.8594 -1999.1992 939.6865 -2006.6885 c940.5703 -2014.6885 940.6396 -2022.5313 942.4834 -2030.4111 cf1136.3096 -2081.5029 m1139.6919 -2098.502 1142.3687 -2116.043 1147.3335 -2132.6563 c1150.0171 -2141.6367 1151.3271 -2150.7324 1151.9536 -2159.9277 C1165.1313 -2159.9277 L1164.8379 -2156.2607 1164.4404 -2152.6191 1163.9277 -2149.0215 c1161.9541 -2135.1641 1157.8237 -2121.875 1155.0093 -2108.1455 c1151.7832 -2092.4082 1148.4678 -2076.6904 1145.542 -2060.8936 c1142.5723 -2044.8604 1140.1006 -2028.7432 1138.5835 -2012.5039 c1137.0903 -1996.5244 1137.7842 -1980.9111 1139.6455 -1964.9893 c1141.437 -1949.6641 1145.5317 -1934.7813 1147.4814 -1919.4248 c1149.3652 -1904.5898 1151.4028 -1889.6367 1155.5176 -1875.2275 c1159.749 -1860.4131 1165.2866 -1845.5869 1171.9521 -1831.707 c1178.5605 -1817.9482 1186.1523 -1803.6396 1195.5962 -1791.5957 c1199.9443 -1786.0508 1205.0674 -1781.127 1210.0391 -1776.1533 c1216.002 -1770.1865 1221.3945 -1763.8643 1226.9482 -1757.5371 c1232.4517 -1751.2676 1239.5977 -1747.2178 1245.5962 -1741.5957 c1248.6758 -1738.71 1252.3633 -1736.7939 1256.105 -1734.9502 C1256.0156 -1735.0859 1255.9268 -1735.2217 1255.8369 -1735.3574 c1251.5366 -1741.8711 1247.0479 -1747.9043 1243.6377 -1754.9697 c1240.5239 -1761.4199 1238.0977 -1768.166 1234.9932 -1774.6211 c1231.5674 -1781.7461 1228.4653 -1789.0215 1225.4229 -1796.3164 c1213.7549 -1824.2891 1204.5186 -1853.0449 1193.8442 -1881.3965 c1188.7632 -1894.8926 1184.502 -1908.625 1180.6538 -1922.5195 c1177.0649 -1935.4775 1174.6182 -1949.5488 1174.5 -1963 c1174.4316 -1970.8145 1173.1353 -1978.5986 1173.2334 -1986.4785 c1173.3398 -1994.9863 1174.1611 -2003.4785 1175.2339 -2011.9131 c1177.2896 -2028.0781 1180.9243 -2043.9258 1183.646 -2059.9727 c1186.2505 -2075.3271 1188.106 -2090.8066 1191.9512 -2105.9238 c1195.3457 -2119.2695 1201.9551 -2131.1758 1204.7324 -2144.7285 c1205.7793 -2149.8389 1206.8994 -2154.8857 1207.9517 -2159.9277 C1221.3936 -2159.9277 L1218.916 -2147.4316 1216.7065 -2134.4229 1211.7852 -2122.665 c1206.1563 -2109.2158 1202.6104 -2095.8555 1200.1519 -2081.4619 c1197.5376 -2066.1572 1195.1055 -2050.874 1192.1899 -2035.6201 c1189.085 -2019.375 1186.6177 -2003.0371 1186.2334 -1986.4785 c1185.5767 -1958.1582 1190.8862 -1929.6631 1199.8872 -1902.8857 c1205.0713 -1887.4629 1211.2861 -1872.4102 1216.7681 -1857.0938 c1219.3555 -1849.8643 1221.0801 -1842.2109 1223.9165 -1835.1016 c1227.0249 -1827.3105 1230.0391 -1819.4824 1233.1309 -1811.6836 c1238.9751 -1796.9434 1245.9399 -1782.7305 1251.9565 -1768.083 c1254.8135 -1761.127 1258.1846 -1754.376 1262.6123 -1748.2803 c1267.6055 -1741.4082 1271.6958 -1733.7559 1277.5962 -1727.5957 c1283.3926 -1721.5449 1274.2124 -1712.3398 1268.4038 -1718.4043 c1267.562 -1719.2832 1266.7627 -1720.1934 1265.9805 -1721.1172 C1264.2451 -1718.6309 1261.0474 -1717.2822 1257.7192 -1719.3877 c1252.5063 -1722.6846 1246.6743 -1724.7988 1241.5273 -1728.2197 c1235.4233 -1732.2764 1229.5361 -1737.4268 1223.9946 -1742.2305 c1218.5181 -1746.9775 1214.2627 -1752.7598 1209.4131 -1758.0986 c1204.4258 -1763.5889 1199.0269 -1768.6924 1193.8647 -1774.0156 c1183.8823 -1784.3086 1176.5625 -1796.2471 1169.502 -1808.6387 c1162.2939 -1821.2871 1155.8564 -1834.3896 1150.9902 -1848.1387 c1146.1992 -1861.6738 1141.3623 -1875.1504 1139.0171 -1889.375 c1136.5547 -1904.3105 1134.9043 -1919.4004 1132.2637 -1934.3037 c1130.96 -1941.6611 1128.7803 -1948.7305 1127.7803 -1956.1377 c1126.7178 -1964.0088 1125.8047 -1971.8936 1125.1846 -1979.8135 c1123.917 -1995.9902 1125.27 -2011.9229 1127.2822 -2027.9854 c1129.5313 -2045.9453 1132.7788 -2063.7568 1136.3096 -2081.5029 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF