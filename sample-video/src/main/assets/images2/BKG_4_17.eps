%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 4.eps)%%CreationDate: 04.10.18 13:22%%Canvassize: 16383%%BoundingBox: 16 -2149 3841 -32%%HiResBoundingBox: 16.187 -2149 3841 -32.6367%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1655 639 0.25 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5246 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD09FF36FD7EFF5A8584FD7CFF60AFFF85FD7BFF5A85FFFF5AAFFD%2CFFAFAFA8FD27FFA8FD22FF60AFFFFFFFAF84FD2CFF6060AF848BAFAF84%85AFFD1EFFAF8461608584FFAFFD1CFFA9605AAFFFFFA860FD2CFF8484A8%FF5A60848536FD1BFF84845A8560A9A885FD0560FD1DFF60A9FFFF6036FD%2DFF84603660606084FD1BFF608BA9FD07FF84AFFF8B60FD07FF60AFFFAF%AFAFFD0EFF8584FFFFFF5AAFFD2DFF853585AF6084FD1BFFAFFD0EFFA95A%FD05FF5A6084AF356036AFFD0DFF60FD04FFAF84FD2DFFAF3C846184FD2C%FFAF60FFFFFF60AFFF6060FFFFFF60FD0CFF5AAFFD04FFAF60FD2EFFA860%60FD2EFF8460FF8484FFFF84AFFFFFFF8484FD0AFF8485FFFF84FFFFFF84%AFFD2EFFAFFD30FF856085FD09FF60AFFD05FF84FFFF84366085FF84A9FF%366060FD5FFFA836A8FD09FF8460FD05FF60FFFFAF846084FF60FFFF8584%FD60FF60AFFD0BFF8485FD04FF60FD04FF60FFA885FFFF8485FD5EFFA860%A8FD0DFF5AAFFFFFA885FFFFFF8485FFAF84FFFFFF60FD5DFF8460A9FD0F%FF5AFFFF8584FFFFAF60A8FF8485FFFFFF84A8FD5BFFA9A9AFFD10FF8484%FF5AFFFFFFAF84FFFFAF84FFFFFF84AFFD70FFA985FFFFFF60FFFFFF84A9%FFFFFFAF60FD70FF8584FFFF8485AFFFFF8BA9FFFFFFAF85FD70FF60FFFF%FF603660FFFF60AFA960A8FF60FD6FFFA884FFFFFF84AF84FFFF8BA9FF36%858485AFFD6EFF8584FD04FF60AFFFFF60AFFF84A88560FD6FFF5AFD05FF%85FFFFFF85AFFF8585FD70FF84AFFD04FF8584FFFFFF60FFFFFF5AFD6FFF%A960FD05FF60FD04FF85FFFFFF85A9FD6EFF8584FD04FF8485FFFFFFAF60%FFFFFF8484FD6EFF60FD05FF60FD04FFA8AFFD04FF60FD61FFA860FD0AFF%84AFFD05FF36845A8584605AAFA8FFA860A8FD5EFFAF60845A85FD08FFA9%60A9FD06FFAFFFAFAF60858485848B60FD5DFFA88560AFFFFF60FD08FF85%84FD0BFF84A8FFFFFFAFFD5CFFAF6084A8FD04FF8584FD07FF5AFFA86084%FD08FF60FD60FF855AAFFD07FF85FD06FF6085848560AFFD07FFA884FD60%FF84845A84608460FFA9845A85FD05FF855AAFFF60A8FD08FF84FD65FF60%AFFFFF366036FD08FF8584FD08FFAFFD65FF6085FFFFFFAF5AAFFD07FFAF%5AFD6EFF608BFD05FF85AFFD07FF60AFFD0BFFA8FD61FF5A85FD06FFA860%FD06FF8484FD0CFF85A9FD5FFF5AAFFD04FF84AF85FF60AFFD04FFAF61FD%0DFF5A60AFFD5DFF8460848436FFFF6036AF846035FD04FF84A8FD0AFF84%FFFF8584FD61FF6085FFAFFF8584FFFF85A9FFFFAF60FD0AFF8460608536%8584AFFD5DFF845AAFFFFF5AFFFF6084FFFFFFAFFF84A9FD0BFF60856014%366085FD5BFFAF6084FFFFFFAF85FFFFFF85AFFD04FF85AFFD0BFF855A60%36365AFD5CFFAF368584AFFFAF5AFFA8858484FFFFFFAF60FF846084FD08%FFAF8584FF84AFFD5EFF85856060AF85FFAF36853685FFFF5A6084AF5AFD%08FFAFFD66FF8484AF84FFFFAF5AA960FFFFFFA8FF6085FD6EFF8584FFAF%85FFFFFF8584FD05FF8485FD6EFF8584FFFFFF84FD04FF6084FFFFFF8484%FD6FFF5A8584AFA885FFFFAFFFAF60FFFFFF60AFFD70FFA8A9846036845A%605A8536AFFF8560FD74FFAF8BFD08FF60FD75FFAF60FD07FF84AFFD75FF%AF85FD06FFAF84FD77FF60FD06FF8584FF84FD75FF85FD06FF36858460AF%FD10FFAFAFA9FD61FF60AFFD04FFA885AFFF5AFD0DFFAFAFFFAF858460FD%61FFAF84FD07FF84AFFD0CFF855A848484A8FF6085FD60FFA885FD06FFA8%60FD0DFF84AFFF8536AFAF613685FD67FF8B85FD0DFFA93560A960846084%FF36FD21FF8485FD44FF5AFD0DFF8584AF846084FF848584AFFD21FF85AF%FD43FF8485FD0CFFA95AFFAFAF368484605A6084FD21FF84FD44FF60A9FD%0DFF8B846060FF848560AFFF85A9FD20FF85FD43FFAF84FD07FFAFAF8485%60FD04FF60FFFF6036FF36856084FD1CFFAFFFA9FF84AFA9FFFFFF84FD3D%FFA86084845A85848560855A84A8FD04FFA985AF8536618485A8AFFD1AFF%AFAF60856085608536856085843C84FFAFFD3FFFAFFD04FFAFA9FD06FF84%84A985A885A8FD1CFFAF84FFAFFFFFFF6084FF603685A88536AFFD0AFFA8%605A85A8FFA8FD33FF84A9FD09FF84AFFD26FF608B84FF8485AFFF60FD06%FFAF60FFFF85A9FF6036363CAFFD32FFAF85FD09FF8584FD26FFAF36AF84%FFFF60A88560FD05FFA8365AA984FFA93C36608460A9FD31FF84AFFD05FF%A9AFA8FFA985A885A9FD23FF84608436A9AF84856085FD06FF8560363C36%AF60FFFFFF608BFD31FF85A9FD04FFA8605A60366035363685FD22FFA8AF%8460A9FF3684FF36A8FD07FFA83613AFA96084FFFF8484FD31FF60AFFD05%FFAF85848B603C84FD26FFAF368584AF84AF84FD09FFA8AFFFFF608585AF%60FD32FFAF60FD0AFF84A9FD26FFA9FFA860848584FD0AFFA984FFFFFF60%605AAFFD33FFAF6084FD09FF84FD37FFA9AFFD04FFAFFD37FFAFFD7FFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Layer 5) Ln0 Au*u1 D0 O0.788052 0.235294 0.156313 0.000031 0 0.6 0.74902 Xa0 J 0 j 1 w 10 M []0 d0 XR123.5679 -869.2788 m131.1587 -870.6567 138.3789 -872.5337 146.1318 -873.1846 c152.4204 -873.7129 158.9146 -873.0342 165.1396 -873.9429 c172.3159 -874.9902 179.5493 -875.5469 186.7778 -876.1016 C184.0845 -898.146 181.1099 -920.1543 177.5786 -942.083 c175.3384 -955.9961 173.626 -969.9482 171.1563 -983.8394 c168.7393 -997.4312 166.7632 -1011.0928 166.6743 -1024.9229 c166.6201 -1033.3086 179.6206 -1033.3032 179.6743 -1024.9229 c179.7715 -1009.8477 182.2847 -995.1387 184.9346 -980.3442 c187.7021 -964.8926 189.5791 -949.314 191.9595 -933.8018 c194.8477 -914.9854 197.3394 -896.1113 199.6431 -877.2139 C202.9023 -877.5884 206.3418 -878.5093 209.582 -878.5098 c217.3345 -878.5107 225.083 -878.5322 232.8262 -878.9482 c247.8452 -879.7549 262.7813 -882.895 277.6279 -885.186 c292.2075 -887.4355 306.6265 -890.0127 321.4038 -890.5005 c328.0107 -890.7188 334.791 -890.1426 341.3491 -891.043 c347.5088 -891.8892 353.7539 -892.4321 359.877 -893.3301 c364.7095 -894.0386 371.2163 -895.3657 375.4839 -892.1855 c379.3662 -889.293 378.7627 -884.2339 376.249 -881.5313 C376.2075 -880.5151 376.1201 -879.5215 376 -878.5435 C376 -877 L376 -875.4863 375.626 -874.2329 375.0142 -873.2285 C373.0264 -865.1699 369.3516 -857.9961 368.7549 -849.6992 c367.835 -836.915 364.1338 -823.9653 360.7432 -811.6533 c357.7163 -800.6616 353.9224 -789.8628 350.5688 -778.9697 c348.873 -773.4609 347.644 -767.7871 345.5293 -762.4282 c343.4229 -757.0894 341.4048 -751.708 339.1953 -746.4102 c330.1167 -724.6426 321.6035 -702.4482 315.665 -679.5771 c312.7568 -668.3765 309.3364 -657.71 304.5171 -647.1836 c301.8545 -641.3687 299.1118 -635.4785 297.4697 -629.3628 C297.792 -629.6553 298.1206 -629.9351 298.4326 -630.2471 c301.0146 -632.8291 303.1753 -634.7949 306.4546 -636.4399 c310.0649 -638.251 313.6465 -640.1138 317.1855 -642.0605 c329.8135 -649.0068 339.9312 -659.1797 352.6406 -666.019 c363.2388 -671.7227 375.292 -676.0576 387.3062 -677.4131 c391.7524 -677.915 398.4971 -678.3652 401.8306 -674.6479 c405.9458 -670.0586 405.2778 -664.6021 404.1958 -658.96 c402.9995 -652.7231 401.7319 -646.561 400.6221 -640.3062 c399.1973 -632.2788 396.8604 -624.5352 395.292 -616.543 c392.3896 -601.7529 391.3003 -586.2915 389.6943 -571.3091 c388.8848 -563.7583 388.291 -556.189 387.3237 -548.6553 c386.2891 -540.5923 384.3037 -532.8394 382.7339 -524.8931 c379.9243 -510.6709 373.9878 -497.1577 369.2915 -483.502 c365.8647 -473.5376 364.0576 -462.8916 360.8521 -452.8066 c357.5439 -442.4014 353.6602 -432.1812 349.4087 -422.1274 c343.6494 -408.5078 337.5439 -395.4463 334.5195 -381.3335 C338.5273 -383.6709 342.4644 -386.1577 346.5537 -388.3208 c358.9702 -394.8882 373.772 -405.314 388.4946 -400.1221 c391.063 -399.2168 393.5264 -396.8452 393.2666 -393.8545 c392.8003 -388.4819 390.4131 -384.396 387.4775 -379.9824 c384.6172 -375.6831 382.8511 -371.0557 381.6177 -366.0571 c381.0308 -363.6772 381.335 -361.2681 380.2432 -359.0205 c378.8564 -356.1646 377.646 -353.2759 376.5591 -350.2935 c374.5234 -344.709 373.0693 -338.917 371.6187 -333.1602 c370.29 -327.8882 366.9316 -322.9663 364.3755 -318.1978 c361.7285 -313.2593 359.1714 -308.2822 356.9033 -303.1563 c352.4131 -293.0068 351.3101 -281.8516 348.166 -271.2876 c346.6113 -266.0654 343.4937 -261.5313 341.457 -256.5049 c339.5908 -251.9004 337.9048 -247.1543 335.3862 -242.8555 c332.2432 -237.4893 328.9771 -231.5928 329.3687 -225.1191 C330.4468 -225.4634 331.686 -226.1636 332.479 -226.4873 c333.7891 -227.0225 334.9653 -227.4531 336.2676 -227.73 C336.0708 -227.7539 336.4849 -227.957 337.5488 -228.3506 C339.0088 -229.0088 340.499 -229.6064 341.9785 -230.2192 c346.7744 -232.208 351.4795 -233.9946 355.9043 -236.7495 c360.6807 -239.7231 365.9111 -241.9932 371.5044 -239.9282 c374.1519 -238.9512 376.4165 -236.7119 376.2764 -233.6606 c375.8813 -225.0625 371.5776 -218.0073 368.7627 -210.0879 c365.835 -201.8521 362.3921 -193.9004 360.1157 -185.4492 c358.2061 -178.3589 356.5376 -169.498 352.54 -163.2856 c347.6675 -155.7124 344.979 -146.8364 342.9575 -138.1445 c341.0103 -129.77 339.27 -121.3491 337.209 -113.0005 c335.312 -105.3149 328.9893 -99.5327 327.0713 -91.8696 c324.8828 -83.1226 322.3325 -74.6182 318.7529 -66.3306 c315.3994 -58.5669 313.3013 -50.3965 313.1694 -41.9131 c313.104 -37.7188 309.811 -35.6226 306.5562 -35.6279 C304.4043 -32.5386 300.1758 -31.1484 297.2188 -34.8896 c291.6289 -41.9629 286.6392 -49.4404 281.3169 -56.708 c278.7827 -60.1689 275.9463 -63.3813 272.9468 -66.4429 c269.6216 -69.8369 267.042 -74.353 264.0405 -78.0645 c251.8384 -93.1523 238.2725 -107.0874 225.6494 -121.7993 c219.6587 -128.7817 214.1729 -136.1802 208.2163 -143.1919 c202.3892 -150.0518 195.4258 -155.1836 189.0874 -161.4365 c183.3037 -167.1426 179.6709 -174.437 173.7114 -179.9585 c167.8906 -185.3506 162.3843 -191.4199 161.8198 -199.6797 c161.6313 -202.4355 163.9292 -205.3511 166.5918 -205.9473 c177.9561 -208.4932 189.5308 -206.5098 201.0078 -206.1929 c207.5801 -206.0112 214.894 -204.6294 221.7998 -204.8218 C218.5527 -209.6045 213.9775 -213.7627 210.3687 -217.9507 c203.3076 -226.1445 197.8237 -235.958 191.8335 -244.9429 c185.9775 -253.7275 180.1621 -262.5332 174.8823 -271.6807 c169.2554 -281.4292 165.3755 -291.8672 160.2856 -301.8525 c155.4971 -311.2466 149.3779 -319.9365 143.3965 -328.5923 c136.7456 -338.2178 130.5688 -347.9849 122.9727 -356.9043 c116.2251 -364.8271 108.6621 -372.6938 103.1382 -381.5273 c102.1426 -383.1201 101.291 -384.8052 100.4395 -386.479 C100.2305 -386.5825 99.8608 -386.8032 99.3135 -387.1533 C98.0698 -387.7998 96.9141 -388.5488 95.7686 -389.3525 c91.5859 -392.2891 89.4697 -396.0918 89.0044 -401.1362 c88.7222 -404.1948 91.2432 -406.4097 93.7764 -407.4043 c99.394 -409.6089 105.8291 -407.4067 111.354 -405.9277 c118.1953 -404.0967 125.0913 -402.3989 131.9619 -400.4258 c139.4395 -398.2783 146.6851 -395.5249 154.0444 -393.0127 c157.6772 -391.7725 161.2954 -390.4561 164.811 -388.9268 C160.8159 -395.9521 157.7578 -403.5127 155.4927 -411.2671 c151.9771 -423.3018 145.4131 -434.2954 140.2031 -445.5996 c135.4819 -455.8418 130.5469 -466.0806 125.0122 -475.8994 c121.811 -481.5781 118.1763 -487.0117 114.7095 -492.5283 c111.1416 -498.2051 108.6138 -504.335 105.8125 -510.4165 c94.8545 -534.2051 84.4077 -558.1128 74.1152 -582.1909 c69.5181 -592.9458 66.0103 -603.9126 59.9873 -613.96 c58.7769 -615.9795 57.5913 -618.0117 56.4668 -620.0811 c55.2378 -622.3423 52.6743 -624.2266 51.0684 -626.2734 c47.5181 -630.7988 45.5894 -635.665 45.3149 -641.4277 c45.1548 -644.7974 48.397 -648.1553 51.8149 -647.9277 c58.8945 -647.4561 64.9121 -643.5947 71.0107 -640.313 c78.0664 -636.5171 84.6216 -632.1748 92.1426 -629.231 c96.0752 -627.6919 98.3975 -625.7568 101.645 -623.0776 c103.3555 -621.6665 105.1953 -620.4048 106.9409 -619.0366 c107.7661 -618.3901 110.3545 -615.7661 110.7061 -615.6323 c112.0884 -615.1055 113.3525 -614.4346 114.5454 -613.6772 C112.8721 -618.2373 110.9287 -622.7295 109.4272 -627.2847 c107.6616 -632.6406 107.0571 -638.4302 105.5786 -643.8916 c104.0327 -649.6006 102.0176 -655.1943 99.5698 -660.5762 c97.1587 -665.877 94.3267 -670.6436 92.4136 -676.1689 c90.502 -681.6919 88.4507 -687.1665 86.3892 -692.6348 c82.1221 -703.9541 77.7549 -715.2334 73.8389 -726.6812 c71.7227 -732.8677 69.8755 -738.8589 66.9438 -744.7222 c64.002 -750.6064 61.0596 -756.4902 58.1177 -762.3745 c55.1758 -768.2583 52.2339 -774.1426 49.2915 -780.0264 c46.4346 -785.7407 44.0078 -792.3057 40.2183 -797.4468 c27.9751 -814.0571 16.6963 -836.394 16.189 -857.4468 c16.1133 -860.5972 18.292 -862.6084 20.9609 -863.7148 c26.0298 -865.8149 31.9229 -864.9634 37.2183 -864.4355 c44.1201 -863.748 51.0488 -863.916 57.9761 -864.0488 c73.0117 -864.3379 87.7261 -867.1968 102.729 -867.6899 c109.6987 -867.9189 116.689 -868.0303 123.5679 -869.2788 cf0 D76.3228 -852.1104 m62.4121 -850.6001 48.1143 -850.4023 34.1924 -851.731 c32.6831 -851.875 31.1484 -852.0352 29.6284 -852.0474 C30.6211 -844.5308 33.1704 -836.4253 36.3501 -830.0684 c38.9395 -824.8916 41.5942 -819.7549 44.4854 -814.7388 c47.5933 -809.3472 51.5625 -804.4966 54.3389 -798.9443 c60.2227 -787.1763 66.1064 -775.4082 71.9907 -763.6401 c74.9326 -757.7559 77.8745 -751.8721 80.8169 -745.9878 c83.5752 -740.4712 84.9805 -734.2129 86.9761 -728.3784 c90.8818 -716.9614 95.2935 -705.7236 99.5488 -694.4346 c101.6064 -688.9766 103.6084 -683.498 105.5166 -677.9858 c107.3779 -672.6104 110.6699 -667.6724 112.8716 -662.3921 c115.1514 -656.9233 117.0317 -651.3447 118.5801 -645.6265 c120.0405 -640.2324 120.6733 -634.6523 122.4229 -629.3457 c125.9058 -618.7783 130.8286 -609.1064 131.1309 -597.7383 c131.2646 -592.7041 125.54 -589.7813 121.3501 -592.126 c116.0288 -595.103 112.2983 -600.1514 106.9814 -603.1426 c103.5342 -605.082 100.9175 -607.4214 97.7402 -609.8325 c96.418 -610.8364 95.0835 -611.8232 93.7769 -612.8477 c92.9878 -613.4658 90.2471 -616.1235 90.04 -616.1948 c82.9092 -618.6626 76.0693 -622.1582 69.5801 -625.9766 c68.8438 -626.4097 68.0688 -626.9023 67.2695 -627.4229 C69.6694 -624.0825 71.4976 -620.0581 73.5371 -616.6362 c79.2031 -607.1318 82.1963 -596.0879 86.5542 -585.916 c96.7002 -562.2334 107.019 -538.7266 117.8008 -515.3203 c120.3555 -509.7749 122.7041 -504.2798 125.9346 -499.0898 c129.3813 -493.5522 132.9653 -488.106 136.2373 -482.4604 c139.082 -477.5522 141.0518 -472.1963 143.9995 -467.377 c146.9419 -462.5659 149.0981 -457.2813 151.4282 -452.1606 c153.7539 -447.0503 156.6958 -442.3032 158.9614 -437.1689 c161.6216 -431.1396 163.7676 -424.9131 166.6514 -418.98 c169.0425 -414.0596 169.9077 -408.2773 172.1123 -403.2031 c174.5391 -397.6172 177.624 -392.3403 181.2144 -387.4268 c183.771 -383.9272 181.9985 -380.5142 179.0151 -378.9458 C180.5596 -373.7368 175.3384 -367.3325 169.8936 -371.252 c163.9751 -375.5117 157.4375 -378.1108 150.5884 -380.4771 c143.7593 -382.8359 137.0098 -385.3984 130.0762 -387.4351 c124.1743 -389.1689 118.0229 -391.5869 111.9453 -392.5151 C113.7354 -389.0654 115.6675 -385.7441 118.2524 -382.7842 c125.3535 -374.6528 132.3354 -366.2114 139.0635 -357.7524 c145.8354 -349.2378 151.522 -339.6787 157.689 -330.7036 c163.6079 -322.0889 169.291 -313.3105 173.7549 -303.8394 c178.3325 -294.1279 182.439 -284.4697 187.8931 -275.1733 c193.2671 -266.0122 199.2505 -257.2168 205.1392 -248.3838 c210.6265 -240.1528 215.6714 -231.4238 222.29 -224.0444 c228.3911 -217.2412 235.0791 -210.4053 237.6943 -201.4077 c238.6953 -197.9648 236.5156 -194.395 233.1548 -193.4121 c223.5195 -190.5928 213.105 -192.8247 203.2905 -193.1665 c194.8892 -193.459 185.874 -194.8799 177.272 -194.375 C179.9814 -190.9795 184.2671 -187.9194 186.6743 -185.6445 c189.6484 -182.8345 191.6631 -178.7729 194.0845 -175.4795 c196.5977 -172.061 199.6812 -168.8931 203.1538 -166.4575 c217.3994 -156.4648 226.9136 -139.8022 238.3501 -126.981 c250.4697 -113.3936 262.9189 -100.0103 274.3774 -85.8418 c279.7881 -79.1509 285.4224 -72.5879 290.6528 -65.7646 c294.2783 -61.0352 297.6128 -56.0952 301.0732 -51.2471 C303.3994 -64.6855 309.6411 -76.811 313.2197 -90.1855 c314.2671 -94.0996 315.2104 -97.8394 316.7944 -101.5776 c318.3804 -105.3198 320.7876 -108.7124 322.7671 -112.249 c326.9849 -119.7847 327.7783 -129.8853 329.6558 -138.2388 c331.5078 -146.48 333.8887 -154.2729 337.2241 -162.0449 c338.7705 -165.6484 341.3477 -168.8999 342.5742 -172.5898 c343.8433 -176.4092 345.0645 -180.2432 346.2148 -184.1001 c348.6895 -192.3979 351.2827 -200.3774 354.4063 -208.4619 c356.0703 -212.7681 357.5356 -217.1021 359.3872 -221.3379 c359.937 -222.5957 360.5059 -223.8594 361.0386 -225.1367 C359.104 -223.9258 357.2471 -222.5933 355.8867 -221.98 c350.8726 -219.7188 345.2393 -216.7114 339.9507 -215.2568 c337.7817 -214.6602 334.1826 -212.9775 330.8579 -212.249 c328.8857 -211.8169 326.8848 -211.8325 324.9497 -212.416 c319.5176 -214.0552 329.1768 -211.3862 323.5757 -212.9268 c322.2495 -213.2915 321.0962 -214 320.064 -214.8765 c314.479 -219.6172 316.7832 -229.6406 317.668 -235.9404 c318.3594 -240.8647 321.6104 -245.3032 324.1611 -249.4165 c327.0415 -254.0615 328.6436 -259.4756 330.79 -264.4746 c332.9771 -269.5684 335.5703 -273.9614 336.8799 -279.4243 c338.291 -285.3071 339.4409 -291.2544 341.0122 -297.0908 c344.209 -308.9658 350.5493 -319.8516 356.2905 -330.6245 c359.0649 -335.8311 360.2041 -341.2515 361.8218 -346.896 c362.6509 -349.7891 363.6177 -352.6362 364.6479 -355.4629 c365.4258 -357.5967 368.1338 -362.375 368.1802 -363.5625 c368.3994 -369.1973 370.4072 -374.8647 372.6704 -379.9653 c373.6973 -382.2798 374.874 -384.4194 376.2524 -386.5439 c376.6143 -387.1016 377.0513 -387.6963 377.5015 -388.3154 C368.8882 -387.291 360.0171 -380.8389 353.1152 -377.0957 c347.4805 -374.04 342.0195 -370.7197 336.437 -367.5718 c335.3174 -366.9409 334.0044 -366.3711 332.626 -365.7974 C332.6167 -365.4399 332.5908 -365.0884 332.5869 -364.7285 c332.5186 -358.8447 326.0898 -357.0947 322.2998 -359.4766 C322.1953 -359.3252 322.0835 -359.1787 321.9902 -359.0205 c317.7373 -351.8062 306.498 -358.3438 310.7656 -365.582 c313.0576 -369.4707 316.4443 -371.9331 320.1753 -373.9604 C323.2524 -401.1328 337.6948 -425.0635 346.5127 -450.8013 c351.5088 -465.3853 354.3916 -480.562 359.6104 -495.0371 c364.6372 -508.981 368.8291 -522.7559 372.2383 -537.168 c375.8877 -552.5972 376.2969 -568.7939 378.3418 -584.4858 c380.291 -599.4429 381.0322 -614.478 384.8335 -629.1416 c386.7139 -636.3955 387.7598 -643.8027 389.6484 -651.0439 c390.3813 -653.8521 390.5366 -656.8135 391.0972 -659.6719 c391.3633 -661.0313 391.6543 -662.3848 391.915 -663.7446 c391.9951 -664.1152 392.0459 -664.4897 392.0811 -664.8657 C388.0415 -665.2612 383.1719 -663.6191 379.5728 -662.6738 c373.6313 -661.1138 367.9468 -659.0942 362.4121 -656.4292 c348.2793 -649.624 337.3604 -638.4937 323.7466 -630.8354 c320.7261 -629.1362 317.6372 -627.5586 314.5488 -625.9878 c310.7305 -624.0464 308.2095 -621.6392 305.1973 -618.627 c302.9028 -616.3325 300.1318 -614.771 297.813 -612.4575 c296.0376 -610.6855 293.9541 -608.9014 291.4072 -608.4609 c286.9111 -607.6826 283.6982 -610.2744 283.1792 -614.7285 c281.8892 -625.8037 285.6152 -636.2295 289.9063 -646.248 c294.6445 -657.3105 299.0903 -667.7891 302.1997 -679.4736 c305.2671 -691.001 308.6992 -702.0845 312.7705 -713.291 c316.9385 -724.7642 320.4771 -736.2695 325.562 -747.3877 c330.0249 -757.1455 333.6597 -767.271 336.5972 -777.5635 c339.8604 -788.9971 343.8706 -800.2031 347.229 -811.6089 c350.6753 -823.3135 354.1123 -835.6074 355.5776 -847.7383 c355.9277 -850.6406 355.4736 -853.9326 356.2266 -856.7476 c356.959 -859.4834 357.8423 -862.1479 358.813 -864.8076 c360.6094 -869.728 362.4775 -874.5181 363 -879.7104 C363 -880.7651 L361.6187 -880.5825 360.2397 -880.356 358.8638 -880.1729 c351.874 -879.2417 344.6616 -878.2046 337.6162 -877.6938 c331.1621 -877.2256 324.5923 -877.6396 318.1177 -877.3804 c310.4355 -877.0728 302.8682 -876.1318 295.2871 -874.8906 c280.4351 -872.4595 265.5454 -870.2544 250.686 -867.8667 c243.6201 -866.731 236.4883 -866.1006 229.3423 -865.7754 c221.6377 -865.4248 213.8228 -866.0137 206.1807 -864.9907 c204.5156 -864.7681 202.8486 -864.5718 201.1802 -864.3887 C202.2852 -855.001 203.3569 -845.6099 204.4111 -836.2178 c207.939 -804.7817 211.6006 -773.5273 216.4614 -742.2578 c218.7114 -727.7822 222.8066 -713.5107 223.3438 -698.8052 c223.5986 -691.8345 223.3638 -684.811 223.3638 -677.8354 c223.3638 -675.2935 224.644 -672.7969 225.2524 -670.3574 c226.2441 -666.3809 225.7837 -662.0005 225.731 -657.9497 c225.5508 -644.1621 224.9409 -630.3862 225.3384 -616.5962 c225.541 -609.5747 226.0596 -602.5391 227.0332 -595.5811 c227.9678 -588.8994 228.1987 -582.584 228.2651 -575.834 c228.3945 -562.6636 229.7378 -549.8638 231.3027 -536.8135 c232.9189 -523.3379 233.0269 -509.7119 233.0664 -496.1582 c233.085 -489.8389 233.0889 -483.7188 234.1885 -477.4775 c235.269 -471.3462 236.8862 -465.3105 238.3545 -459.2646 c239.895 -452.9243 241.0757 -446.6255 241.4385 -440.0986 c241.8677 -432.3813 241.1138 -424.5977 242.2046 -416.916 c242.5859 -414.2319 244.1489 -411.6504 245.1704 -409.1553 c246.3672 -406.2319 247.2495 -403.1948 248.0103 -400.1338 c249.498 -394.144 250.0005 -387.8716 250.0625 -381.7188 c250.2007 -368.041 252.8511 -355.1514 257.1123 -342.1846 c259.7368 -334.1973 247.1812 -330.8022 244.5767 -338.7285 c239.9761 -352.7271 237.1655 -366.9502 237.0625 -381.7188 c237.0156 -388.4238 236.1572 -394.8228 234.2188 -401.2461 c233.3047 -404.2725 232.0513 -407.1548 230.6685 -409.9912 c228.8569 -413.708 228.9224 -418.7876 228.6968 -422.853 c228.2676 -430.5708 229.0215 -438.354 227.9307 -446.0356 c226.9097 -453.2251 224.666 -460.3022 223.0352 -467.3691 c219.6987 -481.8242 220.2104 -496.0801 219.917 -510.8062 c219.626 -525.4087 217.4448 -539.6074 216.165 -554.1084 c215.5278 -561.3286 215.3594 -568.5894 215.2651 -575.834 c215.1597 -583.9292 214.4697 -591.5747 213.5239 -599.6104 c211.6934 -615.1685 212.1313 -630.9004 212.4985 -646.5264 c212.6587 -653.3262 214.0444 -661.5776 212.394 -668.1963 c211.7124 -670.9292 210.6025 -673.4351 210.4468 -676.3008 c210.2295 -680.3115 210.3638 -684.355 210.3638 -688.3721 c210.3638 -701.1548 209.1094 -713.0723 206.1245 -725.5259 c202.7275 -739.6973 201.4097 -754.7446 199.3003 -769.168 c195.188 -797.2915 192.6572 -825.5938 189.4136 -853.8242 c189.0537 -856.958 188.6875 -860.0913 188.3188 -863.2241 C187.1138 -863.1299 185.9087 -863.0352 184.7036 -862.9424 c177.2031 -862.3643 169.4165 -860.6572 161.9326 -860.6553 c155.5254 -860.6538 149.1396 -860.5015 142.7598 -859.8784 c135.1016 -859.1304 127.8066 -856.7231 120.1807 -855.7095 c113.2598 -854.79 106.2192 -854.8252 99.2539 -854.5688 c91.5273 -854.2842 83.9937 -852.9429 76.3228 -852.1104 cf*U*u1 D279.4561 -1257.5 m289.1265 -1255.3936 296.0142 -1250.0332 296.8027 -1239.7764 c297.2168 -1234.3926 294.6831 -1228.6152 291.3828 -1224.5176 c289.7017 -1222.4307 287.7231 -1220.7744 285.4634 -1219.3359 c285.1758 -1219.1523 281.7051 -1216.9717 283.4893 -1218.458 c281.9023 -1217.1357 280.2148 -1216.3984 278.2666 -1215.7568 c272.5107 -1213.8623 266.2861 -1217.1973 260.5522 -1217.4512 c254.084 -1217.7373 248.0762 -1218.1455 241.834 -1220.1113 c236.0991 -1221.916 230.7827 -1224.9297 225.3745 -1227.5586 C225.7153 -1226.1914 225.6289 -1224.667 224.9028 -1223.0986 c221.2725 -1215.2617 224.041 -1207.4756 226.0132 -1199.5869 c228.3838 -1190.1035 230.2266 -1180.2598 233.2686 -1170.9727 c235.6392 -1163.7344 237.3247 -1154.6279 242.5649 -1148.8057 c244.8091 -1146.3125 248.7358 -1145.4043 251.7925 -1144.4092 c253.4585 -1143.8662 255.105 -1143.2949 256.7397 -1142.6953 C257.6763 -1142.9648 258.7178 -1143.041 259.853 -1142.8408 c264.2109 -1142.0742 266.7871 -1138.3848 267.0522 -1134.1455 c267.3843 -1128.8291 261.3838 -1126.5791 257.2715 -1128.5332 c249.2119 -1132.3623 240.1509 -1133.3613 233.3726 -1139.6133 c229.9404 -1142.7793 227.5747 -1147.2295 225.729 -1151.9619 C225.5371 -1142.332 224.6514 -1132.459 220.8081 -1123.5938 c217.5269 -1116.0254 209.4688 -1111.3877 203.1538 -1106.6855 c196.4214 -1101.6719 189.9517 -1112.9668 196.5923 -1117.9121 c201.9878 -1121.9307 208.083 -1125.373 210.2319 -1132.1064 c213.2954 -1141.7061 212.8608 -1152.4902 212.7764 -1162.4414 c212.6938 -1172.1729 211.1499 -1181.873 209.4219 -1191.4258 c207.936 -1199.6367 205.8247 -1208.2354 205.5088 -1216.585 c205.3833 -1219.8936 208.1597 -1222.6152 211.3306 -1222.9609 C211.8638 -1225.1602 212.6221 -1227.3818 213.6772 -1229.6592 c214.3296 -1231.0674 215.2461 -1231.9854 216.2837 -1232.502 C215.8364 -1232.8945 215.3877 -1233.3174 214.9272 -1233.8213 c214.3384 -1234.4658 213.7695 -1235.1309 213.2124 -1235.8066 C214.0264 -1232.1855 211.9985 -1227.5742 207.1543 -1227.1602 c204.8853 -1226.9658 202.7002 -1225.1631 200.7773 -1224.0791 c198.606 -1222.8555 196.3789 -1221.9307 194.2153 -1220.6455 c192.272 -1219.4912 190.2583 -1218.4678 188.3398 -1217.2705 c186.0918 -1215.8672 184.5894 -1213.8682 182.1177 -1212.7588 c175.8652 -1209.9531 169.5762 -1209.2344 163.7124 -1205.3945 c157.9258 -1201.6035 151.8501 -1198.7314 145.311 -1196.46 c135.5742 -1193.0781 124.9683 -1193.0137 114.812 -1191.7715 c104.1895 -1190.4727 99.3188 -1198.2949 98.7407 -1207.8662 c97.9751 -1220.5322 104.9497 -1231.5596 112.9771 -1240.6719 c116.9868 -1245.2246 121.1348 -1249.0283 126.8081 -1251.3281 c127.6504 -1251.6699 128.5029 -1251.9717 129.3599 -1252.2559 C128.1553 -1253.4248 127.0308 -1254.6953 126.0195 -1256.0928 c119.2739 -1265.417 117.9966 -1278.2715 124.4922 -1288.0293 c138.6689 -1309.3281 172.3818 -1302.6006 189.5835 -1289.1855 c197.8311 -1282.752 203.978 -1274.3291 209.4404 -1265.5156 C210.0796 -1266.4834 210.6943 -1267.4697 211.2505 -1268.4941 c215.2881 -1275.9297 221.8921 -1281.7207 227.3042 -1288.1162 c234.9023 -1297.0957 248.8711 -1309.4434 261.6904 -1305.0518 c269.3062 -1302.4424 272.6216 -1294.3701 271.0625 -1286.8027 c269.541 -1279.416 264.7437 -1273.1768 259.8501 -1267.6504 c257.3433 -1264.8193 254.729 -1262.0381 252.0117 -1259.3525 C252.6333 -1259.4141 253.2534 -1259.4854 253.8779 -1259.5303 c262.2583 -1260.1387 271.2832 -1259.2803 279.4561 -1257.5 cf0 D185.9648 -1275.0303 m177.7813 -1283.9023 165.7051 -1287.999 153.8857 -1288.4189 c147.9644 -1288.6299 143.5693 -1287.7559 138.6606 -1284.3809 c134.5767 -1281.5723 132.9561 -1276.9648 133.1958 -1272.2246 c133.647 -1263.2871 140.9102 -1258.3359 148.8286 -1256.1348 C160.4287 -1257.8271 172.2793 -1258.9434 183.9795 -1259.5029 c188.5693 -1259.7227 193.5225 -1259.3379 198.2949 -1258.2207 C194.6357 -1264.0693 190.8052 -1269.7832 185.9648 -1275.0303 cf204.9854 -1241.1992 m199.2456 -1246.418 189.4282 -1246.7637 182.1509 -1246.416 c176.2305 -1246.1328 170.2168 -1245.6875 164.2285 -1245.0723 C163.3096 -1243.127 161.4399 -1241.6768 158.6104 -1241.7236 c155.064 -1241.7832 151.4414 -1242.1719 147.9014 -1242.9316 C147.8755 -1242.9277 147.8486 -1242.9238 147.8228 -1242.9199 c143.1929 -1242.168 138.5786 -1241.4473 134.0596 -1240.1602 c129.376 -1238.8262 126.5547 -1236.1816 123.2817 -1232.7002 c116.562 -1225.5508 110.1748 -1216.166 111.9209 -1205.8213 c111.9858 -1205.4375 112.1479 -1205.0869 112.2847 -1204.8223 C112.7637 -1204.792 113.5347 -1204.665 113.9565 -1204.6904 c117.2153 -1204.8848 120.4639 -1205.6719 123.7139 -1206.0137 c128.2339 -1206.4893 132.4966 -1206.4902 136.9688 -1207.5596 c143.2173 -1209.0547 149.2583 -1211.6016 154.7007 -1215.001 c159.3726 -1217.9199 163.6787 -1220.7051 169.0186 -1222.3086 c171.1357 -1222.9443 175.2231 -1223.0811 176.8647 -1224.6631 c178.5986 -1226.334 180.6128 -1227.7676 182.6519 -1229.04 c185.8457 -1231.0332 190.3662 -1234.6143 194.0107 -1235.1865 c195.4321 -1235.4102 197.4063 -1237.1357 198.6943 -1237.8135 c201.2334 -1239.1504 203.7822 -1239.8096 206.583 -1240.1006 C206.0371 -1240.375 205.5 -1240.7314 204.9854 -1241.1992 cf256.543 -1292.9297 m252.6274 -1293.127 248.5063 -1289.8398 245.5615 -1287.6768 c241.7422 -1284.8721 238.3481 -1281.2109 235.3574 -1277.5557 c231.2896 -1272.582 225.7075 -1267.874 222.4761 -1261.9336 c221.0576 -1259.3262 219.2563 -1256.9727 217.519 -1254.5742 c217.2808 -1254.2461 216.9785 -1253.8633 216.6582 -1253.458 C217.1929 -1252.5918 217.7354 -1251.7305 218.2905 -1250.8779 C229.7275 -1255.7764 238.585 -1264.5156 247.2998 -1273.2939 c249.6748 -1275.6855 263.7949 -1292.5645 256.543 -1292.9297 cf242.8628 -1245.0117 m238.9087 -1244.3955 236.5415 -1244.7969 233.9897 -1243.2148 c232.2075 -1242.1104 230.4629 -1241.0977 228.6958 -1240.2061 C229.5225 -1239.8691 230.3784 -1239.5332 231.2393 -1239.1387 c234.9185 -1237.4531 238.4814 -1235.5234 242.1616 -1233.8379 c247.5996 -1231.3477 253.4224 -1230.5 259.3374 -1230.4531 c262.436 -1230.4277 265.4351 -1230.0117 268.4648 -1229.3701 c271.9424 -1228.6328 273.6777 -1227.7998 276.689 -1229.5635 c280.8906 -1232.0254 283.7412 -1234.4131 283.8027 -1239.7764 c283.8364 -1242.71 281.1885 -1243.5 278.0522 -1244.4395 c270.3706 -1246.7441 261.8354 -1246.7393 253.8779 -1246.5303 c250.1846 -1246.4336 246.5024 -1245.5791 242.8628 -1245.0117 cf*U*u1 D112.4941 -1844.5283 m126.4946 -1844.5361 140.7822 -1845.6738 154.4937 -1842.5488 c156.0747 -1842.1885 157.6318 -1841.7754 159.1753 -1841.332 C153.561 -1849.0713 149.0547 -1857.7285 145.5361 -1866.6113 c143.0522 -1872.8809 140.5337 -1879.0459 138.3862 -1885.4521 c137.436 -1888.2871 137.4419 -1891.2666 136.8901 -1894.2021 c136.2251 -1897.7412 135.582 -1901.2646 135.3955 -1904.8672 c134.7803 -1916.7354 144.9517 -1925.8193 155.3584 -1929.292 c174.3979 -1935.6445 196.8569 -1923.0898 211.6216 -1912.0762 c222.6074 -1903.8809 233.5576 -1895.0303 243.019 -1885.0996 c244.9287 -1883.0957 246.8511 -1880.9902 248.6821 -1878.8066 C239.0918 -1898.9834 240.8857 -1921.8008 241.731 -1943.6006 c242.2153 -1956.082 242.8589 -1968.0332 245.3945 -1980.3193 c246.6348 -1986.3271 248.043 -1992.2959 249.1504 -1998.3311 c249.7793 -2001.7588 249.3857 -2005.6494 249.6528 -2009.1445 c249.9297 -2012.7695 250.4351 -2016.377 250.9595 -2019.9736 c252.9541 -2033.6514 257.3433 -2047.1396 260.8555 -2060.4902 c260.915 -2060.7168 260.9771 -2060.9443 261.0371 -2061.1709 C253.1655 -2059.8008 246.2373 -2055.3965 239.0757 -2051.9883 c210.6021 -2038.4375 179.4634 -2029.1631 147.792 -2028.1758 c141.2573 -2027.9727 134.6978 -2028.1289 128.1602 -2028.1289 c122.397 -2028.1289 117.7632 -2028.4639 112.9111 -2031.8574 c105.167 -2037.2744 102.7793 -2046.9951 107.5518 -2055.1895 c112.2568 -2063.2676 122.8999 -2067.7979 131.207 -2070.8945 c140.5366 -2074.3721 150.4312 -2076.1777 160.0566 -2078.6221 c182.5127 -2084.3262 206.9575 -2081.7139 229.9155 -2082.4609 c241.7686 -2082.8467 254.957 -2084.5352 266.6099 -2081.54 C268.46 -2088.2354 270.2827 -2094.9385 271.9497 -2101.6836 c272.6768 -2104.627 272.9946 -2108.002 274.3574 -2110.7266 c276.0566 -2114.124 277.7617 -2117.5186 279.4971 -2120.8984 c280.8809 -2123.5938 282.3145 -2126.2627 283.7803 -2128.9141 c285.2783 -2131.625 287.8086 -2134.5068 288.7861 -2137.4316 c290.0986 -2141.3604 291.5117 -2145.2861 293.3491 -2149 C308.8623 -2149 L308.8521 -2148.9883 308.8418 -2148.9766 308.8315 -2148.9648 c304.9326 -2144.7842 303.1187 -2139.291 301.3184 -2133.9766 c299.5522 -2128.7598 295.9199 -2124.0723 293.2905 -2119.2236 c289.9268 -2113.0215 286.5693 -2106.9854 284.9385 -2100.0996 c283.0298 -2092.0439 280.8457 -2084.0566 278.6274 -2076.0791 C279.1719 -2075.6914 279.7085 -2075.2832 280.2378 -2074.8555 C288.3438 -2074.3105 296.4722 -2072.8604 304.4497 -2071.6621 c307.2148 -2071.2471 309.9526 -2070.6953 312.6758 -2070.0635 c314.6528 -2069.6055 317.6729 -2067.8545 319.5405 -2067.8105 c323.3169 -2067.7227 327.1528 -2066.7432 330.7417 -2065.6406 c344.1934 -2061.5039 366.9854 -2048.3916 356.7168 -2031.2949 c352.0898 -2023.5928 343.353 -2019.8848 335.5728 -2016.3984 c324.8726 -2011.6035 316.4194 -2016.833 307.5488 -2022.5605 c302.6826 -2025.7031 298.2021 -2029.502 293.751 -2033.1934 c289.0703 -2037.0752 284.084 -2040.5498 280.3198 -2045.2969 c277.7866 -2048.4922 275.1128 -2051.5098 272.7744 -2054.6689 C271.5254 -2049.8584 270.3398 -2045.0322 269.2471 -2040.1836 c267.731 -2033.4541 265.3813 -2026.9824 264.1021 -2020.1592 c262.9697 -2014.1201 262.4614 -2007.9961 262.2485 -2001.8623 c262.0308 -1995.5908 260.6924 -1989.6113 259.3584 -1983.4854 c256.7627 -1971.5693 255.1055 -1960.1299 254.8643 -1947.9277 c254.4375 -1926.3047 250.6396 -1902.5137 261.2969 -1882.5967 C264.4453 -1890.8398 268.4966 -1898.8672 273.2505 -1906.2002 c279.0596 -1915.1621 286.9429 -1922.4316 297.0049 -1926.2041 c305.666 -1929.4521 317.2515 -1928.375 324.5376 -1922.4912 c330.8311 -1917.4092 334.1899 -1909.459 336.4839 -1901.9141 c337.7769 -1897.6611 338.5396 -1893.2686 339.1294 -1888.8701 c339.5508 -1885.7314 340.3774 -1881.75 339.8159 -1878.4756 C347.7295 -1882.4688 356.4771 -1884.9883 364.9409 -1887.1973 c370.2764 -1888.5898 375.9526 -1889.0596 381.397 -1890.1094 c387.0786 -1891.2051 394.3354 -1892.5625 399.7554 -1889.7568 c404.791 -1887.1504 409.5913 -1883.8564 413.4766 -1879.7021 c418.4023 -1874.4336 419.522 -1866.7129 419.3076 -1859.748 c418.8994 -1846.498 407.7686 -1836.4541 397.9893 -1829.0137 c393.1992 -1825.3701 388.5947 -1821.3877 383.4795 -1818.1963 c377.8833 -1814.7041 371.6958 -1812.2451 365.9546 -1809.0088 c362.6387 -1807.1396 359.2988 -1805.2998 356.0098 -1803.3682 C369.002 -1797.291 379.3281 -1786.1602 388.4429 -1774.4873 c400.0566 -1759.6143 409.7847 -1733.4844 392.376 -1719.2031 c380.1084 -1709.1396 359.2104 -1705.0371 343.7764 -1710.4082 C344.5098 -1707.2715 345.1421 -1704.1104 345.7324 -1700.9492 c347.6196 -1690.8398 348.3237 -1679.208 344.4937 -1669.3975 c342.7012 -1664.8066 339.8867 -1660.9375 336.5762 -1657.3164 c332.6318 -1653.0039 326.1055 -1650.5762 320.8716 -1648.2529 c315.998 -1646.0898 311.0195 -1644.1504 305.9697 -1642.4404 c300.3638 -1640.541 292.4429 -1642.3486 286.9614 -1643.8594 c275.1987 -1647.1025 264.6763 -1654.8994 256.5493 -1663.7979 c248.2007 -1672.9395 242.6782 -1683.79 238.8726 -1695.4785 c236.7266 -1702.0703 234.1973 -1708.9297 232.7959 -1715.8848 C231.3569 -1714.4443 229.8872 -1713.0469 228.4375 -1711.6846 c223.8081 -1707.335 218.6035 -1703.5234 213.6348 -1699.5557 c211.0029 -1697.4541 208.3135 -1695.4268 205.5483 -1693.5039 c202.9243 -1691.6797 199.8687 -1690.4072 197.5142 -1688.2461 c192.8184 -1683.9365 187.3843 -1680.3555 181.8081 -1677.3047 c176.6553 -1674.4863 170.3872 -1671.3857 164.4185 -1671.3174 c152.7461 -1671.1826 138.4102 -1668.1807 129.5786 -1678.0322 c122.644 -1685.7676 121.6445 -1700.4316 123.502 -1710.1855 c125.7627 -1722.0586 134.2612 -1732.4707 142.9297 -1740.415 c150.2969 -1747.168 158.5762 -1753.0586 167.021 -1758.5449 C153.9229 -1756.4746 140.4688 -1755.3799 127.3652 -1757.3223 c114.9634 -1759.1611 101.4536 -1764.9492 92.3843 -1773.5967 c84.3218 -1781.2832 74.4204 -1789.5059 70.4873 -1800.2793 c66.4487 -1811.3389 69.0122 -1823.8047 76.0566 -1832.9033 c84.7065 -1844.0742 99.6084 -1844.5205 112.4941 -1844.5283 cf0 D242.6563 -2070.1592 m229.9736 -2069.5947 217.3564 -2069.457 204.6597 -2069.2754 c189.958 -2069.0635 174.9976 -2068.9287 160.6943 -2065.3789 c148.8755 -2062.4463 136.5073 -2060.3281 125.8057 -2054.2285 c122.5391 -2052.3672 116.9575 -2049.1768 118.2563 -2044.7695 c119.9927 -2038.8779 131.918 -2041.1289 136.104 -2041.1289 c152.249 -2041.1289 167.7471 -2042.4043 183.5122 -2046.0479 c199.1802 -2049.6689 214.4077 -2054.8828 229.019 -2061.5781 c235.1035 -2064.3672 241.0986 -2067.3496 247.085 -2070.3428 C245.5703 -2070.291 244.084 -2070.2227 242.6563 -2070.1592 cf286.8374 -2057.6592 m288.6763 -2055.5215 290.4463 -2053.3438 292.1387 -2051.0869 c293.2129 -2049.6543 297.9321 -2046.5508 300.1689 -2044.6953 c305.5649 -2040.2207 310.8794 -2035.6992 316.8843 -2032.0459 c319.166 -2030.6582 321.4941 -2028.5811 324.0142 -2027.7344 c326.7534 -2026.8145 329.1025 -2027.8652 331.6396 -2028.7607 c336.2578 -2030.3916 340.6538 -2032.9785 344.1919 -2036.3701 c347.1719 -2039.2266 346.2988 -2041.25 343.6978 -2043.9902 c338.1646 -2049.8213 328.1372 -2053.9629 320.3247 -2054.7598 c314.3799 -2055.3662 308.6172 -2057.8086 302.6558 -2058.8574 c296.3501 -2059.9678 289.957 -2060.5293 283.6177 -2061.4385 C284.6758 -2060.1211 285.7983 -2058.8672 286.8374 -2057.6592 cf252.9824 -1873.2168 m253.4258 -1872.5771 253.8569 -1871.9336 254.2695 -1871.2842 c255.1289 -1869.9316 255.8335 -1868.4893 256.4839 -1867.0215 C256.4829 -1867.0654 256.4805 -1867.1094 256.4795 -1867.1543 c256.4414 -1869.1377 257.2764 -1871.3643 258.0591 -1873.4316 C256.4502 -1872.6777 254.6045 -1872.5166 252.9824 -1873.2168 Cf371.5005 -1826.4297 m373.813 -1827.5986 376.0547 -1828.8818 378.2515 -1830.2529 c381.0669 -1832.0098 383.1948 -1834.5313 385.9121 -1836.3584 c390.2534 -1839.2773 394.3364 -1842.3975 398.0986 -1846.042 c401.8628 -1849.6885 405.7896 -1854.3438 406.3076 -1859.748 c406.9023 -1865.9551 405.1045 -1870.582 400.1997 -1874.2656 c396.0317 -1877.3945 392.9785 -1878.7949 387.7559 -1878.0713 c382.502 -1877.3428 377.3691 -1875.9971 372.0957 -1875.3516 c362.2749 -1874.1484 351.6812 -1870.21 343.0581 -1865.4053 c337.1064 -1862.0889 332.3354 -1857.3506 327.6426 -1852.5156 C326.1343 -1850.2275 324.5708 -1847.9863 322.9824 -1845.7939 c316.6841 -1837.1016 314.1597 -1826.8564 305.0952 -1820.2803 c301.8379 -1817.917 296.2837 -1820.2715 295.5469 -1824.165 c293.5215 -1834.8594 301.2705 -1843.8711 308.0806 -1851.1738 c311.3735 -1854.7051 314.7554 -1858.3379 318.2646 -1861.8438 C321.5225 -1867.0625 324.3647 -1872.5586 326.3213 -1878.3135 c328.1025 -1883.5527 325.873 -1890.9941 324.5791 -1896.1719 c323.0762 -1902.1865 320.7974 -1908.4434 316.0967 -1912.6914 c311.3027 -1917.0254 302.0415 -1914.752 297.1187 -1912.0889 c289.7104 -1908.082 284.6377 -1900.585 280.7686 -1893.3496 c276.3735 -1885.1309 272.9077 -1876.9941 270.1079 -1868.0889 c268.8193 -1863.9912 270.0552 -1859.2373 270.3896 -1855.0186 c270.7588 -1850.3672 270.54 -1845.6553 269.2471 -1841.1553 c267.936 -1836.5898 261.7842 -1834.6465 258.3833 -1838.2871 c254.8066 -1842.1143 252.332 -1846.5273 249.7949 -1851.0654 c248.897 -1852.6719 247.6055 -1853.9541 247.0029 -1855.7178 c246.0737 -1858.4355 245.0635 -1861.0322 243.7139 -1863.5703 c241.2939 -1868.123 237.2944 -1872.1377 233.8267 -1875.9072 c228.96 -1881.1982 223.4253 -1885.8799 217.9111 -1890.4707 c204.0562 -1902.0059 188.1069 -1915.3516 169.4702 -1917.5361 c161.3193 -1918.4922 153.2104 -1916.1152 148.9009 -1908.6807 c146.6504 -1904.7979 149.5664 -1897.4531 150.1372 -1893.3896 c151.0625 -1886.8057 153.6152 -1880.2002 156.335 -1874.125 c164.9565 -1854.8691 175.4351 -1834.7617 196.7466 -1827.3057 c197.9868 -1826.8721 198.9453 -1826.1934 199.6523 -1825.3691 C205.1021 -1823.0342 210.3325 -1820.1816 215.2896 -1816.9414 c216.1851 -1816.3555 216.8555 -1815.6602 217.335 -1814.9023 C219.1606 -1819.5879 222.1104 -1823.7305 226.7334 -1826.9795 c234.52 -1832.4512 245.4819 -1832.374 254.5732 -1832.3926 c262.2295 -1832.4082 269.8862 -1832.3926 277.5425 -1832.3926 c283.2393 -1832.3926 289.4858 -1826.6631 293.668 -1823.3779 c298.0723 -1819.918 303.4238 -1816.6221 307.2798 -1812.5898 c308.6162 -1811.1914 309.7905 -1809.6797 310.8638 -1808.1006 C311.0781 -1808.1152 311.2964 -1808.125 311.5229 -1808.1201 c316.7129 -1808.0186 321.8486 -1807.1777 326.9785 -1806.4482 c328.29 -1806.2617 329.6035 -1806.1104 330.9199 -1805.9844 C331.9639 -1807.293 333.5845 -1808.166 335.7949 -1808.1201 c336.9634 -1808.0957 338.1089 -1808.0215 339.2412 -1807.9209 C340.3345 -1808.6953 341.3433 -1809.4893 342.0713 -1809.9658 c351.4932 -1816.1328 361.4443 -1821.3477 371.5005 -1826.4297 cf337.5117 -1729.2236 m339.792 -1727.3203 342.1904 -1725.585 344.7046 -1724.1104 c355.4761 -1717.7959 372.8359 -1721.7217 382.6436 -1728.0625 c396.2534 -1736.8623 385.1606 -1758.1641 377.5249 -1767.4482 c367.6753 -1779.4238 356.9731 -1791.9023 341.2905 -1794.5918 C338.3115 -1793.3213 335.1592 -1792.6201 331.4751 -1792.917 c326.8003 -1793.2939 322.186 -1794.1504 317.5352 -1794.6797 C321.2324 -1784.5664 321.897 -1773.4902 319.666 -1762.9883 c319.2598 -1761.0762 318.666 -1759.2412 317.9404 -1757.4688 C325.833 -1753.4414 330.709 -1745.9307 334.0195 -1737.5254 c335.1226 -1734.7246 336.332 -1731.9805 337.5117 -1729.2236 Cf244.9751 -1729.5049 m243.0269 -1720.0928 248.1714 -1709.0771 250.9985 -1700.2129 c254.0625 -1690.6055 258.2393 -1681.9385 264.7378 -1674.1406 c270.7578 -1666.917 278.6118 -1660.8125 287.4082 -1657.3955 c291.8237 -1655.6807 296.374 -1654.9092 301.0942 -1654.9609 c305.4321 -1655.0078 310.3896 -1657.7861 314.3105 -1659.4785 c321.6592 -1662.6484 329.2563 -1665.9336 332.3613 -1673.8857 c335.4004 -1681.6709 334.3701 -1691.207 332.8862 -1699.1543 c331.4814 -1706.6777 329.5688 -1714.0586 326.8877 -1721.1885 C323.6772 -1724.1338 320.7021 -1727.334 317.9556 -1730.4863 c314.6436 -1734.2881 310.7686 -1738.7266 308.1187 -1743.5664 C305.0957 -1740.6992 301.7207 -1738.1904 298.2188 -1736.0781 c286.7881 -1729.1846 271.6914 -1725.5586 258.4614 -1727.9316 c253.4785 -1728.8252 248.8354 -1731.6172 244.7104 -1734.7998 C244.6401 -1734.4668 244.5483 -1734.1436 244.4648 -1733.8154 C245.0737 -1732.6064 245.3164 -1731.1533 244.9751 -1729.5049 cf239.4663 -1770.9199 m240.8237 -1767.8984 241.8384 -1764.873 242.7515 -1761.6934 c242.9878 -1760.8701 243.2935 -1760.1533 243.6084 -1759.4648 C245.3813 -1758.2471 247.2744 -1757.1924 249.27 -1756.2617 c253.7949 -1754.1523 253.2759 -1749.3213 250.521 -1746.5068 C252.6987 -1744.8105 255.1006 -1743.4072 256.7739 -1742.374 c266.2192 -1736.5391 281.6313 -1741.8672 290.4561 -1746.6191 c300.5146 -1752.0361 307.2344 -1760.7588 308.0161 -1772.3438 c308.7314 -1782.9434 305.1416 -1795.3584 298.0874 -1803.3975 c294.5469 -1807.4316 288.853 -1810.8125 284.5791 -1814.1016 c282.3281 -1815.835 279.9873 -1817.4268 277.5171 -1818.8291 c274.542 -1820.5176 269.0005 -1819.3926 265.627 -1819.3926 c256.1602 -1819.3926 243.9194 -1821.1221 235.0659 -1816.7949 c226.4473 -1812.5811 227.3428 -1800.2305 227.8193 -1792.167 c228.1865 -1785.9561 229.5586 -1779.5557 232.1553 -1773.7754 C234.8066 -1774.9004 237.9219 -1774.3555 239.4663 -1770.9199 cf157.0366 -1735.3281 m149.3936 -1729.5117 142.7266 -1722.375 138.3809 -1713.7666 c134.7842 -1706.6426 134.7339 -1695.0322 138.4565 -1687.8652 c142.2725 -1680.5195 157.9375 -1684.1182 164.4185 -1684.3174 c169.0127 -1684.458 174.2329 -1687.9082 178.0845 -1690.1211 c182.5811 -1692.7041 186.7051 -1695.8115 190.4224 -1699.4199 c192.3447 -1701.2861 195.3252 -1702.373 197.5923 -1703.8027 c199.9722 -1705.3047 202.2314 -1707.0117 204.4424 -1708.748 c208.8384 -1712.2012 213.7817 -1715.5596 217.7646 -1719.4697 c222.8433 -1724.4561 231.811 -1730.7256 232.2075 -1738.5137 c232.3442 -1741.1953 233.7837 -1743.0146 235.6567 -1743.9766 C234.2373 -1746.3066 233.2329 -1748.8545 232.6875 -1751.5596 C226.7695 -1756.7246 222.478 -1763.3496 219.564 -1770.6611 C196.6128 -1764.2178 175.7598 -1749.5752 157.0366 -1735.3281 cf81.9082 -1808.4854 m82.7246 -1798.7568 93.1235 -1790.8184 99.6714 -1784.5967 c108.2393 -1776.4561 119.1982 -1771.8955 130.8213 -1769.8584 c144.6133 -1767.4414 160.125 -1770.3066 173.6992 -1772.8496 c187.9624 -1775.5215 201.9883 -1779.3672 215.98 -1783.1846 C214.9761 -1788.5771 214.5649 -1794.0977 214.6826 -1799.5 c214.7275 -1801.5557 214.856 -1803.583 215.0962 -1805.5654 C213.3496 -1804.416 211.0698 -1804.1855 208.728 -1805.7168 c203.4644 -1809.1572 197.9395 -1812.1699 192.0864 -1814.4873 c189.3159 -1815.584 186.4595 -1816.4355 183.5815 -1817.1973 c180.4717 -1818.0195 177.3667 -1820.4971 174.4756 -1821.9297 c162.5713 -1827.8291 149.2266 -1831.5283 135.9668 -1831.5283 c123.4346 -1831.5283 109.9717 -1832.873 97.583 -1830.7725 c85.999 -1828.8086 80.9854 -1819.4805 81.9082 -1808.4854 cf*U*u1 D1709.5806 -1996.5762 m1704.2827 -1996.373 1700.0303 -1993.0225 1695.9639 -1989.9385 c1694.4575 -1988.7959 1692.9663 -1987.6563 1691.458 -1986.5508 C1688.6362 -1974.7666 1683.6323 -1965.2051 1676.0127 -1955.3672 c1668.7744 -1946.0215 1660.981 -1935.7959 1650.0522 -1930.6211 C1654.1318 -1925.5098 1661.7397 -1923.8984 1667.6196 -1921.9648 c1675.5449 -1919.3594 1672.1504 -1906.8037 1664.1636 -1909.4297 c1654.625 -1912.5664 1645.4126 -1915.5752 1639.0942 -1923.6992 C1637.4883 -1922.4463 1635.8936 -1921.1953 1634.2686 -1920.0791 c1628.8076 -1916.3262 1622.6733 -1913.2148 1616.6841 -1910.3877 c1613.7744 -1909.0137 1610.7754 -1907.9326 1607.626 -1907.2773 c1607.5605 -1907.2637 1603.6772 -1906.1836 1604.7559 -1906.8496 c1602.9893 -1905.7588 1600.9565 -1905.041 1599.0327 -1904.2861 c1598.3965 -1904.0371 1597.75 -1903.8203 1597.1011 -1903.6133 C1600.6172 -1900.1416 1599.25 -1892.2061 1593 -1892.207 C1589.8691 -1892.2559 1585.1479 -1892.4023 V1586.1406 -1885.6055 1592.1274 -1880.1279 1594.4893 -1873.7354 c1597.4014 -1865.8545 1584.8335 -1862.4863 1581.9541 -1870.2803 c1580.6304 -1873.8623 1577.915 -1876.9404 1575.957 -1880.1904 c1573.5938 -1884.1133 1572.3594 -1888.4219 1572.0703 -1892.9473 C1563.8403 -1893.3848 1554.877 -1894.0645 1548.584 -1895.1094 c1537.0908 -1897.0156 1525.3115 -1898.9434 1514.9595 -1904.502 C1507.7856 -1899.3096 1499.3477 -1895.7646 1491.7153 -1891.3613 c1486.9785 -1888.6289 1482.1367 -1886.1992 1476.6855 -1885.3506 c1471.6646 -1884.5693 1466.4072 -1884.873 1461.3447 -1885.0928 c1452.4688 -1885.4766 1443.4761 -1887.1641 1436.1865 -1892.4248 C1420.1157 -1873.2559 1415.6782 -1847.7246 1415.1504 -1823.1465 c1414.9922 -1815.7656 1415.1099 -1808.3721 1415.1099 -1800.9902 c1415.1099 -1797.9219 1414.6523 -1794.6572 1415.4355 -1792.375 c1416.6514 -1788.8301 1417.0801 -1785.1436 1417.3613 -1781.4199 c1417.6187 -1778.0146 1416.9868 -1774.5137 1418.5205 -1771.3799 c1420.1455 -1768.0576 1422.4927 -1765.0762 1424.6812 -1762.1162 c1426.4727 -1759.6934 1428.2632 -1757.2568 1429.999 -1754.7939 c1430.6885 -1753.8164 1431.2378 -1752.7148 1431.8193 -1751.6719 c1432.2095 -1750.96 1432.6138 -1750.2568 1433.0332 -1749.5625 C1433.1133 -1749.459 1433.1709 -1749.3779 1433.2354 -1749.291 C1439.9951 -1746.5508 1436.498 -1735.2461 1428.7261 -1737.0996 c1422.8423 -1738.502 1422.0063 -1744.5176 1418.5767 -1748.4785 c1413.4868 -1754.3574 1408.0059 -1761.8936 1405.3257 -1769.2402 c1403.9409 -1773.0361 1404.5591 -1777.4189 1404.3613 -1781.4199 c1404.1475 -1785.7529 1402.1099 -1789.543 1402.1099 -1793.8213 c1402.1099 -1802.5869 1402.0889 -1811.3525 1402.1143 -1820.1182 c1402.1992 -1849.3184 1407.8604 -1879.7422 1427.4492 -1902.1836 C1425.3154 -1905.8301 1423.7935 -1909.8574 1422.708 -1913.9844 C1419.4082 -1913.4229 1415.9385 -1910.0283 1413.2144 -1908.374 c1409.5195 -1906.1289 1405.3398 -1904.418 1401.3608 -1902.7539 c1392.4976 -1899.0479 1383.4546 -1895.7119 1374.5552 -1892.0645 c1355.2197 -1884.1406 1332.5913 -1886.9219 1312.3955 -1889.1416 c1290.5796 -1891.54 1268.979 -1896.9297 1247.4561 -1901.125 c1229.9844 -1904.5313 1211.1108 -1911.0811 1197.7026 -1923.2363 c1191.4795 -1928.8789 1200.7012 -1938.0449 1206.895 -1932.4297 c1219.6055 -1920.9063 1237.7783 -1916.3799 1254.0913 -1913.0234 c1275.2236 -1908.6758 1296.5474 -1903.8076 1318.0195 -1901.5342 c1328.123 -1900.4648 1338.2554 -1899.7148 1348.4189 -1900.1074 c1358.0576 -1900.4805 1366.6338 -1902.6563 1375.4531 -1906.4258 c1383.6865 -1909.9434 1392.2827 -1912.6709 1400.3848 -1916.4551 c1407.2002 -1919.6377 1413.251 -1925.042 1420.6221 -1926.6484 C1418.4219 -1955.5078 1432.5811 -1987.2178 1462.9404 -1992.0977 C1461.7217 -1998.7793 1462.6113 -2006.7295 1463.2231 -2013.6621 C1462.8379 -2013.6016 1462.4365 -2013.5625 1462.0078 -2013.5664 c1443.2935 -2013.7266 1422.998 -2020.7266 1416.9053 -2040.1826 c1414.3926 -2048.2051 1426.9443 -2051.6104 1429.4404 -2043.6377 c1433.6719 -2030.126 1449.5073 -2026.6738 1462.0078 -2026.5664 c1462.9478 -2026.5586 1463.7764 -2026.3809 1464.5059 -2026.084 C1464.8721 -2029.2158 1465.2148 -2032.3516 1465.3926 -2035.5361 c1465.8164 -2043.1484 1467.7104 -2049.4824 1472.502 -2055.4248 c1476.3262 -2060.168 1480.7402 -2064.1943 1485.5 -2067.7949 C1479.4111 -2079.1895 1468.1816 -2086.0986 1467.6436 -2100.1631 c1467.3228 -2108.5498 1480.3242 -2108.5186 1480.6436 -2100.1631 c1481.0225 -2090.2676 1491.5698 -2083.2344 1496.3271 -2075.0674 C1498.4141 -2076.334 1500.5308 -2077.5625 1502.6611 -2078.7725 c1513.9414 -2085.1758 1526.0845 -2092.957 1539.1572 -2094.3066 c1540.7095 -2094.4668 1542.2803 -2094.4795 1543.8384 -2094.5137 c1544.8223 -2094.5352 1545.1685 -2094.4551 1545.2559 -2094.3711 C1545.4009 -2094.4697 1545.6602 -2094.6191 1546.1167 -2094.8418 c1547.1904 -2095.3652 1548.2827 -2095.8496 1549.3857 -2096.3076 C1538.1455 -2097.9531 1530.9902 -2108.3164 1530.7505 -2119.5801 c1530.5718 -2127.9688 1543.5723 -2127.9512 1543.7505 -2119.5801 c1543.8403 -2115.3662 1546.1963 -2109.2715 1551.8135 -2109.0898 c1557.7124 -2108.8984 1559.4565 -2102.376 1557.0308 -2098.6426 C1559.3892 -2098.9629 1561.8008 -2099.0117 1564.042 -2099.7441 c1568.228 -2101.1104 1572.4946 -2102.2119 1576.7847 -2103.1953 c1591.3662 -2106.5361 1606.2905 -2107.0156 1621.1826 -2106.4932 c1634.0527 -2106.042 1647.7275 -2103.5723 1658.3389 -2095.8779 c1668.7842 -2088.3047 1677.6421 -2078.8379 1684.5498 -2067.9463 c1691.4297 -2057.0996 1695.4146 -2044.7041 1696.4956 -2031.9434 c1697.2578 -2022.9482 1696.3682 -2013.7607 1694.9219 -2004.7148 C1699.272 -2007.3701 1703.9463 -2009.3604 1709.5806 -2009.5762 c1717.9673 -2009.8965 1717.936 -1996.8955 1709.5806 -1996.5762 cf0 D1467.0513 -1973.0225 m1466.4736 -1975.1406 1465.9746 -1977.2803 1465.5005 -1979.4248 C1438.9736 -1976.2275 1430.2417 -1943.9502 1434.3799 -1921.2012 c1435.623 -1914.3682 1437.98 -1907.8896 1443.311 -1903.207 c1448.3306 -1898.7969 1456.3115 -1898.3105 1462.624 -1898.0371 c1466.5449 -1897.8672 1470.8428 -1897.5146 1474.7285 -1898.1191 c1479.0488 -1898.792 1482.8213 -1901.2402 1486.5342 -1903.3828 c1492.1494 -1906.623 1498.54 -1909.2871 1504.1738 -1912.8125 C1502.2979 -1914.7217 1500.5049 -1916.7148 1498.7246 -1918.6553 c1493.8291 -1923.9912 1489.3213 -1929.6836 1485.1416 -1935.5947 c1477.1313 -1946.9229 1470.7046 -1959.6289 1467.0513 -1973.0225 cf1659.8281 -2077.8086 m1655.4243 -2082.0742 1650.561 -2086.1709 1644.9614 -2088.7207 c1639.0137 -2091.4297 1632.3232 -2092.6631 1625.8569 -2093.2217 c1611.3423 -2094.4746 1596.3389 -2093.9268 1582.061 -2091.0508 c1578.3804 -2090.3105 1574.748 -2089.3486 1571.1387 -2088.3203 c1567.5024 -2087.2852 1564.3413 -2086.7227 1560.6338 -2086.1973 c1557.8623 -2085.8037 1555.1982 -2084.7959 1552.6782 -2083.6172 c1549.0015 -2081.8975 1546.3213 -2081.5664 1542.2783 -2081.4795 c1535.4795 -2081.333 1530.6201 -2078.6826 1524.707 -2075.7119 c1518.5 -2072.5938 1512.3496 -2069.3691 1506.3345 -2065.8936 c1496.3115 -2060.1025 1481.8545 -2052.0762 1479.0083 -2039.9551 c1478.3066 -2036.9658 1478.2783 -2033.8623 1478.228 -2030.8086 c1478.1709 -2027.3379 1477.6118 -2024.2549 1477.0068 -2020.8486 c1475.6328 -2013.1182 1475.8193 -2005.0186 1475.792 -1997.1963 c1475.7695 -1990.7988 1477.6475 -1984.2705 1479.1748 -1978.0791 c1480.9277 -1970.9707 1483.3599 -1964.1572 1487.0381 -1957.8125 c1490.3335 -1952.1279 1493.6914 -1946.7197 1497.3159 -1941.5195 C1497.667 -1941.5742 1498.0293 -1941.6123 1498.4155 -1941.6143 c1507.4688 -1941.6621 1516.4272 -1942.3672 1525.3457 -1943.9395 c1534.5781 -1945.5674 1544.5649 -1947.5469 1553.1582 -1951.3789 c1560.6831 -1954.7344 1567.0659 -1959.9795 1574.082 -1964.1885 c1582.2197 -1969.0703 1590.811 -1972.6406 1598.5693 -1978.2061 c1613.0566 -1988.5977 1626.7227 -2000.1338 1638.3735 -2013.6748 c1644.0337 -2020.2529 1649.6826 -2027.2529 1654.4854 -2034.4824 c1656.7041 -2037.8223 1658.4209 -2041.4746 1660.3564 -2044.9785 c1661.8428 -2047.6699 1664.0352 -2050.8867 1664.2456 -2054.0469 c1664.626 -2059.7578 1670.8711 -2061.5723 1674.5708 -2059.4424 C1670.5688 -2066.2236 1665.4399 -2072.374 1659.8281 -2077.8086 cf1680.4375 -2046.5146 m1679.5664 -2049.2285 1678.4883 -2051.8633 1677.252 -2054.4229 C1677.25 -2054.2969 1677.2539 -2054.1758 1677.2456 -2054.0469 c1676.7129 -2046.0488 1671.8887 -2039.1895 1668.29 -2032.2627 c1663.8105 -2023.6387 1656.9268 -2016.3242 1650.9395 -2008.752 c1638.7568 -1993.3438 1623.835 -1980.7441 1608.0791 -1969.124 c1599.8457 -1963.0518 1591.1177 -1958.7051 1582.1768 -1953.8359 c1573.958 -1949.3613 1566.853 -1943.335 1558.2383 -1939.4932 c1542.7285 -1932.5771 1524.4307 -1929.6211 1507.1396 -1928.8398 C1508.5303 -1927.2314 1509.9639 -1925.6387 1511.4595 -1924.0625 c1512.9771 -1922.4629 1514.4878 -1920.9854 1516.0669 -1919.6367 C1518.2217 -1919.3057 1520.1631 -1917.8457 1521.1973 -1915.9502 C1522.5156 -1915.1748 1523.9082 -1914.4736 1525.4175 -1913.8633 c1531.5352 -1911.3896 1538.125 -1910.0977 1544.5898 -1908.916 c1553.8677 -1907.2207 1563.0112 -1906.1973 1572.2588 -1905.668 C1572.0923 -1908.4023 1573.4297 -1911.2188 1576.7847 -1912.2559 c1582.4697 -1914.0127 1588.4199 -1914.6338 1594.125 -1916.3281 c1597.1211 -1917.2178 1599.6167 -1919.624 1602.7847 -1919.7695 c1606.4258 -1919.9365 1609.6826 -1921.3496 1612.9019 -1922.9668 c1618.4092 -1925.7324 1623.8721 -1928.668 1628.9536 -1932.1602 c1631.334 -1933.7969 1633.6196 -1935.5742 1635.9346 -1937.3008 c1638.9277 -1939.5332 1641.8247 -1940.957 1645.1367 -1942.5977 c1650.3066 -1945.1582 1654.6885 -1949.7119 1658.2866 -1954.123 c1662.3765 -1959.1367 1666.5977 -1964.0195 1670.291 -1969.3418 c1672.7368 -1972.8672 1674.5952 -1976.5527 1676.064 -1980.3584 C1671.2964 -1982.2422 1668.9531 -1989.2129 1674.7466 -1991.6973 c1676.5684 -1992.4785 1678.2964 -1993.4082 1679.9678 -1994.4229 C1680.7422 -1998.3125 1681.3662 -2002.2725 1682.0073 -2006.2695 c1684.1704 -2019.7578 1684.645 -2033.3994 1680.4375 -2046.5146 cf*U*u1 D1526.3379 -1992.0127 m1519.9365 -1991.2227 1513.0967 -1992.1904 1508.0225 -1996.4414 c1502.9316 -2000.7051 1500.9995 -2007.2832 1499.4297 -2013.4844 c1498.0693 -2018.8555 1503.0781 -2022.1797 1507.228 -2021.4785 C1508.5273 -2025.9043 1511.0479 -2029.8516 1514.7046 -2032.2998 c1520.498 -2036.1797 1527.9302 -2037.1045 1534.4072 -2034.4316 c1541.3535 -2031.5645 1544.9463 -2026.1543 1547.5459 -2019.3955 c1550.0493 -2012.8857 1550.4888 -2003.9609 1545.0107 -1998.8857 c1540.1572 -1994.3896 1532.6909 -1992.7969 1526.3379 -1992.0127 cf0 D1536.2354 -2010.9189 m1536.0962 -2017.9111 1531.0879 -2024.6055 1523.7461 -2022.4854 c1521.6328 -2021.875 1519.6021 -2019.8789 1519.4785 -2017.6387 c1519.3569 -2015.4375 1518.8931 -2010.0469 1521.1138 -2008.6885 c1522.7876 -2007.665 1523.7021 -2006.2617 1524.041 -2004.7725 C1526.187 -2004.9375 1528.3076 -2005.4258 1530.3882 -2005.9639 c1532.1729 -2006.4258 1533.834 -2007.0527 1535.4492 -2007.9297 c1536.9507 -2008.7451 1536.2749 -2008.9277 1536.2354 -2010.9189 cf*U*u1 D1611.8296 -2019.3457 m1601.0073 -2013.8818 1587.7295 -2018.2979 1576.7847 -2021.0801 c1568.6641 -2023.1445 1572.1113 -2035.6816 1580.2407 -2033.6152 c1581.1533 -2033.3828 1582.0645 -2033.1455 1582.9761 -2032.9063 C1580.5913 -2034.3467 1578.6538 -2036.5381 1577.2686 -2039.7598 c1574.0278 -2047.2979 1576.6963 -2054.8379 1581.8047 -2060.7666 c1586.3154 -2066 1594.1299 -2069.1191 1600.9556 -2067.8125 c1607.5508 -2066.5488 1612.2554 -2060.3721 1615.6182 -2055.0264 c1622.5771 -2043.9648 1625.8496 -2026.4238 1611.8296 -2019.3457 cf0 D1607.9536 -2040.5879 m1606.751 -2045.0176 1602.0972 -2056.1777 1596.353 -2054.9658 c1593.0405 -2054.2666 1590.1064 -2051.3555 1589.0298 -2048.2207 c1588.4712 -2046.5938 1588.8438 -2045.4375 1589.6436 -2043.9844 c1589.7246 -2043.8369 1589.7559 -2043.7373 1589.7622 -2043.666 C1589.8926 -2043.6563 1590.0781 -2043.627 1590.3545 -2043.5576 c1591.0674 -2043.3799 1592.3438 -2043.5586 1593.0757 -2043.5566 c1601.4326 -2043.5322 1601.458 -2030.6152 1593.1504 -2030.5605 C1595.2847 -2030.1943 1597.437 -2029.9326 1599.624 -2029.874 c1602.0664 -2029.8086 1605.1377 -2029.9678 1607.0913 -2031.6289 c1609.7822 -2033.918 1608.7529 -2037.6426 1607.9536 -2040.5879 cf*U*u1 D1900.3037 -1993.6953 m1903.3926 -1999.6689 1908.8818 -2005.2598 1913.0835 -2010.5117 c1917.748 -2016.3428 1922.6924 -2021.9707 1928.4658 -2026.7295 c1933.5557 -2030.9258 1939.1641 -2034.4346 1944.6094 -2038.1367 c1949.8379 -2041.6904 1954.3662 -2046.002 1959.5518 -2049.5684 c1964.7451 -2053.1396 1970.0049 -2057.3633 1976.4492 -2058.2412 c1979.8496 -2058.7051 1982.8828 -2058.1113 1985.5654 -2056.7783 C1985.874 -2057.4023 1986.2754 -2057.9766 1986.7373 -2058.4893 C1986.4316 -2067.8604 1985.6016 -2077.1055 1984.2002 -2086.666 c1981.1904 -2107.2002 1981.9102 -2128.6211 1982.1475 -2149 C1995 -2149 L1995 -2109.4043 L1995 -2094.3184 1998.8223 -2079.582 1999.791 -2064.5605 c1999.9883 -2061.499 2000.0928 -2058.4355 2000.1367 -2055.3711 C2021.002 -2053.5 2039.252 -2043.4609 2047.7305 -2023.1328 c2051.1807 -2014.8594 2049.21 -2001.8125 2038.9775 -1999.2354 c2033.5518 -1997.8682 2028.5801 -1999.4072 2023.8438 -2002.1191 c2018.8262 -2004.9922 2015.4512 -2009.8076 2010.7598 -2012.9365 c2006.8975 -2015.5137 2003.1094 -2018.1816 1999.4316 -2021 C1999.2432 -2007.8672 1999.7793 -1994.7832 2003.208 -1981.8193 c2004.835 -1975.6689 2007.9551 -1970.3301 2010.0684 -1964.4092 c2012.4063 -1957.8564 2017.1084 -1951.9531 2022.2119 -1947.3457 c2027.0352 -1942.9912 2033.0771 -1940.0645 2039.1514 -1937.9209 c2042.001 -1936.916 2045.1104 -1936.5342 2048.0547 -1935.8984 c2051.876 -1935.0742 2055.0781 -1933.5703 2059.0566 -1933.3477 c2065.8379 -1932.9668 2072.0117 -1935.2979 2078.4482 -1936.957 c2084.2881 -1938.4609 2089.4883 -1940.7813 2094.5957 -1943.9648 c2096.9707 -1945.4453 2099.0107 -1947.0781 2101.6855 -1948.0352 c2104.5977 -1949.0762 2105.7861 -1949.666 2107.9063 -1952.0674 c2112.7441 -1957.5479 2117.4473 -1963.3721 2122.1006 -1969.0166 c2122.1211 -1969.042 2122.1406 -1969.0693 2122.1611 -1969.0947 C2119.916 -1967.7725 2117.6621 -1966.4756 2115.2129 -1965.4795 C2114.6621 -1965.3125 L2112.4082 -1965.0801 2112.3584 -1965.0098 2114.5127 -1965.1025 C2113.376 -1964.375 2112.1631 -1963.793 2110.9424 -1963.2266 c2108.583 -1962.1309 2106.1709 -1961.3711 2103.6172 -1960.9063 c2097.8076 -1959.8486 2091.0059 -1959.5264 2085.2324 -1960.832 c2073.4355 -1963.498 2078.2266 -1976.2041 2081.2598 -1983.5225 c2082.8945 -1987.4678 2084.2725 -1992.0977 2086.29 -1996.2344 C2082.6738 -1998.7754 2079.457 -2001.9678 2076.7539 -2005.749 c2068.9717 -2016.6348 2072.5186 -2028.8037 2075.7422 -2040.5654 c2079.2451 -2053.3408 2086.0176 -2065.4707 2092.7559 -2076.7988 c2095.9297 -2082.1357 2098.5449 -2087.9844 2102.7451 -2092.5732 c2107.3848 -2097.6416 2112.9111 -2101.9414 2118.6523 -2105.6855 c2138.6523 -2118.7285 2168.8066 -2124.3184 2190.8369 -2113.2373 c2201.7012 -2107.7725 2209.0928 -2096.126 2215.7988 -2086.376 c2219.4492 -2081.0693 2222.7969 -2075.4336 2226.2305 -2069.9688 c2229.6455 -2064.5332 2232.4346 -2058.7578 2234.6592 -2052.7402 c2245.5234 -2023.3545 2233.707 -1985.0225 2203.043 -1973.6953 c2198.6406 -1972.0693 2193.9326 -1971.1582 2189.1816 -1970.624 C2190.2295 -1966.9746 2190.5762 -1963.0488 2190.8359 -1959.3496 c2191.3018 -1952.71 2191.2148 -1945.2891 2188.4941 -1939.1162 c2187.0449 -1935.8271 2182.4219 -1935.208 2179.6016 -1936.7842 c2170.1533 -1942.0645 2168.2354 -1953.0957 2163.3086 -1961.8359 c2162.5996 -1963.0938 2161.7559 -1964.1611 2160.8008 -1965.1465 C2160.4639 -1963.5898 2160.3418 -1962.0068 2160.2715 -1960.4072 c2160.1533 -1957.7207 2159.1963 -1955.7461 2158.0449 -1953.3955 c2154.3994 -1945.9541 2148.0313 -1935.3945 2138.1445 -1938.3428 c2131.127 -1940.4355 2127.8945 -1947.3438 2126.4639 -1954.498 C2126.1504 -1954.1563 2125.8525 -1953.8027 2125.5313 -1953.4668 c2121.1543 -1948.8945 2118.0986 -1941.6885 2112.4551 -1938.4854 c2110.2539 -1937.2363 2107.8613 -1936.6563 2105.5625 -1935.668 c2102.8418 -1934.5 2100.2695 -1932.1416 2097.6582 -1930.6406 c2092.748 -1927.8193 2087.3457 -1925.915 2081.9053 -1924.4209 c2074.8887 -1922.4941 2068.1787 -1920.5928 2060.8418 -1920.332 c2054.0469 -1920.0898 2048.1006 -1922.6758 2041.5908 -1923.9922 c2034.8135 -1925.3623 2028.374 -1927.9014 2022.3721 -1931.3418 c2016.834 -1934.5166 2011.8271 -1938.7979 2007.7129 -1943.6582 c2002.832 -1949.4248 2000.3994 -1955.7852 1996.9336 -1962.3252 c1990.6719 -1974.1416 1988.2129 -1987.4775 1987.0039 -2000.6621 c1986.1826 -2009.6074 1986.1523 -2018.6074 1986.3418 -2027.5986 C1986.209 -2027.5049 1986.0762 -2027.4082 1985.9434 -2027.3154 c1985.8506 -2027.252 1985.7832 -2027.2109 1985.7148 -2027.168 C1985.5547 -2026.9258 1985.3486 -2026.625 1985.0527 -2026.2188 c1984.041 -2024.8291 1983.0596 -2023.4189 1982.0732 -2022.0107 c1977.8457 -2015.9756 1973.7012 -2009.9053 1969.1416 -2004.1113 c1953.1787 -1983.8301 1932.7842 -1967.0684 1909.2778 -1956.0859 c1904.708 -1953.9512 1899.542 -1952.8389 1895.0225 -1955.7158 c1890.4844 -1958.6045 1889.1104 -1964.3115 1889.9141 -1969.2949 c1891.3066 -1977.9297 1896.3384 -1986.0254 1900.3037 -1993.6953 cf0 D2006.3496 -2031.9297 m2009.8252 -2029.1123 2013.6074 -2026.6494 2017.3213 -2024.1621 c2020.249 -2022.2012 2022.5752 -2019.6357 2025.1816 -2017.2813 c2027.457 -2015.2266 2034.8848 -2008.4277 2036.4033 -2013.6074 c2037.6328 -2017.8008 2033.1201 -2023.7402 2030.9189 -2026.8535 c2023.79 -2036.9385 2012.1436 -2041.2109 2000.0273 -2042.3535 C1999.9854 -2040.707 1999.9365 -2039.0605 1999.8848 -2037.4141 C2001.7109 -2035.2949 2004.3457 -2033.5527 2006.3496 -2031.9297 cf2177.7227 -1960.9727 m2177.4375 -1964.3701 2176.8604 -1968.2168 2175.8574 -1969.3535 c2175.6992 -1969.5332 2175.5566 -1969.7148 2175.4219 -1969.8984 C2174.792 -1969.9023 2174.1709 -1969.917 2173.5586 -1969.9414 C2175.2764 -1967.4395 2176.4893 -1964.2256 2177.7227 -1960.9727 Cf2140.8584 -1952.4297 m2141.042 -1952.1133 2141.3281 -1951.7148 2141.6348 -1951.3525 C2142.5547 -1952.2139 2143.3203 -1953.668 2143.9063 -1954.5918 c2144.8301 -1956.0488 2145.6221 -1957.5918 2146.4063 -1959.127 c2146.7158 -1959.7344 2147.0117 -1960.3496 2147.3086 -1960.9629 C2147.3066 -1961.1045 2147.3096 -1961.2715 2147.3184 -1961.4746 c2147.5215 -1966.1182 2148.416 -1970.8896 2150.7031 -1974.9766 c2151.04 -1975.5791 2151.3955 -1976.1123 2151.7617 -1976.5996 C2151.3018 -1976.792 2150.8408 -1976.9834 2150.3789 -1977.1699 c2148.5732 -1977.8984 2146.7354 -1978.5205 2144.8848 -1979.1006 C2142.748 -1976.3232 2140.7354 -1973.4482 2138.7305 -1970.5645 C2138.6328 -1968.625 2138.4043 -1966.6729 2138.418 -1964.7686 c2138.4473 -1960.5518 2138.6914 -1956.1504 2140.8584 -1952.4297 cf2137.7764 -1994.5566 m2138.6035 -1994.292 2139.4316 -1994.0381 2140.2588 -1993.79 C2140.7861 -1994.3799 2141.3223 -1994.9639 2141.877 -1995.5352 c2146.6211 -2000.4268 2153.5625 -1995.2891 2152.8916 -1989.9619 C2154.2246 -1989.499 2155.5537 -1989.0088 2156.8721 -1988.459 c2159.9004 -1987.1963 2162.8984 -1985.875 2165.9609 -1984.6973 c2169.9678 -1983.1572 2173.3916 -1982.8594 2177.6484 -1982.915 c2189.583 -1983.0723 2201.8457 -1984.9541 2211.0264 -1993.1602 c2219.3047 -2000.5596 2223.6074 -2011.6699 2224.9258 -2022.4932 c2226.4658 -2035.1338 2223.9863 -2047.0508 2218.0234 -2058.2305 c2215.0742 -2063.7598 2210.9072 -2068.5986 2208.0371 -2074.123 c2204.8379 -2080.2803 2200.2988 -2085.6279 2196.0801 -2091.0898 c2192.5635 -2095.6426 2189.3896 -2099.1992 2184.2754 -2102.0117 c2179.3926 -2104.6982 2173.6191 -2105.4111 2168.1455 -2105.7021 c2155.082 -2106.3965 2142.2734 -2103.6289 2130.6553 -2097.6289 c2126.0059 -2095.2266 2121.6553 -2092.2549 2117.6631 -2088.8809 c2113.0176 -2084.9531 2110.1885 -2080.874 2107.1953 -2075.6709 c2101.5508 -2065.8574 2095.9727 -2056.1299 2091.1934 -2045.873 c2089.0039 -2041.1738 2087.8848 -2035.8203 2086.6387 -2030.8145 c2085.3857 -2025.7793 2084.1006 -2021.6406 2085.6992 -2016.5576 c2087.168 -2011.8896 2090.7207 -2008.2891 2095.0078 -2005.8623 C2095.3066 -2006.0059 2095.5938 -2006.1621 2095.9092 -2006.2881 c2096.7393 -2006.6211 2097.5762 -2006.8096 2098.4316 -2006.9375 C2099.0156 -2007.0898 2099.6543 -2007.168 2100.3574 -2007.1484 C2101.0508 -2007.2012 2101.6807 -2007.1523 2102.2578 -2007.0332 C2108.3613 -2006.5625 2113.9199 -2004.7217 2119.7305 -2002.667 c2125.9697 -2000.4609 2131.3613 -1996.6064 2137.7764 -1994.5566 cf2125.9668 -1985.1211 m2125.8643 -1985.165 2125.7607 -1985.2051 2125.6582 -1985.25 c2121.1611 -1987.2246 2116.9141 -1989.5703 2112.4766 -1991.3613 C2111.4316 -1990.084 2109.8223 -1989.2393 2107.6387 -1989.2939 c2104.2734 -1989.3789 2101.0234 -1989.8779 2097.9229 -1990.7422 C2097.2998 -1989.2607 2096.8027 -1987.7295 2096.5742 -1987.1328 c2095.0928 -1983.2607 2093.5645 -1979.4199 2091.9043 -1975.6201 c2091.5498 -1974.8086 2091.2393 -1973.9883 2090.9512 -1973.1582 C2095.7686 -1972.9932 2101.0977 -1972.9258 2105.5449 -1974.9922 c2108.0039 -1976.1348 2109.7178 -1977.6553 2112.4932 -1978.0225 c2110.2227 -1977.7227 2114.4619 -1979.5664 2115.0645 -1979.9209 c2118.5352 -1981.9658 2121.958 -1984.3906 2125.9668 -1985.1211 Cf1903.208 -1967.5215 m1904.4497 -1967.9619 1905.6538 -1968.7617 1906.8193 -1969.373 c1919.2935 -1975.9131 1931.4912 -1983.9053 1941.9971 -1993.2969 c1952.8438 -2002.9932 1961.6084 -2015.2461 1969.8555 -2027.1455 c1971.8018 -2029.9531 1973.7773 -2032.7393 1975.8135 -2035.4824 c1977.2422 -2037.4092 1979.2607 -2038.3105 1981.0254 -2039.8506 c1981.4707 -2040.2393 1982.2637 -2040.9697 1983.126 -2041.8652 C1981.6582 -2044.3242 1979.7822 -2045.9736 1976.4873 -2044.9131 c1971.7627 -2043.3906 1967.7744 -2039.249 1963.5869 -2036.6914 c1961.084 -2035.1641 1958.8887 -2032.5664 1956.5215 -2030.7744 c1953.8906 -2028.7842 1951.1875 -2026.9111 1948.4492 -2025.0732 c1942.4316 -2021.0322 1936.5791 -2017.0654 1931.4736 -2011.873 c1922.7451 -2002.9941 1914.3813 -1992.7168 1908.668 -1981.6465 c1906.4795 -1977.4053 1904.376 -1973.1133 1903.0205 -1968.5244 c1903.0625 -1968.666 1902.9243 -1967.9961 1902.7954 -1967.4268 C1902.9639 -1967.457 1903.1113 -1967.4873 1903.208 -1967.5215 cf*U2123.0566 -2058.1426 m2118.0547 -2054.4824 2118.0352 -2045.6055 2116.334 -2040.1826 c2113.834 -2032.2119 2101.2832 -2035.6162 2103.7988 -2043.6377 c2106.8721 -2053.4375 2107.5596 -2062.8301 2116.4941 -2069.3672 c2119.3604 -2071.4648 2123.7354 -2069.8564 2125.3877 -2067.0352 c2127.3174 -2063.7412 2125.9092 -2060.2305 2123.0566 -2058.1426 cf2164.3184 -2082.415 m2165.5146 -2083.1621 2164.959 -2082.9727 2164.6553 -2081.5137 c2164.3242 -2079.9258 2164.4941 -2078.1016 2164.5234 -2076.4902 c2164.5859 -2073.0479 2165.0527 -2069.624 2165.1094 -2066.1826 c2165.2471 -2057.7949 2152.2471 -2057.8086 2152.1094 -2066.1826 c2151.9648 -2074.9746 2148.749 -2088.0127 2157.7559 -2093.6396 c2164.8887 -2098.0957 2171.4082 -2086.8447 2164.3184 -2082.415 cf2193.3721 -2024.9199 m2193.2051 -2029.8438 2191.1152 -2034.501 2190.9453 -2039.4834 c2190.6602 -2047.8711 2203.6611 -2047.8428 2203.9453 -2039.4834 c2204.1133 -2034.5596 2206.2031 -2029.9023 2206.3721 -2024.9199 c2206.6572 -2016.5322 2193.6563 -2016.5605 2193.3721 -2024.9199 cf*u1 D3455.5215 -1454.793 m3455.457 -1449.2939 3452.0879 -1443.3691 3449.6387 -1438.5957 c3446.1738 -1431.8438 3441.502 -1425.9043 3438.2588 -1419.0313 c3435.3301 -1412.8232 3432.5059 -1406.5723 3429.3965 -1400.4521 c3425.6006 -1392.9834 3420.8936 -1386.5225 3415.8828 -1379.8418 c3406.2197 -1366.958 3396.3145 -1354.4238 3386.0039 -1342.0518 c3380.9824 -1336.0254 3375.9609 -1330 3370.9385 -1323.9736 c3368.5303 -1321.083 3366.2773 -1317.7002 3363.3066 -1315.3848 c3360.7275 -1313.374 3358.4697 -1310.9658 3356.3018 -1308.5303 c3352.2529 -1303.9805 3348.8477 -1298.8984 3344.8379 -1294.3115 c3342.6758 -1291.8379 3339.9277 -1289.5508 3337.8857 -1286.8916 C3338.3105 -1286.9971 3338.7334 -1287.1025 3339.1572 -1287.2061 c3343.417 -1288.2451 3347.5742 -1288.7197 3351.709 -1290.2314 c3363.0039 -1294.3604 3373.7539 -1301.0332 3384.1299 -1307.0234 c3394.2881 -1312.8887 3403.9844 -1319.4277 3414.0957 -1325.3076 c3423.375 -1330.7031 3433.1592 -1336.7842 3444.3184 -1334.5859 c3447.6133 -1333.9365 3449.9854 -1329.752 3448.8574 -1326.5908 c3445.0918 -1316.0352 3438.2158 -1308.6553 3431.7676 -1299.7891 c3426.0088 -1291.8691 3420.7539 -1283.6729 3415.46 -1275.4482 c3403.3418 -1256.6211 3387.0156 -1240.668 3372.4551 -1223.79 c3365.7627 -1216.0342 3358.4775 -1208.7559 3352.2266 -1200.6426 c3349.3184 -1196.8701 3346.377 -1193.1641 3343.0332 -1189.7646 c3341.04 -1187.7373 3338.623 -1186.1982 3336.8535 -1183.9824 c3335.082 -1181.7656 3333.3174 -1179.542 3331.54 -1177.3291 c3325.0498 -1169.2471 3318.1758 -1161.6074 3310.2158 -1154.9404 c3306.2275 -1151.5996 3301.5537 -1147.2969 3297.9912 -1142.5996 C3301.8447 -1143.0303 3305.6992 -1143.9365 3309.415 -1144.5449 c3316.9258 -1145.7764 3324.4629 -1145.4727 3332.0459 -1145.5449 c3339.6465 -1145.6182 3347.2393 -1145.9004 3354.8086 -1146.6035 c3362.3359 -1147.3018 3369.4316 -1149.4004 3376.7383 -1151.2432 c3383.9395 -1153.0605 3391.0957 -1154.9912 3398.0391 -1157.6494 c3405.0879 -1160.3486 3411.3496 -1164.7295 3418.2432 -1167.8057 c3424.915 -1170.7822 3431.7686 -1173.4033 3438.2061 -1176.8789 c3444.085 -1180.0527 3449.4414 -1184.2617 3456.4551 -1181.6738 c3459.0117 -1180.7305 3461.4922 -1178.4258 3461.2266 -1175.4063 c3460.5469 -1167.6719 3455.0107 -1162.3906 3451.1387 -1156.0723 c3446.4521 -1148.4248 3438.917 -1142.4648 3433.9473 -1134.9473 c3428.4766 -1126.6729 3423.1738 -1118.2891 3417.4844 -1110.1602 c3414.5898 -1106.0254 3410.7627 -1102.1016 3408.5107 -1097.5967 c3405.9414 -1092.457 3403.3711 -1087.3164 3400.8008 -1082.1768 c3396.2217 -1073.0176 3392.0879 -1063.6494 3387.1367 -1054.6836 c3382.1563 -1045.665 3378.0098 -1036.3535 3372.3652 -1027.7397 c3362.9746 -1013.4111 3352.5127 -998.9463 3346.8359 -982.6353 C3348.584 -983.0732 3350.3232 -983.6602 3351.9297 -984.417 c3356.4961 -986.5669 3360.1074 -992.0811 3363.3574 -995.771 c3367.6006 -1000.5894 3372.6152 -1004.2783 3377.5898 -1008.3174 c3380.2305 -1010.4614 3382.9102 -1012.5557 3385.6348 -1014.5923 c3388.5 -1016.7344 3392.7617 -1018.2695 3395.2422 -1020.7432 c3399.2285 -1024.7197 3403.5508 -1028.5713 3409.0488 -1030.2012 c3415.6084 -1032.146 3422.0303 -1027.7222 3422.8789 -1021.1699 c3423.6973 -1014.8584 3419.4648 -1009.8643 3416.6494 -1004.6494 c3415.3604 -1002.2607 3414.7129 -999.5293 3413.7617 -996.9966 c3412.4287 -993.4443 3410.4375 -990.4893 3408.3682 -987.3423 c3400.7783 -975.7949 3394.9951 -963.2612 3387.376 -951.7305 c3379.3193 -939.5371 3370.5068 -927.8589 3364.5029 -914.4648 c3361.6924 -908.1953 3359.3516 -901.6968 3357.4238 -895.1055 c3355.2813 -887.7822 3351.9199 -880.7949 3348.6885 -873.8848 c3345.7783 -867.6636 3342.502 -861.7441 3340.4209 -855.188 c3338.0273 -847.6475 3334.9844 -840.3291 3331.8887 -833.0562 c3331.2148 -831.4727 3330.5176 -829.9019 3329.833 -828.3247 C3330.9199 -827.4185 3332.0117 -826.519 3333.1094 -825.6333 c3339.4492 -820.5195 3330.8945 -811.7539 3324.4785 -816.0313 C3323.668 -814.1797 3322.8516 -812.333 3322.0508 -810.4751 c3319.3809 -804.2754 3310 -807.7393 3310 -813.7559 C3310 -816 L3310 -818.7227 3311.1934 -820.6157 3312.8525 -821.6909 C3313.2744 -822.6543 3313.6963 -823.6167 3314.1201 -824.5791 C3306.877 -830.605 3299.4775 -836.4067 3290.8418 -840.394 c3277.8447 -846.395 3264.7168 -852.4595 3251.5332 -858.0674 c3237.2168 -864.1567 3223.5742 -871.5249 3209.1318 -877.3906 c3202.3574 -880.1426 3195.6152 -882.9829 3188.9795 -886.0557 c3181.7471 -889.4043 3175.2031 -894.2021 3168.2734 -898.1519 c3155.4063 -905.4868 3142.0342 -911.9722 3128.6895 -918.3833 c3122.3584 -921.4248 3116.0479 -924.5034 3109.8418 -927.7944 c3104.1582 -930.8076 3098.7871 -935.0664 3092.835 -937.3525 c3083.9072 -940.7817 3073.4004 -945.8237 3068.8887 -954.7852 c3066.3486 -959.8301 3066.5791 -965.439 3071.5166 -968.8569 c3075.835 -971.8467 3081.0273 -971.3008 3085.9639 -972.0376 c3091.5156 -972.8672 3097.168 -973.731 3102.7637 -974.7339 c3109.4346 -975.9292 3116.0566 -977.4727 3122.8086 -978.2256 c3137.0986 -979.8188 3152.0195 -977.9785 3166.3926 -978.0459 c3181.2402 -978.1152 3196.1035 -978.4839 3210.8789 -980.0347 c3217.7139 -980.752 3224.6406 -980.4497 3231.5146 -980.4497 c3236.2998 -980.4497 3241.8721 -979.811 3246.9395 -980.5112 C3246.6406 -980.9038 3246.3604 -981.2705 3246.1406 -981.5913 c3244.6221 -983.8057 3242.9746 -985.9238 3241.4902 -988.1616 c3237.7969 -993.7285 3235.0566 -999.9414 3230.6563 -1005.0181 c3220.4785 -1016.7627 3208.2891 -1026.7314 3197.3105 -1037.7056 c3185.8262 -1049.1855 3174.2832 -1060.6172 3162.0781 -1071.3359 c3149.9082 -1082.0244 3136.6309 -1091.5254 3123.9766 -1101.6348 c3112.9424 -1110.4512 3101.7988 -1119.293 3091.4346 -1128.8955 c3088.1699 -1131.9199 3085.1309 -1135.2754 3082.9072 -1139.1494 c3079.9902 -1144.2314 3080.793 -1148.3945 3082.0977 -1153.4199 c3083.4756 -1158.7305 3089.8027 -1159.6152 3094.334 -1159.9717 c3100.9531 -1160.4922 3107.5469 -1161.1797 3114.2012 -1161.2627 c3121.3047 -1161.3506 3128.3672 -1161.2119 3135.4443 -1161.959 c3143.665 -1162.8271 3151.8525 -1162.0342 3160.0869 -1161.3535 c3169.2783 -1160.5947 3178.4326 -1160.3691 3187.6328 -1159.9082 c3191.0488 -1159.7373 3194.6279 -1159.2607 3198.2031 -1159.0059 C3196.3359 -1160.4775 3194.4268 -1161.9502 3192.6484 -1163.7227 c3187.7949 -1168.5605 3182.8506 -1173.21 3177.1738 -1177.0752 c3165.1523 -1185.2578 3154.4844 -1194.9639 3141.7305 -1202.1729 c3129.1836 -1209.2646 3115.8818 -1214.915 3103.3008 -1221.9502 c3097.2363 -1225.3418 3091.6455 -1229.4092 3085.7393 -1233.043 c3079.5088 -1236.8779 3073.0176 -1240.2656 3066.832 -1244.1797 c3064.6992 -1245.5293 3063.5254 -1247.2959 3061.7803 -1248.9648 c3060.1035 -1250.5684 3058.1377 -1251.9033 3056.3193 -1253.334 c3052.7227 -1256.1641 3048.3564 -1261.1709 3050.1426 -1266.2119 c3052.3037 -1272.3145 3060.4199 -1274.1797 3065.9219 -1276.4727 c3073.3467 -1279.5674 3081.0508 -1281.9639 3088.9199 -1283.6152 c3092.3887 -1284.3438 3096.043 -1286.5498 3099.3184 -1287.9189 c3102.5859 -1289.2852 3105.8711 -1290.6006 3109.1924 -1291.8291 c3116.752 -1294.626 3124.4697 -1296.0391 3132.3984 -1297.3096 c3139.9072 -1298.5127 3147.4473 -1299.543 3155.0215 -1300.2324 c3163.0879 -1300.9658 3171.1729 -1300.5742 3179.2402 -1301.1416 c3183.877 -1301.4668 3188.1162 -1303.5195 3192.7695 -1303.0967 c3194.333 -1302.9551 3195.9014 -1302.6855 3197.4648 -1302.4824 C3195.7598 -1305.2041 3193.7129 -1307.7324 3191.5898 -1310.1484 c3187.2568 -1315.0771 3182.7871 -1319.9727 3178.2852 -1324.7461 c3168.2793 -1335.3555 3156.9697 -1344.5742 3147.1191 -1355.3691 c3137.1348 -1366.3096 3128.6787 -1378.6172 3117.9121 -1388.7969 c3113.0664 -1393.3789 3107.8555 -1397.2969 3101.9297 -1400.376 c3099.7178 -1401.5254 3098.3477 -1404.7393 3096.71 -1406.5938 c3094.582 -1409.002 3092.4199 -1411.373 3090.7734 -1414.1504 c3082.3848 -1428.3057 3104.167 -1431.6426 3113.3057 -1431.8799 c3119.4658 -1432.04 3125.2305 -1433.2744 3131.3418 -1433.9541 c3138.7539 -1434.7783 3145.9512 -1434.4873 3153.2617 -1436.3037 c3159.7617 -1437.9189 3165.7158 -1441.0918 3172.0508 -1443.2031 c3179.6318 -1445.7295 3187.0273 -1448.6162 3194.9609 -1449.7354 c3201.832 -1450.7061 3208.7539 -1451.2197 3215.6572 -1451.8945 c3223.3613 -1452.6475 3230.6543 -1454.46 3238.1924 -1456.1211 c3240.1807 -1456.5596 3242.1836 -1456.9473 3244.1963 -1457.2861 C3243.9102 -1471.6963 3243.2559 -1486.0967 3243.2656 -1500.5117 c3243.2705 -1507.543 3243.5039 -1514.5713 3244.041 -1521.582 c3244.6025 -1528.9053 3246.8457 -1536.041 3248.0537 -1543.2871 c3250.209 -1556.2207 3249.1973 -1569.751 3249.1973 -1582.8125 c3249.1973 -1596.501 3251.916 -1609.9033 3255.2803 -1623.1445 c3258.5674 -1636.0811 3262.8896 -1648.7852 3268.1631 -1661.0449 c3271.085 -1667.8389 3271.2871 -1675.4873 3273.1416 -1682.5947 c3274.5381 -1687.9463 3275.7461 -1694.1445 3275.8955 -1699.6777 c3276.1211 -1708.0439 3289.1211 -1708.0664 3288.8955 -1699.6777 c3288.7393 -1693.8887 3286.6934 -1688.3994 3286.4688 -1682.6875 c3286.3301 -1679.1504 3284.7402 -1675.376 3284.1152 -1671.8574 c3283.3516 -1667.5547 3282.668 -1663.3027 3281.3818 -1659.1152 c3279.3887 -1652.623 3276.1113 -1646.3525 3273.873 -1639.9033 c3271.377 -1632.7061 3269.2617 -1625.3799 3267.3867 -1617.999 c3265.7197 -1611.4395 3264.3672 -1604.8027 3263.2578 -1598.1279 c3261.9941 -1590.5254 3262.1973 -1582.9941 3262.1973 -1575.3066 c3262.1973 -1560.9414 3262.1416 -1547.1191 3259.334 -1532.9639 c3257.9912 -1526.1982 3256.8359 -1519.917 3256.5234 -1512.9971 c3256.1699 -1505.1709 3256.2295 -1497.3281 3256.3574 -1489.4971 c3256.5273 -1479.1855 3256.9023 -1468.8799 3257.1367 -1458.5703 C3257.9834 -1458.5898 3258.8301 -1458.5967 3259.6768 -1458.5859 c3267.0029 -1458.4941 3274.3125 -1457.2725 3281.5967 -1456.5938 c3296.5576 -1455.1992 3311.9561 -1456.1777 3326.9697 -1456.1777 c3343.1885 -1456.1777 3359.4111 -1456.1328 3375.5996 -1457.2715 c3390.8457 -1458.3438 3405.7129 -1462.0586 3420.9814 -1463.1396 c3428.3662 -1463.6631 3435.7988 -1463.459 3443.1973 -1463.459 c3448.6719 -1463.459 3455.6016 -1461.6777 3455.5215 -1454.793 cf0 D3432.2744 -1450.459 m3416.8936 -1450.459 3402.3955 -1447.2021 3387.25 -1445.3711 c3355.5898 -1441.543 3323.1719 -1443.1777 3291.3477 -1443.1777 c3279.9668 -1443.1777 3268.6729 -1445.6055 3257.3281 -1445.5264 C3257.333 -1444.6426 3257.3428 -1443.7578 3257.3428 -1442.874 c3257.3428 -1411.6006 3258.0918 -1380.2207 3256.877 -1348.9678 c3256.3262 -1334.8008 3255.6895 -1320.5947 3257.3428 -1306.4746 c3259.0811 -1291.6338 3259.5674 -1276.6602 3259.7207 -1261.7305 c3259.8594 -1248.1484 3259.7695 -1234.5615 3259.7695 -1220.9785 c3259.7695 -1206.4238 3264.4707 -1192.4668 3264.624 -1177.833 c3264.7119 -1169.4463 3251.7109 -1169.4551 3251.624 -1177.833 c3251.5488 -1185.0615 3250.5996 -1192.0762 3249.2246 -1199.1621 c3248.5176 -1202.8096 3247.7373 -1206.4434 3247.002 -1210.0859 c3246.1934 -1214.0908 3246.7695 -1218.6602 3246.7695 -1222.7383 c3246.7695 -1237.5225 3246.874 -1252.3105 3246.6523 -1267.0938 c3246.4189 -1282.708 3244.8184 -1298.0869 3243.6611 -1313.6338 c3242.5127 -1329.0508 3243.8428 -1344.5732 3244.249 -1359.9941 c3244.9844 -1387.9668 3244.7988 -1416.125 3244.4043 -1444.1416 C3238.749 -1442.9941 3233.1963 -1441.3779 3227.5078 -1440.4014 c3220.1465 -1439.1387 3212.6631 -1438.6191 3205.2334 -1437.9219 c3198.001 -1437.2422 3191.5 -1435.998 3184.6094 -1433.7012 c3177.1924 -1431.2285 3170.0146 -1428.4502 3162.7266 -1425.6621 c3156.6533 -1423.3379 3150.2188 -1422.2549 3143.7744 -1421.624 c3140.2363 -1421.2783 3136.6777 -1421.4111 3133.1348 -1421.1533 c3129.2949 -1420.873 3125.5059 -1419.8467 3121.6934 -1419.3184 c3116.54 -1418.6045 3109.2031 -1419.8828 3103.7676 -1418.0205 C3104.5664 -1417.1572 3105.4326 -1416.3086 3105.9023 -1415.7861 c3108.2109 -1413.2168 3109.6279 -1411.0254 3111.4795 -1409.9902 c3117.6709 -1406.5293 3123.1572 -1401.7207 3128.2861 -1396.8721 c3139.5273 -1386.2441 3148.3711 -1373.1328 3158.8838 -1361.7607 c3169.1445 -1350.6611 3181.0527 -1341.2471 3191.1182 -1329.9707 c3199.6436 -1320.4219 3209.7998 -1311.2031 3213.4209 -1298.4932 c3214.4766 -1294.7891 3212.1387 -1291.8145 3208.8809 -1290.498 c3204.0488 -1288.5439 3198.9336 -1289.2793 3193.9189 -1289.958 c3191.2148 -1290.3242 3189.0801 -1289.6484 3186.4297 -1289.0938 c3182.8848 -1288.3535 3179.208 -1288.0977 3175.5996 -1287.9277 c3161.5234 -1287.2656 3147.9209 -1286.708 3133.9551 -1284.4697 c3121.1133 -1282.4111 3109.6465 -1278.2529 3097.6895 -1273.2559 c3091.3047 -1270.5879 3084.542 -1269.334 3077.9688 -1267.1582 c3073.8047 -1265.7783 3069.7461 -1264.1279 3065.7539 -1262.3281 C3065.8574 -1262.2471 3065.9609 -1262.166 3066.0645 -1262.0859 c3068.7451 -1260.0176 3071.3428 -1258.082 3073.4209 -1255.3857 c3073.4648 -1255.3291 3073.4893 -1255.292 3073.5254 -1255.2432 C3073.7676 -1255.1357 3074.1445 -1254.9287 3074.7471 -1254.5479 c3076.6299 -1253.3564 3078.5625 -1252.2422 3080.4883 -1251.1221 c3084.4229 -1248.832 3088.3984 -1246.6152 3092.3008 -1244.2686 c3099.7656 -1239.7803 3106.8008 -1234.7793 3114.4922 -1230.6338 c3122.1396 -1226.5127 3130.0156 -1222.8262 3137.7813 -1218.9355 c3153.1973 -1211.2119 3167.0684 -1201.4414 3180.6035 -1190.8154 c3187.0371 -1185.7656 3193.4951 -1181.0479 3199.3857 -1175.3369 c3205.7559 -1169.1621 3213.2363 -1164.8867 3217.6201 -1156.8418 c3219.6416 -1153.1328 3217.8535 -1148.4844 3213.7363 -1147.2939 c3207.9316 -1145.6152 3201.8506 -1145.9072 3195.8926 -1146.3145 c3188.3848 -1146.8281 3180.8945 -1146.9619 3173.3838 -1147.3555 c3165.7744 -1147.7539 3158.1904 -1148.5654 3150.5889 -1149.0791 c3142.3945 -1149.6318 3134.5938 -1148.624 3126.4326 -1148.3477 c3119.3965 -1148.1094 3112.3652 -1148.3975 3105.333 -1147.9385 c3102.3281 -1147.7422 3099.377 -1147.085 3096.3682 -1147.0508 c3095.4443 -1147.0391 3094.5234 -1146.9805 3093.6035 -1146.9102 C3093.5977 -1141.9424 3108.9014 -1130.8047 3110.9893 -1129.0313 c3135.5059 -1108.2168 3161.9932 -1089.7676 3185.3633 -1067.6382 c3197.2285 -1056.4038 3208.5088 -1044.5757 3220.4531 -1033.4258 c3225.8018 -1028.4326 3231.1563 -1023.4546 3236.2236 -1018.1729 c3241.3691 -1012.8101 3245.1328 -1007.042 3249.1738 -1000.873 c3251.7031 -997.0107 3253.8359 -993.0459 3256.5576 -989.2891 c3259.4307 -985.3237 3261.7617 -981.3335 3262.1973 -976.377 c3262.377 -974.3354 3260.873 -971.3857 3258.9785 -970.54 c3252.4971 -967.6465 3246.208 -967 3239.1924 -967 C3215.9229 -967 L3208.7998 -967 3201.5244 -965.9102 3194.3887 -965.5166 c3186.2959 -965.0703 3178.1875 -965.0391 3170.0859 -964.9595 c3154.9795 -964.8105 3139.6934 -966.2734 3124.6289 -965.3257 c3120.875 -965.0898 3117.2334 -964.3584 3113.6133 -963.3691 c3110.6572 -962.5605 3107.6602 -962.4419 3104.6367 -961.9004 c3098.2842 -960.7617 3091.8193 -959.6641 3085.4141 -958.9707 c3084.2246 -958.8418 3083.041 -958.7803 3081.8643 -958.6685 C3085.0156 -955.1431 3089.627 -952.9043 3093.8203 -950.9399 c3095.4717 -950.1665 3097.1816 -949.5322 3098.8984 -948.9229 c3101.8975 -947.8574 3104.4453 -945.8989 3107.1533 -944.249 c3113.6992 -940.2617 3120.5537 -936.7881 3127.4229 -933.4004 c3140.5605 -926.9224 3153.7988 -920.6797 3166.7441 -913.8154 c3173.3496 -910.313 3179.8262 -906.5825 3186.1621 -902.6147 c3192.9053 -898.3916 3199.9385 -895.187 3207.2813 -892.1108 c3218.8008 -887.2856 3230.3555 -882.8076 3241.5459 -877.2339 c3252.7441 -871.6567 3264.1172 -866.4502 3275.5439 -861.3584 c3285.668 -856.8472 3296.4609 -852.8687 3305.8887 -847.0156 c3310.6855 -844.0371 3315.1621 -840.5786 3319.5342 -836.9795 C3322.8262 -844.668 3325.9424 -852.4253 3328.4805 -860.4219 c3332.8301 -874.126 3341.2861 -886.1953 3345.3535 -900.0972 c3349.4395 -914.0664 3355.6582 -927.314 3363.5313 -939.5137 c3371.0938 -951.231 3379.6553 -962.3467 3386.0107 -974.8032 c3389.1309 -980.9194 3392.5713 -986.8169 3396.2891 -992.5884 c3397.9326 -995.1401 3400.0488 -997.647 3401.2275 -1000.4521 c3402.501 -1003.4863 3403.2852 -1006.689 3404.6992 -1009.6763 c3405.4668 -1011.3008 3406.3613 -1012.8423 3407.2764 -1014.374 C3405.9502 -1013.1797 3404.7188 -1011.835 3403.4961 -1010.6157 c3400.9063 -1008.0322 3396.5977 -1006.4644 3393.5566 -1004.3506 c3387.7949 -1000.3457 3382.5811 -995.5732 3376.9951 -991.3311 c3372.4365 -987.8696 3369.0176 -982.3691 3364.9795 -978.3037 c3358.3242 -971.6035 3345.4473 -966.1377 3336.168 -970.0723 C3335.7031 -970.2056 3335.293 -970.436 3334.9395 -970.7646 C3332.4941 -972.582 3331.2236 -975.0063 3331.9531 -978.105 c3336.4404 -997.1743 3347.6406 -1013.8467 3358.2852 -1029.9717 c3369.1221 -1046.3862 3377.3594 -1064.3071 3386.1494 -1081.8848 c3390.8555 -1091.2949 3394.9004 -1101.5625 3401.2949 -1109.9199 c3407.1689 -1117.5967 3412.4209 -1125.7344 3417.6953 -1133.8262 c3423.083 -1142.0928 3429.0322 -1149.4434 3435.2207 -1157.1035 c3436.8975 -1159.1797 3438.5195 -1161.2129 3440.1094 -1163.291 C3438.5391 -1162.5615 3436.9551 -1161.8633 3435.3838 -1161.1621 c3428.7236 -1158.1914 3421.4199 -1155.8271 3415.2803 -1151.8564 c3402.7617 -1143.7607 3387.6621 -1140.6426 3373.4385 -1136.9932 c3358.6309 -1133.1934 3343.5996 -1132.6191 3328.3535 -1132.5156 c3320.8223 -1132.4639 3313.8154 -1132.2031 3306.3926 -1130.8867 c3299.3945 -1129.6465 3292.5469 -1128.8213 3285.5215 -1130.3037 c3282.2764 -1130.9883 3279.793 -1135.1211 3280.9824 -1138.2988 c3287.542 -1155.832 3305.4365 -1166.5859 3317.2002 -1180.2813 c3320.4258 -1184.0371 3323.4863 -1187.9346 3326.5703 -1191.8066 c3330.0098 -1196.125 3334.5352 -1199.4375 3338.1553 -1203.6758 c3341.4492 -1207.5313 3344.3613 -1211.6973 3347.6211 -1215.582 c3351.1172 -1219.7471 3355.0898 -1223.5225 3358.6631 -1227.6309 c3372.9961 -1244.1123 3388.5547 -1259.9219 3401.3008 -1277.7031 c3407.0342 -1285.7021 3411.9922 -1294.2549 3417.6602 -1302.3184 c3421.8535 -1308.2842 3426.9697 -1313.8252 3431.0586 -1319.9346 C3429.2598 -1319.0449 3427.5469 -1318.0371 3426.0078 -1317.1836 c3420.1699 -1313.9434 3414.5195 -1310.5518 3409.0078 -1306.8096 c3397.5547 -1299.0352 3385.1426 -1292.4639 3372.916 -1286.0166 c3367.124 -1282.9629 3361.2666 -1280.083 3355.165 -1277.6953 c3350.3828 -1275.8252 3345.2129 -1275.2988 3340.2285 -1274.0908 c3336.2207 -1273.1201 3331.2588 -1271.6953 3327.2197 -1273.1963 c3319.6748 -1276 3322.0381 -1284.3379 3324.5371 -1290.0391 c3326.8613 -1295.3457 3331.8174 -1299.3311 3335.6455 -1303.5039 c3340.1191 -1308.3809 3343.7646 -1313.9639 3348.167 -1318.9111 c3350.377 -1321.3936 3352.8525 -1323.5928 3355.4688 -1325.6328 c3358.3232 -1327.8584 3360.6768 -1331.8828 3363.002 -1334.6729 C3379.3232 -1354.2578 L3389.7188 -1366.7314 3399.5146 -1379.5459 3409.2568 -1392.5352 c3418.043 -1404.249 3423.2412 -1418.0654 3429.6963 -1431.1133 c3432.9082 -1437.6074 3437.8809 -1443.0107 3440.6201 -1449.8457 c3440.7139 -1450.0801 3440.8115 -1450.3115 3440.9063 -1450.5449 C3438.0273 -1450.5479 3435.1377 -1450.459 3432.2744 -1450.459 cf*U3841 -2108.0508 m3840.7148 -2108.0391 3840.4297 -2108.0313 3840.1455 -2108.0186 c3833.3545 -2107.7246 3826.7432 -2106.5889 3820.6279 -2103.5322 c3814.1953 -2100.3174 3807.6895 -2097.2813 3800.9336 -2094.8047 c3790.9482 -2091.1465 3780.376 -2089.1865 3770.3438 -2085.5469 c3762.8584 -2082.8311 3754.2646 -2078.7285 3752.5361 -2070.2236 c3752.0264 -2067.7139 3752.3887 -2064.748 3752.2109 -2062.1777 c3751.9668 -2058.6504 3751.5488 -2055.1328 3751.1797 -2051.6172 c3750.3574 -2043.8008 3750.0225 -2036.0547 3750.084 -2028.1982 c3750.2061 -2012.7012 3753.2773 -1997.8857 3755.4736 -1982.6172 c3756.4922 -1975.5313 3757.1758 -1968.4316 3757.3291 -1961.2734 c3757.4941 -1953.5703 3759.0137 -1945.9043 3759.1523 -1938.1494 c3759.3662 -1926.1035 3757.8789 -1913.8789 3756.2305 -1901.96 c3755.0449 -1893.3916 3751.1309 -1880.6504 3756.4551 -1872.8613 c3759.7578 -1868.0313 3755.3047 -1863.4238 3750.708 -1863.3799 C3775.7539 -1858.9297 3800.8594 -1854.7568 3825.8311 -1849.9727 c3830.9053 -1849.001 3835.958 -1847.9219 3841 -1846.7939 C3841 -1833.4775 L3836.6738 -1834.459 3832.3408 -1835.4053 3827.998 -1836.3105 c3818.0186 -1838.3916 3807.5186 -1839.0713 3797.6582 -1841.4688 c3778.8027 -1846.0527 3759.5225 -1848.5313 3740.5068 -1852.3379 c3720.6963 -1856.3037 3700.4902 -1860.4404 3680.4541 -1863.0811 c3661.5527 -1865.5723 3642.2168 -1863.541 3623.249 -1863.1357 c3614.1484 -1862.9414 3605.0527 -1864.5166 3595.9492 -1864.9844 c3585.458 -1865.5234 3574.9375 -1865.501 3564.4346 -1865.5088 c3545.3291 -1865.5225 3526.3145 -1867.2285 3507.2285 -1867.8125 c3497.3389 -1868.1152 3487.834 -1867.1445 3478.0273 -1866.0332 c3474.0684 -1865.584 3470.1621 -1865.1084 3466.2188 -1864.5928 c3463.6084 -1864.252 3459.8398 -1864.5723 3456.9258 -1863.748 C3458.3984 -1857.4238 3462.1914 -1851.1514 3464.2266 -1845.2129 c3465.6299 -1841.1172 3466.373 -1836.8516 3467.4697 -1832.6689 c3468.9883 -1826.876 3472.6504 -1821.1641 3475.1211 -1815.7129 c3484.1816 -1795.7178 3493.5928 -1775.7734 3501.877 -1755.4492 c3505.9805 -1745.3818 3509.8574 -1735.2236 3514.1162 -1725.2207 c3518.4043 -1715.1484 3523.8125 -1705.7188 3528.4424 -1695.8203 c3536.2861 -1679.0498 3546.3418 -1663.5547 3553.2285 -1646.4619 c3556.8398 -1637.501 3560.9414 -1629.0264 3565.3145 -1620.4346 c3568.8535 -1613.4795 3573.2344 -1607.0664 3575.252 -1599.4648 c3578.3867 -1587.6465 3572.1621 -1572.7227 3557.8223 -1578.0439 c3550.7285 -1580.6758 3544.1719 -1583.7314 3536.9785 -1586.1289 c3525.3281 -1590.0127 3513.6777 -1593.8965 3502.0273 -1597.7793 c3492.2891 -1601.0244 3482.3691 -1603.541 3472.416 -1606.0322 c3469.9854 -1606.6406 3467.7803 -1607.7695 3465.6758 -1609.1387 C3467.8633 -1602.001 3471.5898 -1594.915 3474.8926 -1588.21 c3479.0547 -1579.7617 3485 -1571.835 3489.6523 -1563.583 c3494.7363 -1554.5674 3500.4707 -1546.1475 3505.1533 -1536.8701 c3509.8438 -1527.5781 3514.9922 -1518.5469 3519.1348 -1509.0156 c3523.1758 -1499.7197 3527.8701 -1490.7051 3532.8555 -1481.8857 c3534.9404 -1478.1973 3536.5957 -1474.3096 3538.7275 -1470.6689 c3541.0205 -1466.7529 3545.7422 -1464.1895 3547.7168 -1460.2402 c3551.9033 -1451.8691 3555.8809 -1443.3535 3560.5723 -1435.249 c3570.5586 -1417.998 3577.2881 -1397.0918 3592.4307 -1383.4521 c3606.8877 -1370.4307 3617.3662 -1353.3926 3630.1631 -1338.707 c3636.3691 -1331.584 3643.0859 -1324.9199 3649.3516 -1317.8477 c3654.8867 -1311.5996 3661.9385 -1303.9844 3664.877 -1296.0664 c3669.2119 -1284.3896 3679.918 -1271.7988 3674.5859 -1258.6299 c3673.1309 -1255.0352 3670.4277 -1253.5049 3666.5898 -1254.0898 c3662.2471 -1254.751 3659.8838 -1257.2813 3657.2119 -1260.5381 c3654.1006 -1264.3301 3647.5205 -1265.0293 3643.1934 -1266.8818 c3630.1357 -1272.4697 3616.7031 -1278.1445 3604.2344 -1284.9609 c3597.8301 -1288.4619 3590.002 -1290.1377 3583.0957 -1292.4395 c3575.3281 -1295.0283 3567.5615 -1297.6182 3559.7949 -1300.207 c3551.8115 -1302.8672 3541.7969 -1308.627 3532.9785 -1307.2119 C3534.8809 -1303.5 3538.3047 -1299.6885 3540.4785 -1297.2568 c3541.8994 -1295.667 3544.3301 -1294.6855 3545.29 -1292.7646 c3547.9385 -1287.4688 3550.5859 -1282.1738 3553.2344 -1276.8779 c3558.0605 -1267.2246 3563.0771 -1257.6436 3567.4033 -1247.752 c3571.4727 -1238.4453 3573.418 -1228.9883 3575.4453 -1219.0947 c3577.3857 -1209.6221 3579.2793 -1200.2598 3582.748 -1191.2158 c3586.4648 -1181.5273 3591.4541 -1172.3135 3596.5723 -1163.3086 c3601.5625 -1154.5283 3606.8457 -1145.833 3612.4395 -1137.4248 c3618.5137 -1128.2949 3622.2617 -1117.9951 3628.4434 -1109.0176 c3639.5664 -1092.8672 3652.7295 -1078.4658 3662.8242 -1061.5435 c3667.6973 -1053.373 3671.3008 -1044.5762 3676.3369 -1036.502 c3681.1494 -1028.7866 3686.9863 -1021.7241 3692.4414 -1014.4648 c3703.9268 -999.1777 3714.3994 -982.5205 3722.6465 -965.2676 c3731.4834 -946.7813 3729.9766 -924.875 3735.2656 -905.2896 c3736.7949 -899.6289 3730.6914 -895.2905 3725.7168 -897.9492 c3716.8232 -902.7026 3709.2451 -909.4692 3701.5166 -915.8662 c3692.084 -923.6753 3680.5371 -929.1875 3669.7725 -934.9541 c3651.5137 -944.7349 3632.2949 -952.5459 3613.9912 -962.1558 c3610.7568 -963.8535 3599.9238 -970.9238 3596.2168 -968.0166 c3595.2842 -967.2856 3596.7119 -959.1772 3597.2256 -957.9648 c3599.584 -952.4019 3602.873 -947.2065 3605.9697 -942.0366 c3617.8262 -922.2432 3626.9521 -900.7617 3638.0518 -880.4946 c3649.541 -859.5151 3661.3145 -838.6924 3671.5039 -817.0366 c3681.4316 -795.9395 3691.3203 -774.7852 3701.5273 -753.8208 c3711.5771 -733.1782 3723.7178 -713.748 3734.2236 -693.3569 c3744.2705 -673.855 3752.8213 -653.8291 3759.9717 -633.0962 c3764.4434 -620.127 3769.6738 -607.3257 3773.7197 -594.23 c3777.8125 -580.9844 3779.9736 -567.1758 3783.1318 -553.6943 c3786.21 -540.5566 3792.9434 -528.6372 3798.1729 -516.2935 c3803.2549 -504.2959 3807.9727 -491.8896 3811.418 -479.3188 c3813.0713 -473.2886 3814.5352 -467.2114 3816.252 -461.1982 c3818.1631 -454.5029 3821.4902 -448.2178 3823.7236 -441.6074 c3827.8174 -429.4897 3829.709 -416.6855 3833.6123 -404.5703 c3835.3086 -399.3066 3837.0566 -394.5737 3837.4395 -388.9985 c3837.6885 -385.376 3837.5098 -381.7109 3837.7432 -378.0762 c3837.9834 -374.3345 3839.7207 -370.8311 3839.8672 -367.1538 c3839.9785 -364.3628 3840.3936 -361.7422 3841 -359.2227 C3841 -326.3154 L3840.2598 -326.998 3839.6445 -327.8877 3839.2354 -329.0181 c3837.7666 -333.0806 3835.6641 -336.5879 3833.5195 -340.3081 c3831.042 -344.605 3829.8945 -349.7539 3828.6162 -354.5039 c3825.6455 -365.5425 3824.459 -377.5972 3824.4395 -388.9985 c3824.4316 -393.833 3821.8857 -398.603 3820.4307 -403.1187 c3818.9238 -407.7949 3818.1025 -412.8999 3816.8613 -417.6821 c3813.8926 -429.1226 3811.0645 -440.5566 3805.9102 -451.252 c3801.5293 -460.3413 3800.1777 -471.4453 3797.4121 -481.1152 c3794.1953 -492.3638 3789.5811 -503.8062 3784.8818 -514.5244 c3780.8096 -523.8154 3776.3018 -532.8755 3772.8662 -542.4355 c3768.8174 -553.7051 3767.2295 -565.9741 3764.5967 -577.6294 c3759.6445 -599.5503 3750.709 -620.9541 3743.0537 -642.0684 c3735.2969 -663.46 3724.9023 -683.9624 3713.8955 -703.8433 c3702.7129 -724.043 3691.6934 -744.0044 3681.8691 -764.9331 c3671.8867 -786.1992 3662.1064 -807.5713 3651.4238 -828.499 c3636.6338 -857.4746 3619.7139 -885.3071 3605.6758 -914.6753 c3599.3359 -927.9365 3590.7676 -940.1611 3585.0361 -953.6792 c3581.417 -962.2158 3581.5635 -974.915 3590.6191 -979.7095 c3599.1484 -984.2251 3609.8125 -978.834 3617.4814 -974.978 c3628.6533 -969.3604 3640.083 -964.3096 3651.3486 -958.8662 c3665.6279 -951.9663 3679.667 -944.5835 3693.4375 -936.7207 c3702.9395 -931.2954 3711.0361 -923.9224 3719.7021 -917.3989 C3717.5752 -932.3145 3716.6973 -947.6694 3710.2441 -961.1694 c3701.6865 -979.0718 3690.2139 -996.0825 3678.2314 -1011.8535 c3672.6953 -1019.1406 3667.1602 -1026.3672 3662.4902 -1034.2544 c3657.5996 -1042.5156 3653.8594 -1051.3652 3648.8154 -1059.5811 c3638.1367 -1076.9717 3623.332 -1091.5146 3612.9961 -1109.0684 c3610.7334 -1112.9121 3609.4043 -1117.2207 3607.2734 -1121.1553 c3604.5576 -1126.168 3601.1602 -1130.792 3598.1436 -1135.6211 c3592.8115 -1144.1543 3587.5596 -1152.7305 3582.6602 -1161.5205 c3577.9375 -1169.9941 3573.8359 -1178.7656 3570.2129 -1187.7598 c3566.2627 -1197.5664 3564.4639 -1208.0518 3562.3496 -1218.3721 c3557.7109 -1241.0078 3546.9766 -1260.3809 3536.7129 -1280.9082 c3535.0527 -1284.2295 3535.0596 -1284.5234 3532.3174 -1287.0117 c3529.8789 -1289.2246 3527.9219 -1292.0664 3525.9941 -1294.7139 c3522.4482 -1299.582 3519.207 -1305.2539 3518.6143 -1311.3291 c3518.4063 -1313.4609 3519.9766 -1315.9785 3521.834 -1316.9414 c3532.6602 -1322.5586 3543.3125 -1320.1074 3554.1914 -1315.9297 c3567.666 -1310.7578 3581.5947 -1306.6279 3595.2891 -1302.0625 c3609.4453 -1297.3438 3622.4688 -1290.3115 3636.1758 -1284.3701 c3643.1953 -1281.3271 3649.8809 -1277.9922 3657.1914 -1275.7051 c3658.6299 -1275.2549 3659.8887 -1274.5557 3661.1152 -1273.7793 C3660.3213 -1275.7559 3659.373 -1277.6689 3658.5215 -1279.4482 c3655.5313 -1285.7031 3652.6338 -1291.998 3648.7725 -1297.7559 c3638.1055 -1313.6641 3622.9346 -1326.457 3610.7031 -1341.1299 c3604.5576 -1348.5029 3599.1875 -1356.5127 3593.4268 -1364.1816 c3588.2422 -1371.084 3580.7598 -1375.7588 3575.2969 -1382.4746 c3568.916 -1390.3193 3564.1953 -1400.2021 3559.502 -1409.123 c3555.0938 -1417.501 3550.7598 -1425.8232 3546.291 -1434.1719 c3542.5303 -1441.1963 3539.8887 -1449.873 3534.2988 -1455.627 c3528.001 -1462.1084 3524.6611 -1469.9639 3520.2764 -1477.7197 c3515.3115 -1486.5039 3510.8896 -1495.5986 3506.8691 -1504.8496 c3502.707 -1514.4229 3497.3271 -1523.5752 3492.6152 -1532.9092 c3483.7441 -1550.4844 3471.2559 -1566.2451 3462.5762 -1583.8662 c3460.7305 -1587.6123 3459.2324 -1591.5371 3457.4971 -1595.3359 c3456.4785 -1597.5664 3455.2578 -1599.6572 3453.9678 -1601.7373 c3452.8086 -1603.6035 3453.3096 -1605.8203 3452.4512 -1607.8057 c3449.9648 -1613.5498 3445.002 -1619.0273 3443.6045 -1625.1357 c3442.5352 -1629.8066 3446.6621 -1634.6211 3451.5996 -1633.1309 c3460.7139 -1630.3799 3467.1592 -1624.0713 3475.0928 -1619.1719 c3479.8506 -1616.2344 3487.4395 -1615.6543 3492.8232 -1614.1982 c3499.0664 -1612.5098 3505.1758 -1610.417 3511.3086 -1608.373 c3517.1338 -1606.4316 3522.959 -1604.4902 3528.7842 -1602.5479 c3534.0332 -1600.7988 3540.3691 -1597.4102 3545.8418 -1596.8115 c3549.3662 -1596.4258 3552.543 -1594.8408 3555.707 -1593.3291 c3558.3564 -1592.0625 3563.0195 -1587.752 3563.2559 -1591.6836 c3563.6934 -1598.9424 3558.377 -1605.4082 3555.3037 -1611.4463 c3550.3516 -1621.1768 3545.8555 -1630.6367 3541.6416 -1640.7344 c3539.7354 -1645.3008 3538.2656 -1650.084 3535.8633 -1654.416 c3533.8604 -1658.0254 3531.2041 -1661.2217 3529.2109 -1664.8447 c3523.5088 -1675.207 3518.9326 -1686.0488 3513.666 -1696.6289 c3503.1309 -1717.791 3494.7061 -1739.5664 3485.4736 -1761.3262 c3480.9082 -1772.0879 3475.6035 -1782.5508 3470.9043 -1793.2646 c3468.5781 -1798.5645 3466.2617 -1803.8691 3463.8955 -1809.1514 c3461.3447 -1814.8457 3457.5684 -1820.6445 3455.7402 -1826.5918 c3453.0771 -1835.251 3451.0029 -1843.6826 3447.625 -1852.1377 c3445.0576 -1858.5645 3439.4961 -1869.501 3448.0283 -1873.9199 c3451.4805 -1875.707 3454.7617 -1876.4023 3458.5889 -1876.9004 c3461.9902 -1877.3428 3465.9443 -1878.4307 3469.2891 -1878.5088 c3482.0322 -1878.8057 3494.4229 -1881.1055 3507.2285 -1880.8125 c3524.3555 -1880.4209 3541.4238 -1878.7676 3558.5586 -1878.5234 c3576.4697 -1878.2676 3594.333 -1878.6289 3612.1797 -1876.7393 c3629.9219 -1874.8604 3648.041 -1877.458 3665.8789 -1877.0693 c3683.627 -1876.6826 3700.9541 -1872.7549 3718.3027 -1869.373 c3728.2842 -1867.4277 3738.29 -1865.5938 3748.3047 -1863.8066 C3747.1543 -1864.251 3746.084 -1865.0527 3745.2305 -1866.3008 c3738.9004 -1875.5586 3741.1855 -1888.2314 3742.6807 -1898.5771 c3744.4834 -1911.0566 3746.0879 -1923.7041 3746.1631 -1936.3291 c3746.2051 -1943.457 3745.6953 -1950.6201 3744.5752 -1957.6592 c3743.3633 -1965.2637 3743.793 -1973.2148 3742.6875 -1980.9033 c3740.4912 -1996.1777 3737.3955 -2011.0107 3737.1055 -2026.5049 c3736.834 -2041.0342 3739.1191 -2055.2773 3739.5195 -2069.7578 c3739.8008 -2079.9121 3746.6309 -2087.6094 3754.9063 -2092.6367 c3763.0977 -2097.6133 3772.7207 -2100.0801 3781.8145 -2102.832 c3787.5703 -2104.5742 3793.4121 -2105.8516 3799.0762 -2107.9268 c3805.8047 -2110.3926 3811.9473 -2114.1064 3818.5498 -2116.833 c3825.4805 -2119.6943 3833.1699 -2121.0322 3841 -2121.4434 C3841 -2108.0508 Lf3075.3867 -213.2275 m3081.5244 -211.186 3087.0996 -206.3442 3092.3027 -202.6426 c3097.1748 -199.1768 3103.0566 -193.9326 3109.417 -195.6084 c3114.3691 -196.9131 3118.6699 -201.6992 3122.5068 -204.8408 c3128.1621 -209.4722 3133.8916 -214.0215 3139.6201 -218.5635 c3151.502 -227.9839 3162.9844 -237.6533 3173.793 -248.2979 c3184.2109 -258.5576 3195.2705 -268.1426 3205.1357 -278.9565 c3209.9512 -284.2339 3213.7236 -290.3032 3217.9346 -296.0591 c3222.4082 -302.1748 3227.0986 -308.1343 3231.8516 -314.0342 c3241.6572 -326.2065 3251.5625 -338.0874 3262.5605 -349.2124 c3267.6064 -354.3179 3272.2988 -359.2837 3276.4375 -365.1709 c3277.7217 -366.9985 3278.9102 -369.3008 3280.2832 -371.3223 C3278.8574 -373.2197 3277.4443 -375.1289 3276.0176 -377.0313 c3267.5313 -388.3462 3259.7148 -400.5264 3249.6357 -410.5049 c3240.46 -419.5894 3229.7852 -426.8267 3220.0762 -435.2637 c3210.2813 -443.7764 3201.7168 -453.6587 3190.9238 -460.9863 c3180.5098 -468.0552 3171.8984 -478.7471 3159.3086 -482.2461 c3151.2432 -484.4873 3154.6729 -497.0303 3162.7656 -494.7813 c3174.6836 -491.4692 3185.0527 -483.0371 3193.8242 -474.6147 c3195.918 -472.605 3199.002 -471.2056 3201.3574 -469.4731 c3203.9258 -467.5845 3206.3936 -465.5562 3208.8164 -463.4854 c3213.9736 -459.0781 3218.7676 -454.2544 3223.6816 -449.583 c3233.0713 -440.6567 3243.7197 -433.2173 3253.46 -424.6699 c3263.6318 -415.7441 3271.1279 -405.0791 3279.1943 -394.3237 c3282.5654 -389.8286 3285.8984 -385.3916 3289.3096 -381.0449 C3292.7891 -385.8877 3302.3105 -382.3335 3300.7998 -375.1353 c3300.3887 -373.1748 3299.3887 -371.6646 3298.1455 -370.3345 C3301.583 -366.395 3305.1699 -362.561 3309.0361 -358.8848 c3313.9453 -354.2163 3318.8838 -349.5923 3323.4463 -344.5771 c3328.5596 -338.957 3332.6309 -332.5171 3337.3066 -326.5479 c3346.6582 -314.6099 3356.8828 -303.3931 3366.1563 -291.3877 c3374.875 -280.1006 3381.8438 -267.7603 3391.9219 -257.5288 c3397.6982 -251.6646 3404.3457 -247.5537 3411.4678 -243.5684 c3413.8467 -242.2368 3416.1816 -240.8555 3418.4072 -239.3472 C3419.25 -246.5405 3419.9912 -253.7461 3421.3418 -260.8726 c3422.2852 -265.8501 3423.7305 -270.5459 3424.3711 -275.5659 c3424.9629 -280.1958 3426.0781 -284.6934 3427.2588 -289.2021 c3428.2969 -293.167 3429.8574 -297.1025 3430.0039 -301.208 c3430.1309 -304.7769 3429.8525 -308.332 3430.7666 -311.8291 c3432.7559 -319.4404 3440.2373 -324.7578 3447.791 -321.2886 c3453.2461 -318.7837 3457.2324 -313.0127 3460.04 -307.9058 c3462.2695 -303.8501 3464.8867 -299.9673 3467.1924 -295.9419 c3469.5537 -291.8184 3471.7031 -286.6689 3474.9961 -283.2026 c3481.5098 -276.3467 3484.3809 -266.9365 3490.875 -260.1001 c3493.0801 -257.7798 3493.8994 -253.9448 3495.0205 -251.0122 c3495.2051 -250.5283 3495.5977 -249.4028 3496.0898 -248.2559 C3496.4551 -249.9238 3496.666 -251.6387 3496.9248 -253.0957 c3497.7969 -257.998 3498.752 -262.6304 3500.8789 -267.168 c3502.7246 -271.1035 3506.9199 -275.2754 3511.25 -276.335 c3517.1484 -277.7769 3521.8262 -275.458 3526.3447 -271.8262 c3532.6406 -266.7656 3538.0449 -259.3452 3541.9268 -252.2979 c3544.0068 -248.522 3546.083 -244.7456 3548.4121 -241.1152 c3548.7051 -240.6592 3549.0068 -240.2192 3549.3145 -239.7861 C3550.8545 -242.4883 3551.8838 -245.5386 3552.6094 -248.5234 C3552.6309 -248.6289 3552.6523 -248.7349 3552.6748 -248.8403 C3552.7129 -249.1216 3552.7637 -249.4844 3552.8281 -249.9507 C3553.2646 -251.5371 3554.2979 -253.0684 3555.0908 -254.4912 c3556.9414 -257.8115 3559.2139 -260.8955 3561.499 -263.9238 c3565.3096 -268.9746 3569.3955 -273.6206 3572.2383 -279.3047 c3576.0332 -286.8931 3579.8438 -294.4741 3583.7119 -302.0254 c3590.8242 -315.9053 3598.6211 -329.1421 3606.5771 -342.5225 c3610.043 -348.3506 3611.9463 -354.7246 3615.9834 -360.2339 c3619.6133 -365.1875 3624.2666 -369.2593 3627.9395 -374.1587 c3631.8164 -379.3315 3636.0859 -384.1543 3639.873 -389.4351 c3644.293 -395.5967 3649.1602 -401.0112 3654.6904 -406.1938 c3659.9209 -411.0962 3665.3193 -415.8027 3670.2773 -420.9883 c3675.3564 -426.3013 3678.8076 -432.5234 3682.1514 -439.0161 c3685.1777 -444.8916 3687.9717 -450.8789 3691.1143 -456.6953 c3694.6328 -463.2085 3699.0039 -468.8843 3703.3867 -474.8057 c3711.1504 -485.292 3712.7266 -497.6558 3712.7891 -510.3584 c3712.8301 -518.7393 3725.8301 -518.7437 3725.7891 -510.3584 c3725.7275 -497.8169 3724.2129 -485.6543 3718.4346 -474.3721 c3715.5332 -468.708 3711.127 -464.0547 3707.5645 -458.8301 c3703.4785 -452.8379 3700.248 -446.2861 3697.0381 -439.8003 c3694.1318 -433.9272 3691.2285 -428.0669 3687.833 -422.4565 c3683.9775 -416.0854 3678.6338 -410.7319 3673.2598 -405.6406 c3667.9238 -400.5859 3662.334 -395.8037 3657.2217 -390.5151 c3652.2852 -385.4087 3648.6396 -379.1465 3644.2666 -373.5767 c3636.5234 -363.7153 3626.8945 -355.3472 3621.7783 -343.7627 c3618.8408 -337.1108 3614.8438 -331.0732 3610.8242 -325.0386 c3606.4414 -318.4585 3603.0234 -310.9702 3599.3506 -303.9775 c3595.749 -297.1221 3592.2451 -290.2153 3588.7588 -283.3008 c3585.2822 -276.4038 3582.1855 -269.5508 3577.4502 -263.4209 c3573.5488 -258.3701 3569.5811 -253.4316 3566.3164 -247.9302 c3565.8789 -247.1924 3565.5957 -246.8311 3565.4189 -246.6992 C3565.3975 -246.5303 3565.3721 -246.3462 3565.3389 -246.1299 c3565.248 -245.5415 3565.1221 -244.9717 3564.9814 -244.3931 c3564.4551 -242.2285 3563.6289 -240.1299 3562.7715 -238.0796 c3559.4893 -230.2324 3552.1045 -219.9395 3543.0098 -227.3882 c3536.7793 -232.4907 3533.1885 -241.3003 3529.3477 -248.1812 c3528.8359 -249.0981 3528.3018 -250.0034 3527.7363 -250.8877 C3527.8125 -250.6641 3526.5684 -252.2285 3526.418 -252.396 c3525.6318 -253.2681 3524.8926 -254.1865 3524.1426 -255.0894 c3522.4834 -257.0864 3520.8096 -259.0552 3519.001 -260.9199 c3518.3398 -261.6021 3515.2559 -264.0015 3515.2598 -264.0034 C3511.9316 -262.501 3511.1846 -258.2832 3510.4727 -255.1021 c3509.4531 -250.5513 3509.0449 -245.8926 3507.5059 -241.4658 c3505.9355 -236.9521 3502.9102 -231.6714 3497.4531 -232.0869 c3491.9473 -232.5063 3488.0742 -236.3877 3485.4268 -240.9316 c3483.5801 -244.1001 3483.0518 -249.4668 3480.5723 -252.0771 c3475.8945 -257.0005 3472.9248 -263.2822 3469.4287 -269.0234 c3467.7646 -271.7563 3465.4014 -273.8589 3463.6768 -276.4951 c3461.877 -279.2456 3460.1895 -282.0581 3458.5371 -284.8989 c3455.2188 -290.6021 3451.6338 -296.2173 3448.459 -301.9907 c3447.1963 -304.2886 3445.6123 -306.7925 3443.5527 -308.5645 C3443.3779 -308.2007 3443.1943 -307.8413 3442.9482 -307.5107 c3442.5127 -306.9268 3443.0186 -302.3657 3443.0039 -301.208 c3442.9336 -295.8521 3441.1465 -290.875 3439.7939 -285.7466 c3439 -282.7319 3438.2422 -279.7134 3437.6182 -276.6587 c3437.0742 -273.9985 3437.5342 -270.8799 3436.7217 -268.3389 c3432.1855 -254.1509 3431.7783 -239.2617 3429.4404 -224.6499 c3428.4531 -218.4785 3420.4404 -219.1069 3417.5605 -223.0972 c3414.5342 -227.29 3409.2891 -229.8628 3404.9063 -232.3433 c3399.2871 -235.5229 3393.9707 -238.7358 3388.8994 -242.7622 c3377.998 -251.4175 3369.8359 -263.2642 3362.1309 -274.6987 c3353.6426 -287.2944 3343.5605 -298.5967 3333.8662 -310.2578 c3324.5146 -321.5068 3316.5752 -333.5835 3306.0361 -343.8052 c3301.0605 -348.6313 3295.9434 -353.3018 3291.1123 -358.2769 c3290.3916 -359.019 3289.6875 -359.7744 3288.9961 -360.5391 C3285.4316 -355.2949 3281.6895 -350.127 3277.2832 -345.5679 c3266.2695 -334.1694 3255.7813 -322.772 3245.6953 -310.5415 c3241.1221 -304.9966 3236.6191 -299.3936 3232.2715 -293.6704 c3227.7178 -287.6763 3223.8682 -280.9214 3219.0313 -275.1797 c3209.6621 -264.0557 3198.9268 -254.3179 3188.3965 -244.3257 c3177.2773 -233.7744 3166.3311 -223.3818 3154.3555 -213.7803 c3143.7305 -205.2622 3133.2617 -196.4878 3122.4824 -188.1733 c3117.9922 -184.7109 3113.0146 -182.6855 3107.376 -182.1787 c3100.3857 -181.5498 3093.9541 -185.834 3088.4521 -189.5293 c3082.9316 -193.2383 3077.7178 -197.1626 3071.8906 -200.4043 c3065.3047 -204.0688 3056.335 -205 3048.9541 -205 C3042.2803 -205 L3045.2988 -192.7954 3054.1689 -181.502 3050.7998 -168.7461 c3050.2285 -166.5806 3048.4268 -164.8164 3046.2598 -164.2461 c3039 -162.333 3031.6953 -165.6377 3025.2861 -168.7827 c3017.6299 -172.5396 3010.3184 -176.8706 3002.5596 -180.4658 c2998.3193 -182.4307 2992.168 -185.9019 2987.3848 -185.8887 c2986.2871 -185.8857 2984.6592 -186.0195 2983.4736 -185.5615 C2983.6582 -184.7729 2983.8564 -183.9868 2984.0518 -183.2021 c2984.4238 -181.7085 2984.7871 -180.2173 2985.0859 -178.7075 C2985.2227 -177.8433 2985.3438 -176.9775 2985.4502 -176.1089 C2985.2236 -179.4409 2986.1816 -175.2236 2986.4795 -174.5166 c2988.7949 -169.0249 2990.6631 -163.3672 2992.5469 -157.7173 c2993.7764 -154.0308 2990.4063 -148.9844 2986.2793 -149.4893 c2979.5898 -150.3076 2973.4434 -155.186 2967.458 -158.0337 c2963.8818 -159.7354 2962.1582 -158.9395 2958.7627 -162.106 c2954.7266 -165.8691 2948.374 -167.4399 2943.2891 -169.1392 c2930.5938 -173.3809 2918.0117 -177.5781 2905.0615 -181.0249 c2891.8125 -184.5513 2878.5693 -187.1611 2865.1094 -189.7104 c2852.127 -192.1694 2839.1836 -194.835 2826.2207 -197.3936 c2813.7129 -199.8623 2801.0576 -201.75 2788.6631 -204.7153 c2767.75 -209.7188 2746.1328 -214.979 2729.2559 -229.063 c2722.8125 -234.4404 2732.0605 -243.5864 2738.4492 -238.2554 c2751.9102 -227.0205 2769.9199 -222.6226 2786.5811 -218.5771 c2806.3193 -213.7847 2826.4531 -210.5864 2846.377 -206.603 c2867.7939 -202.3208 2889.2207 -198.6963 2910.3379 -193.0757 c2921.3848 -190.1357 2932.334 -186.8486 2943.1045 -183.0122 c2951.5723 -179.9956 2960.334 -177.4712 2967.3545 -171.7461 C2969.9609 -171.146 2972.4346 -170.0591 2974.8516 -168.8682 C2974.5742 -169.5371 2974.2881 -170.2026 2973.9922 -170.8633 c2972.252 -174.751 2971.6797 -178.8188 2970.6816 -183.2358 c2968.0557 -194.8594 2979.1875 -198.8706 2988.707 -198.897 c2994.2021 -198.9121 3000.7656 -195.3794 3005.6943 -193.2236 c3011.3232 -190.7612 3016.9375 -188.1426 3022.3457 -185.2227 c3025.8955 -183.3052 3029.3555 -181.25 3032.9814 -179.4712 c3034.5068 -178.7227 3036.4648 -177.7192 3038.4316 -177.1309 C3037.7754 -181.7383 3035.2305 -186.6865 3033.46 -190.3789 c3030.2402 -197.0928 3028.5244 -204.3813 3028.3232 -211.8145 c3028.2275 -215.3579 3031.3525 -218.3145 3034.8232 -218.3145 c3041.0898 -218.3145 3047.3701 -218.4346 3053.6338 -218.2651 c3061.0898 -218.064 3068.3857 -215.5562 3075.3867 -213.2275 cf*u1 D1882.019 -232.6895 m1885.897 -231.2212 1889.8032 -229.8569 1893.9541 -228.8799 c1897.5586 -228.0317 1901.2871 -228.4004 1904.7808 -227.1973 c1908.042 -226.0742 1911.2183 -224.6802 1914.3564 -223.2549 c1920.7231 -220.3633 1926.6826 -216.6313 1932.5977 -212.9277 c1934.9668 -211.4443 1937.8857 -208.7949 1940.5947 -208.0723 c1943.1309 -207.3955 1945.5547 -206.3257 1947.9473 -205.2627 c1953.1953 -202.9302 1958.1016 -199.0845 1961.4346 -194.3999 c1967.4395 -185.9619 1968.6816 -171.7847 1958.3047 -166.1421 c1954.2109 -163.9165 1949.2061 -163.8057 1944.666 -163.8735 c1938.0781 -163.9722 1931.5391 -164.2515 1924.9932 -165.04 c1917.8042 -165.9058 1910.626 -166.0708 1903.4434 -166.7832 c1896.5947 -167.4619 1890.1899 -169.7813 1883.6719 -171.832 c1870.5283 -175.9678 1857.0537 -179.5688 1844.9531 -186.4316 c1844.8438 -186.4937 1844.7388 -186.5615 1844.6299 -186.6245 C1844.4761 -184.8379 1843.5303 -183.1084 1841.5024 -181.9302 c1831.0044 -175.8301 1821.4927 -168.1943 1810.8823 -162.2783 c1798.876 -155.5845 1785.9087 -153.8174 1772.4438 -152.2646 c1758.416 -150.6465 1744.2817 -150.5552 1730.2446 -152.0776 c1722.9805 -152.8657 1715.7749 -154.1182 1708.6377 -155.6709 c1703.0576 -156.8848 1696.2461 -158.7554 1693.165 -164.1592 c1687.8584 -173.4673 1696.4253 -180.9731 1703.4736 -185.8213 c1707.3242 -188.4697 1711.2729 -190.7583 1714.9375 -193.6836 c1719.9341 -197.6724 1724.8262 -201.7759 1729.936 -205.6226 c1732.751 -207.7412 1735.6792 -209.6973 1738.6553 -211.5801 c1740.0073 -212.4355 1741.4458 -213.0132 1742.9263 -213.4775 C1740.9658 -214.397 1739.4854 -216.2676 1739.4883 -219.0967 c1739.499 -228.7598 1740.7275 -237.356 1746.438 -245.3525 c1749.6348 -249.8301 1753.8125 -253.124 1758.3174 -254.0117 C1758.2881 -254.0376 1758.2588 -254.0645 1758.2295 -254.0903 c1753.3916 -258.4063 1749.0044 -263.376 1745.7202 -268.981 c1739.8818 -278.9438 1741.1597 -290.3408 1749.0361 -298.6709 c1756.0693 -306.1099 1767.0156 -309.3794 1776.8877 -310.4043 c1782.2646 -310.9624 1787.6821 -310.3848 1793 -309.1094 C1793 -321.5361 L1793 -325.7612 1794.5796 -328.9014 1796.0229 -333.0786 c1798.6738 -340.7471 1802.54 -348.6592 1811.5508 -349.3828 c1819.75 -350.0415 1819.8276 -337.5586 1812.0063 -336.4438 C1811.9106 -336.3525 1811.8003 -336.2476 1811.6543 -336.1055 c1810.8896 -335.3628 1810.4106 -334.1465 1809.9326 -333.2114 c1808.7144 -330.8267 1807.999 -328.1519 1807.1514 -325.6211 c1806.7832 -324.522 1806.4453 -323.4365 1806.0039 -322.3647 C1805.0884 -320.6084 1805 -320.332 1806 -321.5361 C1806 -304.6953 L1809.7969 -303.0713 1813.4727 -301.2534 1816.9585 -299.4082 c1829.4717 -292.7832 1842.396 -286.8057 1854.7168 -279.8149 c1860.0156 -276.8086 1866.0254 -273.439 1870.2778 -269.0176 c1874.1533 -264.9888 1876.9907 -260.002 1879.1245 -254.8765 c1881.9561 -248.0757 1883.4741 -240.4492 1882.1123 -233.1162 c1882.0854 -232.9707 1882.0479 -232.833 1882.019 -232.6895 Cf0 D1742.1299 -198.3691 m1733.2729 -192.5737 1725.8525 -184.8311 1717.0215 -179.0488 c1714.0791 -177.1221 1711.0518 -175.3472 1708.1865 -173.3008 c1707.0034 -172.4551 1705.9551 -171.4321 1704.9644 -170.3721 C1706.772 -168.9038 1709.98 -168.686 1712.0938 -168.2065 c1715.1328 -167.5166 1718.1943 -166.936 1721.2612 -166.3877 c1727.1367 -165.3374 1733.0654 -164.708 1739.0171 -164.3042 c1751.3818 -163.4653 1763.7969 -164.1885 1776.0796 -165.6973 c1787.3047 -167.0767 1797.1772 -169.3462 1807.0259 -175.0396 c1816.6362 -180.5947 1825.3389 -187.5757 1834.9409 -193.1558 c1835.0024 -193.1914 1835.0635 -193.2173 1835.125 -193.251 C1827.0166 -199.9233 1820.25 -208.1758 1813.8921 -216.5161 c1812.8413 -217.8945 1811.8047 -219.2837 1810.7646 -220.6699 c1810.1592 -221.4771 1809.8018 -222.2788 1809.6299 -223.0562 C1808.7974 -222.6128 1807.8135 -222.3359 1806.668 -222.3052 c1795.582 -222.0063 1786.0171 -215.1831 1776.0557 -211.0771 c1770.3643 -208.7314 1764.8936 -206.2158 1758.9956 -204.3721 c1753.1641 -202.5493 1747.2993 -201.752 1742.1299 -198.3691 cf1766.2397 -294.6523 m1762.522 -293.2305 1758.7134 -290.6807 1756.4814 -287.3477 c1753.6182 -283.0713 1755.2764 -278.3896 1757.6553 -274.3301 c1760.4814 -269.5078 1764.8032 -265.5454 1769 -261.8901 C1769 -281.5938 L1769 -286.5508 1770.0708 -291.2734 1770.7339 -296.0786 C1769.2383 -295.6973 1767.7407 -295.2266 1766.2397 -294.6523 cf1772.3931 -243.2329 m1772.1123 -243.3765 1771.8384 -243.5435 1771.5601 -243.6963 C1769.8955 -240.0806 1764.7632 -237.7129 1760.8096 -241.1992 c1760.6846 -241.3091 1760.5869 -241.3911 1760.502 -241.46 C1759.8867 -241.1016 1759.4146 -240.6348 1758.8745 -240.1162 c1757.3867 -238.687 1756.3232 -236.8906 1755.2793 -235.1304 c1752.3853 -230.249 1752.4941 -224.6104 1752.4883 -219.0967 c1752.4868 -217.7793 1752.1641 -216.6694 1751.6216 -215.7661 C1757.7197 -217.4658 1763.6968 -219.5088 1769.4067 -222.2817 c1777.3438 -226.1353 1785.583 -230.5977 1794.2095 -233.1758 C1792.2993 -234.5718 1790.4912 -236.0586 1788.833 -237.5063 c1787.5068 -238.6641 1783.7837 -238.9692 1781.9702 -239.457 c1778.6416 -240.3516 1775.458 -241.6675 1772.3931 -243.2329 cf1866.7168 -251.0391 m1861.5249 -262.5605 1849.9043 -267.8989 1839.1846 -273.4316 c1833.1484 -276.5469 1826.9941 -279.4302 1820.8936 -282.415 c1814.0454 -285.7661 1807.6934 -289.9663 1800.6182 -292.897 c1795.0674 -295.1968 1789.5068 -296.7173 1783.9209 -297.165 C1783.2476 -292.4751 1782 -287.8784 1782 -283.1426 C1782 -258 L1782 -256.2598 1781.3838 -254.8984 1780.4209 -253.9155 C1782.001 -253.1592 1783.6514 -252.5024 1785.4258 -251.9927 c1788.2266 -251.1875 1791.0542 -250.521 1793.833 -249.6357 c1796.957 -248.6411 1799.3057 -245.4595 1802.0054 -243.6377 c1807.2412 -240.1045 1812.7412 -238.7593 1818.666 -237.3081 C1820.7803 -240.4312 1825.1226 -241.915 1828.2544 -238.2559 c1829.2393 -237.105 1830.2803 -235.9707 1831.3721 -234.8755 C1836.7676 -234.1953 1841.7217 -232.4395 1846.3564 -229.5635 c1848.4077 -228.2905 1849.3184 -226.4473 1849.4106 -224.5762 C1852.0107 -224.2007 1854.6992 -224.3081 1857.4473 -225.0244 C1855.3818 -227.3271 1854.8545 -230.7827 1857.897 -233.4014 c1861.499 -236.5015 1865.3301 -237.7251 1869.583 -237.0537 C1869.9512 -241.8184 1868.6523 -246.7427 1866.7168 -251.0391 cf1875.9482 -221.0879 m1873.5127 -218.5708 1870.501 -216.5176 1867.0669 -214.8413 c1852.4453 -207.7051 1837.4004 -212.5625 1825.9077 -222.2583 C1825.8672 -222.2598 1825.8242 -222.2593 1825.7837 -222.2607 C1831.5752 -214.7969 1837.707 -207.6929 1845.2446 -201.8481 c1854.7568 -194.4717 1866.1987 -191.3105 1877.2676 -187.1245 c1882.3496 -185.2021 1887.9019 -184.1318 1893.1035 -182.4414 c1898.2168 -180.7798 1903.2153 -179.5874 1908.6099 -179.48 c1920.269 -179.248 1931.8242 -177.2847 1943.5029 -176.9043 c1946.373 -176.811 1949.9355 -176.3843 1952.542 -177.8018 c1954.5576 -178.8975 1952.3213 -184.394 1951.6133 -185.7275 c1949.7012 -189.3276 1946.0283 -191.6348 1942.541 -193.4775 c1940.8252 -194.3838 1938.9902 -194.98 1937.1387 -195.5366 c1934.0635 -196.4609 1931.4961 -198.2896 1928.7871 -199.9785 c1919.709 -205.6392 1908.6616 -214.3594 1897.6875 -215.2144 c1891.4707 -215.6987 1885.4648 -217.5737 1879.5762 -219.5049 c1878.9385 -219.7139 1877.5635 -220.3472 1875.9482 -221.0879 Cf*U1840.6543 -310.9785 m1840.0547 -309.5522 1840.0024 -309.1899 1840 -309.8721 C1840 -299 L1840 -291 1827 -291 1827 -299 C1827 -307.2837 1827 -311.3291 v1827 -315.8604 1831.5342 -318.9634 1831.7881 -323.4653 c1832.2578 -331.7993 1845.2275 -331.8447 1844.7549 -323.4653 c1844.4893 -318.7598 1842.9839 -315.0239 1840.6543 -310.9785 Cf1741.3921 -250.9077 m1741.144 -251.1323 1740.7031 -251.1465 1740.6982 -251.1821 C1739.6953 -250.8828 1738.8315 -250.1177 1738.0166 -249.3721 c1735.7656 -247.312 1733.8169 -244.3745 1732.8389 -241.6401 c1730.0356 -233.8076 1717.4712 -237.1831 1720.3027 -245.0962 c1724.5288 -256.9048 1738.2358 -271.2866 1750.5845 -260.1001 c1756.8101 -254.4604 1747.5879 -245.2949 1741.3921 -250.9077 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF