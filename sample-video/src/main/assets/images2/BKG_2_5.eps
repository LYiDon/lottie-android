%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 2.eps)%%CreationDate: 03.10.18 22:49%%Canvassize: 16383%%BoundingBox: -1 -2160 3841 4%%HiResBoundingBox: -0.372559 -2159.9268 3840.0117 3.29004%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -702.4429 327.3223 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5538 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFCFFD7EFFC9FD7EFFC9CFFD5AFFCFC9FD21FFC9CFFD5BFFC9%FD22FFCFFD5BFFC9FD16FFCFC9FD09FFCACFCAFD43FFCFFD16FFCFCFFD0E%FFCFFD07FFC9FD09FFCACFCFFD3DFFCFFD05FFCFCFC9FD0BFFCFC9CFC9CF%C9FD04FFCFCAFD0DFFCACFC9CFCAFFFFFFCACFFD0AFFC9FD39FFCACFC9CF%C9CFC9FFFFFFC9CFCFCFFD11FFCACFFFFFCFFD11FFCFCFCFFFFFCFCFFD0A%FFCFFD37FFCFC9CFCFFD05FFC9FFC9FFFFFFCAFD12FFCACFFFCFCFFD12FF%CFC9CFC9FD0BFFC9FD37FFCACFCACFC9CFCAFFFFFFC8FFFFFFC9FD14FFCF%CFCAFD15FFCAFD05FFCFFD05FFC9FD3FFFCACFCFCFFFFFC9CFCFCFCAFD12%FFCAC9CAFD16FFC9C9CFC9CFC9CFCACFC9FD3BFFCAFFCACFCACFC9C9C9FF%C9CFCAFFCACFCACFCAFD10FFCFFD16FFCFCAFFCFFFFFFFCFFFCFFD3AFFCF%CACFCFFFCFFFC9CFC9CEC9CFC9FD04CFFFCFCEC9FD1CFFCFCFFD07FFCFC9%FD40FFCFC9CFCAFFFFFFCACFC9FFFFCFC9CFCACFC9CEC9CFCACFCAFFCFFD%1CFFC9CFFD05FFCFC9FD3FFFCACFCFFFCFFFCFCFC8CFCFFFFFCFC9CFCAFF%FFFFCFCFCAFD20FFCACFCACFC9CFC9CFCAFD3FFFC9CFCACFC9CFCACFC9CF%FFFFFFCFC8CFCAFFC9CFCFFFFFFFC9CFFD1DFFCFCFFD04FFCFFD41FFCFCF%CAFFCFFFFFCFCFFD05FFC9CFFFCFFFFFCFCFCFFFFFFFCACFFD1BFFC9CFFD%4DFFCFCAFD04FFCFC9CFCAFFCAFFFFFFCAC9C9FFFFFFC9CFFD1AFFCFFD4D%FFCFCFFD04FFCFC9FFCAFFFFFFCFFFFFFFCFFFC9CFFFFFC9FD19FFCFC9FD%4CFFCECAFFFFFFC9CFCAFFCACFFFFFC9CFFFFFFFCFFFFFCACFCACEC9FD18%FFC9FD4CFFCFCFFFFFFFC9CFFFFFFFCFCFFFFFFFC9FFFFFFCACFFD04FFC9%CFFD12FFCFC9CFCACFC9FD4CFFCFC9FFCFCFC9FD05FFC9FFFFFFCACECFFF%FFCFC9FD0EFFCFCFFD08FFCAFFCFFD4FFFC9FFCFCFCFFD06FFCFFFFFFFCF%CACFFFFFCFCFCFFD0AFFCACEC9CFC9CFFD06FFC9CFFD50FFCAC9C9CFFD08%FFC9FFFFFFC9FFC9FFFFCFCACFCAFD09FFCFCFFFFFFFCFCFCFFFFFFFCACF%FD51FFCFCAFD0AFFCFFFFFFFCFFFCFCFFFCFFFFFCFFD08FFCFC9FD05FFCF%CFC9CFC9CFFD5EFFCAFFFFCFCAFFCACFFFCFC9FFC9FD06FFCFCFC9FD69FF%CFCFFFFFCAFFFFFFC9FFCFCFCACFCFFD04FFC9CFCAFD6AFFCFCAFFFFCFCA%FFFFFFC9CFCFCFC9CFFD71FFCFFFFFFFCAFD04FFCFC9FFCFCFCFFD71FFCF%CAFFC9FD05FFCFFFFFFFC9CFFD71FFCFFFCACFFD09FFCFC9FD72FFC9CFFD%0AFFC9CFCAFD7DFFCFC9FD77FFCFCAFD05FFCACECFFD76FFC9CFFD06FFC9%FD76FFCACFC9FD05FFCACECAFD75FFCFCFCFFD06FFC9FD76FFC9FFCAFD05%FFCACFCFFD75FFCFFFCFCFFD04FFCFC9FD76FFC9FFCACFFD04FFCACFCAFD%74FFCFCFFFFFCFFD04FFCFC9FD75FFCFCAFFCFCFFD04FFC9CFCFFD74FFCA%FFFFFFCAFFFFFFCFCFCFFD72FFCACFCAC9CACFCAC9C9CFFFCFCACFCFFD72%FFC9FFCFFFCFFFCFCFCFFFCAFFCFFD73FFCFCACFC9CFCACFC9FFCFCFFFCF%CFFFCAFD78FFCACFCFFFC9CFCACFC9FD72FFCACFC9CFCACFC9FFFFCFCFFD%72FFCFCFCACFCFFFFFFFCFCFFFFFCAFD20FFCACFC9CFC9CFCACFCAFD48FF%CFC9CFCAFD06FFCFCAFFCACFFD1DFFC9CFCACFCFFD4DFFCFCFCAFD09FFCA%FFCFCFFD1CFFCFC9CFCFFD4EFFCFC9CFCFFD09FFCACFCACFCAFD1AFFCFCF%CFFD50FFCFC9FD0DFFCFFD12FFCFCFCACFC9CFCACFCAFFCACFCFFD4FFFC9%CFCFFD0DFFCFFD12FFCACFCAFFFFFFCFFFCFCFC9CFFD50FFC9CFFD04FFCF%FFCFFD07FFCACFCACFCFFD05FFCFFD07FFCFC9CFFD59FFCFC9FFFFFFCACF%C9CFC9CFC9CFCAFFCACFC9FFFFFFCACFC9CFC9CFC9CFFD07FFCFFD5AFFCF%CAFFFFFFCACFCFFD05FFFD04CFFD6EFFCFCAFFFFFFC9CFFD78FFCFCFFD68%FFCACFCAFD12FFCFCAFD13FFCFCFC9CFCAFD51FFCFFFFFC9FFCFCFFD18FF%CFFD09FFCFCFCFFFCFCFC9FD05FFCFC9CFC9CFCFFD3DFFCACFCAFD05FFC9%FFFFFFC9CFCACFFD16FFC9CFC9CFCAFD05FFC9CFFD06FFC9CFCACFCAFD04%FFCFCFCFFFFFFFCFCFCAFD05FFCFCFC9FD2CFFCFCACFCFFFCACFFD04FFC9%FFFFFFCFCFCFFD09FFCAFD04CFFD06FFCFC9FD04FFCFC9FFFFFFCACFFD08%FFCACFFD07FFCACFC9CFC9FFCACFC9FFFFFFC9CFCFFFCAFD29FFCFC9CAFD%05FFCACFCAFFFFFFC9CFC9CFCAFD07FFCACFC9CFCAFFCACFC9FFFFFFCACF%CAFD07FFC9CFC9CFFD1BFFCACFC9FD2EFFCFCFFD07FFCFCFFFFFFFCFCFCF%FD08FFC9FD09FFCFCFCACFFD29FFCFFD15FFCAFFCFFD0DFFCFFD09FFCAFF%FFFFCFFD05FFC9FFFFCFC9CFCAFD05FFCFCFC9FD4AFFCACFCACFCACFCACF%CAFD07FFCFCFCACFC9FD07FFCAFFFFFFC9CFFD06FFC9CFCAFFC9FD07FFCA%FD0FFFCFFFCFCFCFFD09FFCFCFCACFFD27FFCACFC9CFCAFD05FFCFCFC9CF%CFFFFFFFCACFCAFFFFCFCAFD06FFCFCAFFFFCFCAFD06FFCFCAFFCAFD16FF%CFC9CFCACFCACFC9CFFD06FFC9CFCFFFCACFCAFFCFFFCFFD0CFFCFFFCFFD%07FFCFCFCACFCFFFFFFFCFCFC9FD0DFFCFCFCACFCACFFD0CFFCAFD0BFFCF%FFCFCFCFFD14FFCFCFFD07FFCFCFCFFFFFFFC9CFFD05FFCFCACFCFCFFD09%FFCACFC9CFC9CFCACFC9CFCFCFC9CFCAFFCFFFCACFC9CFCFFD11FFCFFD0C%FFCFCACFC9FFCFCFC9CFC9CFC9CFCACFCAFFCACFC9FD12FFCFCAFD09FFCF%CFC9CFC9CFFD08FFCFFD0AFFC9CFFD08FFCACFCFFD29FFCAFD05FFCFFD1E%FFCFCFFD0DFFCFFD14FFC9FD59FFCFC9CAFD1EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Layer 4) Ln0 Au0 O0.001923 0.157961 0.589929 0 1 0.839216 0.498039 Xa0 J 0 j 1 w 10 M []0 d0 XR100.6494 -226 m101.8735 -226 L102.2695 -226 102.6406 -225.7871 102.9995 -225.7324 C117.5596 -225.0586 132.0581 -222.0649 146.6343 -222.0649 c162.376 -222.0649 178.4678 -221.0698 194.1567 -222.3809 c224.396 -224.9072 251.2227 -241.1152 279.4824 -250.5347 c285.0103 -252.3774 290.165 -255.542 295.2178 -258.4395 c302.1108 -262.3926 309.0015 -266.4634 315.1743 -271.4932 c327.2227 -281.3105 338.6807 -291.5605 349.7666 -302.4629 c355.105 -307.7134 360.228 -313.1968 365.9761 -318.0063 c368.6938 -320.2808 371.3701 -322.6128 374.0288 -324.9487 c376.9224 -327.4917 378.3257 -331.231 381.2461 -333.7056 c385.8633 -337.6177 389.0244 -343.1211 392.8413 -347.7549 c397.4253 -353.3203 403.4165 -357.7109 408.3193 -363.0039 c410.8525 -365.7393 413.3838 -368.6777 416.0483 -371.4565 C416.062 -372.1021 416.0928 -372.7461 416.0981 -373.3916 c416.1436 -378.9648 421.9072 -380.8291 425.7441 -378.9888 C431.2437 -379.7881 435.2417 -370.8345 429.5513 -366.5547 c429.311 -366.374 429.0781 -366.1787 428.8486 -365.9785 C428.3047 -355.6621 426.9854 -345.3716 426.2871 -335.0806 c425.3613 -321.4409 422.8608 -307.9609 421.9912 -294.312 c421.1504 -281.1113 421.7534 -267.7207 421.7534 -254.4961 c421.7534 -248.5269 421.7324 -242.561 422.0386 -236.5977 c422.3809 -229.9355 423.7148 -223.3408 424.3877 -216.7017 c424.9937 -210.7217 426.8823 -204.9727 428.1528 -199.1069 c429.5444 -192.6802 430.8164 -186.2432 432.6431 -179.9204 c436.0249 -168.2134 443.9126 -160.2485 450.4502 -150.2935 c457.4219 -139.6768 465.2236 -130.3467 474.5342 -121.7217 c484.2842 -112.6899 494.4663 -104.1343 504.3154 -95.2114 c510.5405 -89.5718 501.3188 -80.4063 495.123 -86.019 c485.2729 -94.9429 475.1323 -103.5396 465.3418 -112.5293 c455.627 -121.4497 447.5938 -131.355 440.2021 -142.2666 c433.6479 -151.9419 426.0469 -160.3413 421.8057 -171.3574 c419.4443 -177.4897 418.085 -183.998 416.7231 -190.4072 c415.3726 -196.7646 413.4814 -203.0884 412.3252 -209.4653 c407.6108 -235.4634 408.5552 -262.1284 408.7695 -288.436 c408.8867 -302.8105 411.5938 -317.064 412.9746 -331.3403 c413.5977 -337.7813 413.7837 -344.1953 414.4746 -350.6235 C410.3691 -346.5601 405.8511 -342.9053 402.0337 -338.5625 c398.001 -333.9746 394.9219 -328.7324 390.4385 -324.5127 c388.1079 -322.3193 386.46 -319.3496 384.3569 -316.9155 c381.7588 -313.9092 378.2134 -311.3608 375.1685 -308.8125 c363.2393 -298.8301 352.8364 -286.9609 341.3003 -276.5029 c330.0146 -266.2725 318.1113 -256.7998 304.9761 -249.0566 c299.8179 -246.0161 294.5054 -242.8696 289.1279 -240.2334 c282.2017 -236.8384 274.3027 -235.1709 267.1602 -232.1777 c253.3745 -226.4004 239.6836 -220.3945 225.4331 -215.8281 c210.9585 -211.1899 196.2974 -208.9775 181.1235 -208.9775 c165.4087 -208.9775 149.3335 -207.9917 133.7012 -209.752 c122.77 -210.9834 111.6426 -212.5098 100.6494 -212.8252 c92.2886 -213.0645 92.2495 -226 100.6494 -226 Cf1602.3403 -1.04248 m1602.3164 0.456543 1602.0723 1.8916 1601.7026 3.29004 C1587.6738 3.29004 L1588.1514 2.01318 1588.6206 0.740234 1589.0566 -0.532715 c1589.8789 -2.93408 1589.0771 -5.90088 1588.8745 -8.39502 c1588.5688 -12.1514 1588.7197 -15.8096 1588.0078 -19.54 c1586.6084 -26.8672 1582.4038 -33.0308 1578.6538 -39.3262 c1571.3882 -51.5244 1563.1699 -64.7495 1551.5801 -73.3296 c1539.9004 -81.9766 1524.0576 -86.5396 1509.6343 -86.5635 c1506.5503 -86.5688 1504.3867 -88.585 1503.3662 -91.3354 c1501.6191 -96.0469 1503.7217 -100.8828 1506.0068 -104.9941 c1508.5063 -109.4912 1510.8223 -112.3477 1511.3403 -117.5918 c1511.9971 -124.2383 1512.04 -130.6816 1510.0269 -137.0693 c1507.9902 -143.5293 1504.9609 -150.4468 1501.0938 -156.02 c1497.9932 -160.4878 1492.376 -162.853 1487.7168 -165.1865 c1485.0454 -166.5249 1482.4766 -168.0024 1479.6548 -169.0098 c1476.2856 -170.2119 1472.5996 -169.8052 1469.0845 -169.8052 c1462.2305 -169.8052 1455.6318 -169.978 1449.2598 -167.02 c1446.3096 -165.6504 1444.0791 -163.8071 1441.5908 -162.3398 C1441.4761 -161.9277 1441.3628 -161.5156 1441.2295 -161.1118 c1438.6143 -153.1904 1426.0581 -156.584 1428.6943 -164.5679 c1428.7334 -164.6865 1428.7695 -164.8057 1428.8081 -164.9243 C1428.5762 -166.9028 1429.1465 -169.0815 1430.5112 -170.6895 C1430.7993 -172.3076 1430.6055 -174.0742 1431.1426 -175.585 c1432.1533 -178.4307 1433.3628 -181.1968 1434.5513 -183.9717 c1437.5737 -191.0303 1439.0078 -198.6616 1440.3174 -206.1885 c1441.5425 -213.2275 1442.7305 -220.2109 1444.7041 -227.0898 c1447.0068 -235.1162 1447.9639 -242.6211 1448.041 -250.978 c1448.1113 -258.6528 1446.3711 -265.3198 1443.8535 -272.5269 c1441.5967 -278.9883 1440.0596 -285.5322 1436.957 -291.6802 c1434.1616 -297.2202 1430.499 -302.2061 1426.2725 -306.728 c1421.459 -311.8774 1415.4829 -315.4121 1410.2412 -320.0483 c1407.5977 -322.3872 1405.1187 -324.9126 1402.5088 -327.2896 c1399.9224 -329.6455 1396.6577 -331.1675 1393.6113 -332.8442 c1387.1841 -336.3809 1380.8516 -340.666 1374.0361 -343.3979 c1361.3047 -348.5015 1347.1953 -348.5132 1333.6982 -348.5293 c1326.6738 -348.5381 1319.7368 -347.7588 1312.7612 -347.0181 c1305.0581 -346.2002 1297.3252 -346.3818 1289.6318 -345.6133 c1283.3799 -344.9888 1276.1807 -343.3994 1270.4229 -340.8584 c1264.7871 -338.3711 1258.0127 -335.3564 1253.2617 -331.4365 c1249.6006 -328.416 1246.4194 -324.9922 1242.5698 -322.2314 C1241.7383 -319.8125 1239.7305 -318 1236.6509 -318 C1235 -318 L1230.6143 -318 1228.6387 -321.9063 1229.0615 -325.4365 C1227.9722 -326.9185 1226.4414 -328.4072 1225.3174 -329.4849 c1221.7705 -332.8862 1217.999 -335.7104 1213.4619 -337.9473 c1202.876 -343.1675 1192.584 -345.042 1180.8813 -344.7896 c1166.3584 -344.4766 1145.1011 -342.9971 1140.0908 -326.373 c1138.5845 -321.374 1130.749 -319.4805 1128.2109 -324.8188 c1126.811 -327.7627 1125.6133 -330.7554 1124.6484 -333.8687 c1123.6152 -337.2007 1123.355 -340.812 1121.8647 -343.9639 c1118.6226 -350.8208 1114.0869 -357.4438 1110.1016 -363.894 c1106.6465 -369.4863 1102.4404 -375.1025 1097.9302 -379.8848 c1092.8203 -385.3022 1088.9297 -391.5029 1083.9824 -397.043 c1064.1084 -419.2988 1039.5747 -436.9004 1012.5742 -449.5322 c998.0688 -456.3179 983.1914 -460.3882 967.3398 -462.3745 c951.5298 -464.356 935.8042 -462.8867 920.103 -460.6812 c913.5835 -459.7656 907.5166 -457.4678 901.2432 -455.5679 c894.6445 -453.5698 887.812 -451.8633 881.6216 -448.7539 c878.8662 -447.3701 876.7168 -445.0576 874.1279 -443.3906 c871.6792 -441.8135 869.0239 -440.5381 866.4834 -439.1182 c860.5225 -435.7866 855.0083 -430.8794 849.8564 -426.4155 c844.811 -422.0444 840.0469 -417.3975 835.2739 -412.729 c833.0938 -410.5967 830.7627 -408.627 828.4512 -406.6421 c827.2065 -405.5732 823.4507 -403.3159 823.271 -401.5469 c823.0068 -398.9468 821.5347 -397.1587 819.6694 -396.188 C819.3408 -395.6636 819.0166 -395.1357 818.7109 -394.5938 c814.5957 -387.2925 803.3643 -393.8433 807.4863 -401.1553 c808.376 -402.7339 809.4443 -404.2021 810.3936 -405.7456 c811.8643 -408.1362 811.4956 -410.7778 811.4956 -413.4751 c811.4956 -420.4541 811.584 -427.4385 811.3047 -434.4131 c811.0459 -440.8711 810.585 -447.5996 808.769 -453.8135 c806.6523 -461.0542 802.7505 -467.4722 798.8062 -473.8252 c795.8291 -478.6201 792.7197 -484.4141 788.1313 -487.8574 c783.6416 -491.2271 778.4141 -494.2354 773.4536 -496.8618 c764.625 -501.5361 753.335 -503.519 745.4707 -496.106 c741.6182 -492.4741 733.9487 -494.7661 734.3745 -500.7021 c734.5547 -503.2124 734.9702 -505.458 735.8994 -507.7969 c736.5171 -509.3516 737.8887 -511.248 738.0469 -512.9438 c738.6821 -519.7598 739.8042 -524.8188 737.6035 -531.5171 c735.7114 -537.2754 734.3203 -542.9946 732.7075 -548.8267 c731.1279 -554.54 727.3633 -560.0776 724.7212 -565.4028 c713.5283 -587.9648 697.8896 -607.9507 677.4316 -622.8623 c667.4268 -630.1553 656.0771 -635.6826 644.1206 -638.8662 c637.981 -640.501 631.646 -641.0801 625.4165 -642.2495 c619.3301 -643.3916 613.1963 -644.793 607.0415 -645.479 c595.061 -646.8149 582.6748 -645.9414 570.7158 -644.8389 c564.1602 -644.2349 557.6724 -643.2241 551.1328 -642.5093 c543.9258 -641.7212 537.6938 -639.9482 530.8267 -637.6592 c529.0059 -637.0522 527.4272 -637.2441 526.1641 -637.9243 C523.5342 -636.9561 520.4033 -637.5088 518.5889 -640.646 c515.3018 -646.3315 514.3467 -653.0371 512.9922 -659.3818 c511.3882 -666.8945 508.9341 -674.1846 507.043 -681.6265 c503.4663 -695.7007 497.4346 -709.9019 488.897 -721.7104 c481.1245 -732.4609 470.7139 -741.2764 459.0962 -747.5879 c452.6235 -751.1045 444.979 -752.8525 438.0083 -755.1763 c430.6646 -757.6245 423.6689 -757.8076 415.9805 -757.5859 c400.5449 -757.1401 384.9053 -754.8154 369.6479 -752.4053 c362.2358 -751.2349 355.1646 -749.7275 348.2749 -746.6846 c341.3467 -743.624 334.7627 -739.8213 327.9531 -736.5117 c321.9648 -733.6011 315.8071 -731.8496 309.4624 -729.9287 c306.7764 -729.1152 304.4038 -728.1689 302.332 -726.2446 c301.0933 -725.0942 299.603 -724.6792 298.1401 -723.9077 c296.4448 -723.0137 295.1045 -721.4556 293.7632 -720.1235 c291.7163 -718.0903 288.791 -716.9277 286.5332 -715.1313 c284.103 -713.1982 281.8828 -710.9087 279.5679 -708.8335 c274.6074 -704.3867 269.7554 -699.8364 265.3018 -694.876 c260.1787 -689.1685 256.0571 -682.6079 253.814 -675.2505 c253.5479 -674.3774 253.1558 -673.6479 252.6812 -673.0381 C253.5044 -666.7056 244.187 -662.165 240.7095 -668.8013 c231.981 -685.4604 216.4741 -696.0273 199.3008 -702.5381 c195.1636 -704.1069 190.1055 -704.7583 185.7271 -705.2134 c180.3027 -705.7773 175.8394 -704.6353 170.6484 -703.4063 c166.2622 -702.3672 163.0186 -699.0513 160.332 -695.6411 c159.2578 -694.2773 157.2886 -693.7617 156.0474 -692.4277 c154.2637 -690.5112 152.5376 -688.8711 150.4473 -687.2793 c147.1016 -684.7324 141.8159 -687.4331 140.8989 -691.1641 c139.9854 -694.8799 140.1328 -698.4131 140.4941 -702.188 c140.9268 -706.7031 140.0386 -710.7446 138.9072 -715.0874 c136.7583 -723.334 134.9297 -731.5977 131.5396 -739.4624 c124.417 -755.9863 113.019 -770.4458 100.6323 -783.3711 c88.5195 -796.0103 71.0186 -802.2441 54.8521 -807.8145 c47.188 -810.4551 37.4995 -809.0928 29.5557 -808.8784 c19.7573 -808.6143 11.1787 -807.9282 1.99805 -804.1416 c1.22412 -803.8228 0.418457 -803.7407 -0.372559 -803.8325 C-0.372559 -817.0898 L8.26074 -820.4673 17.0313 -821.7598 26.3188 -821.8154 c36.0088 -821.874 45.5083 -822.4653 55.1396 -821.0068 c59.562 -820.3369 63.7275 -818.3779 67.8481 -816.7202 c70.0552 -815.8325 72.2671 -814.9614 74.4932 -814.1221 c77.2266 -813.0918 80.6099 -812.6123 83.1196 -811.126 c91.1636 -806.3613 99.3193 -802.0225 106.4102 -795.8442 c113.6831 -789.5073 119.6606 -781.4414 125.7114 -773.978 c131.9824 -766.2441 136.833 -757.9424 141.3291 -749.0947 c145.6753 -740.542 148.438 -731.2129 150.6279 -721.9092 c151.6646 -717.5044 153.0415 -713.1416 153.4561 -708.6147 c153.4849 -708.3018 153.5029 -707.9863 153.5146 -707.6699 C153.7173 -707.8662 153.9233 -708.0498 154.1235 -708.2573 c157.6938 -711.9561 162.335 -714.4243 167.1929 -715.9419 c178.6631 -719.5249 189.6079 -718.2529 201.1138 -715.481 c217.5166 -711.5293 233.5708 -700.5122 244.4492 -686.7881 C248.7949 -695.8564 255.2842 -703.645 262.542 -710.7695 c266.9272 -715.0737 271.6689 -718.9912 276.1025 -723.2407 c278.269 -725.3174 280.8149 -727.0386 283.3232 -728.6685 c286.2598 -730.5762 288.6309 -733.1978 291.5786 -735.1328 c295.6299 -737.792 300.5127 -740.7002 306.0068 -742.4644 c312.9766 -744.7017 319.4424 -746.7007 326.0073 -750.0313 c332.2612 -753.2041 338.4087 -756.5503 344.8779 -759.2769 c352.415 -762.4531 360.0454 -763.9702 368.0962 -765.2417 c383.2744 -767.6392 398.9536 -770.0488 414.3003 -770.5322 c421.1611 -770.748 427.8779 -770.748 434.6733 -769.6558 c442.5308 -768.3931 450.4502 -764.7163 457.9897 -762.2031 c470.5127 -758.0288 481.8589 -748.8193 490.895 -739.4268 c500.9976 -728.9248 507.0088 -716.8877 513.1309 -703.8677 c517.5791 -694.4087 519.2891 -684.3135 522.4878 -674.4468 c523.8857 -670.1348 524.9146 -665.7104 525.8599 -661.2813 c526.5996 -657.8159 527.1118 -653.96 528.3252 -650.5088 C534.709 -652.6191 540.7056 -654.3984 547.4604 -655.1372 c554.6353 -655.9219 561.7681 -656.9438 568.9536 -657.6685 c582.1099 -658.9951 595.5869 -659.7559 608.7637 -658.2871 c614.957 -657.5967 621.0894 -656.2114 627.2163 -655.0908 c634.0073 -653.8491 640.8652 -653.0527 647.5767 -651.4019 c661.1807 -648.0557 674.1455 -641.2656 685.416 -633.0503 c707.2041 -617.1689 723.8784 -595.9092 735.9463 -571.9644 c738.6743 -566.5518 742.1001 -561.0962 744.1743 -555.4204 c746.4282 -549.2544 747.3872 -542.7559 749.5908 -536.5532 c752.0088 -529.7461 752.6245 -523.7588 751.7544 -516.5972 c751.6191 -515.4839 751.4785 -514.3413 751.3008 -513.2002 C758.4146 -514.6973 766.0337 -513.7773 773.3691 -511.0425 c779.7422 -508.6665 785.251 -504.9292 791.042 -501.4595 c798.0869 -497.2383 802.4619 -491.7363 807.0264 -485.0386 c811.9277 -477.8462 816.1084 -470.4023 819.4619 -462.376 c822.7251 -454.5654 823.4067 -446.3657 824.0894 -438.0181 c824.5615 -432.2476 824.5674 -426.4341 824.5313 -420.6318 C827.458 -423.3804 830.3247 -426.1885 833.2524 -428.9619 c842.9282 -438.126 853.4185 -446.7817 865.1182 -453.1914 c870.6396 -456.2163 874.9678 -460.1753 880.9292 -462.5723 c887.3979 -465.1738 894.1094 -466.8955 900.7329 -469.0215 c914.873 -473.561 929.4829 -475.4077 944.3096 -476.2095 c959.8145 -477.0483 976.061 -475.1792 991.1025 -471.355 c1006.4233 -467.4604 1020.6328 -460.0469 1034.5981 -452.8843 c1047.4873 -446.2734 1059.7012 -436.9956 1070.9473 -427.917 c1081.8892 -419.085 1092.563 -408.4834 1100.6128 -396.9297 c1104.1436 -391.8628 1108.5093 -387.5439 1112.3594 -382.7061 c1116.2319 -377.8389 1119.9531 -372.8804 1123.1006 -367.5073 c1126.4111 -361.8569 1130.082 -356.3472 1133.0898 -350.5249 c1134.2275 -348.3223 1134.9888 -346 1135.6396 -343.6406 C1146.666 -354.835 1164.9932 -357.3516 1180.8813 -357.7852 c1195.6255 -358.188 1208.3657 -354.9116 1221.5698 -348.4004 c1224.2856 -347.0615 1227.1201 -345.2378 1229.4722 -343.3315 c1230.7437 -342.3018 1231.7241 -341.2949 1232.7217 -339.9937 c1231.1504 -342.0435 1233.791 -339.2837 1234.5098 -338.6587 c1235.6401 -337.6758 1236.8955 -336.4429 1238.0889 -335.0703 C1241.3667 -337.7773 1244.3418 -340.9219 1247.7173 -343.4941 c1252.6973 -347.2891 1259.5688 -350.189 1265.2939 -352.7158 c1278.7026 -358.6328 1293.0122 -358.4253 1307.29 -359.501 c1335.1631 -361.6011 1364.2905 -364.9009 1389.4858 -350.0015 c1395.4565 -346.4707 1401.667 -343.3633 1407.6392 -339.832 c1414.0796 -336.0234 1418.4312 -329.1968 1424.7769 -325.1426 c1435.5337 -318.2695 1444.1167 -306.8438 1449.543 -295.4688 c1452.293 -289.7056 1453.7144 -283.626 1455.8047 -277.6416 c1458.4346 -270.1133 1460.8096 -262.6919 1461.0479 -254.6504 c1461.2651 -247.3218 1460.7915 -239.958 1459.6279 -232.7241 c1458.3945 -225.0522 1455.5024 -217.6665 1454.0889 -209.9863 c1452.5005 -201.3579 1451.2559 -192.7544 1448.5742 -184.3701 c1448.1069 -182.9092 1447.5342 -181.48 1446.9346 -180.061 C1447.5908 -180.3071 1448.2534 -180.5439 1448.9224 -180.7734 c1456.4341 -183.3501 1464.5898 -182.8052 1472.3936 -182.8052 c1479.5322 -182.8052 1485.2861 -181.0415 1491.6113 -177.7983 c1497.6929 -174.6802 1503.6045 -171.7832 1508.6294 -167.0264 c1513.4922 -162.4233 1516.1553 -155.9258 1518.8398 -149.9375 c1522.0781 -142.7153 1524.7197 -135.4214 1524.6973 -127.436 c1524.6787 -120.7339 1525.0249 -112.6396 1521.9824 -106.4854 c1520.7813 -104.0557 1519.2749 -101.8027 1517.8594 -99.4956 c1517.7881 -99.3794 1517.7246 -99.2593 1517.6553 -99.1421 C1531.4619 -97.7739 1545.2866 -93.0181 1556.7646 -85.5117 c1570.6909 -76.4048 1580.5947 -61.2783 1589.0391 -47.2896 c1593.4331 -40.0107 1597.917 -32.8647 1600.1758 -24.5874 c1602.1675 -17.2891 1602.46 -8.58398 1602.3403 -1.04248 cf859.1118 -205.8315 m865.9014 -208.2422 872.8481 -210.1206 879.7695 -212.1055 c887.1147 -214.2119 893.8994 -217.3379 901.064 -219.8403 c907.375 -222.0449 911.9263 -226.3696 917.542 -229.6597 c920.5767 -231.437 924.3403 -232.416 927.5581 -233.8643 c931.6343 -235.6992 935.4541 -238.0049 939.3833 -240.1221 c952.9565 -247.4341 967.2412 -253.7949 981.2837 -260.1426 c994.498 -266.1152 1006.5269 -273.9873 1019.1758 -281.043 c1025.4146 -284.5229 1031.8662 -287.689 1037.9321 -291.4805 c1044.1367 -295.3579 1049.6704 -300.21 1055.6523 -304.4102 c1061.3096 -308.3828 1067.0347 -311.4502 1073.1826 -314.5176 c1079.0718 -317.4551 1085.8369 -319.6855 1090.4912 -313.5015 c1093.5137 -309.4858 1093.9453 -303.2773 1094.8091 -298.5205 c1096.1958 -290.8833 1097.7085 -283.2754 1099.6465 -275.7568 c1103.3428 -261.416 1109.5039 -248.2158 1115.4575 -234.7314 c1123.2471 -217.0898 1127.5684 -198.105 1137.145 -181.2358 c1141.7861 -173.0605 1146.6699 -165.7559 1153.1543 -158.9121 c1156.208 -155.689 1159.2383 -152.4053 1162.3667 -149.2651 c1165.7686 -145.8501 1169.6523 -143.0601 1172.6953 -139.2808 c1177.8994 -132.8174 1168.7617 -123.5571 1163.5029 -130.0884 c1159.4941 -135.0669 1154.0459 -138.5752 1150.0376 -143.5537 c1145.3506 -149.375 1139.5078 -154.1675 1134.958 -160.186 c1126.3096 -171.626 1120.6089 -184.7925 1115.4209 -198.0396 c1110.0186 -211.8354 1105.3892 -225.7158 1099.2275 -239.2173 c1093.0713 -252.7065 1088.2202 -266.5903 1085.0166 -281.0776 c1083.4912 -287.9731 1082.2969 -294.9404 1081.0381 -301.8877 c1080.9111 -302.5874 1080.6875 -303.2998 1080.4746 -304.0049 C1077.5889 -302.9282 1074.2617 -300.9438 1072.1191 -299.646 c1059.9448 -292.272 1049.4619 -282.4614 1036.8223 -275.8608 c1030.4258 -272.5205 1024.1777 -268.9409 1017.814 -265.5 c1011.2178 -261.9331 1005.2363 -257.4351 998.5957 -253.9624 c985.4194 -247.0713 971.5645 -241.3555 958.1216 -235.0068 c949.4238 -230.8994 941.2124 -225.832 932.4497 -221.8877 c929.2422 -220.4438 925.5996 -219.5249 922.7915 -217.4038 c919.3545 -214.8071 915.7993 -212.4932 911.9741 -210.5083 c896.3472 -202.4004 879.019 -199.1367 862.5679 -193.2964 c854.647 -190.4844 851.2695 -203.0479 859.1118 -205.8315 cf*u1 D3840.0117 -1380.6543 m3839.3057 -1380.0977 3838.4053 -1379.6758 3837.2402 -1379.4873 c3826.3301 -1377.7188 3814.666 -1379.2549 3803.6191 -1379.2549 c3792.5225 -1379.2549 3781.4551 -1379.0752 3770.3887 -1380.0498 c3759.9941 -1380.9658 3749.6152 -1381.7637 3739.252 -1382.7725 c3734.5859 -1383.2266 3729.8525 -1384.0957 3725.1729 -1384.1777 c3720.6084 -1384.2588 3716.2227 -1385.2021 3712.252 -1387.4873 c3712.127 -1387.5596 3712.0156 -1387.6387 3711.8984 -1387.7148 C3712.1309 -1380.332 3712.2363 -1372.9658 3712.2402 -1365.6445 c3712.248 -1349.6602 3713.4629 -1333.7109 3713.4639 -1317.7275 c3713.4648 -1301.5732 3714.5068 -1285.668 3715.4814 -1269.5645 c3715.9277 -1262.1973 3715.9111 -1254.8057 3715.9121 -1247.4277 c3715.9121 -1243.5605 3716.7773 -1239.5137 3717.041 -1235.6357 c3717.3496 -1231.0889 3717.4629 -1226.5293 3717.5605 -1221.9746 c3717.7246 -1214.3535 3717.7344 -1206.7324 3718.0449 -1199.1143 c3718.373 -1191.0352 3719.9746 -1183.1426 3721.0449 -1175.1445 c3723.0234 -1160.3535 3721.9521 -1145.1436 3722.0811 -1130.248 c3722.2197 -1114.2529 3722.6465 -1098.2627 3722.5605 -1082.2666 c3722.4756 -1066.2363 3720.7998 -1050.4136 3719.9473 -1034.4268 c3719.1338 -1019.1636 3718.6133 -1003.7197 3718.3711 -988.4351 c3718.2617 -981.4995 3717.1367 -974.6436 3717.1367 -967.7109 c3717.1367 -959.7578 3717.5801 -951.9346 3715.8145 -944.1401 c3714.2471 -937.2251 3713.5293 -930.9756 3713.418 -923.8916 c3713.2959 -915.9971 3712.0967 -908.3037 3710.7832 -900.5371 c3709.627 -893.6958 3708.2939 -886.8887 3707.1563 -880.0444 c3705.9473 -872.7666 3705.8223 -865.5298 3704.1719 -858.2964 c3700.9219 -844.0537 3696.7959 -829.9453 3694.1602 -815.5693 c3693.2148 -810.417 3692.4248 -805.3315 3691.0449 -800.2656 c3689.6875 -795.2837 3687.8301 -790.4902 3686.7383 -785.4404 c3684.4063 -774.6631 3681.8594 -763.9385 3678.7637 -753.3525 c3675.7012 -742.8799 3672.4443 -732.4121 3669.1699 -722.002 c3665.6504 -710.8076 3659.8945 -700.54 3654.665 -690.082 c3652.2285 -685.2095 3648.0039 -681.1548 3645.8926 -676.145 c3643.9971 -671.6494 3642.5762 -667.041 3640.0723 -662.8203 c3637.9072 -659.1719 3634.5059 -656.1675 3632.876 -652.2007 c3631.1416 -647.9805 3629.4805 -643.3672 3626.8799 -639.5742 c3620.9229 -630.8867 3618.4531 -621.2373 3614.2051 -611.6738 c3612.2227 -607.2129 3609.3379 -602.9106 3606.3301 -599.0864 c3603.4053 -595.3682 3599.7998 -592.1792 3597.5078 -588.0073 c3596.9932 -587.0703 3596.3604 -586.3623 3595.6582 -585.8501 C3593.7822 -578.3135 3591.5645 -570.8657 3588.8672 -563.5283 c3583.6172 -549.2476 3576.8232 -535.6431 3572.457 -521.0088 c3571.1113 -516.499 3568.4531 -512.4785 3566.873 -507.9941 C3569.3438 -510.2046 3572.3242 -511.7588 3574.9063 -513.8198 c3577.71 -516.0596 3580.1455 -518.771 3582.9521 -521.0352 c3588.9209 -525.8496 3595.8262 -529.1245 3602.6055 -532.6143 c3608.2676 -535.5288 3612.2441 -541.1738 3617.9941 -544.2637 c3624.8438 -547.9429 3631.6328 -551.0278 3638.8984 -553.8496 c3645.5889 -556.4482 3651.8047 -560.5093 3658.2178 -563.7554 c3665.0049 -567.1904 3671.5439 -571.0483 3678.4717 -574.2158 c3684.5176 -576.9795 3690.7168 -579.0645 3697.082 -580.9424 c3704.5596 -583.1475 3711.0625 -586.7563 3718.1328 -589.9297 c3729.8232 -595.1763 3742.1768 -598.7715 3753.7959 -604.1816 c3766.21 -609.9619 3778.9063 -615.4229 3790.5977 -622.6084 c3797.5859 -626.9023 3803.959 -616.3096 3797.6543 -611.7207 C3797.5293 -611.5371 3797.3984 -611.355 3797.252 -611.1753 c3798.0195 -612.1177 3797.3066 -610.6064 3796.8066 -609.6265 C3796.9248 -609.6064 3796.0781 -607.1187 3795.9893 -606.8057 c3795.2451 -604.1997 3794.3389 -601.5571 3793.5195 -598.9868 c3791.3008 -592.0259 3789.9814 -584.9678 3786.7773 -578.3384 c3783.8613 -572.3057 3779.6416 -566.8716 3776.4395 -561.0571 c3774.9863 -558.4189 3773.7949 -555.4673 3772.6494 -552.6836 c3771.1299 -548.9897 3768.5693 -546.0254 3766.1846 -542.8682 c3762.1758 -537.5601 3759.5547 -530.8667 3756.2656 -525.0869 c3752.5156 -518.4985 3747.4258 -512.8008 3743.5986 -506.2446 c3740.0479 -500.1606 3735.3545 -495.0977 3730.7871 -489.7695 c3725.2461 -483.3042 3719.9717 -476.3589 3713.9492 -470.3398 c3704.1357 -460.5313 3693.0215 -452.8364 3681.9385 -444.5942 c3676.583 -440.6113 3670.4688 -438.4766 3664.5449 -435.5146 c3657.9316 -432.208 3651.8105 -428.5815 3644.627 -426.6523 c3638.7617 -425.0771 3634.3154 -421.0771 3628.7637 -418.7871 c3621.8574 -415.9385 3614.8154 -413.5732 3608.0352 -410.3794 c3595.3135 -404.3867 3581.3506 -399.7891 3567.458 -397.7275 c3557.376 -396.231 3548.2705 -392.0908 3538.3848 -389.9233 c3532.8857 -388.7183 3527.4863 -388.0737 3522.0117 -386.5913 c3518.2471 -385.5713 3514.4551 -384.6821 3510.6309 -383.9419 C3514.7637 -383.8955 3518.8945 -383.8706 3523.0273 -384.0996 c3529.7637 -384.4717 3537.0439 -384.0986 3543.6514 -385.3896 c3556.6611 -387.9316 3569.7109 -387.2515 3582.8936 -387.0996 c3596.3467 -386.9448 3609.8008 -386.853 3623.2441 -387.4385 c3629.498 -387.7104 3635.7393 -388.4746 3641.9961 -388.4746 c3648.3496 -388.4746 3654.707 -388.4067 3661.0596 -388.4927 c3667.2676 -388.5762 3673.4258 -389.665 3679.5313 -390.6802 c3686 -391.7563 3692.7832 -391.5117 3699.3145 -391.3906 c3712.4336 -391.1465 3725.5254 -390.9102 3738.6494 -390.9102 c3752.1992 -390.9102 3765.6621 -389.8076 3779.1895 -389.6855 c3783.3516 -389.6479 3785.4463 -386.4209 3785.4746 -383.1919 C3789.8652 -382.0127 3793.0029 -376.3931 3788.6816 -372.4678 c3784.2783 -368.4673 3778.75 -366.7109 3774.0938 -363.1641 c3768.6328 -359.0039 3761.7119 -358.2593 3755.4932 -355.792 c3748.8027 -353.1372 3741.8018 -351.4434 3735.5234 -347.832 c3729.4268 -344.3257 3724.1758 -339.5259 3717.4922 -337.0571 c3714.6387 -336.0029 3712.1865 -334.8115 3709.1523 -334.2251 c3705.7637 -333.5698 3702.8418 -333.3423 3699.7539 -331.6758 c3693.3633 -328.2275 3685.7119 -325.9956 3678.5859 -324.8301 c3664.4375 -322.5156 3649.8848 -321.2612 3635.6182 -320.1104 c3620.1748 -318.8643 3604.7324 -317.4067 3589.2354 -316.8633 c3572.957 -316.292 3557.1758 -318.0942 3541.377 -322.04 c3537.5723 -322.9902 3533.7715 -323.9595 3529.9805 -324.9595 C3533.0771 -321.9883 3535.8457 -318.7197 3538.9414 -315.5405 c3550.7188 -303.4521 3558.8672 -287.8188 3568.1289 -273.8447 c3577.499 -259.7085 3583.1914 -243.8052 3587.8457 -227.6108 c3590.2139 -219.3726 3589.8096 -210.0239 3589.8262 -201.521 c3589.834 -197.6577 3589.1709 -194.1753 3587.7529 -190.582 C3586.9443 -188.8276 3586.8477 -188.5273 3587.4639 -189.6802 C3587.5938 -188.6909 3587.7188 -187.7012 3587.8379 -186.7104 c3588.0879 -184.6826 3587.7695 -182.6221 3587.1465 -180.6978 c3586.2773 -178.0112 3583.8477 -175.8115 3580.8789 -175.9258 c3575.6719 -176.1265 3571.2803 -177.7964 3566.3496 -179.0654 c3560.7041 -180.5186 3555.0234 -182.0449 3549.584 -184.1392 c3538.2344 -188.5088 3527.4648 -193.3496 3516.7734 -199.1304 c3511.415 -202.0278 3506.0313 -204.6973 3500.4531 -207.1392 c3495.1025 -209.4814 3491.291 -213.0376 3486.5518 -216.2891 c3477.0498 -222.8081 3469.7012 -230.7798 3462.3428 -239.6128 c3454.7031 -248.7837 3445.8135 -258.8413 3441.543 -270.0601 c3439.5645 -275.2554 3438.3672 -280.4575 3436.0195 -285.5381 c3435.5879 -286.4731 3435.125 -287.3857 3434.6523 -288.291 C3430.9063 -276.5205 3424.5537 -265.4248 3419.3447 -254.3604 c3413.5518 -242.0542 3403.293 -231.6025 3392.2148 -223.9771 c3381.0156 -216.269 3367.0332 -213.376 3353.8721 -211.1963 c3339.0352 -208.7393 3323.8936 -208.9663 3308.9063 -208.9795 c3292.8145 -208.9941 3277.3467 -210.7041 3261.4395 -212.9761 c3245.7256 -215.2212 3229.9316 -217.7246 3214.3857 -220.9531 c3199.6699 -224.0093 3184.9785 -229.1313 3170.7637 -233.9644 c3154.5098 -239.4902 3138.4619 -245.9717 3124.666 -256.3828 c3119.8076 -260.0493 3122.0293 -267.1284 3126.21 -268.6006 C3126.7383 -269.1694 3127.4365 -269.6685 3128.3379 -270.0557 c3139.6953 -274.9351 3151.2305 -276.9194 3163.4473 -278.2881 c3169.6836 -278.9868 3175.7168 -279.7158 3181.918 -280.8359 c3188.3672 -282.001 3195.1914 -281.0024 3201.5088 -282.4531 c3206.9521 -283.7031 3212.416 -283.9727 3217.9209 -284.6904 c3224.5332 -285.5527 3231.4707 -286.5537 3238.1201 -286.8569 c3243.9219 -287.1216 3250.1445 -288.6919 3255.8867 -289.6851 c3262.0801 -290.7559 3268.6211 -291.4624 3274.6582 -293.1865 c3286.2656 -296.5005 3298.5029 -296.8149 3310.123 -300.1875 c3321.9258 -303.6133 3333.4336 -306.3047 3344.4043 -312.1201 c3349.1055 -314.6113 3354.043 -315.9116 3358.835 -318.0757 c3363.9893 -320.4028 3369.1631 -322.874 3374.5254 -324.686 c3380.0664 -326.5586 3385.3281 -327.4287 3390.041 -331.1646 c3393.5205 -333.9229 3396.6484 -337.2163 3398.8809 -341.0537 C3392.3359 -340.1924 3385.7725 -339.5259 3379.1494 -339.4253 c3371.6035 -339.3105 3364.0508 -339.7251 3356.5078 -339.8965 c3348.6855 -340.0747 3341.041 -341.4155 3333.2402 -342.0464 c3318.0762 -343.2729 3302.8105 -341.8428 3287.6279 -343.0601 c3280.2012 -343.6558 3272.957 -345.5596 3265.584 -346.2646 c3257.6191 -347.0264 3249.6992 -348.3096 3241.8809 -349.9946 c3226.6289 -353.2813 3211.5449 -357.5273 3196.6074 -362.0249 c3181.8105 -366.4805 3166.7461 -370.002 3151.9258 -374.4688 c3136.7207 -379.0522 3121.7979 -384.6885 3106.9141 -390.2061 c3092.0283 -395.7241 3077.0273 -400.8921 3062.6865 -407.7344 c3056.1758 -410.8408 3049.7383 -413.9634 3042.9775 -416.501 c3036.2734 -419.0171 3029.4492 -420.7666 3022.7793 -423.4346 c3009.666 -428.6797 2996.5723 -433.4063 2983.8652 -439.646 c2977.7617 -442.6431 2971.6934 -445.7031 2965.5273 -448.5723 c2959.8564 -451.2119 2954.3652 -456.0884 2949.3691 -459.8276 c2941.4316 -465.7686 2930.4199 -472.415 2926.5518 -482.1187 C2920.0352 -483.5874 2920.5166 -494.9609 2928 -494.9609 c2942 -494.9609 2955.8154 -495.4829 2969.5146 -493.7617 c2983.6035 -491.9912 2998.3926 -489.8916 3012.0547 -486.0068 c3018.8672 -484.0698 3025.4355 -481.2764 3032.248 -479.3779 c3039.1201 -477.4629 3046.2617 -476.8125 3053.1328 -474.8843 c3066.4473 -471.1479 3080.3994 -468.7969 3092.9863 -462.979 c3098.751 -460.3145 3105.8398 -460.2202 3111.9434 -458.5684 c3117.9805 -456.9346 3124.1914 -456.0688 3130.1934 -454.2358 c3143.8896 -450.0527 3158.209 -447.1616 3172.3086 -444.5791 c3186.6992 -441.9424 3200.8643 -438.3271 3215.1006 -434.9419 c3219.5879 -433.875 3224.0869 -432.8857 3228.5879 -431.8975 C3223.835 -434.8516 3219.0498 -437.7529 3214.2051 -440.5557 c3200.8955 -448.2559 3186.9277 -454.7207 3173.6357 -462.4683 c3160.9902 -469.8398 3149.3994 -478.3965 3137.4199 -486.7485 c3125.1631 -495.2949 3115.8613 -507.2119 3105.3711 -517.7539 c3089.1426 -534.0625 3073.5352 -551.0952 3057.125 -567.1953 c3049.0313 -575.1362 3039.8076 -582.5762 3032.9727 -591.6802 c3026.3672 -600.478 3018.5459 -608.2012 3011.8555 -616.9282 c3008.665 -621.0913 3006.5596 -625.6357 3003.7969 -630.0264 c3000.8271 -634.7461 2997.709 -639.3726 2994.6162 -644.0127 c2988.374 -653.3784 2982.4121 -662.8916 2977.1328 -672.8389 c2972.0547 -682.4082 2966.5527 -691.8203 2962.3906 -701.8389 c2960.3604 -706.7261 2958.623 -711.6602 2957.6445 -716.8711 c2957.3945 -718.2041 2957.1104 -720.6772 2956.7705 -722.9175 C2954.0732 -724.8047 2953.5225 -727.729 2954.292 -730.2422 C2952.9238 -736.1992 2960.3379 -742.3262 2964.8359 -736.6611 c2966.1709 -734.9805 2967.0508 -733.2275 2967.6895 -731.4038 C2978.7627 -724.7529 2990.8252 -719.6543 3002.4209 -714.0322 c3015.7324 -707.5781 3029.2529 -701.6533 3042.8545 -695.8457 c3056.876 -689.8589 3069.9258 -681.5342 3082.752 -673.3442 c3095.5625 -665.1641 3107.6289 -656.0298 3120.4043 -647.7964 c3133.5791 -639.3052 3146.6963 -630.7417 3160.3037 -622.9482 c3173.9785 -615.1162 3187.958 -607.8262 3201.7832 -600.2656 c3215.1816 -592.9385 3228.7061 -586.0464 3241.7266 -578.0269 c3254.541 -570.1348 3266.9844 -561.5693 3279.1543 -552.7222 c3296.5127 -540.1035 3311.7783 -524.9443 3327.0215 -509.918 c3334.5195 -502.5264 3342.332 -495.5718 3350 -488.3794 c3358.3076 -480.5879 3365.7031 -471.8716 3373.6572 -463.73 c3377.4805 -459.8169 3380.9365 -455.5293 3384.7168 -451.561 c3385.7979 -450.4253 3386.9082 -449.3135 3388.0234 -448.2046 C3385.6748 -453.8105 3382.8828 -459.2969 3380.0762 -464.6147 c3376.709 -470.9941 3371.7002 -476.4609 3368.749 -483.0493 c3365.8906 -489.4312 3363.71 -496.2725 3361.1738 -502.8022 c3355.6094 -517.125 3351.4736 -531.9268 3345.9072 -546.2646 c3343.3916 -552.7441 3340.8262 -559.0879 3338.0889 -565.4629 c3336.8594 -568.3252 3335.0547 -570.8916 3334.3105 -573.9263 c3333.373 -577.7559 3332.4434 -581.5542 3331.1152 -585.2715 c3328.7705 -591.8291 3325.3281 -598.0747 3322.8906 -604.6382 c3320.0664 -612.2412 3317.457 -619.7695 3316.127 -627.7813 c3313.5107 -643.5439 3312.2139 -659.4775 3309.585 -675.2505 c3307.1699 -689.7378 3305.1631 -704.2202 3303.2324 -718.752 c3302.2461 -726.166 3301.0166 -733.396 3299.5469 -740.7422 c3297.9248 -748.8511 3298.502 -757.665 3298.3867 -765.9136 c3298.1484 -782.9424 3298.2188 -799.9736 3297.3262 -816.9858 c3296.4326 -833.9971 3294.1309 -850.8862 3294.0508 -867.9443 c3293.9736 -884.5068 3294.0508 -901.0718 3294.0508 -917.6348 c3294.0508 -925.3486 3295.6592 -932.8022 3296.9746 -940.3652 c3297.6445 -944.2148 3298.9209 -947.897 3300.4326 -951.4893 c3301.4199 -953.835 3303.8438 -957 3303.8438 -960 c3303.8438 -966.5078 3312.4463 -967.7212 3315.6553 -963.6406 C3316.6104 -963.5615 3317.582 -963.3154 3318.5215 -962.9189 c3330.9443 -957.6758 3339.125 -945.8179 3348.6035 -936.6758 c3359.7588 -925.918 3367.748 -912.8486 3377.4473 -900.8628 c3386.875 -889.2129 3391.71 -874.8291 3399.4082 -862.103 c3406.8105 -849.8652 3411.5137 -835.9126 3414.3506 -821.9551 c3415.7676 -814.98 3416.3984 -807.9199 3418.0898 -800.9917 c3419.8545 -793.7646 3422.1504 -786.6782 3423.9297 -779.4521 c3427.4707 -765.0752 3432.1289 -751.0811 3435.8125 -736.7505 c3437.6182 -729.7246 3439.4111 -722.7637 3441.5703 -715.8389 c3443.8301 -708.5874 3444.2832 -700.2842 3445.4268 -692.7842 c3447.7832 -677.3311 3451.7314 -662.2065 3453.7363 -646.6733 c3455.6543 -631.8086 3455 -616.8599 3455 -601.8882 C3455 -588.8462 L3466.0605 -617.2271 3470.791 -647.4214 3479.6963 -676.4248 c3481.8398 -683.4033 3484.1035 -690.1958 3485.7539 -697.3135 c3487.5361 -705.0059 3489.4551 -712.6665 3491.3701 -720.3271 c3493.1094 -727.2871 3495.8369 -733.8008 3499.9814 -739.6299 c3504.502 -745.9878 3507.2393 -753.1587 3510.543 -760.188 c3512.9219 -765.25 3515.4932 -770.2134 3518.2871 -775.0586 c3521.0684 -779.8818 3523.0596 -785.0771 3525.4395 -790.1143 c3530.4873 -800.7988 3535.7949 -811.52 3541.3535 -821.9419 c3543.9902 -826.8848 3546.9775 -831.6411 3549.8047 -836.4751 c3552.668 -841.3701 3554.4541 -847.1021 3557.041 -852.1875 c3561.8213 -861.582 3566.8115 -869.5781 3576.375 -874.7813 c3576.6611 -874.937 3576.9453 -875.062 3577.2285 -875.1729 C3579.4033 -876.3555 3582.1094 -876.2612 3584.252 -873.7646 c3587.6582 -869.7944 3589.8506 -864.5288 3591.2695 -859.5132 c3592.1211 -856.5039 3593.6143 -853.6577 3594.7451 -850.7476 c3596.2334 -846.9189 3596.9121 -842.6973 3597.7822 -838.6968 c3601.041 -823.7051 3603.5977 -808.5283 3604.8994 -793.272 c3605.7246 -783.5967 3606.7871 -773.9526 3607.9551 -764.3184 C3609.8936 -767.5103 3611.8018 -770.7148 3614.1084 -773.5952 c3618.7529 -779.3955 3623.7539 -784.8774 3628.5117 -790.5684 c3632.707 -795.584 3635.0684 -802.2764 3637.6963 -808.1812 c3640.9287 -815.4414 3644.7031 -822.4106 3647.5098 -829.8574 c3652.7939 -843.877 3656.6855 -859.1812 3659.4063 -873.9072 c3660.5625 -880.1631 3663.2734 -885.9941 3664.2539 -892.2944 c3665.4268 -899.8262 3665.5508 -907.3765 3667.2559 -914.8403 c3670.6719 -929.7861 3670.4873 -945.1191 3673.1797 -960.125 c3675.8037 -974.749 3678.5439 -989.7632 3679.502 -1004.5884 c3681.5332 -1036.0703 3680.8789 -1067.7017 3680.8789 -1099.249 c3680.8789 -1115.7803 3680.7939 -1132.1074 3678.9043 -1148.5547 c3678.001 -1156.4199 3676.9551 -1164.2842 3675.4873 -1172.0596 c3674.1143 -1179.333 3673.7822 -1186.6934 3672.3867 -1193.9375 c3670.9883 -1201.1914 3670.5273 -1208.4688 3668.9209 -1215.708 c3667.1699 -1223.5977 3666.2266 -1231.5527 3664.7324 -1239.4824 c3661.9102 -1254.4502 3656.8037 -1268.8936 3652.7344 -1283.542 c3648.5449 -1298.6211 3645.1445 -1313.9307 3640.7148 -1328.9414 c3638.6699 -1335.8701 3636.4941 -1342.5674 3634.9863 -1349.668 c3633.3838 -1357.209 3631.6475 -1364.583 3629.2725 -1371.9219 c3627.543 -1377.2637 3626.125 -1382.7227 3624.7363 -1388.1914 C3618.8359 -1389.0869 3613.123 -1390.4766 3607.373 -1392.2051 c3599.9355 -1394.4414 3592.4932 -1396.0684 3584.9238 -1397.7822 c3569.3867 -1401.2988 3554.1338 -1405.9658 3538.7539 -1410.0908 c3523.3711 -1414.2158 3507.4316 -1416.7832 3491.9004 -1420.3506 c3476.4355 -1423.9043 3461.0332 -1427.7266 3445.7314 -1431.9248 c3430.543 -1436.0918 3415.8789 -1440.8242 3401.3877 -1447.0049 c3394.5801 -1449.9082 3387.7852 -1452.8213 3380.8398 -1455.3838 c3374.1523 -1457.8506 3367.127 -1459.3047 3360.4365 -1461.8096 c3353.8027 -1464.2939 3347.1758 -1466.8809 3340.3486 -1468.8066 c3332.8838 -1470.9121 3326.1426 -1473.9219 3319.0781 -1477.0938 c3312.9023 -1479.8672 3306.2598 -1481.4521 3300.0088 -1484.1641 c3293.3271 -1487.0625 3286.9648 -1490.668 3280.3848 -1493.7842 c3266.8809 -1500.1797 3253.5273 -1506.2646 3240.4785 -1513.584 c3233.9443 -1517.248 3227.499 -1521.0605 3221.2646 -1525.2178 c3214.3887 -1529.8018 3207.4063 -1533.7852 3200.1025 -1537.6855 c3186.8486 -1544.7637 3173.1133 -1550.5605 3159.6211 -1557.0986 c3153.3564 -1560.1348 3147.5332 -1564.2988 3141.375 -1567.6191 c3134.2012 -1571.4863 3127.082 -1575.4443 3120.0205 -1579.5127 c3092.2656 -1595.5049 3065.6152 -1613.332 3038.9746 -1631.0908 c3026.6602 -1639.3008 3014.7539 -1647.7988 3003.0664 -1656.9072 c2990.4063 -1666.7744 2977.5137 -1676.5088 2964.2051 -1685.4902 c2953.8604 -1692.4707 2944.4219 -1700.0742 2935.1738 -1708.458 c2930.8691 -1712.3604 2926.3027 -1715.9209 2921.9785 -1719.7861 c2917.7422 -1723.5742 2913.8047 -1728.1104 2909.2168 -1731.4707 c2902.5273 -1736.3682 2909.002 -1747.6572 2915.7773 -1742.6953 c2920.7832 -1739.0303 2925.3457 -1734.5684 2929.7939 -1730.2676 c2935.2168 -1725.0225 2941.3379 -1720.3867 2946.9502 -1715.3096 c2958.3262 -1705.0195 2970.8848 -1696.9395 2983.2402 -1687.9326 c2995.8838 -1678.7158 3008.3232 -1669.2393 3020.624 -1659.5713 c3026.3066 -1655.1045 3032.2744 -1651.3574 3038.3672 -1647.4863 c3045.1689 -1643.1641 3051.6387 -1638.2441 3058.3604 -1633.7764 c3085.0117 -1616.0645 3111.9043 -1598.7031 3139.9131 -1583.1943 c3152.6797 -1576.125 3165.0742 -1568.8125 3178.4219 -1562.9355 c3192.7051 -1556.6465 3206.4375 -1549.0928 3220.1299 -1541.6299 c3226.5996 -1538.1035 3232.5137 -1533.292 3238.8789 -1529.501 c3245.7676 -1525.3984 3252.7832 -1521.4219 3259.8525 -1517.6406 c3272.627 -1510.8086 3286.1953 -1505.4785 3299.1328 -1498.9434 c3305.1318 -1495.9121 3311.1855 -1493.3066 3317.6953 -1491.584 c3325.0117 -1489.6494 3331.4512 -1484.9707 3338.7197 -1482.7773 c3352.5313 -1478.6084 3365.8984 -1473.2734 3379.7764 -1469.2969 c3394.2158 -1465.1582 3407.6943 -1457.9639 3421.7178 -1452.6504 c3436.4766 -1447.0586 3452.3262 -1443.4873 3467.6006 -1439.5889 c3498.3877 -1431.7314 3529.7236 -1426.168 3560.3203 -1417.6289 c3572.1211 -1414.3359 3583.9512 -1411.1553 3595.9531 -1408.6768 c3604.4541 -1406.9219 3612.6621 -1403.7803 3621.1406 -1401.9189 C3619.9492 -1406.1289 3618.6387 -1410.2939 3617.0693 -1414.3604 c3612 -1427.499 3607.0547 -1441.2188 3600.3027 -1453.5898 c3591.5938 -1469.5488 3584.3721 -1486.334 3577.8799 -1503.3564 c3574.6309 -1511.873 3572.2666 -1520.7637 3569.8652 -1529.5488 c3567.75 -1537.2891 3565.8213 -1544.1465 3565.8096 -1552.2383 c3565.8086 -1552.9414 3565.9063 -1553.5811 3566.0723 -1554.166 C3561.2881 -1557.2832 3562.5928 -1566.083 3570 -1566.083 C3579.7959 -1566.2422 3584.7158 -1565.5283 v3590.3311 -1564.7139 3595.8438 -1562.2715 3601.4199 -1561.0576 c3606.9277 -1559.8584 3612.3721 -1558.4609 3617.8164 -1557.0107 c3623.5176 -1555.4922 3630.3184 -1554.4326 3635.5811 -1551.7295 c3645.1621 -1546.8096 3653.7344 -1540.2139 3663.3672 -1535.3857 c3666.3252 -1533.9033 3669.4482 -1532.2266 3672.2813 -1530.2061 C3674.2021 -1532.8389 3677.915 -1534.2813 3680.8223 -1532.1436 c3685.3457 -1528.8184 3686.3848 -1524.2666 3686.5078 -1518.8604 c3686.5684 -1516.252 3689.085 -1512.4004 3689.9619 -1509.8965 c3691.1689 -1506.4541 3691.2578 -1502.6406 3692.0098 -1499.0859 c3692.7227 -1495.7119 3694.6123 -1492.415 3695.9385 -1489.2393 c3697.1982 -1486.2207 3698.0703 -1483.1152 3699.127 -1480.0293 c3701.668 -1472.6045 3703.4229 -1464.9219 3704.8711 -1457.2188 c3708.5215 -1437.8047 3710.5215 -1417.876 3711.4873 -1397.9746 C3713.3252 -1399.6484 3716.0137 -1400.3242 3718.8145 -1398.7119 c3722.2344 -1396.7432 3725.7949 -1397.5918 3729.502 -1396.9189 c3733.8232 -1396.1348 3738.2168 -1395.9033 3742.5791 -1395.4297 c3752.416 -1394.3613 3762.332 -1393.6328 3772.2061 -1392.7617 c3782.0195 -1391.8984 3791.8711 -1392 3801.7109 -1392 C3817.1367 -1392 L3819.3574 -1392 3821.5488 -1391.8613 3823.7656 -1391.752 C3824.8018 -1392.8066 3826.2793 -1393.4912 3828.2109 -1393.4785 c3831.3398 -1393.458 3834.3369 -1393.209 3837.2549 -1392.0225 c3838.3379 -1391.582 3839.2656 -1390.8193 3840.0117 -1389.8936 C3840.0117 -1380.6543 Lf0 D3568.1133 -330.2729 m3583.9609 -328.6279 3600.2383 -330.2505 3616.0596 -331.5181 c3630.6582 -332.688 3645.4551 -333.3647 3659.9434 -335.5908 c3666.7119 -336.6304 3673.5557 -336.8691 3680.2578 -338.3447 c3683.6074 -339.0825 3686.7939 -340.437 3690.0234 -341.5649 c3693.8818 -342.9126 3696.8682 -345.2578 3700.9482 -346.0005 c3707.2598 -347.1494 3712.4922 -348.5073 3718.0566 -351.8467 c3724.3574 -355.627 3729.874 -360.0952 3736.7832 -362.8364 c3740.1299 -364.1646 3743.542 -365.2856 3746.9531 -366.437 c3750.3457 -367.5825 3753.5703 -369.4863 3757.0664 -370.2021 c3759.9033 -370.7832 3762.7188 -371.4604 3765.2861 -372.8237 c3767.4766 -373.9873 3769.3818 -375.5508 3771.5068 -376.8623 C3761.2051 -377.2051 3750.9268 -377.9092 3740.5938 -377.9092 c3727.4355 -377.9092 3714.3047 -377.9814 3701.1504 -378.3452 c3695.1006 -378.5127 3689.0547 -378.5029 3683.0156 -378.0679 c3676.2842 -377.5825 3669.6611 -375.9775 3662.8965 -375.5571 c3657.1084 -375.1978 3651.2383 -375.4609 3645.4414 -375.4609 c3638.6436 -375.4609 3631.9375 -374.8706 3625.1523 -374.5039 c3611.7227 -373.7778 3598.2559 -373.8828 3584.8125 -374.0239 c3571.5371 -374.1626 3558.3643 -374.9448 3545.2715 -372.3862 c3539.2529 -371.2104 3532.8379 -371.7412 3526.7109 -371.333 c3519.707 -370.8672 3512.7354 -371 3505.7188 -371 C3463 -371 L3459.9268 -371 3458.0391 -372.9199 3457.3271 -375.2822 C3453.5508 -374.8755 3449.7559 -374.5747 3445.9375 -374.4023 C3450.1152 -372.8188 3454.0518 -370.5635 3457.8506 -368.2505 c3464.4658 -364.2241 3471.1348 -360.5273 3478.1104 -357.1431 c3492.1299 -350.3408 3506.3184 -344.5786 3521.3525 -340.437 c3536.6045 -336.2354 3552.3545 -331.9092 3568.1133 -330.2729 cf3437.8018 -335.9473 m3438.4189 -332.5835 3438.8721 -329.2251 3438.9521 -325.8032 c3439.0195 -322.9277 3438.2012 -320.1396 3438.0625 -317.3013 C3438.792 -312.7773 3439.8105 -308.2881 3441.2695 -303.856 c3442.6602 -299.6304 3445.3213 -296.0713 3447.2451 -292.0996 c3449.4268 -287.5957 3451.2363 -283.2383 3452.5371 -278.4126 c3455.5645 -267.1763 3464.2754 -257.6768 3471.5352 -248.8052 c3477.9814 -240.9272 3484.6279 -233.1943 3493.1133 -227.5142 c3497.3311 -224.6904 3500.8408 -221.2197 3505.4619 -219.0439 c3510.9395 -216.4648 3516.3848 -214.0317 3521.751 -211.2031 c3526.5088 -208.6948 3531.1904 -206.0479 3535.9678 -203.5757 c3540.7891 -201.0806 3546.3096 -199.4082 3551.3447 -197.3506 c3556.2852 -195.3315 3561.3457 -193.9785 3566.4688 -192.519 c3569.1172 -191.7646 3571.7598 -190.7979 3574.4424 -190.0518 C3574.3613 -190.9429 3574.3672 -191.8345 3574.6113 -192.7231 c3575.6963 -196.6689 3576.8311 -199.2041 3576.8223 -203.4409 c3576.8057 -211.7598 3576.5781 -219.8086 3574.25 -227.8276 c3569.8115 -243.1152 3563.6045 -257.0479 3554.873 -270.3633 c3546.582 -283.0078 3539.1572 -296.6909 3528.541 -307.5884 c3523.8105 -312.4453 3520.2344 -318.0444 3513.5762 -320.5068 c3506.0791 -323.2788 3499.3428 -327.1885 3493.041 -332.0713 c3491.5166 -333.2529 3490.9854 -335.1948 3491.1768 -337.0859 C3478.7559 -341.8071 3466.6934 -347.4492 3455.2295 -354.5674 c3449.8545 -357.9048 3444.5166 -361.6084 3438.333 -363.1782 C3438.9717 -361.4399 3439.6074 -359.7051 3440.25 -357.9819 c3441.6602 -354.2021 3439.4902 -351.4727 3436.5371 -350.5073 C3436.46 -346.6372 3436.4072 -342.7651 3436.4434 -338.9004 C3437.0898 -338.167 3437.5732 -337.1934 3437.8018 -335.9473 cf3388.7383 -315.4736 m3386.2275 -314.4941 3383.6689 -313.7598 3381.0713 -313.0498 c3377.916 -312.1875 3375.126 -310.4883 3372.0547 -309.5898 c3366.5703 -307.9849 3361.75 -304.8057 3356.1406 -303.4688 c3350.9844 -302.2393 3345.9873 -298.0732 3341.0078 -296.1074 c3334.9316 -293.7085 3328.7969 -291.5127 3322.458 -289.9077 c3309.8496 -286.7148 3297.3047 -284.4756 3284.5088 -282.1045 c3272.877 -279.9492 3261.0303 -278.0322 3249.4551 -275.6758 c3236.9248 -273.1245 3224.1152 -272.3794 3211.4141 -271.1113 c3208.7217 -270.8423 3206.0342 -270.1631 3203.4033 -269.5586 c3199.9082 -268.7563 3196.3955 -268.9702 3192.8262 -268.8823 c3185.9307 -268.7119 3179.3213 -266.9771 3172.5205 -266.0293 c3161.8057 -264.5366 3151.293 -264.1563 3141.042 -261.0518 C3149.9668 -255.7568 3159.5244 -251.7017 3169.3828 -248.1802 c3183.4883 -243.1421 3197.9844 -238.6006 3212.4658 -234.7686 c3227.5645 -230.7725 3243.5176 -228.5659 3258.9629 -226.3594 c3275.0371 -224.063 3290.7021 -222.0615 3306.9668 -221.9844 c3334.9688 -221.8511 3366.499 -220.9575 3390.0605 -238.353 c3401.4639 -246.7729 3407.1367 -259.5278 3413.2539 -271.769 c3416.4355 -278.1367 3419.5186 -284.5225 3421.873 -291.2495 c3424.4375 -298.5752 3425.0342 -305.4971 3425.0342 -313.1841 c3425.0342 -314.1001 3425.0635 -315.0068 3425.1084 -315.9082 C3424.459 -320.5874 3424.0625 -325.3022 3423.6514 -329.8555 c3423.2129 -334.7114 3423.1523 -339.5879 3423.2324 -344.4692 C3419.2695 -343.9922 3415.3164 -343.4243 3411.3652 -342.8413 C3412.1855 -341.1738 3412.3691 -339.1543 3411.4395 -337.0591 c3407.3506 -327.8408 3398.1191 -319.1323 3388.7383 -315.4736 cf3217.2461 -421.084 m3203.0938 -424.3955 3188.8613 -428.8198 3174.5049 -431.0786 c3160.123 -433.3413 3145.9639 -436.8379 3131.7949 -440.1318 c3125.6396 -441.563 3119.7041 -443.6274 3113.457 -444.8511 c3106.6777 -446.1792 3099.8105 -447.7285 3093.0762 -449.3228 c3086.5752 -450.8618 3080.7227 -454.4082 3074.1924 -456.0835 c3067.8477 -457.7109 3061.4629 -458.8882 3055.1543 -460.7539 c3048.7559 -462.6455 3042.4707 -464.0444 3035.9199 -465.2539 c3028.3936 -466.6436 3021.4492 -469.4092 3014.2109 -471.769 c3000.4688 -476.249 2985.7256 -478.2954 2971.4648 -480.4775 c2961.7002 -481.9712 2951.9854 -482.1157 2942.0254 -482.0576 C2944.2227 -479.8872 2946.9385 -478.0449 2949.0967 -476.4277 c2955.2715 -471.8018 2961.2803 -467.0718 2967.6826 -462.7451 c2973.7695 -458.6313 2980.5576 -455.7617 2987.1367 -452.498 c2994.207 -448.9917 3001.29 -445.4966 3008.6318 -442.5889 c3015.6855 -439.7954 3022.8555 -437.3223 3029.9082 -434.501 c3037.7354 -431.3696 3045.9111 -429.3184 3053.7793 -426.1768 c3060.835 -423.3594 3067.5811 -419.7031 3074.4668 -416.4985 c3082.0293 -412.979 3089.9551 -410.3398 3097.7656 -407.4331 c3127.1035 -396.5146 3156.6592 -384.9668 3187.2441 -377.981 c3194.6816 -376.2822 3201.9375 -373.9839 3209.2441 -371.7896 c3217.0957 -369.4312 3225.1963 -367.9897 3233.0273 -365.6777 c3247.792 -361.3193 3263.0244 -359.6235 3278.1572 -357.1709 c3290.5391 -355.1641 3303.1113 -355.4092 3315.6094 -355.4092 c3327.4785 -355.4092 3338.998 -354.6323 3350.7539 -352.9731 c3356.8789 -352.1089 3363.6455 -352.6914 3369.8447 -352.5244 c3375.9541 -352.3604 3382.0586 -352.3628 3388.1563 -352.8022 c3392.1504 -353.0898 3396.1279 -353.5645 3400.0996 -354.1094 C3392.9082 -356.5586 3385.8027 -359.4258 3378.3926 -361.0029 c3363.6455 -364.1421 3350.1289 -371.7456 3336.2109 -377.21 c3309.5195 -387.6899 3283.9355 -400.186 3259.1074 -414.4229 C3258.0801 -412.9995 3256.3896 -412.061 3254.0332 -412.1851 c3247.4727 -412.5303 3241.7871 -415.2427 3235.5303 -416.9512 c3229.5049 -418.5962 3223.3252 -419.6616 3217.2461 -421.084 cf3387.9102 -428.9746 m3384.2744 -434.4868 3378.834 -438.8926 3374.2998 -443.6538 c3368.8613 -449.3647 3363.6504 -455.2852 3358.2539 -461.0391 c3353.332 -466.2871 3348.4873 -471.603 3343.3906 -476.6851 c3337.9551 -482.104 3331.9863 -486.9238 3326.4707 -492.2607 c3316.0801 -502.3154 3305.9434 -512.6289 3295.3281 -522.4507 c3284.4971 -532.4727 3272.9512 -541.1997 3260.9355 -549.7251 c3235.8301 -567.5371 3208.9072 -581.7026 3181.8779 -596.2754 c3162.418 -606.7681 3142.9707 -617.3018 3124.666 -629.7451 c3115.4521 -636.0098 3105.8457 -641.5933 3096.834 -648.1816 c3088.1406 -654.5366 3079.3145 -660.4854 3069.9814 -665.8906 c3060.9756 -671.1064 3052.4609 -677.0918 3043.0693 -681.6309 c3033.5283 -686.2412 3023.5078 -689.8276 3013.916 -694.3403 c3004.2012 -698.9106 2994.4746 -703.4326 2984.8623 -708.2188 c2980.4219 -710.4292 2975.9531 -712.498 2971.54 -714.6694 C2972.8662 -710.2798 2974.5781 -706.0137 2976.5273 -701.8369 c2982.4707 -689.0972 2989.6191 -676.5923 2996.832 -664.5342 c3000.6191 -658.2051 3004.8164 -652.1182 3008.9014 -645.98 c3013.207 -639.5083 3016.6738 -632.5303 3021.0781 -626.165 c3025.0371 -620.4419 3030.0596 -615.3979 3034.6973 -610.2407 c3039.8652 -604.4946 3044.2246 -598.1919 3049.6074 -592.6143 c3060.1992 -581.6406 3071.2344 -571.1348 3081.7959 -560.1162 c3092.5508 -548.8955 3103.5879 -537.9497 3114.5635 -526.9463 c3125.127 -516.356 3134.4063 -504.5688 3146.7725 -496.0386 c3158.8477 -487.7085 3170.5186 -479.2705 3183.2578 -471.9185 c3192.8633 -466.375 3202.8145 -461.5308 3212.5977 -456.3252 c3222.4268 -451.0962 3231.8955 -445.2095 3241.3018 -439.2651 c3250.666 -433.3477 3260.7148 -428.4385 3270.3066 -422.8281 c3275.1641 -419.9863 3280.4609 -417.8745 3285.3584 -415.0361 c3290.1514 -412.2578 3295.0059 -409.7017 3299.9336 -407.1665 c3319.0752 -397.3193 3339.6416 -390.9277 3358.918 -381.4521 c3368.6904 -376.6484 3379.5977 -374.5083 3389.959 -371.4595 c3400.0518 -368.4902 3409.8242 -363.0464 3420.5166 -362.7539 c3421.7891 -362.7188 3422.8633 -362.3838 3423.748 -361.8486 C3423.7715 -362.8989 3423.7842 -363.9482 3423.7939 -364.9971 C3422.623 -368.0322 3421.4023 -371.0479 3420.0469 -374.0098 c3418.5381 -377.3076 3416.7871 -380.48 3414.9043 -383.5767 c3412.8955 -386.8789 3411.8975 -391.0879 3410.0762 -394.5679 c3406.9805 -400.478 3403.1611 -405.7725 3399.2939 -411.1836 c3395.1729 -416.9487 3391.8076 -423.0664 3387.9102 -428.9746 cf3598.2754 -733.502 m3597.5195 -749.1572 3594.9697 -764.835 3593.3965 -780.4185 c3591.8457 -795.7891 3589.9219 -810.9248 3587.0781 -826.123 c3585.7578 -833.1807 3584.541 -840.4878 3582.21 -847.292 c3580.8281 -851.3247 3579.3574 -855.6572 3577.5742 -859.6982 C3569.2129 -851.9297 3566.7422 -839.8218 3561.0303 -829.9136 c3553.2109 -816.3496 3546.1035 -802.5562 3539.1006 -788.5483 c3535.7949 -781.9351 3533.2822 -774.8354 3529.5117 -768.4971 c3525.3643 -761.5249 3521.9424 -754.1274 3518.5957 -746.748 c3515.7002 -740.3647 3512.3398 -734.9849 3508.5186 -729.1465 c3504.3613 -722.7949 3503.1094 -713.7251 3501.3135 -706.4482 c3499.5342 -699.2378 3498.3555 -691.6528 3496.0098 -684.6147 c3493.5938 -677.3643 3491.2549 -670.0938 3489.2686 -662.7119 c3485.2012 -647.5938 3482.3867 -632.1411 3477.6768 -617.1943 c3473.1523 -602.8374 3468.7266 -588.7295 3463.3496 -574.6616 c3460.9131 -568.2886 3458.8701 -562.0093 3457.916 -555.248 c3456.8711 -547.8457 3455.6973 -540.4678 3453.7148 -533.25 c3451.0479 -523.541 3448.2051 -514.1143 3446.3848 -504.1738 c3444.4912 -493.8403 3443.1592 -483.4106 3441.5547 -473.0308 c3438.3027 -452.0059 3432.082 -431.5381 3431.9131 -410.1162 c3431.8477 -401.7368 3418.8477 -401.7305 3418.9131 -410.1162 c3419.0361 -425.7681 3422.0059 -441.1113 3425.2715 -456.3628 c3428.5137 -471.5093 3430.4209 -486.8457 3432.9023 -502.124 c3434.0996 -509.499 3435.5547 -516.8252 3437.3779 -524.0713 c3439.2959 -531.6943 3441.9961 -538.9951 3443.4824 -546.7334 c3444.5195 -552.1309 3444.9473 -557.6934 3446.0527 -563.082 C3443.8135 -564.8984 3442.5674 -568.0181 3444.2412 -571.311 c3443.7393 -570.3237 3443.751 -572.4624 3443.5186 -573.1768 c3443.0928 -574.4873 3442.667 -575.7559 3442.4072 -577.1104 c3441.8164 -580.1982 3442 -583.4526 3442 -586.5781 C3442 -631.542 L3442 -639.707 3440.6641 -647.9507 3439.2949 -655.9917 c3436.666 -671.439 3433.0684 -686.6636 3430.8467 -702.1816 c3429.8457 -709.1733 3427.7158 -715.5542 3426.0098 -722.3794 c3424.084 -730.0796 3422.1533 -737.7759 3420.0527 -745.4307 c3418.1816 -752.248 3415.7363 -758.8799 3413.9434 -765.7344 c3412.0469 -772.9839 3410.3945 -780.2842 3408.3291 -787.4897 c3404.2725 -801.6401 3402.9453 -816.2378 3398.9258 -830.3696 c3394.8613 -844.6616 3386.8545 -856.4204 3380.5107 -869.6494 c3377.4082 -876.1191 3374.3926 -882.585 3370.4863 -888.6211 c3366.1035 -895.3906 3360.5117 -901.5459 3355.7627 -908.0815 c3349.3154 -916.9541 3342.4277 -924.5654 3334.5381 -932.1719 c3327.793 -938.6748 3322.6025 -946.1851 3314.332 -950.5542 C3313.2363 -948.1279 3312.0098 -945.7725 3311.1465 -943.4399 c3309.9375 -940.1685 3310.083 -936.8896 3309.2666 -933.6055 c3308.1973 -929.3018 3307.1836 -925.063 3307.0508 -920.6133 c3306.6035 -905.6738 3307.0508 -890.6372 3307.0508 -875.6909 c3307.0508 -859.9717 3308.0781 -844.4297 3309.499 -828.7798 c3310.9805 -812.4629 3311.1025 -796.0391 3311.248 -779.668 c3311.3184 -771.8101 3311.3867 -763.9507 3311.5615 -756.0942 c3311.75 -747.5552 3312.9814 -739.7036 3314.6533 -731.3457 c3316.0186 -724.52 3315.9316 -717.4878 3317.3359 -710.6621 c3318.8887 -703.1172 3319.3262 -695.4727 3320.5898 -687.8877 c3323.1992 -672.2344 3325.5928 -656.7095 3327.3672 -640.9346 c3329.1191 -625.3594 3333.6621 -610.7397 3340.1563 -596.4771 c3341.5732 -593.3647 3343.0713 -590.3481 3344.2246 -587.1211 c3345.4199 -583.7793 3345.4932 -579.1758 3347.334 -576.1655 c3350.9678 -570.2217 3353.4121 -563.1777 3355.7949 -556.6787 c3358.5713 -549.1079 3361.6563 -541.6558 3364.3799 -534.0645 c3367.2773 -525.9854 3369.5225 -517.6851 3372.4521 -509.6084 c3374.9033 -502.8511 3377.6494 -496.2407 3380.0684 -489.4751 c3381.3857 -485.792 3384.1094 -482.5474 3386.2568 -479.3252 c3388.7666 -475.561 3391.0195 -471.7773 3393.085 -467.7485 c3396.6904 -460.7139 3400.3145 -453.27 3402.8301 -445.77 c3404.9697 -439.3911 3409.0488 -434.0659 3409.8789 -427.2539 c3410.124 -425.2441 3409.0215 -423.4165 3407.4346 -422.2139 C3409.0283 -419.8472 3410.6787 -417.52 3412.3594 -415.1689 c3415.2959 -411.062 3418.0264 -406.998 3420.5039 -402.5923 c3423.0254 -398.1094 3424.4277 -392.9355 3427.0762 -388.582 c3429.9121 -383.9194 3432.207 -378.9473 3434.2686 -373.8682 C3434.8154 -374.5059 3435.4775 -375.0449 3436.2373 -375.4395 C3432.0215 -378.6509 3433.3125 -387.1929 3440.1025 -387.2368 c3456.0566 -387.3398 3471.6836 -389.936 3487.3242 -392.8574 c3494.666 -394.229 3502.0615 -395.3926 3509.375 -396.894 c3513.0811 -397.6548 3516.7422 -398.6353 3520.3926 -399.624 c3524.7656 -400.8091 3528.7246 -401.5449 3533.1807 -402.146 c3540.2598 -403.1006 3547.0264 -406.2197 3553.8125 -408.3037 c3561.2324 -410.582 3569.1934 -410.7109 3576.7031 -412.7109 c3590.3086 -416.3345 3602.7979 -422.7266 3615.875 -427.7183 c3621.876 -430.0088 3627.0635 -432.603 3632.6016 -435.8438 c3635.2578 -437.3979 3638.2236 -438.3657 3641.1709 -439.188 c3644.9902 -440.2534 3647.9453 -441.7207 3651.4551 -443.4756 c3657.6758 -446.5859 3664.2285 -449.2334 3670.3457 -452.4531 c3676.3477 -455.6108 3680.9717 -460.9048 3686.8105 -464.3467 c3699.7949 -472.0005 3709.3564 -484.6836 3719.0029 -495.9375 c3723.6865 -501.4019 3728.7129 -506.5884 3732.374 -512.8057 c3736.2285 -519.3525 3741.0908 -525.166 3745.04 -531.6484 c3747.3711 -535.4746 3749.3301 -539.5708 3751.543 -543.4727 c3753.8564 -547.5537 3756.3691 -551.1392 3759.1191 -554.938 c3761.5449 -558.2876 3762.8604 -562.5117 3764.5488 -566.2607 c3766.1768 -569.874 3768.4629 -572.3408 3770.001 -575.6826 c3771.9492 -579.9146 3775.1279 -583.373 3776.7793 -587.7598 c3778.3721 -591.9873 3779.2988 -596.4766 3780.5059 -600.8218 c3780.6572 -601.3662 3780.8057 -601.9224 3780.9531 -602.4834 C3758.9199 -591.5625 3735.3633 -583.894 3713.2959 -573.0732 c3707.2051 -570.0869 3700.5498 -568.4766 3694.1035 -566.4761 c3687.1709 -564.3247 3680.6143 -561.0532 3674.252 -557.6001 c3667.875 -554.1387 3661.3926 -550.8867 3655.001 -547.4453 c3648.1035 -543.7314 3641.0859 -541.0288 3633.8789 -537.9741 c3627.8105 -535.4014 3621.8242 -532.0059 3616.9688 -527.5332 c3611.3564 -522.3643 3605.0723 -519.0889 3598.2432 -515.7075 c3591.6523 -512.4438 3587.2646 -506.7026 3581.4053 -502.5112 c3575.7949 -498.498 3571.1904 -493.3315 3565.4941 -489.4854 c3559.9854 -485.7661 3554.2461 -482.4199 3548.8818 -478.4722 c3543 -474.1426 3538.1504 -468.4634 3532.3633 -463.9604 c3520.4697 -454.7056 3506.2441 -449.4336 3493.7881 -441.0127 c3475.1758 -428.4297 3457.2246 -411.9658 3444.4912 -393.3696 c3439.7871 -386.5 3428.5156 -392.9932 3433.2666 -399.9312 c3449.4883 -423.623 3472.8848 -444.6348 3497.8311 -458.7715 c3504.1611 -462.3589 3510.9004 -465.2314 3517.0996 -469.0337 c3523.5537 -472.9922 3529.2891 -477.958 3534.6621 -483.2642 c3539.498 -488.04 3545.2031 -491.874 3550.8799 -495.5664 c3553.5391 -497.2954 3556.168 -499.1592 3558.9326 -500.7104 c3559.4512 -501.001 3559.9453 -501.3525 3560.4297 -501.7256 C3556.5137 -501.6841 3552.4424 -504.8701 3553.8008 -509.7754 c3555.7256 -516.7275 3559.3135 -523.0225 3561.6406 -529.8291 c3564.1465 -537.1616 3566.5303 -545.2061 3569.9512 -552.1328 c3576.5469 -565.4873 3581.0137 -579.7695 3584.4043 -594.2407 c3588.0684 -609.8809 3590.1494 -625.9604 3592.4287 -641.8462 c3593.4248 -648.79 3594.8828 -655.519 3595.5127 -662.5405 c3596.209 -670.3105 3596.4971 -678.0884 3597.2725 -685.8535 c3598.0391 -693.5229 3598.873 -700.8706 3598.8486 -708.5933 c3598.8223 -716.8999 3598.6748 -725.2041 3598.2754 -733.502 cf3709.5234 -1097.6426 m3709.3818 -1113.3643 3709.0332 -1129.0801 3709.0332 -1144.8027 c3709.0332 -1152 3709.2324 -1159.2295 3708.9375 -1166.4199 c3708.6162 -1174.2441 3706.8486 -1181.9766 3705.8379 -1189.7256 c3703.7754 -1205.542 3704.9863 -1221.6953 3703.9082 -1237.5977 c3702.8359 -1253.3955 3702.3516 -1269.2061 3701.2354 -1285.0254 c3699.749 -1306.0762 3700.3994 -1327.3008 3699.5811 -1348.3926 c3698.7461 -1369.9102 3699.166 -1391.2715 3697.1973 -1412.749 c3695.333 -1433.0938 3693.5762 -1453.4639 3687.6953 -1473.127 c3684.9775 -1482.2178 3680.0332 -1490.9453 3678.6621 -1500.3203 c3678.1348 -1503.9189 3677.1406 -1507.1758 3675.9063 -1510.4941 C3673.001 -1510.0762 3669.8848 -1511.3672 3668.8701 -1515.0107 c3667.4258 -1520.1934 3658.6758 -1523.1885 3654.332 -1525.4189 c3650.2324 -1527.5244 3646.3516 -1530.0596 3642.4766 -1532.5479 c3638.2549 -1535.2588 3633.6582 -1538.9258 3628.8066 -1540.374 c3618.6055 -1543.4199 3608.3193 -1546.1914 3597.9297 -1548.5215 c3593.3359 -1549.5518 3589.0186 -1550.7861 3584.5244 -1552.1865 c3582.6328 -1552.7764 3580.7051 -1553.0273 3578.752 -1553.127 C3578.7861 -1552.8408 3578.8086 -1552.5469 3578.8096 -1552.2383 c3578.8184 -1546.5186 3579.833 -1541.8809 3581.4463 -1536.4082 c3583.6572 -1528.9043 3585.6074 -1521.3281 3587.9473 -1513.8633 c3590.2344 -1506.5645 3593.2676 -1499.5059 3596.3135 -1492.5 c3599.4512 -1485.2832 3602.0869 -1477.6699 3605.5889 -1470.6484 c3608.6572 -1464.498 3612.9785 -1458.8799 3615.3008 -1452.3623 c3617.752 -1445.4844 3621.1836 -1438.9941 3623.7441 -1432.1348 c3626.1465 -1425.7021 3629.1035 -1419.501 3631.373 -1413.0146 c3633.8701 -1405.874 3635.1006 -1398.2627 3637.1104 -1390.9697 c3639.0215 -1384.0352 3641.1934 -1377.1719 3643.4561 -1370.3447 c3645.8672 -1363.0713 3646.998 -1355.3311 3648.665 -1347.8672 c3650.2627 -1340.7119 3652.8691 -1333.9307 3654.8281 -1326.8887 c3657.0293 -1318.9727 3658.8613 -1310.958 3660.9668 -1303.0176 c3664.876 -1288.2754 3669.3281 -1273.7031 3673.417 -1259.0117 c3677.5586 -1244.1318 3679.582 -1228.7754 3682.627 -1213.6553 c3684.0342 -1206.666 3684.7031 -1199.4639 3685.792 -1192.4141 c3686.9395 -1184.9922 3687.9707 -1177.4951 3689.0322 -1170.0566 c3691.3633 -1153.7344 3693.6045 -1137.3809 3693.8682 -1120.8701 c3694.1299 -1104.5049 3693.8789 -1088.1162 3693.8789 -1071.749 c3693.8789 -1056.042 3694.627 -1040.1377 3693.2666 -1024.4805 c3692.6406 -1017.2734 3692.8555 -1010.0728 3692.3896 -1002.8638 c3691.9072 -995.3813 3690.5332 -987.7939 3689.5283 -980.3584 c3688.5381 -973.0317 3687.3105 -965.7373 3686.0332 -958.4561 c3684.6709 -950.6987 3684.334 -942.7935 3683.4854 -934.9648 c3682.6934 -927.6587 3681.6367 -920.377 3680.1768 -913.1733 c3678.6543 -905.6592 3678.0566 -898.1978 3677.0293 -890.6084 c3676.168 -884.2397 3673.8701 -878.3535 3672.3145 -872.1494 c3670.3975 -864.5059 3668.7627 -856.7754 3666.8516 -849.1235 c3662.0957 -830.0874 3654.2988 -812.8496 3645.9834 -795.1665 c3642.0537 -786.8091 3636.7246 -780.7554 3631.0127 -773.623 c3628.1973 -770.1069 3624.542 -766.8716 3622.4795 -762.8491 c3620.29 -758.5791 3617.501 -754.6602 3614.6455 -750.8184 c3613.3857 -749.123 3611.7119 -748.2852 3610.001 -748.083 C3610.0508 -747.7021 3610.0996 -747.3213 3610.1484 -746.9399 c3612.1973 -731.1128 3611.8604 -714.9424 3611.8613 -699.0132 c3611.8613 -691.6333 3609.9502 -684.0205 3609.5508 -676.6064 c3609.1436 -669.0381 3608.5342 -661.4971 3607.6563 -653.9541 c3606.8242 -646.8086 3605.1729 -639.8008 3604.1406 -632.6777 c3603.2627 -626.6147 3602.3438 -620.5581 3601.3555 -614.5127 C3603.5996 -618.8496 3605.1699 -623.751 3606.6455 -628.001 c3608.7773 -634.1406 3611.0742 -641.1172 3615.4551 -646.0742 c3619.7227 -650.9043 3620.8213 -658.2285 3624.6133 -663.5322 c3628.3574 -668.7715 3631.0039 -673.5908 3633.3564 -679.6006 c3636.2227 -686.9248 3641.6162 -692.9961 3645.1348 -700.0332 c3648.4814 -706.7246 3652.2813 -713.3511 3654.8994 -720.3633 c3657.5781 -727.5356 3659.4385 -735.0039 3661.5244 -742.3613 c3663.5742 -749.5928 3666.25 -756.646 3668.2373 -763.9141 c3670.332 -771.5762 3672.0996 -779.3257 3673.8066 -787.0815 c3675.2959 -793.8521 3677.666 -800.3262 3679.3857 -807.041 c3681.2217 -814.208 3681.998 -821.6099 3683.7119 -828.8164 c3685.3438 -835.6753 3686.9678 -842.5088 3688.5313 -849.3779 c3690.2627 -856.981 3692.8506 -864.4019 3693.2158 -872.2339 c3693.8877 -886.6582 3698.4385 -900.7207 3699.9473 -915.0542 c3700.6699 -921.918 3700.0195 -928.853 3700.8652 -935.6924 c3701.292 -939.1431 3702.0625 -942.5093 3702.8721 -945.8857 c3703.9063 -950.1958 3704.1367 -954.1089 3704.1367 -958.5303 c3704.1367 -973.3213 3705.1563 -988.1274 3705.9248 -1002.9053 c3706.7383 -1018.5537 3706.7275 -1034.1875 3708.0117 -1049.8159 c3709.3242 -1065.7734 3709.668 -1081.6289 3709.5234 -1097.6426 cf*U*u1 D3477.9033 -988.6299 m3475.7813 -994.9551 3472.4824 -1000.5825 3470.5 -1006.9922 c3468.2627 -1014.2261 3465.7695 -1021.2749 3462.7842 -1028.2388 c3457.251 -1041.145 3452.2168 -1053.8906 3448.1621 -1067.3472 c3446.1494 -1074.0254 3444.332 -1080.7617 3442.4336 -1087.4727 c3440.3848 -1094.7129 3437.6631 -1101.8574 3436.0723 -1109.207 c3434.626 -1115.8887 3434.5918 -1122.7461 3432.916 -1129.3867 c3431.1621 -1136.3408 3429.3672 -1143.2402 3427.6934 -1150.2168 c3424.4121 -1163.9023 3421.4609 -1177.5107 3418.8008 -1191.3281 c3416.0801 -1205.4639 3415.0938 -1219.8486 3412.2188 -1233.9619 c3409.5703 -1246.9668 3407.2129 -1260.6787 3403.0449 -1273.2773 c3399.0518 -1285.3486 3393.8936 -1296.8613 3393.2686 -1309.7227 C3390.6221 -1309.6787 3387.9775 -1309.6279 3385.334 -1309.5703 c3374.9512 -1309.3438 3364.998 -1312 3354.6377 -1312 C3323 -1312 L3315.4648 -1312 3314.2422 -1321.1084 3319.3252 -1324.0752 C3320.1504 -1327.7061 3321.6074 -1331.1455 3323.8721 -1334.1797 c3327.2969 -1338.7676 3330.792 -1343.4648 3333.4785 -1348.5322 c3338.2031 -1357.4434 3344.959 -1364.1582 3352.2568 -1370.9971 c3360.2998 -1378.5332 3369.9424 -1373.4883 3379.207 -1371.7422 c3391.9082 -1369.3486 3405.3066 -1370.2393 3418.1621 -1370.2119 c3444.6465 -1370.1553 3471.0742 -1368.5176 3497.5459 -1367.8633 c3503.6689 -1367.7119 3509.6221 -1367.6523 3515.6992 -1366.7754 c3521.584 -1365.9258 3527.3545 -1364.3818 3533.2197 -1363.4092 c3536.2295 -1362.9092 3539.2813 -1362.9355 3542.3184 -1362.7852 c3543.1113 -1362.7461 3543.8984 -1362.6611 3544.6836 -1362.5557 C3545.9492 -1365.0244 3548.5605 -1366.8965 3552.002 -1366.3154 c3554.6514 -1365.8682 3556.6621 -1364.1055 3558.2402 -1361.6836 C3560.4141 -1361.5762 3562.5186 -1361.1074 3564.5723 -1359.54 c3567.0977 -1357.6143 3569.251 -1353.6992 3566.9043 -1350.6475 c3565.6934 -1349.0723 3564.7383 -1347.8428 3563.4619 -1346.8418 C3563.8828 -1345.0732 3564.2646 -1343.4727 3564.6563 -1342.1992 c3564.7119 -1342.0293 3564.7676 -1341.8584 3564.8242 -1341.6885 C3564.2334 -1343.0352 3564.3301 -1342.7939 3565.1113 -1340.9658 C3565.8232 -1338.5811 3566.6064 -1336.2324 3567.4531 -1333.8926 c3569.04 -1329.5049 3570.9063 -1325.2207 3572.5635 -1320.8584 c3573.9922 -1317.1016 3576.0732 -1313.6279 3577.499 -1309.8379 C3578.3184 -1308.2002 3578.3623 -1307.8193 3577.6309 -1308.6963 c3578.2598 -1307.9609 3578.8203 -1307.1758 3579.3125 -1306.3428 C3580.1641 -1305.0156 3580.7783 -1303.3457 3581.0254 -1301.793 c3581.5547 -1298.4707 3580.2256 -1294.5889 3576.4863 -1293.7979 c3572.207 -1292.8926 3568.5137 -1293.8232 3564.4609 -1295.0215 c3559.5645 -1296.4688 3554.3721 -1296.1992 3549.3496 -1297.3359 c3545.1123 -1298.2959 3540.8398 -1299.0293 3536.5508 -1299.6797 C3533.1436 -1290.209 3533.8174 -1279.9551 3532.8135 -1270.0742 c3532.1885 -1263.9199 3531.0664 -1257.8271 3529.6113 -1251.8203 c3527.9609 -1245.0039 3527.8965 -1237.5244 3527.3154 -1230.5557 c3525.0605 -1203.5127 3517.8408 -1177.5244 3513.3916 -1150.8281 c3512.3682 -1144.6895 3511.5537 -1138.5029 3509.8838 -1132.5 c3508.0928 -1126.0615 3505.9775 -1120.0527 3505.127 -1113.3838 c3504.373 -1107.4766 3502.751 -1101.8818 3501.1504 -1096.1631 c3499.4863 -1090.2168 3500.4375 -1083.3438 3499.7559 -1077.1812 c3496.915 -1051.5059 3490.8555 -1026.0781 3490.6709 -1000.1509 c3490.6582 -998.3149 3490.0234 -996.8809 3489.041 -995.8491 C3489.5342 -994.6099 3490.0107 -993.3618 3490.4385 -992.0859 c3493.1133 -984.1152 3480.5547 -980.7251 3477.9033 -988.6299 cf0 D3528.1318 -1313.7363 m3533.5195 -1312.8086 3538.9502 -1312.6504 3544.3398 -1311.7734 c3549.5449 -1310.9277 3554.4443 -1309.0996 3559.751 -1308.9688 c3561.2129 -1308.9326 3562.6045 -1308.623 3563.9844 -1308.3027 C3562.9775 -1310.2715 3561.8613 -1312.1748 3561.1455 -1314.252 c3558.6572 -1321.4727 3555.4629 -1328.418 3553.1182 -1335.6924 c3552.001 -1339.1602 3550.9902 -1342.751 3549.9717 -1346.2949 c3549.7197 -1347.1729 3549.4512 -1348.0449 3549.1758 -1348.915 C3548.6836 -1348.9082 3548.2246 -1348.9199 3547.8262 -1348.9688 c3542.4023 -1349.6387 3536.9453 -1349.8369 3531.5361 -1350.6172 c3526.2314 -1351.3828 3521.0176 -1352.5918 3515.7617 -1353.625 c3510.3145 -1354.6953 3504.9473 -1354.7402 3499.4199 -1354.8252 c3475.6152 -1355.1885 3451.8535 -1356.873 3428.0488 -1357.1514 c3406.2324 -1357.4053 3384.751 -1356.29 3363.5469 -1362.1543 c3360.6563 -1362.9541 3357.5195 -1357.5859 3355.5898 -1355.7559 c3352.1445 -1352.4893 3349.3896 -1349.9043 3346.9521 -1345.793 c3344.4141 -1341.5127 3341.9326 -1337.2529 3339.1035 -1333.1514 c3337.2051 -1330.3984 3335.0361 -1327.8486 3333.502 -1325 C3353.002 -1325 L3363.3408 -1325 3373.3193 -1322.4307 3383.6064 -1322.541 c3405.6104 -1322.7783 3427.5684 -1322.959 3449.5703 -1322.0859 c3460.0342 -1321.6699 3470.3359 -1320.3213 3480.8057 -1319.9922 c3485.6885 -1319.8379 3490.4512 -1318.334 3495.2852 -1317.7695 c3500.709 -1317.1357 3506.167 -1317.2988 3511.6064 -1316.5264 c3517.1396 -1315.7402 3522.625 -1314.6836 3528.1318 -1313.7363 cf3492.0957 -1113.2754 m3493.1357 -1119.2324 3493.877 -1124.8818 3495.7168 -1130.6777 c3497.8105 -1137.2695 3499.1094 -1143.8008 3500.2441 -1150.6123 c3504.6982 -1177.3379 3512.043 -1203.5098 3514.3154 -1230.5557 c3514.8477 -1236.8926 3515.3848 -1243.2236 3516.2324 -1249.5273 c3517.1602 -1256.4316 3519.002 -1263.1455 3519.8135 -1270.0742 c3521.043 -1280.5674 3520.2539 -1291.3965 3523.4766 -1301.5557 C3520.8135 -1301.9453 3518.1504 -1302.3555 3515.4951 -1302.8262 c3504.9287 -1304.6973 3494.2822 -1304.7061 3483.7129 -1306.6289 c3479.0479 -1307.4775 3474.1279 -1306.9971 3469.4033 -1307.2959 c3463.3799 -1307.6758 3457.4375 -1308.6768 3451.3916 -1308.9854 c3436.3789 -1309.75 3421.3145 -1309.959 3406.2656 -1309.8662 C3406.8799 -1297.6992 3412.3613 -1286.4658 3416.1338 -1275.0625 c3420.3086 -1262.4424 3422.4961 -1248.5029 3425.1504 -1235.4756 c3428.0127 -1221.4248 3428.9707 -1207.0781 3431.6807 -1192.998 c3434.3438 -1179.1592 3437.3828 -1165.543 3440.6699 -1151.8359 c3442.1963 -1145.4717 3443.8262 -1139.1826 3445.4521 -1132.8428 c3447.1523 -1126.209 3447.3867 -1119.3848 3448.6074 -1112.6631 c3449.8311 -1105.9287 3452.5508 -1099.333 3454.4473 -1092.7568 c3456.5547 -1085.4453 3458.5352 -1078.0986 3460.6973 -1070.8027 c3464.7188 -1057.2305 3469.9355 -1044.4517 3475.4434 -1031.4336 c3476.6904 -1028.4849 3477.8779 -1025.521 3478.998 -1022.5327 C3480.877 -1040.8281 3484.3506 -1059.0381 3486.7559 -1077.1812 c3487.5117 -1082.8818 3487.4629 -1088.6719 3487.4648 -1094.4102 c3487.4668 -1100.5479 3491.0371 -1107.2061 3492.0957 -1113.2754 cf*U2872.8164 -1786.8809 m2874.6875 -1783.8965 2876.7861 -1781.2656 2879.2344 -1778.7344 c2881.4473 -1776.4473 2884.4082 -1774.7412 2886.2822 -1772.1904 c2888.2988 -1769.4463 2891.1836 -1767.3154 2893.6836 -1765.0381 c2895.7832 -1763.127 2896.7725 -1760.3633 2899.5352 -1759.2646 c2907.2285 -1756.207 2903.8779 -1743.6299 2896.0801 -1746.7295 c2892.6445 -1748.0947 2889.7402 -1749.6963 2887.2148 -1752.4512 c2884.2676 -1755.668 2881.1904 -1758.624 2878.1201 -1761.751 c2872.5508 -1767.4238 2866.1221 -1773.0908 2861.5918 -1780.3203 c2857.126 -1787.4453 2868.377 -1793.9648 2872.8164 -1786.8809 cf3840.0117 -1646.6348 m3832.2148 -1646.3877 3824.417 -1646.75 3816.3271 -1648.0273 c3800.5889 -1650.5107 3785.1953 -1654.7109 3769.4297 -1657.0908 c3753.6582 -1659.4717 3737.8545 -1659.9678 3721.96 -1658.9102 c3714.8486 -1658.4365 3707.7617 -1658.4766 3700.6445 -1658.248 c3693.0293 -1658.0029 3687.0645 -1655.4316 3680.0117 -1652.9844 c3673.7871 -1650.8252 3666.9561 -1651.4092 3660.6328 -1649.6592 c3653.4355 -1647.668 3646.3574 -1644.9648 3639.2793 -1642.5869 c3632.7461 -1640.3916 3626.9434 -1636.7021 3620.7715 -1633.7363 c3613.5566 -1630.2705 3606.7529 -1626.0869 3599.5479 -1622.5898 c3592.96 -1619.3926 3585.5898 -1620.3965 3578.4297 -1620.416 c3570.373 -1620.4375 3562.5195 -1621.1729 3554.5703 -1622.4502 c3539.5684 -1624.8613 3525.0771 -1629.6416 3510.5977 -1634.1084 c3504.1553 -1636.0957 3497.6572 -1640.0508 3491.5469 -1642.9395 c3484.4229 -1646.3076 3477.6211 -1650.627 3470.707 -1654.4316 c3464.5762 -1657.8057 3458.8926 -1661.8428 3452.6357 -1664.9795 c3445.8916 -1668.3613 3438.8623 -1672.4004 3431.8555 -1675.1387 c3425.5117 -1677.6172 3419.6152 -1681.1045 3413.252 -1683.5264 c3406.9336 -1685.9307 3399.9307 -1686.2539 3393.2793 -1685.2959 c3387.4863 -1684.4619 3381.6104 -1682.2715 3376.5117 -1679.4355 c3370.2813 -1675.9697 3364.8809 -1671.374 3358.8184 -1667.542 c3346.0986 -1659.5029 3333.1064 -1652.1172 3319.1689 -1646.3896 c3307.1621 -1641.4551 3292.8438 -1643.3232 3280.2295 -1643.6357 c3273.6123 -1643.7998 3267.0059 -1643.2324 3260.3867 -1643.4297 c3252.9414 -1643.6533 3245.2988 -1645.4766 3238.0967 -1647.2773 c3223.1846 -1651.0049 3208.625 -1656.3389 3194.0605 -1661.2139 c3167.9551 -1669.9512 3142.2822 -1679.9629 3116.5586 -1689.7559 c3104.1963 -1694.4619 3091.7988 -1699.335 3080.165 -1705.6396 c3074.4199 -1708.7539 3069.0039 -1709.2383 3062.6855 -1710.0068 c3056.9902 -1710.6992 3051.6846 -1713.2324 3045.9287 -1713.4453 c3037.5723 -1713.7539 3037.542 -1726.7549 3045.9287 -1726.4453 c3052.2852 -1726.2109 3057.9023 -1723.5879 3064.1016 -1722.834 c3071.8047 -1721.8975 3078.1592 -1720.998 3085.2832 -1717.6025 c3098.9961 -1711.0684 3112.6484 -1705.0352 3126.9072 -1699.6875 c3156.2715 -1688.6748 3185.5264 -1677.6719 3215.3184 -1667.8486 c3229.3018 -1663.2383 3243.9063 -1657.7822 3258.6777 -1656.5244 c3265.3389 -1655.957 3272.0752 -1656.7012 3278.748 -1656.6602 c3285.5605 -1656.6191 3292.3564 -1656.1182 3299.1729 -1656.21 c3313.623 -1656.4043 3325.8438 -1663.125 3338.125 -1670.166 c3344.5059 -1673.8242 3350.7158 -1677.7803 3356.9219 -1681.7246 c3359.5918 -1683.4209 3361.8652 -1685.6035 3364.3828 -1687.5127 c3367.0801 -1689.5596 3370.8184 -1691.2695 3373.9336 -1692.6523 c3386.0938 -1698.0498 3398.8398 -1700.2012 3412 -1697.4785 c3418.498 -1696.1348 3424.6338 -1692.7168 3430.5557 -1689.8555 c3437.3975 -1686.5488 3444.252 -1683.2559 3451.1416 -1680.0303 c3464.5508 -1673.7539 3477.2051 -1665.9199 3490.0801 -1658.5986 c3503.2813 -1651.0928 3516.8779 -1645.6348 3531.4189 -1641.3281 c3546.1943 -1636.9512 3561.1357 -1633.6504 3576.5928 -1633.4297 c3580.2646 -1633.377 3583.9385 -1633.4102 3587.6113 -1633.4102 c3591.6777 -1633.4102 3594.0869 -1634.3701 3597.708 -1636.1279 c3604.9277 -1639.6318 3611.668 -1644.0664 3619.1006 -1647.1709 c3622.1816 -1648.458 3625.0303 -1650.6631 3628.1104 -1652.0703 c3631.1348 -1653.4521 3634.2627 -1654.5977 3637.4121 -1655.6563 c3644.5166 -1658.043 3651.6055 -1660.6533 3658.834 -1662.6533 c3665.2158 -1664.4189 3671.833 -1663.8809 3678.1299 -1666.0664 c3681.3359 -1667.1787 3684.2705 -1668.708 3687.5781 -1669.5859 c3691.2666 -1670.5645 3695.1777 -1670.9063 3698.9736 -1671.167 c3704.7969 -1671.5664 3710.6523 -1671.291 3716.4824 -1671.5742 c3723.1074 -1671.8955 3729.707 -1672.5234 3736.3438 -1672.583 c3750.4951 -1672.7109 3764.6699 -1671.0098 3778.6113 -1668.7246 c3791.8135 -1666.5615 3804.7754 -1663.2061 3817.9453 -1660.8721 c3825.4111 -1659.5488 3832.707 -1659.2031 3840.0117 -1659.4648 C3840.0117 -1646.6348 Lf3840.0117 -1813.0088 m3836.0996 -1813.5547 3832.1855 -1814.1406 3828.2363 -1814.6016 c3818.2275 -1815.7705 3807.2051 -1816.5566 3797.9414 -1820.834 c3789.3945 -1824.7803 3780.21 -1827.5703 3771.5381 -1831.335 c3767.5352 -1833.0723 3764.4102 -1835.582 3760.7129 -1837.7705 c3756.9482 -1839.999 3754.8066 -1843.9326 3751.4238 -1846.541 c3747.627 -1849.4688 3744.4971 -1852.6602 3739.9355 -1854.4883 c3735.1875 -1856.3926 3729.3867 -1855.2832 3724.5439 -1854.3936 c3714.5283 -1852.5527 3704.0586 -1848.5596 3694.7227 -1844.583 c3687.8359 -1841.6494 3682.4736 -1835.7188 3676.3242 -1831.5859 c3672.4932 -1829.0107 3668.2285 -1827.041 3664.3447 -1824.5059 c3660.2676 -1821.8457 3657.1855 -1817.9854 3652.709 -1815.9375 c3648.2588 -1813.9004 3644.1777 -1810.0869 3640.2139 -1807.2598 c3636.9434 -1804.9268 3633.1455 -1803.5986 3629.5645 -1801.8066 c3621.2686 -1797.6543 3612.0215 -1795.377 3603.3037 -1792.2949 c3585.2617 -1785.915 3564.7832 -1787.5635 3545.9004 -1788.5146 c3526.748 -1789.4805 3506.25 -1793.1934 3488.9688 -1801.7959 c3471.7832 -1810.3506 3455.3545 -1820.3438 3442.8496 -1835.3145 c3430.915 -1849.6045 3417.0996 -1863.251 3407.2051 -1879.1035 c3401.4746 -1888.2852 3390.2764 -1891.6914 3380.3486 -1893.3164 c3368.5469 -1895.248 3356.5635 -1895.8535 3344.6191 -1895.8398 c3334.1953 -1895.8281 3326.3945 -1894.1211 3317.6309 -1888.3818 c3313.8418 -1885.9014 3310.2969 -1883.0674 3306.5059 -1880.585 c3302.1406 -1877.7266 3297.0771 -1875.9795 3292.4434 -1873.5996 c3284.5225 -1869.5322 3277.5654 -1863.7363 3270.7168 -1858.1152 c3267.5332 -1855.502 3264.2227 -1853.1514 3260.6055 -1851.1797 c3255.8125 -1848.5664 3251.1309 -1843.9346 3245.9668 -1842.2129 c3237.2021 -1839.29 3229.4121 -1834.8047 3220.8193 -1831.5586 c3212.1494 -1828.2842 3202.5332 -1828.04 3193.3633 -1827.5762 c3183.6621 -1827.085 3173.8877 -1827.1982 3164.1797 -1827.3691 c3159.0137 -1827.46 3153.8789 -1827.8535 3148.7559 -1828.5146 c3144.2764 -1829.0928 3139.752 -1831.8457 3135.835 -1833.9932 c3127.625 -1838.4941 3120.2139 -1845.0303 3112.3779 -1850.2129 c3103.0264 -1856.3975 3093.6064 -1862.4775 3084.085 -1868.3994 c3076.0996 -1873.3662 3068.8379 -1880.1631 3062.1426 -1886.7285 c3055.207 -1893.5293 3047.7715 -1897.8076 3039.4805 -1902.7959 c3031.2207 -1907.7646 3022.9492 -1912.793 3013.9219 -1916.2627 c3004.668 -1919.8203 2994.2461 -1921.0908 2984.4844 -1922.5352 c2979.3721 -1923.291 2974.2031 -1923.6602 2969.0449 -1923.9004 c2964.9268 -1924.0918 2961.4355 -1923.1494 2957.4082 -1922.9004 c2953.4648 -1922.6582 2949.499 -1922.7734 2945.5488 -1922.7734 c2940.0088 -1922.7734 2934.8301 -1920.8906 2929.7324 -1918.9219 c2920.4785 -1915.3477 2910.9551 -1912.5146 2901.7207 -1908.8594 c2891.2041 -1904.6963 2880.8809 -1899.9609 2870.4844 -1895.5059 c2861.8975 -1891.8262 2854.5 -1885.917 2846.002 -1882.041 c2836.6797 -1877.7891 2827.0225 -1877.373 2817.1553 -1874.9922 c2799.1973 -1870.6611 2778.3428 -1871.4102 2760.2012 -1874.4492 c2750.8926 -1876.0098 2741.6797 -1878.46 2732.6621 -1881.1875 c2728.373 -1882.4844 2724.3477 -1884.6357 2719.959 -1885.5186 c2715.0225 -1886.5127 2710.0547 -1887.6455 2705.4521 -1889.7461 c2696.8438 -1893.6748 2687.8291 -1896.4063 2678.7949 -1899.1348 c2669.0527 -1902.0771 2660.2021 -1906.832 2650.9229 -1910.9609 c2630.4922 -1920.0508 2610.9189 -1932.3623 2592.6855 -1945.2539 c2584.0078 -1951.3896 2575.1465 -1957.1143 2566.2031 -1962.8467 c2561.8389 -1965.6445 2557.7529 -1968.8643 2553.6738 -1972.0547 c2549.498 -1975.3213 2546.6406 -1979.75 2541.9746 -1982.4199 c2534.7002 -1986.5801 2541.2461 -1997.8135 2548.5352 -1993.6445 c2556.2412 -1989.2373 2561.8232 -1981.8262 2569.04 -1976.6143 c2577.5273 -1970.4854 2586.7061 -1965.3066 2595.2852 -1959.2793 c2612.4756 -1947.2012 2630.2139 -1936.1045 2648.8008 -1926.2988 c2657.2109 -1921.8613 2666.4756 -1917.2168 2675.3643 -1913.8652 c2684.8535 -1910.2871 2694.7939 -1908.2041 2704.1699 -1904.3066 c2712.5898 -1900.8066 2721.4082 -1899.2637 2729.8008 -1895.9746 c2739.0244 -1892.3584 2749.0947 -1889.7588 2758.8047 -1887.8457 c2777.9785 -1884.0664 2799.125 -1884.1152 2818.0986 -1888.5762 c2822.7314 -1889.666 2827.5303 -1889.9531 2832.2139 -1890.7705 c2837.0322 -1891.6123 2841.4307 -1894.0752 2845.6758 -1896.4023 c2854.9121 -1901.4658 2863.5469 -1906.5693 2873.2705 -1910.7373 c2892.1406 -1918.8242 2911.1152 -1926.001 2930.4004 -1933.002 c2938.5342 -1935.9551 2946.832 -1935.7734 2955.3418 -1935.7734 c2959.0869 -1935.7734 2962.6816 -1937.0098 2966.4902 -1936.9727 c2972.293 -1936.917 2978.084 -1936.3379 2983.8359 -1935.627 c3003.4033 -1933.207 3020.8955 -1928.6309 3038.0664 -1918.7705 c3045.6699 -1914.4043 3053.4678 -1910.1074 3060.7627 -1905.2422 c3068.7783 -1899.8945 3074.9893 -1892.1514 3082.3516 -1885.9619 c3090.3486 -1879.2383 3099.5088 -1874.1016 3108.2637 -1868.4326 c3116.8809 -1862.8535 3127.4746 -1857.624 3134.9902 -1850.6289 c3150.2725 -1836.4033 3174.0137 -1839.8164 3193.3633 -1840.5762 c3202.4063 -1840.9316 3210.7959 -1841.7031 3219.252 -1844.9551 c3223.5078 -1846.5918 3227.1758 -1849.6357 3231.4941 -1851.0752 c3237.3945 -1853.043 3242.3584 -1855.0264 3247.5684 -1858.5 c3251.4824 -1861.1094 3255.6738 -1863.124 3259.5469 -1865.79 c3262.9648 -1868.1445 3265.9727 -1871.0977 3269.2891 -1873.5938 c3277.1602 -1879.5195 3284.9082 -1884.6309 3293.9268 -1888.6738 c3302.2383 -1892.3984 3308.8594 -1898.7725 3316.8555 -1903.0586 c3325.7285 -1907.8164 3334.6465 -1908.7588 3344.6191 -1908.8398 c3355.3564 -1908.9277 3366.043 -1908.2227 3376.6914 -1906.8672 c3385.5225 -1905.7432 3398.6445 -1904.9082 3405.5254 -1898.3691 c3409.0908 -1894.9805 3412.9766 -1891.9668 3416.543 -1888.5762 c3419.1504 -1886.0977 3421.6299 -1881.6934 3423.6787 -1878.6914 c3429.3428 -1870.3955 3436.2432 -1862.6924 3443.0254 -1855.2891 c3449.3262 -1848.4131 3454.7021 -1840.9727 3461.6445 -1834.6904 c3469.1787 -1827.8721 3477.7471 -1821.8965 3486.6699 -1817.0371 c3504.5938 -1807.2773 3525.6914 -1802.7686 3545.9004 -1801.5146 c3555.5059 -1800.9189 3565.1572 -1801.1182 3574.7764 -1801.1182 c3579.5156 -1801.1182 3584.375 -1800.7559 3589.0547 -1801.6064 c3594.1846 -1802.5391 3599.1514 -1804.5879 3604.0488 -1806.3125 c3608.1777 -1807.7666 3612.3701 -1809.0391 3616.5098 -1810.4609 c3620.5449 -1811.8457 3624.1504 -1814.1475 3628.1152 -1815.5752 c3632.3809 -1817.1123 3635.7832 -1820.252 3639.5381 -1822.7549 c3644.1602 -1825.8369 3648.707 -1828.5225 3652.8809 -1832.1816 c3659.3691 -1837.8701 3667.6855 -1840.8564 3674.4082 -1846.2031 c3680.9639 -1851.418 3687.1904 -1856.252 3695.4434 -1858.4209 c3704.998 -1860.9326 3713.6309 -1865.5586 3723.502 -1867.373 c3733.4688 -1869.2031 3742.2871 -1868.5303 3751.0918 -1863.3281 c3757.9668 -1859.2656 3762.2979 -1851.9414 3769.0039 -1847.9717 c3777.5537 -1842.9102 3786.1934 -1838.6963 3795.7588 -1835.6211 c3800.6416 -1834.0518 3805.1973 -1831.8477 3810.1797 -1830.5391 c3816.0771 -1828.9902 3822.1963 -1828.3125 3828.2363 -1827.6016 c3832.1875 -1827.1367 3836.1016 -1826.5957 3840.0117 -1826.0889 C3840.0117 -1813.0088 Lf2852.3213 -2159.9268 m2860.0586 -2152.5918 2869.0547 -2146.4824 2877.8301 -2140.541 c2883.3428 -2136.8086 2889.042 -2131.8945 2893.834 -2127.2832 c2899.3867 -2121.9424 2905.6484 -2117.3916 2911 -2111.8389 c2921.9766 -2100.4492 2932.6689 -2088.7773 2943.7051 -2077.4434 c2953.5947 -2067.2871 2964.2939 -2055.1699 2977.5078 -2049.4785 c2983.665 -2046.8262 2988.6191 -2042.2725 2994.5703 -2039.1621 c3001.6816 -2035.4473 3009.3555 -2032.4961 3016.835 -2029.6123 c3031.2285 -2024.0625 3046.0781 -2019.7227 3061.1211 -2016.334 c3076.6309 -2012.8408 3092.3164 -2011.252 3108.1875 -2010.6807 c3115.6592 -2010.4121 3123.1982 -2010.1855 3130.6543 -2010.8203 c3138.8076 -2011.5137 3147.0771 -2013.5439 3154.9844 -2015.583 c3162.2754 -2017.4619 3169.3789 -2020.0557 3176.3623 -2022.8457 c3183.6553 -2025.7598 3191.207 -2028.0264 3198.3955 -2031.2041 c3204.9512 -2034.1025 3211.1211 -2038.0498 3217.5264 -2041.292 c3224.5742 -2044.8594 3229.1367 -2050.0996 3235.2969 -2054.8594 c3240.5352 -2058.9063 3245.8779 -2061.5918 3251.8213 -2064.3906 c3257.8975 -2067.252 3262.1826 -2073.5996 3268.2529 -2076.3926 c3270.9834 -2077.6484 3273.8154 -2078.4082 3276.7412 -2079.0371 c3279.8418 -2079.7051 3282.3779 -2081.374 3285.2021 -2082.7891 c3292.3408 -2086.3672 3299.0371 -2089.6406 3306.834 -2091.6748 c3321.1172 -2095.4004 3336.4355 -2098.7949 3351.2295 -2096.623 c3365.7148 -2094.498 3380.6338 -2089.1797 3393.0469 -2081.4277 c3398.9189 -2077.7607 3404.5811 -2073.7295 3410.3105 -2069.8447 c3416.3779 -2065.7305 3420.8652 -2060.2256 3425.2705 -2054.4453 c3429.5371 -2048.8457 3434.8691 -2044.1484 3439.4385 -2038.7822 c3441.6387 -2036.1992 3443.4023 -2033.0566 3445.834 -2030.6992 c3448.626 -2027.9912 3451.7031 -2025.5703 3454.6074 -2022.9873 c3459.8428 -2018.332 3465.457 -2014.0215 3471.7119 -2010.8281 c3477.6543 -2007.7949 3484.4492 -2006.9336 3490.7637 -2004.9912 c3497.5352 -2002.9092 3504.0303 -2001.877 3511.1016 -2001.877 c3518.6113 -2001.877 3526.7285 -2000.9951 3534.1738 -2002.0078 c3548.1777 -2003.9111 3558.9912 -2011.8184 3569.9961 -2019.9141 c3574.8926 -2023.5156 3580.0098 -2026.8525 3584.9414 -2030.3682 c3590.7891 -2034.5371 3597.5352 -2036.875 3603.666 -2040.5244 c3614.9805 -2047.2578 3627.6992 -2053.2227 3640.7764 -2055.5039 c3647.877 -2056.7432 3655.1104 -2057.1455 3662.2871 -2057.7031 c3669.8574 -2058.29 3677.3467 -2059.5742 3684.9258 -2060.1328 c3699.3145 -2061.1924 3712.9482 -2059.2383 3727.0537 -2056.6855 c3733.1494 -2055.583 3738.959 -2053.7168 3745.0273 -2052.7588 c3750.0176 -2051.9707 3754.7754 -2050.6328 3757.8691 -2046.3984 c3762.8252 -2039.6182 3751.5371 -2033.1436 3746.6445 -2039.8379 c3748.0742 -2037.8809 3743.9756 -2039.8066 3742.6396 -2040.0547 c3740.5166 -2040.4492 3738.5596 -2040.4365 3736.4512 -2041.1104 c3728.8066 -2043.5557 3720.7764 -2044.5674 3712.9268 -2046.1104 c3698.8066 -2048.8867 3683.6328 -2047.541 3669.5195 -2045.4199 c3662.3438 -2044.3408 3655.0107 -2044.2451 3647.7969 -2043.4639 c3639.9326 -2042.6113 3633.1787 -2039.9053 3625.8584 -2037.1563 c3619.6748 -2034.834 3614.4912 -2031.8369 3608.8516 -2028.4805 c3602.7578 -2024.8535 3596.1514 -2022.7842 3590.6055 -2018.2109 c3585.8418 -2014.2842 3580.2148 -2011.3799 3575.2344 -2007.7158 c3569.3896 -2003.416 3563.8867 -1998.9063 3557.2266 -1995.8848 c3550.9287 -1993.0273 3544.3955 -1990.9238 3537.6289 -1989.4717 c3530.3506 -1987.9092 3522.1729 -1988.877 3514.7734 -1988.877 c3500.3623 -1988.877 3486.6846 -1991.9238 3472.999 -1996.3496 c3459.2617 -2000.792 3448.4004 -2011.0098 3437.8359 -2020.4043 c3432.791 -2024.8916 3429.125 -2031.0859 3424.4424 -2036.0283 c3419.1602 -2041.6025 3414.5977 -2047.541 3409.5527 -2053.3193 c3405.1992 -2058.3076 3399.2656 -2061.7148 3393.8086 -2065.3672 c3387.4697 -2069.6104 3381.1006 -2074.1357 3373.877 -2076.7461 c3359.3691 -2081.9883 3345.4902 -2085.9521 3329.9502 -2083.3926 c3322.8086 -2082.2168 3315.4971 -2080.498 3308.4941 -2078.6709 c3300.7979 -2076.6631 3293.9482 -2072.9277 3287.042 -2069.0908 c3281.7246 -2066.1367 3275.873 -2066.2285 3270.9727 -2062.4121 c3265.5635 -2058.2012 3260.4766 -2053.9922 3254.1504 -2051.2773 c3248.0186 -2048.6445 3242.6953 -2044.6123 3237.9883 -2039.9209 c3232.3887 -2034.3398 3226.0596 -2031.1064 3219.1084 -2027.5244 c3212.7344 -2024.2383 3206.6807 -2020.5566 3200.0146 -2017.8584 c3192.7822 -2014.9326 3185.3682 -2012.5273 3178.123 -2009.6328 c3163.5088 -2003.7949 3148.1191 -1999.9941 3132.5146 -1998.0186 c3117.8281 -1996.1592 3102.1182 -1997.6094 3087.4414 -1999.0195 c3072.5098 -2000.4541 3057.8613 -2003.4404 3043.3857 -2007.3184 c3029.0791 -2011.1504 3015.0586 -2016.083 3001.4492 -2021.917 c2994.8574 -2024.7432 2988.1484 -2027.4844 2982.1123 -2031.3887 c2979.3271 -2033.1895 2976.8438 -2035.5547 2973.8525 -2036.9834 c2970.5938 -2038.54 2967.2559 -2039.7363 2964.1953 -2041.6875 c2952.0869 -2049.4043 2941.7021 -2060.791 2931.7998 -2071.0488 c2921.3232 -2081.9023 2911.0996 -2093.0039 2900.6328 -2103.8652 c2895.8203 -2108.8594 2890.1123 -2113.8701 2884.6221 -2118.1055 c2879.2656 -2122.2363 2874.4873 -2127.0596 2868.9277 -2130.9219 c2857.6211 -2138.7783 2845.877 -2146.7139 2836.9004 -2157.2637 c2836.1768 -2158.1143 2835.7217 -2159.0166 2835.4766 -2159.9268 C2852.3213 -2159.9268 Lf1910.7593 -2082.7979 m1908.8242 -2081.4727 1906.5527 -2080.8789 1904.2173 -2080.7646 c1901.5361 -2080.6338 1899.2246 -2079.8408 1896.5786 -2079.5898 c1894.0005 -2079.3447 1891.3877 -2079.4619 1888.7988 -2079.4619 c1885.2061 -2079.4619 1881.5034 -2078.5049 1877.9907 -2077.7676 c1874.0127 -2076.9316 1870.1035 -2077.3652 1866.1465 -2077.7813 C1866.9307 -2075.7656 1866.5918 -2073.4375 1864.333 -2071.5723 c1861.1338 -2068.9307 1862.4355 -2061.3711 1862.2412 -2057.6543 c1862.0537 -2054.0605 1861 -2050.5771 1861 -2046.9727 C1861 -2033.9805 L1861 -2019.3721 1860.5654 -2004.6602 1861.7324 -1990.084 c1862.9346 -1975.0801 1868.5439 -1961.6982 1875.7598 -1948.6494 c1882.3931 -1936.6543 1890.188 -1923.8271 1899.855 -1914.0273 c1909.9507 -1903.793 1921.9521 -1894.5723 1933.7002 -1886.3232 c1939.21 -1882.4541 1945.3662 -1879.168 1951.5928 -1876.6191 c1958.2158 -1873.9082 1964.8945 -1870.8076 1971.7969 -1868.9238 c1978.5684 -1867.0762 1985.6025 -1865.9082 1992.4453 -1864.2988 c2000.0186 -1862.5176 2007.7666 -1860.958 2015.5195 -1860.2383 c2022.3916 -1859.6006 2029.0293 -1859.8115 2035.7988 -1861.0752 c2042.8809 -1862.3975 2049.877 -1864.0244 2057.0234 -1865 c2061.9414 -1865.6719 2066.8887 -1866.0537 2071.7773 -1866.9395 c2077.3262 -1867.9443 2082.0195 -1870.458 2086.9473 -1873.0879 c2096.0977 -1877.9717 2105.4912 -1882.7939 2113.8848 -1888.8994 c2118.124 -1891.9834 2122.8506 -1893.8877 2127.2363 -1896.6309 c2131.6191 -1899.3721 2135.958 -1902.1719 2140.1504 -1905.1992 c2144.0664 -1908.0273 2148.7715 -1911.5684 2151.3125 -1915.7471 c2154.1807 -1920.4619 2156.4541 -1925.5635 2158.5918 -1930.6406 c2162.8076 -1940.6494 2167.7324 -1950.3145 2171.875 -1960.3369 c2175.7402 -1969.6865 2179.1133 -1979.2324 2183.0771 -1988.543 c2186.4844 -1996.5449 2190.5449 -2004.3301 2197.0586 -2010.2617 c2204.915 -2017.417 2215.542 -2020.8848 2224.9219 -2025.4707 c2232.4219 -2029.1377 2239.0146 -2017.9277 2231.4844 -2014.2461 c2219.5449 -2008.4092 2206.626 -2004.5215 2199.4414 -1992.5684 c2192.543 -1981.0918 2188.8369 -1967.5869 2183.7461 -1955.2715 c2181.0029 -1948.6377 2177.4766 -1942.3926 2174.6934 -1935.7959 c2171.6055 -1928.4766 2168.7305 -1921.0742 2165.166 -1913.9658 c2158.6084 -1900.8916 2145.8389 -1892.9609 2133.7969 -1885.4053 c2127.9668 -1881.7471 2121.9961 -1878.874 2116.4141 -1874.6943 c2110.5234 -1870.2822 2103.0039 -1866.8789 2096.4922 -1863.459 c2090.1768 -1860.1416 2083.9805 -1856.4199 2076.9844 -1854.7666 c2070.0244 -1853.1211 2062.7773 -1852.8301 2055.7207 -1851.7617 c2049.0303 -1850.748 2042.4473 -1849.084 2035.7832 -1847.9092 c2028.4873 -1846.624 2021.2305 -1846.709 2013.8643 -1847.3926 c1999.0469 -1848.7666 1984.3838 -1852.7666 1969.9033 -1856.0039 c1964.3945 -1857.2363 1959.4824 -1859.6865 1954.2617 -1861.707 c1949.0811 -1863.7129 1943.9023 -1865.7002 1938.9277 -1868.1855 c1928.291 -1873.499 1918.9126 -1881.0234 1909.6152 -1888.3535 c1900.168 -1895.8018 1890.4521 -1903.96 1883.21 -1913.6123 c1876.0449 -1923.1602 1869.4883 -1933.2842 1863.7134 -1943.7266 c1857.7544 -1954.5029 1852.7925 -1965.9121 1850.48 -1978.0498 c1848.2227 -1989.9004 1848.2041 -2002.0479 1848.292 -2014.0625 c1848.3359 -2020.0605 1848.3403 -2026.0576 1848.3403 -2032.0547 c1848.3403 -2038.4004 1847.2051 -2045.9834 1848.5723 -2052.1895 c1850.373 -2060.3613 1847.6396 -2071.4971 1853.0259 -2078.5635 C1848.9092 -2078.9102 1844.8081 -2079.4238 1840.6602 -2079.54 c1828.1035 -2079.8906 1815.9209 -2083.75 1803.7168 -2086.1387 c1798.0967 -2087.2383 1792.9922 -2090.2158 1787.4385 -2091.6123 c1780.7178 -2093.3027 1773.6143 -2094.0586 1766.7021 -2094.1523 c1758.3262 -2094.2656 1758.3149 -2107.2656 1766.7021 -2107.1523 c1778.5396 -2106.9922 1790.1631 -2104.8916 1801.1597 -2100.5713 c1812.3262 -2096.1836 1824.5396 -2094.9639 1836.2573 -2092.8564 c1838.7559 -2092.4072 1841.4326 -2092.5068 1843.9604 -2092.4717 c1847.0791 -2092.4287 1849.8623 -2091.9102 1852.9395 -2091.5371 c1859.0801 -2090.791 1865.292 -2090.9531 1871.4619 -2090.2051 c1874.2954 -2089.8613 1877.2539 -2090.8418 1880.0435 -2091.3232 c1883.6235 -2091.9414 1886.6768 -2092.4619 1890.3403 -2092.4619 c1892.6895 -2092.4619 1894.877 -2092.2881 1897.1226 -2093.0234 c1899.1299 -2093.6807 1902.5693 -2092.9072 1904.1978 -2094.0225 c1911.1348 -2098.7754 1917.6279 -2087.5029 1910.7593 -2082.7979 cf2377.0449 -2072.3496 m2369.7588 -2074.2148 2362.3398 -2073.5352 2354.9014 -2073.3584 c2351.5869 -2073.2793 2349.0703 -2072.2705 2346.0635 -2070.9297 c2342.2754 -2069.2412 2338.6973 -2068.373 2334.5957 -2067.8066 c2326.7451 -2066.7227 2320.0469 -2064.0244 2312.5605 -2061.6387 c2305.4482 -2059.3721 2297.7441 -2059.6035 2290.5303 -2057.6406 c2287.3301 -2056.7695 2284.2285 -2055.0928 2281.1699 -2053.8232 c2278.0518 -2052.5293 2274.3779 -2052.3145 2271.0488 -2052.0146 c2267.4209 -2051.6885 2263.6621 -2052.4316 2260.0303 -2052.5313 c2256.125 -2052.6377 2252.1904 -2052.3174 2248.2861 -2052.2383 c2233.7793 -2051.9453 2219.0303 -2056.167 2205.0527 -2059.6494 c2197.7451 -2061.4697 2190.2764 -2062.2813 2183.0186 -2064.418 c2175.4297 -2066.6514 2167.8848 -2069.0391 2160.3037 -2071.2998 c2153.8516 -2073.2236 2147.2441 -2074.9961 2140.6895 -2076.543 c2133.1406 -2078.3252 2125.2471 -2078.2217 2117.5381 -2078.2383 c2102.4111 -2078.2686 2087.7764 -2075.0596 2073.2402 -2071.126 c2067.0596 -2069.4531 2060.8545 -2069.2627 2054.4844 -2069.46 c2047.9512 -2069.6621 2041.5957 -2070.7793 2035.1064 -2070.9395 c2027.1465 -2071.1348 2018.7832 -2074.0146 2010.9297 -2075.4102 c2002.3594 -2076.9336 1994.3066 -2080.5127 1985.8105 -2082.4443 c1976.96 -2084.457 1967.3418 -2086.2617 1958.2803 -2086.7705 c1953.4111 -2087.0439 1948.4668 -2086.8066 1943.5898 -2086.8066 c1938.9932 -2086.8066 1934.4805 -2087.0723 1930.0166 -2085.8154 c1921.9316 -2083.5381 1918.5044 -2096.082 1926.5615 -2098.3506 c1933.3086 -2100.251 1940.3262 -2099.8066 1947.2627 -2099.8066 c1955.3223 -2099.8066 1963.0625 -2099.5723 1971.0254 -2098.1973 c1978.25 -2096.9492 1985.6289 -2095.9336 1992.7383 -2094.1494 c2000.04 -2092.3174 2006.957 -2089.2344 2014.3857 -2087.9453 c2020.8887 -2086.8174 2027.3105 -2085.4063 2033.751 -2084.0234 c2036.8418 -2083.3604 2040.3262 -2083.8027 2043.499 -2083.3438 c2046.6924 -2082.8828 2049.6729 -2082.6348 2052.9219 -2082.5156 c2059.3516 -2082.2803 2065.1865 -2082.417 2071.4121 -2084.1016 c2078.8877 -2086.125 2086.4336 -2087.8652 2094.0654 -2089.1855 c2108.6523 -2091.709 2124.2061 -2092.3047 2138.873 -2090.043 c2153.1777 -2087.8379 2167.1982 -2082.7148 2181.0332 -2078.5898 c2188.3096 -2076.4199 2195.5137 -2074.5645 2203 -2073.2617 c2210.8945 -2071.8877 2218.6211 -2069.6191 2226.4727 -2067.9922 c2233.126 -2066.6133 2239.7568 -2065.2871 2246.5654 -2065.2246 c2254.1563 -2065.1563 2261.6211 -2065.3193 2269.2119 -2064.9932 c2274.1201 -2064.7822 2277.998 -2066.7227 2282.4355 -2068.3828 c2286.7266 -2069.9873 2290.7061 -2071.0898 2295.252 -2071.7734 c2299.873 -2072.4688 2304.6045 -2072.9199 2309.1045 -2074.1738 c2314.1094 -2075.5684 2318.7266 -2077.9756 2323.7949 -2079.1816 c2328.5146 -2080.3047 2333.4551 -2080.2686 2338.1172 -2081.6475 c2342.1611 -2082.8438 2345.6729 -2085.1836 2349.8682 -2086.0059 c2354.416 -2086.8965 2359.46 -2086.5205 2364.083 -2086.6309 c2369.6191 -2086.7627 2375.1309 -2086.2598 2380.5 -2084.8848 c2388.6172 -2082.8066 2385.1719 -2070.2686 2377.0449 -2072.3496 cf2443.2598 -1824.5049 m2436.666 -1819.5742 2428.8633 -1817.8389 2420.8965 -1816.5049 c2412.5654 -1815.1094 2404.5166 -1813.5537 2396.1387 -1815.7246 c2387.6211 -1817.9326 2379.4736 -1821.4893 2371.5566 -1825.2754 c2367.3262 -1827.2988 2362.8438 -1828.6367 2358.7031 -1830.8711 c2357.5381 -1831.5 2355.2988 -1833.2549 2353.2617 -1834.5596 C2351.916 -1832.3711 2350.5068 -1830.3887 2349.4131 -1827.9531 c2347.1328 -1822.875 2342.7852 -1817.6211 2339.2988 -1813.2793 c2335.7578 -1808.8691 2331.0713 -1805.8516 2326.2529 -1802.9971 c2320.0303 -1799.3105 2313.9287 -1795.7334 2307.335 -1792.7227 c2294.4707 -1786.8477 2280.8516 -1783.2949 2267.1143 -1780.0869 c2261.25 -1778.7168 2254.5195 -1777.5313 2248.5742 -1778.9277 c2242.9082 -1780.2588 2238.7959 -1785.5801 2235.583 -1790.0137 c2228.0908 -1800.3496 2221.5762 -1810.9707 2223.5 -1824.207 c2225.3115 -1836.6729 2230.8574 -1847.9102 2237.7207 -1858.3408 c2240.9258 -1863.21 2244.1582 -1868.3359 2248.7695 -1871.9814 c2253.877 -1876.0186 2259.5928 -1879.2285 2265.4053 -1882.0508 c2272.0449 -1885.2734 2277.7031 -1889.958 2284.416 -1893.0566 c2289.5205 -1895.4131 2294.8193 -1897.3154 2300.0605 -1899.3525 C2300.0293 -1900.1865 2300 -1901.0195 2300 -1901.8496 C2300 -1922.4189 L2300 -1928.7207 2296.2168 -1935.1563 2293.1895 -1940.4727 c2290.0918 -1945.9082 2287.1436 -1951.7246 2284.4824 -1957.4023 c2279.2344 -1968.5967 2269.7705 -1975.9883 2260.7969 -1983.959 c2255.875 -1988.3311 2248.5166 -1989.999 2242.3574 -1991.8779 c2238.9092 -1992.9297 2235.2422 -1994.5332 2231.584 -1993.9463 c2228.0566 -1993.3799 2224.6426 -1991.6631 2221.3604 -1990.332 c2218.0713 -1988.998 2214.2227 -1991.7559 2213.3652 -1994.8721 c2212.3418 -1998.5898 2214.625 -2001.5371 2217.9063 -2002.8672 c2226.3643 -2006.2988 2233.1865 -2008.0732 2242.168 -2005.4873 c2250.0518 -2003.2178 2259.2354 -2001.0166 2266.0381 -1996.2666 c2272.0107 -1992.0957 2277.877 -1986.8057 2282.9648 -1981.6094 c2288.9795 -1975.4668 2293.4053 -1968.4268 2297.249 -1960.8203 c2300.8926 -1953.6113 2305.0225 -1946.6523 2308.4355 -1939.3301 c2310.165 -1935.6201 2311.5381 -1931.7773 2312.4912 -1927.7988 c2313.6221 -1923.0762 2313.0479 -1917.877 2313.0479 -1913.0527 c2313.0479 -1902.4014 2316.9365 -1882.5469 2301.6514 -1881.1514 c2298.9072 -1880.9004 2297.0781 -1882.1387 2296.1465 -1883.9385 C2293.2432 -1882.7842 2290.3623 -1881.5771 2287.5488 -1880.2031 c2280.4688 -1876.7461 2274.4688 -1871.6953 2267.0996 -1868.6162 c2264.4092 -1867.4922 2261.6641 -1865.0977 2259.1797 -1863.5244 c2256.4766 -1861.8105 2254.54 -1859.7813 2252.6855 -1857.1943 c2248.5801 -1851.4639 2244.7803 -1845.5371 2241.6191 -1839.2305 c2238.7539 -1833.5137 2236.8096 -1827.1563 2236.0732 -1820.8008 c2235.1758 -1813.0547 2239.8828 -1807.7129 2243.6084 -1801.5693 c2246.1318 -1797.4102 2249.0225 -1791.251 2254.5215 -1791.3613 c2262.4941 -1791.5195 2269.6113 -1794.8193 2277.2773 -1796.3564 c2292.8232 -1799.4756 2306.1484 -1806.2422 2319.6914 -1814.2227 c2325.2402 -1817.4912 2328.748 -1820.7705 2332.459 -1825.9941 c2334.207 -1828.4531 2335.9688 -1830.8994 2337.6602 -1833.3975 c2339.5654 -1836.2139 2340.2754 -1839.5156 2342.5947 -1842.165 c2341.5176 -1840.9336 2342.5322 -1842.4756 2342.7041 -1843.2734 c2342.9541 -1844.4346 2343.7148 -1846.0313 2344.6426 -1846.7939 c2346.8867 -1848.6396 2349.3389 -1849.6406 2352.2734 -1848.9365 c2358.6592 -1847.4053 2363.8643 -1842.2227 2370.0078 -1839.9111 c2383.333 -1834.8955 2396.4004 -1825.8301 2411.2754 -1827.9063 c2417.916 -1828.833 2425.0439 -1829.7861 2431.2441 -1832.5713 C2430.8145 -1834.1045 2430.9229 -1835.7441 2431.7715 -1837.1475 C2431.4141 -1837.791 2431.043 -1838.4297 2430.6943 -1839.0781 c2429.2598 -1841.7461 2429.0049 -1845.041 2428.498 -1847.9756 c2427.958 -1851.0986 2425.9824 -1853.1641 2424.1143 -1855.6035 c2422.4473 -1857.7813 2421.4824 -1860.2441 2419.9805 -1862.4863 c2413.9482 -1871.498 2403.5781 -1877.8467 2394.0068 -1882.5176 c2384 -1887.4004 2373.127 -1888.126 2362.541 -1891.1963 c2357.9395 -1892.5303 2353.6953 -1894.6934 2349.0713 -1896.002 c2343.8223 -1897.4863 2339.8037 -1899.8428 2336.2949 -1904.0195 c2332.7285 -1908.2627 2332.6553 -1913.5098 2334.1064 -1918.6055 c2335.6396 -1923.9883 2336.3418 -1929.5527 2336.7246 -1935.1309 c2337.1113 -1940.7734 2336.9141 -1946.4814 2335.7803 -1952.0273 c2334.5156 -1958.209 2331.7852 -1964.1934 2330.3682 -1970.3896 c2329.0264 -1976.2559 2327.9043 -1981.583 2324.8516 -1986.8623 c2322.166 -1991.5049 2318.0938 -1995.3232 2314.0488 -1998.7646 c2305.7314 -2005.8398 2295.8564 -2010.9619 2287.2617 -2017.7109 c2280.6729 -2022.8848 2289.9414 -2032.0176 2296.4551 -2026.9023 c2305.0684 -2020.1387 2314.7373 -2014.8965 2323.2402 -2007.957 c2332.8594 -2000.1094 2339.5439 -1989.6582 2342.1953 -1977.5176 c2343.6963 -1970.6475 2345.4941 -1964.0039 2347.7041 -1957.3193 c2349.6641 -1951.3896 2349.9277 -1944.8291 2349.8652 -1938.627 c2349.8008 -1932.2988 2348.8994 -1925.9502 2347.7559 -1919.7373 c2347.3301 -1917.4189 2346.2783 -1915.084 2346.0996 -1912.7461 c2345.9502 -1910.7861 2349.96 -1909.3564 2351.2734 -1908.915 c2361.998 -1905.3105 2372.3135 -1901.6641 2383.5605 -1899.8867 c2395.1611 -1898.0547 2407.2266 -1891.1211 2416.417 -1884.0488 c2421.1055 -1880.4414 2425.8232 -1876.5566 2429.3076 -1871.7402 c2432.8545 -1866.8379 2435.9678 -1861.6387 2439.4707 -1856.6563 c2441.0996 -1854.3398 2441.2012 -1850.4609 2441.668 -1847.7588 c2442.1465 -1844.9883 2443.5156 -1842.918 2444.5918 -1840.3652 c2445.4941 -1838.2266 2445.7363 -1835.9912 2445.291 -1833.96 C2447.7402 -1830.9414 2446.1309 -1826.6514 2443.2598 -1824.5049 cf*u1 D1978.3105 -1976.4375 m1972.3594 -1978.791 1967.4355 -1983.041 1964.75 -1988.876 c1962.582 -1993.5869 1962.499 -1998.3535 1961.9912 -2003.2061 C1958.2236 -1997.335 1947.5244 -2000.7617 1950.1768 -2008.1211 c1954.1904 -2019.2607 1968.6426 -2019.6777 1978.4785 -2018.4844 c1993.1016 -2016.7109 2001.7314 -2006.2832 2004.332 -1992.207 c2005.3857 -1986.5059 2003.5215 -1980.7393 1998.8848 -1977.2178 c1993.6885 -1973.2715 1984.0635 -1974.1621 1978.3105 -1976.4375 cf0 D1991.2607 -1991.3848 m1989.6563 -1998.6201 1985.958 -2003.7451 1978.5869 -2005.4063 c1977.3906 -2005.6758 1975.9316 -2005.9297 1974.4209 -2006.0869 C1974.7451 -2001.1348 1974.8613 -1995.8135 1977.7246 -1992.1738 c1979.6123 -1989.7725 1983.1816 -1988.0449 1986.1602 -1987.7305 c1986.9521 -1987.6465 1991.0566 -1987.2734 1991.5557 -1988.0098 c1991.8613 -1988.4609 1991.4131 -1990.6982 1991.2607 -1991.3848 cf*U1636.3135 -2008.0762 m1631.3564 -2006.7783 1626.728 -2004.5674 1622.1909 -2002.2285 c1612.4082 -1997.1855 1604.1406 -1989.5303 1593.7637 -1985.5605 c1574.2129 -1978.082 1552.3359 -1981.7344 1532.7373 -1987.2813 c1512.5488 -1992.9941 1494.106 -2003.8193 1477.1123 -2015.8848 c1458.3789 -2029.1855 1437.7466 -2036.9648 1416.1533 -2044.2334 c1393.9873 -2051.6943 1368.9937 -2049.46 1346.6421 -2044.2158 c1335.0742 -2041.502 1324.9805 -2035.9609 1314.4277 -2030.6846 c1303.3359 -2025.1387 1292.1011 -2020.0078 1280.8916 -2014.7139 c1271.4575 -2010.2588 1262.5381 -2005.0742 1252.7148 -2001.4736 c1242.1426 -1997.5986 1231.2158 -1994.6123 1220.436 -1991.3838 c1198.9707 -1984.9551 1177.4297 -1978.376 1155.0244 -1976.3242 c1133.5234 -1974.3545 1109.2759 -1973.7451 1088.0249 -1978.0908 c1077.1567 -1980.3125 1065.728 -1979.3721 1054.9727 -1981.7637 c1042.9917 -1984.4268 1031.0254 -1987.1318 1019.167 -1990.3037 c975.4136 -2002.0059 934.2881 -2022.2227 892.1313 -2038.4766 c870.9985 -2046.625 850.4268 -2056.9346 828.9658 -2064.0859 c824.0513 -2065.7246 819.0234 -2066.9922 813.9741 -2068.1338 c808.5967 -2069.3496 803.5234 -2071.8066 798.2529 -2073.4775 c788.7959 -2076.4756 776.9653 -2074.4961 767.2822 -2073.4326 c762.4253 -2072.8984 757.8081 -2073.8447 753.0649 -2072.2813 c748.4316 -2070.7549 743.8081 -2069.4043 739.1387 -2068.0088 c734.4922 -2066.6201 729.6479 -2066.0146 724.9927 -2064.6152 c719.1416 -2062.8555 713.48 -2059.4102 707.625 -2057.3633 c697.9258 -2053.9717 687.9893 -2051.04 677.8096 -2049.4609 c666.4946 -2047.7051 655.4663 -2049.6689 644.2046 -2050.8848 c621.3843 -2053.3496 601.1045 -2061.3516 579.459 -2068.6035 c569.3818 -2071.9785 558.7598 -2074.459 549.0898 -2078.9277 c538.2896 -2083.918 528.5444 -2090.9814 517.5752 -2095.6084 c512.5088 -2097.7451 508.7842 -2100.2725 503.0835 -2100.2725 c497.4438 -2100.2725 491.897 -2100.4375 486.3271 -2099.4199 c475.2305 -2097.3906 465.0063 -2091.708 454.645 -2087.502 c444.8906 -2083.543 434.8809 -2080.2861 425.127 -2076.3574 c415.0283 -2072.291 403.8589 -2071.5918 393.4033 -2068.6318 c371.0049 -2062.291 348.5811 -2063.127 325.5952 -2065.2822 c314.7231 -2066.3018 303.7969 -2066.5449 292.9131 -2067.5684 c281.4438 -2068.6484 270.3105 -2070.9258 258.9756 -2072.8066 c248.1191 -2074.6064 237.1221 -2074.9668 226.2227 -2076.5557 c215.7788 -2078.0781 204.8872 -2083.9014 195.2178 -2088.0264 c184.9116 -2092.4238 176.2861 -2098.4863 166.9897 -2104.627 c158.4912 -2110.2393 149.5669 -2115.5107 142.1094 -2122.5273 c136.7344 -2127.585 131.6333 -2135.0039 128.0864 -2141.4395 c124.0381 -2148.7871 135.2656 -2155.3438 139.312 -2148.002 c149.645 -2129.249 167.9541 -2119.6875 185.0273 -2107.9854 c194.2168 -2101.6875 204.8223 -2098.0713 215.1143 -2094.0215 c219.9692 -2092.1113 224.5181 -2090.0684 229.6787 -2089.0908 c236.2622 -2087.8438 243.0332 -2087.6973 249.6865 -2087.1133 c260.2949 -2086.1836 270.6353 -2083.5156 281.145 -2081.9385 c293.2046 -2080.1289 305.5015 -2079.3242 317.6738 -2078.8604 c341.0933 -2077.9688 364.2222 -2073.6299 387.2539 -2080.3828 c397.2339 -2083.3086 407.5366 -2084.4961 417.4966 -2087.3457 c422.0718 -2088.6543 426.2979 -2091.1816 430.8496 -2092.7051 c436.8228 -2094.7051 442.7603 -2096.7969 448.647 -2099.0391 c458.4888 -2102.7881 467.8394 -2107.6309 477.9316 -2110.7275 c487.2251 -2113.5801 500.397 -2115.1318 509.9233 -2112.8477 c519.2349 -2110.6152 528.5527 -2105.0068 536.8428 -2100.3203 c547.5527 -2094.2656 557.7236 -2089.1992 569.4766 -2085.4375 c591.6025 -2078.3555 613.0503 -2069.5537 635.7969 -2064.5859 c640.9712 -2063.4561 646.7651 -2063.623 652.0459 -2062.958 c657.4365 -2062.2783 662.7988 -2061.7158 668.2344 -2061.6084 c679.8384 -2061.3799 690.6138 -2066.0488 701.5459 -2069.0674 c711.7715 -2071.8906 720.564 -2077.2949 731.0459 -2079.4717 c740.9756 -2081.5342 750.2725 -2086.3418 760.459 -2086.3418 c769.459 -2086.3418 778.3145 -2087.5654 787.3472 -2087.5654 c799.2598 -2087.5654 808.624 -2082.6602 820 -2080.0889 c841.7759 -2075.166 861.8291 -2064.2822 882.4785 -2056.1152 c904.082 -2047.5703 925.8848 -2039.5635 947.1973 -2030.2959 c967.377 -2021.5215 987.894 -2013.5977 1008.8511 -2006.8652 c1019.7109 -2003.377 1030.8037 -2000.6309 1041.9028 -1998.0293 c1054.231 -1995.1387 1066.1797 -1993.915 1078.7354 -1992.627 c1089.7944 -1991.4912 1100.6655 -1989.5254 1111.7871 -1988.7734 c1123.4297 -1987.9854 1135.2451 -1988.3018 1146.8945 -1988.7959 c1169.1265 -1989.7373 1190.4893 -1995.9912 1211.6851 -2002.3301 c1221.8994 -2005.3848 1232.0996 -2008.4492 1242.2637 -2011.667 c1253.6079 -2015.2598 1263.6572 -2020.8008 1274.3301 -2025.9395 c1284.6152 -2030.8916 1295.0283 -2035.4902 1305.2432 -2040.5977 c1315.9951 -2045.9736 1326.4658 -2052.0527 1338.0469 -2055.4043 c1359.5771 -2061.6348 1382.1807 -2063.2461 1404.3115 -2060.0859 c1425.4487 -2057.0674 1444.5825 -2047.7217 1463.8076 -2039.1289 c1473.2563 -2034.9053 1481.4531 -2028.5273 1489.8418 -2022.5918 c1498.397 -2016.5391 1508.6724 -2010.623 1518.1729 -2006.248 c1537.1665 -1997.501 1562.3545 -1991.1338 1583.1128 -1995.748 c1593.5977 -1998.0781 1602.3306 -2005.2432 1611.2168 -2010.877 c1615.5088 -2013.5977 1620.1182 -2015.7559 1624.7764 -2017.7637 c1626.7002 -2018.5928 1628.6499 -2019.2969 1630.6362 -2019.9609 c1632.1504 -2020.4277 1633.6768 -2020.8516 1635.2153 -2021.2295 c1635.9629 -2021.4355 1636.4678 -2021.543 1636.731 -2021.5527 C1641.9922 -2026.5371 1650.1182 -2017.8066 1645.2119 -2011.5898 c1642.8545 -2008.6035 1639.6836 -2008.959 1636.3135 -2008.0762 cf610.2813 -1869.7988 m608.8623 -1870.8574 602.5728 -1869.5996 600.0342 -1869.2861 c594.0332 -1868.5439 587.9932 -1868.1475 581.9478 -1868.0156 c566.3252 -1867.6738 550.8135 -1870.0977 535.5288 -1873.1406 c529.6797 -1874.3047 524.7358 -1878.0361 519.8428 -1881.1934 c513.6914 -1885.1621 506.9702 -1888.9248 501.3638 -1893.6533 c496.5537 -1897.71 492.6055 -1902.7363 488.5376 -1907.4951 c484.1797 -1912.5938 478.6982 -1916.418 472.8916 -1919.6787 c467.4385 -1922.7412 461.5952 -1924.9775 455.6782 -1926.9541 c448.2153 -1929.4473 440.4951 -1929.2959 432.7168 -1929.0869 c429.1348 -1928.9902 425.4834 -1929.1826 422.0029 -1928.2637 c418.6108 -1927.3682 415.3184 -1926.0889 411.9551 -1925.0908 c404.9048 -1922.998 399.937 -1919.293 394.0493 -1915.0918 c388.4922 -1911.126 382.0913 -1908.5176 376.7798 -1904.1973 c370.7412 -1899.2852 365.9502 -1892.9941 359.9292 -1888.1348 c354.9775 -1884.1387 348.9326 -1881.5693 342.9429 -1879.5488 c335.6475 -1877.0869 328.5176 -1874.6914 320.8784 -1873.5234 c306.5967 -1871.3418 291.6191 -1872.5947 277.4741 -1875.0957 c270.3638 -1876.3535 263.3613 -1878.1953 256.4639 -1880.3174 c248.8359 -1882.6641 241.9526 -1887.0557 234.5166 -1889.9648 c228.1675 -1892.4492 222.1143 -1896.1064 215.6289 -1898.1309 c208.9951 -1900.2012 199.5942 -1898.3584 192.9868 -1896.916 c179.3315 -1893.9336 167.5566 -1885.4209 156.8784 -1876.7295 c151.2578 -1872.1543 144.6772 -1869.3623 138.2036 -1866.126 c135.5396 -1864.7939 133.3169 -1861.4775 131.0508 -1859.543 c128.1055 -1857.0303 124.4517 -1855.3945 121.2188 -1853.2725 c116.3481 -1850.0742 111.8188 -1846.2754 106.813 -1843.3066 c100.7739 -1839.7256 92.5488 -1837.7646 85.7935 -1836.0488 c78.6973 -1834.2471 71.3589 -1834.6348 64.1084 -1834.6348 c55.979 -1834.6348 47.8555 -1834.5166 39.7383 -1835.0391 c26.1973 -1835.9092 12.9028 -1838.3682 -0.372559 -1841.0273 C-0.372559 -1854.5049 L9.36523 -1852.7441 19.0093 -1850.1133 28.7505 -1849.0342 c44.1206 -1847.3311 59.5024 -1847.6348 74.9404 -1847.6348 c82.2495 -1847.6348 89.3066 -1850.6084 96.1025 -1852.9824 c102.0913 -1855.0742 106.7974 -1859.0977 111.9863 -1862.6807 c114.7202 -1864.5684 117.4902 -1866.375 120.3813 -1868.0127 c123.2661 -1869.6475 125.3643 -1872.0439 127.7637 -1874.3066 c133.4629 -1879.6836 141.7446 -1880.9824 147.686 -1885.9219 c158.2734 -1894.7217 169.9258 -1903.083 183.0024 -1907.6152 c196.1104 -1912.1582 212.3906 -1913.835 225.3062 -1908.2725 c238.9883 -1902.3809 252.334 -1894.8457 266.7324 -1890.8643 c281.3774 -1886.8145 296.1011 -1885.2744 311.2622 -1885.6719 c318.0024 -1885.8477 324.4668 -1887.1846 330.894 -1889.1758 c337.7354 -1891.2969 344.7002 -1893.5195 350.7607 -1897.416 c353.6519 -1899.2744 355.8247 -1902.3018 358.2397 -1904.7051 c360.8428 -1907.2949 363.5 -1909.8223 366.252 -1912.2539 c371.8896 -1917.2354 378.3384 -1920.5381 384.7104 -1924.4199 c387.5469 -1926.1484 389.9424 -1928.6084 392.7017 -1930.4883 c395.25 -1932.2236 398.0933 -1933.5381 400.8623 -1934.874 c407.3311 -1937.9941 415.062 -1940.0957 422.0923 -1941.6611 c425.4341 -1942.4063 429.3003 -1941.9854 432.7168 -1942.0869 c436.3818 -1942.1953 440.0396 -1942.2305 443.7046 -1942.1045 c451.2061 -1941.8457 458.0767 -1939.9971 465.063 -1937.4004 c477.2725 -1932.8623 488.894 -1926.4121 497.73 -1916.6875 c501.8027 -1912.2051 505.3984 -1906.667 510.3423 -1903.0576 c516.3354 -1898.6826 522.7676 -1894.8477 528.9536 -1890.752 c534.6152 -1887.0039 539.4292 -1885.5488 546.126 -1884.4326 c554.2725 -1883.0752 562.3062 -1881.6357 570.5659 -1881.1992 c582.7856 -1880.5518 594.6021 -1882.1807 606.7227 -1882.9473 c609.9946 -1883.1543 614.105 -1883.0654 616.8428 -1881.0234 c623.479 -1876.0742 617.0098 -1864.7803 610.2813 -1869.7988 cf908.728 -1481.5723 m877.2017 -1485.5098 846.6436 -1493.0332 815.5986 -1499.5508 c800.4238 -1502.7373 785.6543 -1504.8516 771.1602 -1510.5918 c757.062 -1516.1748 742.9653 -1522.9727 729.9775 -1530.8037 c717.9043 -1538.082 706.7808 -1546.8018 694.8794 -1554.3467 c682.3008 -1562.3203 668.7256 -1567.8428 656.9448 -1577.1875 c645.6392 -1586.1563 635.417 -1596.3428 623.9873 -1605.1973 c618.54 -1609.417 612.877 -1611.7285 606.5283 -1614.2695 c599.5947 -1617.0439 593.4683 -1621.0439 585.877 -1621.9531 c578.5537 -1622.8301 572.0459 -1620.3506 565.0996 -1618.5127 c557.4355 -1616.4844 550.1196 -1614.2441 542.6704 -1611.5508 c535.9458 -1609.1201 528.9785 -1608.0801 521.9448 -1606.9893 c514.1509 -1605.7813 506.3564 -1604.2939 498.4922 -1603.6357 c491.1587 -1603.0225 483.7915 -1603.5195 476.458 -1602.9102 c472.7256 -1602.6006 469.0249 -1601.9678 465.332 -1601.3623 c461.2949 -1600.7012 457.3066 -1600.8252 453.2236 -1600.8252 c438.2222 -1600.8252 423.2642 -1600.8525 408.2925 -1601.9277 c372.5186 -1604.498 338.1577 -1612.4775 304.9326 -1625.8984 c289.0146 -1632.3281 273.7241 -1639.957 258.6235 -1648.1045 c251.1553 -1652.1338 244.2598 -1657.5908 237.5391 -1662.7441 c234.5317 -1665.0508 231.644 -1667.5469 228.5708 -1669.7627 c226.3818 -1671.3418 223.4434 -1675.2471 220.6123 -1675.498 c212.3306 -1676.2334 212.2588 -1689.2393 220.6123 -1688.498 c226.8105 -1687.9482 230.8481 -1684.6865 235.4399 -1680.7832 c240.9072 -1676.1338 246.7808 -1671.8066 252.6445 -1667.6738 c264.2324 -1659.5068 276.7627 -1652.9688 289.4888 -1646.7051 c316.7534 -1633.2871 346.0811 -1623.9414 375.9961 -1618.792 c390.8032 -1616.2432 405.7954 -1614.8721 420.7979 -1614.1992 c427.9893 -1613.877 435.1846 -1613.8252 442.3818 -1613.8252 c450.0693 -1613.8252 457.9473 -1613.2813 465.5488 -1614.4922 c480.7119 -1616.9072 495.9839 -1616.0195 511.1655 -1618.3945 c518.334 -1619.5166 525.6104 -1620.3457 532.666 -1622.0664 c540.0581 -1623.8691 546.938 -1627.2412 554.2988 -1629.1895 c561.3955 -1631.0674 568.5947 -1633.5869 575.8589 -1634.6289 c583.1113 -1635.668 590.2988 -1634.8271 597.2485 -1632.5723 c603.8877 -1630.4189 609.9878 -1626.7832 616.5137 -1624.293 c623.23 -1621.7295 628.4019 -1617.9541 634.1016 -1613.707 c645.8872 -1604.9238 655.9307 -1594.1143 667.6016 -1585.2402 c679.3428 -1576.3125 693.2632 -1570.9766 705.5435 -1562.9316 c717.4287 -1555.1455 728.6997 -1546.4854 741.0337 -1539.3887 c754.3027 -1531.7529 768.7295 -1524.9795 783.1362 -1519.8105 c797.4692 -1514.668 813.4458 -1513.3604 828.2949 -1510.1172 c843.7139 -1506.75 858.958 -1503.0908 874.438 -1500.0068 c949.4302 -1485.0654 1027 -1488.9629 1103 -1488.9629 c1112 -1488.9629 1112 -1475.9629 1103 -1475.9629 c1038 -1475.9629 973.0981 -1473.5332 908.728 -1481.5723 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF