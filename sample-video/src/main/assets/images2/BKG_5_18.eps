%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 5.eps)%%CreationDate: 04.10.18 13:23%%Canvassize: 16383%%BoundingBox: 22 -2149 3841 -34%%HiResBoundingBox: 22.7622 -2149 3841 -34.855%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1655 639 0.25 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5116 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FF8B5AFD7DFFAF5A8584FD7CFF60FFA985FD7BFF5A85FFFF5A%FD55FFA8845AAFFD21FFA985FFFFFFAF85FD51FFAFAF6085A9856085AFFF%A9FD1CFFAF365AFFFFFF8485FD2BFF856085848584845A3660FD1AFFAF60%6084FFFFFF848560605A8560AFFD1BFF8460FFFFFF6036FD2BFFFD046013%3C366084FD1BFF60AFFD08FF84FFFFFF6085FD06FFA9AFFFFFAFFD0FFF85%84FFFFFF5AFFAFFD2BFFA98535FFFF8584FD2BFF6084FD04FF843684A936%605AFD0DFFAF60FD04FF85A9FD2DFF8460846184FD2DFF60AFFFFF8485A9%6084FFFF8584FD0CFF5AFD05FF8485FD2EFFAF6060FD2FFF5AFF8484FFFF%84FD04FF60A8FD0AFF60AFFFFFA9FFFFFF60FD60FFAF3685FD08FFAF60AF%FD08FF366084FFA860FFFF5A60A9FD5FFF8460FD0AFF8460A8FD04FF84FF%FFFFAF61AFFF84FFAF85AFFD5FFF8585FD0CFF8485FD04FF60FD04FF60FF%8485FFFF60FD5FFF8460FD0EFF5AFFFFFF8485FFFFFF84AFFFAF84FFFF85%A9FD5DFFAF60FD0FFFAF60FFFF85A8FFFFFF60A8FF84A9FFFF84A9FD5EFF%AFFD10FF84A8FF5AFFFFFF8584FFFF85A9FFFFAF84FD71FF84AFFFFFAF5A%FFFFFF84AFFFFFAF84FD70FFA960FFFFFF60AFAFFFFF85AFFFFFFF60FD70%FF8584FFFF5A365A60FFFF60FFAFAFFF8584FD6EFFAF5AFFFFFFAFA9AF84%FFFF85FFFF36856085FD6EFF60FD06FF60AFFFFF84FFFF84848584FD6DFF%A885FD05FFAF85FFFFAF85FFFF8485FD6FFFAF84FD05FF8584FFFFFF5AFF%FFFF60FD6FFF60AFFD05FF60FFFFFFAF85FFFFFF85AFFD6DFFAF85FD05FF%A885FFFFFFAF84FFFFFF84A9FD6DFF8584FD05FF85A9FFFFFFA88BFFFFFF%AF84FD61FF848BFD0AFF60FD06FF36846085848584FFAFFFFF84FD5FFFAF%5A845AAFFD08FFA884FD07FFAFFFA9AF60618485608B84FD5DFFA98584FF%FFAF60FD08FF8584FD0BFF8584FFAFAF84FD5DFF6060A8FD04FF60A8FD07%FF60FFA8AF84FD08FF60FD60FFAF368BFD06FFA985FD06FFA86084856060%FD07FFA884FD60FFA8846084608460FFFFAF5AAFFD06FF84FFFF60A8FD08%FF84FD65FF6061FFFF363C60FD08FF8584FD08FFA8AFFD64FF8484FFFFFF%AF3560A8FD07FF5AFD6EFF8485FD05FFAF84FD07FF84AFFD6DFF6084FD07%FF60A8FD05FFA960FD6DFF6085FD04FFA8AFAFFFAF85FD05FFAF84FD0BFF%AFFFA9A8FD5DFF846084845AFFFF605A8560843685FD04FF60AFFD09FFA8%FF846084FD61FF6085AFAFFF85FFFFAF85A8FFFFFFA885FD09FF60606084%13A9A8FD5FFF5A85FFAF5AFF8460FD04FFAFFFFF60A8FD0AFF5A8536145A%60AFFD5DFF60AFFFFFA885FFFF8485FD05FFAF84FD0BFF6060845A1484FD%5DFF3684FFFFFFAF60FFFFFF8460FD04FF5AAF846084FD08FFAF85A9FF84%FD5EFFAF848560AFAF85FFAF36853661FFFFA86060AF8485FD6EFF855AFF%84FFFF855AFFA8FFFFFFA8FFFF60A8FD6EFF60FFAF85FFFFFF8560FD06FF%8584FD6EFF5AAFFFAF60FD04FF8560FD04FFAF60FD6EFF6085FFFFA9AFFD%05FF8584FFFFFF5AFD70FFFD04845AAFA8AF84845AAFFFFF5AAFFD72FFAF%8461848584AFAFFFFFFF8485FD75FF60FD07FF8460FD75FFAF85FD07FF60%FD77FF60FD06FF84A8FFA8FD75FF85AFFD05FF5AAF6085FD75FF84A9FD04%FFAFAF848560FD11FF8560AFFD61FFAF84FD07FF84AFFD0CFFAF60FD0484%FF5AAFA8FD5FFFA8AFFD06FFA884FD0DFF84AFFF8536AFAF606085FD67FF%AF84FD0DFF8535A98484843CA8FF5AFD1FFF84AFFD46FF5AAFFD0CFF8584%AF8460FFFF60FF60AFFD1FFF8584FD45FFA985FD0CFF8584FFFFAF35AF60%363560FD20FFA860FD45FF84A8FD0CFFA985846060FF60AF60FFAF85A9FD%1FFF84AFFD44FF60AFA8AFA9AFA8AFA9AF848560FFFFA9AF5AFFFF36A8FF%5AAF6084FD19FFAF848584A9A8AF5AFFA9FFFFAF84FD3DFFA9AF84846085%848460856085A8FD04FFA885FF85366184608485AFFD19FF84AF84AF8485%84605A856085846184AFA9FD44FF8BA9FD06FF5A848485A885A8FD23FF60%AFFF3636FFFFAF35AFFD0BFFAF84FD37FF84AFFD09FF84FD26FFAF84AF84%FF6085FFAF84FD06FFAF84FFFFFF6085368560FD34FFAFA9FD09FF84A8FD%26FF6036AF84FF8460AF6060FD05FF84605AAF60FF5A1413365AFD33FF84%AFFD05FFAF8584FFA9858485AFFD23FF60606085AF605A8584AFFD06FF60%85363C5A85A8FFFF8560FD32FFAF84FD05FFAF36603560368436AFFD22FF%A8FF8460A8FF36AFA836A8FD07FF845A368560AFA8AFA860AFFD31FF60A9%FD06FFAF848B606084FD26FFAF5A8584AFA88584FD09FF84FFFF8560FFA9%AF60FD32FFAF608BAFFD08FF84AFFD26FFA8FFA8848485A8FD0AFF8584FF%FF855A8460FD35FF8485FD09FF84FD37FF84AFFD04FFA9FDB7FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Layer 6) Ln0 Au*u1 D0 O0.788052 0.235294 0.156313 0.000031 0 0.6 0.74902 Xa0 J 0 j 1 w 10 M []0 d0 XR148.9795 -876.2261 m155.1499 -879.1406 160.7515 -881.5376 167.5352 -882.7959 c174.7197 -884.1284 182.0645 -884.3945 189.3521 -884.4854 c191.6938 -884.5146 193.9385 -884.626 196.1519 -884.8027 C195.9341 -889.3721 195.626 -893.9014 194.5991 -898.4067 c193.8916 -901.5093 192.7441 -904.3525 192.2007 -907.5068 c191.6743 -910.563 191.3096 -913.6519 190.9395 -916.7295 c190.1826 -923.0166 189.749 -929.3398 188.8564 -935.6113 c187.8794 -942.4756 185.6328 -948.8682 183.2183 -955.3389 c181.2368 -960.6489 177.7451 -967.1841 177.6592 -972.9375 c177.5557 -979.8584 176.5137 -986.6807 175.7407 -993.5469 c175.4189 -996.4004 175.8154 -999.8936 174.9258 -1002.6211 c174.0752 -1005.228 173.3721 -1007.8789 172.7148 -1010.54 c171.1157 -1017.0151 170.2671 -1023.7305 170.165 -1030.394 c170.0366 -1038.7817 183.0371 -1038.769 183.165 -1030.394 c183.2764 -1023.104 184.5732 -1016.1099 186.54 -1009.1055 c188.6431 -1001.6182 188.6797 -993.7988 189.6431 -986.0527 c190.1079 -982.313 190.4717 -978.5762 190.6313 -974.811 c190.7837 -971.21 192.5815 -967.4375 193.7861 -964.085 c196.5332 -956.4385 199.7124 -948.9868 201.0991 -940.9404 c202.3721 -933.5532 202.937 -926.0513 203.729 -918.603 c204.5977 -910.4331 207.3774 -902.8828 208.3867 -894.7817 c208.7285 -892.0361 208.9224 -889.2817 209.0708 -886.5239 C214.9014 -887.5371 220.7095 -888.7148 226.6274 -889.1924 c233.377 -889.7378 240.1768 -889.415 246.9385 -889.7051 c255.4248 -890.0698 263.8809 -891.0093 272.354 -891.5815 c279.6982 -892.0776 286.8218 -891.5903 293.9131 -893.8252 c297.0884 -894.8257 300.7036 -896.9951 304.0693 -896.999 c307.4395 -897.0029 310.8472 -896.978 314.1846 -897.5068 c317.4507 -898.0249 320.0625 -899.4824 323.4297 -899.5151 c327.1475 -899.5513 330.8633 -899.8696 334.5645 -900.2007 c341.8853 -900.8564 349.1694 -901.9072 356.5303 -901.9951 c364.917 -902.0952 364.9077 -889.0952 356.5303 -888.9951 c349.7847 -888.9146 343.0884 -888.0557 336.3853 -887.3765 c332.6968 -887.0029 329.0044 -886.7295 325.3008 -886.5669 c322.77 -886.4561 320.6504 -885.5981 317.6401 -884.9712 c314.5562 -884.3291 311.3462 -884.1494 308.207 -884.0381 c304.811 -883.9175 302.1597 -882.9595 298.9507 -881.8257 c291.4355 -879.1704 284.127 -879.1401 276.2642 -878.8027 c261.3135 -878.1602 246.4858 -876.7778 231.5127 -876.4287 c224.1714 -876.2573 217.0205 -874.7246 209.8394 -873.4146 C209.8408 -873.3994 209.8418 -873.3843 209.8433 -873.3691 c210.6133 -865.2358 211.8882 -857.5127 211.8936 -849.2803 c211.9038 -833.7617 215.1514 -818.5586 215.5356 -803.02 c215.9321 -786.9702 216.2769 -771.0742 217.3643 -755.0449 c219.5659 -722.6099 217.5825 -690.1069 220.6968 -657.6738 c221.9175 -644.9614 224.3472 -632.4531 226.0586 -619.8086 c227.8477 -606.5889 229.0776 -593.3115 229.8325 -579.9932 c230.5317 -567.6636 229.2505 -554.603 231.646 -542.4893 c234.1152 -530.0044 231.1001 -516.8242 234.2842 -504.623 c237.3638 -492.8218 238.1235 -481.7212 238.1235 -469.5645 c238.1235 -456.3374 238.9741 -443.9463 241.7529 -430.9819 c244.3589 -418.8252 247.0239 -406.8047 248.7183 -394.4756 c250.5381 -381.2363 251.2817 -367.9429 255.3779 -355.1299 c257.9385 -347.1221 245.3853 -343.7212 242.8428 -351.6738 c238.0342 -366.7139 237.1777 -382.7949 235.1162 -398.3682 c233.0859 -413.7061 228.3657 -428.5469 226.248 -443.8774 c224.1577 -459.0103 226.8418 -474.5063 224.4336 -489.5293 c223.3359 -496.377 220.1274 -503.2197 220.1274 -510.1592 c220.1274 -518.1753 220.5674 -526.3384 219.9424 -534.3311 c219.4038 -541.2188 217.6533 -547.6602 217.6152 -554.6641 c217.5693 -563.1118 217.2793 -571.5576 216.8325 -579.9932 c215.9917 -595.8687 214.3716 -611.709 211.9077 -627.4146 c206.8682 -659.5386 205.2319 -691.4243 205.1475 -723.9238 c205.1133 -736.9399 204.7476 -749.8311 203.8203 -762.8169 c202.8623 -776.2368 202.793 -789.5796 202.5356 -803.02 c202.2852 -816.0869 199.502 -828.7954 198.9736 -841.7856 c198.7197 -848.0313 199.0024 -854.2773 198.6235 -860.5215 c198.3965 -864.2651 197.8164 -867.9648 197.29 -871.6768 C195.8506 -871.5732 194.4063 -871.5073 192.9531 -871.5054 c186.1753 -871.4961 179.3159 -871.4731 172.5913 -870.5205 c165.7734 -869.5552 160.1719 -867.188 154.0273 -864.2861 c140.9727 -858.1211 126.5977 -856.6392 112.3384 -856.5015 c97.9033 -856.3618 83.6304 -854.0215 69.1528 -854.0215 c62.686 -854.0215 56.1172 -853.6836 49.6655 -854.124 c45.7036 -854.394 41.7451 -855.0835 37.8071 -855.103 C39.1899 -852.7466 40.9629 -850.46 42.0977 -848.6177 c45.1704 -843.6284 47.0718 -838.1543 49.8066 -832.9766 c56.7983 -819.7388 63.5322 -806.5415 69.3101 -792.7109 c80.6455 -765.5752 85.6025 -736.4688 97.7861 -709.5996 c100.918 -702.6929 104.4868 -695.9878 107.7861 -689.1606 c111.0933 -682.3164 113.373 -675.4951 115.6216 -668.2695 c119.8794 -654.5874 123.2915 -640.8643 129.1924 -627.7783 c132.8623 -619.6392 139.1348 -608.1035 135.4683 -598.9883 c130.3623 -586.293 114.3916 -595.4346 106.7637 -599.667 c101.0264 -602.8501 95.5762 -606.3374 89.6025 -609.1221 c82.8018 -612.292 76.1016 -615.0386 69.5317 -618.7627 c66.415 -620.5293 63.3115 -622.3169 60.1777 -624.0527 c56.6855 -625.9863 56.1187 -626.6294 53.2949 -627.1499 c52.2056 -627.3506 49.4487 -628.5928 46.8467 -629.6523 C48.2949 -627.5811 49.8301 -625.5732 51.228 -623.4648 c54.7939 -618.0898 60.0347 -613.8027 63.7866 -608.4487 c65.6753 -605.7539 66.6221 -602.6045 68.4341 -599.9023 c70.52 -596.7925 72.6787 -593.7319 74.8579 -590.6865 c79.3462 -584.415 84.0557 -578.3057 88.8306 -572.2515 c97.4448 -561.3286 106.4971 -551.2617 113.6919 -539.272 c117.1064 -533.5815 120.3315 -527.7798 123.7817 -522.1099 c127.9429 -515.2729 130.708 -508.1743 133.6841 -500.7349 c136.5391 -493.5977 139.394 -486.46 142.249 -479.3223 c143.4912 -476.2168 144.2617 -472.9937 145.6665 -469.938 c147.1294 -466.7559 148.7993 -463.6826 150.187 -460.4634 c155.8848 -447.2422 157.6118 -432.668 162.9478 -419.3408 c164.3296 -415.8887 165.5034 -412.3491 166.6948 -408.8281 c167.1201 -407.5708 167.1992 -407.0605 167.1411 -406.9106 C167.2793 -406.7358 167.4492 -406.5132 167.6616 -406.2222 c168.127 -405.585 168.5273 -404.936 168.9189 -404.2505 c171.5107 -399.7158 173.2134 -394.2803 173.7114 -389.0894 c174.6919 -378.8647 168.0396 -373.7944 158.4844 -373.5498 c153.1768 -373.4146 147.7661 -374.4551 142.5522 -375.3213 c138.5894 -375.9795 133.71 -375.8896 129.9707 -377.1113 c122.6763 -379.4956 115.2432 -381.4209 107.9072 -383.6694 c104.9077 -384.5889 99.8203 -387.3545 95.6528 -387.5371 C96.8506 -386.1587 98.3613 -385.0342 100.208 -383.9395 c102.4985 -382.5811 104.9438 -381.4692 107.3364 -380.3076 c110.6992 -378.6753 112.8989 -376.3975 115.5293 -373.7676 c126.2305 -363.0664 137.1294 -352.5352 147.2661 -341.29 c166.1401 -320.3535 182.5469 -297.1289 196.3159 -272.5522 c199.8418 -266.2593 203.1729 -259.8584 206.4258 -253.4209 c209.7969 -246.75 214.5708 -240.8872 217.8237 -234.0957 c221.6621 -226.0835 227.1133 -217.7363 229.0352 -209.0073 c230.063 -204.3389 229.3096 -200.1045 226.2275 -196.4199 c222.6865 -192.1865 214.6001 -195.6943 210.5718 -197.2866 c207.8672 -198.3555 205.2183 -199.5708 202.5918 -200.8174 c201.4868 -201.3418 200.3926 -201.8887 199.2969 -202.4326 c201.9116 -201.1348 197.5903 -202.3682 197.1772 -202.4258 c194.0166 -202.8701 190.4717 -203.9502 187.0479 -204.21 C189.1147 -202.0415 191.3604 -200.04 193.5908 -198.0439 c199.897 -192.3999 205.123 -185.7437 209.9932 -178.8472 c215.6191 -170.8804 221.3501 -162.9937 226.6172 -154.7783 c229.1265 -150.8652 231.603 -146.9326 234.1626 -143.0527 c236.9688 -138.7993 240.707 -134.8228 243.022 -130.3135 c246.9434 -122.6753 252.6929 -116.6973 258.7031 -110.6836 c260.2524 -109.1333 260.7056 -106.7651 261.645 -104.8452 c262.5864 -102.9214 263.8218 -101.1382 265.0278 -99.3755 c267.79 -95.3379 270.9497 -91.6021 273.3945 -87.3516 c280.5308 -74.9448 286.1177 -59.4263 299.2534 -52.0996 C302.6724 -64.4326 310.5171 -75.2866 315.7617 -87.0234 c317.5386 -91 318.7173 -95.4121 319.5444 -99.6733 c320.373 -103.9419 319.1724 -108.6592 320.2852 -112.8115 c322.5137 -121.1279 326.7349 -128.4937 329.8115 -136.4697 c333.064 -144.9023 336.6855 -153.1226 339.5874 -161.7046 c342.5474 -170.4575 345.1479 -179.3296 347.8237 -188.1719 c351.9033 -201.6519 356.2344 -215.0879 361.8198 -228.0039 C357.6563 -225.7241 353.6826 -222.9014 350.0029 -220.7319 c342.812 -216.4917 330.7324 -211.6499 323.3193 -217.7773 c316.3823 -223.5103 318.9521 -235.0151 322.0659 -242.1538 c322.3198 -242.7017 322.6216 -243.2217 322.9712 -243.7139 C324.29 -245.1392 324.3813 -245.4097 323.2441 -244.5244 C324.001 -247.4976 324.8604 -250.4438 325.7407 -253.3823 c327.4521 -259.0947 329.4419 -264.7212 331.5269 -270.3062 c333.3613 -275.2192 335.3423 -280.0767 337.353 -284.9194 c339.312 -289.6387 342.1401 -294.5356 343.1426 -299.5459 c345.356 -310.6123 347.5557 -321.6885 350.2627 -332.647 c352.8154 -342.9834 358.665 -353.0142 363.2285 -362.5669 c365.0845 -366.4521 366.4868 -372.3501 369.4204 -375.4849 c370.667 -376.8169 372.0566 -378.6064 372.6934 -380.4907 C370.8989 -380.4775 369.0986 -380.3257 367.3169 -380.1782 c364.1157 -379.9136 360.9414 -379.4497 357.73 -379.3281 c352.2954 -379.1226 347.0234 -377.0869 341.541 -376.8794 c336.8735 -376.7026 334.1123 -371.8506 331.1489 -368.7905 c327.978 -365.5161 321.1382 -366.7583 320.2852 -371.6587 c318.1992 -383.6401 320.7646 -395.3286 323.4849 -406.998 c324.7866 -412.5825 325.2827 -418.3159 326.8423 -423.8281 c327.5776 -426.4277 328.6006 -428.9746 329.6948 -431.4414 c330.5967 -433.4736 330.0586 -436.8042 330.1211 -439.6323 c330.3984 -452.1763 333.5654 -464.5439 336.0786 -476.7852 c337.4683 -483.5527 339.0859 -490.2661 341.0063 -496.9033 c342.749 -502.9263 343.5479 -509.0752 345.3584 -515.1025 c347.2217 -521.3047 347.8462 -527.4614 349.3252 -533.7461 c350.9082 -540.4712 353.3003 -546.9175 354.7632 -553.6909 c357.606 -566.8535 359.5791 -580.1899 362.1567 -593.4048 c364.8188 -607.0513 369.626 -619.7222 374.1543 -632.8267 c377.9492 -643.8096 381.5264 -655.124 382.3335 -666.7646 C381.5146 -666.5571 380.6245 -666.1113 379.9526 -665.8081 c376.8945 -664.4282 374.0796 -662.5269 371.1997 -660.8218 c362.9854 -655.9585 355.4224 -651.6768 346.1616 -648.9727 c341.8198 -647.7051 337.5371 -646.8223 333.4019 -644.9277 c328.5728 -642.7158 323.9478 -640.0884 319.002 -638.126 c316.2002 -637.0142 313.6074 -633.625 310.8516 -631.4063 c307.019 -628.3208 302.918 -626.1108 298.3032 -624.4258 c294.3584 -622.9858 289.96 -626.7051 290.0752 -630.6938 c290.4023 -642.041 295.1152 -652.1895 300.0742 -662.1885 c305.3965 -672.9204 309.7749 -683.9482 313.7021 -695.2593 c321.2949 -717.126 325.605 -740.1196 330.6338 -762.6885 c333.0752 -773.644 336.4775 -783.7192 340.6548 -794.124 c342.6538 -799.104 342.6738 -803.8965 343.4233 -809.1641 c344.3237 -815.4946 345.7598 -821.6987 347.2959 -827.9004 c349.6128 -837.2534 353.416 -846.1206 356.0918 -855.3667 c359.0923 -865.7344 360.1147 -876.9556 365.9063 -886.2856 c370.3164 -893.3906 381.5659 -886.8687 377.1309 -879.7241 c371.7778 -871.0996 370.9399 -859.9019 368.1504 -850.2627 c365.4507 -840.9341 361.708 -832.0176 359.3677 -822.5708 c357.9785 -816.9629 356.6582 -811.3047 355.9648 -805.563 c355.6646 -803.0747 355.5737 -800.5718 355.5356 -798.0684 c355.4971 -795.5576 354.0928 -792.9609 353.1904 -790.668 c349.0811 -780.231 345.6113 -770.2012 343.1694 -759.2324 c338.2793 -737.2666 334.0981 -714.8516 326.8325 -693.5327 c323.2534 -683.0308 319.3013 -672.6694 314.6782 -662.5791 c311.9531 -656.6313 308.5977 -650.7402 306.1924 -644.5771 C307.2993 -645.6211 308.3828 -646.6997 309.4658 -647.7808 c311.71 -650.0205 315.9692 -650.8423 318.811 -652.2021 c322.562 -653.9966 326.231 -655.9341 330.0522 -657.5806 c336.1504 -660.208 342.7524 -661.332 349.0171 -663.5259 c355.3262 -665.7354 360.6387 -669.6182 366.2949 -673.0386 c374.043 -677.7236 386.3359 -684.5552 393.6021 -675.2603 c397.4839 -670.2944 394.9707 -661.3906 393.9985 -655.6475 c392.6909 -647.9224 390.3457 -640.3774 387.9004 -632.9502 c385.5059 -625.6763 382.8359 -618.4941 380.2891 -611.2734 c377.6147 -603.6919 375.8809 -596.0415 374.3428 -588.1572 c371.4238 -573.1934 369.2412 -558.0942 365.7183 -543.251 c363.9146 -535.6494 360.7461 -528.7217 360.5317 -520.7764 c360.4351 -517.2017 358.3828 -513.2739 357.3579 -509.8613 c356.3101 -506.3735 356.3999 -502.4219 355.3037 -499.0635 c350.5576 -484.5278 348.4009 -469.5654 344.8711 -454.7495 c343.2866 -448.0991 343.0947 -441.2881 343.0498 -434.4834 c343.0249 -430.7144 342.3877 -428.4116 340.978 -424.9785 c339.7588 -422.0078 338.8936 -418.9063 338.2461 -415.7666 c336.9482 -409.4761 335.8745 -403.0986 334.4795 -396.7866 c333.8286 -393.8413 333.2148 -390.8179 332.8105 -387.771 C333.3359 -388.0474 333.8706 -388.3135 334.4385 -388.54 c337.1509 -389.6235 339.9429 -389.8188 342.8394 -389.9287 c345.7773 -390.04 348.7759 -390.9517 351.6563 -391.4976 c355.7559 -392.2744 359.9331 -392.415 364.0757 -392.8604 c368.7783 -393.3657 373.7471 -393.9795 378.436 -393.0347 c391.8389 -390.3335 384.79 -373.5952 379.1826 -366.9014 c380.9858 -369.0537 378.5615 -365.0176 378.4341 -364.7246 c377.8037 -363.2715 377.1602 -361.8257 376.5054 -360.3843 c375.1592 -357.4229 373.7339 -354.4971 372.3247 -351.5654 c369.0684 -344.7886 365.9224 -337.9941 363.3853 -330.9097 c358.3838 -316.9414 358.4502 -301.5674 352.606 -287.8931 c346.8052 -274.3203 341.3687 -260.605 337.2412 -246.4199 c336.2729 -243.0933 335.9365 -239.1011 333.647 -236.3901 c332.875 -235.4756 332.4868 -232.8608 332.1958 -231.4517 c331.9629 -230.3237 332.0234 -229.1304 332.0376 -227.9883 c332.0386 -227.915 332.042 -227.8608 332.0439 -227.7944 C333.1338 -227.7798 334.7178 -228.623 335.7256 -228.9565 c336.3052 -229.1479 341.0933 -230.5703 339.522 -229.7617 c350.6533 -235.4912 360.9541 -244.4604 374.0166 -244.9883 c379.1484 -245.1958 381.8398 -239.3696 379.6289 -235.2075 c362.7388 -203.4053 357.4233 -167.1172 342.8638 -134.3345 c339.7266 -127.27 336.2559 -120.1113 333.7979 -112.7827 c332.4053 -108.6309 333.0659 -103.8638 332.5566 -99.5269 c332.0259 -95.0044 330.8188 -90.7026 329.3721 -86.3965 c324.2534 -71.1567 310.9707 -57.7271 310.5693 -41.1362 c310.3779 -33.2251 298.7559 -32.7798 297.6567 -39.8408 C296.3145 -39.5562 294.8237 -39.7114 293.2944 -40.5195 c278.3608 -48.4121 271.0522 -64.498 263.3604 -78.6519 c258.8354 -86.978 251.6963 -93.7871 248.4116 -102.79 c248.2344 -103.2754 245.7451 -105.2861 245.0864 -105.9624 c243.4204 -107.6709 241.8242 -109.4399 240.2769 -111.2559 c237.3594 -114.6802 234.8198 -118.3911 232.5884 -122.2915 c227.4878 -131.2061 220.9443 -139.5166 215.3921 -148.2173 c209.8354 -156.9248 203.7305 -165.2583 197.7754 -173.6909 c192.9707 -180.4956 187.2896 -186.1313 181.2173 -191.7407 c176.3027 -196.2808 170.8467 -201.5293 170.165 -208.5107 c169.9492 -210.7197 171.5527 -213.0615 173.3843 -214.1235 c182.3169 -219.3008 190.833 -215.9717 200.2988 -215.0596 c205.748 -214.5347 210.4692 -211.0444 215.5659 -208.9941 C215.4121 -209.4136 215.251 -209.8267 215.0815 -210.2261 c213.77 -213.3228 212.0947 -216.269 210.4512 -219.1982 c208.6411 -222.4238 207.4243 -225.811 205.8296 -229.1406 c203.4014 -234.21 200.2007 -238.9199 197.103 -243.5938 c191.1992 -252.5024 186.9756 -262.8169 181.6147 -272.104 c176.0513 -281.7412 170.001 -291.0879 163.5576 -300.1587 c150.6802 -318.2876 136.0967 -334.8159 120.3887 -350.5229 c116.1733 -354.7388 111.9575 -358.9541 107.7422 -363.1699 c103.9595 -366.9521 100.5776 -369.1094 95.8691 -371.5073 c88.3335 -375.3457 82.7959 -380.8779 80.4648 -389.146 c79.8716 -391.249 80.4268 -393.9922 82.1362 -395.4702 c92.1543 -404.1323 103.5703 -398.5264 114.4565 -395.2681 c117.6963 -394.2983 120.9546 -393.3911 124.2051 -392.4575 c126.4902 -391.8013 130.0342 -389.918 132.293 -389.8657 c136.4951 -389.7686 140.771 -388.752 144.9028 -388.0439 c149.084 -387.3276 153.2539 -386.6855 157.5005 -386.5547 c158.7109 -386.5176 159.7402 -386.5474 160.8091 -386.7466 C160.8267 -387.0317 160.8359 -387.4307 160.8169 -387.9868 c160.689 -391.7397 158.834 -395.9805 156.8369 -399.1133 c154.0342 -403.5093 151.9248 -412.668 149.1934 -418.769 c146.2598 -425.3232 145.1304 -432.8174 143.23 -439.7476 c141.3926 -446.4492 139.498 -453.1377 136.4092 -459.377 c129.8359 -472.6543 125.23 -487.0752 119.7207 -500.8481 c114.4585 -514.0039 106.5762 -526.332 99.0098 -538.3379 c91.6123 -550.0757 81.7275 -560.228 73.2686 -571.2236 c68.8652 -576.9478 64.5674 -582.7461 60.4209 -588.6597 c56.1543 -594.7441 53.3779 -601.4277 48.4458 -607.064 c46.4556 -609.3384 44.3003 -611.4702 42.166 -613.6069 c40.3906 -615.3843 39.1997 -618.1343 37.7251 -620.186 c34.2549 -625.0137 30.8057 -629.5884 30.2695 -635.6904 c29.7354 -641.772 38.1021 -644.1777 42.6831 -643.8159 c47.6333 -643.4258 51.9785 -640.0342 56.7549 -639.6919 c60.2881 -639.439 63.6938 -636.9355 66.7393 -635.2778 c69.8848 -633.5654 72.9819 -631.7617 76.0933 -629.9878 c82.6387 -626.2554 89.314 -623.4199 96.1641 -620.3472 c102.1802 -617.6479 107.5225 -613.9258 113.3252 -610.8921 c115.4326 -609.79 117.4541 -608.5244 119.5532 -607.4043 c120.5918 -606.8496 121.5996 -606.4077 122.7061 -606.0107 c123.043 -605.8901 123.3237 -605.8076 123.5576 -605.7485 C123.3594 -609.064 121.374 -613.2656 120.4561 -615.7031 c118.4092 -621.1411 115.73 -626.3696 113.5649 -631.7734 c108.3433 -644.8042 104.5464 -658.8813 100.8228 -672.4883 c98.8916 -679.5454 94.77 -686.2949 91.5103 -692.8188 c87.939 -699.9653 84.6934 -707.209 81.627 -714.5845 c76.3174 -727.356 72.2817 -740.6191 68.6792 -753.9585 c64.9111 -767.9097 60.3535 -781.1577 54.5376 -794.4126 c48.8994 -807.2627 41.8091 -819.2896 35.8013 -831.9331 c33.5615 -836.6465 31.5 -841.002 28.7749 -845.4785 c25.9487 -850.1211 23.1777 -855.0049 22.7754 -860.5215 c22.5654 -863.3989 24.9175 -866.0337 27.5474 -866.7891 c33.5718 -868.5205 39.6831 -868.2017 45.8394 -867.5244 c52.0054 -866.8467 58.1729 -867.0215 64.3701 -867.0215 c79.2412 -867.0215 93.7715 -868.5132 108.5913 -869.3677 c122.603 -870.1758 135.9614 -870.0781 148.9795 -876.2261 cf0 D332.0444 -227.7827 m332.1211 -225.1172 332.9204 -227.667 332.0444 -227.7827 C332.0444 -227.7827 Lf*U*u1 D285.9551 -1255.0381 m290.3413 -1250.7666 295.3501 -1244.1816 293.7866 -1237.5723 c292.252 -1231.085 285.9253 -1227.3945 280.1421 -1225.2793 c272.5464 -1222.502 264.5024 -1221.0381 256.458 -1220.4121 c248.6592 -1219.8047 240.8564 -1220.7539 233.5767 -1223.6035 c231.0518 -1224.5918 228.5396 -1225.8027 226 -1226.9658 C226 -1209.2617 L226 -1200.9365 230.354 -1194.3457 236.543 -1189.1143 c242.3696 -1184.1895 247.4209 -1178.4111 253.4937 -1173.7324 c256.3604 -1171.5244 259.0542 -1169.5107 261.6899 -1167.0215 c263.9092 -1164.9258 266.106 -1164.374 269.1182 -1164.2988 c277.4858 -1164.0898 277.4951 -1151.0898 269.1064 -1151.2988 c265.4121 -1151.3906 261.6753 -1151.8379 258.3477 -1153.5625 c254.8516 -1155.376 252.6191 -1158.4619 249.4517 -1160.6182 c241.2256 -1166.2178 234.9688 -1173.8955 227.1685 -1179.9219 c223.6094 -1182.6719 220.4878 -1186.2783 218.0552 -1190.2969 C217.6318 -1188.4902 217.0381 -1186.6973 216.2266 -1184.9238 c213.3223 -1178.5752 206.6934 -1174.4336 201.0151 -1170.6943 c198.1484 -1168.8057 195.1836 -1167.2715 192.0205 -1165.9531 c190.2793 -1165.2285 185.3213 -1165.3838 184.7754 -1164.5107 c180.3447 -1157.4199 169.0938 -1163.9404 173.5498 -1171.0713 c176.9785 -1176.5586 181.3511 -1177.0518 187.2153 -1178.1133 c192.4907 -1179.0684 198.3335 -1184.3672 202.2642 -1187.7402 c207.1055 -1191.8955 206.2437 -1199.8203 205.4512 -1205.5107 c204.459 -1212.6367 202.9224 -1219.6455 202.6777 -1226.8525 C197.2656 -1223.1426 192.4082 -1217.8711 187.8208 -1214.2832 c177.3164 -1206.0664 165.9619 -1200.125 152.5317 -1198.8857 c145.7129 -1198.2568 138.9731 -1197.9209 132.1567 -1197.0557 c126.9438 -1196.3945 121.7593 -1196.0195 116.5269 -1196.582 c107.9951 -1197.5 99.1885 -1200.0869 94.1729 -1207.5508 c88.2129 -1216.4209 94.1357 -1225.8066 101.0586 -1231.5439 c109.2734 -1238.3525 118.4116 -1244.4375 128.7944 -1247.2461 c128.8867 -1247.2715 128.9814 -1247.29 129.0737 -1247.3145 C118.9351 -1252.6006 111.0205 -1261.2402 113.7734 -1273.7637 c116.2134 -1284.8652 127.9219 -1293.375 137.4829 -1298.1025 c148.2729 -1303.4365 161.0898 -1302.2939 171.8262 -1297.3584 c176.7959 -1295.0752 181.1826 -1291.9805 185.2192 -1288.3008 c187.1724 -1286.5205 190.1821 -1285.3711 192.4023 -1283.8965 c195.2734 -1281.9893 197.9785 -1279.8262 200.687 -1277.6992 c205.7373 -1273.7324 211.1636 -1269.8604 215.7173 -1265.3447 c216.876 -1264.1953 218.5186 -1262.3076 220.3228 -1260.5889 C220.4951 -1264.1582 220.8154 -1267.7178 221.4131 -1271.2793 c222.687 -1278.8691 227.0449 -1285.1875 231.9819 -1290.9141 c236.312 -1295.9365 241.5278 -1298.4834 247.1904 -1301.5449 c252.5776 -1304.457 258.5811 -1310.0801 264.8813 -1305.8047 c275.375 -1298.6855 270.6089 -1283.0986 263.9766 -1274.8975 c261.5205 -1271.8604 258.4375 -1269.0205 255.2734 -1266.3301 C258.917 -1266.6699 262.6118 -1266.6904 266.1821 -1266.7178 c274.4326 -1266.7813 280.3496 -1260.4961 285.9551 -1255.0381 cf0 D115.8345 -1226.4697 m112.4063 -1224.1309 101.5283 -1218.168 105.9619 -1213.4512 c109.4961 -1209.6914 116.8848 -1209.3076 121.7056 -1209.2656 c127.9819 -1209.2109 134.1929 -1210.3965 140.3965 -1211.1846 c147.0923 -1212.0342 153.6519 -1211.5479 160.2124 -1213.3936 c174.7813 -1217.4902 184.9019 -1231.1094 197.5342 -1238.8184 C197.0068 -1239.0176 196.499 -1239.2256 196.0146 -1239.4434 C190.8496 -1239.4834 185.3789 -1238.3086 181.1211 -1237.2617 c175.7954 -1235.9512 170.5327 -1236.2354 165.0479 -1236.2354 c158.2432 -1236.2354 151.4326 -1236.3154 144.6294 -1236.1699 c133.5493 -1235.9336 124.8193 -1232.5977 115.8345 -1226.4697 cf257.9561 -1292.9883 m257.958 -1293.0098 257.959 -1293.0234 257.9604 -1293.0439 C256.54 -1292.1582 255.1621 -1291.1709 253.752 -1290.3193 c249.0537 -1287.4834 245.0493 -1285.8994 241.1743 -1281.7217 c236.6226 -1276.8145 234.6523 -1271.3203 233.7925 -1265.4707 C236.2114 -1267.4531 238.7451 -1269.3779 241.187 -1271.5234 c247.9824 -1277.4951 257.0698 -1283.2109 257.9561 -1292.9883 cf246.5645 -1250.8311 m241.1782 -1248.9365 236.2686 -1245.8672 230.853 -1243.9619 c229.9199 -1243.6338 228.9473 -1243.6123 228.0068 -1243.8037 C227.5605 -1243.7188 227.0996 -1243.6875 226.627 -1243.7295 c216.6958 -1244.6084 211.6016 -1252.748 204.3018 -1258.291 c199.9517 -1261.5947 195.7622 -1265.1006 191.4946 -1268.5088 c189.2134 -1270.3301 186.8359 -1272.0137 184.4058 -1273.6279 c182.0947 -1275.1631 179.0552 -1276.1777 177.0645 -1278.1094 c170.0264 -1284.9355 161.4976 -1288.5176 151.6831 -1288.6963 c142.4365 -1288.8652 130.9004 -1280.0586 126.8726 -1272.1367 c120.7969 -1260.1875 145.7432 -1254.2314 153.0493 -1254.2314 c163.7695 -1254.2314 174.4912 -1254.2832 185.2114 -1254.2197 c190.085 -1254.1914 195.0381 -1253.8184 199.625 -1252.0752 c199.791 -1252.0156 199.9253 -1251.9658 200.0649 -1251.9141 C201.2734 -1251.8105 202.4814 -1251.6719 203.686 -1251.4619 c206.7734 -1250.9258 209.7236 -1249.9746 212.4209 -1248.3477 c213.9912 -1247.4004 214.9229 -1245.8594 215.2778 -1244.1885 C216.1768 -1244.084 216.958 -1243.8105 217.6201 -1243.4092 C227.0767 -1241.2373 235.2397 -1235.4883 244.9175 -1233.7275 c250.8735 -1232.6436 257.3887 -1233.2412 263.3047 -1234.2471 c268.6978 -1235.1641 276.1587 -1236.3291 280.4312 -1239.9355 c280.7217 -1240.1807 280.9312 -1240.3398 281.0884 -1240.4473 C280.9639 -1240.4512 280.8325 -1240.5146 280.7383 -1240.7129 c279.4961 -1243.3301 277.4429 -1245.1826 275.3999 -1247.1719 c273.2417 -1249.2734 271.0073 -1251.2842 268.5396 -1253.0146 c266.437 -1254.4893 268.5493 -1253.7246 266.1821 -1253.7178 c264.6431 -1253.7129 263.1045 -1253.6836 261.5659 -1253.6465 c256.1411 -1253.5166 251.6362 -1252.6152 246.5645 -1250.8311 cf*U*u1 D87.1177 -1850.3301 m97.7632 -1857.3193 111.356 -1857.2031 123.5059 -1855.8633 c135.1533 -1854.5801 146.8608 -1852.9893 158.2334 -1850.0977 C147.2964 -1864.4785 140.6831 -1882.6748 138.1665 -1900.2686 c136.9155 -1909.0146 136.8618 -1917.7998 140.9829 -1925.8389 c146.3804 -1936.3672 157.6851 -1937.8701 168.3101 -1937.0273 c179.4517 -1936.1426 190.4492 -1936.1748 200.8667 -1931.585 c212.2246 -1926.5811 220.7549 -1917.8652 228.6265 -1908.5 c234.1567 -1901.9199 239.0186 -1894.9043 243.292 -1887.5615 C242.5923 -1895.291 243 -1903.1699 243 -1910.9111 C243 -1963.0957 L243 -1969.168 244.4932 -1975.4863 245.7319 -1981.4102 c248.375 -1994.0488 251.8857 -2006.4746 255.4307 -2018.8818 c258.7695 -2030.5713 260.3281 -2042.9521 263.1885 -2054.793 c263.501 -2056.0869 263.8384 -2057.373 264.1616 -2058.6641 C263.8872 -2058.5391 263.6099 -2058.4287 263.3286 -2058.3516 c260.6284 -2057.6094 258.3853 -2058.6016 256.8271 -2060.4316 C256.2402 -2060.0645 255.6484 -2059.6895 255.0444 -2059.3047 c249.3628 -2055.6885 244.0332 -2051.5195 238.6636 -2047.4648 c232.9551 -2043.1543 225.0103 -2040.7715 218.4497 -2038.0088 c211.6592 -2035.1504 204.5474 -2032.7969 197.9053 -2029.626 c191.7588 -2026.6914 186.3296 -2022.9561 179.9106 -2020.5039 c171.2588 -2017.1992 161.1572 -2016.79 152.1387 -2018.5391 c148.105 -2019.3203 143.9961 -2021.1494 140.8955 -2023.8711 c137.48 -2026.8691 136.2061 -2030.5928 134.7178 -2034.7285 c128.6543 -2051.5752 146.5557 -2061.9902 159.5874 -2066.7344 c176.3726 -2072.8447 195.1064 -2075.1279 212.8193 -2075.8359 c223.5771 -2076.2666 234.3564 -2076.1836 245.1172 -2076.4941 c249.0576 -2076.6074 253.1802 -2076.4365 256.8931 -2075.4316 C260.4165 -2077.2158 264.2686 -2078.6582 268.0303 -2078.585 c268.5571 -2078.5742 269.083 -2078.543 269.6089 -2078.5156 C270.646 -2081.9658 271.7134 -2085.4072 272.8447 -2088.8301 c276.3906 -2099.5557 282.0215 -2109.9111 287.0483 -2120.001 c289.4722 -2124.8662 290.9229 -2129.8828 293.9102 -2134.5244 c297.1851 -2139.6133 301.2002 -2144.2236 304.9194 -2149 C318.1045 -2149 L318.7275 -2147.4561 318.5811 -2145.625 317.1772 -2143.7754 c313.8491 -2139.3916 310.3359 -2135.1484 307.0581 -2130.7266 c305.4111 -2128.5059 303.9482 -2126.1738 302.6084 -2123.7578 c301.2866 -2121.373 300.8921 -2118.7031 299.6885 -2116.2969 c294.8901 -2106.6973 290.1533 -2097.0703 286.0693 -2087.1416 c284.7056 -2083.8262 283.5259 -2080.4063 282.4448 -2076.9414 C284.0078 -2076.7148 285.5698 -2076.5049 287.1318 -2076.3457 c296.1006 -2075.4297 304.9131 -2074.3027 313.729 -2072.2695 c330.7563 -2068.3418 350.6909 -2060.0967 355.3027 -2041.3652 c356.2212 -2037.6367 355.395 -2032.9463 354.9253 -2029.2207 c354.2544 -2023.9014 353.2349 -2017.1201 347.3433 -2015.2246 c344.4258 -2014.2861 341.7339 -2014.6406 338.7607 -2015.0605 c335.2788 -2015.5518 331.9468 -2015.6377 328.4253 -2015.6895 c320.959 -2015.7988 313.8887 -2017.1074 306.7603 -2019.2529 c295.1543 -2022.7441 286.6196 -2030.6162 278.1001 -2038.8115 c276.5679 -2040.2852 275.1245 -2041.7803 273.7861 -2043.3076 C271.9487 -2035.2822 270.2549 -2027.2227 268.6182 -2019.1553 c266.1875 -2007.1738 262.1401 -1995.4893 259.3276 -1983.5752 c257.8643 -1977.3779 256.8423 -1971.1279 255.8501 -1964.8389 c254.9868 -1959.3652 256 -1953.1113 256 -1947.5684 C256 -1914.207 L256 -1904.6357 255.1406 -1894.6084 256.748 -1885.0889 C263.7446 -1899.498 274.8506 -1911.5615 290.4038 -1917.7031 c293.835 -1919.0576 297.3169 -1920.0615 300.9385 -1920.7646 c303.189 -1921.2012 305.646 -1922.2256 308.0396 -1922.7559 c314.4795 -1924.1826 321.0688 -1924.458 327.5771 -1923.458 c344.1753 -1920.9082 340.7197 -1901.7676 340.5464 -1889.75 c340.4258 -1881.374 327.4253 -1881.3623 327.5464 -1889.75 c327.627 -1895.3281 328.3999 -1900.8643 328.0479 -1906.4492 c327.7651 -1910.9277 325.4414 -1910.9434 321.3911 -1911.1045 c316.811 -1911.2861 312.1738 -1910.6045 307.8022 -1909.2578 c303.5605 -1907.9502 296.7925 -1906.6133 291.7788 -1904.1631 c270.0039 -1893.5244 260.7847 -1867.6094 260.6064 -1844.7842 c260.5493 -1837.4355 249.8105 -1835.9443 247.8389 -1843.0566 c242.6953 -1861.6035 234.7803 -1878.8535 223.3394 -1894.376 c217.6382 -1902.1113 210.8379 -1910.1436 202.9316 -1915.6758 c194.7139 -1921.4277 185.9922 -1922.8291 176.2446 -1923.3223 c169.0635 -1923.6855 157.6665 -1927.373 152.7744 -1920.2314 c149.1802 -1914.9844 150.1362 -1907.248 151.0576 -1901.3486 c153.8271 -1883.6133 161.1133 -1864.8711 173.7661 -1851.8789 c176.0264 -1849.5576 176.0361 -1846.7627 174.8662 -1844.5498 C184.3633 -1840.4375 192.9897 -1834.9951 201.5688 -1828.7881 c207.2402 -1824.6846 212.9785 -1820.3359 217.5103 -1814.9766 C221.5317 -1822.916 227.4424 -1830.3564 235.3188 -1834.4082 c243.918 -1838.8301 253.8428 -1838.8291 263.0732 -1836.6992 c273.4927 -1834.2939 282.6602 -1829.0605 290.2261 -1822.0332 C291.395 -1833.8496 298.5479 -1842.6289 305.3008 -1852.1113 c313.4653 -1863.5752 324.6138 -1872.0098 335.7617 -1880.374 c356.9341 -1896.2607 389.5098 -1907.0244 413.6362 -1891.0811 c434.3926 -1877.3643 422.1855 -1848.8809 406.3921 -1836.6377 c397.8047 -1829.9805 387.8423 -1825.6641 378.1626 -1820.877 c367.1426 -1815.4268 355.623 -1810.9893 343.8545 -1807.4258 C358.9893 -1802.4766 373.0747 -1793.2031 383.5103 -1781.8975 c391.5645 -1773.1719 396.8384 -1762.3545 400.1411 -1751.0361 c402.7964 -1741.9375 405.7163 -1730.7305 403.7041 -1721.2725 c401.7065 -1711.8828 391.1353 -1704.502 382.5068 -1702.1113 c370.5889 -1698.8105 360.1997 -1706.2031 349.7827 -1710.5234 c348.4609 -1711.0713 347.1787 -1711.666 345.9243 -1712.293 C349.311 -1701.1602 347.7969 -1690.8848 342.6255 -1680.4912 c337.7866 -1670.7656 329.7954 -1662.415 320.5029 -1656.8672 c311.6729 -1651.5957 300.1646 -1649.1289 290.2642 -1652.5234 c279.6582 -1656.1592 271.2295 -1664.791 263.3418 -1672.3877 c255.5854 -1679.8584 245.9253 -1686.3955 240.5073 -1695.8984 c237.647 -1700.916 236.9961 -1707.7051 236.1597 -1713.3398 c235.9419 -1714.8076 235.7788 -1716.2793 235.6426 -1717.7529 C229.1353 -1712.0254 222.2334 -1706.7715 214.8789 -1702.1338 c209.9072 -1698.999 204.6899 -1696.2695 199.377 -1693.7656 c195.7183 -1692.041 192.4019 -1689.9619 188.8032 -1688.1279 c175.3892 -1681.29 154.1577 -1674.501 140.3452 -1683.7363 c131.3926 -1689.7227 129.48 -1702.3018 130.877 -1712.2285 c132.5542 -1724.1445 139.623 -1734.0127 146.9321 -1743.1963 c150.855 -1748.125 155.3398 -1752.5479 160.228 -1756.5137 C148.7856 -1754.8818 136.4004 -1755.1133 125.6221 -1757.5146 c118.9463 -1759.002 112.5015 -1761.9668 106.6211 -1765.3984 c99.6494 -1769.4678 94.3765 -1775.4863 88.7217 -1781.1406 c78.8896 -1790.9736 71.1753 -1803.209 69.5918 -1817.2119 c68.0386 -1830.9463 76.0298 -1843.0498 87.1177 -1850.3301 cf0 D234.687 -2063.1152 m220.0767 -2063.1143 205.3477 -2063.1719 190.8833 -2060.8496 c183.521 -2059.667 176.1982 -2058.1719 169.0259 -2056.123 c161.897 -2054.0869 154.0464 -2051.4336 148.7842 -2045.9648 c145.5269 -2042.5801 146.1279 -2035.374 151.1821 -2032.498 c158.5435 -2028.3076 170.0342 -2030.5879 177.4346 -2033.4141 c183.3799 -2035.6855 188.437 -2039.6973 194.2974 -2042.1807 c201.7515 -2045.3389 209.3594 -2048.1455 216.8135 -2051.3164 c223.0757 -2053.9824 229.2549 -2056.5361 234.6948 -2060.6484 c235.8252 -2061.5029 236.9585 -2062.3535 238.0947 -2063.1992 C236.9595 -2063.1504 235.8237 -2063.1152 234.687 -2063.1152 cf283.4063 -2051.9131 m287.6099 -2047.2881 292.3286 -2042.8135 297.1401 -2038.8359 c301.8315 -2034.958 307.4604 -2032.4707 313.2915 -2030.916 c321.4092 -2028.752 329.1436 -2029.3906 337.3501 -2028.3623 c338.7617 -2028.1855 340.1606 -2027.9492 341.5605 -2027.707 C342.0996 -2029.8691 342.2632 -2032.1104 342.4033 -2034.3242 c342.6836 -2038.751 342.1572 -2041.1689 339.5845 -2044.9658 c334.7656 -2052.0791 324.9014 -2055.5469 317.0996 -2057.9248 c308.502 -2060.5449 299.5737 -2061.9521 290.6958 -2063.2266 c286.8623 -2063.7773 282.9141 -2064.1563 278.9805 -2064.5469 C278.6611 -2063.2988 278.3447 -2062.0527 278.0337 -2060.8086 C278.8291 -2057.4648 281.0005 -2054.5605 283.4063 -2051.9131 cf375.356 -1833.9561 m383.897 -1838.1455 392.8774 -1842.0059 400.1689 -1848.248 c403.9033 -1851.4453 407.1021 -1855.4082 408.959 -1859.9941 c410.5361 -1863.8887 412.4995 -1868.8828 411.6821 -1873.1523 c409.7354 -1883.3174 394.1655 -1885.6143 385.9917 -1885.8291 c372.8452 -1886.1738 360.2642 -1880.5078 349.2847 -1873.7988 c338.3838 -1867.1367 327.8467 -1858.6953 319.3584 -1849.1387 c315.7261 -1845.0498 312.5391 -1840.3164 309.4121 -1835.8301 c306.0508 -1831.0059 303.271 -1825.7852 303.0742 -1819.8027 c302.9575 -1816.2607 300.5557 -1814.2207 297.8486 -1813.6758 C298.3706 -1813 298.873 -1812.3086 299.3706 -1811.6123 C325.9292 -1814.4814 351.3745 -1822.1943 375.356 -1833.9561 cf354.54 -1722.5186 m362.0884 -1719.3887 370.4434 -1712.9395 379.0508 -1714.6475 c385.3921 -1715.9063 391.5151 -1721.499 391.3618 -1728.0996 c391.1787 -1735.9834 388.6904 -1744.5664 386.23 -1752.001 c383.1777 -1761.2227 377.854 -1769.4189 370.938 -1776.1963 c358.2393 -1788.6406 339.4995 -1798.0293 321.5557 -1798.3135 c319.1851 -1798.3516 317.4863 -1799.4199 316.4561 -1800.9297 C313.1396 -1800.3633 309.8115 -1799.8594 306.4746 -1799.4248 C311.3369 -1789.2734 315.7759 -1778.207 316.061 -1766.8691 c316.1807 -1762.1143 314.7446 -1757.6738 312.4067 -1753.6396 C321.9209 -1755.9014 328.2476 -1747.1816 332.4341 -1739.957 c333.311 -1738.4434 334.0664 -1736.8525 334.8247 -1735.2637 C341.2925 -1730.7432 346.9917 -1725.6484 354.54 -1722.5186 cf251.3081 -1703.3984 m252.4282 -1699.6387 256.3213 -1696.5547 259.0352 -1693.9707 c262.2266 -1690.9326 265.5449 -1688.125 268.7861 -1685.1436 c275.1655 -1679.2734 281.0596 -1672.8271 288.3105 -1667.9922 c295.2896 -1663.3398 302.6147 -1662.9258 310.3413 -1666.248 c318.0327 -1669.5547 324.2549 -1675.623 328.8037 -1682.54 c333.5796 -1689.8037 335.916 -1697.1523 334.1655 -1705.7607 c332.6089 -1713.4189 328.3442 -1719.5195 324.8896 -1726.2861 C324.4043 -1726.6387 323.9175 -1726.9902 323.4272 -1727.3408 c316.8389 -1732.0518 308.5928 -1738.5068 307.6006 -1747.1006 C304.6235 -1743.7773 301.1758 -1740.8643 297.7954 -1738.4404 c291.2354 -1733.7373 283.5181 -1731.04 276.5449 -1727.168 c268.417 -1722.6563 258.772 -1722.1387 249.7852 -1723.5195 c249.2808 -1723.5967 248.7871 -1723.6875 248.2988 -1723.7842 C248.5908 -1716.875 249.3472 -1709.9785 251.3081 -1703.3984 cf239.8999 -1752.9688 m244.1831 -1750.2568 243.4653 -1745.0527 240.6548 -1742.3789 C241.0659 -1741.9512 241.4985 -1741.5391 241.9482 -1741.1406 C244.3027 -1741.0352 246.5947 -1739.832 247.5928 -1737.5225 C252.0625 -1735.5674 257.7749 -1735.334 262.4653 -1736.0547 c268.2168 -1736.9385 272.8608 -1740.208 278.0854 -1742.4795 c288.2119 -1746.8818 298.8662 -1753.1377 302.7969 -1764.0732 c304.3369 -1768.3574 302.0508 -1774.5684 300.834 -1778.6426 c299.0977 -1784.457 296.6357 -1790.0313 293.9849 -1795.4766 c286.2959 -1811.2754 271.0264 -1824.3193 252.7285 -1825.1357 c243.9653 -1825.5264 236.7578 -1821.4639 232.2397 -1814.0244 c229.4321 -1809.4014 226.5532 -1805.2012 225.8657 -1799.6855 c225.0024 -1792.7598 224.8301 -1784.2246 226.2466 -1777.4033 c226.5337 -1776.0205 226.8433 -1774.6484 227.1816 -1773.293 C228.7158 -1772.6416 229.9526 -1771.2842 230.3965 -1769.0693 c230.9355 -1766.3809 231.4678 -1763.6035 232.1069 -1760.8477 C234.0249 -1757.7979 236.5229 -1755.1074 239.8999 -1752.9688 cf144.6089 -1714.5107 m142.5273 -1708 142.2041 -1697.1738 149.1904 -1693.6279 c154.166 -1691.1016 161.541 -1692.6846 166.6504 -1693.8369 c173.1655 -1695.3057 179.5278 -1697.6982 185.3257 -1701.0156 c192.8677 -1705.3311 200.8706 -1708.7813 208.3174 -1713.3594 c217.0532 -1718.7295 224.9482 -1725.2402 232.3213 -1732.332 C226.3501 -1738.3984 222.7168 -1746.792 220.2549 -1755.5146 C218.0024 -1759.4453 216.3276 -1763.7637 215.0518 -1768.3623 C210.1143 -1767.1221 205.1968 -1765.8418 200.3643 -1764.2305 c195.1958 -1762.5068 190.6772 -1759.6201 185.8496 -1757.1748 c176.6353 -1752.5078 166.937 -1747.0596 160.2349 -1739.0127 c154.0552 -1731.5938 147.5933 -1723.8477 144.6089 -1714.5107 cf84.3633 -1809.6631 m85.3511 -1806.5059 87.3901 -1803.9063 89.3354 -1801.2813 c91.2524 -1798.6943 92.9258 -1795.3213 95.189 -1793.0586 c100.4463 -1787.8008 105.4858 -1781.6113 111.7202 -1777.5283 c117.5518 -1773.709 123.9683 -1771.1885 130.7515 -1769.6777 c136.9492 -1768.2969 143.5981 -1768.7891 149.8989 -1768.9619 c157.2339 -1769.1641 164.3501 -1770.1348 171.3677 -1772.3135 c184.5728 -1776.4141 198.9087 -1780.791 212.8667 -1781.2891 C212.6577 -1784.4922 212.6323 -1787.7168 212.6323 -1791.0742 c212.6323 -1793.8516 212.6855 -1796.5986 212.9199 -1799.3125 C212.1958 -1799.832 211.5444 -1800.5576 211.0215 -1801.5332 c205.5693 -1811.7031 193.8477 -1818.9795 184.416 -1825.1338 c173.2788 -1832.4004 160.5249 -1836.5459 147.6001 -1839.2646 c135.8667 -1841.7334 123.3296 -1843.6055 111.3237 -1843.624 c99.3999 -1843.6426 86.9741 -1838.0557 83.2119 -1825.8955 c81.5571 -1820.5459 82.7393 -1814.8506 84.3633 -1809.6631 cf*U*u1 D1710.5146 -1980.6768 m1704.9868 -1980.5469 1698.791 -1978.9414 1693.8101 -1976.5684 c1691.2949 -1975.3691 1688.8857 -1975.8281 1687.0718 -1977.0977 C1681.5586 -1964.8809 1673.2383 -1953.7305 1664.0239 -1944.0664 c1661.5713 -1941.4941 1658.7715 -1939.1699 1656.8989 -1936.127 c1655.252 -1933.4492 1653.769 -1930.6748 1652.1128 -1928.002 c1651.8237 -1927.5352 1651.5098 -1927.1016 1651.2036 -1926.6563 C1658.8799 -1922.8145 1666.8423 -1918.9834 1675.541 -1918.7324 c1683.9058 -1918.4912 1683.9292 -1905.4902 1675.541 -1905.7324 c1663.5264 -1906.0791 1652.834 -1911.3428 1642.2827 -1916.6133 c1642.1118 -1916.6992 1641.9561 -1916.792 1641.7993 -1916.8848 C1640.3252 -1915.6846 1638.8076 -1914.5117 1637.2598 -1913.3271 c1626.2607 -1904.9131 1614.2451 -1898.2969 1601.6704 -1892.5576 c1596.2422 -1890.0801 1590.9287 -1887.873 1585.2852 -1886.1709 C1585.7417 -1884.3916 1586.4922 -1882.7637 1587.7437 -1881.4883 c1589.9692 -1879.2197 1594.4307 -1878.8027 1598.0986 -1878.7627 c1606.4766 -1878.6699 1606.4854 -1865.6699 1598.0986 -1865.7627 c1591.0615 -1865.8398 1584.6426 -1867.2998 1579.1079 -1871.7891 c1575.542 -1874.6816 1573.5942 -1878.9336 1572.5825 -1883.417 C1572.4043 -1883.4258 1572.2388 -1883.4209 1572.0537 -1883.4355 c1568.2461 -1883.7324 1564.4961 -1884.6406 1560.7495 -1885.333 c1556.146 -1886.1826 1551.3389 -1885.7979 1546.6841 -1886.4902 c1542.2988 -1887.1436 1538.0674 -1888.2207 1533.9194 -1889.7881 c1526.0186 -1892.7754 1519.0483 -1897.5137 1514.0557 -1904.2705 C1512.0391 -1903.498 1510.0879 -1902.5088 1508.1245 -1901.5078 c1503.2822 -1899.0391 1498.4434 -1897.1543 1493.3008 -1895.4365 c1488.3208 -1893.7725 1483.0269 -1892.0566 1478.8965 -1888.6855 c1474.6885 -1885.25 1470.0391 -1884.4229 1464.7217 -1883.7373 c1453.999 -1882.3545 1443.355 -1885.7012 1434.2695 -1891.6133 C1434.0068 -1889.2842 1432.667 -1887.041 1429.9541 -1885.9805 c1425.8457 -1884.373 1422.8975 -1879.5928 1420.3418 -1876.2344 c1416.873 -1871.6777 1413.0757 -1867.667 1410.1064 -1862.7363 c1406.5459 -1856.8242 1402.6416 -1851.5527 1399.5376 -1845.3457 c1396.0786 -1838.4277 1392.6196 -1831.5098 1389.1606 -1824.5928 c1382.249 -1810.7686 1376.0488 -1796.9111 1371.7183 -1782.0293 c1369.668 -1774.9854 1369.6445 -1767.9746 1368.8955 -1760.7266 c1368.1768 -1753.7705 1367.3452 -1746.8652 1367.2769 -1739.8623 c1367.1953 -1731.4834 1354.1948 -1731.4756 1354.2769 -1739.8623 c1354.3506 -1747.4316 1355.2939 -1754.9063 1356.0713 -1762.4238 c1356.8906 -1770.3574 1357.0396 -1777.7344 1359.1826 -1785.4854 c1363.5977 -1801.4531 1370.5576 -1816.3975 1377.9355 -1831.1543 c1381.6826 -1838.6484 1385.4297 -1846.1426 1389.1772 -1853.6367 c1392.4346 -1860.1514 1396.6836 -1865.7549 1400.502 -1871.96 c1403.6436 -1877.0654 1407.9736 -1881.3379 1411.624 -1886.0771 c1415.6289 -1891.2764 1419.7715 -1895.6572 1425.8452 -1898.2236 C1421.9512 -1901.8623 1418.5522 -1905.9512 1415.8359 -1910.2383 c1409.7476 -1919.8486 1408.4312 -1930.8838 1409.5078 -1942.0645 c1410.501 -1952.3809 1415.582 -1960.9512 1421.6074 -1969.124 c1431.9883 -1983.2051 1444.9458 -1997.2207 1461.9424 -2001.9756 C1461.7285 -2003.1289 1461.5107 -2004.2822 1461.2808 -2005.4336 c1460.3882 -2009.9063 1459.5264 -2013.8477 1459.5015 -2018 C1442.9619 -2018 L1433.7695 -2018 1425.7627 -2019.9688 1417.4507 -2023.958 c1409.895 -2027.584 1416.4927 -2038.7539 1424.0122 -2035.1455 c1430.8208 -2031.8779 1437.1143 -2031 1444.5527 -2031 C1462.4014 -2031 L1464.2017 -2035.0459 1466.6636 -2038.8242 1469.3389 -2042.2744 c1473.5313 -2047.6807 1479.4688 -2052.2012 1484.7056 -2056.543 c1489.686 -2060.6738 1494.8916 -2064.5371 1500.2568 -2068.1543 C1491.8047 -2068.8818 1484.5244 -2074.2773 1478.5889 -2080.0078 c1472.3975 -2085.9844 1469.3984 -2093.5664 1469.1904 -2102.0898 c1468.9858 -2110.4785 1481.9863 -2110.458 1482.1904 -2102.0898 c1482.3198 -2096.7803 1484.1201 -2092.999 1487.7813 -2089.1992 c1490.8604 -2086.0039 1495.9932 -2081.4268 1500.6719 -2081.1113 c1505.6553 -2080.7754 1507.6694 -2075.9746 1506.6851 -2072.2988 C1512.124 -2075.543 1517.918 -2078.3047 1523.4429 -2081.373 c1530.2881 -2085.1758 1537.1611 -2088.915 1544.3203 -2092.1006 c1557.2559 -2097.8555 1570.6865 -2101.9473 1584.7881 -2103.3281 c1591.3843 -2103.9746 1598.0381 -2104 1604.6563 -2104 C1615.5859 -2104 L1619.3853 -2104 1623.8237 -2101.208 1627.3062 -2099.8174 c1640.7939 -2094.4326 1655.2705 -2090.7646 1668.1416 -2083.9629 c1680.0254 -2077.6826 1687.5596 -2066.3232 1692.2808 -2054.0859 c1696.7598 -2042.4766 1699.333 -2028.3916 1698.8281 -2015.9609 c1698.4707 -2007.1719 1695.8394 -1998.4219 1692.5654 -1990.0352 C1698.3149 -1992.167 1704.5117 -1993.5361 1710.5146 -1993.6768 c1718.9028 -1993.873 1718.8838 -1980.873 1710.5146 -1980.6768 cf0 D1465.7666 -1982.5938 m1465.2163 -1984.7949 1464.7393 -1987.0049 1464.2959 -1989.2197 C1450.0332 -1984.8828 1439.3594 -1971.6035 1430.9185 -1959.9434 c1425.8569 -1952.9521 1422.3965 -1945.9746 1422.2354 -1937.2139 c1422.0591 -1927.6182 1424.0742 -1919.8945 1430.1997 -1912.3398 c1435.2588 -1906.0996 1442.0483 -1901.2158 1449.6094 -1898.5107 c1453.123 -1897.2529 1456.7354 -1896.6416 1460.4531 -1896.5313 c1464.2485 -1896.418 1468.79 -1897.1309 1470.8828 -1898.8398 c1478.2715 -1904.8701 1487.394 -1906.3682 1495.9224 -1909.9785 c1499.0923 -1911.3203 1502.0791 -1912.8555 1505.0781 -1914.2637 C1491.9087 -1928.0166 1482.8242 -1944.9082 1472.5762 -1961.4131 c1468.8989 -1967.334 1467.4399 -1975.9014 1465.7666 -1982.5938 cf1642.3301 -2080.2246 m1636.1182 -2082.3477 1629.9463 -2084.8477 1623.8501 -2087.2822 c1620.875 -2088.4697 1616.9648 -2091 1613.7139 -2091 C1602.9663 -2091 L1589.4224 -2091 1576.5977 -2090.0146 1563.6152 -2085.8242 c1550.584 -2081.6191 1538.7178 -2075.0859 1526.7925 -2068.4668 c1513.543 -2061.1113 1501.1484 -2053.7227 1489.6055 -2043.7734 c1484.8086 -2039.6387 1479.1826 -2034.6074 1475.667 -2028.7422 C1478.2207 -2025.3066 1477.0908 -2019.0625 1472.2725 -2018.125 C1472.271 -2018.083 1472.2705 -2018.041 1472.2695 -2018 c1472.2339 -2016.667 1472.3354 -2015.3047 1472.6138 -2013.9111 c1473.3018 -2010.4648 1473.9629 -2007.0117 1474.6367 -2003.5625 C1480.167 -2002.5742 1480.9526 -1995.0303 1477.0166 -1991.96 C1478.5068 -1985.1611 1480.2153 -1978.4121 1482.4609 -1971.7871 c1484.4639 -1965.877 1488.2666 -1960.6191 1491.418 -1955.2539 c1493.7002 -1951.3701 1496.0049 -1947.5 1498.4043 -1943.6875 C1501.2212 -1943.5068 1518.46 -1942.5068 1526.6724 -1944.5254 c1534.9072 -1946.5508 1540.9399 -1953.3779 1548.8628 -1955.9727 c1552.7646 -1957.251 1556.7188 -1958.4307 1560.6045 -1959.7598 c1562.668 -1960.4658 1564.6992 -1961.2627 1566.6841 -1962.166 c1569.0752 -1963.2529 1571.3574 -1965.2773 1573.8823 -1965.9648 c1577.8955 -1967.0576 1581.3359 -1968.623 1584.7432 -1971.0068 c1588.0566 -1973.3262 1590.4438 -1976.6104 1593.8809 -1978.791 c1610.4224 -1989.2861 1623.6836 -2003.9688 1638.2451 -2016.8857 c1652.1406 -2029.2129 1660.1997 -2046.1094 1667.4292 -2062.9023 c1668.0996 -2064.46 1669.0977 -2065.4209 1670.2305 -2065.9131 C1662.7686 -2073.291 1652.5967 -2076.7148 1642.3301 -2080.2246 cf1685.8281 -2021.5703 m1685.4014 -2032.498 1682.7803 -2044.5742 1677.9316 -2054.6719 C1670.8413 -2038.2988 1662.4927 -2020.709 1648.7891 -2008.877 c1633.1494 -1995.3721 1619.2188 -1980.1582 1601.9766 -1968.5674 c1598.5005 -1966.2305 1595.7085 -1963.1064 1592.3608 -1960.5781 c1588.7656 -1957.8623 1584.8916 -1955.9648 1580.6709 -1954.4111 c1576.0527 -1952.7109 1571.7651 -1950.1855 1567.1641 -1948.3535 c1562.7744 -1946.6074 1558.2065 -1945.3125 1553.71 -1943.8789 c1549.7295 -1942.6094 1545.9692 -1939.5068 1542.3926 -1937.3906 c1538.5596 -1935.1221 1534.3975 -1933.2637 1530.1279 -1931.9902 c1523.2695 -1929.9443 1515.3027 -1930.1191 1507.731 -1930.4209 C1511.1553 -1926.1768 1514.8838 -1922.1982 1518.9883 -1918.6172 C1519.5371 -1918.6709 1520.0928 -1918.7109 1520.6572 -1918.7324 c1524.8564 -1918.8955 1526.9448 -1915.7168 1526.9346 -1912.4619 C1528.7979 -1910.9502 1529.4893 -1908.9023 1529.3408 -1906.9209 C1535.3628 -1902.1465 1543.4468 -1899.7461 1550.895 -1898.9727 c1556.9814 -1898.3408 1562.8677 -1898.1533 1568.915 -1896.957 c1570.6226 -1896.6201 1571.8711 -1896.4336 1573.0806 -1896.4648 C1574.7549 -1898.3379 1577.5732 -1898.9355 1580.0078 -1898.2617 C1582.9902 -1899.126 1586.002 -1899.79 1588.9067 -1901.04 c1601.5684 -1906.4912 1613.877 -1912.6504 1625.2261 -1920.5156 c1630.4307 -1924.123 1636.3623 -1928.0693 1640.0518 -1933.2891 c1641.8428 -1935.8232 1643.2974 -1938.6094 1644.8486 -1941.292 c1646.978 -1944.9736 1649.4468 -1947.7813 1652.4297 -1950.791 c1662.146 -1960.5977 1670.3467 -1971.6621 1676.1191 -1984.2393 c1681.4312 -1995.8135 1686.3311 -2008.6846 1685.8281 -2021.5703 cf*U1407.4712 -1898.4863 m1391.3164 -1893.8223 1375.4707 -1888.002 1358.9722 -1884.6055 c1350.125 -1882.7842 1341.8213 -1880.0234 1333.1152 -1877.6523 c1323.9209 -1875.1465 1314.2441 -1876 1304.8188 -1876 C1247.8179 -1876 L1229.2441 -1876 1211.8638 -1881.0859 1194.1724 -1886.1641 c1186.1294 -1888.4727 1189.5527 -1900.957 1197.6284 -1898.6387 c1214.2046 -1893.8809 1230.4126 -1889 1247.8179 -1889 C1304.8188 -1889 L1313.8096 -1889 1322.6772 -1888.2813 1331.4224 -1890.6641 c1339.5513 -1892.8789 1347.2227 -1895.5908 1355.5161 -1897.1943 c1372.0313 -1900.3877 1387.8896 -1906.3818 1404.0151 -1911.0361 c1412.0879 -1913.3662 1415.5098 -1900.8066 1407.4712 -1898.4863 cf*u1 D1502.5537 -1998.8848 m1501.2441 -2000.7188 1501.1045 -2002.5234 1501.6836 -2004.0576 C1500.3838 -2004.8379 1499.1602 -2005.7783 1498.0425 -2006.9199 c1493.3496 -2011.7129 1493.3979 -2018.9473 1496.2246 -2024.6006 c1497.6108 -2027.373 1500.3496 -2029.499 1502.9219 -2031.0752 c1506.064 -2033 1509.5591 -2032.6445 1512.7974 -2033.9736 c1520.0532 -2036.9521 1527.8257 -2031.4375 1532.7476 -2026.7461 c1542.3857 -2017.5596 1546.4761 -2002.9131 1537.4385 -1992.0469 c1527.209 -1979.7461 1509.9414 -1988.5381 1502.5537 -1998.8848 cf0 D1525.3691 -2015.582 m1523.4746 -2017.917 1520.459 -2021.3525 1517.2505 -2021.626 c1515.9268 -2021.7393 1514.5488 -2020.7129 1513.1626 -2020.6465 c1511.2998 -2020.5576 1509.96 -2020.1426 1508.3809 -2019.1738 c1502.7402 -2015.7188 1514.0322 -2013.6953 1515.6606 -2013.6611 c1523.0498 -2013.5039 1523.9253 -2003.3604 1518.2598 -2001.1055 C1521.4277 -1999.0107 1525.2207 -1998.248 1528.2461 -2001.2393 c1532.2104 -2005.1592 1528.0503 -2012.2783 1525.3691 -2015.582 cf*U*u1 D1590.3672 -2005.8721 m1585.1655 -2007.6738 1580.647 -2011.0293 1577.0015 -2015.1816 C1575.6294 -2015.8018 1574.3325 -2016.5996 1573.1563 -2017.6553 c1567.2158 -2022.9883 1566.2183 -2031.5342 1566.8457 -2039.0156 c1567.6016 -2048.0264 1572.4526 -2054.2373 1581.1919 -2056.7129 c1589.1387 -2058.9629 1599.0801 -2057.9824 1606.6914 -2055.0439 c1623.8486 -2048.4209 1625.4458 -2024.4375 1615.0156 -2011.5957 c1609.0688 -2004.2744 1598.8945 -2002.9199 1590.3672 -2005.8721 cf0 D1602.0723 -2042.957 m1597.3398 -2044.7842 1592.0986 -2044.9795 1587.1001 -2044.6162 c1582.5146 -2044.2832 1580.1406 -2042.5264 1579.7344 -2037.6855 c1579.6709 -2036.9336 1579.6191 -2035.959 1579.6187 -2034.9082 C1580.3115 -2034.4082 1580.8779 -2033.75 1581.2285 -2032.9248 c1582.0762 -2030.9326 1583.4375 -2028.5342 1585.1455 -2026.2129 C1587.77 -2025.8662 1590.8984 -2026.1533 1593.1025 -2026.1523 c1598.4229 -2026.1504 1600.3618 -2020.9141 1598.9282 -2017.0889 C1600.9746 -2017.1787 1603.0273 -2018.0137 1604.9932 -2019.8887 c1610.7266 -2025.3594 1610.2305 -2039.8086 1602.0723 -2042.957 cf*U1544.1343 -2102.0898 m1544.02 -2108.4893 1542.7842 -2115.4707 1540.0254 -2121.293 c1536.4561 -2128.8242 1547.6621 -2135.4258 1551.251 -2127.8535 c1555.0249 -2119.8896 1556.9771 -2110.8906 1557.1343 -2102.0898 c1557.2842 -2093.7021 1544.2837 -2093.7168 1544.1343 -2102.0898 cf*u1 D1932.0654 -2037.7549 m1943.2197 -2046.1445 1954.6709 -2055.2695 1968.5918 -2058.3955 c1972.541 -2059.2822 1976.6221 -2059.5957 1980.7334 -2059.4883 C1980.8809 -2072.3955 1981.2793 -2085.2188 1980.8115 -2098.1641 c1980.2197 -2114.5234 1979.2451 -2130.8662 1978.9063 -2147.2344 c1978.8945 -2147.8232 1978.8896 -2148.4111 1978.8809 -2149 C1991.9072 -2149 L1992.4297 -2122.8125 1994.9512 -2096.6191 1994.2324 -2070.4365 c1994.1182 -2066.2754 1993.8535 -2062.0625 1993.7217 -2057.8516 C1999.4482 -2056.6094 2005.0313 -2054.7773 2010.1865 -2052.6895 c2022.2979 -2047.7832 2032.6318 -2040.0615 2041.2188 -2030.2656 c2048.1719 -2022.333 2051.2617 -2007.7227 2038.2705 -2003.7783 c2027.6748 -2000.5615 2018.3965 -2011.4688 2012.7559 -2018.8262 c2007.3896 -2025.8262 2002.5176 -2034.2715 1999.7861 -2042.833 C1997.9258 -2043.457 1996.0303 -2044.0156 1994.1094 -2044.4941 C1994.1445 -2044.1963 1994.1777 -2043.8984 1994.2168 -2043.6016 C1999.584 -2042.9111 2000.4707 -2035.8281 1996.9521 -2032.4258 C2000.709 -2020.3008 2003.5166 -2008.1211 2010.4512 -1997.1611 c2016.9941 -1986.8193 2025.4141 -1977.7354 2032.7676 -1967.9766 c2036.1758 -1963.4531 2039.8232 -1959.1465 2043.9814 -1955.293 c2046.2822 -1953.1611 2048.8623 -1951.4688 2051.5791 -1949.9209 c2054.4033 -1948.3115 2056.2031 -1948.71 2059.5117 -1948.71 c2064.1738 -1948.71 2069.3838 -1948.0762 2073.9502 -1949.0898 c2078.6338 -1950.1299 2082.9326 -1954.3086 2086.4795 -1957.3105 c2092.5098 -1962.4141 2103.3594 -1968.2744 2103.7148 -1977.1836 c2103.7236 -1977.3965 2103.7461 -1977.6016 2103.7695 -1977.8037 C2096.082 -1973.3242 2089.2441 -1968.0166 2080.1074 -1966.3789 c2072.3506 -1964.9873 2063.7197 -1967.5723 2060.9199 -1975.623 c2058.0029 -1984.0098 2062.7158 -1992.3535 2067.7754 -1998.792 C2065.4824 -1999.9492 2063.249 -2001.2207 2061.1162 -2002.6484 c2056.7598 -2005.5645 2052.4277 -2009.6621 2050.1416 -2014.4463 c2047.3916 -2020.2021 2048.126 -2026.8291 2048.5771 -2032.9785 c2048.9951 -2038.6699 2049.0576 -2044.0498 2050.8867 -2049.5352 c2052.8398 -2055.3916 2056.1465 -2060.6748 2059.8486 -2065.5664 c2063.4434 -2070.3154 2067.4434 -2074.71 2071.5244 -2079.041 c2075.749 -2083.5234 2079.7373 -2088.8193 2084.4189 -2092.7852 c2094.9229 -2101.6836 2106.6328 -2109.0127 2119.2256 -2114.5596 c2125.2793 -2117.2266 2131.4941 -2119.4512 2137.8447 -2121.2959 c2144.7949 -2123.3154 2151.1289 -2123.8008 2158.334 -2123.3379 c2170.8555 -2122.5322 2180.3047 -2116.1465 2189.9316 -2108.6533 c2204.375 -2097.4102 2213.7461 -2079.7051 2218.0605 -2062.1611 c2220.2432 -2053.2881 2221.1182 -2044.0508 2221.4971 -2034.9404 c2221.8652 -2026.0684 2221.6992 -2017.4551 2217.3135 -2009.502 c2213.4492 -2002.4951 2206.7852 -1996.5654 2199.9238 -1992.6992 c2196.1035 -1990.5469 2191.8857 -1989.0742 2187.7998 -1987.5195 c2183.5645 -1985.9072 2180.252 -1983.5283 2175.7148 -1982.7305 c2174.2402 -1982.4707 2172.7617 -1982.2529 2171.2822 -1982.0537 C2176.3184 -1972.8125 2174.3174 -1962.2891 2174.1719 -1952.2031 c2174.0615 -1944.5654 2163.8555 -1943.7461 2161.4043 -1950.4756 c2159.7793 -1954.9346 2157.0107 -1958.8564 2154.7031 -1962.9785 c2154.1934 -1963.9131 2153.7168 -1964.8643 2153.2764 -1965.833 c2153.1748 -1966.0449 2150.7314 -1970.2578 2152.5469 -1968.1992 c2151.2568 -1969.6621 2150.2627 -1971.3691 2149.2764 -1973.04 c2148.2734 -1974.7383 2147.2998 -1976.4131 2145.9824 -1977.8867 C2145.8994 -1977.9951 2145.792 -1978.0713 2145.6992 -1978.168 C2144.8047 -1976.5459 2144.2285 -1974.793 2143.4951 -1972.8691 c2140.541 -1965.127 2136.6846 -1958.5234 2128.5479 -1955.6123 c2121.5537 -1953.1104 2116.7813 -1959.792 2112.8379 -1964.877 C2109.5508 -1959.5781 2104.5879 -1955.2461 2099.4961 -1951.1992 c2090.4824 -1944.0352 2082.4395 -1936.0137 2070.2441 -1935.71 c2064.4238 -1935.5645 2058.5801 -1935.71 2052.7578 -1935.71 c2046.5254 -1935.71 2039.1914 -1942.2422 2034.7891 -1946.1006 c2024.9951 -1954.6846 2017.5732 -1966.5371 2009.4404 -1976.6475 c2005.0098 -1982.1553 2000.8691 -1987.8535 1997.1826 -1993.8887 c1993.377 -2000.1172 1990.8564 -2007.7041 1988.4287 -2014.5518 c1987.7598 -2016.4375 1987.126 -2018.335 1986.5225 -2020.2412 C1983.6914 -2014.4863 1978.8516 -2009.5488 1974.5508 -2004.9072 c1964.7832 -1994.3662 1954.3008 -1984.8457 1941.9512 -1977.4121 c1936.2793 -1973.9971 1930.2188 -1971.2383 1924.0107 -1968.9561 c1921.0859 -1967.8799 1918.0713 -1967.083 1915.0283 -1966.4268 c1913.9194 -1966.1875 1913.5371 -1966.2305 1913.498 -1966.376 C1913.3755 -1966.2939 1913.2441 -1966.2061 1913.0923 -1966.1074 c1911.8262 -1965.2832 1910.4609 -1964.6621 1909.0479 -1964.124 c1904.5786 -1962.4238 1899.6138 -1961.5928 1894.9067 -1962.709 c1888.8691 -1964.1416 1886.7476 -1971.0967 1886.0571 -1976.4072 c1884.5112 -1988.2969 1893.332 -1999.8633 1900.4189 -2008.3252 c1909.5156 -2019.1875 1920.751 -2029.2461 1932.0654 -2037.7549 cf0 D2023.9814 -2025.3877 m2026.3857 -2022.1387 2029.3613 -2019.0156 2032.8545 -2016.9531 c2033.6191 -2016.501 2033.7334 -2016.5039 2034.5195 -2016.2705 C2034.5186 -2016.3535 2034.5166 -2016.4395 2034.5146 -2016.5391 c2034.5 -2017.1484 2033.7275 -2018.3867 2033.4424 -2018.917 c2031.1406 -2023.1992 2027.1543 -2027.1719 2023.2471 -2029.9648 c2021.6895 -2031.0781 2020.1641 -2032.1689 2018.6377 -2033.2285 C2020.3203 -2030.502 2022.1387 -2027.8779 2023.9814 -2025.3877 cf2074.9277 -1978.9697 m2082.9434 -1978.1846 2090.6797 -1984.8213 2097.0059 -1988.8955 C2096.9512 -1988.9023 2096.8965 -1988.9053 2096.8428 -1988.9121 c2090.417 -1989.7168 2084.8301 -1991.9404 2078.8672 -1994.1309 C2078.8281 -1992.7656 2078.3711 -1991.3652 2077.3398 -1990.0742 c2075.9219 -1988.3018 2069.8047 -1979.4727 2074.9277 -1978.9697 cf2119.2959 -1978.918 m2120.0332 -1976.0078 2122.1406 -1973.833 2124.292 -1970.9014 c2124.8506 -1970.1406 2125.5391 -1969.2803 2126.2842 -1968.6367 C2126.7461 -1968.9609 2127.2422 -1969.5713 2127.5 -1969.8379 c2129.6406 -1972.0508 2130.7305 -1975.6816 2131.7793 -1978.5029 c2132.2529 -1979.7773 2132.8223 -1981.2598 2133.502 -1982.7744 C2130.1289 -1983.9131 2126.9229 -1985.4609 2123.7275 -1987.2969 C2122.4258 -1987.4668 2121.123 -1987.6338 2119.8164 -1987.7803 c2118.4883 -1987.9297 2117.1582 -1988.0215 2115.8271 -1988.0938 C2117.4736 -1985.208 2118.457 -1982.2256 2119.2959 -1978.918 cf2115.2051 -2001.0049 m2116.9092 -2003.5928 2120.1396 -2005.0098 2123.4883 -2002.7813 c2124.9307 -2001.8213 2126.4111 -2000.7891 2127.9336 -1999.7764 C2131.999 -1999.2393 2136.0566 -1998.7354 2140.1924 -1998.6729 c2143.7334 -1998.6191 2145.7734 -1996.2617 2146.3223 -1993.5703 C2152.624 -1993.4697 2159.0186 -1993.8252 2165.2529 -1994.3633 c2168.1221 -1994.6104 2173.084 -1994.4648 2175.5674 -1996.0361 c2177.9102 -1997.5195 2180.5596 -1998.5283 2183.1143 -1999.5742 c2189.1318 -2002.0371 2195.333 -2004.0146 2200.0293 -2008.751 c2203.3682 -2012.1182 2206.3936 -2015.5156 2207.8037 -2020.125 c2209.6533 -2026.1689 2208.6279 -2033.4834 2208.2559 -2039.6953 c2207.4541 -2053.0752 2204.6133 -2066.4961 2198.0703 -2078.291 c2195.0762 -2083.6885 2191.707 -2089.0527 2187.4238 -2093.5146 c2183.127 -2097.9922 2178.0254 -2101.335 2173.0352 -2104.9482 c2162.6699 -2112.4561 2149.707 -2111.3311 2138.1172 -2107.8154 c2124.9932 -2103.834 2112.7617 -2097.5225 2101.5342 -2089.6924 c2091.2988 -2082.5547 2082.9775 -2072.6221 2074.7178 -2063.3164 c2068.1855 -2055.9561 2061.9922 -2047.333 2061.7559 -2037.1387 c2061.6406 -2032.1563 2060.5078 -2026.8525 2061.3037 -2021.8984 c2061.9951 -2017.5957 2066.6699 -2014.4482 2070.0742 -2012.3252 c2074.2266 -2009.7344 2078.8086 -2007.9014 2083.4121 -2006.291 c2089.7793 -2004.0635 2095.2998 -2001.8906 2102.1328 -2001.3906 c2106.4941 -2001.0713 2110.8496 -2001.1436 2115.2051 -2001.0049 Cf1899.2642 -1975.6436 m1899.3164 -1975.4111 1899.3511 -1975.2617 1899.376 -1975.1455 C1899.9697 -1975.1602 1900.5659 -1975.2324 1901.1421 -1975.333 c1903.6777 -1975.7754 1905.1748 -1976.6816 1907.0835 -1977.7998 c1909.5479 -1979.2441 1913.2773 -1979.3027 1916.0405 -1980.0479 c1919.1084 -1980.875 1922.1221 -1981.9922 1925.0332 -1983.2588 c1931.6641 -1986.1455 1937.8848 -1989.9541 1943.7822 -1994.1152 c1954.998 -2002.0273 1965.6895 -2012.9473 1973.7344 -2024.0254 c1976.4219 -2027.7275 1977.4199 -2032.4063 1980.0078 -2036.2236 c1980.627 -2037.1377 1981.3096 -2037.9463 1982.0273 -2038.6943 C1981.6123 -2041.2275 1981.2871 -2043.7744 1981.0615 -2046.334 C1975.8604 -2046.459 1970.6973 -2045.7881 1965.8135 -2044.0332 c1952.7852 -2039.3506 1941.0791 -2028.667 1930.749 -2019.7725 c1920.2266 -2010.7129 1909.4995 -2001.0195 1902.3687 -1988.9629 c1900.0762 -1985.0869 1898.2476 -1980.1787 1899.2642 -1975.6436 cf*U2111.625 -2046.9863 m2111.5811 -2046.8945 2111.377 -2046.543 2111.21 -2045.7881 c2110.9238 -2044.4941 2111.0898 -2042.6406 2111.1338 -2041.1953 c2111.167 -2040.1191 2111.248 -2039.0703 2111.3359 -2038.0264 C2115.7715 -2035.0117 2114.6631 -2026 2108 -2026 C2106.0518 -2026 2105.2188 -2026 v2101.6289 -2026 2098.7803 -2028.7793 2098.7188 -2032.3213 c2098.5713 -2040.8359 2095.6211 -2052.4551 2104.4355 -2057.8301 c2111.3906 -2062.0703 2117.7344 -2051.6035 2111.625 -2046.9863 Cf2154.1865 -2054.626 m2154.457 -2046.2383 2141.4561 -2046.2646 2141.1865 -2054.626 c2140.791 -2066.9004 2133.5693 -2078.4414 2143.0898 -2089.1992 c2148.6563 -2095.4902 2157.8164 -2086.2598 2152.2832 -2080.0078 c2149.7598 -2077.1563 2151.0273 -2072.6826 2151.7305 -2069.3584 c2152.7676 -2064.4609 2154.0244 -2059.6582 2154.1865 -2054.626 cf2179 -2025 m2179 -2040 2179 -2047 v2179 -2056 2192 -2056 2192 -2047 C2192 -2025 L2192 -2016 2179 -2016 2179 -2025 Cf3457.3213 -1453.3594 m3461.7813 -1446.333 3450.8125 -1439.8896 3446.2441 -1446.5898 C3446.0371 -1446.6348 3445.6963 -1446.6816 3445.1514 -1446.7012 c3443.9189 -1446.7451 3442.6621 -1446.5752 3441.4395 -1446.4561 c3438.457 -1446.1641 3436.0898 -1445.9639 3433.168 -1446.8828 c3426.0225 -1449.1309 3418.5996 -1447.9463 3411.4004 -1449.6895 c3397.4316 -1453.0723 3383.2705 -1455.6367 3369.6016 -1460.1592 c3366.3643 -1461.2305 3363.1904 -1462.4766 3360.0488 -1463.7969 c3356.8516 -1465.1396 3352.2207 -1465.127 3348.7832 -1465.707 c3341.4551 -1466.9453 3334.126 -1468.0234 3326.6992 -1468.4385 c3319.8652 -1468.8213 3313.3457 -1466.1943 3306.8496 -1464.334 c3299.7686 -1462.3047 3292.5713 -1461.0176 3285.1895 -1461.0791 c3275.4551 -1461.1611 3265.7734 -1462.4336 3256.0703 -1463.1201 C3256.0664 -1463.082 3256.0625 -1463.043 3256.0596 -1463.0039 c3254.7979 -1446.752 3255.2295 -1430.4063 3255.5684 -1414.1279 c3256.2549 -1381.1621 3257.2715 -1348.2266 3259.0967 -1315.3115 c3260.5244 -1289.5547 3255.8604 -1264.165 3255.8604 -1238.498 c3255.8604 -1226.4873 3256.2754 -1214.3926 3255.7793 -1202.3926 c3255.4922 -1195.4414 3253.7939 -1185.5176 3258.9531 -1179.8809 c3264.5996 -1173.7109 3255.4316 -1164.4922 3249.7598 -1170.6895 c3242.0469 -1179.1172 3242.1836 -1190.583 3242.7285 -1201.3262 c3243.4863 -1216.2598 3242.8604 -1231.3662 3242.8604 -1246.3184 c3242.8604 -1262.7041 3245.7979 -1279.165 3246.2891 -1295.5898 c3246.7793 -1312.0234 3245.5713 -1328.5947 3244.8369 -1345.0107 c3243.3701 -1377.8066 3241.9404 -1410.6084 3242.2705 -1443.4531 c3242.3389 -1450.209 3242.7998 -1456.8799 3243.4141 -1463.5293 C3242.124 -1463.5078 3240.834 -1463.4717 3239.543 -1463.3984 c3225.2715 -1462.5879 3210.4219 -1457.7344 3196.9414 -1453.2412 c3182.6826 -1448.4893 3168.418 -1443.7568 3154.0996 -1439.1895 c3146.8857 -1436.8887 3139.6543 -1434.6445 3132.4092 -1432.4443 c3128.7578 -1431.3359 3123.5273 -1431.5225 3120.0703 -1429.3945 C3123.0498 -1427.2246 3126.0771 -1425.2764 3128.4766 -1422.1982 c3132.2822 -1417.3154 3136.4375 -1412.7021 3140.5322 -1408.0625 c3149.6328 -1397.7529 3158.04 -1386.9697 3167.7715 -1377.2334 c3176.6221 -1368.377 3184.4004 -1358.7793 3192.1445 -1348.957 c3198.6836 -1340.6621 3207.4121 -1329.3467 3206.0859 -1318.0449 c3204.9492 -1308.3506 3196.4238 -1306.1416 3188.1895 -1304.916 c3175.8057 -1303.0742 3163.5332 -1298.7871 3151.4756 -1295.4844 c3138.3613 -1291.8936 3125.124 -1289.7148 3111.8174 -1287.0537 c3104.9482 -1285.6797 3098.0781 -1284.3066 3091.209 -1282.9316 c3087.7324 -1282.2373 3084.1299 -1281.207 3080.5713 -1281.1973 c3080.1445 -1281.1963 3079.7061 -1281.2021 3079.2695 -1281.2002 C3081.8477 -1279.0205 3084.8369 -1277.3145 3087.7119 -1275.8262 c3090.3711 -1274.4492 3092.8066 -1271.3691 3095.1348 -1269.457 c3097.7578 -1267.3027 3100.4502 -1265.2207 3103.0469 -1263.0332 c3114.7969 -1253.1328 3126.0186 -1242.582 3137.4756 -1232.3418 c3158.0029 -1213.9941 3181.373 -1198.3838 3200.5332 -1178.582 c3203.8672 -1175.1367 3207.1221 -1171.3066 3209.2461 -1166.9824 c3211.1865 -1163.0332 3213.041 -1154.5605 3207.6748 -1152.1855 c3202.3447 -1149.8271 3196.7852 -1149.2197 3191 -1148.9316 c3184.0918 -1148.5869 3177.4922 -1147.6787 3170.6074 -1146.9883 c3155.8896 -1145.5117 3140.8301 -1146.3018 3126.0566 -1146.3018 c3119.3887 -1146.3018 3112.7012 -1146.1543 3106.0352 -1146.3262 c3103.7959 -1146.3838 3100.5996 -1147.0977 3097.623 -1147.2051 C3098.0986 -1146.8721 3098.5771 -1146.5449 3099.0488 -1146.2148 c3102.4131 -1143.8643 3105.2441 -1141.1895 3108.2842 -1138.4404 c3116.2432 -1131.2441 3125.6816 -1125.7803 3134.2178 -1119.3076 c3152.3447 -1105.5615 3168.584 -1090.0361 3184.8799 -1074.2275 c3200.6514 -1058.9287 3217.1523 -1044.4053 3233.6807 -1029.936 c3237.5635 -1026.5371 3240.6055 -1022.3359 3244.2207 -1018.6357 c3247.6123 -1015.1646 3251.2646 -1011.9487 3254.8633 -1008.6968 c3258.3213 -1005.5708 3261.041 -1002.4399 3263.9512 -998.8823 c3266.8037 -995.395 3270.1982 -992.6982 3272.46 -988.708 c3274.3535 -985.3672 3272.834 -979.8477 3268.5762 -979.1592 c3235.6338 -973.8364 3202.1338 -975.8604 3169.2656 -969.6484 c3161.6992 -968.2183 3154.1777 -966.5503 3146.625 -965.0522 c3139.3506 -963.6099 3131.7949 -963.0029 3124.6123 -961.2471 c3117.2598 -959.4492 3107.9688 -960.708 3101.1406 -957.0781 C3104.5205 -954.0459 3109.1074 -951.3208 3112.4727 -949.1572 c3119.4648 -944.6611 3125.8193 -939.5107 3133.249 -935.6348 c3143.1172 -930.4863 3152.8984 -925.6655 3162.4414 -919.8838 c3172.5273 -913.7729 3182.5059 -907.4902 3192.6709 -901.5103 c3203.125 -895.3604 3213.915 -889.8687 3224.7588 -884.4463 c3235.4268 -879.1123 3245.8457 -873.2983 3256.5859 -868.1343 c3275.2842 -859.1426 3292.1016 -846.8979 3307.877 -833.52 C3321.7246 -869.4668 3342.7324 -901.9009 3359.2656 -936.6094 c3368.873 -956.7764 3380.6143 -975.9131 3391.7012 -995.3159 c3394.1826 -999.6582 3396.8086 -1003.8721 3399.0762 -1008.3359 c3401.3838 -1012.8799 3403.4873 -1018.8447 3407.1426 -1022.499 c3409.7109 -1025.0684 3412.6768 -1026.9014 3415.127 -1029.7666 c3415.4219 -1030.1108 3415.6963 -1030.4746 3415.9805 -1030.8291 C3410.3906 -1029.543 3404.8008 -1024.5703 3401.0234 -1021.3525 c3393.3477 -1014.812 3386.1641 -1007.749 3378.6416 -1001.0664 c3369.333 -992.7969 3358.4004 -984.4424 3346.0176 -981.6582 c3336.3174 -979.4771 3335.0244 -992.1558 3337.2842 -998.3164 c3342.6689 -1012.9937 3355.5566 -1025.5234 3366.251 -1036.5249 c3383.665 -1054.4399 3394.9951 -1077.9238 3409.5146 -1098.126 c3413.7998 -1104.0889 3418.1289 -1110.0166 3422.2246 -1116.1123 c3426.5537 -1122.5537 3430.0234 -1129.4746 3434.3193 -1135.9189 c3438.7441 -1142.5566 3443.9971 -1149.1074 3447.248 -1156.3945 c3448.9199 -1160.1426 3451.4414 -1163.4414 3453.7432 -1166.8555 C3451.5137 -1166.3594 3449.3496 -1165.5488 3447.4941 -1164.6768 c3444.2617 -1163.1563 3440.5098 -1162.4707 3437.125 -1161.2959 c3432.9844 -1159.8574 3428.9072 -1158.2363 3424.7813 -1156.7539 c3409.0684 -1151.1074 3392.2236 -1147.4297 3375.8525 -1144.2842 c3359.6641 -1141.1738 3343.3652 -1139.6436 3327.0059 -1137.8438 c3311.2988 -1136.1152 3296.0088 -1130.5029 3280.1074 -1134.0439 c3275.2383 -1135.1279 3273.9434 -1141.5645 3277.2402 -1144.9082 c3291.3438 -1159.2109 3301.9902 -1176.3867 3314.6875 -1191.8721 c3320.6797 -1199.1807 3327.5723 -1205.8203 3333.7764 -1212.9717 c3340.4727 -1220.6904 3347.0371 -1228.5234 3353.8926 -1236.1035 c3360.4043 -1243.3027 3367.3838 -1250.0566 3373.9268 -1257.2305 c3380.457 -1264.3906 3386.7754 -1271.7432 3393.541 -1278.6855 c3396.8906 -1282.1221 3401.4893 -1284.4932 3405.4063 -1287.2461 c3409.1484 -1289.877 3412.5547 -1292.7832 3415.8398 -1295.959 c3419.4131 -1299.4141 3423.748 -1302.2256 3427.7803 -1305.3232 C3427.3867 -1305.1934 3427.0107 -1305.0703 3426.6641 -1304.9648 c3421.3506 -1303.3477 3415.8965 -1302.4053 3410.4512 -1301.293 c3400.7314 -1299.3066 3391.0879 -1296.6309 3381.2715 -1295.2031 c3376.8662 -1294.5615 3372.4434 -1294.1563 3367.999 -1293.9189 c3365.9395 -1293.8086 3363.877 -1293.7686 3361.8145 -1293.7305 c3360.8057 -1293.7148 3359.7959 -1293.7051 3358.7871 -1293.7002 c3358.4609 -1293.6973 3354.1895 -1293.0859 3356.5684 -1294.1387 c3348.9883 -1290.7842 3339.918 -1291.1973 3331.7988 -1291.1934 c3328.5215 -1291.1924 3324.9473 -1294.1621 3325.2988 -1297.6934 c3325.9365 -1304.0977 3330.2129 -1308.6445 3334.7549 -1312.8574 c3340.0859 -1317.8008 3344.5811 -1323.3828 3349.8027 -1328.459 c3362.7441 -1341.0381 3376.667 -1352.6201 3390.0352 -1364.7422 c3396.7637 -1370.8438 3404.0781 -1376.4727 3410.3545 -1383.0293 c3416.5449 -1389.4961 3422.208 -1396.4658 3427.5391 -1403.6523 c3437.5371 -1417.1318 3445.251 -1432.5801 3457.0049 -1444.6816 c3460.9795 -1448.7754 3468 -1445.6943 3468 -1440.0859 c3468 -1439.2529 3468 -1438 Y3468 -1433.9277 3465.3379 -1431.7041 3462.4229 -1431.3174 C3453.4893 -1420.7832 3446.8418 -1408.1943 3438.7129 -1397.0908 c3433.7012 -1390.2441 3428.3945 -1383.626 3422.7334 -1377.3066 c3416.8125 -1370.6992 3409.9736 -1365.1982 3403.3721 -1359.2969 c3390.5273 -1347.8174 3377.7109 -1336.3164 3364.9336 -1324.7715 c3362.1113 -1322.2197 3359.3311 -1319.6309 3356.6338 -1316.9463 c3353.7119 -1314.0361 3351.3809 -1310.4756 3348.4297 -1307.6504 c3347.334 -1306.6025 3346.1895 -1305.6064 3345.0459 -1304.6074 C3345.1914 -1304.6191 3345.3369 -1304.625 3345.4824 -1304.6377 c3349.6201 -1305.002 3353.084 -1306.6875 3357.2813 -1306.6934 c3367.0518 -1306.708 3377.0176 -1306.9785 3386.5469 -1309.332 c3396.9961 -1311.9121 3407.5791 -1313.9639 3418.1299 -1316.0762 c3428.3438 -1318.1221 3437.2734 -1322.5996 3446.3125 -1314.7793 c3448.3594 -1313.0088 3448.918 -1309.1328 3447.3281 -1306.9033 c3442.3477 -1299.917 3435.4424 -1295.335 3428.8242 -1290.0508 c3425.3936 -1287.3105 3422.3867 -1284.1055 3418.9922 -1281.3203 c3414.7773 -1277.8604 3410.251 -1274.7832 3405.7334 -1271.7383 c3397.9336 -1266.4814 3391.8125 -1257.6963 3385.5596 -1250.7373 c3378.6465 -1243.0439 3371.2832 -1235.7988 3364.2686 -1228.2061 c3357.7578 -1221.1582 3351.5879 -1213.7979 3345.335 -1206.5225 c3338.792 -1198.9082 3331.6143 -1191.8154 3325.1289 -1184.1787 c3314.6299 -1171.8145 3305.7754 -1158.1611 3295.4189 -1145.71 C3306.5684 -1146.2422 3318.0215 -1149.8545 3328.7676 -1151.0371 c3345.3379 -1152.8604 3361.751 -1154.6133 3378.1152 -1157.9521 c3394.4648 -1161.2881 3410.9727 -1165.3926 3426.6152 -1171.2295 c3433.3711 -1173.75 3440.1982 -1176.0566 3447.0137 -1178.3525 c3452.7539 -1180.2852 3460.1699 -1181.4385 3465.9277 -1179.0547 c3468.9609 -1177.7988 3471.8164 -1174.6748 3470.4668 -1171.0596 c3468.5381 -1165.8906 3465.6719 -1161.4316 3462.6328 -1156.8594 c3459.4688 -1152.1006 3457.2734 -1146.9512 3454.1094 -1142.2051 c3450.541 -1136.8525 3446.9717 -1131.499 3443.4023 -1126.1455 c3439.8379 -1120.7979 3437.0107 -1114.9385 3433.4502 -1109.5508 c3426.7119 -1099.3564 3419.1709 -1089.7168 3412.3545 -1079.5737 c3405.623 -1069.5566 3399.4082 -1059.2031 3392.6348 -1049.2114 c3387.8076 -1042.0903 3382.7969 -1034.7959 3376.7412 -1028.6577 c3372.5811 -1024.4404 3368.541 -1020.105 3364.6318 -1015.6528 c3360.2754 -1010.6904 3356.1211 -1005.5479 3352.5996 -999.9526 c3351.9941 -998.9912 3351.4297 -998.0166 3350.918 -997.0542 C3364.4707 -1003.2446 3375.7832 -1015.8677 3386.2988 -1025.583 c3397.4434 -1035.8789 3414.1211 -1050.7627 3430.0078 -1041.002 c3433.127 -1039.0859 3434.0137 -1035.2983 3432.3398 -1032.1089 c3429.0264 -1025.7954 3424.2842 -1019.6333 3418.8584 -1015.0015 C3418.1309 -1014.4375 3417.4014 -1013.875 3416.6709 -1013.314 C3415.6572 -1012.666 3415.5391 -1012.5669 3416.3164 -1013.0161 C3414.9893 -1010.9551 3413.8584 -1008.7642 3412.7266 -1006.5928 c3410.1807 -1001.7114 3407.8477 -996.7773 3404.8604 -992.1392 c3398.9102 -982.8999 3393.875 -972.9141 3388.4219 -963.3706 c3382.7393 -953.4268 3376.7646 -943.6455 3371.9844 -933.2383 c3354.9922 -896.2476 3331.8242 -862.3213 3318.0811 -823.8193 c3316.0156 -818.0332 3308.6309 -818.3647 3306.0439 -822.1191 C3304.0391 -821.4854 3301.7354 -821.7314 3299.7227 -823.4492 c3283.5127 -837.2861 3266.1641 -849.3345 3246.8369 -858.4248 c3236.0039 -863.52 3225.5352 -869.5498 3214.8125 -874.9141 c3203.3906 -880.6289 3192.1826 -886.644 3181.2119 -893.186 c3171.1045 -899.2129 3161.1592 -905.5068 3151.0674 -911.5596 c3141.7402 -917.1548 3131.8555 -921.4492 3122.374 -926.7344 c3118.2734 -929.0195 3114.4395 -931.7578 3110.917 -934.8579 c3108.6924 -936.8164 3105.5117 -938.1626 3103.0273 -939.8237 c3097.1572 -943.7505 3089.9463 -948.3608 3086.3662 -954.6675 c3084.8076 -957.4126 3085.4941 -960.2241 3087.3828 -962.5444 c3094.8203 -971.6836 3107.2637 -972.2393 3118.0791 -973.311 c3132.9316 -974.7827 3147.7627 -978.5767 3162.3936 -981.5156 c3178.7412 -984.7993 3195.2324 -986.7637 3211.877 -987.6582 c3226.0332 -988.4189 3240.2246 -988.7266 3254.3125 -990.2549 C3252.9414 -991.9785 3251.748 -993.8379 3250.1563 -995.3677 c3245.1885 -1000.1421 3239.9141 -1004.5781 3235.0293 -1009.4434 c3232.6445 -1011.8169 3230.4277 -1014.3408 3228.3145 -1016.9561 c3226.0352 -1019.7744 3223.0322 -1022.0176 3220.3057 -1024.4072 c3214.2383 -1029.7246 3208.1895 -1035.0635 3202.1797 -1040.4468 c3178.6299 -1061.54 3157.0391 -1084.7363 3132.291 -1104.4707 c3120.4932 -1113.877 3107.2998 -1121.4766 3096.2813 -1131.8408 c3090.8896 -1136.9121 3073.0029 -1146.7813 3083.3174 -1155.7061 c3087.6191 -1159.4277 3093.4854 -1160.0625 3098.9512 -1159.875 c3105.043 -1159.665 3111.0508 -1159.3018 3117.1641 -1159.3018 c3132.0225 -1159.3018 3146.9121 -1159.0313 3161.7656 -1159.4619 c3165.2891 -1159.5635 3168.8037 -1159.8066 3172.3105 -1160.1582 c3176.0156 -1160.5303 3179.6211 -1161.7988 3183.3438 -1161.8008 c3187.5996 -1161.8027 3192.7861 -1161.3994 3197.3145 -1162.2695 C3195.8105 -1164.8164 3192.7188 -1167.9316 3191.3438 -1169.3896 c3187.5957 -1173.3672 3183.5459 -1177.1602 3179.3447 -1180.6494 c3165.7285 -1191.959 3151.9199 -1203.0371 3138.3525 -1214.4063 c3124.375 -1226.1172 3111.3535 -1238.916 3097.375 -1250.6289 c3094.4316 -1253.0938 3091.6367 -1255.7158 3088.6309 -1258.123 c3085.9434 -1260.2764 3083.1367 -1263.6006 3080.0977 -1265.1738 c3073.8184 -1268.4248 3067.4277 -1273.1973 3063.8828 -1279.4238 c3062.7363 -1281.4365 3062.6836 -1283.9756 3063.8828 -1285.9844 c3067.123 -1291.417 3071.8555 -1293.4453 3077.9492 -1294.0996 c3085.6729 -1294.9297 3093.2285 -1296.5625 3100.8672 -1298.0908 c3115.4814 -1301.0137 3130.1758 -1303.2813 3144.5957 -1307.0967 c3157.8682 -1310.6084 3171.1631 -1315.2588 3184.7334 -1317.4521 c3186.3828 -1317.7188 3192.4102 -1318.0557 3193.0547 -1318.9141 c3195.2461 -1321.835 3189.1973 -1330.7031 3187.6582 -1333.1455 c3180.6855 -1344.2168 3171.4404 -1354.96 3162.3066 -1364.293 c3151.835 -1374.9932 3142.4141 -1386.2949 3132.5293 -1397.5225 c3128.04 -1402.6221 3123.5205 -1407.6914 3119.2842 -1413.0059 c3117.3516 -1415.4297 3115.6299 -1416.9336 3113.0547 -1418.6523 c3110.3867 -1420.4336 3106.6064 -1422.5537 3105.6953 -1425.8682 c3102.502 -1437.4766 3117.3828 -1443.4355 3126.124 -1444.0664 c3129.3262 -1444.2979 3133.2129 -1446.2764 3136.3057 -1447.2285 c3139.9082 -1448.3379 3143.5049 -1449.4668 3147.1006 -1450.6016 c3154.0908 -1452.8066 3161.0645 -1455.0664 3168.0313 -1457.3457 c3182.4336 -1462.0576 3196.7461 -1466.9043 3211.3428 -1470.9912 c3222.4922 -1474.1133 3233.4121 -1476.0547 3244.7324 -1476.3701 C3245.2783 -1481.3564 3245.834 -1486.3496 3246.3066 -1491.3789 c3247.7344 -1506.5908 3247.8223 -1521.9063 3247.8525 -1537.1719 c3247.8809 -1551.3232 3249.2197 -1564.793 3252.4961 -1578.5869 c3255.8184 -1592.5752 3259.8643 -1606.418 3263.4004 -1620.3594 c3266.7119 -1633.417 3271.3447 -1646.5645 3273.6465 -1659.8223 c3275.5625 -1670.8535 3275.1748 -1683.3398 3281.2197 -1693.1797 c3285.5977 -1700.3076 3296.8457 -1693.7832 3292.4443 -1686.6191 c3289.6016 -1681.9902 3288.9541 -1676.2666 3288.1875 -1670.9844 c3287.1563 -1663.8691 3286.5947 -1656.7227 3284.6387 -1649.7832 c3280.3105 -1634.4268 3276.4297 -1618.9453 3272.5518 -1603.4717 c3268.624 -1587.8027 3263.3838 -1572.3574 3261.4961 -1556.249 c3259.6797 -1540.7637 3260.9824 -1524.7988 3260.4199 -1509.2197 c3260.0176 -1498.0674 3258.5684 -1487.083 3257.3369 -1476.0537 C3271.0488 -1475.0439 3285.0352 -1472.4785 3298.5684 -1475.5947 c3305.2148 -1477.125 3311.6611 -1479.416 3318.3096 -1480.9551 c3325.2207 -1482.5557 3333.0928 -1481.0557 3340.0313 -1480.1172 c3347.2373 -1479.1426 3354.3955 -1477.873 3361.5635 -1476.6582 c3364.9775 -1476.0791 3368.1953 -1474.4121 3371.4609 -1473.2432 c3375.1533 -1471.9229 3378.9229 -1470.8232 3382.7012 -1469.7773 c3396.4873 -1465.9629 3410.918 -1462.1885 3425.1631 -1461.3945 c3428.4355 -1461.2119 3431.7002 -1460.6455 3434.8857 -1459.8975 c3437.752 -1459.2246 3439.7588 -1459.292 3442.6875 -1459.5781 c3448.6143 -1460.1572 3454.0254 -1458.5527 3457.3213 -1453.3594 cf3841 -1825.8887 m3835.8867 -1828.3232 3830.7832 -1830.7715 3825.5996 -1833.0879 c3817.4941 -1836.709 3808.0625 -1838.3418 3799.4238 -1840.1758 c3761.9775 -1848.125 3723.0449 -1852.0781 3684.8262 -1852.8857 c3644.4033 -1853.7402 3603.9297 -1853 3563.5 -1853 C3504.1699 -1853 L3489.6895 -1853 3475.3047 -1851.0459 3460.793 -1850.707 C3460.8613 -1847.4863 3463.8848 -1842.4082 3464.8154 -1840.5352 c3467.1621 -1835.8125 3471.0313 -1831.501 3473.8896 -1827.0537 c3480.2764 -1817.1162 3482.5156 -1805.5371 3488.3711 -1795.3447 c3500.8066 -1773.6953 3511.5449 -1750.0781 3521.2617 -1727.0781 c3530.9375 -1704.1738 3534.5654 -1679.4102 3543.2656 -1656.2109 c3548.0137 -1643.5508 3552.8828 -1630.4775 3558.4414 -1618.1689 c3562.2637 -1609.707 3565.2393 -1600 3562.8984 -1590.7441 c3562.252 -1588.1875 3559.416 -1585.6523 3556.6309 -1585.9727 c3549.2842 -1586.8164 3542.6611 -1590.9561 3536.3623 -1594.5742 c3526.875 -1600.0244 3516.2627 -1601.8369 3505.7451 -1604.1348 c3496.1279 -1606.2363 3486.7422 -1609.8828 3477.0898 -1611.5439 c3473.4219 -1612.1748 3469.9443 -1613.6914 3466.2285 -1614.1152 c3465.1211 -1614.2412 3464.209 -1613.9463 3463.2334 -1613.707 C3463.1445 -1612.7109 3463.1914 -1611.7217 3463.3818 -1610.7412 C3467.4736 -1601.1348 3468.5088 -1591.6963 3475.4219 -1583.375 c3478.3477 -1579.8516 3482.0986 -1576.9531 3484.8008 -1573.2695 c3488.1729 -1568.6748 3491.2402 -1563.9141 3494.1689 -1559.0264 c3499.5947 -1549.9727 3504.2734 -1540.3936 3510.9033 -1532.1309 c3517.2783 -1524.1875 3524.3379 -1516.999 3529.7666 -1508.3184 c3535.8037 -1498.667 3543.6875 -1489.7588 3550.5215 -1480.6465 C3573.0039 -1450.6699 L3579.7734 -1441.6445 3584.9609 -1431.2803 3591.2207 -1421.8691 c3597.8945 -1411.8389 3606.1328 -1403.0723 3613.8828 -1393.8877 c3627.3604 -1377.916 3638.6641 -1359.8564 3651.2002 -1343.1055 c3663.2275 -1327.0352 3674.5645 -1310.3486 3680.957 -1291.1592 c3683.8164 -1282.5791 3686.0313 -1267.7783 3674.0273 -1265.2598 c3669.9512 -1264.4043 3665.6992 -1265.625 3661.8223 -1266.8164 c3654.7715 -1268.9834 3647.7754 -1271.293 3640.7754 -1273.626 c3624.6338 -1279.0068 3607.5576 -1283.1191 3591.957 -1289.8652 c3579.4092 -1295.291 3566.4678 -1305.3418 3552.2813 -1304.8701 C3557.0938 -1289.0283 3565.7158 -1273.4727 3573.792 -1259.4258 c3583.2021 -1243.0576 3591.8691 -1226.3711 3600.9297 -1209.8145 c3609.8398 -1193.5332 3619.0635 -1177.4297 3626.916 -1160.5977 c3635.127 -1142.998 3639.8574 -1124.4365 3646.4297 -1106.2451 c3652.9697 -1088.1406 3661.4082 -1070.6851 3670.9121 -1053.959 c3680.8838 -1036.4077 3690.0693 -1018.4395 3700.5898 -1001.1987 c3705.293 -993.4902 3710.3535 -986.0864 3715.7705 -978.8623 c3718.793 -974.832 3721.9414 -970.895 3725.0781 -966.9526 c3728.0869 -963.1714 3731.8018 -960.4932 3735.0352 -956.9736 c3739.7852 -951.8027 3741.1631 -944.8701 3744.9629 -939.147 c3749.2109 -932.7505 3751.9414 -926.478 3750.2578 -918.748 c3749.7031 -916.2021 3746.7021 -913.6313 3743.9902 -913.9761 c3737.9492 -914.7441 3732.5566 -918.5303 3726.5029 -918.9727 c3722.6787 -919.252 3718.6152 -921.3403 3714.7969 -922.1812 c3708.9541 -923.4678 3703.3105 -925.5127 3697.5361 -927.0708 c3676.6123 -932.7163 3655.6387 -937.2329 3635.1543 -944.498 c3626.4385 -947.5894 3617.9707 -952.7803 3609.0869 -955.127 c3606.4717 -955.8174 3608.2217 -950.6582 3608.6836 -948.4443 c3609.8213 -942.9971 3612.6328 -937.959 3615.3594 -933.1743 c3625.374 -915.5977 3634.6445 -897.4727 3637.8418 -877.2378 c3638.7227 -871.6626 3641.6738 -865.7412 3643.4629 -860.3755 c3645.3359 -854.7544 3647.21 -849.1338 3649.083 -843.5132 c3653.2412 -831.0381 3658.8584 -819.2837 3664.0879 -807.2324 c3673.25 -786.1157 3681.5664 -764.6499 3688.6143 -742.7329 c3692.0791 -731.96 3694.4531 -720.8359 3697.7754 -710.002 c3701.3672 -698.2871 3705.4238 -686.7173 3709.4238 -675.1377 c3713.2119 -664.1694 3716.0449 -652.4336 3720.5576 -641.7632 c3724.7461 -631.8594 3731.5332 -623.0386 3737.9482 -614.5029 c3751.5234 -596.4414 3761.502 -576.2397 3772.377 -556.5322 c3778.1875 -546.0005 3783.2246 -535.0513 3788.0869 -524.0566 c3793.1426 -512.625 3798.8789 -501.5386 3803.7363 -490.0283 c3808.1719 -479.5176 3811.3506 -468.501 3814.4951 -457.5527 c3817.6523 -446.562 3822.8936 -436.061 3826.3926 -425.1255 c3831.4697 -409.2617 3834.1045 -393.0562 3841 -378.3149 C3841 -355.4731 L3840.0078 -355.9102 3839.0801 -356.6069 3838.3027 -357.6152 c3825.7227 -373.9243 3822.127 -392.7407 3816.7246 -412.0776 c3814.084 -421.5259 3810.9346 -430.8164 3807.4258 -439.9751 c3803.4121 -450.4502 3800.1289 -460.9033 3796.6875 -471.5835 c3793.2246 -482.3291 3788.8457 -492.6465 3783.3438 -502.5063 c3777.6465 -512.7144 3773.9004 -524.4087 3768.833 -534.9819 c3759.2266 -555.0288 3748.3428 -574.7715 3736.5762 -593.6294 c3731.3057 -602.0757 3725.1455 -609.8052 3719.4238 -617.938 c3712.9375 -627.1577 3708.5527 -636.5728 3705.125 -647.2568 c3697.8945 -669.7988 3689.4766 -691.9385 3682.8037 -714.6611 c3676.166 -737.2627 3669.6318 -759.4097 3660.9043 -781.3511 c3651.9424 -803.8818 3641.4102 -825.4702 3633.7373 -848.4883 c3625.0684 -874.4961 3619.8945 -901.1216 3605.2578 -924.73 c3599.6426 -933.7856 3594.7383 -944.2109 3595.1846 -955.0835 c3595.5508 -964.0142 3602.2412 -969.6719 3611.0566 -967.9521 c3615.7695 -967.0332 3619.79 -964.8379 3624.1221 -962.8467 c3630.3672 -959.9751 3636.8408 -957.6196 3643.334 -955.3823 c3656.3809 -950.8882 3669.7393 -947.0283 3683.1689 -943.8716 c3695.6563 -940.9365 3707.9229 -936.9917 3720.4238 -934.2383 c3724.6934 -933.2983 3728.5498 -932.0088 3732.7197 -930.96 c3733.7686 -930.6963 3734.8359 -930.293 3735.9111 -929.8477 C3733.832 -933.6211 3730.6992 -937.3691 3729.543 -940.7168 c3726.9453 -948.2378 3720.6338 -951.8135 3715.8857 -957.7603 c3703.9385 -972.7246 3693.084 -988.0713 3683.4092 -1004.6074 c3664.5078 -1036.9111 3645.7109 -1070.0771 3632.9668 -1105.3564 c3626.4648 -1123.3516 3621.7188 -1141.4375 3613.4453 -1158.7998 c3605.4531 -1175.5703 3596.0234 -1191.625 3587.1523 -1207.9326 c3578.1123 -1224.5488 3569.2119 -1241.1484 3559.8604 -1257.5986 c3551.041 -1273.1133 3541.8223 -1290.958 3537.8721 -1308.4561 c3537.0947 -1311.8965 3538.875 -1315.4961 3542.4121 -1316.4512 c3550.6885 -1318.6875 3559.25 -1317.4795 3567.4834 -1315.6211 c3577.6992 -1313.3164 3586.6055 -1306.4502 3596.0967 -1302.1367 c3606.0488 -1297.6143 3617.0146 -1295.2344 3627.3691 -1291.7832 c3638.5752 -1288.0479 3649.7334 -1284.0488 3661.0576 -1280.6953 c3663.8242 -1279.876 3666.5332 -1278.9121 3669.335 -1278.2119 c3669.6006 -1278.1455 3669.8711 -1278.084 3670.1445 -1278.0332 C3670.1309 -1278.3672 3670.3428 -1279.0938 3670.29 -1280.4717 c3669.916 -1290.3633 3662.9941 -1301.4971 3658.2012 -1309.8135 c3647.7305 -1327.9814 3633.9336 -1344.0713 3621.7188 -1361.0488 c3615.4775 -1369.7246 3609.8477 -1378.584 3602.9336 -1386.7773 c3595.6143 -1395.4512 3587.9951 -1403.7773 3581.4951 -1413.1035 c3575.042 -1422.3633 3569.3125 -1432.1309 3563.5088 -1441.8027 c3557.2012 -1452.3125 3548.3857 -1461.9658 3541.0254 -1471.7793 c3527.6016 -1489.6777 3514.2012 -1507.374 3500.2178 -1524.7998 c3493.9053 -1532.666 3489.2402 -1541.6504 3484.1934 -1550.3408 c3481.749 -1554.5508 3479.1777 -1558.6729 3476.4521 -1562.7051 c3473.1563 -1567.5811 3468.4688 -1571.4863 3464.707 -1576.0156 c3459.9951 -1581.6865 3457.8506 -1587.5537 3455.0244 -1594.1885 c3452.2051 -1600.8076 3449.8984 -1608.2266 3450.3398 -1615.4219 c3451.0898 -1627.6338 3464.0547 -1628.0889 3473.4219 -1625.9063 c3487.7861 -1622.5605 3501.8516 -1618.1592 3516.3418 -1615.1504 c3524.0615 -1613.5479 3531.1885 -1611.1816 3538.4277 -1608.0371 c3542.0684 -1606.4551 3546.333 -1603.2295 3550.5469 -1601.0674 C3549.6855 -1606.1162 3547.002 -1610.9541 3545.3672 -1615.7256 c3541.3652 -1627.3975 3536.3174 -1638.6553 3531.7559 -1650.1113 c3523.71 -1670.3223 3520.0225 -1692.002 3512.9814 -1712.5703 c3509.6484 -1722.3047 3504.7168 -1731.2354 3500.8896 -1740.7402 c3496.6855 -1751.1807 3491.1201 -1761.0723 3485.9688 -1771.0596 c3481.4316 -1779.8555 3476.5732 -1788.7285 3472.6387 -1797.7852 c3468.5723 -1807.1475 3465.7354 -1815.9268 3460.0381 -1824.5361 c3455.5059 -1831.3848 3451.1816 -1837.5654 3448.876 -1845.5537 c3447.1816 -1851.4209 3448.2646 -1863.7734 3456.7051 -1863.7734 c3476.5693 -1863.7734 3496.1729 -1866.2715 3516.0361 -1866.2715 c3565.4326 -1866.2715 3614.832 -1866.4209 3664.2275 -1866.2471 c3685.8447 -1866.1709 3707.458 -1865.6631 3729.001 -1863.7734 c3748.3213 -1862.0791 3767.9141 -1858.7012 3787.0693 -1855.6211 c3805.8867 -1852.5957 3823.7051 -1848.2207 3841 -1840.2695 C3841 -1825.8887 Lf3841 -2097.3682 m3826.6611 -2095.6602 3813.4248 -2089.0488 3799.9951 -2084.0127 c3785.3887 -2078.5352 3770.833 -2072.2188 3755.9277 -2067.6221 c3751.9375 -2066.3916 3750.6113 -2066.5068 3750.4902 -2062.1201 c3750.4092 -2059.1641 3751.6797 -2056.1816 3752.4414 -2053.3652 c3753.4326 -2049.6943 3753.8809 -2045.7305 3754.5908 -2041.9893 c3757.5537 -2026.3809 3758.3125 -2011.166 3757.4746 -1995.3223 c3756.7188 -1981.0176 3756.541 -1966.3115 3754.8291 -1952.1191 c3753.0645 -1937.4883 3753.0146 -1922.6895 3752.9902 -1907.9746 c3752.9756 -1899.0371 3750.8643 -1888.916 3753.2383 -1880.2178 c3753.3027 -1879.9775 3753.875 -1879.0215 3753.582 -1879.3574 c3759.0625 -1873.0674 3749.9072 -1863.833 3744.3906 -1870.1641 c3738.041 -1877.4512 3739.1523 -1888.5713 3739.7422 -1897.5537 c3740.5977 -1910.5781 3739.9141 -1923.6963 3740.5635 -1936.7461 c3740.9043 -1943.5996 3741.5449 -1950.4365 3742.4844 -1957.2344 c3743.4756 -1964.3984 3742.9492 -1972.1309 3743.4355 -1979.3828 c3744.4609 -1994.6523 3745.8359 -2010.002 3744.1738 -2025.2725 c3743.3457 -2032.877 3741.7178 -2040.4082 3740.2207 -2047.9014 c3738.96 -2054.2109 3736.7871 -2060.1357 3737.8857 -2066.6855 c3739.8672 -2078.5098 3752.6055 -2080.0732 3762.0195 -2083.6035 c3777.1602 -2089.2813 3792.2998 -2094.959 3807.4404 -2100.6367 c3814.4795 -2103.2764 3821.2305 -2106.5176 3828.543 -2108.3691 c3832.6113 -2109.3994 3836.7949 -2110.0156 3841 -2110.4072 C3841 -2097.3682 Lf*u1 D1873.2959 -231.3813 m1881.2715 -230.0352 1889.2617 -228.7744 1897.2515 -227.5044 c1904.6704 -226.3252 1912.0791 -225.0903 1919.4683 -223.7354 c1924.9707 -222.7271 1928.1133 -221.7358 1932.5371 -220.2358 c1939.7871 -217.7773 1948.4551 -215.4585 1953.8662 -209.6997 c1961.2461 -201.8472 1954.1514 -192.3169 1945.5 -190.0244 c1937.4863 -187.9014 1928.8584 -190.5337 1920.9658 -191.9785 c1920.8921 -191.9922 1920.8389 -192.0024 1920.7773 -192.0142 C1920.7056 -192.0083 1920.5767 -192.0078 1920.3569 -192.0166 c1918.4419 -192.0918 1916.481 -192.4478 1914.5757 -192.6606 c1910.7202 -193.0913 1906.8657 -193.5332 1903.0127 -193.9863 c1895.3579 -194.8872 1887.7139 -195.8872 1880.0864 -196.9976 c1865.1514 -199.1724 1850.3955 -201.833 1836.1738 -206.9814 c1834.8247 -207.4697 1833.4795 -207.9673 1832.1357 -208.4663 C1830.2378 -207.75 1828.3657 -206.9585 1826.5371 -206.041 c1823.5552 -204.5444 1821.0508 -202.6787 1817.8369 -201.6675 c1814.1362 -200.5034 1810.2295 -200.0161 1806.377 -199.6919 c1799.1851 -199.0869 1792.0322 -199.3623 1784.8335 -198.4951 c1778.7915 -197.7676 1772.8271 -197.125 1766.7393 -196.9966 c1754.3018 -196.7334 1741.8892 -195.9214 1729.4429 -195.8247 c1714.0684 -195.7056 1697.9707 -195.7637 1682.9795 -199.5835 c1678.0391 -200.8423 1672.187 -202.9365 1668.9185 -207.0952 c1664.5415 -212.665 1665.1631 -219.3267 1669.478 -224.7847 c1675.1074 -231.9053 1684.9517 -234.7915 1693.5244 -236.3066 c1697.5122 -237.0112 1701.7119 -236.8408 1705.6455 -237.6343 c1712.5308 -239.0239 1719.3867 -240.5093 1726.3525 -241.4458 c1739.1729 -243.1689 1752.3154 -242.6357 1765.2705 -242.5127 C1764.3364 -242.8638 1763.4893 -243.4507 1762.8325 -244.3135 C1761.8716 -244.8296 1760.918 -245.3633 1759.9814 -245.9375 c1750.2476 -251.9077 1743.4883 -259.9863 1740.1348 -271.0391 c1736.8037 -282.0156 1740.4351 -292.2871 1749.4126 -299.1392 c1757.9985 -305.6919 1771.0771 -305.272 1781.2725 -305.0967 c1787.1777 -304.9951 1793.0996 -305.0386 1799 -304.7896 C1799 -315.9287 L1799 -321.8887 1803.7217 -327.3296 1803.9678 -333.4155 c1804.3057 -341.7686 1817.293 -341.8018 1816.9536 -333.4155 c1816.7051 -327.269 1814.4043 -321.7451 1812.3691 -316.0239 c1811.1963 -312.7236 1812 -308.1504 1812 -304.687 C1812 -302.8032 L1816.0298 -301.7637 1819.9941 -300.4355 1824.0332 -299.0889 c1826.8779 -298.1406 1829.689 -297.1982 1832.4678 -296.2314 C1830.2412 -303.7139 1830.3369 -311.8564 1835.8208 -318.0269 c1841.4004 -324.3052 1850.5615 -315.0771 1845.0132 -308.8345 c1842.4624 -305.9644 1844.6211 -299.6797 1846.0293 -296.7261 c1847.0156 -294.6577 1846.8804 -292.6616 1846.0967 -291.0083 C1852.3037 -288.3311 1858.3145 -285.2124 1864.104 -281.2144 c1872.915 -275.1299 1882.563 -268.0684 1885.7568 -257.3188 c1889.0977 -246.0742 1882.1563 -237.2651 1873.2959 -231.3813 Cf0 D1849.1113 -216.6382 m1854.6885 -214.9722 1860.3379 -213.5293 1866.1982 -212.4155 c1888.2422 -208.2261 1910.6597 -206.8247 1932.7139 -202.894 c1935.7178 -202.3584 1939.0283 -201.9663 1942.043 -202.5601 C1936.9385 -205.6514 1930.7285 -207 1925.2148 -209.0596 c1920.5264 -210.8101 1915.3716 -211.3306 1910.3867 -212.2139 c1903.6519 -213.4067 1896.896 -214.479 1890.1411 -215.5483 c1877.124 -217.6099 1864.1099 -219.6665 1851.1797 -222.2266 c1850.8247 -222.2969 1850.499 -222.3945 1850.1875 -222.5034 C1849.4722 -222.3857 1848.751 -222.291 1848.0293 -222.1982 C1849.1104 -220.5781 1849.5303 -218.501 1849.1113 -216.6382 Cf1723.0459 -227.8696 m1716.7998 -226.7954 1710.4116 -224.6362 1704.0713 -224.4653 c1699.7217 -224.3477 1695.4424 -223.6045 1691.231 -222.5439 c1687.2017 -221.5293 1683.0327 -220.0444 1679.9795 -217.1294 c1679.2725 -216.4546 1679.0845 -216.2798 1678.916 -215.7485 C1678.957 -215.6299 1678.9741 -215.3994 1678.9048 -215.3779 C1679.0303 -215.2549 1679.1577 -215.1333 1679.2852 -215.0137 C1679.2876 -215.0117 1679.2886 -215.0103 1679.291 -215.0083 C1679.3486 -214.9712 1679.4165 -214.9268 1679.499 -214.8711 c1679.9365 -214.5762 1680.4023 -214.3262 1680.8647 -214.0742 c1682.5327 -213.166 1684.9097 -212.4785 1687.8516 -211.7676 c1694.6631 -210.1216 1701.667 -209.6191 1708.6592 -209.2344 c1724.1069 -208.3857 1739.6191 -208.8765 1755.0645 -209.5264 c1765.0342 -209.9458 1774.9141 -210.2617 1784.8335 -211.4951 c1794.6455 -212.7153 1804.8086 -211.5674 1814.3813 -214.2031 c1814.5376 -214.2461 1814.6938 -214.3062 1814.8501 -214.3623 C1809.374 -215.8755 1803.7847 -216.9131 1797.9487 -216.998 c1793.4404 -217.0635 1791.3633 -220.8574 1791.7085 -224.3286 C1790.564 -224.6206 1789.4214 -224.9268 1788.2822 -225.2617 c1785.3232 -226.1318 1782.4033 -227.1362 1779.4648 -228.0732 c1775.4038 -229.3687 1771.8535 -229.4888 1767.6001 -229.4888 c1752.7793 -229.4888 1737.708 -230.3911 1723.0459 -227.8696 cf1873.4043 -253.1079 m1872.7842 -256.3999 1870.5688 -259.0293 1868.2964 -261.3701 c1862.9023 -266.9268 1856.0283 -271.0728 1849.627 -275.3428 c1844.4321 -278.8076 1837.6782 -280.853 1831.8193 -282.8057 c1824.9375 -285.0996 1818.063 -287.7104 1811.0762 -289.7354 C1808.2866 -285.4824 1800.0645 -286.1973 1799.1006 -291.8765 C1799.0674 -291.8784 1799.0337 -291.8789 1799 -291.8809 c1794.8667 -292.0811 1790.6826 -291.9155 1786.6133 -291.9839 c1780.75 -292.082 1774.9004 -292.2856 1769.0439 -291.8872 c1760.3882 -291.2983 1750.335 -287.3818 1752.085 -276.9609 c1753.019 -271.3994 1755.5225 -266.9673 1758.9629 -263.3169 C1758.4028 -272.3423 1759.7964 -281.397 1765.873 -288.0493 c1771.5381 -294.2515 1780.7056 -285.0322 1775.0654 -278.8569 c1769.6587 -272.9375 1771.6128 -261.4746 1773.4683 -253.4326 C1783.582 -248.6567 1794.625 -246.4214 1804.5195 -241.0303 c1808.3242 -238.9575 1812.2744 -236.6465 1816.3672 -234.6758 C1817.5811 -238.6318 1823.1914 -241.6299 1827.5264 -238.0869 c1831.3848 -234.9336 1839.1523 -234.6055 1845.02 -235.0439 c1852.292 -235.5874 1859.6323 -238.0015 1865.8428 -241.7935 c1868.1104 -243.1782 1870.5225 -245.27 1871.7896 -247.0947 c1873.2563 -249.2075 1873.728 -251.3926 1873.4043 -253.1079 cf*U3065.417 -214.0806 m3078.793 -208.564 3090.8027 -200.4902 3104.3096 -195.2095 c3107.2061 -194.0776 3110.0801 -192.896 3112.9951 -191.814 c3114.29 -191.334 3115.6035 -190.9219 3116.9268 -190.5283 C3117.3223 -190.4263 3117.7188 -190.3237 3118.1152 -190.2217 C3119.4531 -189.9277 3119.5967 -189.9087 3118.5439 -190.1641 C3124.4014 -192.9785 3128.9219 -198.7524 3133.7949 -202.9199 c3139.3135 -207.6396 3145.4736 -211.7378 3151.2822 -216.0942 c3158.0869 -221.1973 3164.7715 -226.5342 3171.8496 -231.252 c3175.0615 -233.3931 3178.2734 -235.5342 3181.4854 -237.6758 c3183.7568 -239.1899 3188.3301 -241.0962 3189.8594 -243.3359 c3193.875 -249.2202 3198.7148 -254.46 3203.7236 -259.4985 c3208.3281 -264.1299 3214.041 -267.6177 3218.6836 -272.3413 c3223.5742 -277.3184 3227.9141 -282.8237 3232.1953 -288.3223 c3241.2764 -299.9863 3250.2178 -311.75 3258.1689 -324.2251 c3265.7539 -336.127 3270.207 -349.9814 3279.7383 -360.4951 c3280.8154 -361.6831 3282.0215 -362.3052 3283.2275 -362.4956 C3274.5908 -373.0264 3265.8281 -383.4429 3255.9609 -392.8711 c3233.958 -413.8945 3213.7832 -436.5947 3192.7012 -458.4951 c3186.8799 -464.5425 3181.3828 -470.8442 3176.2988 -477.5244 c3171.2188 -484.1987 3182.5176 -490.6631 3187.5234 -484.0859 c3196.8838 -471.7891 3208.5498 -461.5479 3218.7227 -449.979 c3228.5557 -438.7964 3238.9365 -428.1084 3249.4131 -417.5322 c3259.7842 -407.062 3270.6426 -397.1284 3280.3799 -386.0479 c3290.0068 -375.0928 3298.9404 -363.5479 3308.3955 -352.4458 c3317.8516 -341.3413 3327.5801 -331.5962 3339.5615 -323.2446 c3351.9531 -314.6064 3363.4688 -305.5454 3374.3203 -295.0088 c3379.4727 -290.0068 3384.4326 -284.8179 3389.7754 -280.0171 c3395.2129 -275.1323 3400.5449 -270.3022 3405.1592 -264.6055 c3410.3242 -258.2275 3415.7881 -250.9385 3422.1826 -245.5977 C3422.0352 -251.0278 3419.8877 -257.0073 3418.9131 -261.6411 c3417.3398 -269.1201 3417.4316 -276.9966 3417.332 -284.6138 c3417.2314 -292.375 3417.8848 -300.8447 3422.2012 -307.5298 c3426.3555 -313.9653 3434.3662 -315.0283 3441.2275 -312.8232 c3454.0625 -308.6982 3463.4727 -295.9658 3470.7764 -285.3286 c3476.1279 -277.5347 3482.7305 -270.5464 3488.3545 -262.9326 c3489.3516 -261.5825 3492.5234 -255.9663 3495.1104 -253.4502 C3498.0664 -263.1777 3499.2598 -276.5566 3512.5449 -275.0742 c3520.7256 -274.1616 3528.8164 -268.3359 3535.207 -263.4873 c3538.0039 -261.3647 3540.8057 -259.3271 3542.9033 -256.4741 c3543.2598 -255.9893 3543.5957 -255.4946 3543.9219 -254.9951 C3544.4805 -257.1172 3544.9072 -259.2866 3545.5215 -260.6465 c3546.8545 -263.5967 3547.4688 -266.9761 3548.8105 -269.9849 c3550.1484 -272.9849 3551.6641 -275.8594 3553.3311 -278.689 c3560.0811 -290.1479 3567.6602 -300.5913 3575.9727 -310.9624 c3583.6943 -320.5952 3588.2686 -333.8936 3598.3145 -341.5264 c3609.1855 -349.7852 3618.6738 -359.3672 3627.4199 -369.7769 c3631.5186 -374.6558 3635.9277 -379.2734 3640.375 -383.834 c3642.4287 -385.9404 3645.3877 -388.082 3646.7549 -390.7148 c3648.3359 -393.7607 3650.29 -396.6143 3652.2354 -399.4341 c3655.8008 -404.6016 3659.5645 -409.5806 3662.623 -415.0786 c3666.0293 -421.2002 3668.6191 -427.7266 3672.1758 -433.811 c3678.5693 -444.7446 3683.8682 -456.0229 3689.71 -467.2466 c3694.8818 -477.1841 3700.3643 -486.9717 3705.1914 -497.0815 C3704.7119 -498.9736 3705.1113 -501.0815 3706.918 -502.8882 c3707.75 -503.7207 3708.583 -504.5537 3709.416 -505.3862 c3715.0039 -510.9746 3722.417 -503.9341 3719.624 -497.5093 c3713.9004 -484.3418 3706.751 -471.8604 3700.1289 -459.1377 c3697.0576 -453.2354 3694.4707 -447.1025 3691.4482 -441.1875 c3688.2363 -434.9004 3684.332 -428.9736 3680.8594 -422.8301 c3677.3828 -416.6792 3674.9473 -410.0513 3671.2168 -404.0493 c3667.3115 -397.7686 3662.5928 -392.0513 3658.8262 -385.6738 c3655.4688 -379.9902 3650.6123 -375.7632 3646.0449 -370.9995 c3640.8252 -365.5542 3636.4658 -359.0923 3631.1738 -353.8008 c3626.3301 -348.959 3621.459 -344.1582 3616.3438 -339.6011 c3610.4453 -334.3442 3604.4258 -330.1172 3599.8174 -323.5825 c3596.1934 -318.4443 3593.168 -312.9067 3589.7217 -307.6519 c3585.4189 -301.0913 3579.7383 -295.4102 3575.1387 -289.0488 c3567.209 -278.0815 3560.7646 -266.0874 3556.5664 -253.2617 c3554.9336 -248.2744 3553.8867 -243.0962 3549.7324 -239.4961 c3544.6631 -235.103 3539.5381 -237.3706 3536.2578 -242.3506 c3535.0635 -244.1646 3534.1309 -246.1597 3533 -248.0161 c3531.9258 -249.7803 3530.4141 -250.5664 3528.9414 -251.9492 c3525.2559 -255.4092 3520.3379 -258.0483 3515.877 -260.3535 c3514.377 -261.1294 3512.9395 -262.001 3511.2617 -262.1528 C3511.1455 -262.0635 3510.9824 -261.9053 3510.7998 -261.6064 c3509.0615 -258.769 3508.5811 -254.4766 3507.7588 -251.1284 c3506.7871 -247.1704 3505.4834 -240.8398 3500.9004 -239.7139 c3495.4863 -238.3833 3491.125 -240.4395 3487.001 -243.8335 c3483.5781 -246.6504 3481.0137 -250.7051 3478.5391 -254.3325 c3475.9912 -258.0684 3472.0449 -263.1714 3468.3457 -267.6152 c3461.9434 -275.3066 3456.6055 -283.8389 3449.7383 -291.1318 c3446.5898 -294.4766 3443.167 -297.4482 3439.1299 -299.6626 c3435.8965 -301.4365 3433.334 -301.812 3432.0137 -298.4282 c3430.1592 -293.6714 3430.2852 -288.271 3430.3506 -283.2559 c3430.416 -278.2046 3430.2158 -272.7598 3430.957 -267.7598 c3432.7305 -255.7866 3437.5908 -244.5195 3432.3398 -232.708 c3431.4844 -230.7832 3428.7793 -229.3491 3426.7275 -229.4888 c3417.1348 -230.1426 3410.0146 -239.0835 3404.1816 -245.8262 c3396.6143 -254.5737 3389.248 -263.104 3380.584 -270.8247 c3369.2822 -280.8945 3359.2451 -292.2271 3347.4141 -301.7344 c3336.3066 -310.6606 3323.5713 -317.3896 3313.4678 -327.5752 c3305.2627 -335.8472 3297.7725 -344.7573 3290.3857 -353.7573 C3290.1113 -352.9155 3289.6387 -352.085 3288.9297 -351.3027 c3284.8594 -346.8125 3282.6348 -342.6152 3280.5518 -337.8325 c3277.7734 -331.4531 3274.0635 -325.2129 3270.416 -319.2944 c3262.834 -306.9907 3254.0566 -295.4648 3245.2031 -284.063 c3236.9307 -273.4087 3228.7432 -262.7188 3218.0742 -254.3135 c3212.9746 -250.2954 3208.5537 -246.0562 3204.3506 -241.0781 c3202.1563 -238.479 3200.5391 -234.7788 3197.6816 -232.874 C3186.4404 -225.3799 L3172.832 -216.3076 3159.8828 -206.3979 3146.7998 -196.5859 c3137.7998 -189.8359 3128.2246 -175.6982 3115.7715 -177.4556 c3110.1582 -178.248 3104.6357 -181.1953 3099.4063 -183.2397 c3092.4668 -185.9531 3085.8271 -188.8735 3079.2773 -192.4536 c3073.0273 -195.8696 3066.8711 -199.52 3060.2734 -202.2417 c3055.5195 -204.2021 3051.625 -209.1904 3047.166 -211.9521 c3045.416 -213.0366 3043.6104 -213.9082 3041.6543 -214.5371 c3041.1895 -214.6865 3040.8096 -214.7671 3040.4316 -214.8149 C3040.4502 -214.4893 3040.4707 -214.1641 3040.5107 -213.8394 C3040.9277 -208.6045 3041.0215 -203.4692 3041.0215 -198.2075 c3041.0215 -189.8911 3042.8906 -181.3125 3041.748 -173.0669 c3040.3232 -162.7744 3031.5781 -163.165 3023.8086 -166.2227 c3020.1387 -167.667 3016.5547 -169.3818 3013.2041 -171.4658 c3012.8076 -171.7178 3012.4199 -171.9824 3012.042 -172.2607 c3009.6172 -173.9858 3010.3164 -172.9224 3011.0449 -172.7295 c3007.4512 -173.6787 3003.9492 -174.9897 3000.4648 -176.272 c2997.5234 -177.354 2994.5967 -178.4717 2991.6475 -179.5313 c2988.3965 -180.6992 2984.2461 -181.1729 2981.2773 -182.9116 c2978.332 -184.6372 2975.3223 -187.2095 2971.2656 -187.6694 C2971.0078 -187.7188 2970.752 -187.7388 2970.498 -187.731 C2970.4785 -187.5322 2970.4609 -187.2798 2970.4492 -186.9629 c2970.3633 -184.5317 2970.8545 -182.0581 2971.0391 -179.6377 c2971.2275 -177.1812 2973.0596 -174.124 2973.9648 -171.8315 c2975.2422 -168.5962 2976.5352 -165.373 2977.7119 -162.0991 c2980.4482 -154.4849 2987.1523 -147.0264 2984.7236 -138.3687 c2981.9434 -128.4526 2969.6621 -130.3325 2962.4863 -134.6729 C2953.1738 -135.3906 2945.1689 -139.0767 2936.2988 -141.9297 c2926.5723 -145.0576 2916.7793 -147.979 2907.0283 -151.0298 c2886.7461 -157.3765 2866.7324 -165.689 2847.3818 -174.4658 c2837.5596 -178.9214 2827.7754 -183.458 2817.8662 -187.7207 c2808.2236 -191.8687 2798.2705 -195.1479 2788.5508 -199.0728 c2770.043 -206.5459 2751.0918 -212.353 2733.9629 -222.8813 c2726.8369 -227.2622 2733.3613 -238.5098 2740.5254 -234.1069 c2765.8467 -218.5415 2795.5117 -211.2607 2822.7012 -199.6807 c2851.8164 -187.2808 2880.2256 -173.0869 2910.4844 -163.5654 c2924.4287 -159.1782 2938.3447 -154.9365 2952.0527 -149.9185 c2955.4785 -148.6646 2959.0723 -147.895 2962.7021 -147.6108 c2966.082 -147.3457 2967.6621 -146.4438 2970.5088 -144.877 c2970.8867 -144.6685 2971.332 -144.4946 2971.7891 -144.3564 C2971.3711 -145.543 2970.7666 -146.7139 2970.3223 -147.6836 c2965.3174 -158.606 2959.0449 -169.9536 2957.8281 -182.0142 c2957.333 -186.9302 2956.9053 -192.9351 2960.7646 -196.7622 c2965.1709 -201.1313 2970.9395 -201.2036 2976.6406 -199.7598 c2979.1895 -199.1147 2981.6748 -197.9204 2984.0078 -196.7354 c2984.9375 -196.2632 2985.8066 -195.6914 2986.667 -195.106 C2986.8857 -194.938 2987.1045 -194.77 2987.3232 -194.6016 C2988.7949 -193.2974 2989.0371 -193.2056 2988.0498 -194.3267 C2995.8691 -192.2612 3003.3066 -188.8706 3010.9746 -186.3281 c3013.9707 -185.334 3017.0615 -185.001 3019.4746 -182.8184 c3018.4316 -183.7612 3020.4668 -182.2549 3020.4658 -182.2554 C3021.5654 -181.5718 3022.7178 -180.9731 3023.8652 -180.376 c3025.6045 -179.4697 3027.3848 -178.6899 3029.2227 -178.0132 C3029.2617 -180.5244 3028.876 -183.1045 3028.6182 -185.4771 c3028.0967 -190.2773 3028.0215 -194.9258 3028.0215 -199.7656 c3028.0215 -205.2876 3027.4043 -210.7939 3027.4131 -216.2798 c3027.4238 -223.1309 3032.7578 -227.0962 3038.9902 -227.8745 c3043.998 -228.5 3049.5703 -225.5869 3053.7275 -223.1777 c3056.1563 -221.77 3058.4219 -220.0537 3060.623 -218.3184 c3061.6074 -217.5415 3062.5762 -216.751 3063.5322 -215.939 c3063.9375 -215.5947 3066.8193 -213.5024 3065.417 -214.0806 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF