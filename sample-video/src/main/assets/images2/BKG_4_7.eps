%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 4.eps)%%CreationDate: 03.10.18 22:49%%Canvassize: 16383%%BoundingBox: -1 -2160 3841 4%%HiResBoundingBox: -0.372559 -2159.9268 3840.0117 3.29004%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -702.4429 327.3223 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5400 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFCFFD54FFCFFD29FFCACFFD54FFCFFD28FFCFCFFD51FFC9FF%FFFFCACFFD26FFC9CFFD52FFCFCFFFFFFFC9FD26FFCFCFFD53FFCFCFFFFF%CFCAFD23FFCACFC9FD54FFCFCFFFFFCFCFFD1CFFCFFD06FFCECFFD42FFCF%CACFCFFD10FFCACFFFFFC9FD19FFCACFC9CFFD06FFC9FD3AFFCFCACFCAFD%04FFCFC9FFC9CFFD11FFCAFFFFCFCFFD17FFCFCFCFFD08FFCFFD38FFCFCF%CAFFCFCFC9CFFFFFCAFFFFCFFD13FFC9FFCACFFD12FFCFFFFFFFC9CFFD0A%FFCAFD36FFCFC9CFCFFFCFFFFFFFCACFCAFFFFCFCAFD14FFC9FFCAFD0FFF%CACFCACFCACFC9CFFD04FFCFFD05FFC9FD37FFC9CFCACFCFCFC9CFCFFFC9%CFFFCFC9FFCFFFCFFD12FFC9C9CAFD0DFFCFFFCAFD06FFCFC9CFC9CFC9CF%CACFC9FD3BFFCACFCACFC9CEC8C9C9CFC9CFCACFCACFC9CFCFFD10FFC9FD%17FFCAFD05FFCFFFCFFD39FFCFCFC9CFCFFFCFCFC9CFC9CEC9CFCAFFCFFF%CFFFCFCFCFFD10FFCFFD0CFFCFCFFD07FFC9FD3FFFCACFC9CFCFFFFFFFCA%CFCAFFFFC9C8FFC9C9C9CFCFCFCACFC9CFFD1DFFC9CFCFFD04FFCFC9FD3E%FFCFC9FD05FFCFCFC9FD04FFCFCACFC9FFFFFFC9CFCFFD20FFCACFCFCFC9%CFC9CFCAFD3DFFCACECAFFCACFCACFC8CECAFD04FFC9C9FFCACFC9FFFFFF%CACFC9FD1FFFCFFD46FFCFCFCACFCFFFC9CFFD04FFCFCFC9FFFFCFFFFFC9%FD05FFC9FD6AFFC9CFFD04FFC9CFFFCFCAFFCAFFFFCFC9FD04FFCFC9FD68%FFC9FD05FFC9CFFFFFCAFFFFCFCFFFFFCFC9FD04FFCFCFFD66FFC9FD04FF%CFC9FFFFFFCACFFFFFCACFFFFFCAC9C9CFCAFFCFCFFD65FFC9FD04FFCFCF%FD04FFCFCFFFFFFFCFFFFFFFC9FD04CFFFC9FD13FFCFCACFCAFD4DFFCACF%FFFFCACFCFFD05FFC9FFFFFFCACFFFFFFFCFC9CFFFFFCACFFD09FFCAFD09%FFC9CFCAFD4EFFCFFFFFCACFFD06FFCFCFFFFFFFCFC9FFFFFFCAFFC9FD0A%FFCACFC9CFC9CFFD06FFCACFFD50FFC9CFC9CFFD07FFCFCFFFFFFFC9CFCA%FFFFCFCACFCAFD09FFCFFD04FFCFCFCFFFFFFFCFCFFD5CFFCFFFFFFFCFCF%CAFFFFFFCAFFFFCFFD08FFCFCAFD05FFCFCFC9CFC9CFCFFD5BFFCACFFFFF%FFCFCFCFCAFFFFCFC9FFC9FD08FFC9FD09FFCFFD5EFFCFCAFFFFFFC9FFFF%CFFFFFFD05CFFD04FFC9CFC9FD69FFCACFFFFFC9FFFFFFC9FFFD04CFCACF%FD70FFCFCFFFCFCFFD04FFCACFCFFFCAFFCFFD70FFC9FFFFCFCFFD04FFCE%C9FFFFCFC9CFFD6FFFCFCFFFCFCAFD09FFCFCFCAFD70FFC9CFCAFD0BFFC9%CFCAFD7DFFCFC9FD77FFCFCAFD05FFCACFCAFD76FFC9CFFD05FFCFCAFD76%FFCACFC9FD05FFC9CFCAFD76FFCFCFFD05FFCFCFFD76FFC9FFCAFD05FFCA%CFCAFD75FFCFFFCFCFFD04FFCFCAFD76FFC9FFCAFD05FFC9CFCAFD74FFCF%CFFFFFCFFD04FFCFCFFD75FFCFCAFFCACFFD04FFC9CFCAFD74FFC9FFFFFF%CAFFFFFFCFFFCFFD72FFCACFC9C9C9CFCAC9C9FFFFCFCACFCAFD71FFCFC9%FD06FFCFCFFFC9FFCFFD73FFCFC9CFCACFCACFCAFFCFCFFFCFCFFFCFFD78%FFCFCFCFFFC9CFCACFCFFD72FFCACFC9CFCACFC9FFCFCFFD73FFCAFD04CF%FD04FFCFFFFFCAFD70FFCACFC9CFCFFD06FFCFCAFFCACFFD1FFFCFCFCAFD%4DFFCACFCFFD09FFCAFFCFCFFD1DFFCACFC9CFCACFCAFD49FFCFCFC9CFFD%0AFFCACFC9CFCAFD10FFCFFFCFFFCFFD05FFCFCFCACFFD4EFFCFCFCFFD0D%FFCFFD0EFFCACFC9CFC9CFCACFCACFCACFC9CFC9CFCAFD4FFFC9CFFD1DFF%CFCFCFFD5DFFC9FD7DFFCFC9FD05FFCFFFCACFCAFD05FFC9CFC9CFCAFFCA%CFC9CFC9CFFD63FFCFFFFFFFFD04CFCAFFCFCFC9CFCFCFC9FFFFFFCFFFCF%CFCFFD65FFCFCAFFCACFC9CFCAFD07FFCACFCFFD6DFFCFCFFD69FFCFC9CF%CAFD10FFCFCAFD6AFFCFFFCFCFFD28FFCFFFCFFD05FFCFCFFD41FFCACFCA%FD06FFCFCAFFC9CFCFFD19FFCFFFCFFFCFFFFFFFCFCFCACFC9CFCACFC9CF%CACFC9CFCFCACFCAFD3BFFFD05CFFFCACFFD05FFCFCFFFCACFCFFD05FFCF%FFCFCFCFFD07FFCFFFCFCFC9CFCFFFCACFCACFCACFCACFCAFD07FFCFFD07%FFCFC9CFCACFC9CFC9CFCAFD05FFCFFFCAFD29FFCAC9CAFD05FFCACFFD04%FFCACFFFFFCACECAFFCACFC9CFC9CFCACFC9CFC9CFC9CFC9CFC9CFCAFFCA%FD07FFCAFD16FFCFFD04FFCFCAFD05CFC9FD2AFFCFFD08FFCAFD05FFCFFF%C9CFFFFFCFCFCFFD38FFCACFCAFD2CFFCFCAFFFFFFCFFD05FFC9FFFFFFC9%FFC9FD16FFCFC9CFC9CFFD0AFFCACFCFFD46FFC9FFFFFFC9CEFD06FFC9CF%CFFFCAFD16FFCFC9FFFFFFC9CFFD08FFCAFD04CFFD2AFFCACFCACFCACFCA%CFCAFD06FFCFC9CFC9CFCAFD06FFCFCAFFFFCFCAFD07FFCAFFCACFFD15FF%CFCAFD05FFCACFCAFD05FFCACFFFFFFFCFCAFD24FFCFFFCFCFCACFCFFFCF%FFCFFFFD04CFCACFCFCFCAFFFFFFCFCFCFFD05FFC9FD05FFCFFFCFFD05FF%CFFD16FFCFCFFD08FFCFCFFD04FFCFFD05FFCFCAFD0EFFCACFCAFFCFFD07%FFCFCFC9CFCACFC9CFC9CFCAFD0FFFCAFD0BFFCACFC9CFC9CFCACFCACFCA%CFC9CFCACFCAFFCACFC9CFFD12FFC9FD0AFFCFCAFFFFCFCAFD06FFCFC9FF%CFCFC9FD06FFCFCFC9CFCFCFCACFCACFC9FFCACFC9CFCFFD24FFCFCFFFFF%FFCFFD07FFCFFD19FFCAFD0CFFCFCACFCFFD12FFC9CFCFFD07FFCFFFCAFF%CFFD4DFFCACFFD0EFFCAFD0EFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Layer 6) Ln0 Au0 O0.001923 0.157961 0.589929 0 1 0.839216 0.498039 Xa0 J 0 j 1 w 10 M []0 d0 XR183.9268 -99.8721 m187.0215 -107.1221 190.9702 -114.0957 194.4951 -121.1455 c200.9077 -133.9692 207.1313 -146.2559 217.0254 -156.8472 c219.4858 -159.4814 221.7466 -162.2979 224.1904 -164.9551 c226.3853 -167.3418 229.4287 -169.5742 231.1807 -172.3037 c234.9541 -178.1826 240.812 -182.2998 244.1777 -188.4268 c247.6826 -194.8066 250.937 -201.2495 254.6313 -207.5322 c258.5322 -214.166 261.5928 -221.2461 265.6514 -227.7764 c273.2427 -239.9912 281.1035 -251.4014 291.2456 -261.6548 c295.9219 -266.3823 300.2402 -270.8667 305.5698 -274.9185 c311.3359 -279.3027 315.3853 -285.5566 320.0293 -291.0298 c329.8027 -302.5464 340.1274 -313.5342 349.228 -325.5703 c353.377 -331.0576 357.5137 -336.541 362.3252 -341.4722 c367.3755 -346.6475 373.4316 -350.3955 378.543 -355.5068 c385.0957 -362.0596 392.1025 -367.8306 399.0337 -373.9536 c405.5737 -379.731 412.0479 -385.5752 419.2656 -390.5186 c423.4229 -393.3662 429 -389.5645 429 -384.9058 C429 -383.8145 L429 -381.71 428.1919 -380.1392 426.9775 -379.0928 C425.918 -373.8047 426.3887 -368.2095 425.1997 -362.8984 c423.6035 -355.7695 421.7217 -348.7393 418.9722 -341.9609 c413.3022 -327.98 408.8408 -313.4595 405.2788 -298.7876 c404.4561 -295.3999 402.9253 -292.2383 402.0303 -288.8423 c401.1274 -285.4155 400.4697 -281.9824 399.478 -278.582 c398.5186 -275.2905 398.147 -271.8013 397.5 -268.4404 c396.7139 -264.353 395.3477 -260.3838 394.4575 -256.3125 c391.1318 -241.1001 388.3433 -225.9282 383.5161 -211.0791 c373.6729 -180.7974 360.4551 -151.7451 348.3643 -122.3291 c345.5063 -115.376 342.4595 -108.7451 338.9712 -102.084 c335.5415 -95.5332 333.687 -88.3716 330.6084 -81.6436 c328.0015 -75.9458 324.4385 -70.5151 320.9063 -65.3491 c317.1113 -59.7979 313.5625 -53.6279 309.2974 -48.4683 c303.9512 -42.001 294.8076 -51.2524 300.105 -57.6606 c302.0186 -59.9751 303.4463 -63.0854 305.0923 -65.6235 c306.8042 -68.2617 308.7759 -70.5859 310.5449 -73.1738 c314.1372 -78.4287 317.4541 -83.9888 320.1016 -89.7749 c322.9463 -95.9917 324.6035 -102.5171 327.7461 -108.645 c331.5273 -116.019 334.8306 -123.3921 338.001 -131.0503 c343.8457 -145.1675 349.8794 -159.2051 355.6445 -173.355 c361.5938 -187.957 368.1025 -202.9253 372.0527 -218.2178 c373.9185 -225.4385 376.4346 -232.4639 377.853 -239.7993 c379.2524 -247.0376 380.7266 -254.3008 382.3022 -261.5078 c383.7959 -268.3394 385.3062 -275.2388 386.9424 -282.0381 c388.731 -289.4673 391.3926 -296.6816 393.188 -304.0767 c396.5518 -317.9302 400.4912 -332.4487 406.4263 -345.4238 c409.2026 -351.4932 410.7607 -358.1836 412.2754 -364.6533 c412.6299 -366.1665 412.856 -367.6968 413.0234 -369.2344 C411.8252 -368.1616 410.6509 -367.0737 409.5142 -365.9697 c403.9087 -360.5254 397.4717 -356.0635 391.9341 -350.5254 c386.752 -345.3423 381.7456 -340.8359 375.7905 -336.585 c370.2134 -332.604 365.6924 -325.9268 361.6152 -320.4966 c357.4072 -314.8916 353.4502 -308.9717 348.5928 -303.8989 c343.0518 -298.1128 337.8154 -292.1279 332.6855 -285.9736 c328.292 -280.7026 324.1094 -275.1904 319.5405 -270.0771 c314.8257 -264.8013 308.4658 -261.4009 303.7622 -256.0562 c299.3965 -251.0957 294.5654 -246.5713 290.3301 -241.4727 c285.5396 -235.7056 281.8828 -228.9033 277.7866 -222.6357 c273.9146 -216.7119 271.0986 -210.2358 267.6426 -204.0728 c263.7974 -197.2153 259.8345 -190.5146 256.2632 -183.5024 c253.2046 -177.498 248.812 -173.1777 244.3682 -168.2188 c242.1646 -165.7598 240.4951 -163.0566 238.146 -160.6963 c235.2715 -157.8081 232.4849 -154.8438 229.8101 -151.7695 c225.2168 -146.4897 220.627 -141.4209 216.79 -135.5356 c212.8374 -129.4722 209.625 -122.9395 206.6138 -116.3701 c203.3979 -109.356 199.6826 -102.5337 196.2437 -95.625 c194.9941 -93.1157 194.2598 -90.4209 193.0581 -87.8975 c191.9229 -85.5137 190.5571 -83.3564 189.8027 -80.8091 c187.4287 -72.7896 174.8818 -76.207 177.2676 -84.2651 c178.8481 -89.605 181.7368 -94.7427 183.9268 -99.8721 cf871.4634 -330.5566 m876.2192 -326.1714 882.7256 -325.1709 888.7114 -323.3716 c896.5396 -321.0181 905.1426 -320.9131 913.2305 -320.0757 c920.8213 -319.29 928.373 -318.1987 935.9814 -317.5723 c943.7939 -316.9287 951.6133 -317.0996 959.4258 -316.3125 c966.835 -315.5664 974.188 -314.0303 981.6196 -313.6904 c989.4966 -313.3301 997.4453 -313.9033 1005.3311 -313.9033 c1020.7529 -313.9033 1036.2148 -313.4902 1051.5908 -314.894 c1058.4541 -315.5205 1065.355 -316.481 1072.1484 -317.6079 c1079.3008 -318.7949 1082.8418 -317.248 1087.2485 -311.5327 c1090.8867 -306.8145 1094.6138 -302.0811 1098.5527 -297.6069 c1103.4951 -291.9937 1109.6953 -287.4688 1115.0762 -282.2749 c1125.3535 -272.3545 1136.249 -263.6445 1148.0571 -255.5698 c1153.9272 -251.5557 1160.1455 -248.8779 1166.4053 -245.6372 c1172.979 -242.2349 1178.8877 -237.687 1185.4482 -234.2485 c1191.2319 -231.2173 1198.1191 -229.6958 1204.2568 -227.436 c1210.4644 -225.1509 1216.6821 -222.7207 1223.1455 -221.2622 c1226.0161 -220.6147 1228.8872 -220.2461 1231.8213 -220.0664 c1235.3745 -219.8486 1238.4536 -218.6943 1241.9165 -217.9355 C1243.0161 -217.9092 1244.1074 -217.8013 1245.1914 -217.6118 C1245.7373 -217.4619 1246.1299 -217.3438 1246.4131 -217.25 C1246.54 -217.2451 1246.6777 -217.2393 1246.8403 -217.23 c1249.9824 -217.0503 1252.2954 -215.3481 1253.9272 -212.7651 c1255.5698 -210.166 1254.7803 -207.0684 1252.9111 -204.8882 c1252.0776 -203.9165 1250.8369 -203.1064 1249.5576 -202.8936 c1247.291 -202.5161 1245.3848 -203.2031 1243.9839 -204.4204 C1243.563 -204.4678 1243.1426 -204.5229 1242.7246 -204.5986 C1242.0967 -204.7715 1241.666 -204.8979 1241.3794 -204.9902 C1241.0723 -205.0264 1240.6587 -205.0811 1240.0981 -205.1621 c1236.6689 -205.6597 1233.4771 -206.9648 1230.0127 -207.1772 c1222.3066 -207.6489 1214.9727 -209.8413 1207.7383 -212.3774 c1200.7422 -214.8301 1193.8462 -217.542 1186.7827 -219.8032 c1179.6763 -222.0781 1173.498 -226.0229 1167.248 -230.0054 c1161.3442 -233.7676 1154.9814 -236.3037 1148.8926 -239.6943 c1142.3789 -243.3213 1136.4307 -247.873 1130.5142 -252.3711 c1125.2393 -256.3818 1119.7539 -260.0679 1114.7466 -264.4248 c1108.8447 -269.5601 1103.5977 -275.4473 1097.7275 -280.6396 c1092.7524 -285.04 1088.3281 -289.4224 1084.1855 -294.6406 c1082.3589 -296.9414 1080.6445 -299.3491 1078.6772 -301.5322 c1077.7148 -302.5996 1076.8872 -303.8242 1076.0234 -304.9712 C1075.9668 -305.0239 1075.9268 -305.064 1075.8779 -305.1113 C1075.3193 -305.0234 1074.7607 -304.9365 1074.2041 -304.8403 c1059.208 -302.3516 1044.0635 -300.9033 1028.8599 -300.9033 c1013.7314 -300.9033 998.584 -300.5303 983.4619 -300.6445 c975.9912 -300.7007 968.6602 -302.2749 961.2607 -303.1147 c953.4624 -304 945.6963 -303.9873 937.8774 -304.438 c924.0449 -305.2358 910.1025 -307.208 896.3398 -308.8174 c884.7188 -310.1763 871.1079 -313.2158 862.271 -321.3643 c856.0957 -327.0581 865.3125 -336.2285 871.4634 -330.5566 cf628.8955 -639.0898 m620.5229 -643.1743 611.6563 -645.9268 602.7134 -648.46 c593.4731 -651.0771 584.4517 -651.2856 574.8843 -651.3013 c570.9946 -651.3076 567.0088 -649.8452 563.1235 -649.4419 c558.4297 -648.9551 554.084 -648.8281 549.48 -647.6323 c545.4087 -646.5747 541.8945 -644.708 537.9834 -643.2573 c535.8633 -642.4707 533.8901 -640.6719 531.7568 -639.7368 c529.5781 -638.7822 527.5508 -638.4492 525.2012 -638.2026 c522.2441 -637.8926 519.7998 -640.439 518.9336 -642.9746 c517.1865 -648.0869 519.228 -653.5654 518.3877 -658.8027 c517.1973 -666.2173 517.478 -673.6807 516.0073 -681.084 c513.5747 -693.3306 508.877 -706.3296 502.123 -716.7412 c494.3237 -728.7656 482.6011 -736.5254 470.3979 -743.4961 c464.4277 -746.9063 457.7246 -749.1797 451.3428 -751.7178 c444.436 -754.4644 437.0327 -757.0249 429.6929 -758.2573 c416.9287 -760.4004 404.2227 -761.7998 391.7158 -758.1084 c388.7017 -757.2188 385.5938 -757.2217 382.4868 -757.145 c379.5918 -757.0737 376.8218 -755.7129 374.1074 -754.8252 c370.9849 -753.8032 367.7334 -753.4653 364.582 -752.3789 c360.7505 -751.0576 356.9072 -749.8701 352.9448 -749.0088 c346.7134 -747.6543 342.3267 -745.2988 336.8691 -742.0649 c330.3096 -738.1777 322.7651 -735.4155 315.8052 -732.2944 c309.6641 -729.5405 304.3589 -726.3784 299.0068 -722.293 c293.3853 -718.0024 287.6255 -714.7231 281.3887 -711.4316 c274.0532 -707.5605 268.6465 -702.748 263.0776 -696.6519 c258.6367 -691.7896 251.5332 -685.5649 251.1641 -678.542 c250.8545 -672.6572 244.293 -670.9102 240.6094 -673.3335 C238.7627 -668.5605 231.7627 -666.2017 229.2271 -671.9863 c226.1416 -679.0269 222.5078 -685.8335 217.1445 -691.4106 c214.938 -693.7051 211.7832 -694.9131 208.9609 -696.2524 c205.1108 -698.0786 201.5762 -700.5215 197.7202 -702.3672 c190.2368 -705.9492 181.3062 -704.5742 173.4214 -703.5439 c164.6626 -702.3999 156.5205 -700.167 148.1494 -697.3809 c146.2031 -696.7329 144.5327 -696.9946 143.23 -697.793 C139.582 -694.7173 132.3359 -696.3062 132.2803 -702.5566 c132.2026 -711.2725 131.5356 -720.5098 128.6172 -728.7871 c125.6865 -737.0996 121.7925 -745.4922 117.9556 -753.4253 c114.332 -760.918 109.8647 -767.7236 105.5415 -774.8042 c100.9194 -782.373 96.8027 -789.646 90.2329 -795.7139 c84.8022 -800.7295 78.9272 -805.5967 71.8555 -808.085 c64.4146 -810.7036 56.3438 -812.2568 48.5068 -813.042 c39.7876 -813.915 30.356 -812.1089 21.6172 -811.627 c16.021 -811.3184 4.38477 -811.9375 0.379395 -807.1187 c0.136719 -806.8267 -0.116211 -806.5776 -0.372559 -806.3481 C-0.372559 -821.6636 L3.85303 -823.0898 8.56104 -823.5923 12.5205 -823.8105 c22.7227 -824.373 32.8921 -825.5645 43.0933 -826.1172 c52.2563 -826.6133 62.0469 -824.3403 70.8491 -821.9854 c78.9746 -819.811 88.1465 -815.7329 94.2554 -809.7617 c97.5313 -806.5596 101.0229 -803.5879 104.1758 -800.2607 c107.73 -796.5103 110.3965 -791.8818 113.0737 -787.4971 c118.3296 -778.8896 123.875 -770.5161 128.4287 -761.5078 c132.9404 -752.5825 136.6494 -743.1895 140.4878 -733.96 c143.5176 -726.6753 144.6577 -718.1948 145.0703 -710.0366 C154.4902 -713.1475 163.583 -715.229 173.4214 -716.5439 c183.3804 -717.8755 193.2148 -718.3579 202.644 -714.2974 c207.1416 -712.3604 211.144 -709.6157 215.5225 -707.4775 c219.0352 -705.7617 222.1758 -704.0698 225.2441 -701.6182 c231.1572 -696.8936 235.3999 -689.4556 238.6973 -682.4238 C240.9487 -693.0547 249.6968 -701.3066 256.8589 -709.0933 c265.9526 -718.9805 278.022 -723.0674 288.7075 -730.7065 c293.8574 -734.3882 298.6079 -738.4399 304.2866 -741.3252 c311.2832 -744.8794 318.6914 -747.9067 325.874 -751.0767 c331.4165 -753.5229 336.1836 -757.3921 341.8535 -759.5845 c348.5596 -762.1777 355.9492 -763.1299 362.8081 -765.4941 c365.877 -766.5522 368.9683 -766.8096 372.0264 -767.8105 c375.0454 -768.7983 377.9072 -769.8252 381.1123 -770.0488 c384.0728 -770.2559 386.7432 -770.1963 389.6177 -771.0449 c392.5088 -771.8979 395.5132 -772.6807 398.4868 -773.0913 c404.915 -773.9785 411.7876 -773.6162 418.2173 -772.9014 c425.1235 -772.1328 432.542 -771.4131 439.2046 -769.4053 c466.4082 -761.208 494.0967 -749.54 511.521 -726.0225 c515.6274 -720.4805 518.0547 -715.0605 520.5527 -708.6509 c523.2505 -701.7295 525.9604 -695.1191 527.79 -687.8701 c529.6348 -680.5596 530.5259 -672.9736 530.6094 -665.4429 c530.6499 -661.8032 531.7397 -658.2876 531.6636 -654.6265 C531.6904 -654.644 531.7183 -654.6641 531.7446 -654.6816 c533.1572 -655.6143 535.2471 -656.1436 536.7935 -656.8647 c540.873 -658.7681 545.0381 -659.9497 549.3975 -661.0205 c553.9238 -662.1328 558.4766 -661.8066 563.043 -662.4375 c568.252 -663.1572 572.9741 -664.3145 578.272 -664.291 c587.8721 -664.2485 596.9097 -663.5801 606.1694 -660.9956 c616.209 -658.1934 626.0742 -654.8921 635.457 -650.3154 c642.9912 -646.6401 636.3979 -635.4307 628.8955 -639.0898 cf781.2686 -504.6982 m786.1157 -502.7246 789.2354 -499.689 793.1807 -496.3984 c797.314 -492.9512 801.3477 -489.4204 805.0166 -485.4751 c811.9727 -477.9941 816.5703 -468.2686 820.6294 -459.0024 c824.7725 -449.5454 826.9209 -439.77 830.2271 -430.082 c830.8311 -428.311 831.5425 -426.5708 832.1895 -424.8169 C834.0127 -426.1826 835.9473 -427.4131 837.7979 -428.7236 c840.8457 -430.8823 843.3447 -433.9121 846.084 -436.4399 c856.8916 -446.4121 870.5347 -452.5386 883.9458 -458.1514 c890.5112 -460.8989 896.9561 -463.8252 903.9224 -465.4058 c911.21 -467.0586 918.7915 -468.0308 926.1641 -469.2617 c940.1982 -471.6045 955.2744 -470.1929 969.4658 -470.1694 c985.1367 -470.1436 1000.8794 -464.3066 1015.5557 -459.3408 c1030.1636 -454.3979 1044.6616 -447.8906 1058.3096 -440.731 c1063.4326 -438.0435 1068.4204 -435.0972 1073.4619 -432.3403 c1079.4048 -429.0898 1083.6846 -423.3271 1088.626 -418.8496 c1093.3633 -414.5571 1097.9077 -410.4878 1101.6748 -405.2876 c1106.1504 -399.1084 1110.2847 -392.4146 1113.9136 -385.7109 c1117.0688 -379.8823 1119.8521 -373.854 1122.7729 -367.9063 c1125.7207 -361.9043 1129.1411 -356.2734 1131.7256 -350.0654 c1133.46 -345.9004 1135.5342 -341.6626 1137.1484 -337.3647 C1140.6221 -340.1807 1144.8994 -342.2861 1148.9814 -344.1284 c1160.7441 -349.4375 1172.8823 -351.8979 1185.7651 -352.9331 c1199.5518 -354.0405 1213.0972 -355.082 1226.3984 -350.5317 c1231.2705 -348.8652 1236.8008 -346.0591 1240.7051 -342.7041 c1242.5947 -341.0801 1243.9653 -338.7222 1244.8818 -336.4414 c1244.9893 -336.1743 1245.1016 -335.8223 1245.2246 -335.4404 C1246.1875 -336.2715 1247.1045 -337.1567 1247.8579 -337.73 c1251.1489 -340.2329 1254.7529 -342.3779 1258.1938 -344.6719 c1266.644 -350.3052 1275.2344 -353.5117 1285.1255 -355.5439 c1304.6973 -359.5654 1325.3198 -358.8564 1345.208 -359.1416 c1355.0254 -359.2822 1364.4526 -356.8164 1373.7563 -353.939 c1383.4351 -350.9458 1392.6748 -347.8721 1401.6152 -343.0107 c1409.9414 -338.4839 1418.541 -333.2754 1425.2568 -326.5347 c1431.9399 -319.8267 1434.5107 -310.2783 1437.4834 -301.4902 c1440.1777 -293.5264 1427.6191 -290.1382 1424.9482 -298.0342 c1423.1636 -303.3091 1421.2451 -311.2725 1418.1758 -315.0063 c1413.502 -320.6909 1407.2549 -324.4204 1401.084 -328.2568 c1388.2266 -336.25 1374.0649 -340.8408 1359.4448 -344.4966 c1352.4009 -346.2578 1345.4063 -346.2363 1338.2036 -345.9268 c1330.5313 -345.5967 1322.8604 -345.7036 1315.1846 -345.5371 c1300.3574 -345.2153 1284.0571 -344.2935 1270.7422 -337.1841 c1265.332 -334.2954 1259.6577 -330.6279 1254.8516 -326.8223 c1250.7988 -323.6128 1245.7466 -318.627 1240.1826 -321.4395 c1235.7778 -323.6655 1234.5254 -328.2461 1232.6924 -332.0791 c1231.5317 -334.5054 1229.0059 -334.3135 1227.0835 -335.6299 c1223.8257 -337.8618 1220.4404 -338.8882 1216.6201 -339.7603 c1209.1821 -341.4575 1202.6572 -340.6885 1195.1392 -340.2417 c1186.7979 -339.7466 1178.8604 -339.4414 1170.6514 -337.6089 c1164.7813 -336.2988 1159.7783 -334.8149 1154.2363 -332.314 c1151.5181 -331.0869 1143.2671 -327.9102 1142.9883 -324.8687 c1142.7627 -322.4082 1141.4517 -320.6787 1139.7451 -319.6743 C1139.3164 -318.7261 1138.6914 -317.8267 1137.8096 -316.9976 c1132.2739 -311.7949 1124.1807 -318.8638 1127.2964 -324.5156 C1127.0752 -325.3203 1126.9175 -326.1377 1126.8652 -326.9756 C1126.7095 -328.1719 1126.0439 -329.5986 1125.7178 -330.7817 c1124.8677 -333.8643 1122.9736 -337.019 1121.8145 -340.0601 c1118.9639 -347.5391 1115.0854 -354.2217 1111.5479 -361.3452 c1104.8711 -374.7896 1098.2314 -387.9824 1089.3955 -400.1816 c1085.8877 -405.0244 1080.3179 -408.6255 1076.1001 -412.8403 c1071.4785 -417.4585 1066.9893 -421.7544 1061.0269 -424.5938 c1047.6353 -430.9702 1034.6787 -438.106 1020.8379 -443.5913 c1013.7207 -446.4121 1006.4312 -448.9292 999.0918 -451.1025 c991.292 -453.4121 982.9634 -456.1772 974.855 -456.9463 c967.9429 -457.6021 960.9204 -456.9404 953.9893 -457.0308 c946.377 -457.1299 938.7861 -457.5176 931.1855 -456.8921 c924.4409 -456.3379 917.5342 -454.6523 910.8457 -453.5366 c903.1294 -452.249 896.186 -449.272 889.0117 -446.2896 c875.4717 -440.6606 862.4219 -434.2983 851.8267 -423.9727 c845.6772 -417.98 838.5225 -413.8667 833.4985 -407.2998 C832.6323 -405.1694 831.0044 -403.2383 829.9082 -401.2734 c825.728 -393.7832 815.4019 -400.353 818.6826 -407.835 c819.3486 -409.3535 820.1323 -410.8203 820.998 -412.2422 C820.999 -412.4634 821 -412.7114 821 -413.0161 C821 -416.2295 L821 -420.1548 818.3516 -424.5884 817.1016 -428.2529 c814.3516 -436.3105 812.7466 -444.5303 809.3867 -452.4414 c806.1104 -460.1563 802.2964 -468.4619 796.9556 -474.9814 c794.3418 -478.1719 791.2295 -480.9541 788.144 -483.6724 c785.1357 -486.3228 781.5557 -490.6377 777.8105 -492.1621 c774.5313 -493.4971 772.248 -496.436 773.2715 -500.1582 c774.1279 -503.2705 777.9814 -506.0366 781.2686 -504.6982 cf1593.9619 3.29004 m1594.0996 2.13965 1594.1953 0.96875 1594.2051 -0.251465 c1594.2559 -6.68604 1592.2036 -12.8574 1591.728 -19.2251 c1590.8574 -30.8877 1586.8965 -41.8062 1580.7075 -51.6792 c1574.9478 -60.8672 1566.8364 -69.0366 1557.1855 -74.042 c1547.2534 -79.1929 1534.0503 -82.3853 1522.9087 -82.5864 c1521.4258 -82.6133 1520.21 -83.0488 1519.252 -83.7373 C1513.9316 -82.1318 1508.1094 -89.5337 1512.8545 -94.7744 c1516.3086 -98.5894 1516.7363 -105.1675 1518.2441 -109.9346 c1520.251 -116.2788 1520.8369 -122.3247 1520.7407 -128.9468 c1520.6509 -135.1245 1519.9043 -141.522 1517.2876 -147.186 c1514.9351 -152.2783 1511.1641 -156.6074 1507.6001 -160.8726 c1504.3823 -164.7231 1500.0825 -167.0337 1495.3906 -168.6025 c1489.2959 -170.6401 1483.832 -173.4434 1477.3105 -174.1289 c1465.8228 -175.3359 1452.4893 -171.7383 1446.6523 -161.125 c1442.5962 -153.749 1431.6084 -160.2661 1435.4277 -167.6865 c1437.5151 -171.7422 1439.8892 -175.6382 1441.9766 -179.6943 c1444.3418 -184.2891 1445.3843 -189.7397 1446.6753 -194.7109 c1447.873 -199.3213 1447.6387 -204.2222 1447.6387 -208.9424 c1447.6387 -214.3599 1448.7241 -221.0703 1447.5459 -226.355 c1445.4937 -235.561 1448.0864 -245.1958 1446.4204 -254.2964 c1445.1782 -261.0825 1442.3799 -270.0967 1436.6675 -274.501 c1433.8677 -276.6602 1432.3721 -280.0425 1434.3359 -283.3945 c1435.9546 -286.1582 1440.415 -287.896 1443.229 -285.7266 c1450.8291 -279.8662 1455.0391 -271.5605 1457.7925 -262.5054 c1461.0508 -251.7896 1458.2065 -240.6772 1460.0815 -229.811 c1461.1465 -223.6406 1460.6387 -217.1699 1460.6387 -210.9072 c1460.6387 -205.4434 1460.7651 -199.958 1459.8438 -194.5488 c1459.2988 -191.3486 1458.5269 -188.1177 1457.6025 -184.9395 C1462.3271 -186.0635 1467.2769 -186.4043 1472.0596 -187.0474 c1479.9229 -188.105 1488.6729 -185.5249 1495.8037 -182.3643 c1502.7539 -179.2837 1509.1655 -177.27 1514.9209 -172.0234 c1526.8247 -161.1729 1532.9648 -146.4585 1533.6943 -130.6074 c1534.0752 -122.3208 1533.167 -114.4233 1530.7798 -106.4785 c1529.6563 -102.7383 1528.8027 -98.9497 1527.543 -95.3525 C1539.4834 -94.4028 1551.6143 -90.728 1562.4038 -85.9141 c1574.3267 -80.5942 1583.791 -70.1621 1591.0479 -59.5884 c1598.5938 -48.5933 1602.8174 -35.7373 1604.436 -22.5908 c1605.2822 -15.7183 1606.6689 -8.89453 1607.1465 -1.97656 c1607.271 -0.174805 1607.2363 1.57324 1607.0908 3.29004 C1593.9619 3.29004 Lf*u1 D2926.1006 -496.2471 m2932.5596 -497.5303 2939.1719 -497.1602 2945.708 -497.3701 c2953.6699 -497.6255 2961.498 -498.5205 2969.4824 -498.2788 c2984.7344 -497.8179 2999.5527 -494.2788 3014.2852 -490.5986 c3028.9746 -486.9297 3044.0908 -485.1938 3058.6855 -481.2095 c3070.1006 -478.0933 3081.6465 -476.3926 3093.2441 -474.1338 c3098.8223 -473.0474 3104.4756 -470.6006 3109.9326 -468.9629 c3115.5566 -467.2759 3121.1387 -465.4658 3126.75 -463.7397 c3136.8672 -460.627 3146.9854 -457.5137 3157.1025 -454.4004 C3155.7793 -455.0991 3154.458 -455.8003 3153.1533 -456.522 c3140.7031 -463.4106 3128.2031 -471.3906 3117.3184 -480.5762 c3106.7607 -489.4858 3097.252 -499.875 3087.5049 -509.6221 c3076.7275 -520.3994 3064.752 -530.4561 3052.4482 -539.4453 c3040.8213 -547.9414 3030.6758 -557.9053 3019.6602 -567.1279 c3014.5313 -571.4229 3009.5176 -575.8164 3005.0234 -580.7847 c2999.7832 -586.5781 2995.5342 -593.3633 2990.9355 -599.6631 c2986.6221 -605.5703 2981.7666 -611.0459 2977.6494 -617.0952 c2973.3223 -623.4536 2970.0039 -630.4521 2966.6836 -637.3672 c2960.7871 -649.6465 2955.2422 -662.1577 2948.834 -674.1694 c2945.4014 -680.6016 2941.8447 -686.7803 2939.5215 -693.728 c2938.626 -696.4048 2936.5684 -699.7207 2936.5596 -702.5566 c2936.5488 -706.146 2935.9307 -708.7227 2934.8672 -712.1006 c2933.0146 -717.9834 2936.7285 -723.1265 2942.498 -724.355 c2949.0898 -725.7593 2956.4111 -722.0674 2962.4092 -719.8179 c2969.7676 -717.0586 2977.1973 -713.5962 2984.8047 -711.6313 c2992.4385 -709.6592 2999.458 -706.9854 3006.6602 -703.8027 c3012.8037 -701.0884 3019.5938 -701.2681 3025.6621 -698.4214 c3031.7275 -695.5762 3037.2686 -691.8926 3043.625 -689.6323 c3049.7754 -687.4453 3054.8008 -683.416 3060.6299 -680.603 c3066.7578 -677.646 3072.1289 -673.2305 3077.3496 -668.9326 c3088.709 -659.5806 3101.0996 -651.5156 3112.3164 -642.002 c3117.5234 -637.5864 3122.9336 -633.4385 3128.3418 -629.2734 c3134.0801 -624.8545 3139.2842 -619.8013 3145.0098 -615.3848 c3169.3594 -596.5967 3197.3525 -583.0811 3222.2607 -565.1724 c3235.123 -555.9238 3249.2148 -548.373 3261.9131 -538.9824 c3273.6777 -530.2822 3286.5391 -523.4028 3298.3047 -514.7466 c3309.7051 -506.3579 3321.2012 -498.1743 3331.8936 -488.8359 c3337.3506 -484.0703 3343.0547 -479.5889 3348.4414 -474.7437 c3350.9336 -472.5029 3353.4688 -469.9292 3355.5098 -467.2656 c3357.4805 -464.6938 3358.8789 -461.7793 3361.2705 -459.5728 c3365.6299 -455.5508 3370.0039 -451.6143 3374.2578 -447.5005 C3374.1172 -447.8911 3373.9717 -448.2778 3373.8369 -448.6724 c3371.5977 -455.2222 3366.835 -460.9004 3364.0508 -467.2471 c3361.4619 -473.1519 3361.1094 -479.6621 3359.2373 -485.7861 c3357.1211 -492.71 3354.8916 -499.6299 3352.6875 -506.5264 c3350.6367 -512.9414 3347.4307 -518.8672 3345.0117 -525.1436 c3342.084 -532.7388 3340.1201 -540.8291 3337.6904 -548.5991 c3332.9902 -563.6299 3328.5781 -578.7695 3323.624 -593.7168 c3318.6016 -608.8677 3312.6885 -623.4844 3306.4053 -638.1465 c3303.459 -645.02 3301.1396 -652.1206 3298.459 -659.0957 c3295.7109 -666.2432 3291.9307 -672.9697 3288.835 -679.9678 c3285.8682 -686.6729 3284.0586 -693.665 3282.1895 -700.7368 c3280.2031 -708.2549 3277.7539 -715.7129 3276.5498 -723.3931 c3274.1377 -738.7686 3271.3252 -753.9692 3268.2715 -769.2339 c3266.8301 -776.4404 3264.9805 -783.5405 3263.501 -790.7349 c3261.832 -798.8481 3261.0742 -807.2446 3259.9033 -815.4443 c3258.9619 -822.0337 3257.3398 -828.4219 3256.6123 -835.0801 c3256.2637 -838.2637 3256.4219 -841.4668 3255.9512 -844.644 c3255.3555 -848.6655 3253.9883 -852.4834 3252.8936 -856.3789 c3252.0059 -859.5376 3252.0391 -863.0435 3252.0293 -866.2939 c3252.0195 -869.5532 3250.6582 -872.811 3250.1729 -876.0273 c3249.0391 -883.5313 3248.6465 -891.5723 3246.3945 -898.8247 c3245.4541 -901.8521 3245.1816 -904.9863 3244.7012 -908.1431 c3244.2109 -911.3721 3243.0117 -914.3774 3242.0938 -917.5073 c3239.9902 -924.686 3241.1133 -933.124 3241.1133 -940.5215 c3241.1133 -946.6343 3243.5098 -950.0371 3249.1602 -952.2471 c3255.8535 -954.8647 3263.8389 -950.8389 3270.2969 -949.3774 c3276.5723 -947.957 3282.6094 -945.5649 3288.291 -942.5356 c3291.3105 -940.9258 3294.5801 -940.1514 3297.7188 -938.7764 c3301.0723 -937.3081 3304.2852 -935.5547 3307.6563 -934.127 c3313.9844 -931.4468 3320.0811 -927.0522 3325.7393 -923.1958 c3331.7646 -919.0884 3337.4727 -914.4692 3342.6934 -909.3799 c3362.3506 -890.2188 3370.9824 -861.6812 3379.4131 -836.3657 c3384.2754 -821.7651 3392.0596 -807.9395 3400.165 -794.9707 c3403.8008 -789.1533 3406.6016 -782.8291 3409.7598 -776.751 c3413.0771 -770.3667 3417.1172 -764.4995 3420.0498 -757.9229 c3422.8477 -751.6479 3426.2969 -745.9141 3428.7861 -739.4824 c3431.3604 -732.8291 3434.875 -726.5669 3437.7383 -720.0273 c3440.7061 -713.2529 3442.8799 -706.0811 3445.6367 -699.1899 c3448.6475 -691.6621 3450.126 -683.873 3451.458 -675.9028 c3452.5176 -669.5615 3454.1807 -663.397 3455.834 -657.231 C3457.2461 -668.8789 3458.123 -680.7007 3458.3779 -692.3286 c3458.5244 -699.0322 3460.5859 -705.603 3462.1006 -712.0776 c3463.9639 -720.0376 3465.6133 -728.0405 3467.7871 -735.9248 c3471.3799 -748.9531 3476.0977 -761.6953 3479.7793 -774.7075 c3481.6279 -781.2417 3483.2715 -787.835 3484.9258 -794.4204 c3486.5391 -800.8496 3489.0098 -806.9966 3491.2197 -813.2397 c3493.3555 -819.2739 3496 -825.0664 3498.0049 -831.165 c3499.9424 -837.061 3501.5625 -843.0562 3503.5996 -848.9185 c3507.8213 -861.0718 3515.4512 -872.042 3522.5391 -882.6733 c3522.9004 -883.2148 3523.3047 -883.6655 3523.7363 -884.0493 C3523.2754 -884.8691 3523 -885.8491 3523 -887 C3523 -887.7612 3523 -888.125 v3523 -892.0342 3527.0859 -895.937 3531.0996 -894.3926 c3536.9707 -892.1338 3541.0684 -888.5225 3545.1924 -883.8574 c3550.0234 -878.3921 3556.4922 -874.4395 3561.8564 -869.4678 c3566.9404 -864.7549 3571.0977 -859.4175 3574.8496 -853.6084 c3578.7852 -847.5176 3583.332 -842.1816 3584.791 -834.937 c3586.0732 -828.5708 3589.5439 -822.0879 3591.8828 -815.9893 c3594.7588 -808.4893 3595.9375 -800.3955 3596.5732 -792.4297 c3597.125 -785.5186 3597.2617 -778.9409 3598.4248 -772.0835 c3599.0254 -768.542 3599.582 -764.8833 3600.0586 -761.2139 C3601.082 -762.1113 3602.1133 -763.0107 3603.1367 -763.936 c3608.0996 -768.4243 3612.4736 -773.667 3615.4072 -779.6929 c3616.8223 -782.6011 3617.4883 -785.8481 3618.8994 -788.7979 c3620.5498 -792.2471 3622.7109 -795.0352 3623.9355 -798.7065 c3626.3789 -806.0381 3629.7822 -812.9775 3632.3691 -820.2754 c3637.6084 -835.0566 3642.9902 -849.8057 3647.998 -864.6675 c3652.9375 -879.3223 3657.7158 -894.541 3660.0225 -909.8662 c3661.0957 -916.999 3663.0059 -923.8203 3663.8379 -930.981 c3664.6992 -938.3872 3666.8203 -945.8672 3666.833 -953.3091 c3666.8457 -960.5059 3668.3672 -967.4595 3669.5186 -974.5308 c3670.0918 -978.0547 3670.6338 -981.5845 3671.1553 -985.1167 c3671.7832 -989.3604 3670.2813 -993.9229 3671.8936 -998.0063 c3674.3145 -1004.1362 3673.9463 -1011.3115 3673.6221 -1017.7412 c3673.2354 -1025.4175 3673.668 -1032.9814 3674.1523 -1040.6421 c3675.0938 -1055.5122 3674.5176 -1070.5874 3674.4639 -1085.4844 c3674.4043 -1101.8887 3672.8027 -1118.2529 3671.6836 -1134.6055 c3670.6221 -1150.1123 3670.1045 -1165.5273 3670.1045 -1181.0723 c3670.1045 -1187.7354 3670.5029 -1194.5303 3669.5137 -1201.1387 c3668.9727 -1204.748 3667.9238 -1208.2598 3667.9199 -1211.9258 c3667.917 -1215.8857 3667.7734 -1219.7949 3667.0625 -1223.6982 c3665.874 -1230.2139 3663.7725 -1236.4473 3663.2471 -1243.0801 c3662.6816 -1250.2119 3663.0527 -1257.4102 3658.9854 -1263.625 c3654.3789 -1270.6621 3665.6406 -1277.1689 3670.21 -1270.1855 c3673.916 -1264.5234 3675.0957 -1258.2344 3675.708 -1251.5996 c3676.0225 -1248.1914 3676.1133 -1244.7617 3676.3838 -1241.3496 c3676.6748 -1237.6787 3678.0527 -1233.7949 3678.8701 -1230.2021 c3679.623 -1226.8916 3680.2148 -1223.6289 3680.5986 -1220.251 c3680.9766 -1216.9199 3680.4004 -1213.3232 3681.0518 -1210.0518 c3682.5557 -1202.5029 3683.1045 -1195.1719 3683.1045 -1187.4922 c3683.1045 -1172.4795 3682.9072 -1157.4365 3684.1963 -1142.4648 c3685.6006 -1126.1543 3686.7295 -1109.7051 3687.3037 -1093.3438 c3687.8359 -1078.2061 3687.585 -1062.9702 3687.4551 -1047.8247 c3687.3936 -1040.6841 3686.5703 -1033.5684 3686.3955 -1026.4292 c3686.2109 -1018.8506 3687.4209 -1011.3213 3686.377 -1003.7646 c3685.9551 -1000.7075 3685.2041 -997.5469 3684.4297 -994.5508 c3683.5234 -991.0474 3684.4824 -987.1357 3683.9639 -983.5488 c3682.875 -976.0142 3681.8936 -968.3809 3680.2852 -960.9375 c3679.4961 -957.2837 3679.9082 -953.3301 3679.7549 -949.6201 c3679.6094 -946.0933 3678.6855 -942.5605 3677.9805 -939.1177 c3676.5234 -932.001 3677.0449 -924.209 3674.5801 -917.3262 c3673.3398 -913.8628 3673.0508 -910.0303 3672.5586 -906.4102 c3671.9707 -902.0781 3670.8604 -897.8164 3669.877 -893.5615 c3667.8936 -884.9785 3665.3633 -876.583 3662.7842 -868.166 c3657.8252 -851.9849 3651.7598 -836.082 3646.082 -820.1431 c3643.4922 -812.8726 3640 -805.8135 3637.5723 -798.5254 c3636.291 -794.6812 3635.3545 -790.5439 3633.1016 -787.1484 c3630.7227 -783.5645 3629.4443 -780.0474 3627.9355 -776.083 c3625.5098 -769.7114 3621.4121 -764.3101 3616.877 -759.2939 c3612.1904 -754.1123 3605.5332 -750.2227 3601.5693 -744.4512 C3602.4668 -730.6265 3603.2422 -716.793 3603.4033 -702.937 c3603.5732 -688.3311 3604.3848 -673.5239 3600.999 -659.23 c3599.2539 -651.8599 3599.2861 -644.6431 3598.1348 -637.2041 c3596.8691 -629.0288 3594.3828 -620.7988 3592.6807 -612.6826 c3591.1787 -605.5186 3590.2881 -598.2754 3587.2852 -591.5493 c3585.9766 -588.6162 3584.5146 -585.7607 3583.1025 -582.8765 c3581.8906 -580.4004 3581.1133 -577.8296 3580.2871 -575.251 C3584.623 -581.3037 3589.1318 -587.2437 3593.2529 -593.4561 c3596.877 -598.9189 3599.3477 -604.9805 3603.3633 -610.1582 c3607.9375 -616.0557 3609.8203 -623.3916 3613.582 -629.8018 c3617.1055 -635.8057 3620.6855 -641.8994 3624.4814 -647.728 c3628.5996 -654.0527 3631.0322 -660.7173 3634.4854 -667.3491 c3637.752 -673.6226 3641.1699 -680.1606 3644.835 -686.189 c3646.7852 -689.3965 3647.8672 -692.5454 3649.0518 -696.0981 c3650.4385 -700.2583 3652.3848 -704.2466 3654.0234 -708.3154 c3656.6465 -714.8247 3658.1289 -721.8164 3661.3047 -728.0786 c3662.8613 -731.1479 3664.1328 -733.3149 3664.8799 -736.7495 c3665.7256 -740.6421 3666.3008 -744.7681 3667.6641 -748.5063 c3672.627 -762.1167 3676.1426 -777.0947 3678.4941 -791.3379 c3679.6172 -798.1445 3682.3789 -804.6426 3683.8457 -811.3965 c3685.3525 -818.334 3687.6855 -825.6025 3688.168 -832.626 c3688.6523 -839.6997 3690.7813 -846.8877 3692.1689 -853.832 c3693.7891 -861.9414 3694.0889 -870.2368 3694.7178 -878.4629 c3695.9902 -895.1025 3698.3955 -911.7153 3701.0479 -928.1772 c3702.2539 -935.6582 3702.208 -943.207 3703.5205 -950.7153 c3704.2295 -954.7749 3703.915 -958.9785 3704.04 -963.0815 c3704.168 -967.292 3704.8301 -971.4351 3705.5645 -975.5742 c3706.1797 -979.0479 3706.0771 -982.7402 3706.1182 -986.2554 c3706.166 -990.2686 3706.8896 -993.812 3707.8262 -997.7061 c3709.7637 -1005.7632 3709.459 -1013.9517 3709.9004 -1022.1836 c3710.3535 -1030.6475 3710.2822 -1039.1372 3710.8682 -1047.5894 c3711.4717 -1056.3022 3712.5957 -1064.9492 3712.6768 -1073.6953 c3712.7539 -1082.0742 3725.7539 -1082.082 3725.6768 -1073.6953 c3725.6074 -1066.1724 3724.8369 -1058.7056 3724.1641 -1051.2197 c3723.457 -1043.3428 3723.5469 -1035.4595 3723.1816 -1027.5669 c3722.8555 -1020.5122 3722.5547 -1013.4736 3722.3506 -1006.415 c3722.1348 -998.938 3719.1855 -991.9653 3719.0977 -984.4956 c3719.0117 -977.2607 3717.4014 -970.2729 3717.04 -963.0815 c3716.8604 -959.4951 3717.0449 -955.9087 3716.7539 -952.3271 c3716.4365 -948.4189 3715.4316 -944.6079 3714.9512 -940.7246 c3714.0703 -933.6133 3713.9414 -926.562 3712.6924 -919.4512 c3711.2793 -911.4028 3710.4746 -903.2778 3709.5215 -895.1646 c3707.7002 -879.665 3707.4033 -863.8774 3704.3408 -848.5566 c3702.9912 -841.8042 3701.502 -835.1382 3700.8408 -828.2896 c3700.5088 -824.8472 3699.1748 -821.7256 3698.4727 -818.3599 c3697.6328 -814.3301 3696.8896 -810.2813 3696.0156 -806.2583 c3694.5586 -799.5493 3691.5215 -793.0859 3690.8096 -786.2363 c3690.0273 -778.71 3687.3945 -771.3374 3685.585 -763.9702 c3683.8799 -757.0264 3682.0498 -750.1235 3679.5977 -743.4009 c3678.4609 -740.2837 3678.1338 -736.5444 3677.415 -733.2939 c3676.5088 -729.1909 3675.4551 -726.3877 3673.2695 -722.8242 c3671.2119 -719.4697 3670.4316 -715.6079 3669.1934 -711.9126 c3667.7891 -707.7271 3666.0889 -703.6401 3664.3867 -699.5693 c3662.75 -695.6563 3661.291 -691.7539 3659.9492 -687.73 c3658.543 -683.5098 3656.2969 -680.2217 3654.1602 -676.353 c3650.2783 -669.3262 3645.7432 -662.0122 3642.9863 -654.459 c3640.2793 -647.0376 3635.1914 -640.7139 3631.3789 -633.8623 c3627.2988 -626.5313 3622.6934 -619.9434 3619.4883 -612.1313 c3617.9893 -608.4766 3616.0596 -605.4839 3613.6445 -602.3691 c3611.25 -599.2817 3609.7939 -595.8066 3607.8887 -592.4224 c3601.9434 -581.8662 3594.1348 -572.5459 3587.3076 -562.5659 C3588.2969 -563.1929 3589.2832 -563.792 3590.1475 -564.4023 c3592.5332 -566.0889 3594.2461 -568.8423 3596.4434 -570.7993 c3601.7979 -575.5698 3609.1943 -577.4863 3615.2275 -581.2129 c3620.4072 -584.4126 3624.4795 -588.8125 3629.3486 -592.4243 c3635.375 -596.895 3642.0332 -598.7075 3649.1406 -600.5801 c3653.9961 -601.8594 3657.9834 -604.252 3662.4102 -606.5146 c3666.8926 -608.8057 3671.6309 -610.8184 3676.2988 -612.7007 c3686.6572 -616.8779 3697.1846 -620.4932 3707.3213 -625.2178 c3716.9355 -629.6987 3726.2539 -634.4219 3736.2227 -638.0693 c3741.1279 -639.8643 3745.6387 -641.96 3750.2822 -644.3105 c3754.8115 -646.6035 3759.7539 -648.7441 3764.0742 -651.4063 c3768.2334 -653.9692 3773.8018 -650.7383 3773.9824 -646.0259 C3773.9844 -646.0249 3773.9854 -646.0244 3773.9863 -646.0234 C3777.665 -642.9404 3777.3809 -637.3105 3777.1191 -632.9844 c3776.7031 -626.1294 3775.8184 -619.6816 3774.1406 -613.0054 c3772.4814 -606.4023 3771.8369 -599.7354 3770.7822 -593.0283 c3770.2979 -589.9487 3769.7266 -585.6523 3767.4375 -583.3433 c3764.4717 -580.3501 3763.335 -577.6211 3762.0137 -573.6582 c3757.5879 -560.3809 3752.582 -547.0757 3744.6973 -535.4165 c3740.457 -529.1479 3736.085 -522.9707 3731.5957 -516.8779 c3727.1055 -510.7832 3722.9863 -504.1807 3718.1787 -498.3496 c3713.9785 -493.2554 3708.3955 -489.8452 3703.0293 -486.1289 c3697.0439 -481.9839 3692.1387 -476.314 3686.7773 -471.4307 c3675.832 -461.4624 3661.5928 -455.1504 3649.3223 -446.9707 c3643.0898 -442.8154 3637.166 -438.1138 3629.9893 -435.7583 c3622.915 -433.436 3616.2227 -432.7139 3609.8701 -428.4932 c3598.1484 -420.7056 3583.583 -420.1543 3571.3975 -413.3813 c3566.4492 -410.6309 3560.7246 -409.4023 3555.4082 -407.5889 c3549.9209 -405.7178 3544.7109 -403.0439 3539.2549 -401.0645 c3532.8008 -398.7231 3526.6211 -395.6221 3520.1836 -393.208 c3513.9004 -390.8521 3507.4473 -389.7788 3501.0254 -387.9888 c3499.8135 -387.6509 3498.6367 -387.2324 3497.4746 -386.7808 C3516.543 -388.0913 3535.9961 -386.3477 3554.9199 -385.9985 c3561.4951 -385.8774 3568.0752 -385.9478 3574.6514 -385.9478 c3581.9385 -385.9478 3589.0049 -387.4805 3596.2646 -388.0088 c3609.0107 -388.9365 3621.248 -390.21 3633.7207 -393.0737 c3645.8145 -395.8506 3658.9854 -396.8633 3671.3633 -397.3916 c3683.5801 -397.9131 3695.3809 -399.8984 3707.3125 -402.4966 c3718.2197 -404.8716 3729.6123 -405.522 3740.3711 -408.6387 c3743.1738 -409.4507 3746.6699 -409.1709 3749.5859 -409.5327 c3752.3418 -409.875 3755.0957 -410.0869 3757.8672 -409.8413 c3762.2109 -409.4551 3766.5332 -407.3154 3767.7754 -402.9805 C3767.8525 -402.9829 3767.9209 -403 3768 -403 C3769.3896 -403 L3773.9131 -403 3778.0313 -397.5205 3775.002 -393.4258 c3772.9922 -390.7095 3770.4463 -388.583 3768.4521 -385.8877 c3766.5801 -383.3564 3765.0439 -380.5381 3762.9893 -378.1553 c3758.0664 -372.4463 3753.7393 -367.3633 3747.3867 -363.1055 c3742.2305 -359.6499 3735.7959 -358.8105 3730.7256 -355.2705 c3724.4453 -350.8867 3717.2949 -348.3247 3710.4502 -344.9019 c3704.7441 -342.0479 3698.6875 -339.9258 3692.8984 -337.2686 c3685.9824 -334.0933 3678.0313 -334.3872 3670.6914 -332.7896 c3667.6367 -332.125 3664.998 -330.6382 3661.7881 -330.4609 c3658.2656 -330.2666 3654.7607 -329.6665 3651.2402 -329.3882 c3643.3105 -328.7612 3635.3291 -328.856 3627.3818 -328.6875 c3620.2979 -328.5371 3613.6563 -327.6133 3606.6982 -326.3779 c3598.7051 -324.9595 3590.8184 -324.918 3582.7285 -324.918 c3567.0498 -324.918 3551.4893 -327.0366 3535.791 -327.1011 c3525.4844 -327.1436 3515.5898 -329.5215 3505.792 -332.3179 C3507.4326 -330.146 3509.1221 -328.0146 3511.2373 -326.1899 c3516.833 -321.3618 3522.3965 -317.5469 3526.9053 -311.5698 c3531.0713 -306.0479 3534.4941 -300.0542 3538.0615 -294.1411 c3541.9121 -287.7593 3546.166 -281.769 3549.4941 -275.0698 c3556.1621 -261.647 3561.6152 -247.1123 3566.7988 -233.0669 c3571.8301 -219.4307 3577.8691 -205.1846 3579.4043 -190.6035 c3579.6855 -187.9302 3577.2305 -184.833 3574.6328 -184.3359 c3569.6426 -183.3804 3564.9961 -183.772 3560.0342 -184.7236 c3555.0625 -185.6768 3550.3135 -186.0942 3545.3057 -186.7686 c3534.4512 -188.231 3523.5498 -190.6509 3512.7754 -192.6592 c3501.7412 -194.7158 3490.1133 -199.1636 3480.3438 -204.6865 c3470.6426 -210.1709 3464.6133 -218.2563 3458.8389 -227.5571 c3456.1182 -231.9375 3453.1602 -236.1611 3450.5078 -240.5845 c3447.582 -245.4639 3445.9385 -250.7515 3443.5898 -255.8784 c3441.2979 -260.8843 3439.9941 -266.1343 3438.1963 -271.29 c3436.3779 -276.5005 3434.5879 -281.9512 3433.165 -287.2798 c3431.8984 -292.0225 3431.4121 -296.9824 3430.7539 -301.8345 c3429.9688 -307.6313 3428.5117 -313.105 3426.9541 -318.7334 c3423.6758 -330.5728 3422.3213 -342.0684 3422.3145 -354.3413 c3422.3096 -362.7246 3435.3096 -362.7246 3435.3145 -354.3413 c3435.3203 -343.1689 3436.5664 -332.9736 3439.4893 -322.1895 c3442.041 -312.7739 3443.2354 -303.4609 3445.002 -293.897 c3445.8145 -289.501 3447.6348 -285.5571 3448.8555 -281.2959 c3450.3301 -276.1514 3451.7607 -271.0034 3453.4629 -265.9272 c3456.5439 -256.7383 3460.9014 -248.1157 3466.2402 -240.043 c3471.5674 -231.9878 3475.8447 -223.1367 3484.082 -217.6387 c3492.3828 -212.0986 3503.0225 -208.1938 3512.6943 -205.9277 c3522.2207 -203.6958 3532.0293 -202.4658 3541.6289 -200.5425 c3546.8057 -199.5054 3552.0205 -199.6997 3557.166 -198.731 c3559.8223 -198.231 3562.4922 -197.3877 3565.1895 -196.937 C3564.0732 -201.2656 3562.5156 -205.585 3561.4141 -209.7666 c3559.624 -216.561 3556.7461 -223.0542 3554.2627 -229.6113 c3549.3311 -242.6377 3544.2969 -255.9429 3538.2695 -268.5083 c3535.2637 -274.7734 3531.3184 -280.3579 3527.6602 -286.2319 c3524.2852 -291.6523 3521.1846 -297.2271 3517.5449 -302.481 c3513.6953 -308.0376 3508.5703 -311.7388 3503.3633 -315.9058 c3500.7588 -317.9902 3498.2373 -320.0596 3496.6641 -323.0405 c3495.2891 -325.6431 3493.4268 -328.4004 3491.0293 -330.1719 c3488.457 -332.0723 3487.8477 -334.9199 3488.4502 -337.415 C3483.0811 -339.1792 3477.876 -341.5273 3472.5586 -343.4092 c3464.7314 -346.1797 3456.9951 -348.9907 3449.2832 -352.0757 c3444.7041 -353.9072 3440.501 -356.3228 3435.8203 -357.8975 c3427.918 -360.5562 3431.3076 -373.1143 3439.2754 -370.4336 c3446.4004 -368.0361 3453.0352 -364.4927 3460.0156 -361.7002 c3466.9111 -358.9424 3473.9883 -356.7368 3480.9521 -354.1587 c3487.1924 -351.8486 3493.2051 -349.2588 3499.7363 -347.834 c3507.6211 -346.1143 3515.126 -342.8892 3523.1094 -341.3013 c3530.4756 -339.8359 3537.9639 -340.1704 3545.4277 -339.9136 c3553.4004 -339.6392 3561.3574 -338.9541 3569.3008 -338.2446 c3577 -337.5566 3584.8232 -337.918 3592.5527 -337.918 c3600.1064 -337.918 3607.417 -339.8301 3614.8398 -340.9609 c3629.2344 -343.1533 3644.0479 -341.062 3658.5039 -343.1436 c3661.6074 -343.5908 3664.2617 -344.2935 3667.2363 -345.3271 c3670.7217 -346.5381 3674.8379 -346.498 3678.4629 -347.1025 c3685.5342 -348.2813 3691.1758 -350.5576 3697.7031 -353.4927 c3704.1025 -356.3696 3710.2871 -359.8931 3716.9033 -362.2412 c3720.252 -363.4302 3722.8301 -365.5776 3725.7207 -367.5947 c3728.2734 -369.3779 3732.2207 -370.4438 3735.1016 -371.627 c3741.3535 -374.1948 3746.6543 -378.0889 3750.8008 -383.5249 c3752.7422 -386.0698 3754.4072 -388.748 3756.2168 -391.3804 c3756.916 -392.3979 3757.708 -393.3115 3758.5234 -394.1973 C3757.3906 -394.6841 3756.4434 -395.5796 3755.8926 -396.9473 C3755.6963 -396.9546 3755.4756 -396.9609 3755.1992 -396.9624 c3752.0693 -396.98 3748.9443 -396.4409 3745.8428 -396.0874 c3740.7031 -395.502 3735.5137 -394.5884 3730.4395 -393.5786 c3719.2383 -391.3501 3707.9785 -388.6504 3696.6289 -387.166 c3691.6699 -386.5176 3686.8184 -385.3994 3681.8467 -384.8501 c3676.1162 -384.2168 3670.3301 -384.5654 3664.5977 -383.8633 c3658.4541 -383.1108 3652.2793 -382.7935 3646.127 -382.145 c3640.2246 -381.5234 3634.4473 -379.873 3628.6826 -378.5356 c3617.5273 -375.9473 3605.6777 -375.6938 3594.2998 -374.8657 c3587.6523 -374.3818 3581.3418 -372.9478 3574.6514 -372.9478 c3568.0742 -372.9478 3561.4961 -372.9077 3554.9199 -372.9985 c3529.7539 -373.3467 3503.332 -376.8955 3478.5723 -370.9971 c3473.4395 -369.7739 3470.1709 -374.292 3470.4883 -378.291 C3468.8164 -378.0303 3467.1426 -377.7871 3465.4766 -377.5459 c3454.209 -375.9136 3441.1846 -367.1963 3429.9023 -372.7432 c3429.6426 -372.8711 3429.4023 -373.0098 3429.1758 -373.1548 C3427.627 -370.2539 3423.7266 -369.355 3420.7217 -370.4692 C3421.4375 -369.1982 3421.6133 -367.5854 3420.8916 -365.7124 c3419.6855 -362.5825 3420.0781 -359.2197 3419.5176 -355.9287 c3419.0176 -352.998 3418.6699 -350.0996 3418.4863 -347.1279 c3418.041 -339.8979 3418.5361 -332.5435 3415.7988 -325.6875 c3410.3594 -312.061 3408.5625 -297.3081 3402.5078 -283.8716 c3396.8965 -271.416 3387.3154 -262.3823 3376.8281 -254.0522 c3372.7285 -250.7964 3366.959 -249.6284 3362.3711 -247.2114 c3355.8652 -243.7842 3349.1006 -241.4014 3342.0254 -239.4326 c3328.4502 -235.6553 3315.2793 -231.1655 3301.0996 -230.2231 c3286.7344 -229.2686 3271.9541 -229.6465 3257.5664 -230.0376 c3250.3516 -230.2334 3243.1777 -231.04 3236.041 -232.0811 c3228.7305 -233.1484 3220.5586 -234.3691 3213.7676 -237.3867 c3199.5322 -243.7119 3185.0117 -249.0508 3170.4512 -254.5576 c3156.876 -259.6914 3143.6504 -266.4727 3130.9453 -273.4736 c3124.7148 -276.9067 3118.8359 -280.9585 3113.0059 -285.0205 c3107.084 -289.145 3099.749 -293.5303 3096.2109 -299.998 c3094.1641 -303.7402 3090.4609 -311.0854 3091.9844 -315.4248 c3094.207 -321.7534 3099.6094 -322.4985 3105.4365 -320.8535 c3111.1543 -319.2397 3117.0469 -318.6758 3122.7363 -317.0864 c3130.0527 -315.0425 3137.6113 -313.9575 3145.1523 -313.166 c3176.8564 -309.8379 3209.1426 -310.6689 3240.9814 -310.6333 c3248.3574 -310.6255 3255.7344 -310.5908 3263.1104 -310.6538 c3270.4492 -310.7163 3277.708 -311.6206 3285.0244 -311.7642 c3292.0693 -311.9019 3298.8145 -314.291 3305.6289 -315.9038 c3313.7344 -317.8223 3321.8262 -319.7905 3329.9316 -321.709 c3337.6387 -323.5332 3344.9824 -326.3516 3352.6572 -328.2563 c3356.3145 -329.1641 3360.0293 -329.6206 3363.3145 -331.5723 c3364.6299 -332.354 3366.1787 -332.8086 3367.5244 -333.5776 c3369.6387 -334.7856 3371.0313 -336.9824 3373.1387 -338.1221 c3378.6641 -341.1133 3382.3506 -345.8271 3386.6426 -350.1738 C3380.1094 -347.7842 3373.0469 -346.0557 3366.2725 -344.5298 c3351.9111 -341.2949 3337.6943 -337.6895 3322.9551 -336.561 c3307.9189 -335.4102 3292.5176 -336.8589 3277.5762 -338.5552 c3262.0254 -340.3203 3246.3691 -342.9224 3231.2285 -346.9009 c3217.1348 -350.6045 3203.084 -354.2231 3189.0361 -358.1025 c3182.4453 -359.9224 3175.6855 -360.7632 3169.1221 -362.7139 c3161.5977 -364.9507 3154.2578 -367.2495 3146.5547 -368.8237 c3131.0342 -371.9946 3117.0254 -378.2358 3102.0801 -383.2212 c3087.1836 -388.1899 3072.0879 -392.3716 3057.3721 -397.8887 c3050.1992 -400.5776 3042.7324 -402.4546 3035.3584 -404.4937 c3027.5664 -406.6475 3020.1729 -409.834 3012.4531 -412.1182 c2998.0713 -416.3735 2982.9766 -418.7646 2969.252 -425.1396 c2956.0889 -431.2539 2943.2051 -439.2124 2931.4531 -447.7056 c2922.5293 -454.1558 2907.5527 -459.231 2904.9717 -471.5039 c2902.2373 -484.5063 2914.9189 -494.0259 2926.1006 -496.2471 cf0 D3436.4648 -383.9678 m3438.0322 -383.1973 3442.627 -384.7051 3444.1582 -385.1934 c3447.6748 -386.3154 3451.2979 -387.1226 3454.875 -388.0278 c3462.4922 -389.9546 3470.1982 -391.1138 3477.8311 -392.9976 c3484.6514 -394.6816 3490.8428 -398.4277 3497.5703 -400.5244 c3505.1299 -402.8804 3512.7432 -404.1704 3520.1943 -407.0679 c3533.502 -412.2422 3546.3652 -418.3423 3559.9893 -422.6836 c3566.584 -424.7852 3572.6436 -428.4072 3579.2627 -430.6143 c3585.833 -432.8052 3593.1709 -433.7466 3599.0977 -437.4561 c3604.6123 -440.9067 3610.4648 -444.0552 3616.7676 -445.8521 c3619.9941 -446.7725 3623.3037 -447.373 3626.5332 -448.2939 c3630.7256 -449.4893 3634.2646 -452.5313 3637.8496 -454.9209 c3644.2246 -459.1714 3650.6387 -463.2549 3657.1797 -467.2402 c3663.6074 -471.1567 3670.585 -474.6729 3676.3477 -479.5342 c3681.4902 -483.873 3686.0313 -488.8799 3691.1523 -493.2505 c3696.5859 -497.8877 3703.0967 -501.0864 3707.9951 -506.3394 c3710.1992 -508.7031 3711.7813 -511.7905 3713.6035 -514.4468 c3715.7207 -517.5337 3718.1377 -520.4351 3720.3711 -523.4395 c3725.248 -530 3729.9141 -536.7168 3734.4922 -543.4873 c3739.4893 -550.8755 3743.6738 -559.7441 3746.5557 -568.1724 c3749.3779 -576.4277 3751.0313 -584.9019 3757.1592 -591.439 c3758.9521 -593.3525 3758.7793 -600.3667 3759.1094 -603.019 c3759.6748 -607.5674 3760.499 -612.0146 3761.6045 -616.4609 c3762.7666 -621.1338 3763.8574 -625.6763 3763.9824 -630.5112 c3764.0137 -631.6987 3764.1133 -632.8838 3764.1846 -634.0688 c3764.2285 -634.8379 3764.252 -635.6079 3764.2559 -636.3784 c3764.2578 -636.5039 3764.2578 -636.6182 3764.2578 -636.7231 C3760.1357 -634.6719 3755.917 -632.7715 3752.0049 -630.3564 c3745.7881 -626.5186 3737.6797 -625.3013 3731.0723 -622.2212 c3716.8594 -615.5957 3702.8818 -608.8145 3688.1553 -603.3599 c3674.3672 -598.2524 3661.873 -590.2236 3647.5664 -586.7778 c3641.1055 -585.2217 3635.832 -581.5063 3631.1016 -576.9336 c3626.2666 -572.2588 3620.2051 -568.7549 3614.1523 -565.9531 c3611.2559 -564.6128 3608.373 -563.2773 3605.6611 -561.5869 c3603.167 -560.0322 3601.3301 -557.0791 3599.334 -554.9624 c3597.332 -552.8364 3594.0391 -551.9761 3592.0557 -549.793 c3589.9736 -547.5029 3588.4697 -544.8179 3586.1953 -542.666 c3581.8838 -538.5845 3576.0391 -536.6963 3571.624 -532.9648 c3569.1602 -530.8833 3567.4648 -528.4819 3564.7246 -526.6563 c3560.832 -524.0615 3557.2422 -521.6025 3553.9238 -518.2852 c3548.9004 -513.2598 3542.1953 -510.2456 3536.5732 -505.8359 c3530.6055 -501.1553 3526.0195 -495.5044 3521.0059 -489.8687 c3516.5879 -484.9023 3511.1689 -480.6538 3507.1836 -475.3447 c3505.1318 -472.6108 3503.3438 -469.772 3501.0918 -467.1831 c3498.6162 -464.3384 3495.7988 -461.8726 3493.4512 -458.9028 c3488.5547 -452.7104 3482.002 -448.2876 3476.7168 -442.5293 c3470.2988 -435.5347 3464.0039 -428.8989 3458.7676 -420.9214 c3456.6025 -417.623 3454.8281 -414.2954 3452.3438 -411.1948 c3449.6777 -407.8657 3446.2744 -405.1167 3443.2383 -402.1406 c3440.3809 -399.3408 3438.9961 -395.2031 3437.123 -391.7422 c3435.79 -389.2764 3434.5615 -387.1182 3433.8262 -384.6851 C3434.6777 -384.6333 3435.5645 -384.4106 3436.4648 -383.9678 cf3573.0723 -549.189 m3570.8203 -550.0913 3568.958 -552.1353 3568.668 -554.6294 C3566.9863 -552.1689 3565.3906 -549.6616 3564.083 -547.002 c3563.0625 -544.9243 3562.0537 -542.8555 3561.0449 -540.7935 C3561.502 -541.2363 3561.9609 -541.6875 3562.4316 -542.1572 c3564.6084 -544.3271 3567.4688 -545.5776 3570.0518 -547.1597 c3571.1436 -547.8281 3572.1299 -548.5034 3573.0723 -549.189 Cf3437.5957 -414.7285 m3442.6553 -419.4736 3445.6182 -424.7476 3449.498 -430.3936 c3454.0078 -436.9551 3459.0518 -442.7363 3464.5742 -448.4468 c3468.8594 -452.8789 3473.4922 -456.8159 3477.8135 -461.1787 c3482.666 -466.0791 3487.1826 -471.3423 3491.8994 -476.3755 c3496.5654 -481.3555 3499.7002 -487.168 3504.96 -491.728 c3510.5117 -496.542 3514.9258 -502.8506 3519.8555 -508.2949 c3524.4043 -513.3198 3530.1992 -517.4189 3535.7295 -521.291 c3536.1143 -521.5605 3536.5059 -521.8193 3536.9004 -522.0713 C3537.0078 -522.9004 3537.2988 -523.7617 3537.8213 -524.6338 c3541.5195 -530.8018 3545.4268 -536.9927 3548.2666 -543.6138 c3551.4609 -551.0601 3554.8057 -558.1724 3559.6523 -564.6128 c3563.8066 -570.1328 3566.5596 -575.4248 3568.6895 -581.9326 c3570.874 -588.6074 3574.9238 -594.4819 3577.1084 -601.1538 c3579.4189 -608.2129 3580.3506 -616.4463 3581.626 -623.7798 c3583.0723 -632.0894 3585.9502 -639.7632 3586.0518 -648.2886 c3586.1387 -655.5615 3588.6543 -662.6206 3589.9785 -669.7256 c3591.3369 -677.0151 3590.4209 -685.123 3590.4209 -692.5151 c3590.4209 -707.8521 3589.8916 -723.1323 3588.9531 -738.4404 c3588.502 -745.8057 3587.6367 -753.0752 3586.8633 -760.4097 c3586.1172 -767.4922 3584.501 -774.4707 3583.9219 -781.5732 c3583.3193 -788.9658 3583.5361 -796.1074 3582.001 -803.4365 c3580.3711 -811.2148 3577.377 -818.8135 3573.8428 -825.8989 c3572.541 -828.5088 3572.2871 -831.5322 3571.6211 -834.3379 c3570.8984 -837.3823 3568.1875 -839.9873 3566.4844 -842.5557 c3562.2168 -848.9937 3558.2432 -854.8984 3552.6309 -860.2754 c3548.3867 -864.3418 3542.8672 -867.3496 3538.8379 -871.5215 c3537.2627 -873.1519 3535.7871 -875.0674 3534.1914 -876.8438 C3534.0664 -876.6006 3533.9268 -876.3564 3533.7637 -876.1118 c3525.5127 -863.7358 3517.7656 -851.6396 3513.5293 -837.2759 c3509.4326 -823.3877 3503.7334 -810.1318 3498.9922 -796.4648 c3496.5449 -789.4111 3495.1914 -781.8643 3493.25 -774.6494 c3491.1992 -767.02 3488.6934 -759.502 3486.4531 -751.9233 c3484.3496 -744.8076 3481.8027 -737.835 3479.8301 -730.6826 c3477.6523 -722.7842 3476.0654 -714.7275 3474.1992 -706.7529 c3472.6455 -700.1157 3471.5684 -694.0786 3471.2256 -687.2646 c3470.8281 -679.3813 3470.1211 -671.4604 3469.3662 -663.6035 c3468.6406 -656.0527 3467.7422 -648.5215 3466.6055 -641.0205 c3465.3789 -632.9238 3465.6523 -624.6797 3464.2646 -616.6201 c3463.8125 -613.9922 3463.2695 -611.3809 3462.7031 -608.772 C3463.543 -601.4614 3464.7031 -594.2539 3464.7891 -586.8481 c3464.8408 -582.355 3461.1338 -580.2749 3457.666 -580.5972 C3457.4941 -577.7344 3457.3203 -574.8911 3456.916 -572.021 c3454.7754 -556.8003 3453.1104 -541.4146 3450.3955 -526.2427 c3448.2773 -514.4053 3448.1543 -502.4121 3446.0674 -490.585 c3445.0801 -484.9893 3442.9648 -479.6172 3441.7861 -474.0459 c3440.4619 -467.7905 3439.8965 -461.6284 3438.1211 -455.4478 c3434.4727 -442.7422 3434.1777 -428.6572 3432.1289 -415.6123 c3431.7178 -412.9917 3431.3984 -410.4077 3431.1211 -407.8335 C3432.959 -410.4004 3435.3037 -412.5786 3437.5957 -414.7285 cf3379.6113 -326.5767 m3375.0322 -322.2148 3368.6504 -318.9395 3362.582 -317.2666 c3355.3232 -315.2656 3348.1875 -313.3755 3341.0332 -310.96 c3333.8164 -308.5229 3325.8477 -307.3804 3318.4316 -305.6011 c3310.5811 -303.7168 3302.75 -301.5488 3294.8887 -299.792 c3288.5264 -298.3696 3281.7793 -298.7559 3275.3184 -298.1577 c3267.7539 -297.4575 3260.1064 -297.6284 3252.5186 -297.6284 c3220.4404 -297.6299 3188.0938 -296.9429 3156.0801 -299.2354 c3141.2334 -300.2988 3127.0693 -303.2456 3112.4844 -305.7437 c3110.7021 -306.0488 3108.9766 -306.5264 3107.2539 -306.9927 C3107.543 -306.3999 3107.8398 -305.8223 3108.1396 -305.2734 c3109.873 -302.105 3115.1836 -299.3901 3118.0547 -297.3159 c3130.0391 -288.6611 3142.7207 -281.8286 3155.957 -275.3267 c3169.6455 -268.6016 3183.75 -263.5957 3197.9717 -258.1299 c3204.9404 -255.4517 3211.7725 -252.4087 3218.5947 -249.3823 c3225.4346 -246.3486 3233.9492 -245.4268 3241.29 -244.3555 c3255.793 -242.2383 3270.6465 -242.9502 3285.2559 -242.9502 c3292.2969 -242.9502 3299.3203 -242.9526 3306.333 -243.6597 c3313.4355 -244.3755 3319.9424 -246.7119 3326.6816 -248.8584 c3333.5361 -251.0415 3340.6523 -252.3296 3347.5 -254.6499 c3350.3662 -255.6211 3353.1602 -256.9766 3355.8096 -258.4365 c3357.083 -259.1387 3358.4102 -259.7598 3359.7666 -260.2856 C3361.2002 -261.0942 3361.5205 -261.1084 3360.7275 -260.3281 c3361.4355 -260.9907 3362.2285 -261.52 3363.1094 -261.916 C3365.3477 -263.1157 3367.6992 -263.7012 3369.8633 -264.9863 c3372.6621 -266.6465 3374.7529 -269.1904 3377.1855 -271.3242 c3382.4219 -275.9194 3386.7031 -281.2954 3389.9082 -287.4878 c3396.623 -300.4561 3397.9375 -315.6348 3403.2637 -329.1436 c3405.748 -335.4463 3405.1816 -342.1743 3405.5918 -348.8262 c3405.627 -349.4043 3405.6777 -349.9829 3405.7285 -350.561 C3404.2539 -349.5474 3403.1006 -347.8096 3401.833 -346.5786 c3399.6348 -344.4438 3397.291 -342.4692 3395.1143 -340.3105 c3392.8613 -338.0767 3390.9268 -335.605 3388.6152 -333.4116 c3385.8711 -330.8071 3382.3037 -329.1406 3379.6113 -326.5767 cf3368.5488 -370.2188 m3375.0273 -367.8936 3381.9297 -366.6885 3388.6816 -365.0923 C3393.8105 -367.5688 3398.8252 -370.1274 3404.7998 -369.5737 c3406.1064 -369.4526 3407.207 -369.0254 3408.1035 -368.3965 C3408.1855 -368.6538 3408.2578 -368.9111 3408.3564 -369.1685 c3409.8447 -373.0308 3413.7236 -374.1274 3416.8594 -373.2832 c3417.1133 -373.2148 3417.3604 -373.1304 3417.6025 -373.0371 C3417.1377 -373.8594 3416.8594 -374.8433 3416.8594 -376 C3416.6553 -390.8389 3417.0469 -398.1904 v3417.4883 -406.4883 3418.9492 -414.7788 3420.1904 -422.9824 c3421.334 -430.5396 3422.2207 -438.1563 3423.2656 -445.7275 c3423.793 -449.5483 3424.2871 -453.4092 3425.1318 -457.1738 c3426.0234 -461.144 3427.5996 -464.8447 3427.7754 -468.9517 c3428.0635 -475.6724 3430.3184 -482.8828 3432.374 -489.2393 c3434.6191 -496.1836 3434.6367 -503.749 3435.1328 -510.9614 c3435.6133 -517.9463 3436.959 -524.666 3438.1895 -531.54 c3439.5781 -539.2974 3439.4004 -547.7612 3441.5879 -555.3042 c3442.5898 -558.7607 3442.5039 -562.5869 3442.8145 -566.1484 c3443.1406 -569.894 3444.2051 -573.5117 3444.5605 -577.2261 c3444.876 -580.5269 3444.8096 -583.8452 3445.166 -587.1465 c3445.6289 -591.4404 3446.8291 -595.6372 3447.5469 -599.8989 c3448.0947 -603.1519 3448.8652 -606.4009 3449.6211 -609.6514 C3449.6064 -609.7715 L3448.6904 -617.6611 3448.498 -625.606 3447.8066 -633.5151 c3446.5371 -648.0425 3440.752 -661.7075 3438.3203 -676.0195 c3437.0508 -683.4961 3435.1895 -690.5137 3432.373 -697.5532 c3429.373 -705.0522 3426.9121 -712.6885 3423.5273 -720.0156 c3417.5996 -732.8433 3412.5215 -746.5664 3405.1934 -758.6646 c3401.6738 -764.4731 3398.3887 -770.3818 3395.3486 -776.4546 c3391.9707 -783.2031 3387.4854 -789.3403 3384.1055 -796.0039 c3377.168 -809.6836 3370.1797 -822.9966 3365.3125 -837.6123 c3356.4395 -864.2534 3346.5225 -891.4253 3323.3613 -908.9683 c3317.7988 -913.1816 3311.8311 -916.8486 3305.7822 -920.3125 c3299.7617 -923.7598 3293.1172 -927.417 3286.2734 -928.7959 c3283.3115 -929.3926 3280.4824 -932.1211 3277.541 -933.1621 c3274.418 -934.2671 3271.7119 -935.7007 3268.4336 -936.4834 c3265.1396 -937.2695 3261.8926 -938.0244 3258.6699 -939.0815 c3257.2344 -939.5522 3255.8965 -939.8564 3254.3887 -939.9312 C3254.2852 -939.8994 3254.2109 -939.8848 3254.1172 -939.8579 C3254.1162 -939.4727 3254.1113 -939.0874 3254.1133 -938.7021 c3254.1133 -931.6064 3253.4307 -924.5029 3255.6406 -917.689 c3256.6074 -914.7056 3257.1484 -911.8799 3257.7021 -908.8193 c3258.4277 -904.8169 3259.4805 -900.98 3260.2539 -896.9907 c3261.5859 -890.1167 3261.8428 -883.0566 3263.3047 -876.2085 c3264.8457 -868.9917 3264.8555 -861.7832 3266.9717 -854.7202 c3268.9053 -848.2666 3268.6396 -841.8911 3269.5928 -835.3442 c3270.6758 -827.916 3272.1973 -820.5884 3273.2578 -813.1694 c3275.4727 -797.6616 3278.8291 -782.5801 3281.8984 -767.2319 c3284.9268 -752.0957 3287.4014 -736.9746 3289.9033 -721.7495 c3291.0527 -714.7534 3293.8154 -707.5977 3295.6445 -700.7266 c3297.7246 -692.9116 3300.3047 -685.7256 3303.8213 -678.4399 c3309.418 -666.8423 3313.3281 -654.7476 3318.3857 -642.9443 c3323.6152 -630.7422 3328.7393 -618.6313 3333.1152 -606.0938 c3342.043 -580.5225 3348.6074 -554.1631 3357.5469 -528.5996 c3359.3877 -523.3374 3362.1602 -518.4048 3364.166 -513.1968 c3366.3447 -507.5439 3367.6738 -501.54 3369.5898 -495.7915 c3371.3594 -490.4785 3372.8848 -485.3032 3373.9365 -479.7979 c3375.0898 -473.7607 3377.6484 -469.0059 3380.668 -463.7056 c3383.3242 -459.0449 3385.6689 -454.416 3387.3105 -449.2969 c3389.3682 -442.8828 3393.2139 -436.7778 3396.2236 -430.7578 c3401.8369 -419.5317 3409.0137 -409.2158 3414.7803 -398.0103 c3415.7139 -396.1958 3415.748 -394.4346 3415.2178 -392.9136 C3418.748 -386.272 3408.1006 -380.4624 3403.5537 -387.0825 c3399.5781 -392.8701 3394.8242 -398.0854 3391.248 -404.1465 c3389.7168 -406.7417 3389.043 -409.7031 3388.0254 -412.5142 c3386.916 -415.582 3383.7432 -418.02 3381.5508 -420.2905 c3377.3613 -424.6323 3374.3652 -429.9604 3369.6387 -433.7969 c3364.2373 -438.1821 3359.6602 -443.7739 3354.375 -448.3545 c3352.0801 -450.3433 3349.9053 -452.2295 3348.2451 -454.7969 c3346.8906 -456.8926 3345.6973 -459.6099 3343.666 -461.1621 c3341.1973 -463.0474 3339.2324 -465.6226 3336.8379 -467.6606 c3333.8945 -470.167 3330.9912 -472.8389 3327.9404 -475.1987 c3317.5957 -483.1992 3308.2383 -492.8057 3297.0518 -499.6934 c3291.2412 -503.2715 3285.9277 -507.7271 3280.0957 -511.3613 c3273.6836 -515.3569 3267.2002 -519.0264 3261.0869 -523.4932 c3248.3867 -532.7725 3234.8154 -540.6484 3221.8682 -549.5972 c3196.4111 -567.1924 3169.4688 -582.5396 3143.9463 -600.0762 c3132.4922 -607.9458 3122.334 -617.7231 3111.2822 -626.1641 c3099.5742 -635.1069 3088.0625 -644.2559 3076.3164 -653.1768 c3071.0449 -657.1792 3066.1621 -661.666 3060.7246 -665.4482 c3058.1631 -667.23 3055.4277 -668.7222 3052.6211 -670.0762 c3049.3691 -671.6455 3046.4307 -673.8511 3043.292 -675.6582 c3037.9746 -678.7192 3031.7656 -680.2173 3026.3789 -683.2432 c3023.5469 -684.8335 3020.873 -686.6094 3017.7422 -687.5557 c3014.1885 -688.6309 3010.4023 -688.7041 3006.8262 -689.7393 c2999.8008 -691.7729 2993.457 -695.6899 2986.3604 -697.6924 c2978.292 -699.9688 2970.5469 -702.9351 2962.6953 -705.8789 c2959.1953 -707.1919 2955.7109 -708.5771 2952.1729 -709.7856 c2951.0039 -710.1851 2949.832 -710.5576 2948.6523 -710.917 C2948.9727 -709.7632 2949.2607 -708.5908 2949.4229 -707.332 c2949.4111 -707.4258 2950.1025 -702.752 2949.2178 -704.6597 c2950.1016 -702.7544 2950.8105 -700.7637 2951.5107 -698.7861 c2956.0967 -685.8384 2964.0547 -674.4385 2969.2031 -661.7129 c2971.8975 -655.0552 2975.5508 -648.8379 2978.6572 -642.3691 c2982.0166 -635.3721 2985.5625 -628.5234 2989.9355 -622.0972 c2994.0234 -616.0918 2998.9609 -610.6064 3003.252 -604.7295 c3007.8613 -598.415 3012.1543 -591.9326 3017.6484 -586.3364 c3022.3281 -581.5693 3027.5938 -577.3857 3032.7012 -573.0947 c3038.333 -568.3623 3043.4395 -563.0776 3049.0498 -558.3296 c3054.4863 -553.729 3060.3936 -549.6914 3066.1191 -545.4658 c3072.5723 -540.7031 3078.4941 -535.125 3084.582 -529.9067 c3095.3242 -520.6992 3104.9365 -510.5181 3114.957 -500.5669 c3135.7871 -479.8809 3161.498 -466.437 3187.415 -453.21 c3200.7695 -446.394 3213.2822 -438.0674 3226.7197 -431.3286 c3240.4629 -424.4365 3254.542 -418.2271 3268.6162 -412.0474 c3279.71 -407.1763 3290.8398 -402.8096 3302.2188 -398.6548 c3313.3779 -394.5796 3323.8203 -388.9028 3334.6719 -384.1079 c3345.7744 -379.2021 3357.1299 -374.3174 3368.5488 -370.2188 cf2929.3896 -464.0591 m2935.5527 -461.4238 2940.7744 -456.7837 2946.4424 -453.2813 c2953.0068 -449.2246 2959.4863 -445.043 2966.2109 -441.251 c2972.502 -437.7026 2978.9795 -434.9707 2985.8584 -432.79 c2993.3965 -430.4004 3001.1406 -427.9893 3008.8555 -426.2935 c3016.1514 -424.6899 3022.8154 -421.9883 3029.8848 -419.667 c3037.6445 -417.1187 3045.6191 -415.2539 3053.4355 -412.8926 c3060.709 -410.6958 3067.7363 -407.7607 3074.9443 -405.3604 c3082.6689 -402.7881 3090.4912 -400.5112 3098.2637 -398.0903 c3113.2539 -393.4209 3127.5146 -386.5835 3142.793 -382.9331 c3149.9141 -381.2314 3157.0859 -380.0313 3164.1035 -377.9038 c3171.2871 -375.7261 3178.2578 -373.6909 3185.6299 -372.2729 c3199.7529 -369.5571 3213.4727 -364.4014 3227.5078 -361.1548 c3257.6309 -354.187 3288.2949 -348.166 3319.4053 -349.3594 c3334.7178 -349.9463 3349.5322 -354.0732 3364.3887 -357.4194 c3364.8252 -357.5176 3365.2715 -357.6196 3365.7129 -357.7197 C3362.6035 -358.6548 3359.5137 -359.6929 3356.4326 -360.9746 c3342.5166 -366.7627 3328.5166 -372.4297 3314.9238 -378.9683 c3301.5273 -385.4126 3287.3672 -389.6338 3273.8047 -395.667 c3259.7744 -401.9072 3245.6611 -407.9478 3231.7617 -414.4805 c3221.002 -419.5376 3210.1504 -424.7993 3199.834 -430.8345 C3198.417 -429.1787 3196.2178 -428.2012 3193.4883 -428.8506 c3186.4502 -430.5254 3180.3604 -434.5884 3173.3711 -436.3359 c3165.2236 -438.373 3157.2344 -440.7612 3149.208 -443.231 c3134.3867 -447.7915 3119.6055 -452.4883 3104.7539 -456.9443 c3097.9678 -458.9805 3091.3086 -461.3711 3084.3301 -462.6143 c3076.418 -464.0229 3068.4824 -465.1787 3060.6777 -467.1323 c3045.957 -470.8174 3031.0449 -473.2183 3016.2871 -476.7222 c3001.3711 -480.2642 2986.7207 -484.3457 2971.3379 -485.1997 c2963.9629 -485.6089 2956.6777 -485.0986 2949.3262 -484.5723 c2942.25 -484.0654 2935.0322 -484.7993 2928.041 -483.4102 c2923.4736 -482.5029 2918.0078 -479.6826 2917.666 -474.4155 c2917.4482 -471.0752 2926.8252 -465.1558 2929.3896 -464.0591 cf*U3739.5098 -1384.1582 m3730.7695 -1385.0498 3720.7119 -1385.9629 3711.6436 -1384.9063 C3713.293 -1371.0957 3715.2012 -1357.3184 3716.6875 -1343.4893 c3720.1885 -1310.9219 3722.7295 -1278.1543 3725.459 -1245.5107 c3726.8232 -1229.1973 3728.6045 -1213.2461 3728.0605 -1196.8516 c3727.8018 -1189.0576 3727.9766 -1181.2627 3727.9766 -1173.4658 c3727.9766 -1165.7354 3727 -1158.1016 3727 -1150.3936 C3727 -1120.0586 L3727 -1109.3145 3725.8691 -1098.623 3725.793 -1087.8857 c3725.7324 -1079.5059 3712.6172 -1079.5 3712.6768 -1087.8857 c3712.7891 -1103.6738 3713.7686 -1119.418 3713.7686 -1135.2266 c3713.7686 -1150.6396 3714.8604 -1165.918 3714.8604 -1181.3252 c3714.8604 -1189.0771 3715.0996 -1196.8086 3715.292 -1204.5566 c3715.5039 -1213.0518 3714.668 -1221.3525 3713.8496 -1229.792 c3712.2627 -1246.1572 3711.1885 -1262.5664 3709.4023 -1278.9131 c3705.8633 -1311.2998 3703.8955 -1343.75 3699.5781 -1376.0645 c3697.5176 -1391.4883 3696.7373 -1407.0234 3694.0801 -1422.3496 c3692.8398 -1429.5078 3691.5078 -1436.6172 3690.8125 -1443.8604 c3690.043 -1451.8975 3688.1387 -1459.4648 3686.751 -1467.4033 c3685.3652 -1475.3379 3683.9258 -1483.2334 3682.3447 -1491.1357 c3681.9141 -1493.2871 3682.25 -1495.5088 3682.3428 -1497.6797 c3682.3848 -1498.6758 3682.3828 -1499.6709 3682.3721 -1500.668 C3681.5313 -1501.75 3681 -1503.1895 3681 -1505 C3681 -1505.5986 3681 -1505.9629 v3681 -1506.165 3681.0273 -1506.3496 3681.041 -1506.542 C3678.3975 -1501.8184 3670.3066 -1500.959 3669.2461 -1507.5088 c3669.0986 -1508.417 3666.9902 -1509.252 3666.1318 -1509.8135 c3663.5508 -1511.499 3661.3994 -1513.5176 3658.666 -1515.043 c3655.9023 -1516.585 3653.5527 -1518.5977 3650.6846 -1519.957 c3647.4141 -1521.5068 3644.9736 -1523.6328 3642.8994 -1526.6436 c3641.9941 -1527.959 3639.5137 -1529.1807 3636.9648 -1530.6406 c3634.0967 -1532.2852 3631.2324 -1533.9512 3628.4014 -1535.6592 c3621.8164 -1539.6309 3615.4805 -1543.9102 3608.7998 -1547.7393 c3602.7793 -1551.1895 3595.4727 -1553.2822 3588.5957 -1554.1777 c3585.0723 -1554.6357 3581.1367 -1554.7773 3577.6621 -1553.958 c3575.4531 -1553.4365 3575.8574 -1549.2813 3575.9463 -1547.752 c3576.3438 -1540.9141 3580.8301 -1534.1084 3583.0684 -1527.7607 c3585.6006 -1520.5811 3589.3789 -1513.7813 3592.123 -1506.6523 c3597.8652 -1491.7354 3605.8672 -1477.6885 3611.0977 -1462.6064 c3613.4268 -1455.8936 3615.1406 -1448.9795 3617.3271 -1442.2207 c3619.7988 -1434.582 3623.4336 -1427.2832 3626.3828 -1419.8174 c3631.9707 -1405.6758 3634.5488 -1390.9521 3638.4121 -1376.3203 c3642.2246 -1361.8789 3650.4033 -1349.2441 3654.4014 -1334.7988 c3656.7373 -1326.3594 3656.7578 -1316.958 3660.25 -1308.9365 c3662.1738 -1304.5146 3662.8369 -1299.6582 3664.0039 -1294.9873 c3665.1494 -1290.4043 3666.2412 -1285.8008 3666.7314 -1281.0957 c3667.5996 -1272.7607 3654.5918 -1272.8447 3653.7314 -1281.0957 c3653.0049 -1288.0693 3650.8066 -1295.5313 3648.9912 -1302.291 c3648.0527 -1305.7822 3646.2627 -1308.7363 3645.6035 -1312.3662 c3644.875 -1316.373 3644.2559 -1320.3906 3643.4902 -1324.3936 c3642.1494 -1331.3926 3639.959 -1338.2012 3637.3193 -1344.8096 c3634.4268 -1352.0488 3630.4287 -1358.6563 3627.9004 -1366.0684 c3624.9346 -1374.7617 3623.1318 -1383.7676 3621.0537 -1392.7031 C3619.6787 -1392.3818 3618.1387 -1392.5293 3616.5605 -1393.374 c3610.3154 -1396.7158 3603.6982 -1398.6758 3596.7646 -1400.0215 c3593.4482 -1400.665 3590.0664 -1401.125 3586.6924 -1401.2939 c3582.6426 -1401.4961 3578.7383 -1402.8818 3574.7227 -1403.3271 c3559.9961 -1404.9609 3545.3066 -1406.2432 3530.7656 -1409.2686 c3515.9248 -1412.3564 3500.877 -1415.8633 3486.3154 -1420.0479 c3479.0254 -1422.1436 3472.0225 -1423.7314 3464.5244 -1424.9395 c3456.582 -1426.2197 3448.7236 -1428.8057 3440.8955 -1430.6816 c3410.9922 -1437.8477 3380.6543 -1444.1201 3351.7998 -1454.9941 c3337.4434 -1460.4053 3323.4297 -1466.6855 3309.1953 -1472.4043 c3294.835 -1478.1738 3280.6719 -1483.9531 3266.8379 -1490.9434 c3253.8066 -1497.5273 3241.5107 -1505.5244 3228.5039 -1512.0908 c3215.2598 -1518.7773 3201.9014 -1525.8379 3189.2061 -1533.5078 c3182.5332 -1537.5391 3176.0449 -1541.875 3169.5576 -1546.1953 c3163.1484 -1550.4629 3155.8291 -1553.5908 3148.8496 -1556.8066 c3134.584 -1563.3789 3120.8232 -1570.7998 3106.791 -1577.8516 c3094.0762 -1584.2412 3082.9023 -1592.0586 3072.1484 -1601.3818 c3060.959 -1611.082 3050.4922 -1621.4756 3038.9443 -1630.7773 c3027.2813 -1640.1729 3015.1064 -1648.9717 3003.1758 -1658.0166 c2997.2695 -1662.4932 2991.6172 -1667.4561 2985.5859 -1671.7275 c2980.4678 -1675.3516 2975.123 -1678.8516 2971.2871 -1683.8838 c2966.2012 -1690.5537 2977.502 -1697.0166 2982.5117 -1690.4443 c2985.8965 -1686.0059 2992.1992 -1683.248 2996.4541 -1679.7529 c3002.7256 -1674.6025 3009.1895 -1669.7373 3015.5859 -1664.7373 c3027.7998 -1655.1895 3040.4824 -1646.2852 3052.4756 -1636.4424 c3064.4072 -1626.6494 3075.3252 -1615.7139 3087.0391 -1605.6621 c3098.3867 -1595.9229 3111.9707 -1589.9082 3125.082 -1583.0439 c3139.082 -1575.7148 3153.4512 -1569.3096 3167.5469 -1562.1973 c3181.873 -1554.9697 3194.5986 -1544.8789 3208.8672 -1537.4326 c3236.0938 -1523.2246 3262.167 -1506.8789 3290.1377 -1494.1104 c3303.1074 -1488.1895 3316.5723 -1483.4072 3329.7207 -1477.8984 c3343.3203 -1472.1992 3356.9375 -1466.5479 3370.9766 -1462.0059 c3385.0068 -1457.4658 3399.5938 -1453.8643 3413.8457 -1450.0176 c3428.1895 -1446.1465 3442.9336 -1443.6221 3457.3652 -1440.0273 c3463.9854 -1438.3789 3470.5 -1437.166 3477.2256 -1436.0225 c3484.4775 -1434.7891 3491.4277 -1431.9492 3498.5967 -1430.2754 c3512.8643 -1426.9424 3527.0313 -1423.1064 3541.4414 -1420.3652 c3555.3555 -1417.7188 3569.6465 -1417.8115 3583.542 -1414.8975 c3590.1553 -1413.5098 3596.9775 -1413.2822 3603.6211 -1411.8643 c3608.2334 -1410.8789 3612.7324 -1409.3887 3617.0645 -1407.5156 C3616.8496 -1408.1787 3616.6348 -1408.8418 3616.4063 -1409.501 c3613.9824 -1416.5078 3611.041 -1423.334 3608.1602 -1430.1611 c3605.1113 -1437.3906 3602.9365 -1444.793 3600.7178 -1452.3096 c3596.2461 -1467.4541 3588.584 -1481.4512 3582.4912 -1495.9922 c3576.7109 -1509.7891 3570.3994 -1523.4756 3565.2617 -1537.5303 c3561.0645 -1549.0098 3562.3203 -1565.2549 3577.2715 -1567.041 c3592.2598 -1568.8311 3607.127 -1563.9434 3619.8496 -1556.3291 c3626.4111 -1552.4014 3632.7217 -1547.875 3639.498 -1544.3213 c3642.3145 -1542.8447 3645.0332 -1541.0166 3647.7871 -1539.4102 c3651.0625 -1537.498 3652.4277 -1535.1279 3654.9072 -1532.4941 c3656.8145 -1530.4688 3660.3652 -1529.8232 3662.5635 -1527.9375 c3665.459 -1525.4541 3669.2861 -1524.2783 3672.1563 -1521.6621 c3675.1201 -1518.96 3680.8848 -1516.501 3681.7813 -1510.9639 c3681.8779 -1510.3691 3681.8936 -1509.8027 3681.8535 -1509.2598 C3683.8193 -1512.6279 3688.791 -1513.2578 3692.1074 -1510.5586 c3695.4219 -1507.8594 3695.4111 -1502.6152 3695.3682 -1498.7461 c3695.3486 -1496.9482 3695.207 -1495.1533 3695.1211 -1493.3584 c3694.9551 -1489.8418 3696.7324 -1485.3252 3697.4268 -1481.8555 c3698.874 -1474.6172 3699.7617 -1467.3105 3701.5156 -1460.126 c3703.3926 -1452.4326 3703.4434 -1444.5742 3704.6611 -1436.7646 c3705.7676 -1429.6631 3707.2842 -1422.6143 3708.3848 -1415.502 c3709.292 -1409.6348 3709.7207 -1403.6719 3710.248 -1397.7354 C3719.3125 -1398.6826 3728.8066 -1398.0332 3737.707 -1397.377 c3749.6182 -1396.498 3761.5947 -1396.7852 3773.5488 -1396.7852 c3785.0352 -1396.7852 3796.4639 -1395.6777 3807.9541 -1395.6777 c3814.9404 -1395.6777 3825.585 -1397.7676 3829.5811 -1390.2666 c3833.3154 -1383.2588 3823.4355 -1376.999 3819.0352 -1382.6621 C3818.7588 -1382.7324 3818.2236 -1382.8271 3817.3105 -1382.8379 c3816.0898 -1382.8525 3814.8652 -1382.7451 3813.6484 -1382.6797 c3809.2236 -1382.4414 3804.7129 -1382.6406 3800.2813 -1382.6777 c3790.1797 -1382.7656 3780.1289 -1383.7539 3770.0117 -1383.7539 c3759.9043 -1383.7539 3749.5625 -1383.1318 3739.5098 -1384.1582 cf2863.0234 -1786.6318 m2863.0635 -1786.6641 2863.1045 -1786.6963 2863.1445 -1786.7285 c2866.9912 -1789.7559 2871.7988 -1787.8037 2873.7324 -1784.6309 C2873.8828 -1784.918 2875.0176 -1783.0781 2875.5068 -1782.5527 c2876.5078 -1781.4814 2877.541 -1780.4404 2878.5742 -1779.4004 c2882.1045 -1775.8467 2885.6826 -1772.6211 2889.5156 -1769.3662 c2898.7168 -1761.5508 2907.4287 -1752.6631 2916 -1744.1563 c2921.957 -1738.2461 2912.7617 -1729.0557 2906.8086 -1734.9648 c2897.4521 -1744.249 2887.9258 -1753.9434 2877.7549 -1762.3223 c2874.127 -1765.3105 2870.9951 -1768.5449 2867.7275 -1771.8867 c2865.3486 -1774.3203 2862.3828 -1776.9717 2861.3516 -1780.3076 c2860.7344 -1782.3047 2861.3027 -1785.2773 2863.0234 -1786.6318 cf2947.2725 -1698.0742 m2946.1514 -1699.8066 2943.9658 -1700.9727 2942.3711 -1702.2168 c2940.2041 -1703.9053 2938.2266 -1705.7383 2936.2813 -1707.6738 c2934.3252 -1709.6201 2932.4004 -1711.6758 2930.207 -1713.3604 c2928.9082 -1714.3584 2927.3164 -1715.0938 2926.5322 -1716.6318 c2925.9912 -1717.6914 2925.543 -1719.0732 2924.498 -1719.7578 c2917.5156 -1724.3281 2924.0225 -1735.5898 2931.0586 -1730.9824 c2933.7031 -1729.251 2935.5225 -1727.2334 2937.0938 -1724.4941 c2937.832 -1723.2061 2942.2666 -1720.0371 2944.1309 -1718.207 c2948.7402 -1713.6787 2954.9736 -1710.0801 2958.4971 -1704.6348 c2963.0664 -1697.5742 2951.8076 -1691.0645 2947.2725 -1698.0742 cf*u1 D3352.4043 -1306.251 m3342.9609 -1306.3467 3332.5391 -1308.6484 3323.3867 -1310.8496 c3320.7051 -1311.4941 3319.2871 -1313.2861 3318.873 -1315.3281 C3313.5078 -1315.3486 3308.8369 -1321.9092 3313.9688 -1326.0801 c3318.8242 -1330.0264 3322.0488 -1335.6846 3325.4766 -1340.8428 c3329.5156 -1346.9209 3334.1338 -1351.8779 3339.3867 -1356.8926 c3344.2979 -1361.5811 3350.3535 -1365.3223 3355.667 -1369.5605 c3361.5459 -1374.248 3366.5898 -1376.3906 3374.1289 -1375.002 c3380.5332 -1373.8213 3386.7744 -1371.3291 3393.2275 -1370.1045 c3401.0547 -1368.6201 3408.7646 -1368 3416.7119 -1368 C3439.7314 -1368 L3447.4443 -1368 3454.9922 -1370.2061 3462.6875 -1370.5732 c3469.7949 -1370.9121 3477.1006 -1369.2402 3484.1807 -1368.6484 c3491.7373 -1368.0137 3499.3945 -1367.5391 3506.9795 -1367.3203 c3513.7617 -1367.125 3520.5674 -1367.5195 3527.3311 -1366.9033 c3534.6631 -1366.2354 3541.7656 -1363.6592 3548.9766 -1362.2129 c3554.5078 -1361.1045 3560.0645 -1359.5313 3563.4404 -1354.7666 c3564.8096 -1352.8359 3565.0117 -1350.0244 3565.1816 -1347.7627 c3565.458 -1344.0693 3566.3828 -1340.6777 3567.459 -1337.1289 c3569.4561 -1330.541 3571.2695 -1323.9707 3573.2109 -1317.3779 c3573.6807 -1315.7832 3574.0254 -1314.1572 3574.2998 -1312.5176 C3577.2529 -1310.1943 3577.4453 -1305.9609 3575.7734 -1303.2041 C3576.4277 -1302.0625 3576.9326 -1300.6426 3577.1543 -1299.4854 c3577.9102 -1295.542 3575.9697 -1292.918 3572.9102 -1290.7656 c3567.5059 -1286.9629 3562.3467 -1293.1191 3563.6885 -1298.251 C3563.2188 -1299.0928 3562.7002 -1299.9385 3562.4063 -1300.79 c3562.2197 -1301.3291 3562.1035 -1301.9004 3562.0137 -1302.4824 C3560.0391 -1302.6816 3558.0586 -1302.7803 3556.2578 -1302.8809 c3551.2158 -1303.1621 3546.125 -1302.957 3541.085 -1302.749 c3540.2207 -1302.7129 3539.3594 -1302.6777 3538.4951 -1302.6426 C3538.2617 -1302.1582 3537.9648 -1301.7051 3537.6172 -1301.291 C3537.5 -1300.5586 3537.3027 -1299.8447 3537.0098 -1299.1523 C3536.666 -1298.0996 3536.166 -1297.1777 3535.5859 -1296.3047 C3535.0176 -1290.1289 3533.1699 -1284.1484 3532.5244 -1277.9561 c3531.7119 -1270.1504 3529.9648 -1262.4902 3528.5625 -1254.7783 c3527.1738 -1247.1348 3525.9492 -1239.5029 3524.6934 -1231.8398 c3523.4453 -1224.2227 3521.6768 -1216.8076 3521.5508 -1209.0508 c3521.415 -1200.6758 3508.4141 -1200.6631 3508.5508 -1209.0508 c3508.6953 -1217.9365 3510.6309 -1226.5791 3512.1582 -1235.2949 c3513.7109 -1244.1611 3515.1475 -1253.0625 3516.6846 -1261.9375 c3518.2051 -1270.7188 3519.4492 -1279.457 3520.79 -1288.2813 c3521.1367 -1290.5625 3521.9746 -1292.8408 3522.458 -1295.1045 c3522.9434 -1297.3799 3522.3965 -1299.7383 3523.6289 -1301.8408 c3523.6797 -1301.9287 3523.7197 -1302.0176 3523.7686 -1302.1055 C3519.1309 -1301.9746 3514.4902 -1301.8916 3509.8301 -1301.9297 c3487.79 -1302.1094 3465.7588 -1302.8672 3443.7168 -1302.9688 c3433.1582 -1303.0176 3422.6465 -1301.1504 3412.0996 -1301.7168 c3410.7822 -1301.7871 3409.4688 -1301.8789 3408.1572 -1301.9824 C3408.5254 -1300.5 3408.9297 -1299.0635 3409.1172 -1297.4688 c3409.4805 -1294.3789 3408.9453 -1291.2373 3409.4004 -1288.125 c3410.3789 -1281.4346 3413.375 -1275.6504 3415.6484 -1269.3721 c3417.6963 -1263.7188 3420.8281 -1258.6592 3422.1348 -1252.7256 c3423.5205 -1246.4336 3425.7939 -1240.3945 3427.1123 -1234.0537 c3429.8848 -1220.7246 3433.584 -1207.4043 3434.3477 -1193.7656 c3434.7051 -1187.3887 3436.416 -1181.0801 3437.2656 -1174.7559 c3438.2842 -1167.1797 3439.6494 -1159.6543 3440.5215 -1152.0156 c3441.248 -1145.6475 3443.708 -1139.7363 3446.0742 -1133.8379 c3448.5332 -1127.7109 3450.1816 -1121.4355 3451.5918 -1114.9922 c3453.0693 -1108.2451 3454.5 -1101.5576 3456.915 -1095.0713 c3459.3916 -1088.4199 3460.2012 -1081.5996 3461.2813 -1074.6138 c3462.3164 -1067.9185 3464.2607 -1061.6323 3465.9766 -1055.0903 c3467.8047 -1048.1182 3468.6777 -1041.083 3470.959 -1034.21 c3473.4111 -1026.8242 3476.7598 -1020.0137 3480.5781 -1013.4302 C3480.7842 -1016.9922 3481.0605 -1020.5532 3481.4512 -1024.1367 c3482.3037 -1031.9536 3481.5908 -1039.8867 3482.1621 -1047.729 c3483.377 -1064.415 3482.8652 -1081.3896 3485.2168 -1097.9648 c3485.7529 -1101.7393 3486.8076 -1105.4131 3487.7305 -1109.1055 c3488.7842 -1113.3164 3488.9023 -1117.1328 3488.9023 -1121.4512 c3488.9023 -1125.7744 3488.9805 -1129.5449 3490.1309 -1133.7402 c3491.3125 -1138.0537 3492.7383 -1142.3008 3494.1172 -1146.5527 c3496.3184 -1153.3359 3499.6504 -1160.3789 3499.8174 -1167.5703 c3499.9053 -1171.3789 3501.001 -1175.042 3500.8516 -1178.8613 c3500.6855 -1183.1143 3500.3613 -1186.8926 3501.1416 -1191.1299 c3502.6572 -1199.3672 3515.1846 -1195.8682 3513.6768 -1187.6748 c3513.0518 -1184.2773 3513.7754 -1180.8057 3513.9092 -1177.3945 c3514.0586 -1173.5576 3512.8662 -1169.6816 3512.7773 -1165.8262 c3512.6094 -1158.584 3509.3926 -1151.6582 3507.2227 -1144.8604 c3504.7227 -1137.0273 3501.9023 -1129.7402 3501.9023 -1121.4512 c3501.9023 -1118.2217 3502.457 -1114.4102 3501.6699 -1111.2637 C3498.3945 -1098.165 L3494.498 -1082.5791 3497.3125 -1065.5645 3495.3525 -1049.6797 c3494.3799 -1041.7954 3495.0313 -1033.8013 3494.5918 -1025.8857 c3494.0996 -1017.0327 3493.1719 -1008.3677 3493.1689 -999.4668 c3493.168 -997.4067 3492.3809 -995.856 3491.1963 -994.8086 C3490.999 -989.5142 3482.6855 -986.1016 3478.874 -991.8198 c3471.7539 -1002.5029 3464.2969 -1013.4375 3460.1582 -1025.6978 c3458.0723 -1031.8774 3456.0098 -1037.915 3455 -1044.3828 c3453.8486 -1051.7495 3450.7656 -1058.6719 3449.5645 -1065.9844 c3448.5195 -1072.3379 3447.6074 -1078.7124 3446.5625 -1085.0664 c3446.0137 -1088.4023 3444.3164 -1091.7197 3443.1855 -1094.8896 c3441.9238 -1098.4248 3441.125 -1102.1514 3440.2959 -1105.8057 c3438.7813 -1112.4844 3437.5283 -1119.2197 3435.3184 -1125.7168 c3433.1191 -1132.1826 3430.1094 -1138.2656 3428.5596 -1144.9541 c3427 -1151.6855 3427.0713 -1158.7568 3426.0098 -1165.5693 c3424.8906 -1172.752 3423.2568 -1179.876 3422.1426 -1187.0791 c3421.127 -1193.6387 3420.8164 -1200.2207 3419.6816 -1206.7773 c3418.3975 -1214.2012 3416.3848 -1221.4922 3414.9209 -1228.8877 c3413.7119 -1235.002 3411.9404 -1240.8018 3410.1748 -1246.7578 c3409.3691 -1249.4785 3409.1094 -1252.2773 3407.9209 -1254.8916 c3406.4658 -1258.0889 3404.5283 -1261.0439 3403.5879 -1264.4512 c3401.8438 -1270.7607 3398.6191 -1276.3477 3397.2148 -1282.7979 c3395.96 -1288.5645 3396.4141 -1294.4395 3395.2578 -1300.1084 c3395.0254 -1301.2451 3395.0762 -1302.2871 3395.3242 -1303.2246 C3391.0664 -1303.6484 3386.7988 -1304.0205 3382.4863 -1304.1357 c3372.4277 -1304.4043 3362.4756 -1306.1484 3352.4043 -1306.251 cf0 D3415.7842 -1314.5801 m3426.4033 -1314.3604 3437.0313 -1316.0146 3447.6885 -1315.9473 c3469.6836 -1315.8096 3491.6699 -1315.0449 3513.666 -1314.9014 c3524.0322 -1314.834 3534.3359 -1315.5244 3544.6895 -1315.8867 c3549.0879 -1316.041 3553.501 -1316.0352 3557.8945 -1315.7891 c3558.6328 -1315.748 3559.3994 -1315.7031 3560.1777 -1315.6543 C3559.6641 -1317.2637 3559.084 -1318.8525 3558.498 -1320.4238 c3557.3105 -1323.6055 3556.8789 -1327.1104 3555.9238 -1330.3955 c3554.249 -1336.1572 3552.3379 -1341.7148 3552.1816 -1347.7656 c3552.1807 -1347.8105 3552.1807 -1347.834 3552.1797 -1347.8701 C3550.999 -1348.2861 3549.7148 -1348.6074 3548.5439 -1348.9648 c3545.5107 -1349.8906 3542.2998 -1350.2988 3539.1992 -1350.9424 c3532.8301 -1352.2646 3527.3066 -1354.1455 3520.7109 -1354.2676 c3513.7939 -1354.3965 3506.8955 -1354.251 3499.9844 -1354.6787 c3493.5537 -1355.0781 3487.085 -1355.4453 3480.666 -1356.0547 c3473.4473 -1356.7402 3466.4316 -1358.1201 3459.1553 -1357.5332 c3452.6406 -1357.0078 3446.2949 -1355.5039 3439.7314 -1355.373 c3432.0654 -1355.2197 3424.3799 -1355.373 3416.7119 -1355.373 c3403.3115 -1355.373 3389.334 -1356.6826 3376.4854 -1360.7373 c3374.1973 -1361.459 3371.8818 -1362.4141 3369.4746 -1362.6455 c3366.9639 -1362.8867 3364.0176 -1359.708 3362.2402 -1358.2461 c3356.8164 -1353.7852 3351.1348 -1349.7783 3345.8213 -1345.1914 c3338.6992 -1339.042 3334.7266 -1330.1719 3328.9629 -1322.8965 C3337.7393 -1320.8887 3346.8965 -1319.4434 3355.8525 -1319.1836 c3366.0137 -1318.8887 3376.0625 -1317.1631 3386.2432 -1317.0684 c3396.1719 -1316.9766 3405.8984 -1314.7852 3415.7842 -1314.5801 cf*U3014.0137 -1717 m3009.627 -1717 3005.2988 -1715.8936 3000.915 -1715.752 c2992.5273 -1715.4805 2992.5537 -1728.3252 3000.915 -1728.5957 c3005.3047 -1728.7373 3009.5674 -1729.5459 3013.957 -1729.6875 c3018.3125 -1729.8281 3023 -1729.6875 3027 -1729.6875 c3035 -1729.6875 3035 -1717 3027 -1717 C3014.0137 -1717 Lf3840.0117 -1662.3555 m3839.4463 -1662.2012 3838.834 -1662.1084 3838.1602 -1662.1084 c3834.1523 -1662.1064 3830.1543 -1662.0664 3826.1523 -1661.8359 c3821.4219 -1661.5625 3816.9385 -1660.2832 3812.2744 -1659.6133 c3803.126 -1658.2998 3793.8926 -1657.8652 3784.6729 -1657.3662 c3775.082 -1656.8477 3765.6865 -1655.9053 3756.0723 -1656.5723 c3745.9707 -1657.2715 3735.9063 -1658.6943 3725.9766 -1660.6582 c3708.1387 -1664.1855 3690.627 -1669.7373 3673.4473 -1675.5801 c3664.2578 -1678.7061 3655.4277 -1677.4004 3646.0537 -1675.9609 c3638.3145 -1674.7734 3629.6367 -1674.3174 3623.123 -1669.5449 c3620.6143 -1667.707 3618.1484 -1668.1006 3616.375 -1669.5713 C3615.3604 -1668.5176 3613.9707 -1667.7617 3612.2021 -1667.5664 c3597.0303 -1665.8867 3582.335 -1661.415 3566.999 -1660.8105 c3559.5156 -1660.5156 3552.0088 -1660.9834 3544.5234 -1661.0166 c3536.6934 -1661.0518 3528.8789 -1660.4385 3521.0469 -1660.5664 c3513.8535 -1660.6826 3507.7051 -1662.4365 3500.9629 -1664.75 c3493.8525 -1667.1895 3486.6426 -1669.5215 3479.626 -1672.2617 c3466.4102 -1677.4229 3454.5723 -1685.4971 3441.3457 -1690.625 c3434.7295 -1693.1895 3427.4512 -1693.5361 3420.6602 -1695.7598 c3413.373 -1698.1465 3406.7109 -1699.8701 3399 -1699.5938 c3395.7871 -1699.4795 3392.583 -1699.0801 3389.4082 -1698.5957 c3386.5508 -1698.1592 3383.6152 -1698.3896 3380.7979 -1697.8291 c3377.9346 -1697.2598 3374.8506 -1695.623 3371.958 -1694.7754 c3368.4316 -1693.7432 3364.4824 -1693.0723 3361.1436 -1691.6191 c3354.8203 -1688.8672 3348.1465 -1687.9941 3341.7783 -1685.3271 c3335.0371 -1682.5029 3327.8281 -1680.8477 3320.7539 -1679.0996 c3314.915 -1677.6563 3308.8184 -1676.2275 3302.8164 -1675.6045 c3299.001 -1675.209 3295.1797 -1675.4375 3291.4443 -1674.5039 c3287.2158 -1673.4463 3282.9336 -1671.9326 3278.5498 -1671.9326 c3269.001 -1671.9326 3259.5215 -1672.0098 3250.001 -1672.8428 c3239.6709 -1673.7471 3229.6328 -1675.8672 3219.3682 -1677.1963 c3214.7656 -1677.792 3209.4385 -1677.624 3205.0977 -1679.2832 c3200.5371 -1681.0264 3195.6729 -1681.9326 3190.8828 -1682.7813 c3185.9453 -1683.6563 3180.9219 -1684.1973 3176.0234 -1685.2637 c3171.625 -1686.2217 3167.5908 -1688.7344 3163.1123 -1689.3203 c3153.3369 -1690.6006 3144.0479 -1694.5273 3134.8447 -1698.0273 c3125.2441 -1701.6777 3115.9697 -1704.8867 3106.0059 -1707.418 c3100.9746 -1708.6963 3095.9805 -1710.0957 3091.0361 -1711.6787 c3085.5039 -1713.4512 3080.0068 -1715.877 3074.1719 -1716.5254 c3064.083 -1717.6465 3054 -1716.6875 3043 -1716.6875 c3035 -1716.6875 3035 -1729.6875 3043 -1729.6875 C3074.3564 -1731.5752 3088.6357 -1726.1797 v3103.2109 -1720.6729 3118.748 -1718.2871 3133.2402 -1712.5137 c3140.0664 -1709.793 3147.0566 -1707.3555 3153.9492 -1704.8086 c3160.9053 -1702.2373 3168.2002 -1701.6973 3175.1611 -1699.0684 c3181.7119 -1696.5957 3189.1719 -1696.2305 3196.0332 -1695.0137 c3199.2422 -1694.4453 3202.416 -1693.7139 3205.5479 -1692.8145 c3209.6113 -1691.6465 3213.3008 -1690.9316 3217.5215 -1690.4248 c3232.6543 -1688.6113 3247.3848 -1685.6143 3262.668 -1685.0283 c3269.835 -1684.7539 3277.2695 -1684.3594 3284.2451 -1686.1035 c3287.9229 -1687.0225 3291.5176 -1688.2041 3295.3301 -1688.21 c3299.4316 -1688.2168 3303.4297 -1688.6709 3307.457 -1689.4082 c3313.418 -1690.498 3319.4336 -1692.1191 3325.3047 -1693.6572 c3332.4492 -1695.5283 3339.1709 -1699.293 3346.3105 -1700.791 c3352.8379 -1702.1592 3359.1934 -1704.3018 3365.5166 -1706.376 c3371.8613 -1708.457 3377.9131 -1710.9912 3384.6563 -1711.126 c3393.4541 -1711.3008 3402.0273 -1713.8867 3410.8945 -1711.9893 c3415.3809 -1711.0303 3419.752 -1709.7002 3424.1152 -1708.2959 c3429.3184 -1706.6221 3434.2148 -1705.6631 3439.5918 -1704.7559 c3448.9102 -1703.1846 3458.292 -1697.2891 3466.5469 -1692.9287 c3475.2783 -1688.3154 3483.9531 -1684.126 3493.3955 -1681.1523 c3501.9209 -1678.4688 3510.2129 -1674.0908 3519.25 -1673.625 c3529.5469 -1673.0928 3539.8965 -1674.1328 3550.207 -1673.9521 c3560.7666 -1673.7666 3570.7949 -1674.1504 3581.2734 -1675.3096 c3591.667 -1676.46 3601.7881 -1679.4131 3612.2021 -1680.5664 c3613.5898 -1680.7197 3614.7383 -1680.4805 3615.6602 -1679.9805 C3615.9316 -1680.2568 3616.2266 -1680.5234 3616.5625 -1680.7695 c3622.6572 -1685.2354 3630.2246 -1686.5703 3637.5176 -1687.7559 c3647.1064 -1689.3135 3657.0439 -1691.3545 3666.7813 -1690.3906 c3675.8213 -1689.4961 3683.8262 -1684.9707 3692.5264 -1682.7881 c3701.8027 -1680.46 3710.9063 -1677.2109 3720.2227 -1675.1504 c3730.1553 -1672.9541 3740.0576 -1671.166 3750.1777 -1670.1045 c3760.5938 -1669.0117 3770.5859 -1669.5137 3780.9961 -1670.1572 c3790.877 -1670.7676 3800.8125 -1670.999 3810.624 -1672.4082 c3819.9502 -1673.7471 3828.6621 -1675.1035 3838.1602 -1675.1084 c3838.834 -1675.1084 3839.4463 -1675.0176 3840.0117 -1674.8633 C3840.0117 -1662.3555 Lf3026.7598 -1897.2969 m3033.5156 -1896.0166 3040.4668 -1895.6582 3047.2676 -1894.5674 c3054.1484 -1893.4629 3060.9824 -1892.0713 3067.8457 -1890.8633 c3079.8252 -1888.7539 3092.1318 -1887.8096 3103.7373 -1883.9365 c3109.626 -1881.9717 3116.5449 -1883.2617 3122.7168 -1882.2754 c3128.71 -1881.3184 3134.4121 -1879.208 3140.2949 -1877.7773 c3146.6631 -1876.2285 3153.1875 -1875.9893 3159.709 -1875.96 c3167.4883 -1875.9258 3175.0938 -1874.8154 3182.7539 -1873.543 c3191.0098 -1872.1719 3187.4961 -1859.6455 3179.2988 -1861.0078 c3164.0586 -1863.5391 3148.5293 -1862.0898 3133.5137 -1866.0879 c3126.9824 -1867.8281 3120.8887 -1869.9326 3114.0557 -1870.0488 c3110.5059 -1870.1104 3106.9854 -1870.0029 3103.4629 -1870.5654 c3099.6904 -1871.168 3096.002 -1872.752 3092.2441 -1873.6074 c3078.1504 -1876.8125 3063.6328 -1878.4805 3049.3994 -1881.0654 c3041.8955 -1882.4287 3034.3652 -1883.1553 3026.8203 -1884.1807 c3019.3652 -1885.1934 3012.1055 -1887.2842 3004.6445 -1888.2979 c2973.374 -1892.5459 2941.7676 -1894.3232 2910.2607 -1895.54 c2895.1367 -1896.125 2879.9766 -1896.7539 2864.833 -1896.7939 c2849.0898 -1896.8359 2833.1455 -1897.4883 2817.4258 -1896.6104 c2810.6514 -1896.2314 2803.957 -1894.9131 2797.2334 -1894.0732 c2790.5273 -1893.2363 2783.6543 -1893.1094 2777.0488 -1891.6572 c2771.0029 -1890.3291 2764.8076 -1889.2334 2758.8955 -1887.4482 c2752.8818 -1885.6328 2746.8145 -1883.9473 2740.5557 -1883.2275 c2727.5674 -1881.7344 2714.2344 -1882.5518 2701.1836 -1882.6367 c2686.9775 -1882.7295 2672.9111 -1883.667 2658.8125 -1885.3926 c2651.6123 -1886.2734 2644.4219 -1887.209 2637.1992 -1887.8936 c2630.9805 -1888.4834 2625.3789 -1890.499 2619.541 -1892.6172 c2613.252 -1894.8984 2606.709 -1895.8057 2600.292 -1897.6543 c2594.0996 -1899.4395 2588.0762 -1901.7578 2581.9141 -1903.6436 c2569.1543 -1907.5479 2557.1563 -1912.7188 2544.8691 -1917.875 c2538.6152 -1920.499 2532.0566 -1922.2949 2525.8555 -1925.0576 c2522.8301 -1926.4043 2519.9873 -1927.8555 2517.3252 -1929.8311 c2515.0576 -1931.5127 2512.8838 -1933.2959 2510.1563 -1934.1436 c2502.1777 -1936.6221 2505.585 -1949.1729 2513.6133 -1946.6787 c2519.541 -1944.8369 2523.7637 -1940.6113 2529.1602 -1937.79 c2536.2422 -1934.0869 2544.2734 -1932.1641 2551.625 -1929.0225 c2558.4814 -1926.0918 2565.2852 -1923.0723 2572.2451 -1920.3916 c2579.2959 -1917.6758 2586.6963 -1915.918 2593.832 -1913.4414 c2600.5654 -1911.1064 2607.3105 -1908.958 2614.334 -1907.6768 c2621.5918 -1906.3535 2628.2637 -1902.8184 2635.4502 -1901.1221 c2642.8818 -1899.3682 2651.2148 -1899.335 2658.8125 -1898.3926 c2667.25 -1897.3457 2675.6924 -1896.5049 2684.1846 -1896.0674 c2699.4453 -1895.2813 2714.8945 -1895.2803 2730.1719 -1895.5264 c2737.0645 -1895.6377 2743.7617 -1896.4141 2750.3047 -1898.6494 c2757.293 -1901.0371 2764.6641 -1901.8604 2771.7734 -1903.7393 c2778.7549 -1905.584 2786.1885 -1906.0625 2793.3652 -1906.6895 c2801.418 -1907.3926 2809.3584 -1909.001 2817.4258 -1909.6104 c2833.0713 -1910.792 2849.1455 -1909.8154 2864.833 -1909.7939 c2891.8955 -1909.7578 2918.8438 -1907.5713 2945.8682 -1906.584 c2973 -1905.5928 3000.0977 -1902.3496 3026.7598 -1897.2969 cf3503.498 -1828.2607 m3498.127 -1830.0498 3493.1484 -1831.5684 3488.3799 -1834.6465 c3483.4521 -1837.8262 3478.2285 -1840.293 3472.916 -1842.7305 c3461.0576 -1848.1738 3449.2803 -1854.1309 3438.0098 -1860.7344 c3432.3213 -1864.0684 3426.7871 -1867.5332 3420.5371 -1869.7402 c3414.7109 -1871.7969 3408.0254 -1871.7383 3401.9355 -1872.0391 c3388.2773 -1872.7129 3375.3965 -1870.0088 3362.1563 -1867.2256 c3348.457 -1864.3467 3334.8398 -1864.5176 3320.9668 -1863.5957 c3307.5781 -1862.7061 3294.3418 -1860.0781 3280.9219 -1859.7002 c3266.7607 -1859.3008 3252.6572 -1858.8086 3238.4766 -1858.7969 c3231.542 -1858.791 3224.6074 -1859 3217.6719 -1859 C3208.3154 -1859 L3205.3828 -1859 3202.5098 -1859.7432 3199.583 -1859.8877 c3191.2402 -1860.3008 3191.2002 -1873.0986 3199.583 -1872.6836 c3205.6855 -1872.3809 3211.5098 -1871.5918 3217.6719 -1871.5918 c3224.6074 -1871.5918 3231.542 -1871.5898 3238.4766 -1871.5928 c3252.6455 -1871.5967 3266.7764 -1872.5605 3280.9219 -1872.7002 c3294.3037 -1872.832 3307.6318 -1875.5908 3320.9668 -1876.5957 c3334.959 -1877.6504 3348.4541 -1877.4678 3362.2617 -1880.5313 c3375.3887 -1883.4434 3388.4229 -1885.4609 3401.9355 -1885.0391 c3408.3145 -1884.8398 3414.6768 -1884.2803 3420.9336 -1882.9912 c3427.1875 -1881.7031 3433.0107 -1878.6768 3438.5244 -1875.5449 c3450.0381 -1869.0049 3461.4268 -1862.5762 3473.4492 -1856.9834 c3478.8066 -1854.4902 3484.1035 -1851.8535 3489.3555 -1849.1465 c3492.1621 -1847.6992 3494.8184 -1845.9688 3497.4531 -1844.2344 c3500.1328 -1842.4688 3503.9258 -1841.8047 3506.9551 -1840.7959 c3514.8672 -1838.1602 3511.4746 -1825.6035 3503.498 -1828.2607 cf3840.0117 -1816.0459 m3837.7969 -1816.2793 3835.7695 -1817.7646 3834.6992 -1819.7363 C3832.9668 -1819.9531 3830.791 -1819.9473 3829.7666 -1820.1289 c3827.0791 -1820.6064 3824.3789 -1821.2031 3821.7383 -1821.8926 c3815.625 -1823.4893 3809.6992 -1826.0459 3803.6641 -1827.9365 c3790.6797 -1832.0059 3777.3711 -1834.7217 3764.6152 -1839.5039 c3758.4668 -1841.8086 3752.8379 -1843.5605 3746.2529 -1843.9502 c3739.0459 -1844.377 3731.8105 -1844.0537 3724.6367 -1843.3105 c3710.4121 -1841.8359 3696.0332 -1842.2949 3681.9561 -1839.4072 c3676.2939 -1838.2461 3670.8555 -1836.0029 3665.4668 -1833.9707 c3659.0879 -1831.5645 3652.6094 -1830.0908 3645.959 -1828.627 c3632.4141 -1825.6465 3618.6758 -1823.3457 3604.8057 -1822.6895 c3579.0459 -1821.4688 3551.1689 -1821.3555 3526.4219 -1829.3516 c3518.4785 -1831.918 3521.877 -1844.4717 3529.877 -1841.8867 c3542.6104 -1837.7725 3555.7041 -1836.2471 3569.0273 -1835.7324 c3582.1396 -1835.2275 3595.5059 -1835.1084 3608.6055 -1835.8926 c3622.5273 -1836.7266 3636.252 -1839.6963 3649.8115 -1842.8066 c3656.3037 -1844.2959 3662.3545 -1846.6855 3668.6006 -1848.9639 c3674.8096 -1851.2275 3681.0166 -1852.4619 3687.5391 -1853.3955 c3701.7412 -1855.4287 3716.2305 -1855.7754 3730.5293 -1856.834 c3737.7266 -1857.3672 3744.9609 -1857.1523 3752.1426 -1856.5137 c3758.9023 -1855.9141 3765.248 -1853.083 3771.5537 -1850.7334 c3784.2285 -1846.0107 3797.6699 -1843.5049 3810.5557 -1839.377 c3816.4736 -1837.4814 3822.2002 -1835.0957 3828.2559 -1833.6543 c3832.3906 -1832.6689 3836.3145 -1832.4961 3840.0117 -1831.3594 C3840.0117 -1816.0459 Lf2904.7207 -2159.9268 m2908.6133 -2155.1426 2913.3047 -2151.0908 2917.1094 -2146.2246 c2921.7598 -2140.2773 2926.0635 -2134.0996 2930.7871 -2128.1953 c2932.9609 -2125.4775 2936.2031 -2122.5449 2937.7568 -2119.4375 c2939.543 -2115.8643 2941.3301 -2112.292 2943.1162 -2108.7188 c2946.6279 -2101.6943 2949.7422 -2094.6143 2954.3584 -2088.2266 c2958.6416 -2082.2988 2961.3809 -2075.5322 2965.0469 -2069.2246 c2969.1885 -2062.0996 2973.4717 -2055.125 2978.1699 -2048.3496 c2982.0703 -2042.7236 2986.0625 -2037.0049 2991.0059 -2032.2383 c2996.2539 -2027.1768 3000.0654 -2020.625 3004.5176 -2014.7705 c3008.2578 -2009.8506 3015.4619 -2006.2627 3020.4883 -2002.7861 c3027.0898 -1998.2197 3033.3311 -1993.293 3040.3418 -1989.3555 c3053.4473 -1981.9941 3066.8652 -1976.5898 3081.0898 -1971.7852 c3087.6602 -1969.5654 3094.3789 -1967.792 3101.3408 -1967.6514 c3108.6836 -1967.5029 3115.832 -1969.7354 3122.7422 -1971.9658 c3129.2773 -1974.0752 3135.9258 -1975.5664 3142.457 -1977.6436 c3149.6748 -1979.9375 3156.1865 -1983.6357 3163.2451 -1986.3506 c3165.332 -1987.1533 3167.4756 -1987.7949 3169.5498 -1988.6289 C3170.2383 -1988.8359 3170.9258 -1989.043 3171.6133 -1989.25 C3172.1045 -1989.8574 3172.6895 -1990.3711 3173.3789 -1990.7783 C3175.0215 -1991.8457 3176.21 -1993.7939 3177.5215 -1995.2207 c3179.3232 -1997.1807 3181.7227 -1998.8994 3183.6641 -2000.7734 c3186.9297 -2003.9258 3190.6016 -2006.4541 3193.748 -2009.79 c3197.0898 -2013.333 3200.4141 -2016.6787 3204.4697 -2019.418 c3207.9082 -2021.7402 3211.9385 -2022.4629 3215.2246 -2025.1133 c3218.5967 -2027.834 3221.7158 -2030.7832 3225.3867 -2033.1211 c3229.3613 -2035.6514 3234.168 -2036.7363 3237.5938 -2040.0879 c3241.0039 -2043.4268 3243.8906 -2046.5977 3248.1699 -2048.9053 c3252.291 -2051.127 3255.0254 -2052.6563 3257.8887 -2056.3486 c3260.4316 -2059.626 3263.9941 -2062.1963 3267.2959 -2064.6826 c3268.8555 -2065.8574 3270.4531 -2066.9131 3272.1348 -2067.9053 c3274.7158 -2069.4277 3275.4688 -2070.376 3276.957 -2072.9922 c3278.3516 -2075.4453 3280.4512 -2077.6924 3282.3135 -2079.7979 c3284.0166 -2081.7217 3285.8584 -2084.3477 3287.9961 -2085.7461 c3289.5215 -2086.7451 3289.7305 -2088.9336 3291.0469 -2090.1875 c3293.1133 -2092.1563 3295.3105 -2093.9043 3297.6016 -2095.6055 c3299.2949 -2096.8633 3301.0908 -2097.9912 3302.8408 -2099.168 c3304.7695 -2100.4648 3305.9346 -2102.3135 3307.4199 -2104.0957 c3313.8428 -2111.8037 3319.7061 -2119.0137 3329.9375 -2121.332 c3338.1006 -2123.1826 3341.5674 -2110.6494 3333.3926 -2108.7969 c3327.1309 -2107.3779 3323.8672 -2103.5215 3319.8867 -2098.7432 c3317.7441 -2096.1719 3315.6934 -2093.1758 3313.3379 -2090.8203 c3310.7744 -2088.2568 3307.1201 -2086.458 3304.1621 -2084.3809 c3301.3398 -2082.3965 3300.3613 -2079.6455 3298.0381 -2077.3018 c3296.1426 -2075.3896 3294.5684 -2073.7246 3292.5977 -2071.7168 c3290.2539 -2069.3301 3288.3193 -2066.7275 3286.7109 -2063.8018 c3284.8369 -2060.3916 3282.0049 -2058.4961 3278.6963 -2056.6797 c3274.2314 -2054.2285 3269.7158 -2050.5674 3266.6465 -2046.542 c3262.4297 -2041.0137 3256.252 -2039.252 3250.8926 -2035.2246 c3248.9902 -2033.7939 3247.5137 -2031.6094 3245.8125 -2029.9443 c3243.4932 -2027.6738 3240.6572 -2026.2852 3237.7949 -2024.8545 c3231.7744 -2021.8447 3227.3457 -2018.0498 3222.0254 -2014.0371 c3217.5537 -2010.6641 3212.1201 -2009.5039 3207.9307 -2005.7285 c3203.1738 -2001.4414 3199.2891 -1996.5313 3194.1309 -1992.6523 c3191.4775 -1990.6563 3189.4209 -1987.9941 3186.7412 -1986.0078 c3185.498 -1985.0859 3184.499 -1983.502 3183.4912 -1982.334 c3183.4307 -1982.2627 3179.9951 -1978.9287 3181.5605 -1980.96 c3177.6328 -1975.8633 3169.1318 -1974.9561 3163.4707 -1972.5293 c3160.3848 -1971.2061 3157.5361 -1969.0508 3154.373 -1967.9824 c3151.0078 -1966.8457 3147.6602 -1965.6631 3144.2754 -1964.5869 c3137.2578 -1962.3555 3130.0791 -1960.6396 3123.0313 -1958.4199 c3108.7969 -1953.9375 3095.3408 -1953.9287 3081.0557 -1958.1582 c3058.5957 -1964.8086 3037.4648 -1974.5127 3018.5098 -1988.2861 c3009.459 -1994.8623 2999.1777 -2000.4688 2992.3291 -2009.4746 c2988.9336 -2013.9404 2986.0166 -2019.3467 2981.8135 -2023.0449 c2977.7139 -2026.6533 2974.5293 -2031.3936 2971.2871 -2035.7461 c2964.1445 -2045.3379 2957.7266 -2055.458 2951.9707 -2065.9375 c2949.0527 -2071.249 2946.7539 -2076.7715 2943.1328 -2081.6641 c2939.6104 -2086.4268 2937.2041 -2091.5313 2934.5703 -2096.7988 c2931.6699 -2102.5996 2929.2217 -2109.4678 2925.167 -2114.5371 c2921.2578 -2119.4238 2917.1387 -2124.2061 2913.4336 -2129.248 c2910.2129 -2133.6318 2907.3086 -2138.1816 2903.5332 -2142.125 c2899.7324 -2146.0957 2896.0557 -2149.9922 2892.6934 -2154.3555 c2891.459 -2155.9551 2891.4912 -2158.0869 2892.2549 -2159.9268 C2904.7207 -2159.9268 Lf3591.6914 -2007.8594 m3585.8125 -2002.8916 3580.3047 -1997.5313 3574.8496 -1992.1064 c3572.6309 -1989.8984 3570.9043 -1987.458 3568.9404 -1985.0322 c3567.0928 -1982.749 3564.6084 -1981.5996 3562.3955 -1979.8447 c3560.0791 -1978.0078 3557.3809 -1977.1611 3554.5898 -1976.2969 c3551.4131 -1975.3135 3548.2725 -1973.5938 3545.1602 -1972.3486 c3537.6191 -1969.332 3530.6055 -1966.1992 3522.4092 -1965.6475 c3508.8301 -1964.7334 3496.2227 -1968.4336 3484.0791 -1974.1621 c3478.332 -1976.873 3473.0498 -1981.1924 3468.9746 -1986.0273 c3467.1582 -1988.1816 3465.3418 -1989.8838 3463.96 -1992.4414 c3462.3604 -1995.4043 3460.8184 -1998.3906 3459.1787 -2001.333 c3455.7305 -2007.5205 3451.8164 -2012.7725 3449.292 -2019.46 c3446.873 -2025.8652 3443.5908 -2032.0059 3439.5771 -2037.5566 c3435.4043 -2043.3271 3432.002 -2050.0479 3428.3486 -2056.1729 c3424.3877 -2062.8145 3419.6357 -2068.3311 3414.3145 -2073.9199 c3409.0283 -2079.4727 3404.1035 -2085.2676 3399.1973 -2091.1553 c3394.4434 -2096.8594 3390.2441 -2103.4297 3383.4951 -2106.877 c3378.457 -2109.4492 3372.4668 -2109.5771 3366.959 -2109.6953 c3363.3398 -2109.7725 3359.6943 -2110.417 3356.1348 -2111.0205 c3352.7676 -2111.5908 3349.7949 -2113.0391 3346.4922 -2112.0713 c3338.4277 -2109.707 3335.0088 -2122.2529 3343.0352 -2124.6064 c3349.5293 -2126.5107 3354.9727 -2124.3389 3361.4102 -2123.248 c3367.6338 -2122.1924 3373.9541 -2122.6465 3380.1973 -2121.4814 c3394.5723 -2118.7979 3402.1162 -2107.876 3410.9082 -2097.3252 c3420.0166 -2086.3955 3431.4795 -2076.7295 3438.6387 -2064.3271 c3445.6582 -2052.1641 3454.4072 -2040.7041 3459.9102 -2027.7432 c3461.292 -2024.4873 3462.3926 -2021.1201 3463.9004 -2017.9189 c3465.292 -2014.9668 3467.8604 -2012.1846 3469.5596 -2009.3525 c3472.1943 -2004.9629 3474.1045 -1998.4375 3478.166 -1995.2207 c3480.7031 -1993.2109 3482.582 -1990.4756 3485.292 -1988.54 c3487.748 -1986.7852 3490.4541 -1985.4043 3493.2246 -1984.2285 c3499.4941 -1981.5684 3505.6904 -1979.4463 3512.5215 -1978.7705 c3519.5078 -1978.0791 3526.083 -1978.6357 3532.6074 -1981.2461 c3539.1914 -1983.8799 3545.7207 -1987.1563 3552.4834 -1989.25 c3558.1563 -1991.0068 3560.3457 -1995.9893 3564.2539 -1999.8975 c3570.1611 -2005.8037 3576.1152 -2011.6582 3582.5 -2017.0508 c3588.8604 -2022.4248 3598.1045 -2013.2764 3591.6914 -2007.8594 cf3703.8945 -2078 m3699.9375 -2077.9121 3696.3398 -2077.0234 3692.5234 -2076.0488 c3687.9111 -2074.8711 3683.4414 -2073.9258 3678.7363 -2073.1016 c3674.7158 -2072.3984 3671.3262 -2070.2627 3667.5557 -2068.8643 c3663.3291 -2067.2969 3658.7266 -2067.0244 3654.7793 -2064.6973 c3653.0938 -2063.7031 3651.2109 -2063.293 3649.5088 -2062.2354 c3647.9199 -2061.2471 3646.458 -2060.0254 3644.957 -2058.9111 c3641.1914 -2056.1172 3637.4277 -2053.3203 3633.6758 -2050.5059 c3626.1982 -2044.8975 3619.3936 -2039.1484 3614.5391 -2031.0068 c3610.252 -2023.8154 3599.0098 -2030.3496 3603.3145 -2037.5674 c3608.3311 -2045.9824 3615.167 -2052.9736 3623.0371 -2058.7441 c3627.3301 -2061.8916 3631.5879 -2065.0869 3635.8467 -2068.2813 c3639.7002 -2071.1699 3643.6748 -2074.6826 3648.3545 -2076.1367 c3652.7656 -2077.5078 3656.8164 -2079.4727 3661.3789 -2080.5781 c3665.6787 -2081.6201 3669.5107 -2084.082 3673.7852 -2085.3096 c3678.834 -2086.7598 3684.0625 -2086.791 3689.0684 -2088.584 c3693.7031 -2090.2451 3699.0078 -2090.8906 3703.8945 -2091 c3712.2832 -2091.1875 3712.2646 -2078.1875 3703.8945 -2078 cf3807.5947 -2069.0635 m3803.6074 -2071.7998 3799.0762 -2072.9648 3794.7422 -2074.9873 c3789.25 -2077.5508 3783.8574 -2079.752 3777.9521 -2081.1816 c3765.752 -2084.1367 3752 -2083.4561 3740 -2083.458 c3732 -2083.459 3732 -2096.459 3740 -2096.458 C3740 -2096.4561 3766.6719 -2096.3184 3779.8906 -2094.042 c3786.248 -2092.9482 3792.3623 -2090.3633 3798.1953 -2087.7041 c3803.5225 -2085.2754 3809.3008 -2083.624 3814.1602 -2080.2881 c3821.0234 -2075.5771 3814.5264 -2064.3047 3807.5947 -2069.0635 cf2215.5156 -2000.79 m2221.5986 -2001.9619 2227.6074 -2003.2305 2233.8057 -2003.6309 c2245.9053 -2004.4131 2257.1143 -1997.2568 2267.377 -1991.8711 c2274.8018 -1987.9746 2268.2305 -1976.7549 2260.8145 -1980.6465 c2254.8711 -1983.7656 2249.2227 -1986.9414 2242.8965 -1989.2598 c2235.0723 -1992.1279 2226.8223 -1989.8369 2218.9717 -1988.2539 c2215.5234 -1987.5586 2212.1729 -1986.7275 2208.7881 -1985.7607 c2205.457 -1984.8105 2201.0908 -1983.9756 2198.5801 -1981.3516 c2195.9971 -1978.6523 2193.7754 -1975.6318 2191.1895 -1972.9297 c2188.8975 -1970.5342 2185.7139 -1968.8623 2183.3115 -1966.4814 c2178.6846 -1961.8955 2176.6611 -1955.8467 2174.0127 -1950.0547 c2170.8945 -1943.2324 2168.4531 -1936.2354 2165.5234 -1929.332 c2164.165 -1926.1299 2162.6924 -1923.0029 2161.0645 -1919.9297 c2159.3682 -1916.7295 2157.0449 -1914.1348 2155.1875 -1911.0898 c2153.4922 -1908.3096 2153.1055 -1905.3906 2150.9004 -1902.8174 c2148.5449 -1900.0713 2146.4756 -1897.4912 2144.7422 -1894.3174 c2141.877 -1889.0713 2137.5029 -1884.4668 2131.1406 -1883.8311 c2132.8184 -1883.999 2128.7676 -1880.9531 2128.8135 -1880.9951 c2127.3652 -1879.6699 2125.9922 -1878.2568 2124.6035 -1876.8711 c2121.8379 -1874.1104 2118.418 -1871.7842 2115.2832 -1869.4668 c2102.8457 -1860.2744 2087.2031 -1857.5352 2072.6133 -1853.3682 c2043.8447 -1845.1494 2011.6416 -1846.0225 1982.3848 -1851.1172 c1969.8271 -1853.3047 1958.0918 -1857.1953 1946.0918 -1861.292 c1940.6426 -1863.1514 1935.9502 -1865.998 1931.3047 -1869.3477 c1926.25 -1872.9912 1920.9336 -1876.1309 1915.7314 -1879.5488 c1906.1689 -1885.834 1896.646 -1892.3574 1889.084 -1901.0449 c1881.0112 -1910.3174 1872.8081 -1920.0723 1866.0698 -1930.373 c1862.9116 -1935.2002 1859.2534 -1939.9453 1856.7163 -1945.1367 c1854.2627 -1950.1572 1852.1855 -1955.3076 1849.5469 -1960.2441 c1848.4258 -1962.3418 1847.0156 -1964.2891 1845.8301 -1966.3516 c1844.4961 -1968.6719 1844.042 -1971.2695 1842.9585 -1973.6533 c1840.5444 -1978.9658 1839.709 -1985.1406 1839.1387 -1990.8965 c1837.9165 -2003.2285 1838.4277 -2015.7656 1838.4277 -2028.1406 c1838.4277 -2034.4727 1840.5078 -2040.6836 1840.6538 -2047.0938 c1840.8062 -2053.791 1842.6416 -2060.3252 1842.7939 -2067.0361 c1842.8223 -2068.2695 1843.1338 -2069.3174 1843.6353 -2070.1875 C1838.5146 -2070.2207 1833.3887 -2070.416 1828.3359 -2070.5957 c1823.2437 -2070.7783 1818.063 -2071.042 1813.0576 -2072.0332 c1808.4971 -2072.9355 1804.1807 -2075.0205 1799.7393 -2076.3564 c1790.0586 -2079.2686 1780.6592 -2083.4023 1771.1553 -2086.9668 c1767.0078 -2088.5225 1763.3076 -2091.5469 1759.1392 -2093.2891 c1755.0571 -2094.9951 1751.2471 -2097.3975 1747.1401 -2098.9746 c1739.3979 -2101.9473 1742.7568 -2114.5195 1750.5962 -2111.5098 c1754.2124 -2110.1211 1757.4067 -2107.9131 1760.9653 -2106.4863 c1765.2271 -2104.7783 1769.4414 -2102.9893 1773.4219 -2100.6895 c1777.9199 -2098.0908 1782.7192 -2096.4609 1787.5737 -2094.5898 c1792.0913 -2092.8486 1796.7324 -2090.2695 1801.4785 -2089.3291 c1805.4639 -2088.54 1809.2764 -2086.7979 1813.1152 -2085.5117 c1818.0049 -2083.874 1823.231 -2083.8242 1828.3359 -2083.5957 c1838.5215 -2083.1416 1848.9502 -2082.9463 1859.1182 -2083.7695 c1867.9365 -2084.4844 1875.8486 -2089.3965 1883.9912 -2092.5488 c1888.417 -2094.2617 1892.9668 -2095.0107 1897.689 -2095.3281 c1902.7939 -2095.6699 1907.9102 -2096.9189 1912.9912 -2097.5859 c1922.9063 -2098.8867 1933.2305 -2100.6689 1943.2402 -2100.3711 c1952.8115 -2100.0859 1962.1582 -2097.2529 1971.0957 -2094.0439 c1978.9248 -2091.2334 1975.5498 -2078.6689 1967.6406 -2081.5088 c1959.126 -2084.5654 1950.541 -2087.1533 1941.4404 -2087.4248 c1931.4492 -2087.7227 1920.7412 -2085.7109 1910.8667 -2084.2705 c1906.4888 -2083.6328 1902.1162 -2082.4258 1897.689 -2082.3281 c1892.8291 -2082.2197 1888.8618 -2080.1416 1884.3174 -2078.8672 c1879.9199 -2077.6348 1876.354 -2074.708 1872.0742 -2073.2148 c1867.3491 -2071.5664 1862.2065 -2071.0195 1857.2471 -2070.6182 c1856.4814 -2070.5566 1855.7114 -2070.5137 1854.9424 -2070.4668 C1855.501 -2069.5449 1855.8252 -2068.4043 1855.7939 -2067.0361 c1855.627 -2059.6934 1853.7778 -2052.543 1853.6108 -2045.2051 c1853.4404 -2037.7236 1851.4277 -2030.5918 1851.4277 -2023.1006 c1851.4277 -2008.9434 1850.2578 -1993.9131 1854.2827 -1980.1758 c1855.9834 -1974.3711 1859.1143 -1969.3936 1862.228 -1964.25 c1865.791 -1958.3652 1867.498 -1951.6094 1871.3613 -1945.876 c1879.7388 -1933.4443 1888.7393 -1921.8086 1898.2764 -1910.2373 c1906.8691 -1899.8105 1919.3311 -1892.1953 1930.8477 -1885.4287 c1936.6836 -1882 1941.5996 -1876.9697 1947.9473 -1874.4102 c1955.0283 -1871.5537 1962.3857 -1869.1504 1969.7607 -1867.1904 c1984.5811 -1863.25 1999.7666 -1861.2139 2015.082 -1860.75 c2030.6855 -1860.2773 2046.4326 -1860.5947 2061.6934 -1864.084 c2073.4473 -1866.7715 2085.5176 -1869.9287 2096.9023 -1873.8877 c2108.4473 -1877.9023 2115.5762 -1887.998 2125.1465 -1894.8135 c2127.3584 -1896.3877 2129.7949 -1896.2793 2131.7852 -1898.0703 C2132.0723 -1898.3008 2132.2979 -1898.4805 2132.4922 -1898.6348 C2133.1729 -1899.6895 2133.6055 -1901.041 2134.2041 -1902.1377 c2136.6592 -1906.6309 2140.623 -1909.9707 2142.6035 -1914.6953 c2144.8408 -1920.0293 2148.8223 -1924.4063 2151.4463 -1929.5947 c2154.0859 -1934.8125 2156.0293 -1940.3516 2157.916 -1945.875 c2159.7891 -1951.3623 2162.8477 -1956.416 2165.0439 -1961.7891 c2167.0029 -1966.582 2169.7344 -1970.7207 2173.1279 -1974.6182 c2176.5449 -1978.541 2181.1523 -1981.0645 2184.5879 -1984.9297 c2186.6582 -1987.2578 2188.5732 -1989.6934 2190.7305 -1991.9473 c2192.6523 -1993.9561 2196.1406 -1995.0117 2198.5957 -1996.2383 c2203.5371 -1998.71 2210.1172 -1999.75 2215.5156 -2000.79 cf2176.7637 -2077.7979 m2169.5166 -2081.6348 2161.6719 -2082.9814 2153.5547 -2083.3652 c2149.1729 -2083.5723 2145.0508 -2083.3535 2140.7598 -2082.4189 c2136.623 -2081.5186 2132.832 -2079.1143 2128.8301 -2077.6934 c2121.5566 -2075.1113 2113.8828 -2072.6514 2107.1602 -2068.8184 c2100.1533 -2064.8232 2093.3105 -2060.333 2085.0762 -2059.4453 c2076.3457 -2058.5039 2067.627 -2059.373 2058.8779 -2059.4453 c2050.2861 -2059.5166 2041.5664 -2061.0918 2033.2207 -2063.043 c2016.1494 -2067.0352 2000.9258 -2076.0039 1984.0146 -2080.417 c1975.9082 -2082.5322 1979.3506 -2095.0713 1987.4697 -2092.9521 c2003.7939 -2088.6934 2018.5771 -2080.2861 2034.9219 -2076.0137 c2043.3633 -2073.8057 2052.0254 -2072.502 2060.749 -2072.4297 c2069.9336 -2072.3535 2079.582 -2070.6797 2088.4854 -2073.5488 c2095.8828 -2075.9326 2102.3008 -2081.2549 2109.5117 -2084.2549 c2113.1641 -2085.7744 2116.9326 -2087.0156 2120.6299 -2088.4189 c2122.7598 -2089.2266 2124.8643 -2090.0479 2127.0117 -2090.8105 c2129.2891 -2091.6191 2131.2393 -2093.4678 2133.5605 -2094.0439 c2150.0576 -2098.1406 2168.1182 -2097.0742 2183.3242 -2089.0225 c2190.7354 -2085.0996 2184.166 -2073.8779 2176.7637 -2077.7979 cf2383.9395 -2066.8066 m2379.459 -2072.3301 2376.4453 -2074.7266 2369.1982 -2074.7266 c2360.8994 -2074.7266 2352.2939 -2075.3379 2344.0547 -2074.1924 c2336.0645 -2073.082 2328.0781 -2070.0566 2320.2471 -2068.0977 c2312.4053 -2066.1367 2304.7998 -2063.2666 2296.7627 -2062.2549 c2280.7617 -2060.2402 2264.2578 -2059.7744 2248.1592 -2060.9102 c2239.7705 -2061.5029 2231.5596 -2063.5801 2223.3438 -2065.2373 c2219.0859 -2066.0957 2214.9316 -2066.6875 2210.7959 -2068.0732 c2206.8809 -2069.3848 2203.123 -2070.8789 2199.0566 -2071.6846 c2190.8359 -2073.3115 2194.3252 -2085.8408 2202.5117 -2084.2197 c2206.5654 -2083.418 2210.3701 -2081.9902 2214.252 -2080.6094 c2218.3467 -2079.1514 2222.5508 -2078.5791 2226.7998 -2077.7725 c2235.9258 -2076.041 2244.7227 -2073.9219 2254.0537 -2073.6055 c2258.3848 -2073.459 2262.7275 -2073.5361 2267.0605 -2073.5361 c2270.998 -2073.5361 2275.418 -2072.9658 2279.3086 -2073.5557 c2287.4258 -2074.7861 2295.5635 -2074.5703 2303.4883 -2076.8906 c2311.5703 -2079.2568 2319.7549 -2081.1426 2327.8633 -2083.4121 c2336.3945 -2085.7988 2344.332 -2087.5752 2353.2422 -2087.7148 c2361.0732 -2087.8369 2369.8428 -2088.7383 2377.5293 -2087.2041 c2384.1367 -2085.8848 2389.0615 -2081.0176 2393.1328 -2075.998 c2398.3633 -2069.5498 2389.2227 -2060.293 2383.9395 -2066.8066 cf2461.4082 -1890.6396 m2458.9551 -1886.291 2456.0352 -1882.4658 2451.2119 -1879.8525 c2444.0371 -1875.9648 2438.6133 -1869.2959 2431.5215 -1865.0625 c2424.3691 -1860.793 2416.1455 -1857.0391 2408.2578 -1854.4082 c2399.5361 -1851.499 2390.0156 -1850.9961 2380.8955 -1850.9521 c2378.4414 -1850.9404 2376.7129 -1852.0488 2375.6953 -1853.6191 C2375.0684 -1849.5029 2374.2598 -1845.4111 2374.2598 -1841.2793 c2374.2598 -1838.3711 2374.8193 -1835 2373.3906 -1832.3408 c2372.2676 -1830.25 2371.3652 -1827.7676 2370.125 -1825.791 c2367.0547 -1820.8965 2363.0986 -1816.6035 2360.3047 -1811.6006 c2358.8721 -1809.0342 2356.3184 -1806.6494 2354.5664 -1804.2422 c2352.5996 -1801.5381 2350.5996 -1799.3457 2347.9043 -1797.3701 c2342.9297 -1793.7236 2337.7305 -1790.2305 2332.584 -1786.8301 c2330.1211 -1785.2012 2327.4961 -1783.8457 2325.2539 -1781.9053 c2322.8799 -1779.8496 2321.1973 -1777.2988 2318.6113 -1775.4082 c2309.0752 -1768.4385 2295.4102 -1764.8965 2283.7441 -1764.7168 c2282.1543 -1764.6924 2280.8672 -1765.1416 2279.8809 -1765.8838 C2279.0078 -1764.9141 2277.8936 -1764.1758 2276.7402 -1763.8584 c2272.9961 -1762.8281 2270.1064 -1765.1309 2268.7441 -1768.3984 c2266.0488 -1774.8623 2262.6084 -1780.9131 2260.5605 -1787.6494 c2258.373 -1794.8447 2258.6055 -1802.8311 2258.7178 -1810.2656 c2258.8145 -1816.6396 2259.5059 -1823.0459 2260.9639 -1829.2539 c2262.5518 -1836.0098 2266.2178 -1842.1748 2269.5352 -1848.1797 c2271.1523 -1851.1045 2272.9473 -1853.5996 2274.2021 -1856.7139 c2275.4707 -1859.8613 2276.915 -1862.1182 2279.2344 -1864.6104 c2281.4834 -1867.0273 2284.1953 -1869.0527 2286.8193 -1871.0371 c2289.873 -1873.3467 2292.1504 -1875.3838 2294.5664 -1878.2861 c2298.4248 -1882.9199 2305.3809 -1883.4863 2309.8672 -1887.4375 c2311.9385 -1889.2627 2313.5195 -1891.6963 2315.3096 -1893.7842 c2317.6152 -1896.4727 2321.0576 -1897.8008 2323.4131 -1900.4629 C2320.3281 -1899.7158 2316.7783 -1900.9082 2315.6826 -1904.8457 c2314.8193 -1907.9473 2314.5371 -1911.1455 2313.9063 -1914.2979 c2313.3027 -1917.3115 2311.2959 -1919.9824 2310.3906 -1922.9375 c2309.5566 -1925.6621 2309.2002 -1928.2832 2307.9629 -1930.9238 c2306.2744 -1934.5283 2303.4463 -1937.3594 2301.6875 -1940.957 c2298.2441 -1947.999 2296.332 -1955.1074 2291.0615 -1961.2031 c2285.9082 -1967.1641 2279.3135 -1971.7998 2273.6914 -1977.2969 c2267.6885 -1983.1641 2276.8877 -1992.3506 2282.8828 -1986.4883 c2288.5332 -1980.9648 2294.8789 -1976.2012 2300.2539 -1970.3955 c2305.833 -1964.3701 2309.5039 -1956.8477 2312.3672 -1949.2344 c2313.8711 -1945.2363 2316.6602 -1942.5811 2318.5078 -1938.875 c2320.0215 -1935.8398 2321.3574 -1932.7383 2322.3486 -1929.4932 c2323.4434 -1925.9053 2324.6279 -1922.7393 2326.0342 -1919.2168 c2327.3926 -1915.8174 2327.2363 -1911.8291 2328.2178 -1908.3008 c2328.7139 -1906.5186 2328.4902 -1904.9639 2327.8193 -1903.707 C2333.0254 -1904.9648 2339.1436 -1899.8447 2335.2031 -1894.5605 c2331.6084 -1889.7393 2326.4336 -1887.0283 2322.7139 -1882.4502 c2318.7422 -1877.5625 2314.3564 -1874.6777 2308.8164 -1871.7715 c2307.6289 -1871.1475 2305.5322 -1870.7998 2304.5117 -1869.998 c2303.6982 -1869.3574 2303.0449 -1867.8213 2302.375 -1867.042 c2300.2549 -1864.5781 2297.3037 -1862.7559 2294.707 -1860.8145 c2292.0244 -1858.8096 2289.5527 -1856.6279 2287.2715 -1854.1768 c2285.6152 -1852.3975 2284.9238 -1848.7314 2283.8994 -1846.5313 c2281.3018 -1840.9482 2277.1221 -1836.0605 2274.8672 -1830.2725 c2272.584 -1824.4131 2272.0088 -1818.0342 2271.7598 -1811.8105 c2271.4834 -1804.918 2271.4229 -1797.8271 2273.0957 -1791.1055 c2274.4023 -1785.8545 2277.04 -1780.9375 2279.3984 -1776.0039 C2280.4336 -1777.0195 2281.8809 -1777.6885 2283.7441 -1777.7168 c2289.2725 -1777.8018 2294.3164 -1778.7881 2299.4824 -1780.7598 c2304.3936 -1782.6348 2309.1719 -1783.9219 2313.0332 -1787.71 c2320.6328 -1795.1641 2329.6602 -1800.6621 2338.5186 -1806.6299 c2343.0801 -1809.7031 2345.583 -1814.1816 2349.0469 -1818.3477 c2350.6172 -1820.2354 2351.4482 -1823.4287 2353.377 -1824.9355 c2355.5508 -1826.6338 2356.6611 -1828.5918 2358.0313 -1830.9512 c2359.1641 -1832.9043 2359.793 -1835.0107 2360.9443 -1836.9609 C2361.6514 -1837.9492 2362 -1838.1553 2361 -1837.5771 C2361 -1842.9209 L2361 -1848.8711 2363.2021 -1854.7119 2363.3311 -1860.7266 c2363.5 -1868.6348 2375.1729 -1869.084 2376.3115 -1862.0361 C2377.3574 -1863.1807 2378.8828 -1863.9424 2380.8955 -1863.9521 c2388.46 -1863.9883 2395.8223 -1864.4766 2403.1523 -1866.4482 c2410.2246 -1868.3496 2417.1563 -1872.1035 2423.6074 -1875.5293 c2430.2158 -1879.0391 2435.127 -1884.5586 2441.0527 -1888.9756 c2443.4443 -1890.7578 2446.5635 -1891.4551 2448.4014 -1893.917 c2449.6387 -1895.5742 2450.6289 -1897.4834 2451.5469 -1899.4258 C2448.6895 -1902.4434 2442.3896 -1905.0098 2440.1992 -1906.5146 c2436.875 -1908.7988 2433.8516 -1911.3828 2430.2305 -1913.2002 c2427.1436 -1914.75 2423.2266 -1915.2031 2419.8447 -1915.6006 c2416.5186 -1915.9922 2413.0059 -1915.96 2409.7324 -1916.6797 c2405.4668 -1917.6172 2401.2529 -1919.1406 2396.9053 -1919.6455 c2392.5879 -1920.1465 2388.1934 -1919.1621 2384.0781 -1917.9736 c2380.9453 -1917.0684 2378.1797 -1915.0537 2374.9824 -1914.4961 c2371.7949 -1913.9395 2369.5625 -1914.9375 2367.6416 -1917.4834 c2365.2227 -1920.6895 2364.9854 -1926.1328 2363.7119 -1929.9521 c2361.748 -1935.8438 2360.6055 -1941.9531 2358.8867 -1947.916 c2357.5645 -1952.5068 2354.4688 -1956.9951 2352.2686 -1961.2227 c2349.5879 -1966.373 2346.6348 -1971.3711 2343.374 -1976.1758 c2340.4678 -1980.458 2336.8066 -1984.0918 2333.6973 -1988.2188 c2330.3672 -1992.6406 2326.9346 -1996.4482 2322.2627 -1999.4736 c2313.4111 -2005.2051 2304.2852 -2010.084 2294.0234 -2012.7393 c2285.9131 -2014.8379 2289.3574 -2027.377 2297.4805 -2025.2744 c2307.9326 -2022.5703 2316.9824 -2017.7109 2326.1992 -2012.293 c2336.4063 -2006.2939 2343.2422 -1997.3525 2350.5205 -1988.2314 c2358.041 -1978.8047 2363.4141 -1968.0078 2368.9063 -1957.3379 c2371.6436 -1952.0215 2372.7813 -1946.1807 2374.2207 -1940.4258 c2374.9551 -1937.4844 2375.835 -1934.6445 2376.793 -1931.7705 c2377.082 -1930.9053 2377.3701 -1930.04 2377.6582 -1929.1748 C2379.2656 -1929.876 2380.8711 -1930.5801 2382.4414 -1931.0342 c2387.6328 -1932.5342 2393.3682 -1933.0557 2398.7246 -1932.4346 c2403.6445 -1931.8633 2408.293 -1929.7832 2413.1826 -1929.2646 c2418.0967 -1928.7432 2423.0098 -1928.3398 2427.873 -1927.4277 c2437.6289 -1925.5957 2444.2783 -1918.8291 2452.582 -1914.0439 c2456.0313 -1912.0566 2459.1982 -1909.8477 2461.5957 -1907.0879 C2464.418 -1905.8105 2466.585 -1902.6885 2465.6162 -1899.1729 C2465.7852 -1898.3955 2465.9189 -1897.5947 2465.9893 -1896.749 c2466.2852 -1893.1797 2464.082 -1891.1523 2461.4082 -1890.6396 Cf*u1 D1964.3633 -2015.5527 m1975.2363 -2029.4297 1994.5176 -2021.8174 2004.4492 -2011.4561 c2012.8809 -2002.6592 2020.7041 -1985.7031 2008.8164 -1976.3789 c1994.6729 -1965.2832 1974.4551 -1973.6201 1961.7217 -1982.8301 c1957.9668 -1985.5459 1958.3311 -1990.2627 1960.5693 -1993.043 C1958.0781 -2000.3525 1958.9551 -2008.6504 1964.3633 -2015.5527 cf0 D1972.3125 -1998.1895 m1973.1514 -1993.4189 1977.291 -1990.4883 1981.3818 -1988.5967 c1983.0684 -1987.8174 1984.0527 -1986.6582 1984.4863 -1985.3662 C1988.2832 -1984.1973 1992.1973 -1983.7129 1996.0488 -1984.418 c2005.8066 -1986.2031 2000.9561 -1995.2451 1996.8037 -2000.4863 c1992.3027 -2006.167 1984.0088 -2012.7783 1976.5762 -2008.8516 c1972.6641 -2006.7842 1971.5791 -2002.3652 1972.3125 -1998.1895 cf*U1672.457 -2040.8848 m1654.2158 -2040.7197 1636.2671 -2036.6465 1618.8608 -2031.4141 c1602.8862 -2026.6113 1585.7212 -2023.8301 1569.0913 -2022.4355 c1533.2773 -2019.4316 1498.1621 -2026.5908 1465.1665 -2040.4258 c1457.4609 -2043.6563 1450.3384 -2047.543 1442.249 -2049.8242 c1433.9468 -2052.167 1425.3311 -2053.1484 1416.7588 -2053.8418 c1398.1968 -2055.3428 1379.7637 -2052.1582 1361.3555 -2050.6182 c1352.4482 -2049.873 1343.6182 -2048.2129 1334.7808 -2046.9023 c1325.4951 -2045.5254 1316.7886 -2041.3848 1307.4126 -2040.0264 c1289.8145 -2037.4756 1272.6704 -2032.0332 1255.0176 -2029.7861 c1246.7212 -2028.7295 1238.3735 -2028.9248 1230.042 -2028.3115 c1220.6558 -2027.6211 1211.3389 -2026.6943 1201.916 -2026.6943 c1183.5322 -2026.6943 1165.2114 -2026.4063 1146.8735 -2027.8721 c1129.1104 -2029.292 1111.3184 -2028.6846 1093.5215 -2029.2979 c1075.0732 -2029.9336 1056.8511 -2031.9434 1038.6274 -2034.8223 c1020.4072 -2037.7002 1002.0859 -2040.0986 984.082 -2044.1494 c966.7896 -2048.041 949.5889 -2051.5732 932.1484 -2054.7158 c914.9497 -2057.8154 898.6147 -2064.3701 881.3149 -2067.3086 c872.9146 -2068.7344 864.4434 -2069.6768 855.9521 -2070.3584 c847.0166 -2071.0762 837.9814 -2073.2949 829.1299 -2074.7266 c815.7998 -2076.8828 802.4927 -2078.5908 788.9819 -2079.0352 c774.7793 -2079.502 759.9839 -2080.584 745.8516 -2078.8398 c731.7412 -2077.0986 718.5591 -2078.0957 704.541 -2080.0527 c698.0776 -2080.9551 691.5303 -2080.3691 685.0288 -2081.5059 c678.0288 -2082.7295 670.9746 -2083.5957 663.9771 -2084.832 c657.6196 -2085.9551 651.7622 -2088.5107 645.6689 -2090.5332 c638.8608 -2092.792 631.8784 -2094.5059 624.8613 -2095.9727 c618.0581 -2097.3936 611.4946 -2099.5264 604.8462 -2101.5508 c598.0664 -2103.6152 591.4678 -2103.9785 584.4307 -2104.4805 c577.8335 -2104.9512 571.3711 -2105.9785 564.9331 -2107.4805 c558.5806 -2108.9639 552.2373 -2109.7285 545.8516 -2110.9785 c539.2251 -2112.2764 532.4316 -2111.8379 525.7041 -2111.8379 c520.001 -2111.8379 512.9819 -2113.2344 507.7427 -2110.543 c500.3003 -2106.7197 493.7222 -2117.9365 501.1812 -2121.7676 c507.915 -2125.2266 514.5649 -2124.959 521.9277 -2124.8379 c530.4004 -2124.6992 538.873 -2125.3477 547.2607 -2123.915 c555.0093 -2122.5918 562.6045 -2121.3672 570.2793 -2119.5752 c578.9595 -2117.5498 587.7832 -2117.3799 596.6201 -2116.5703 c604.665 -2115.834 612.3071 -2112.8301 620.0083 -2110.5146 c628.917 -2107.835 638.1641 -2106.4355 647.0942 -2103.7148 c655.373 -2101.1924 663.0308 -2098.0195 671.6431 -2096.6641 c680.5146 -2095.2676 689.502 -2093.4727 698.4814 -2093.2227 c706.6187 -2092.9971 714.5347 -2091.6377 722.6294 -2090.7852 c731.793 -2089.8203 740.9146 -2091.5322 750.0151 -2092.2617 c758.7661 -2092.9629 767.6104 -2092.4746 776.3701 -2092.2295 c785.4048 -2091.9766 794.3755 -2091.9189 803.3901 -2091.1475 c820.9209 -2089.6475 838.2686 -2086.3594 855.6118 -2083.4707 c863.8403 -2082.1006 872.2935 -2081.7373 880.5645 -2080.5117 c889.7046 -2079.1582 898.7134 -2077.3281 907.5952 -2074.79 c915.6147 -2072.499 923.6084 -2069.8789 931.7397 -2068.0254 c940.396 -2066.0537 949.2749 -2065.0811 957.9834 -2063.3555 c975.5615 -2059.8711 992.8228 -2054.7168 1010.5981 -2052.2578 c1029.4956 -2049.6445 1048.2334 -2045.9189 1067.2192 -2043.959 c1085.209 -2042.1016 1103.3813 -2041.9131 1121.4497 -2041.8809 c1139.3135 -2041.8486 1157.0342 -2039.6943 1174.8994 -2039.6943 c1193.3779 -2039.6943 1211.6157 -2039.8457 1230.042 -2041.3115 c1238.4712 -2041.9824 1246.9424 -2041.6299 1255.3247 -2042.8496 c1264.3203 -2044.1592 1273.2139 -2046.4131 1282.125 -2048.1953 c1290.8486 -2049.9395 1299.5679 -2051.6836 1308.3179 -2053.2734 c1317.6377 -2054.9678 1326.3174 -2058.6768 1335.7041 -2060.0938 c1364.168 -2064.3896 1393.728 -2069.1191 1422.5601 -2066.3271 c1435.6665 -2065.0586 1448.3301 -2062.3838 1460.3789 -2056.9805 c1474.4932 -2050.6504 1488.7446 -2045.1787 1503.7163 -2041.1006 c1510.416 -2039.2754 1517.1333 -2037.583 1523.9775 -2036.3896 c1531.0908 -2035.1484 1538.3096 -2035.3594 1545.498 -2035.2236 c1560.0938 -2034.9482 1573.8398 -2035.9326 1588.2578 -2038.1523 c1616.6353 -2042.5225 1643.3809 -2053.6221 1672.457 -2053.8848 c1680.8433 -2053.9609 1680.8359 -2040.96 1672.457 -2040.8848 cf124.5767 -2159.9268 m129.8584 -2155.8486 135.4399 -2152.1875 140.7407 -2148.9268 c153.6304 -2140.9971 167.4595 -2134.1006 181.1826 -2127.7402 c194.9692 -2121.3506 209.2837 -2116.1367 223.8984 -2111.9922 c231.4526 -2109.8496 239.2622 -2108.3691 246.9395 -2106.7314 c255.2896 -2104.9512 263.7109 -2102.8828 272.2764 -2103.0967 c288.1328 -2103.4941 304.1719 -2103.71 319.9854 -2104.917 c335.6665 -2106.1143 350.9199 -2108.8643 366.1914 -2112.5029 c381.3276 -2116.1104 397.1284 -2116.6875 412.5288 -2118.8848 c419.9482 -2119.9434 427.3325 -2121.2598 434.7671 -2122.2012 c442.8394 -2123.2227 451.0005 -2122.2803 459.0713 -2123.5146 c468.5781 -2124.9688 479.3198 -2126.1572 488.7256 -2123.5146 c496.7842 -2121.251 493.3564 -2108.707 485.2695 -2110.9795 c478.9033 -2112.7676 470.8486 -2112.209 464.3467 -2111.3047 c456.2612 -2110.1797 448.4692 -2109.7568 440.3081 -2109.623 c432.8047 -2109.501 425.2637 -2107.6836 417.8535 -2106.6172 c409.8901 -2105.4717 401.9209 -2104.3633 393.9297 -2103.4287 c386.3657 -2102.5449 378.9053 -2102.0664 371.4585 -2100.3887 c363.6421 -2098.6289 355.9292 -2096.5146 348.0063 -2095.2578 c332.5347 -2092.8027 316.8398 -2091.2715 301.1738 -2091.1055 c293.4546 -2091.0234 285.7656 -2090.6826 278.0552 -2090.3184 c269.4121 -2089.9111 261.6558 -2090.6533 253.1592 -2092.2461 c237.4248 -2095.1963 221.7349 -2098.6777 206.541 -2103.7461 c192.2207 -2108.5234 178.2949 -2114.5313 164.7793 -2121.2373 c151.2568 -2127.9453 137.605 -2134.9258 125.2036 -2143.5684 c118.3154 -2148.3701 111.3247 -2153.8018 105.2134 -2159.9268 C124.5767 -2159.9268 Lf621.2627 -1916.4453 m606.251 -1916.4717 591.3735 -1919.7197 576.3594 -1919.7197 c561.3882 -1919.7197 547.314 -1920.5293 532.7539 -1924.2373 c518.0083 -1927.9922 503.1548 -1929.9834 488.9321 -1935.5098 c475.603 -1940.6875 461.564 -1944.707 447.145 -1943.2588 c440.188 -1942.5605 433.5825 -1939.1396 426.8286 -1937.458 c418.9951 -1935.5068 411.8237 -1932.1152 404.2769 -1929.3057 c397.1899 -1926.666 390.6445 -1921.4971 384.395 -1917.333 c381.644 -1915.5 378.2012 -1914.3418 375.2524 -1912.8301 c371.8389 -1911.0791 368.8032 -1908.8916 365.7275 -1906.6211 c360.8672 -1903.0332 354.2896 -1901.7061 348.5923 -1900.0938 c340.9546 -1897.9307 333.8755 -1896.2783 325.8335 -1896.9453 c310.6382 -1898.207 295.436 -1899.4277 280.4897 -1902.5156 c273.9619 -1903.8633 267.3154 -1904.582 260.6982 -1905.3242 c253.6641 -1906.1143 246.793 -1907.9316 239.7539 -1908.6367 c233.5034 -1909.2637 227.1973 -1910.1055 220.9072 -1910.3291 c213.6289 -1910.5879 206.4336 -1908.9844 199.2275 -1908.2021 c192.5352 -1907.4766 185.9712 -1907.7383 179.3408 -1906.3662 c172.5674 -1904.9648 166.5122 -1903.3984 160.1812 -1900.5938 c154.501 -1898.0762 149.126 -1894.9717 143.353 -1892.5771 c136.9868 -1889.9365 130.4302 -1887.7188 124.2881 -1884.5674 c118.5259 -1881.6113 113.2305 -1878.7129 106.9697 -1876.8848 c100.8662 -1875.1025 94.8359 -1873.4658 88.8853 -1871.2051 c82.667 -1868.8438 76.6528 -1866.084 70.5615 -1863.4229 c63.9756 -1860.5459 57.6641 -1859.6592 50.5313 -1859.291 c43.8828 -1858.9473 37.1948 -1859.3965 30.5488 -1859.5986 c23.7114 -1859.8066 16.8892 -1859.6152 10.0605 -1860.1436 c6.58643 -1860.4121 3.10254 -1860.6416 -0.372559 -1860.9531 C-0.372559 -1873.8428 L4.28223 -1873.3721 8.99414 -1873.1797 13.5791 -1872.8994 c28.1738 -1872.0059 42.9976 -1872.1152 57.582 -1872.7607 c64.04 -1873.0469 71.0728 -1877.9316 76.896 -1880.3662 c83.9951 -1883.334 91.1553 -1886.0137 98.5757 -1888.0547 c105.5186 -1889.9648 111.3994 -1892.3789 117.7266 -1895.793 c124.2476 -1899.3115 131.4336 -1901.7266 138.3032 -1904.4668 c144.6636 -1907.0029 150.5605 -1910.3955 156.7676 -1913.2354 c163.5278 -1916.3271 170.335 -1917.7539 177.5796 -1919.252 c184.7622 -1920.7383 191.9678 -1920.5254 199.2275 -1921.2021 c207.0967 -1921.9355 214.6821 -1923.5508 222.6309 -1923.2676 c237.8906 -1922.7256 252.9146 -1919.3018 268.0332 -1917.4727 c283.1143 -1915.6475 297.8477 -1912.4365 313.0088 -1911.04 c319.6904 -1910.4238 326.3706 -1909.668 333.0845 -1909.8779 c339.1938 -1910.0684 345.2026 -1912.6045 351.0366 -1914.2969 c356.8154 -1915.9727 360.8232 -1919.4297 365.8662 -1922.4932 c371.957 -1926.1943 378.3857 -1928.9707 384.3828 -1932.8838 c396.1201 -1940.541 409.7188 -1946.7061 423.373 -1949.9932 c429.7246 -1951.5234 435.6929 -1954.2197 442.0918 -1955.5254 c448.7832 -1956.8916 455.6519 -1956.8301 462.4023 -1956.0352 c474.9624 -1954.5557 486.9038 -1950.3496 498.5498 -1945.5859 c504.4316 -1943.1797 510.8789 -1942.2617 517.1069 -1941.2197 c524.7124 -1939.9482 532.5874 -1937.8047 540.0303 -1935.7617 c553.1401 -1932.1631 566.7759 -1932.7197 580.2275 -1932.7197 c593.9146 -1932.7197 607.5747 -1929.4697 621.2627 -1929.4453 c629.6455 -1929.4307 629.6465 -1916.4307 621.2627 -1916.4453 cf588.2363 -1594.1182 m581.4199 -1592.917 574.2334 -1592.8428 567.3271 -1592.8535 c559.3027 -1592.8672 550.9902 -1594.0176 543.0098 -1593.1299 c527.394 -1591.3936 512.3486 -1587.6357 496.8804 -1585.1152 c465.0195 -1579.9229 433.0938 -1581.0723 400.9805 -1582.5078 c384.5552 -1583.2422 368.2109 -1585.2744 351.8594 -1586.9004 c335.7036 -1588.5068 319.5405 -1589.1563 303.4541 -1591.4512 c287.3862 -1593.7432 271.458 -1596.9404 255.3418 -1598.9072 c240.2256 -1600.752 225.1455 -1601.958 210.2144 -1605.1279 c201.3369 -1607.0127 192.6396 -1609.6387 184.1748 -1612.9014 c175.6479 -1616.1885 167.6973 -1620.4277 158.8857 -1623.041 c150.8677 -1625.4189 154.2847 -1637.9658 162.3418 -1635.5762 c176.9434 -1631.2461 190.2056 -1623.7939 204.9541 -1619.7686 c219.5391 -1615.7871 234.5776 -1613.9619 249.5913 -1612.5352 c265.6079 -1611.0127 281.4556 -1608.0254 297.3257 -1605.459 c313.5122 -1602.8418 329.6626 -1601.9297 345.9648 -1600.4619 c362.3467 -1598.9863 378.6699 -1596.9326 395.0859 -1595.8389 c411.377 -1594.7539 427.8794 -1594.4434 444.2075 -1594.082 c460.0366 -1593.7324 475.9121 -1595.0244 491.5635 -1597.3604 c506.98 -1599.6621 521.9756 -1603.6396 537.4834 -1605.5 c552.626 -1607.3154 568.0264 -1605.4961 583.271 -1606.4844 c586.2998 -1606.6816 589.312 -1607.5566 592.2446 -1608.2861 c595.353 -1609.0596 599.1108 -1608.5186 602.2959 -1608.5186 c610.1191 -1608.5186 617.895 -1608.5332 625.6914 -1607.793 c632.4878 -1607.1484 639.251 -1605.9746 645.8511 -1604.2324 c652.6138 -1602.4473 658.9136 -1598.8906 665.0288 -1595.5996 c677.5938 -1588.8369 689.8506 -1581.5137 702.9326 -1575.7266 c716.4087 -1569.7666 729.9258 -1563.5049 743.8306 -1558.5977 c758.9136 -1553.2734 774.7529 -1550.0713 790.3896 -1546.8584 c805.9785 -1543.6553 821.5103 -1539.8359 837.2134 -1537.248 c852.4644 -1534.7344 867.9995 -1535.9297 883.3345 -1534.541 c900.6641 -1532.9707 918.2417 -1532.1113 935.6387 -1532.1074 c944.022 -1532.1055 944.022 -1519.1055 935.6387 -1519.1074 c920.0386 -1519.1104 904.3521 -1519.9219 888.7974 -1521.085 c881.479 -1521.6328 874.3008 -1522.3643 866.957 -1522.3965 c858.9063 -1522.4326 850.8711 -1522.7148 842.854 -1523.4736 c827.1934 -1524.957 811.8149 -1529.2285 796.4414 -1532.3828 c780.5703 -1535.6377 764.6953 -1538.8232 749.104 -1543.2686 c734.896 -1547.3203 721.3628 -1553.4883 707.9766 -1559.6563 c694.5381 -1565.8486 681.1973 -1571.2949 668.5493 -1579.1201 c656.9814 -1586.2773 644.4365 -1591.8848 630.9941 -1594.1191 c617.1797 -1596.415 601.9595 -1596.5371 588.2363 -1594.1182 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF