%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 2.eps)%%CreationDate: 04.10.18 2:08%%Canvassize: 16383%%BoundingBox: -1 -2160 3777 -33%%HiResBoundingBox: -0.372559 -2159.9277 3776.5303 -33.7354%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -855.458 291.3179 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5334 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD34FF7FA9FD19FFA9A9A9FD22FFA955FD3AFFA9A97F552BFD12FF%A97F7F7FA9FFFFFF552B552BFD047FFD1CFF7F5555A9FD38FFA95555552B%55FD12FF55A9A9A9FD057FA9A9FFFD04A97F7FA9FD18FFA955FF55A9FD39%FFFD04A92BA9FD11FFA92BA9FFFF7FA9FD0AFFA955A9FD17FF54FFFF7F54%FD05FF7F557FFD48FF55A9FFFF7F7F7FA97FFFA9A9FFFFA9FFFFA955FD17%FFA955FD067FA9FFA97FA97FFD47FFFD047F55A9FFFFA9A95555557F5BFD%047FFD18FF7F55FD05FFA97F7F7FA9FF7FFD51FF557F7FFFFFA9A9A9FD18%FFA97FFD08FF7F7FFF7F7FFD51FFA97F7FFD1DFF54FD0CFFA955A9FD6FFF%7FA9FD0EFF5BFD6FFF7FA9FD0BFF7FA9FF7FFD6FFF7FFFFFFFA9A9FD07FF%7F557F55FD6EFFA955A9FFA97F55A9A9FD05FF7FFFA9A9FD6FFFA97F5BFF%7F7F7FA9FD04FFA97FFD72FFA97F552BA9FFFF55FD04FF7FA9FD72FF7F7F%A9A9A9FFA97FFFFFFF7F7FFD74FFA97F7FFFFFFF7FA92A557FFD77FFA955%FFFFFD05557FFD77FFA9557F7F7F55A9552B7FFD0AFF7F7FA9FD6BFFA9FF%7F5555557FFD0AFF7E55A955A9FD6CFF7F2B7FA9FD0CFF7F7F7FFD7EFFA9%FDFCFFFDFCFFFD0EFF7F2BA9FD7DFF7F7FA9FDFCFFFDFCFFFDF4FF55A9FD%7DFFA92BA9FD7DFF7F55FD7EFF557FFD7AFFA97FFFA9557FFD7AFF557FA9%A955FD7BFF7F55A97F55A9FD7DFF7F7FFD7DFFA9547FFD7DFFA97F7FFD06%FFA9FFA9FD74FFA97F7FFD05FFFD047F55FD73FFA97F7FFD04FF7F557FFF%FFFF55FD72FFA97F7FA9FFFFFF7F7FA97F7FFFA9A9FD71FFA9A97FFFFFFF%7F7FFFA97F2BA9A97F7FFD70FFA97F7FA9FFFF7FFFA97F5555A9A9557F7F%FD6FFFA9A97FFFFFFF7FAF7FA9FFFFFFA9FFFF55A9FD6EFFA97EA97FFFFF%7F7F7FFD05FFA9557FFD6FFFA97FA9A9FFFFA97FFFA9A9A9FFA97F55A9FF%FFA9FD6DFF55A97FFFFFA97FFD0455FFFF7FFF7FFFFFA92BFD6CFF7FA97F%FFFFFFA9FF7F7F54A9FF7FA97FA9FFFF5555FD6BFF7FA97EFD08FF55FF7F%FFA9A9FFFFA9557FFD61FFA9FD08FFA97FA9A9FD07FFA97F85A9A9A9FFFF%FF5555A9FD60FF7F2BFD07FFA97F7FA9FD08FF7F55FF7F7FFFFFFFA97FA9%FD60FFA9557FFD07FF7FA97FFD08FFA955FF7F2AA9FFFF7F7F7FFD61FF7E%7FA9FD05FFA97F7F7FFD09FF7FFF7FFF55FFFFFF7F7FA9FD60FF857FA9FD%06FF7FA97FFD08FFA97FA97FFFA955FFFF7F7F7FFD14FFA95555FD49FF7F%A97FFD05FFFD04A9FD08FFA97FA97FFFFFA97FFF7F7F7FFD13FFA97F55A9%FD49FFA97FA9FD06FF7FA97FFD08FF7FA97F55FFFFFF7F7FFF547FA9FD12%FF7F7F7FFD4AFF7F7F7FFD05FFA97F7FA9FD08FFA9A9A955A9FFFFFF7FA9%A97FFD07FFA9A9FD0AFF7FA97FFD4AFFA97FA9FD05FFFD04A97FA97FA9FD%04FF7FA97FA955FFFFFFA9557F7FA9FFFFFFA9FFFF7FA9FD09FF7F7F7FFD%43FF55FD07FF7F7F7FFD05FF55FF7FFFA9A9A97F7F7FA9FFA9A9A97FA97F%FFFFFF557F7FFFFFFF55A9FFFF55FD0AFFA97FA9FD43FF5555A9FD05FF7F%A97FFD04FFA97FFF7FFD06FFA9557FA9A9A97FFF7FA9FFFFFF5555FFFF55%7FFFFF7F7FFD0AFF7F557FFD16FF7FA9FD2BFFFD057FFFFFFF7EA97FFD04%FF7FA9A97FFD06FF7FA9A9FF55A955FFA97FFD04FF7F7F7FA9FFFFA97FFD%0BFFA955FD0CFFA97FFFA9A9FD06FF2BA9FD24FFA9FD07FF7F7FA9A97F7F%A985A9A9FFFFFFA97FFF7FA9FFA9FFFFFFA9557FFFFFFF7FA9FFFF7F7FFD%04FFA9FFFFFFA955A9FD05FFA9FD05FF7F55A9FD09FFA97F7FA9557F7F55%7FA9FFFFA9557FFFFFFFA9A97FA9A9FD1AFF7F557FA9FD07FFA97F7FFFA9%7F7FA985FFFFFF55A9A97FFFFF7FFFFFA9FFFF857F7F7FA97FA97F7F7FFD%08FF55A9FD05FF7F55A9FD04FF7F55FD08FFA955A955A9FF7FFFA955FF7F%A9FFFF7F7FA9FF7F7F7FA9FD057FFD13FFA9A9A97F7FFD0CFFA97FA955A9%7FA9FFFFA97FFF7FA9FFFF55A97F5555FFFFFFA9A97FA97FA9A9FD07FFA9%7F7FFD07FF557FA9FFFFFF7E55A9FD05FFA97F557F7FA97FA97FA955FFFF%7F7FFFFF7F7F55A9FD07FFA97F55FD057FA9A97F7F54A9FD05FFA954A97F%7F54FD0FFFA97FA97F54FFFF7FA9FF55FD04FF557FFFA9557FA9FD09FF7F%A9FFFFFFA97FFD08FF7F7FA9FFFFFFA955FD06FFA97FFFA9A97FA9A9A97F%FFFFA97FFFFFFFA97FA97FFD0AFF2BFD04A97F7FFD08FFA955FFFFFFA9A9%FD10FF7FFF55A9A9FF55FF7FA9FD04FFA97FFFFFFFA97F557F7FA97FA97F%852B7F7F7FFFFF7FA9FD08FF7F7F55FFFFFF7F557FFD05FFA97FA9FFFFFF%7FFFA9A9A97F7FFD05FF7FA97FA9FD08FF55A9FD04FFA97F7F7F557FA97F%7F7F55FD15FFA9A9A9557FA9A97FFF7FA9FD0DFFA97FA97FA955A97FA97F%A9FFA97FFD09FF7FA97FFFFFA9557FFD06FFA97F7FA97FA97F7F7FA9A9FD%06FFA97FA97FFD0DFF7F7FA9FFFFFFA97F7FFF7F7F7FFD14FFA9A9A9557F%A9A9A9FF7FFD13FF7FA9FF55557FFF7F85FD08FFA97FA97FFFFFA97F54FD%09FFA9A97FA9A9FD09FF7F7F7FA9FD0BFFA954A9FD0AFFA9A9FD14FF7FA9%7E7F7FA97EFFA97FFFFFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Layer 4) Ln0 Au*u1 D0 O0.841245 0.759243 0 0 0.176471 0.121569 1 Xa0 J 0 j 1 w 10 M []0 d0 XR3770.666 -306.3091 m3766.6387 -292.7583 3763.5322 -278.2354 3755.4287 -266.4458 c3747.5254 -254.9478 3736.7588 -248.5137 3725.6436 -240.6147 c3723.3418 -238.9795 3721.1973 -237.2983 3718.5352 -236.3105 C3718.8398 -235.8398 3719.1318 -235.3896 3719.3271 -234.9985 c3722.6191 -228.415 3725.3105 -221.6865 3728.2949 -214.9663 c3734.1719 -201.729 3733.4629 -186.7979 3732.8799 -172.6011 c3732.7031 -168.314 3732.5146 -163.8242 3731.7734 -159.5957 c3731.0068 -155.2202 3729.3301 -151.1357 3728.4336 -146.8105 c3727.0518 -140.1509 3726.2012 -131.5107 3719.8262 -127.4194 c3713.1777 -123.1528 3705.7051 -126.855 3699.4102 -129.9819 c3691.7188 -133.8022 3684.3672 -138.0322 3677.4629 -143.1768 c3670.8193 -148.127 3666.4209 -154.6626 3661.6934 -161.3774 c3656.543 -168.6909 3650.9102 -175.6147 3645.5684 -182.7817 c3643.3164 -185.8027 3642.0859 -189.4038 3640.8066 -192.9155 c3639.2832 -197.0933 3636.667 -200.8081 3634.3896 -204.6035 c3631.0977 -210.0898 3628.0605 -215.7749 3625.3906 -221.6138 C3624.8584 -220.4834 3624.0176 -219.6255 3622.9922 -219.0566 C3615.7129 -209.0522 3608.3877 -198.1797 3598.0732 -191.2314 c3587.1621 -183.8813 3575.6533 -176.2266 3563.3496 -171.3408 c3557.3701 -168.9663 3551.6621 -166.4248 3545.457 -164.562 c3537.8262 -162.2705 3529.9795 -160.7568 3522.1963 -159.0889 c3518.6436 -158.3271 3515.1621 -157.5762 3511.5508 -157.1294 c3509.3643 -156.8584 3507.2109 -156.8535 3505.0576 -156.7153 C3505.1006 -156.5513 3505.1465 -156.3887 3505.1797 -156.2139 c3506.2363 -150.7158 3502.3174 -148.0327 3498.2842 -145.292 c3494.7549 -142.894 3488.4961 -137.8105 3483.5342 -134.9458 c3482.7285 -134.4805 3481.9258 -134.0151 3481.1279 -133.5386 C3481.5938 -131.1558 3481.3428 -128.541 3481.8154 -126.168 c3483.25 -118.9683 3486.8672 -112.2822 3489.5469 -105.5034 c3491.334 -100.9824 3494.3574 -95.0024 3491 -90.5059 c3486.4375 -84.3945 3478.5801 -87.8452 3472.4326 -89.0117 c3470.4102 -89.3955 3468.4629 -90.1904 3466.5146 -90.96 C3467.127 -89.3955 3467.6484 -87.7861 3467.9834 -85.9453 c3469.2705 -78.8711 3471.4375 -71.9312 3472.999 -64.9023 c3474.3271 -58.9258 3476.3594 -52.8662 3477.1855 -46.8066 c3477.8877 -41.6636 3476.877 -34.7104 3470.5938 -33.8257 c3464.1504 -32.9185 3460.3906 -39.0444 3455.9434 -42.73 c3450.959 -46.8613 3445.5039 -50.3535 3440.1191 -53.9414 c3433.7246 -58.2041 3427.8857 -64.2969 3422.1738 -69.439 c3411.6074 -78.9512 3403.1592 -90.207 3395.1055 -101.8765 c3386.377 -114.5249 3378.6436 -128.6509 3372.8154 -142.8564 c3369.7861 -150.2397 3367.958 -158.041 3365.042 -165.4917 c3362.4414 -172.1348 3359.3594 -179.502 3358.8633 -186.666 c3358.8242 -187.2285 3358.8516 -187.7495 3358.9268 -188.2358 C3346.4277 -197.7275 3335.6113 -209.2744 3327.6406 -223.187 c3324.2969 -229.0225 3322.123 -235.3633 3319.0518 -241.3105 c3317.4404 -244.4302 3315.0684 -247.5293 3314.043 -250.9082 c3313.0605 -254.1421 3311.8496 -257.2173 3310.4121 -260.2749 c3307.6992 -266.0508 3303.2441 -270.5942 3300.0703 -276.1304 c3296.5713 -282.2334 3294.0254 -289.1963 3291.2949 -295.6729 c3285.959 -308.3325 3283.1172 -322.1787 3281.3887 -335.7993 c3280.4893 -342.8882 3278.5605 -349.7681 3277.6953 -356.8491 c3276.9141 -363.2437 3273.3223 -367.6982 3276.082 -374.1792 c3276.292 -374.6719 3276.585 -375.0986 3276.9297 -375.4751 C3276.1533 -377.9692 3276.8691 -380.7178 3280.0234 -382.1416 c3284.8047 -384.3003 3289.8262 -385.5923 3294.9307 -386.749 c3299.8652 -387.8672 3304.4941 -392.9033 3308.5547 -395.8018 c3318.6074 -402.9785 3329.3789 -409.0566 3340.874 -413.5742 c3351.6367 -417.8042 3363.4141 -421.855 3372.4824 -429.2588 c3376.874 -432.8452 3380.7842 -436.9736 3385.2246 -440.5078 c3386.6836 -441.6689 3389.0225 -443.186 3391.084 -444.9033 C3390.7607 -444.7559 3390.4395 -444.6069 3390.1074 -444.4731 c3387.7842 -443.5381 3385.1289 -440.8296 3382.8291 -439.4868 c3379.4258 -437.4985 3375.5996 -436.3521 3371.8623 -435.1885 c3357.5098 -430.7192 3342.3965 -428.604 3327.5879 -426.2363 c3316.5107 -424.4648 3304.2803 -423.2568 3293.7754 -428.0415 c3283.168 -432.8735 3282.0938 -448.5513 3288.7627 -456.897 c3292.4229 -461.4771 3298.1543 -464.811 3302.7676 -468.397 c3305.3311 -470.3901 3307.9385 -472.2529 3310.7461 -473.8896 c3314.0801 -475.834 3318.0762 -476.5625 3321.7002 -477.8296 c3327.6865 -479.9219 3332.0332 -484.0586 3337.4082 -487.251 c3340.1563 -488.8833 3342.6514 -490.7432 3345.5781 -492.0449 c3348.9326 -493.5371 3352.4053 -494.7466 3355.7568 -496.2441 c3362.1445 -499.0967 3367.8828 -503.644 3373.9307 -507.1621 c3380.7822 -511.1475 3387.3877 -515.2246 3393.6514 -520.104 c3399.2578 -524.4717 3404.6104 -529.1992 3410.3535 -533.3887 c3413.0664 -535.3687 3415.8711 -537.2168 3418.6113 -539.1587 c3422.1953 -541.6992 3424.8633 -545.4722 3427.8154 -548.6929 c3434.2266 -555.687 3442.293 -560.7344 3449.6943 -566.4707 c3456.8779 -572.0386 3467.1289 -573.2778 3475.3926 -569.2397 c3484.3887 -564.8438 3488.4238 -554.3945 3490.9121 -545.293 c3491.041 -544.8218 3491.1543 -544.3467 3491.2773 -543.874 C3491.9414 -543.9233 3492.6504 -543.8726 3493.3984 -543.6982 c3499.6484 -542.2417 3505.7217 -540.1948 3511.9023 -538.4849 c3518.2158 -536.7378 3524.7012 -535.2217 3530.3496 -531.7803 c3531.6611 -530.981 3532.5078 -529.9487 3532.9785 -528.8242 C3531.8428 -534.7197 3529.8115 -540.4609 3529.2471 -546.5142 c3528.5244 -554.2661 3528.6143 -562.0791 3528.6143 -569.856 c3528.6143 -584.9805 3528.7324 -599.9912 3529.4795 -615.0845 c3529.7412 -620.3696 3532.2656 -625.832 3536.9844 -628.4795 c3543.3428 -632.0483 3549.4785 -626.9443 3553.4092 -622.3071 c3557.5225 -617.4546 3560.3916 -612.0728 3565.0527 -607.6572 c3566.6895 -606.1064 3568.668 -605.0137 3570.4355 -603.6406 C3572.0195 -604.6807 3573.6318 -605.6548 3575.2764 -606.5991 c3579.8301 -609.2153 3584.3652 -613.8462 3589.9648 -613.0029 c3595.9063 -612.1089 3597.4131 -606.7661 3598.2861 -601.751 c3598.7695 -598.9731 3599.5195 -586.7422 3602.1035 -586.5996 c3606.4648 -586.3594 3611.0928 -589.6714 3615.3232 -590.5527 c3620.3379 -591.5977 3625.5449 -590.8936 3629.2598 -587.1455 c3633.8408 -582.5244 3631.8779 -575.2485 3629.625 -570.0508 c3628.8379 -568.2368 3628.0566 -566.5093 3627.3301 -564.79 C3627.4326 -564.8057 3627.5273 -564.8345 3627.6318 -564.8477 c3633.4131 -565.5679 3639.1836 -566.2319 3645.0098 -566.4331 c3649.9463 -566.604 3654.6025 -567.3286 3659.2383 -565.1968 c3662.168 -563.8496 3667.1992 -561.52 3668.6426 -558.4106 c3670.7393 -553.894 3671.4453 -549.3994 3669.2227 -544.7437 c3665.043 -535.9858 3654.8643 -530.582 3646.5547 -526.4731 c3637.793 -522.1406 3628.4043 -518.2612 3620.6729 -512.1899 c3613.0537 -506.2065 3604.2148 -503.0205 3596.375 -497.4009 C3598.0859 -496.207 3599.8369 -495.042 3601.7188 -494.0386 c3610.5889 -489.3096 3616.335 -482.0581 3622.5742 -474.4482 c3628.9707 -466.6479 3635.4453 -458.9238 3642.1582 -451.3931 c3645.5781 -447.5571 3648.6055 -443.3398 3651.5195 -439.1147 c3654.3359 -435.0317 3656.6279 -430.2134 3659.9961 -426.5801 c3663.4346 -422.8726 3664.6787 -418.4438 3666.9238 -414.0254 c3669.2188 -409.5078 3670.7188 -404.5693 3672.3154 -399.7783 c3674.0801 -394.4834 3676.2734 -389.2314 3676.9902 -383.6885 c3677.6807 -378.3467 3677.6309 -372.9307 3678.4131 -367.5977 c3679.209 -362.1719 3678.7012 -356.6655 3679.4805 -351.2739 c3680.2451 -345.98 3680.7988 -340.7393 3680.791 -335.3848 c3680.7891 -334.3506 3680.7461 -333.3213 3680.6855 -332.2939 C3683.6836 -334.6133 3686.7285 -336.7515 3690.3213 -338.5977 c3696.9883 -342.0234 3703.8584 -343.5342 3711.0449 -345.3589 c3713.7656 -346.0493 3716.2813 -348.3208 3718.4785 -349.9609 c3720.9746 -351.8237 3724.457 -353.0366 3727.332 -354.1733 c3734.5557 -357.0298 3742.1816 -359.5142 3749.6377 -361.7119 c3756.125 -363.6245 3762.6309 -364.4868 3769.3438 -363.4883 c3776.5166 -362.4219 3776.5303 -355.5313 3776.5303 -349.8652 c3776.5303 -334.7236 3774.9941 -320.873 3770.666 -306.3091 cf0 D3374.8223 -177.1309 m3376.1914 -173.2549 3377.4248 -169.3657 3378.916 -165.5073 c3381.8135 -158.0054 3383.5625 -150.2217 3386.8379 -142.8521 c3393.0332 -128.9131 3401.2959 -114.6821 3410.5791 -102.5791 c3414.9355 -96.8994 3418.8311 -90.9688 3423.8145 -85.793 c3429.1797 -80.2202 3435.1807 -75.2129 3441.0469 -70.1841 c3446.8105 -65.2432 3453.2285 -61.4116 3459.0586 -56.6216 c3459.9961 -55.8516 3460.9502 -55.1172 3461.9063 -54.3877 C3461.2334 -57.3354 3460.709 -60.3423 3460.0615 -63.2568 c3458.9971 -68.0469 3457.791 -72.7446 3456.5371 -77.4834 c3455.5195 -81.3286 3455.543 -86.2134 3453.1035 -89.4966 c3449.0605 -94.939 3451.4033 -103.6025 3457.9883 -105.3491 c3463.0234 -106.6841 3468.6738 -104.1475 3473.2686 -102.332 c3474.5605 -101.8213 3475.9277 -101.4478 3477.3184 -101.1377 C3476.8135 -102.5039 3476.3018 -103.8672 3475.7324 -105.2139 c3472.2949 -113.3555 3468.2764 -121.7158 3468.2764 -130.7529 c3468.2764 -134.2266 3466.8818 -136.5376 3468.9639 -139.8999 c3470.7559 -142.7939 3474.1035 -144.5464 3476.9727 -146.1709 c3480.5293 -148.1846 3483.6475 -150.9946 3486.9951 -153.3359 c3487.6445 -153.7896 3488.2949 -154.2139 3488.9453 -154.6392 C3485.001 -154.4287 3481.0381 -154.4258 3477.1895 -154.4229 c3473.6738 -154.4204 3470.2988 -155.4824 3466.8457 -155.9424 c3463.666 -156.3667 3460.3535 -156.355 3457.1475 -156.6763 c3449.6309 -157.4302 3442.0625 -157.3706 3434.6406 -158.856 c3427.4951 -160.2861 3420.2979 -160.8203 3413.1543 -162.436 c3405.5605 -164.1533 3397.9434 -166.3877 3390.8271 -169.5737 c3385.2539 -172.0693 3379.8086 -174.8535 3374.5332 -177.9087 C3374.6318 -177.6489 3374.7305 -177.3892 3374.8223 -177.1309 cf3562.0029 -593.7686 m3555.7295 -597.9697 3550.9785 -603.1274 3546.7988 -609.3711 c3545.958 -610.6265 3545.1416 -611.918 3544.2168 -613.1147 c3543.6289 -613.8481 3543.002 -614.5449 3542.3438 -615.2144 C3541.9199 -613.0923 3542.2686 -610.0679 3542.1641 -608.7251 c3541.501 -600.2222 3541.6143 -591.7466 3541.6143 -583.2178 c3541.6143 -566.7744 3540.7236 -550.3511 3544.7822 -534.2969 c3546.7354 -526.5752 3547.0762 -518.8311 3547.8906 -510.9336 c3548.1094 -508.8169 3548.1367 -506.6689 3548.1172 -504.5205 C3551.7734 -517.9028 3551.7793 -532.1973 3554.0479 -545.9443 c3555.5117 -554.8169 3557.4443 -563.6099 3559.3838 -572.3882 c3560.3076 -576.5693 3561.0332 -580.7783 3562.0313 -584.9448 c3562.584 -587.2471 3563.4551 -589.7437 3564.0869 -592.1963 C3563.4277 -592.7192 3562.7588 -593.2627 3562.0029 -593.7686 cf3608.8906 -519.397 m3614.4707 -523.0293 3619.1758 -527.3516 3625.248 -530.2974 c3631.6289 -533.3916 3638.0293 -536.6016 3644.3164 -539.896 c3647.1221 -541.3662 3649.9004 -543.0171 3652.3828 -544.9927 c3653.959 -546.2471 3657.4082 -548.5088 3657.6943 -550.7178 C3657.8477 -550.7578 3658 -550.7974 3658.1533 -550.8369 C3657.4648 -551.3325 3656.7568 -551.7979 3656.0293 -552.2324 c3655.1611 -552.7769 3654.2168 -553.3213 3653.2578 -553.6885 c3651.9297 -554.1968 3649.8291 -553.6611 3648.4727 -553.5337 c3646.0488 -553.3066 3643.5801 -553.3936 3641.1475 -553.2612 c3637.2734 -553.0498 3633.4121 -552.5581 3629.5625 -552.0884 c3627.4531 -551.8306 3625.4033 -550.6606 3623.2773 -550.2842 c3621.5488 -549.978 3619.9004 -550.0566 3618.4199 -550.4531 C3618.3652 -549.126 3617.9189 -547.7681 3616.9434 -546.5107 c3615.0186 -544.0317 3612.9375 -541.7383 3610.7363 -539.5024 c3608.2725 -536.9985 3606.4912 -533.3672 3604.3828 -530.5313 c3600.1777 -524.8735 3593.1787 -521.103 3591.2607 -513.981 c3589.084 -505.8945 3576.543 -509.3301 3578.7256 -517.437 c3580.8496 -525.3281 3586.3438 -530.541 3592.0645 -536.0156 c3595.0684 -538.8916 3597.3271 -542.8184 3599.4941 -546.3428 c3601.5957 -549.7617 3605.2656 -552.5029 3607.75 -555.7031 c3609.0762 -557.4111 3610.668 -558.0537 3612.2139 -557.9644 C3612.1729 -558.4878 3612.1553 -559.0254 3612.1943 -559.5918 c3612.5117 -564.1953 3614.708 -568.9038 3616.7217 -572.9736 c3617.498 -574.5439 3618.375 -576.2383 3618.7998 -577.9902 C3617.7471 -577.9092 3616.6836 -577.5244 3615.6963 -577.2129 c3611.1836 -575.7905 3607.0303 -573.8896 3602.1035 -573.5996 c3595.3047 -573.2002 3590.5264 -578.6704 3588.4121 -584.5454 c3586.9033 -588.7373 3586.3301 -593.2793 3585.7773 -597.7383 C3583.0479 -596.0879 3579.873 -594.6758 3577.375 -592.6816 C3576.2754 -586.002 3573.8281 -579.4058 3572.7578 -572.71 c3571.3418 -563.8516 3568.8691 -555.1011 3567.2441 -546.2661 c3564.0273 -528.7817 3564.9014 -510.4844 3558.2764 -493.8682 c3558.1787 -493.6235 3558.0713 -493.3906 3557.9551 -493.168 C3563.4307 -494.9629 3568.6328 -497.4268 3573.9502 -499.6382 C3574.0195 -502.8164 3576.0781 -505.7319 3580.166 -505.3145 c3581.4707 -505.1812 3582.6934 -504.9136 3583.8652 -504.5615 C3586.5488 -506.2568 3589.1201 -508.1382 3591.7539 -510.0586 c3597.1641 -514.0024 3603.3584 -515.7964 3608.8906 -519.397 cf3756.4727 -350.1484 m3750.7627 -349.0435 3744.9307 -346.7373 3739.5781 -344.5166 c3734.6631 -342.4785 3729.7998 -341.1958 3725.041 -338.7363 c3722.8721 -337.6152 3720.9844 -335.7944 3718.8105 -334.6035 c3716.4629 -333.3184 3713.9053 -332.626 3711.3047 -332.1025 c3706.2568 -331.0859 3701.5166 -329.625 3696.8828 -327.3726 c3692.125 -325.0596 3688.5918 -322.0913 3684.5215 -318.8354 c3682.8398 -317.4897 3680.9707 -317.1157 3679.2383 -317.3823 C3678.335 -315.1172 3676.7041 -313.2007 3674.3555 -312.1885 c3667.0098 -309.022 3660.585 -319.335 3667.0449 -323.0352 C3667.0352 -323.3799 3667.0391 -323.7251 3667.0176 -324.0698 c3666.9268 -326.1191 3667.4746 -328.1709 3667.6436 -330.2129 c3668.0313 -334.873 3667.833 -339.6362 3667.3877 -344.2822 c3666.5186 -353.3462 3665.8584 -362.376 3664.9805 -371.4512 c3664.5869 -375.5259 3664.4229 -379.6167 3663.9902 -383.6885 c3663.4961 -388.3428 3660.6611 -393.6763 3659.1768 -398.1323 c3657.7822 -402.3164 3656.3809 -406.4063 3654.2002 -410.2559 c3653.1816 -412.0532 3652.7822 -414.1904 3651.8574 -416.0483 c3650.9111 -417.9492 3648.8223 -419.2905 3647.7012 -421.1167 c3638.4121 -436.2412 3626.8027 -449.4409 3615.4512 -463.0088 c3610.3848 -469.063 3605.7188 -475.7993 3599.1465 -480.3018 c3595.7949 -482.5977 3592.291 -484.5347 3589.0049 -486.9438 c3587.8125 -487.8179 3586.3105 -489.1274 3584.7227 -490.2378 C3570.3457 -482.8901 3554.2637 -479.2212 3539.2559 -473.2383 c3531.4609 -470.1313 3528.1104 -482.709 3535.7988 -485.7744 c3535.8066 -485.7778 3535.8154 -485.7803 3535.8232 -485.7837 C3533.9512 -491.4746 3535.0498 -498.3311 3535.0498 -504.2158 c3535.0498 -511.2861 3534.3525 -518.4165 3533.5254 -525.4341 c3533.498 -525.6621 3533.4541 -525.8867 3533.4238 -526.1138 C3533.1699 -521.7598 3528.6309 -517.604 3523.7891 -520.5547 c3519.166 -523.3716 3513.6504 -524.5967 3508.4453 -525.9492 c3503.6836 -527.1865 3499.0195 -528.7329 3494.2832 -530.0454 C3495.4014 -523.6982 3496.2246 -517.2964 3496.8633 -510.8818 c3498.041 -499.0581 3497.5381 -486.9512 3497.8408 -475.0737 c3498.1367 -463.4526 3498.1709 -451.8389 3498.1709 -440.2148 c3498.1709 -434.2866 3497.7539 -428.8452 3496.3291 -423.0718 c3495.043 -417.8569 3494.7588 -412.5542 3493.2725 -407.3418 c3490.3711 -397.168 3490.248 -386.0239 3485.2158 -376.4668 c3481.3096 -369.0469 3470.0889 -375.6177 3473.9912 -383.0283 c3475.3828 -385.6724 3475.7959 -388.6802 3476.4795 -391.5645 c3477.2168 -394.6753 3478.4346 -397.4995 3478.8457 -400.7119 c3479.7734 -407.9497 3482.0801 -414.7949 3483.0322 -422.0229 c3483.499 -425.5718 3484.6318 -428.9805 3485.0811 -432.5229 c3485.5488 -436.2222 3485.1709 -440.1787 3485.1709 -443.9043 c3485.1709 -451.791 3485.1738 -459.6748 3485.0166 -467.5601 c3484.7061 -483.2183 3485.165 -499.1724 3483.46 -514.7437 c3482.623 -522.3853 3481.001 -529.7158 3479.46 -537.2197 c3478.0947 -543.8657 3476.1885 -550.8345 3471.7891 -556.165 c3468.8467 -559.729 3462.0859 -559.0557 3458.582 -556.9893 c3453.3691 -553.9155 3448.9316 -549.9551 3444.457 -545.9341 c3441.9717 -543.7007 3439.3574 -541.9277 3437.0078 -539.5005 c3434.416 -536.8223 3432.0859 -533.9048 3429.4922 -531.2251 c3427.0967 -528.749 3423.666 -526.8545 3420.832 -524.9214 c3417.4893 -522.6426 3414.3447 -520.144 3411.1953 -517.6079 c3405.6836 -513.1685 3400.1895 -508.7109 3394.4443 -504.5723 c3387.9502 -499.8945 3380.8145 -496.2271 3373.9883 -492.0752 c3368.1309 -488.5127 3362.7686 -485.0884 3356.375 -482.5005 c3350.3525 -480.063 3344.3662 -476.9824 3339.1895 -472.979 c3336.0898 -470.583 3333.3096 -468.6226 3329.6836 -467.0898 c3325.7334 -465.4199 3321.0645 -464.6494 3317.3066 -462.6646 c3314.0293 -460.9331 3311.1084 -458.5596 3308.2256 -456.2549 c3305.1367 -453.7852 3301.6523 -451.6348 3298.8604 -448.8374 c3297.0762 -447.0483 3297.498 -443.3652 3298.043 -441.1885 c3298.4746 -439.4629 3301.4141 -438.873 3302.7891 -438.5049 c3308.9297 -436.8599 3316.1904 -437.666 3322.3564 -438.5068 c3331.3047 -439.7271 3340.2783 -441.3862 3349.1553 -443.0532 c3357.6094 -444.6411 3366.9805 -446.3081 3374.8271 -449.9507 c3381.918 -453.2422 3399.0186 -469.5205 3406.374 -457.043 c3407.377 -455.3413 3407.5156 -453.6816 3407.0977 -452.2271 C3407.8633 -450.7778 3408.0781 -449 3407.834 -447.207 c3407.166 -442.3066 3402.9043 -438.5503 3399.4609 -435.374 c3395.0186 -431.2754 3390.1191 -427.689 3385.6592 -423.5796 c3376.2686 -414.9282 3365.4404 -409.6221 3353.7383 -404.7817 c3341.7529 -399.8237 3330.498 -394.8125 3319.6035 -387.6533 c3314.3193 -384.1802 3309.4365 -380.1934 3304.2832 -376.5488 c3299.6934 -373.3018 3293.3271 -373.3613 3288.0488 -371.4946 C3288.1162 -370.2231 3287.8477 -368.8892 3287.3066 -367.6177 c3288.2305 -369.7856 3287.6338 -369.0845 3288.4893 -367.2129 c3289.1143 -365.8467 3289.5635 -364.6206 3289.8721 -363.1577 c3290.5 -360.1777 3290.5518 -357.106 3291.1807 -354.123 c3292.8555 -346.1846 3293.7324 -338.1201 3295.4121 -330.1963 c3296.8359 -323.479 3297.8252 -316.606 3299.6514 -309.9873 c3301.6641 -302.6943 3305.3369 -295.7031 3308.4473 -288.8306 c3311.1699 -282.8115 3314.3369 -277.6738 3318.4707 -272.5181 c3323.0381 -266.8232 3324.2129 -259.0034 3327.625 -252.6987 c3334.2686 -240.4229 3338.7402 -227.3755 3348.0088 -216.6519 c3352.5566 -211.3901 3357.3535 -206.2554 3362.5039 -201.5771 c3367.7822 -196.7832 3373.8525 -193.3491 3380.0713 -189.9385 c3386.3867 -186.4751 3392.541 -182.6895 3399.2715 -180.0625 c3406.5723 -177.2139 3414.3418 -175.3745 3422.0039 -173.812 c3425.6025 -173.0781 3429.2373 -172.9839 3432.8525 -172.375 c3436.3633 -171.7842 3439.9453 -170.6431 3443.5146 -170.6382 c3450.7578 -170.6284 3457.8916 -169.2236 3465.1221 -169.0317 c3468.6455 -168.9385 3471.9961 -167.9746 3475.4658 -167.5122 c3478.8242 -167.0645 3482.4678 -167.4355 3485.8418 -167.5605 c3493.9404 -167.8618 3501.748 -169.5791 3509.8291 -169.9863 c3515.1875 -170.2559 3520.6582 -172.0308 3525.8965 -173.1489 c3531.3076 -174.3047 3536.6855 -175.5757 3542.0068 -177.0977 c3551.8438 -179.9102 3561.2344 -184.0674 3570.1143 -189.1318 c3572.1563 -190.2964 3574.1348 -191.5698 3576.1084 -192.8442 c3578.1875 -194.1865 3580.4863 -194.9585 3582.4082 -196.5596 c3586.0068 -199.5591 3590.2207 -201.415 3593.8164 -204.4854 c3601.8438 -211.3384 3607.6758 -220.1729 3613.9316 -228.564 c3615.8477 -231.1348 3619.0684 -232.0107 3621.7031 -231.2705 C3621.4023 -237.54 3631.9766 -239.6348 3634.7051 -232.6416 c3640.0664 -218.9004 3649.2607 -207.2065 3654.4297 -193.4292 c3656.7344 -187.2896 3662.6357 -181.8447 3666.5732 -176.6719 c3671.2432 -170.5371 3675.375 -163.9932 3680.2041 -157.9814 c3684.4463 -152.6997 3691.5283 -149.0981 3697.2891 -145.7134 c3699.6143 -144.3467 3711.8994 -137.0884 3713.041 -138.9648 c3714.3701 -141.1514 3714.9551 -144.0928 3715.3691 -146.5723 c3716.0117 -150.4067 3716.9033 -153.8975 3718.0215 -157.6216 c3720.3281 -165.2998 3720.0342 -174.0249 3720.082 -181.9819 c3720.123 -188.8306 3720.335 -195.811 3718.9932 -202.5586 c3718.3867 -205.6099 3717.0439 -208.4922 3715.7676 -211.3047 c3714.1807 -214.7988 3713.0293 -218.5835 3711.3203 -222.0015 c3708.7363 -227.168 3703.6934 -233.6123 3704.25 -239.6401 c3704.9277 -246.9854 3712.8984 -247.4419 3717.876 -250.979 c3722.9004 -254.5488 3728.1611 -257.7646 3733.1621 -261.3652 c3738.791 -265.4185 3743.2266 -271.1685 3746.8184 -277.0342 c3750.4375 -282.9424 3751.8672 -289.5288 3753.8711 -296.0781 c3756.1396 -303.4922 3758.5811 -310.8457 3760.5342 -318.3525 c3763.3701 -329.2534 3763.5254 -339.9116 3763.5293 -351.0752 C3761.1582 -351.0796 3758.7832 -350.5957 3756.4727 -350.1484 cf*U*u1 D3438.0449 -351.2969 m3430.3223 -346.4858 3420.7822 -346.7046 3412.0244 -346.6987 c3408.2715 -346.6963 3406.2051 -349.2998 3405.8115 -352.1768 C3392.5703 -358.187 3389.8984 -379.1851 3392.8271 -391.6899 c3394.5254 -398.9395 3398.6152 -405.1934 3405.5234 -408.2422 c3412.6094 -411.3696 3422.7422 -412.9688 3430.2676 -410.5615 c3447.9902 -404.8931 3454.7822 -386.7002 3451.2617 -369.5752 c3449.6445 -361.7124 3444.7646 -355.4829 3438.0449 -351.2969 cf0 D3429.1016 -396.9634 m3425.2139 -399.1846 3420.334 -398.6973 3416.0625 -397.9561 c3411.2051 -397.1128 3407.8984 -395.5674 3406.1309 -390.812 c3404.1201 -385.4053 3404.3984 -379.7295 3405.6855 -374.1929 c3406.6719 -369.9502 3408.2588 -364.4912 3412.9492 -363.4893 c3415.3848 -362.9688 3416.7832 -361.4937 3417.3398 -359.7266 C3425.7529 -359.9067 3434.8496 -361.2046 3437.9375 -370.2124 c3441.4531 -380.4697 3438.6943 -391.4819 3429.1016 -396.9634 cf*U*u1 D2084.0068 -201.3706 m2084.8389 -201.6484 2085.6953 -201.8052 2086.5781 -201.8408 C2086.8516 -201.8721 2087.126 -201.9033 2087.4004 -201.9346 C2089.1875 -202.895 2091.8145 -202.9839 2093.7227 -203.291 c2105.0645 -205.1167 2116.209 -206.0615 2127.707 -206.0273 c2150.9805 -205.9585 2174.1211 -203.772 2196.6807 -198.125 c2218.1641 -192.7471 2238.042 -182.5547 2256.5166 -170.4697 C2257.4424 -171.0664 2258.5908 -171.4331 2259.9717 -171.4434 c2264.9697 -171.481 2270.2148 -173.4185 2275.1387 -174.4292 c2280.9355 -175.6201 2286.5752 -177.27 2292.4219 -178.2505 c2304.9453 -180.3506 2317.6055 -182.3062 2330.0664 -184.6626 c2335.7158 -185.7305 2341.2461 -187.3657 2346.9043 -188.4434 c2352.3496 -189.481 2357.3027 -192.1313 2362.6934 -193.3809 c2373.2275 -195.8223 2383.2998 -195.48 2393.8037 -194.9873 C2392.7422 -196.0635 2391.6699 -197.1284 2390.5713 -198.1665 c2384.7715 -203.6494 2378.7266 -208.8687 2372.834 -214.249 c2370.8281 -216.0796 2369.1064 -218.6177 2366.8379 -220.1025 c2364.7979 -221.4375 2362.9121 -222.6553 2361.5078 -224.5215 C2359.75 -225.8247 2358.5332 -227.7271 2358.5332 -230.1382 c2358.5332 -234.2837 2362.0723 -237.0459 2365.2988 -238.939 c2369.3418 -241.3101 2374.0625 -241.4355 2378.5938 -241.4355 c2380.7969 -241.4355 2383.0029 -241.5088 2385.1973 -241.3223 C2385.4375 -241.3413 2385.6455 -241.3506 2385.8281 -241.3511 C2385.9072 -241.7388 2386.0059 -242.1221 2386.0674 -242.5137 c2387.3516 -249.5464 2391.6855 -256.0488 2399.4297 -256.6226 c2403.8184 -256.9478 2407.1953 -256.3618 2411.3379 -254.8794 c2413.1504 -254.231 2414.9297 -253.5117 2416.7598 -252.9131 c2417.2383 -252.7568 2417.6953 -253.2944 2418.5029 -253.9224 c2424.2168 -258.3613 2432.7324 -258.9692 2436.9883 -252.002 c2441.1895 -245.1255 2439.4404 -235.1436 2439.4404 -227.4761 c2439.4404 -217.793 2439.3535 -208.3145 2439.9541 -198.6484 C2447.2148 -200.7158 2454.7852 -201.0293 2462.3613 -201.1724 c2470.5449 -201.3267 2478.7539 -201.4072 2486.835 -199.9595 c2490.5605 -199.292 2494.1572 -197.8208 2497.6279 -196.3594 c2500.9785 -194.9487 2504.4766 -194.7026 2507.8223 -193.0825 c2508.0957 -192.9502 2508.3457 -192.8047 2508.582 -192.6533 C2513.1074 -198.0273 2518.04 -202.7188 2523.3271 -207.6167 c2526.208 -210.2852 2528.1064 -213.8926 2531.1611 -216.3325 c2534.5225 -219.0171 2538.1865 -219.7725 2542.4121 -219.9263 c2551.2949 -220.2485 2560.6709 -217.4424 2568.9268 -214.4512 c2577.9795 -211.1709 2585.9453 -205.939 2594.627 -201.8745 c2611.1699 -194.1309 2625.1904 -181.2998 2640.3652 -171.3218 c2643.459 -169.2876 2646.5557 -167.2046 2649.0918 -164.4741 c2651.2285 -162.1733 2653.2617 -158.6646 2656.0889 -157.1108 c2659.2598 -155.3682 2663.0928 -151.9692 2663.0928 -148.0488 c2663.0928 -147.4678 2663.0215 -146.9111 2662.9004 -146.3779 C2664.5488 -143.0625 2663.7227 -138.3379 2659.125 -136.9541 c2653.2383 -135.1812 2647.9365 -130.6655 2643.127 -126.981 c2637.085 -122.353 2630.627 -118.4409 2623.8359 -115.0161 c2610.5439 -108.3125 2596.5137 -103.4888 2582.5166 -98.5083 c2568.1133 -93.3833 2553.8213 -88.4473 2538.7715 -85.4912 c2531.2617 -84.0161 2523.6465 -83.5117 2516.042 -82.79 c2507.9658 -82.0239 2500.0674 -80.481 2492.0479 -79.3472 c2482.2861 -77.9668 2472.4707 -77.6714 2462.6436 -77.6992 C2462.5859 -77.6274 2462.5371 -77.5547 2462.4766 -77.4834 c2458.9199 -73.314 2453.7822 -73.1763 2449.0928 -71.1597 c2442.377 -68.2715 2436.4814 -64.1377 2429.4619 -61.8486 c2423.4111 -59.875 2416.9492 -59.2725 2410.7227 -58.0713 c2404.1367 -56.8008 2397.8193 -54.4185 2391.2246 -53.2856 c2380.709 -51.478 2363.7168 -45.0562 2355.6113 -55.0464 c2351.793 -59.752 2349.9678 -65.7695 2348.3633 -71.502 c2346.6113 -77.7646 2343.4463 -83.2183 2339.6367 -88.4526 c2339.1152 -89.1694 2338.7832 -89.8813 2338.5967 -90.5757 C2326.7988 -94.0962 2315.2246 -98.2969 2304.0215 -103.0713 c2292.8096 -107.8496 2281.9551 -113.4414 2271.1719 -119.1055 c2271.1582 -119.1123 2271.1475 -119.1206 2271.1348 -119.1274 C2269.6045 -118.022 2268.041 -116.2642 2266.9805 -115.2949 c2264.499 -113.0259 2261.8125 -111.187 2258.8857 -109.541 c2252.3555 -105.8687 2245.9092 -102.1724 2239.5234 -98.248 c2234.3721 -95.0825 2229.1787 -91.3047 2223.5957 -88.9717 c2216.6699 -86.0771 2209.7363 -83.3643 2202.5156 -81.2793 c2188.0254 -77.0952 2172.8232 -73.5962 2157.7373 -75.7163 c2142.4951 -77.8584 2127.3662 -78.6016 2112.4102 -82.6323 c2106.3857 -84.2563 2100.3545 -87.0513 2095.3135 -90.73 c2088.5254 -95.6836 2091.0781 -102.5273 2095.8984 -107.7593 c2105.3662 -118.0371 2116.2949 -127.2021 2128.7734 -133.5488 c2133.875 -136.1431 2140.0801 -138.041 2145.8545 -139.6284 C2145.0566 -139.8472 2144.2451 -140.0918 2143.4004 -140.373 c2139.8848 -141.5449 2136.7041 -143.4126 2133.3535 -144.9814 c2126.3838 -148.2456 2119.5283 -151.4199 2112.8125 -155.1963 c2104.3652 -159.9453 2096.0684 -164.9844 2089.0254 -171.71 c2083.0273 -177.437 2077.5645 -183.8467 2077.9316 -192.5322 c2078.0879 -196.2168 2080.2285 -200.3027 2084.0068 -201.3706 Cf0 D2426.4404 -234.9663 m2426.4404 -237.8184 2426.8008 -240.9224 2426.3984 -243.7617 C2425.7695 -243.2866 2425.1729 -242.7422 2424.5645 -242.2915 c2419.5918 -238.6064 2414.54 -239.8008 2409.1475 -241.8892 c2406.2852 -242.998 2403.8271 -243.9497 2400.7598 -243.7227 c2398.8691 -243.5825 2398.8428 -240.4429 2398.6035 -239.0586 c2397.6836 -233.7588 2394.5459 -227.939 2388.3408 -228.0967 c2386.4365 -228.145 2380.8047 -229.0112 2376.459 -228.8706 C2377.3945 -228.0464 2378.3047 -227.1841 2379.2324 -226.2568 c2384.9492 -220.5386 2391.126 -215.3086 2397.0908 -209.8501 c2402.8389 -204.5913 2408.2871 -199.0864 2413.4141 -193.2202 c2415.418 -190.9268 2417.4336 -188.6123 2419.5234 -186.3687 C2419.75 -186.665 2420.001 -186.957 2420.2988 -187.2388 c2422.4805 -189.3057 2424.7891 -191.1455 2427.2305 -192.7666 C2427.1768 -199.4434 2426.5498 -206.0537 2426.4707 -212.7539 c2426.3828 -220.1748 2426.4404 -227.5454 2426.4404 -234.9663 cf2358.0449 -82.9463 m2360.3203 -78.0547 2360.9854 -72.6128 2363.2148 -67.7437 c2363.8164 -66.4297 2364.6865 -63.4043 2366.2188 -62.9126 c2368.627 -62.1401 2371.7012 -62.9473 2374.0918 -63.4072 c2379.7324 -64.4927 2385.459 -65.2192 2391.0645 -66.4712 c2396.5078 -67.687 2401.793 -69.4468 2407.2666 -70.6069 c2412.9336 -71.8081 2418.6807 -72.4585 2424.3027 -73.8936 c2427.875 -74.8052 2431.1357 -76.3643 2434.3389 -78.0674 C2421.374 -78.2236 2408.4375 -78.4395 2395.4893 -79.5459 c2382.4766 -80.6582 2369.4658 -82.7988 2356.6279 -85.7891 C2357.1201 -84.853 2357.5977 -83.9082 2358.0449 -82.9463 cf2098.2178 -180.9023 m2103.1074 -175.9385 2109.2041 -172.2969 2115.1787 -168.8101 c2121.0732 -165.3701 2127.0176 -162.0337 2133.2314 -159.2051 c2140.4561 -155.916 2147.3789 -151.9082 2155.3379 -150.9917 c2160.8652 -150.355 2169.3037 -149.083 2171.0566 -142.71 c2172.8047 -136.3535 2166.8516 -132.7983 2161.9443 -130.8057 c2155.7109 -128.2754 2148.9766 -126.98 2142.6367 -124.6855 c2135.1797 -121.9863 2128.5947 -119.1035 2122.1074 -114.4385 c2116.3984 -110.333 2110.9111 -104.7993 2105.9883 -99.5269 C2107.7168 -98.5918 2109.2754 -97.458 2111.1367 -96.707 c2115.29 -95.0327 2119.7744 -94.145 2124.1289 -93.1738 c2133.2969 -91.1294 2142.582 -90.2568 2151.9307 -89.5259 c2156.3643 -89.1797 2160.708 -88.2515 2165.1543 -87.9482 c2170.3984 -87.5908 2175.1748 -88.502 2180.2803 -89.4712 c2196.9736 -92.6396 2213.1992 -97.1577 2227.5742 -106.3525 c2234.6553 -110.8818 2242.0771 -114.9268 2249.3477 -119.1353 c2253.2383 -121.3862 2256.167 -123.4995 2259.498 -126.3979 c2262.2852 -128.8228 2265.876 -131.7632 2269.5059 -132.5947 c2271.9395 -133.1523 2273.9512 -132.4238 2275.3652 -131.0845 C2276.1338 -130.9893 2276.9277 -130.7539 2277.7324 -130.3311 c2291.9082 -122.8848 2306.2129 -115.6738 2321.2324 -110.0684 c2336.2617 -104.46 2351.7412 -100.5791 2367.3281 -96.9521 c2398.4922 -89.6997 2431.2578 -90.8672 2463.0703 -90.6777 c2470.8711 -90.6313 2478.6621 -90.8867 2486.4268 -91.6509 c2494.5156 -92.4473 2502.4951 -94.2607 2510.5762 -95.2153 c2526.4883 -97.0947 2542.2715 -98.2988 2557.5957 -103.4639 c2571.6494 -108.2007 2585.4336 -113.7925 2599.5713 -118.332 c2606.1816 -120.4546 2612.7295 -123.9487 2618.9189 -127.0703 c2625.6719 -130.4756 2631.959 -134.6284 2637.918 -139.27 c2641.0234 -141.6904 2644.3408 -144.0874 2647.8555 -146.0645 C2647.7764 -146.519 2647.7432 -146.9751 2647.7539 -147.4258 C2646.9365 -147.9658 2646.1367 -148.5083 2645.5303 -149.1138 c2643.5313 -151.1133 2641.6689 -153.083 2639.8994 -155.2817 c2638.2959 -157.2729 2635.9678 -158.7891 2633.8047 -160.0967 c2630.5088 -162.0884 2627.4316 -164.666 2624.3496 -166.9736 c2618.25 -171.542 2611.7539 -175.4775 2605.5293 -179.8721 c2599.3555 -184.2314 2593.2314 -188.2314 2586.377 -191.4404 c2579.8076 -194.5156 2573.8145 -198.6304 2567.0605 -201.312 c2560.2852 -204.0029 2553.0508 -206.0933 2545.7793 -206.8032 c2543.3379 -207.0415 2540.542 -207.5142 2538.7109 -205.6621 c2536.0547 -202.9741 2534.002 -199.7969 2531.1855 -197.188 c2525.584 -192 2520.3164 -187.2085 2515.7852 -180.9707 c2512.5898 -176.5713 2506.6387 -177.8394 2504.3096 -181.1494 C2503.334 -181.1396 2502.3066 -181.3501 2501.2598 -181.8569 c2499.0713 -182.9175 2496.4834 -182.9512 2494.1719 -183.8237 c2491.1318 -184.9717 2488.1953 -186.167 2485.0547 -187.0454 c2479.0273 -188.731 2472.3438 -188.2188 2466.1543 -188.2051 c2456.9658 -188.1855 2447.9707 -187.9736 2439.9258 -184.7305 C2439.7207 -180.1143 2439.4404 -175.5347 2439.4404 -171 c2439.4404 -164.7183 2433.1104 -162.8267 2429.2852 -165.3145 C2427.5879 -164.2813 2425.4238 -164.1729 2423.2227 -165.7666 c2415.873 -171.0894 2409.7334 -177.7104 2403.6543 -184.4058 C2402.6582 -182.7808 2400.8936 -181.6587 2398.3467 -181.7739 c2386.7217 -182.3008 2376.0146 -183.1313 2364.5215 -180.4678 c2359.0801 -179.2065 2354.126 -176.6255 2348.5859 -175.5703 c2342.3887 -174.3896 2336.3252 -172.4712 2330.082 -171.5479 c2318.0244 -169.7632 2306.1016 -167.4297 2294.0791 -165.4131 c2282.8496 -163.5298 2271.3887 -158.5293 2259.9717 -158.4434 c2259.2207 -158.4375 2258.5391 -158.5405 2257.9219 -158.7261 C2256.126 -157.2686 2253.6289 -156.8296 2251.0586 -158.5259 c2238.7363 -166.6616 2225.8125 -173.2891 2212.4424 -179.4966 c2198.999 -185.7368 2183.8242 -187.8398 2169.3457 -190.2524 c2153.6484 -192.8682 2137.7939 -193.0278 2121.918 -193.0371 c2114.4883 -193.041 2107.2656 -192.4043 2099.9941 -190.856 c2098.0059 -190.4321 2094.1719 -190.9033 2092.6973 -189.9019 c2092.251 -189.5991 2091.7637 -189.3999 2091.2559 -189.2676 C2092.377 -186.1724 2095.793 -183.3652 2098.2178 -180.9023 cf*U2532.9297 -167.9307 m2534.9541 -169.8101 2537.1904 -171.3784 2539.9355 -171.9668 C2541.8984 -172.1948 2542.2412 -172.2554 2540.9619 -172.1479 C2541.6592 -172.3252 2542.3691 -172.4341 2543.0908 -172.4741 C2544.3428 -172.6304 2545.584 -172.4575 2546.8242 -172.2422 c2552.1758 -171.312 2556.4199 -166.5215 2555.083 -160.9272 c2553.1152 -152.6943 2542.3789 -153.5737 2535.917 -153.6162 c2529.8125 -153.6563 2528.1572 -160.562 2530.9473 -164.29 C2531.1074 -165.5444 2531.7168 -166.8047 2532.9297 -167.9307 cf*u1 D1409.7764 -115.9868 m1413.8203 -126.6309 1427.7544 -129.8892 1437.9512 -131.1235 c1453.0688 -132.9536 1468.6689 -130.3799 1483.0322 -125.5898 c1496.2803 -121.1714 1509.3838 -115.9624 1522.1353 -110.2217 C1522.6191 -113.7266 1523.0474 -117.248 1523.584 -120.7319 c1524.4336 -126.2495 1526.0986 -131.3916 1528.9902 -136.1914 c1532.3584 -141.7817 1537.3862 -144.8711 1543.2305 -147.4243 c1548.6489 -149.7915 1553.0342 -152.2549 1559.1563 -152.083 c1565.5571 -151.9028 1570.2661 -148.9263 1571.7251 -142.4775 c1574.3242 -130.9863 1566.2896 -119.6128 1559.4854 -111.2847 c1555.5249 -106.437 1550.5625 -102.9487 1545.1875 -99.8345 c1544.0854 -99.1958 1542.9102 -98.6704 1541.708 -98.208 C1547.3877 -95.4648 1552.6172 -90.9399 1556.4316 -86.0464 c1560.7393 -80.5205 1563.4512 -73.9082 1566.0605 -67.4585 c1568.1953 -62.1816 1570.5977 -56.6221 1570.5732 -50.8223 c1570.5459 -44.1792 1565.1392 -41.6968 1559.3301 -41.5127 c1552.4468 -41.2954 1546.3662 -45.5791 1541.2373 -49.6143 c1530.5552 -58.0195 1525.8071 -70.1382 1522.0854 -82.8413 c1521.9404 -83.3359 1521.7988 -83.8447 1521.6602 -84.3599 C1516.6304 -83.9224 1511.3638 -84.3965 1506.3872 -84.3965 c1494.8662 -84.3965 1483.3286 -84.0708 1471.8442 -85.0781 c1450.4263 -86.9565 1428.3452 -95.4136 1411.4482 -108.8501 c1409.3916 -110.4854 1408.8911 -112.5068 1409.3716 -114.3525 C1409.4336 -114.873 1409.5596 -115.4165 1409.7764 -115.9868 cf0 D1554.8564 -126.8667 m1556.6597 -129.5327 1557.9912 -132.1265 1558.6104 -135.2949 c1558.8047 -136.29 1559.0117 -137.2153 1559.0859 -138.2266 c1559.1167 -138.6484 1559.1089 -138.9668 1559.0864 -139.2158 C1556.8364 -139.4312 1554.3389 -138.4966 1552.4746 -137.5449 c1549.3965 -135.9736 1546.207 -134.6401 1543.2314 -132.8442 c1538.4629 -129.9663 1536.8115 -122.5659 1536.1523 -117.4556 c1535.8218 -114.894 1535.5483 -112.2773 1535.2402 -109.6572 C1537.3418 -110.0537 1539.4277 -111.4927 1541.0811 -112.5679 c1547.0176 -116.4287 1550.8984 -121.0132 1554.8564 -126.8667 cf1536.5518 -79.7842 m1538.4517 -73.7559 1541.3711 -67.3799 1545.7871 -62.8096 c1547.8647 -60.6587 1550.3672 -58.772 1552.8281 -57.0879 c1554.0186 -56.2729 1555.3027 -55.5703 1556.6538 -55.0635 c1556.7544 -55.0259 1556.8408 -55.0005 1556.9341 -54.9692 C1556.7227 -55.5215 1556.5239 -56.0161 1556.4268 -56.3228 c1555.2207 -60.1289 1553.6377 -63.8916 1552.0371 -67.5469 c1549.3169 -73.7588 1546.0386 -79.5083 1540.5269 -83.6353 c1538.5488 -85.1157 1536.4688 -86.2378 1534.4072 -87.3262 C1534.9917 -84.7842 1535.7646 -82.2822 1536.5518 -79.7842 cf1473.5698 -97.9429 m1483.8369 -97.0425 1494.2007 -97.4282 1504.501 -97.4282 c1509.4609 -97.4282 1514.4224 -97.4072 1519.3823 -97.4355 C1518.0352 -98.0103 1516.6836 -98.5112 1515.5352 -98.9927 c1512.1685 -100.4053 1508.5586 -101.4082 1505.2817 -103.0146 c1498.0674 -106.5527 1490.5825 -109.3228 1482.9834 -111.9102 c1468.6333 -116.7954 1453.0693 -120.4048 1437.8477 -118.0757 c1435.7349 -117.7524 1429.0488 -116.5479 1425.1411 -114.7544 C1439.1953 -105.1348 1456.9971 -99.3965 1473.5698 -97.9429 cf*U*u1 D213.2456 -636.3662 m224.8301 -641.9883 237.5386 -645.5776 250.3169 -647.1938 c271.0938 -649.8223 299.3281 -640.3779 297.7241 -614.9897 c297.0239 -603.9028 291.3862 -593.7998 281.7544 -588.1338 c273.2676 -583.1411 262.4697 -583.0166 252.5308 -583.1489 C252.2202 -580.1904 250.1465 -577.498 246.2935 -577.5923 c227.6274 -578.0488 195.6929 -587.665 198.7324 -611.5776 c199.8828 -620.624 204.6235 -632.1812 213.2456 -636.3662 cf0 D220.3447 -597.752 m226.1396 -594.2876 233.1982 -592.0552 240.1353 -591.1069 C240.6421 -593.8423 242.6914 -596.2354 246.2935 -596.2236 c254.4629 -596.1968 262.7026 -595.7544 270.6958 -597.7422 c278.8433 -599.7681 283.0352 -605.958 284.5889 -613.8555 c288.1519 -631.9678 264.5981 -635.3018 252.126 -634.3765 c243.3896 -633.728 234.5518 -630.7866 226.2813 -628.0273 c222.5215 -626.7734 218.2158 -625.186 216.001 -621.752 c214.2202 -618.9907 212.9106 -615.644 212.0381 -612.4883 c209.8813 -604.6934 214.168 -601.4438 220.3447 -597.752 cf*U*u1 D473.2266 -821.4854 m480.7129 -822.3496 489.4717 -819.0728 496.0464 -815.8652 c504.5479 -811.7188 508.2119 -804.7998 509.3101 -795.6689 c510.1816 -788.4204 507.7842 -781.0186 502.189 -776.2334 c496.2876 -771.1865 488.3589 -770.123 480.79 -769.917 C480.5352 -769.8877 480.2734 -769.8691 480 -769.8691 c479.7109 -769.8691 479.4214 -769.8774 479.1318 -769.8838 C478.481 -769.8755 477.8325 -769.8701 477.1909 -769.8691 c476.4106 -769.8682 475.7031 -769.9805 475.0679 -770.1836 C462.7358 -771.7383 451.0112 -779.0933 447.6348 -791.6499 c443.1826 -808.207 458.7139 -819.8105 473.2266 -821.4854 cf0 D460.5542 -793.6807 m462.3926 -786.8428 470.709 -783.6484 477.4502 -783 c477.894 -782.957 478.332 -782.9233 478.7598 -782.9028 C479.1543 -782.9609 479.5635 -783 480 -783 c480.3511 -783 480.6812 -782.9663 481.002 -782.918 C488.7183 -783.1592 496.5879 -784.6489 496.3999 -794.0674 c496.292 -799.4922 494.0127 -802.1768 489.4546 -804.6401 c484.9922 -807.0518 479.6729 -808.1621 474.6533 -808.4556 c466.542 -808.9297 458.2759 -802.1538 460.5542 -793.6807 cf*U*u1 D706.6406 -1855.0938 m705.0601 -1861.2295 703.2402 -1868.6279 699.1934 -1873.6768 c694.5269 -1879.499 689.0298 -1884.3467 684.5181 -1890.2959 c680.2705 -1895.8955 676.4678 -1901.3145 671.0664 -1905.8877 c665.2246 -1910.835 658.769 -1915.0439 652.0215 -1918.6318 c638.5522 -1925.7939 624.7915 -1931.3535 609.895 -1934.5488 c603.979 -1935.8184 596.6631 -1939.0801 590.686 -1936.4863 c584.3921 -1933.7549 579.3096 -1929.5117 574.7046 -1924.4287 c573.4219 -1923.0127 572.1675 -1921.6211 570.9141 -1920.25 C574.0049 -1916.3262 574.105 -1910.668 575.4912 -1905.9375 c577.6904 -1898.4307 579.8306 -1890.8916 582.1211 -1883.4121 c584.2549 -1876.4453 584.3032 -1868.9023 585.6279 -1861.7666 c587.0435 -1854.1455 586.9282 -1846.2412 586.8135 -1838.5254 c586.5845 -1823.0781 585.0859 -1808.0947 583.4082 -1792.751 c582.6455 -1785.7734 581.8838 -1778.7314 581.8389 -1771.71 c581.7866 -1763.5635 578.5693 -1755.6143 576.7783 -1747.751 c575.2495 -1741.0361 574.1753 -1733.8281 571.7427 -1727.3848 c569.2314 -1720.7334 566.6504 -1714.127 564.5869 -1707.3076 c562.6792 -1701.001 561.2866 -1694.5771 558.8975 -1688.4199 c556.4482 -1682.1064 553.2651 -1676.0693 550.6636 -1669.8271 c547.812 -1662.9824 545.5122 -1655.9941 542.3301 -1649.2598 c539.125 -1642.4766 536.4639 -1635.6426 533.6797 -1628.6826 c531.0767 -1622.1758 528.3975 -1615.7344 525.2383 -1609.4736 c521.8687 -1602.7949 517.4155 -1596.9199 514.2534 -1590.1064 c510.2373 -1581.4531 504.1133 -1573.6953 498.104 -1566.3506 c494.8154 -1562.3311 492.5625 -1557.3945 490.0762 -1552.8623 c487.7622 -1548.6426 484.0303 -1544.5996 480.9795 -1540.8809 c477.6631 -1536.8398 473.5059 -1533.1895 470.6768 -1528.79 c467.7905 -1524.3027 463.8003 -1520.5117 459.5518 -1517.3389 c450.9277 -1510.8984 443.8018 -1502.4922 433.8071 -1498.0303 c427.7275 -1495.3154 422.0977 -1500.792 424.9141 -1506.9229 c427.1914 -1511.8818 432.5527 -1515.5508 436.5742 -1519.042 c438.8613 -1521.0273 440.2822 -1523.3965 441.1533 -1526.2881 c442.1943 -1529.7441 445.4004 -1532.2266 446.3721 -1535.7568 c448.0586 -1541.8867 450.9678 -1548.0781 453.478 -1553.9199 c456.5576 -1561.0889 459.8105 -1568.1504 463.3887 -1575.084 c466.6753 -1581.4531 469.0352 -1588.4502 473.2993 -1594.2578 c477.3896 -1599.8291 480.0635 -1607.9004 481.7935 -1614.5068 c483.5815 -1621.335 484.1733 -1628.4531 485.2583 -1635.4102 c486.4731 -1643.2021 488.543 -1650.9609 490.3774 -1658.6289 c493.6787 -1672.4258 499.7783 -1685.3984 506.9736 -1697.5908 c510.6782 -1703.8691 512.9727 -1711.7686 514.8286 -1718.7715 c516.8604 -1726.4355 516.7856 -1734.5664 519.8911 -1741.9531 c525.689 -1755.7461 529.7256 -1770.6162 532.0625 -1785.3379 c533.2363 -1792.7334 533.8955 -1799.0244 532.5713 -1806.4736 c531.96 -1809.9141 531.7861 -1813.4092 531.3398 -1816.8711 c530.8184 -1820.9219 529.7402 -1824.7734 528.978 -1828.7734 c527.666 -1835.6621 527.748 -1842.584 526.2554 -1849.4521 c525.5747 -1852.5859 525.4858 -1856.8877 523.9385 -1859.7012 c523.3926 -1860.6943 522.7583 -1861.6318 522.1104 -1862.5625 C521.521 -1861.7012 521.0122 -1860.8174 520.6831 -1859.8994 c518.5132 -1853.8545 514.8276 -1848.7051 511.0815 -1843.5635 c507.1968 -1838.2324 503.6758 -1832.6543 499.4551 -1827.5713 c497.8237 -1825.6064 496.8022 -1823.0215 495.6655 -1820.7568 c494.3584 -1818.1533 492.2979 -1816.1182 490.312 -1814.0391 c485.9326 -1809.4551 484.228 -1803.5908 480.5415 -1798.5898 c470.2441 -1784.6191 461.2637 -1769.7363 450.4707 -1756.1152 c444.8828 -1749.0635 439.5708 -1742.2461 433.3472 -1735.7383 c430.2891 -1732.5391 427.269 -1729.3262 424.1343 -1726.1914 c421.3105 -1723.3682 419.6978 -1719.4121 416.9512 -1716.4346 c414.4312 -1713.7031 411.6597 -1711.21 408.7827 -1708.8438 c405.062 -1705.7832 402.2207 -1702.127 399.4453 -1698.209 c396.7383 -1694.3867 394.4961 -1690.2344 391.7061 -1686.4805 c389.4297 -1683.416 386.7847 -1680.5732 384.6006 -1677.4668 c382.7437 -1674.8252 382.2578 -1671.8213 380.875 -1668.958 c379.1563 -1665.3994 377.7241 -1661.7246 375.8862 -1658.2188 c374.1436 -1654.8945 371.8672 -1652.0801 369.0552 -1649.6289 c367.5703 -1648.334 363.167 -1645.125 363.0122 -1643.627 c362.6646 -1640.2598 360.2935 -1638.2539 357.666 -1637.623 C357.9443 -1636.4814 358.2119 -1635.3359 358.4487 -1634.1855 c361.3784 -1619.959 361.4487 -1604.248 360.0112 -1589.8271 c358.9404 -1579.084 358.6426 -1568.4688 356.3574 -1557.8584 c353.8896 -1546.4023 349.958 -1535.9404 345.3101 -1525.2441 c340.8857 -1515.0635 335.6382 -1505.4912 329.3179 -1496.3691 c323.9077 -1488.5605 318.9219 -1480.5488 312.6836 -1473.4131 C321.2593 -1470.1123 329.9165 -1466.9961 338.2793 -1463.1592 c343.5444 -1460.7432 349.1523 -1458.1641 352.7021 -1453.4844 c356.3931 -1448.6182 353.5474 -1439.1445 352.0625 -1434.0273 c348.0361 -1420.1475 341.4106 -1406.9336 334.7705 -1394.1387 c333.3452 -1391.3926 332.4761 -1388.8965 330.5371 -1386.4141 c328.6064 -1383.9434 324.3647 -1384.0518 321.6416 -1384.3975 c318.5015 -1384.7969 315.3838 -1384.7773 312.2461 -1385.3467 c308.6143 -1386.0049 305.249 -1387.7324 301.6587 -1388.5918 c294.9009 -1390.21 288.3037 -1392.3721 281.9326 -1395.1689 c278.8096 -1396.54 275.4932 -1397.833 272.6289 -1399.6973 c270.4932 -1401.0879 268.5923 -1402.9844 266.2974 -1404.1289 C266.3745 -1403.6875 266.4688 -1403.248 266.5591 -1402.8096 c267.1724 -1399.8242 267.8628 -1396.8623 268.7534 -1393.9453 c270.855 -1387.0615 272.3457 -1380.5332 272.9072 -1373.3115 c274.0313 -1358.8564 271.0371 -1343.2568 266.0371 -1329.75 c262.6504 -1320.6006 255.2319 -1313.5176 250.3218 -1305.1426 c247.957 -1301.1094 243.6855 -1297.7754 240.2471 -1294.6943 c236.186 -1291.0547 231.7656 -1288.6455 227.0493 -1286.042 c218.1558 -1281.1338 209.146 -1278.0439 199.0586 -1276.8164 c187.54 -1275.415 175.8735 -1275.9023 164.2925 -1275.9023 c153.7363 -1275.9023 143.3623 -1278.4668 133.0044 -1280.3584 c127.8232 -1281.3047 122.4873 -1282.5723 117.6479 -1284.6689 c113.1714 -1286.6084 108.8481 -1289.416 104.5356 -1291.7158 c95.4585 -1296.5586 89.1572 -1303.498 84.147 -1312.3262 c79.3237 -1320.8252 73.2808 -1330.377 72.4575 -1340.3271 c72.3672 -1341.4209 72.5156 -1342.3672 72.8359 -1343.1729 C70.3091 -1345.3887 67.8931 -1347.7666 65.5786 -1350.2754 c55.9722 -1360.6904 50.457 -1373.9082 45.4375 -1386.9697 c43.1182 -1393.0049 42.334 -1400.0645 41.165 -1406.416 c39.7964 -1413.8535 40.2773 -1421.5264 40.2773 -1429.0527 c40.2773 -1436.1064 39.8101 -1443.2422 40.1987 -1450.2813 c40.561 -1456.8369 43.0259 -1463.5791 45.6948 -1469.5332 c47.4854 -1473.5273 49.8755 -1477.2871 53.4331 -1479.7988 C51.1489 -1482.2178 49.4268 -1485.1084 49.127 -1488.3564 c48.4971 -1495.1865 50.772 -1501.8887 52.0762 -1508.5215 c53.3477 -1514.9922 55.0381 -1521.3174 57.7578 -1527.3369 c60.0991 -1532.5186 62.8979 -1537.9502 68.7485 -1539.5801 c74.728 -1541.2461 82.4536 -1539.5615 88.3398 -1538.2881 c94.1201 -1537.0381 100.0859 -1535.2109 105.6172 -1532.8145 C108.5693 -1538.0664 116.2212 -1539.3701 121.4775 -1541.2852 c125.2271 -1542.6514 128.9277 -1544.1475 132.6934 -1545.4668 c137.2295 -1547.0557 141.5332 -1547.5283 146.2163 -1548.2725 c150.481 -1548.9502 154.6313 -1550.2305 158.9258 -1550.7598 c163.1904 -1551.2861 167.5342 -1551.4707 171.8208 -1551.8252 c180.7085 -1552.5625 188.6323 -1551.2383 197.0479 -1548.6113 C197.0908 -1548.6934 197.1313 -1548.7764 197.1743 -1548.8574 c199.0337 -1552.3506 201.5151 -1555.3623 203.7007 -1558.6406 c205.6763 -1561.6045 206.7422 -1565.6084 208.2935 -1568.8398 c211.8398 -1576.2275 215.7178 -1583.3828 219.624 -1590.5908 c223.1953 -1597.1807 226.1504 -1603.9043 230.4248 -1610.0996 c234.8237 -1616.4756 239.7666 -1622.4287 243.7393 -1629.0967 c247.8662 -1636.0244 251.5103 -1643.0615 254.7607 -1650.4258 c256.249 -1653.7979 258.2847 -1657.1123 259.335 -1660.6387 c260.2456 -1663.6953 262.708 -1666.5176 263.3574 -1669.4883 c264.4795 -1674.6191 269.8184 -1675.1709 273.21 -1672.8574 C272.8467 -1674.7227 272.5186 -1676.5938 272.271 -1678.4795 c271.4624 -1684.6338 269.561 -1691.1494 269.561 -1697.3428 c269.561 -1704.6182 268.2856 -1711.0605 267.0098 -1718.2051 c264.3799 -1732.9316 264.4355 -1747.9512 262.4038 -1762.7451 c261.3682 -1770.2832 260.646 -1777.8643 259.7603 -1785.4219 c258.9229 -1792.5674 259.1196 -1799.7285 258.4941 -1806.8945 c257.8975 -1813.7305 258.1416 -1820.6025 257.4932 -1827.4561 c256.7251 -1835.5781 256.689 -1843.6221 256.689 -1851.7744 c256.689 -1870.1133 258.4424 -1887.7549 261.8838 -1905.7744 c263.4561 -1914.0088 265.1597 -1922.0781 268.0684 -1929.9609 c270.6133 -1936.8584 273.7539 -1945.9775 278.7051 -1951.5215 c288.2256 -1962.1816 303.1958 -1967.127 317.0894 -1967.0986 c325.3096 -1967.0811 331.1904 -1964.9834 337.5771 -1959.8877 c343.3398 -1955.291 348.7588 -1950.0137 346.6895 -1941.9795 c346.4307 -1940.9746 346.0107 -1940.1484 345.4795 -1939.4854 C345.9951 -1938.5771 346.2549 -1937.5488 346.1167 -1936.4668 c345.7314 -1933.4561 345.0039 -1931.1084 343.3755 -1928.5254 c341.6782 -1925.834 341.7402 -1921.624 340.7188 -1918.5879 c338.4019 -1911.707 336.3311 -1904.2803 335.6582 -1897.0449 c335.0557 -1890.5684 333.3774 -1884.25 333.2446 -1877.7373 c333.1748 -1874.3057 331.9453 -1870.8428 331.6826 -1867.3936 c331.3633 -1863.2012 330.9048 -1859.0029 330.5039 -1854.8086 c330.1831 -1851.4482 329.4575 -1848.1162 329.2222 -1844.7529 c329.0146 -1841.7871 329.2866 -1838.8066 329.0439 -1835.833 c328.7773 -1832.5693 327.7593 -1829.417 327.4556 -1826.1738 c327.0757 -1822.1191 327.3071 -1818.0039 327.5811 -1813.9521 c328.1919 -1804.9102 329.2114 -1795.8838 330.2925 -1786.8672 C331.0239 -1789.8301 331.7334 -1792.8057 332.7104 -1795.6523 c334.4653 -1800.7637 336.9707 -1805.6582 338.9004 -1810.7217 c341.0234 -1816.292 343.186 -1821.8125 346.2856 -1826.917 c351.6157 -1835.6924 358.5376 -1843.123 363.8418 -1851.8965 c365.1899 -1854.126 365.6401 -1856.7559 366.9634 -1859.0234 c368.2813 -1861.2822 370.311 -1863.0986 371.8423 -1865.2041 c375.3013 -1869.96 377.3408 -1876.3975 379.8613 -1881.6982 c384.2617 -1890.9512 390.9116 -1898.5088 395.9253 -1907.3281 c401.4688 -1917.0791 407.2412 -1926.6699 412.9971 -1936.3037 c418.3896 -1945.3291 425.8765 -1952.8184 431.2305 -1961.917 c433.8652 -1966.3945 434.9536 -1971.4102 437.9253 -1975.7432 c440.4761 -1979.4609 443.877 -1982.7266 445.1367 -1987.1563 C444.5464 -1989.5645 437.9702 -1991.4609 435.9565 -1992.5137 c430.5444 -1995.3398 424.4648 -1996.7734 418.4878 -1997.9131 c411.9219 -1999.166 404.498 -1998.8643 397.8096 -1999.1279 c390.4297 -1999.418 383.0967 -2000.0566 375.748 -2000.8047 c361.9277 -2002.2129 348.2207 -2003.4268 334.3125 -2003.0518 c327.3433 -2002.8643 320.3838 -2002.4746 313.4116 -2002.3818 c306.2017 -2002.2871 298.3472 -2002.4238 291.3389 -2000.5273 c285.0083 -1998.8135 278.1743 -1998.9307 271.6738 -1998.6934 c264.625 -1998.4375 257.7251 -1995.9365 250.7578 -1994.8252 c244.5391 -1993.833 238.5469 -1991.9561 232.3921 -1990.7744 c228.8086 -1990.0869 225.5293 -1989.6738 222.0488 -1988.5137 c218.7036 -1987.3994 215.2871 -1986.1992 211.8828 -1985.3047 c209.5171 -1984.6826 207.6743 -1983.1797 205.3838 -1982.4932 c201.9399 -1981.4609 198.585 -1980.2354 195.2471 -1978.9014 c189.4932 -1976.6025 183.8281 -1974.5234 178.7222 -1970.957 c173.5166 -1967.3213 168.4966 -1964.0566 162.8975 -1961.0098 c160.4111 -1959.6563 154.2974 -1956.9902 151.9814 -1954.0195 C151.9414 -1953.3604 151.8213 -1952.708 151.6162 -1952.0898 C151.7573 -1952.0029 151.9033 -1951.9141 152.0283 -1951.834 c154.8315 -1950.0293 158.7988 -1949.0869 161.9399 -1947.9785 c169.4316 -1945.335 176.9771 -1942.8408 184.3652 -1939.9189 c190.3525 -1937.5508 196.187 -1934.9551 202.2656 -1932.8467 c205.2905 -1931.7979 208.1025 -1930.2227 210.9937 -1928.8623 c214.4673 -1927.2285 217.5928 -1926.124 220.52 -1923.5654 c224.6187 -1919.9814 226.4624 -1912.5527 225.2485 -1907.3594 c223.7896 -1901.1201 219.2285 -1898.6035 214.1763 -1895.4561 c208.5952 -1891.9785 201.8154 -1891.5068 195.6274 -1889.8076 c192.208 -1888.8682 188.7192 -1888.2051 185.2983 -1887.2646 c181.8716 -1886.3232 178.7017 -1884.3662 175.4497 -1882.9541 c169.1909 -1880.2354 162.7251 -1880.8955 156.3081 -1879.0537 c149.272 -1877.0332 142.4312 -1874.124 135.4673 -1871.8418 c120.7661 -1867.0234 105.7612 -1864.0449 90.54 -1861.5156 c83.3672 -1860.3232 76.1377 -1859.1221 68.9297 -1858.1797 c61.2358 -1857.1738 53.4824 -1857.3574 45.7583 -1856.7695 c38.0146 -1856.1797 30.3657 -1854.7666 22.5684 -1854.4189 c14.918 -1854.0771 7.27393 -1854.8584 -0.372559 -1855.0879 C-0.372559 -1868.0742 L5.96094 -1867.9004 12.2808 -1867.4033 18.6191 -1867.3438 c26.5078 -1867.2686 34.4419 -1868.1875 42.2295 -1869.3418 c48.5415 -1870.2773 54.9253 -1869.8994 61.2578 -1870.5615 c68.6929 -1871.3389 76.0518 -1872.377 83.4639 -1873.4717 c97.4331 -1875.5342 111.3887 -1878.0547 124.9277 -1882.1494 c137.4092 -1885.9229 149.5791 -1891.875 162.6255 -1893.0879 c168.6724 -1893.6504 173.353 -1896.4121 178.8638 -1898.7275 c184.9399 -1901.2803 192.2256 -1902.7207 198.7002 -1903.8682 c203.5024 -1904.7188 208.6167 -1906.3975 212.4087 -1909.625 c213.4155 -1910.4814 211.9575 -1913.6523 211.3276 -1914.373 c209.6187 -1916.3281 205.2983 -1917.2305 202.9663 -1918.3271 c191.5313 -1923.7061 179.3862 -1927.959 167.5347 -1932.3613 c156.6206 -1936.4141 142.333 -1938.9902 135.291 -1949.2764 c132.3096 -1953.6309 135.6416 -1957.8096 139.6987 -1958.6191 C144.5732 -1968.3496 158.2568 -1972.8105 166.7715 -1978.1963 c172.4805 -1981.8066 177.0615 -1985.7393 183.5166 -1988.1563 c190.4136 -1990.7383 197.3213 -1993.4404 204.0962 -1996.3037 c217.1523 -2001.8232 231.5488 -2004.2686 245.3711 -2007.1064 c252.7773 -2008.6279 260.6323 -2010.8584 268.1431 -2011.5049 c271.7075 -2011.8125 275.3037 -2011.8076 278.877 -2011.957 c283.1704 -2012.1367 287.1338 -2013.2412 291.3467 -2013.7656 c306.8374 -2015.6943 322.5444 -2015.8223 338.1436 -2016.1445 c353.8228 -2016.4678 369.3599 -2014.3223 384.9399 -2012.915 c400.1904 -2011.5371 415.7061 -2012.5127 430.564 -2008.3818 c436.2856 -2006.791 441.5547 -2004.3125 446.9023 -2001.7666 c451.4063 -1999.6221 456.8765 -1995.8086 457.7109 -1990.4883 c457.8677 -1989.4902 457.8164 -1988.5625 457.6089 -1987.7148 C458.0264 -1986.5947 458.1138 -1985.2832 457.7109 -1983.8154 c456.5483 -1979.5771 454.3594 -1976.0752 451.7261 -1972.6074 c448.5532 -1968.4297 446.7769 -1964.5586 444.665 -1959.8154 c440.3232 -1950.0625 432.998 -1942.5029 426.9258 -1933.9316 c423.9316 -1929.7051 421.8789 -1925.0303 419.2314 -1920.6113 c416.3516 -1915.8047 412.6919 -1911.5293 410.0635 -1906.5713 c405.1724 -1897.3438 399.1338 -1888.8955 393.5 -1880.0898 c390.5498 -1875.4775 388.6099 -1869.873 386.2593 -1864.9297 c385.0195 -1862.3223 383.8506 -1859.7197 382.1479 -1857.3789 c380.7236 -1855.4199 378.3652 -1853.5684 377.5762 -1851.2324 c376.0396 -1846.6855 373.6816 -1842.5176 370.7266 -1838.751 c367.8999 -1835.1465 366.1367 -1831.5557 362.7168 -1828.0898 c354.7227 -1819.9893 351.8511 -1807.4238 347.4761 -1797.3096 c345.0137 -1791.6182 343.1626 -1785.9092 341.5864 -1779.9092 c340.2163 -1774.6943 338.1899 -1769.7412 338.0723 -1764.3037 c338.0024 -1761.0898 336.041 -1759.1123 333.6631 -1758.3643 C334.2173 -1753.7197 334.7148 -1749.0605 334.835 -1744.4199 c335.0166 -1737.375 337.5063 -1730.3125 338.4126 -1723.292 c340.3647 -1708.166 345.5479 -1693.5518 349.0801 -1678.7354 c350.8159 -1671.4561 351.8447 -1664.1543 353.0161 -1656.7832 c353.2305 -1655.4336 353.501 -1654.0947 353.791 -1652.7598 C354.9707 -1654.2822 356.3643 -1655.7021 357.9004 -1657.1055 c359.6973 -1658.7461 361.7148 -1660.1475 363.1064 -1662.1611 c365.1201 -1665.0762 366.5112 -1668.4473 367.9331 -1671.6738 c370.1865 -1676.7881 371.6597 -1681.7617 375.0352 -1686.3281 c379.1938 -1691.9561 383.2842 -1697.4404 387.1987 -1703.2852 c391.1104 -1709.124 395.3535 -1714.5518 400.79 -1719.0225 c403.2856 -1721.0752 405.3296 -1723.54 407.7588 -1725.627 c410.438 -1727.9287 411.3672 -1731.8105 413.8628 -1734.3047 c418.5625 -1739.0039 423.0474 -1743.8877 427.7402 -1748.585 c433.2329 -1754.083 437.5742 -1760.6338 442.3921 -1766.7139 c451.0825 -1777.6807 458.0688 -1789.8965 466.1953 -1801.2832 c467.918 -1803.6973 470.5605 -1805.8975 471.7246 -1808.6689 c472.8062 -1811.2451 473.9922 -1813.8096 475.4761 -1816.1797 c477.0337 -1818.667 479.1753 -1821.041 481.1196 -1823.2324 c483.3149 -1825.7051 484.6968 -1827.915 486.2139 -1830.8652 c488.8091 -1835.9111 493.0083 -1840.0723 496.1426 -1844.7646 c499.9458 -1850.459 504.3467 -1855.7539 507.4795 -1861.8711 c509.0356 -1864.9102 510.0332 -1867.7197 512.1025 -1870.5117 c513.8862 -1872.918 515.855 -1875.1807 517.6729 -1877.5605 c522.1899 -1883.4746 525.5112 -1890.2334 530.1182 -1896.0742 c536.4414 -1904.0908 543.4375 -1912.1074 551.0977 -1918.8721 c558.6904 -1925.5771 564.9678 -1933.2764 572.3569 -1940.1563 c579.4971 -1946.8027 588.7686 -1951.0107 598.6187 -1950.1348 c603.6274 -1949.6885 608.478 -1948.2363 613.3511 -1947.085 c619.4409 -1945.6445 625.2417 -1944.3662 631.1689 -1942.2324 c650.7266 -1935.1904 670.3159 -1925.1006 685.3242 -1910.4922 c688.9248 -1906.9873 691.7427 -1902.2744 694.7129 -1898.2402 c697.832 -1894.0049 701.6108 -1890.7178 705.0981 -1886.8223 c712.4082 -1878.6563 716.4629 -1869.085 719.1758 -1858.5488 c721.2681 -1850.4248 708.7295 -1846.9805 706.6406 -1855.0938 cf0 D55.7168 -1459.498 m53.7402 -1454.0117 52.9849 -1449.0996 53.147 -1443.2695 c53.4834 -1431.1777 51.9199 -1418.4053 54.3525 -1406.5156 c55.4492 -1401.1563 56.1709 -1395.5977 57.9727 -1390.4258 c60.0264 -1384.5322 63.0415 -1379.0977 65.4751 -1373.374 c69.8027 -1363.1963 78.9146 -1353.7959 88 -1347.6416 c98.2095 -1340.7246 110.7808 -1338.5293 122.9312 -1338.6006 c135.1572 -1338.6719 147.9146 -1340.4199 159.4272 -1344.4824 c164.2754 -1346.1924 168.5347 -1347.3525 172.2656 -1351.1279 c175.7651 -1354.6699 180.1265 -1359.1816 180.1216 -1364.458 c180.1162 -1370.0186 177.645 -1376.0293 175.8149 -1381.1992 c175.0088 -1383.4766 174.2856 -1385.8926 172.729 -1387.7822 c171.1333 -1389.7188 168.0083 -1388.6426 165.8442 -1388.5332 c164.5059 -1388.4648 163.3857 -1388.7432 162.4771 -1389.2549 C162.8145 -1386.9707 162.0127 -1384.542 159.4707 -1382.9854 c148.23 -1376.1025 134.0146 -1385.1016 124.915 -1391.7969 c113.3877 -1400.2783 103.98 -1409.5225 100.4766 -1423.7764 c99.7153 -1426.874 98.1704 -1429.79 97.1958 -1432.8271 c96.189 -1435.9648 96.1152 -1439.5693 95.9263 -1442.835 c95.7397 -1446.0557 95.2861 -1449.9111 96.0205 -1453.0762 c96.5503 -1455.3613 97.5273 -1458.7793 95.8833 -1460.875 c94.1899 -1463.0352 90.2417 -1463.168 87.7251 -1463.6191 c84.749 -1464.1523 81.6489 -1464.5195 78.895 -1465.8496 c74.2246 -1468.1045 69.3804 -1469.9434 64.7256 -1472.1953 C64.1934 -1471.2871 63.3496 -1470.4795 62.126 -1469.8721 c58.2656 -1467.9561 57.0776 -1463.2754 55.7168 -1459.498 cf192.9448 -1361.584 m194.5854 -1362.2969 196.23 -1362.9746 197.9053 -1363.4893 c198.2329 -1363.5898 198.5601 -1363.6904 198.8877 -1363.791 C199.6465 -1365.3564 201.2329 -1366.1289 202.0659 -1367.7422 c205.9067 -1375.1855 208.2827 -1382.4141 207.9663 -1390.9043 c207.728 -1397.2881 200.6641 -1400.2461 195.479 -1402.041 c192.0952 -1403.2129 188.9937 -1403.6104 185.417 -1403.6104 c183.5239 -1403.6104 181.4712 -1403.5654 179.6553 -1403.002 c177.4575 -1402.3213 177.6978 -1401.6328 177.9756 -1403.8828 c177.8193 -1402.6191 177.4321 -1401.4268 176.8247 -1400.4141 C178.5835 -1399.7051 180.2686 -1398.623 181.9214 -1396.9746 c186.6768 -1392.2324 188.5117 -1384.5557 190.4482 -1378.335 c192.0742 -1373.1133 193.5347 -1367.168 192.9448 -1361.584 Cf184.2998 -1538.7959 m181.063 -1539.6211 176.8691 -1538.998 173.5444 -1538.9121 c166.1143 -1538.7207 158.7412 -1537.6602 151.4819 -1536.0908 c148.0474 -1535.3477 144.4951 -1535.3008 141.0991 -1534.4443 c137.7817 -1533.6074 134.5522 -1532.4043 131.3696 -1531.1631 c128.145 -1529.9053 124.8872 -1528.7393 121.6401 -1527.543 c121.146 -1527.3613 120.6572 -1527.1641 120.166 -1526.9746 C122.8027 -1526.1875 125.4722 -1525.4463 128.1987 -1524.5488 c134.9702 -1522.3203 141.3721 -1519.1182 148.1421 -1516.9063 c154.4443 -1514.8477 161.2754 -1514.291 167.7188 -1512.9258 c169.7285 -1512.5 171.7949 -1512.2764 173.7764 -1511.8613 C173.8872 -1511.9941 173.9956 -1512.1289 174.1201 -1512.2598 c176.1831 -1514.4307 178.5918 -1516.7881 180.2739 -1519.2666 c182.2305 -1522.1484 183.8574 -1525.8008 186.1875 -1528.3496 c188.4424 -1530.8174 190.1191 -1533.6943 191.5845 -1536.709 C189.1709 -1537.4551 186.7407 -1538.1738 184.2998 -1538.7959 cf271.8706 -1657.1836 m270.8101 -1653.623 268.998 -1650.4238 267.4341 -1647.0684 c263.9956 -1639.6904 260.5889 -1632.582 256.6338 -1625.4619 c252.8408 -1618.6328 248.1665 -1612.4766 243.5522 -1606.1953 c238.418 -1599.2051 234.9214 -1591.6309 230.8491 -1584.0293 c226.978 -1576.8027 223.02 -1569.6895 219.5186 -1562.2783 c217.9331 -1558.9229 216.7437 -1555.2998 214.9258 -1552.0791 c213.0049 -1548.6777 210.3623 -1545.7031 208.3994 -1542.2959 c204.4854 -1535.502 202.4048 -1528.0068 197.5293 -1521.71 c192.6812 -1515.4482 188.8311 -1508.874 183.3125 -1503.0684 c183.0371 -1502.7793 182.7524 -1502.5342 182.4639 -1502.3125 C181.3179 -1497.9082 175.6685 -1494.7354 171.7065 -1499.0449 c170.1187 -1500.7725 162.2183 -1500.5928 159.8638 -1500.9297 c153.3237 -1501.8643 146.2373 -1503.6289 140.082 -1506.0225 c133.8726 -1508.4375 127.814 -1511.1104 121.4302 -1513.0664 c114.9473 -1515.0527 109.1021 -1516.6172 103.0024 -1519.7529 c96.9351 -1522.8721 89.8105 -1524.6875 83.1758 -1526.1221 c79.8916 -1526.832 76.7427 -1526.9082 73.4019 -1526.9082 c72.8906 -1526.9082 72.5254 -1526.9199 72.2515 -1526.9375 C71.5254 -1525.8652 70.9775 -1524.7021 70.3784 -1523.5537 c67.3696 -1517.792 65.853 -1511.416 64.6118 -1505.0664 c63.8081 -1500.957 59.939 -1492.0449 62.9941 -1488.6318 c66.5068 -1484.707 72.7539 -1482.5771 77.4678 -1480.6123 c80.5024 -1479.3467 83.4727 -1477.7559 86.6768 -1476.9873 c89.6719 -1476.2695 92.748 -1475.9248 95.7505 -1475.2246 c101.6377 -1473.8525 106.9526 -1469.8223 108.7612 -1463.8574 c110.5449 -1457.9736 108.7451 -1452.2793 108.8179 -1446.3135 c108.8589 -1442.9639 108.9292 -1439.5449 109.7314 -1436.2832 c110.4932 -1433.1855 112.0381 -1430.2695 113.0122 -1427.2324 c114.1069 -1423.8203 114.8652 -1420.3242 116.7378 -1417.2246 c118.3213 -1414.6035 120.6387 -1412.4609 122.8555 -1410.3867 c127.6099 -1405.9385 132.6807 -1401.8584 138.2539 -1398.4854 c141.2681 -1396.6611 146.7476 -1392.9766 150.9033 -1393.5322 C150.2036 -1396.5986 151.3994 -1400.1318 155.2666 -1401.3008 c156.3184 -1401.6191 156.0825 -1401.6123 156.707 -1402.2012 c157.457 -1402.9092 158.1182 -1403.7148 158.8345 -1404.457 c161.1138 -1406.8174 163.9258 -1409.1885 166.5859 -1411.1045 c167.3618 -1411.6631 168.2451 -1411.9502 169.1528 -1412.0273 C174.3652 -1416.5547 183.3086 -1416.9609 190.3037 -1416.4316 c200.8218 -1415.6367 212.3672 -1410.1543 218.1797 -1401.1768 c224.7598 -1391.0127 219.9736 -1375.2031 215.4448 -1365.2168 c214.269 -1362.625 212.8452 -1359.7109 210.9673 -1357.5527 c210.6865 -1357.2305 210.4058 -1356.9082 210.125 -1356.585 C208.54 -1355.3848 208.3662 -1355.2363 209.6035 -1356.1387 C209.0918 -1355.0264 207.6597 -1353.75 206.6685 -1353.0986 c201.6631 -1349.8135 194.9321 -1348.0068 189.2939 -1346.127 c187.7681 -1345.6182 186.4116 -1345.6699 185.2681 -1346.0986 C184.0332 -1344.6484 182.7412 -1343.2617 181.458 -1341.9355 c172.3711 -1332.5439 157.6567 -1329.7754 145.2915 -1327.8184 c129.9902 -1325.3984 114.8901 -1324.5557 99.7593 -1328.4385 c95.6055 -1329.5049 91.6865 -1331.0049 87.9741 -1332.8584 C88.0298 -1332.7061 88.0913 -1332.5508 88.1416 -1332.4014 c89.1406 -1329.4443 91.1382 -1326.543 92.6279 -1323.8037 c96.2417 -1317.1592 99.4663 -1310.9434 105.6621 -1306.3623 c110.521 -1302.7695 116.2285 -1300.333 121.4531 -1297.3203 c127.6885 -1293.7256 135.8418 -1293.0566 142.8213 -1291.6875 c149.9346 -1290.293 157.0356 -1288.9023 164.2925 -1288.9023 c172.3726 -1288.9023 180.4683 -1288.7568 188.5454 -1288.959 c195.3496 -1289.1299 202.3662 -1289.8799 208.8682 -1291.9521 c214.9673 -1293.8955 222.3267 -1297.2637 227.4541 -1301.0752 c232.584 -1304.8887 237.1587 -1309.248 240.8677 -1314.416 c242.793 -1317.0986 244.3857 -1320.0049 246.3135 -1322.6904 c248.4951 -1325.7305 251.0264 -1328.4043 252.8804 -1331.6768 c256.0977 -1337.3555 257.7422 -1345.2607 258.4971 -1351.666 c259.4126 -1359.4375 260.6772 -1367.0244 259.6401 -1374.8525 c259.252 -1377.7832 259.1357 -1380.7568 258.5303 -1383.6523 c257.8135 -1387.0801 256.1797 -1390.4365 255.25 -1393.833 c253.8467 -1398.957 251.9937 -1405.5879 254.0024 -1410.7393 c256.353 -1416.7676 262.625 -1418.2539 268.46 -1417.2139 c271.1821 -1416.7295 273.832 -1414.8477 276.0234 -1413.2725 c278.9839 -1411.1445 281.7783 -1409.4717 285.0991 -1407.9121 c293.6152 -1403.9121 302.752 -1402.46 311.4453 -1399.127 c314.9346 -1397.7891 318.3623 -1397.7178 321.9609 -1397.3398 C322.0039 -1397.416 322.0361 -1397.4805 322.0869 -1397.5654 C322.499 -1398.6445 322.9854 -1399.6895 323.5454 -1400.7002 C324.563 -1402.7031 325.6221 -1404.6846 326.626 -1406.6943 c330.8311 -1415.1104 335.0137 -1423.7979 337.9336 -1432.7607 c339.1758 -1436.5742 341 -1440.916 341 -1444.9756 C341 -1446.9873 L339.4023 -1447.9658 337.7354 -1448.8379 336.0874 -1449.7285 c319.7505 -1458.5703 301.375 -1462.7939 284.9663 -1471.4932 c278.5405 -1474.8994 269.291 -1479.1826 265.4956 -1485.6865 c261.4761 -1492.5742 264.5386 -1503.7295 268.0303 -1510.1396 c268.7236 -1511.4121 269.6348 -1512.2598 270.6431 -1512.7686 C271.6401 -1518.0332 274.4326 -1522.6758 275.8232 -1527.8965 c277.7065 -1534.9688 280.0195 -1542.8428 280.0195 -1550.2324 c280.0195 -1557.085 280.6812 -1563.7725 281.8604 -1570.5352 c283.0679 -1577.457 282.5742 -1584.8457 283.1118 -1591.8613 c283.645 -1598.8252 284.2368 -1606.0078 284.2617 -1612.9922 c284.2744 -1616.4668 283.3008 -1620.0654 282.8501 -1623.5137 c282.292 -1627.7852 281.9214 -1632.04 281.0557 -1636.2676 c279.6196 -1643.2822 277.1509 -1649.957 276.2305 -1657.1025 c275.9443 -1659.3242 275.541 -1661.5273 275.1006 -1663.7266 C274.0898 -1661.5166 272.582 -1659.5713 271.8706 -1657.1836 cf347.1704 -1621.543 m346.6113 -1629.3926 344.4785 -1636.9102 342.4717 -1644.4785 c340.5742 -1651.6357 339.8813 -1658.916 338.5112 -1666.168 c337.0093 -1674.1191 334.9336 -1681.957 332.855 -1689.7725 c330.9526 -1696.9248 328.811 -1704.0645 327.187 -1711.2813 c325.5571 -1718.5254 325.0952 -1725.9756 323.4648 -1733.2393 c321.9878 -1739.8223 321.6704 -1746.332 321.0493 -1753.0391 c320.2622 -1761.543 319.3174 -1770.0303 318.3447 -1778.5146 c316.6113 -1793.6406 313.8491 -1809.207 314.3501 -1824.4648 c314.4951 -1828.875 315.8184 -1833.0684 316.1753 -1837.4414 c316.5498 -1842.0303 316.5967 -1846.5928 317.0264 -1851.1885 c317.9604 -1861.1846 319.7852 -1871.2246 320.3828 -1881.2197 c320.6367 -1885.4668 321.7788 -1889.5557 322.3311 -1893.752 c322.9868 -1898.7295 323.3022 -1903.5908 324.5034 -1908.4873 c325.7588 -1913.6055 327.0571 -1918.6992 328.7393 -1923.6973 c329.5093 -1925.9834 329.6816 -1928.4229 330.3447 -1930.7529 c330.8252 -1932.4404 332.9194 -1934.9258 333.1167 -1936.4668 c333.3174 -1938.0352 333.8623 -1939.4961 334.7471 -1940.6348 C333.9746 -1941.9287 333.6689 -1943.5547 334.1533 -1945.4346 c334.3433 -1946.1719 330.5161 -1949.0479 329.6338 -1949.7305 c327.1665 -1951.6377 325.0562 -1953.4688 321.8472 -1953.8896 c315.9819 -1954.6582 307.9111 -1954.668 302.6724 -1951.7715 c297.751 -1949.0508 291.0127 -1947.3604 288.0464 -1942.1084 c284.354 -1935.5723 281.2656 -1928.7744 278.9033 -1921.6484 c274.0449 -1906.9912 271.7725 -1890.6035 270.3257 -1875.2773 c268.8472 -1859.6133 269.0122 -1843.1113 270.4932 -1827.4561 c271.8159 -1813.4766 271.1045 -1799.333 272.7603 -1785.4219 c273.6641 -1777.8311 274.376 -1770.2158 275.4316 -1762.6445 c276.5205 -1754.834 276.4502 -1746.9639 277.5015 -1739.1797 c278.4482 -1732.1689 278.8628 -1725.1748 280.1797 -1718.21 c280.8198 -1714.8271 281.5825 -1711.4668 282.3291 -1708.1055 c283.0801 -1704.7227 282.561 -1700.7939 282.561 -1697.3428 c282.561 -1691.1914 284.6357 -1684.6387 285.271 -1678.4795 c286.0151 -1671.2715 288.1343 -1664.1768 289.29 -1657.0234 c290.2368 -1651.1621 292.1167 -1645.4629 293.5918 -1639.7227 c295.2563 -1633.2441 295.2959 -1626.3867 296.4395 -1619.8115 c298.6084 -1607.334 295.6782 -1594.2656 295.4331 -1581.6797 c295.314 -1575.5576 294.5884 -1569.7646 293.9106 -1563.6992 c293.2271 -1557.582 293.6455 -1551.1504 292.416 -1545.1563 c291.1045 -1538.7617 290.8916 -1532.2734 288.7646 -1526.0498 c287.8545 -1523.3848 287.3208 -1520.6455 286.2876 -1518.0049 c285.4175 -1515.7803 283.6021 -1513.3154 283.3652 -1510.8828 c283.1221 -1508.3848 281.7612 -1506.6387 280.0063 -1505.6436 C279.8813 -1504.9697 279.6392 -1504.2783 279.2583 -1503.5791 c277.7437 -1500.7988 277.1499 -1497.9326 276.959 -1494.791 c276.7656 -1491.6035 276.4067 -1492.1055 278.5371 -1490.75 c284.8491 -1486.7344 290.9883 -1482.6982 297.8193 -1479.5664 c298.5034 -1479.2529 299.1973 -1478.9619 299.8853 -1478.6572 C300.0498 -1478.8672 300.228 -1479.0742 300.4268 -1479.2773 c305.3208 -1484.2793 309.3574 -1489.7529 313.0869 -1495.6602 c317.2212 -1502.209 322.0063 -1508.2832 325.8789 -1515.0088 c333.2627 -1527.832 338.5205 -1541.5527 342.4507 -1555.7451 c344.4473 -1562.9551 345.9536 -1570.4434 346.0015 -1577.9336 c346.0498 -1585.5137 347.4502 -1592.9785 347.5762 -1600.5723 c347.6914 -1607.5586 347.6665 -1614.5732 347.1704 -1621.543 cf567.0728 -1888.6621 m565.6753 -1893.2588 564.3984 -1897.9033 562.9556 -1902.4814 c562.2749 -1904.6406 561.7056 -1906.834 561.0244 -1908.9951 c560.9009 -1909.3867 560.8628 -1909.7852 560.8462 -1910.1748 C560.6592 -1910.0107 560.4795 -1909.8438 560.29 -1909.6797 c554.5293 -1904.7021 549.8281 -1898.6973 544.5356 -1893.2539 c539.8633 -1888.4492 536.3535 -1882.4004 532.7476 -1876.8037 c532.0063 -1875.6533 531.2563 -1874.5195 530.4941 -1873.3955 C531.9053 -1870.9199 533.6338 -1868.668 535.1636 -1866.2627 c537.1147 -1863.1963 537.2583 -1859.5605 538.1621 -1856.1348 c540.1055 -1848.7734 540.1001 -1841.3906 541.2134 -1833.9531 c542.2422 -1827.083 544.5571 -1820.3828 544.8301 -1813.377 c545.1294 -1805.6943 547.3232 -1798.5752 546.1318 -1790.7998 c545.0283 -1783.5938 544.0952 -1776.2979 542.3584 -1769.2119 c540.4751 -1761.5283 537.8149 -1753.9678 535.3755 -1746.4463 c533.1685 -1739.6426 530.5391 -1733.4561 529.3423 -1726.3418 c527.9697 -1718.1846 526.2471 -1710.5801 523.252 -1702.8359 c518.1318 -1689.5947 509.7666 -1677.7441 505.3965 -1664.2236 c500.7446 -1649.8301 498.2705 -1634.6846 496.0264 -1619.7754 c494.9653 -1612.7285 493.2236 -1605.9023 490.1431 -1599.4551 c488.7231 -1596.4844 487.5884 -1593.3906 486.1318 -1590.4336 c484.3535 -1586.8232 481.8228 -1583.6621 480.0557 -1580.0088 c476.8652 -1573.4102 473.6304 -1566.835 470.4282 -1560.2393 c467.2012 -1553.5928 465.0796 -1546.4023 461.8838 -1539.7832 c461.3892 -1538.7588 460.9604 -1537.709 460.5596 -1536.6514 C461.9307 -1538.458 463.2505 -1540.3174 464.7554 -1542.0283 c467.0249 -1544.6074 469.6631 -1547.0518 471.54 -1549.9434 c473.165 -1552.4473 475.2739 -1554.6738 477.1743 -1556.9668 c479.5723 -1559.8594 481.1621 -1563.5723 482.939 -1566.8594 c486.127 -1572.7559 491.2222 -1577.1074 494.7065 -1582.7168 c498.1895 -1588.3242 501.6978 -1593.8008 504.4829 -1599.8018 c507.3691 -1606.0205 511.6816 -1611.4141 514.7769 -1617.5488 c518.2285 -1624.3896 521.2856 -1631.6387 523.7505 -1638.8916 c525.9409 -1645.3369 529 -1651.3652 531.9004 -1657.5039 c535.2158 -1664.5205 537.251 -1672.043 540.7041 -1678.9727 c546.8018 -1691.209 549.8647 -1704.2871 554.1992 -1717.167 c556.2578 -1723.2842 559.2124 -1729.3555 560.6221 -1735.6445 c562.3354 -1743.2842 563.9893 -1750.9863 566.1108 -1758.5215 c567.1587 -1762.2422 568.0649 -1765.9863 568.7729 -1769.7852 c569.3823 -1773.0576 568.8926 -1776.7734 569.1768 -1780.1152 c569.8516 -1788.0469 570.751 -1795.9717 571.7271 -1803.874 c572.8604 -1813.0488 573.5928 -1822.127 573.6899 -1831.3721 c573.79 -1840.9287 574.5029 -1850.7158 572.748 -1860.167 c570.9497 -1869.8506 569.9565 -1879.1777 567.0728 -1888.6621 cf*U*u1 D595.9897 -2142.0313 m595.2695 -2130.8379 595.2285 -2119.834 592.1074 -2108.9473 c588.8862 -2097.7129 582.8359 -2087.4316 574.8184 -2078.9668 c566.0142 -2069.6719 553.9521 -2063.3916 542.2266 -2058.6211 c535.5073 -2055.8887 528.0869 -2056.5 521 -2056.5 c513.1147 -2056.5 505.4204 -2055.7646 498.0435 -2059.0078 c486.9136 -2063.9004 478.876 -2074.1777 472.4126 -2084.126 c471.3364 -2085.7822 470.3174 -2087.4785 469.3447 -2089.2021 C462.7817 -2089.8262 456.2197 -2090.4609 449.6343 -2090.7881 c433.6191 -2091.584 417.8867 -2093.9814 401.8115 -2094.1309 c385.6577 -2094.2822 369.8413 -2093.9619 353.7534 -2092.627 c339.7651 -2091.4658 325.8672 -2090.418 312.0381 -2087.6523 c304.8369 -2086.2129 297.769 -2084.123 290.4824 -2083.2217 c283.2104 -2082.3223 275.9238 -2081.1631 268.9395 -2078.8975 c261.2646 -2076.4082 253.2739 -2074.8525 245.7466 -2071.9189 c238.1021 -2068.9395 229.8379 -2068.9697 222.2075 -2065.9092 c214.3281 -2062.75 206.4214 -2061.1152 198.1592 -2059.3066 c194.5854 -2058.5244 191.167 -2056.7148 188.0664 -2054.8125 c184.314 -2052.5117 179.9956 -2050.8398 175.9629 -2049.0156 c168.8374 -2045.793 160.7793 -2045.8301 154.3491 -2041.2813 c151.7427 -2039.4385 149.6743 -2036.9355 146.9253 -2035.1758 c143.5186 -2032.9961 139.4087 -2032.707 135.9102 -2030.749 c132.7578 -2028.9854 129.627 -2026.0938 126.7573 -2023.875 c123.189 -2021.1162 119.3848 -2018.7656 115.5088 -2016.4688 c112.5698 -2014.7275 109.6865 -2012.8955 106.6489 -2011.3311 c104.4814 -2010.2139 100.6343 -2008.8545 99.7061 -2006.3408 c97.2661 -1999.7305 87.8613 -2001.1504 86.8325 -2006.54 C85.6123 -2007.001 84.5288 -2007.9795 83.8027 -2009.6143 c80.8623 -2016.2344 79.8589 -2023.7246 78.1826 -2030.751 c77.27 -2034.5762 77.5015 -2038.6641 76.2075 -2042.3818 c74.793 -2046.4453 73.1304 -2050.3408 72.1719 -2054.5527 c71.5586 -2057.248 70.2856 -2071.2363 67.0557 -2071.21 c60.3931 -2071.1563 53.4077 -2062.5137 49.562 -2058.0625 c44.3384 -2052.0156 41.6147 -2044.7236 37.1338 -2038.1592 c32.7339 -2031.7148 29.9502 -2024.3164 25.5391 -2017.8066 c20.9028 -2010.9658 16.4063 -2004.0928 12.165 -1997.0098 c10.2441 -1993.8008 8.44922 -1990.5605 7.1875 -1987.0322 c6.47412 -1985.0361 4.96777 -1983.6689 3.93018 -1981.8584 c3.27539 -1980.7158 1.81787 -1979.3652 1.55615 -1978.1826 c1.22363 -1976.6797 0.527832 -1975.5723 -0.372559 -1974.8125 C-0.372559 -2001.2744 L-0.202637 -2001.5918 -0.035156 -2001.9121 0.143066 -2002.2217 c4.78564 -2010.29 9.99463 -2017.9951 15.2188 -2025.7031 c20.1147 -2032.9277 23.6641 -2040.9434 28.292 -2048.3555 c30.7046 -2052.2197 32.4517 -2056.4785 34.728 -2060.4238 c37.0464 -2064.4404 41.3818 -2069.3613 44.9043 -2072.334 c51.7188 -2078.085 57.9639 -2083.0137 67.0557 -2084.21 c76.3052 -2085.4277 81.0083 -2075.4355 82.667 -2068.1055 c83.5474 -2064.2158 84.1919 -2060.2744 85.0767 -2056.3867 c86.1494 -2051.6719 88.7935 -2047.3887 89.5161 -2042.6133 c90.2021 -2038.082 90.7529 -2033.7705 92.063 -2029.3584 c93.063 -2025.9902 93.2002 -2022.3457 94.0938 -2018.9326 C95.2632 -2019.8193 96.5259 -2020.6387 97.8916 -2021.4063 c103.5581 -2024.5908 109.2217 -2027.7354 114.7246 -2031.2129 c120.27 -2034.7188 125.0166 -2039.5498 130.728 -2042.7461 c133.3677 -2044.2227 136.3696 -2044.4971 139.0596 -2045.6953 c142.0186 -2047.0137 143.9697 -2049.5605 146.4731 -2051.4922 c151.7495 -2055.5635 156.9717 -2057.082 163.4077 -2058.3086 c170.0088 -2059.5674 177.1538 -2063.3691 182.8145 -2066.8408 c188.5347 -2070.3496 194.9351 -2071.9395 201.4258 -2073.2227 c208.4692 -2074.6152 214.8486 -2077.0068 221.5322 -2079.5264 c227.7041 -2081.8525 234.4961 -2081.79 240.7759 -2083.8643 c247.8945 -2086.2158 255.0771 -2088.2217 262.2656 -2090.376 c268.8184 -2092.3398 275.1919 -2094.0547 281.9761 -2095.0879 c289.8179 -2096.2832 297.3623 -2097.9434 305.1343 -2099.498 c312.166 -2100.9053 319.2598 -2102.3418 326.3447 -2103.3428 c329.6899 -2103.8154 333.0259 -2103.8633 336.3989 -2103.8682 c339.8667 -2103.873 343.3604 -2105.2578 346.8579 -2105.4766 c362.5918 -2106.4609 378.208 -2107.3906 394.0142 -2107.2207 c403.6748 -2107.1172 413.3213 -2107.2451 422.9468 -2106.3047 c432.5015 -2105.3711 441.9287 -2104.1709 451.5205 -2103.6943 c455.3691 -2103.5029 459.189 -2103.1025 463.0059 -2102.6904 C460.3564 -2109.5791 458.4175 -2116.7461 457.2031 -2123.9629 c455.3315 -2135.085 454.6025 -2148.7646 457.8301 -2159.9277 C471.4727 -2159.9277 L471.415 -2159.7129 471.3491 -2159.4941 471.2676 -2159.2715 c467.603 -2149.2832 468.2671 -2136.1631 470.0171 -2125.7646 c471.4414 -2117.2969 474.0972 -2109.168 477.7393 -2101.4766 C478.2905 -2101.459 478.8403 -2101.4307 479.3926 -2101.4238 c483.834 -2101.3721 488.2139 -2100.7334 492.6406 -2100.5859 c496.5493 -2100.4561 499.0044 -2100.1494 501.6543 -2103.1709 c503.8857 -2105.7168 506.7651 -2107.0049 509.354 -2109.0508 c512.3882 -2111.4473 515.4834 -2113.7725 518.5532 -2116.1357 c521.6499 -2118.5186 523.6426 -2121.5078 526.332 -2124.3223 c528.9229 -2127.0332 532.1128 -2128.8115 534.5381 -2131.7305 c540.0781 -2138.3994 545.0884 -2145.3574 551.9951 -2150.6846 c555.4741 -2153.3672 558.792 -2156.1533 562.1563 -2158.9688 c562.5493 -2159.2979 562.9595 -2159.6074 563.3613 -2159.9277 C595.374 -2159.9277 L596.5835 -2153.9961 596.3438 -2147.5332 595.9897 -2142.0313 cf0 D582.6436 -2157.0127 m582.5054 -2157.6934 582.3047 -2158.3662 582.061 -2159.0293 C581.8418 -2158.1094 581.4189 -2157.1943 580.7378 -2156.3281 c578.9097 -2154.0039 576.2617 -2153.5459 574.0229 -2151.8633 c571.373 -2149.8721 569.0024 -2147.5996 566.4409 -2145.5117 c560.5811 -2140.7344 555.2788 -2136.5977 550.4497 -2130.7061 c546.4448 -2125.8203 542.8281 -2120.7979 537.7358 -2116.9951 c532.5811 -2113.1455 529.6182 -2107.1865 523.9116 -2103.8232 c521.5649 -2102.4395 519.5132 -2100.6221 517.3813 -2098.9375 c515.187 -2097.2041 512.7686 -2096.0146 510.8467 -2093.9785 c505.9951 -2088.8398 501.0977 -2087.4414 494.0273 -2087.542 c491.1699 -2087.582 488.3188 -2087.7168 485.4702 -2087.8848 C490.6885 -2080.0684 499.1064 -2069.5 509 -2069.5 c516.8843 -2069.5 524.8062 -2069.2803 532.6851 -2069.5596 c539.0518 -2069.7852 545.5664 -2074.4785 551.04 -2077.291 c570.4224 -2087.2539 581.1016 -2107.418 582.3887 -2128.6875 c582.9385 -2137.7695 584.4634 -2148.0566 582.6436 -2157.0127 cf*U670.0576 -2152.0068 m668.1958 -2154.2031 666.0537 -2156.3633 663.8643 -2158.2383 c663.1279 -2158.8691 662.2832 -2159.4102 661.4302 -2159.9277 C680.2593 -2159.9277 L680.8667 -2159.1826 681.4629 -2158.4307 682.0396 -2157.667 c690 -2147.124 691.2515 -2132.7529 691.2515 -2120.0547 c691.2515 -2105.9639 691.6748 -2090.9229 684.083 -2078.5361 c682.6948 -2076.2715 682.4126 -2073.0098 681.8428 -2070.4238 c681.186 -2067.4434 678.6304 -2065.0391 678.3794 -2061.9697 c678.1572 -2059.249 679.3955 -2057.8213 681.1104 -2055.8271 c683.5796 -2052.9551 685.8989 -2050.0176 688.5527 -2047.3037 c693.2646 -2042.4854 698.3213 -2038.082 702.457 -2032.7246 c707.0469 -2026.7803 711.938 -2020.9805 716.8862 -2015.3252 c721.9824 -2009.501 727.5508 -2003.8584 732.1982 -1997.6709 c736.4517 -1992.0098 741.3975 -1987.7588 746.4673 -1982.8965 c751.5728 -1978.001 756.2964 -1973.083 760.6387 -1967.4736 c765.1846 -1961.6006 770.8179 -1956.584 775.7358 -1951.0234 c780.2012 -1945.9746 783.8516 -1940.3281 787.5005 -1934.6816 c791.3135 -1928.7822 795.2686 -1922.5605 798.4468 -1916.2939 c800.124 -1912.9863 801.293 -1909.3926 802.6479 -1905.9473 c804.1553 -1902.1143 806.4263 -1898.7266 808.5557 -1895.2285 c813.1821 -1887.626 814.751 -1878.5771 818.3135 -1870.4824 c822.311 -1861.4004 825.6699 -1852.4473 828.3481 -1842.8555 c829.7046 -1837.9961 830.9253 -1833.0996 832.1523 -1828.207 c833.2207 -1823.9463 833.8291 -1819.749 835.9795 -1815.8535 c840.0337 -1808.5098 828.8062 -1801.9531 824.7539 -1809.293 c821.439 -1815.2969 820.3496 -1821.8516 818.6929 -1828.4268 c816.6973 -1836.3447 814.564 -1844.2217 812.0093 -1851.9785 c809.7427 -1858.8604 806.3354 -1865.2119 803.7852 -1871.9873 c801.2827 -1878.6348 799.5762 -1885.1025 795.7832 -1891.1758 c792.4224 -1896.5586 790.2075 -1902.3057 787.8965 -1908.1904 c785.3354 -1914.7109 780.6709 -1920.583 777.187 -1926.6396 c769.9141 -1939.2842 759.1333 -1948.3506 750.3301 -1959.7236 c741.813 -1970.7266 730.4092 -1978.6641 722.0078 -1989.7334 c712.7637 -2001.9121 701.5024 -2012.5391 692.2969 -2024.7842 c688.2539 -2030.1631 682.8608 -2034.5313 678.1758 -2039.3223 c673.9531 -2043.6396 668.5649 -2049.1875 666.3779 -2054.9004 c664.0586 -2060.9609 665.8467 -2067.0371 668.6875 -2072.5508 c670.0088 -2075.1152 670.1938 -2078.1719 670.9546 -2080.918 c671.8945 -2084.3086 674.4932 -2086.8633 675.5298 -2090.1699 c677.7949 -2097.4004 678.2183 -2104.8965 678.2505 -2112.4131 c678.2827 -2119.9209 678.4941 -2127.6777 677.4248 -2135.1328 c676.605 -2140.8477 673.7939 -2147.5996 670.0576 -2152.0068 cf937.0366 -2004.6836 m938.2197 -2014.875 942.9395 -2023.6123 948.5469 -2031.9893 c950.8774 -2035.4717 952.9116 -2039.2695 954.7754 -2043.0215 c956.8291 -2047.1543 957.3975 -2052.1211 959.2261 -2056.4053 c960.9492 -2060.4414 960.7041 -2064.9336 962.1167 -2069.0908 c963.5781 -2073.3926 965.4766 -2077.5889 967.0435 -2081.8496 c973.3374 -2098.9678 982.7139 -2114.9287 983.1294 -2133.6016 c983.3252 -2142.3887 984.2339 -2151.1416 983.8364 -2159.9277 C996.7549 -2159.9277 L996.9785 -2152.3906 996.1626 -2144.9502 996.1582 -2137.3271 c996.1553 -2132.543 996.0552 -2127.7637 995.3618 -2123.0225 c994.6274 -2118.001 992.5278 -2113.4258 991.6064 -2108.541 c990.8467 -2104.5137 989.1055 -2100.6377 987.1968 -2097.0391 c984.8818 -2092.6738 983.6123 -2087.8789 981.54 -2083.3896 c979.9263 -2079.8936 979.1401 -2076.0938 977.665 -2072.5762 c975.7563 -2068.0264 974.0234 -2064.123 973.3105 -2059.2061 c972.6875 -2054.9111 970.9443 -2050.9609 969.7656 -2046.8037 c968.4922 -2042.3115 966.7852 -2037.7979 964.5591 -2033.6797 c959.9038 -2025.0684 953.9287 -2017.6143 950.938 -2008.1787 c949.4355 -2003.4395 949.4932 -1998.4092 949.4976 -1993.4824 C953.168 -1995.6836 956.853 -1997.8613 960.4976 -2000.1064 c968.146 -2004.8174 975.1738 -2011.9688 980.2061 -2019.3516 c985.8599 -2027.6445 990.3516 -2037.1484 995.1685 -2045.958 c1000.4131 -2055.5479 1003.4805 -2066.2441 1007.127 -2076.5127 c1010.6929 -2086.5537 1017.2827 -2095.2266 1022.0483 -2104.7354 c1024.4453 -2109.5176 1026.7188 -2114.3613 1029.0986 -2119.1523 c1031.7949 -2124.5791 1034.708 -2129.1895 1035.6846 -2135.2988 c1036.998 -2143.5195 1038.6211 -2151.6885 1039.9077 -2159.9277 C1052.917 -2159.9277 L1051.2588 -2149.3789 1049.9268 -2138.8389 1047.5562 -2128.4072 c1046.2817 -2122.7988 1043.1411 -2117.5332 1040.3242 -2112.5918 c1037.3979 -2107.458 1035.1274 -2101.8721 1032.479 -2096.5879 c1029.812 -2091.2676 1026.9014 -2086.0879 1023.6431 -2081.1064 c1020.2954 -2075.9883 1018.6797 -2070.1396 1016.6797 -2064.4102 c1013.0664 -2054.0566 1009.1182 -2044.2129 1003.7593 -2034.6357 c998.4385 -2025.127 993.7148 -2014.9775 986.7207 -2006.5615 c979.8901 -1998.3428 971.7466 -1991.6699 962.5698 -1986.1641 c958.7617 -1983.8799 954.7495 -1981.8057 951.25 -1979.0664 c947.8877 -1976.4346 944.9121 -1974.498 940.4653 -1975.252 c938.3638 -1975.6084 936.3921 -1977.7783 935.9258 -1979.792 c935.0996 -1983.3545 936.498 -1986.4297 936.498 -1989.9668 c936.498 -1994.8896 936.4683 -1999.7861 937.0366 -2004.6836 cf1139.0757 -2027.1484 m1139.9453 -2035.6543 1140.8423 -2043.9063 1140.8423 -2052.4775 c1140.8423 -2061.2754 1140.7832 -2069.8613 1142.0928 -2078.582 c1143.2983 -2086.6113 1142.8047 -2094.7813 1144.6816 -2102.6982 c1145.5991 -2106.5674 1146.9893 -2110.3027 1147.8105 -2114.1973 c1148.7217 -2118.5156 1148.9126 -2122.6113 1150.3262 -2126.8525 c1152.9946 -2134.8584 1154.6704 -2143.0117 1156.7051 -2151.1621 c1157.4414 -2154.1104 1157.8877 -2157.0205 1158.1602 -2159.9277 C1171.3398 -2159.9277 L1171.1025 -2156.7998 1170.6719 -2153.6797 1169.9302 -2150.5254 c1168.3525 -2143.8174 1166.918 -2137.165 1165.0117 -2130.5273 c1163.9727 -2126.9092 1162.8457 -2123.3486 1161.6553 -2119.7754 c1160.564 -2116.5029 1160.7598 -2112.7002 1160.0459 -2109.3184 c1158.5688 -2102.3145 1156.3062 -2096.3613 1156.2373 -2089.0938 c1156.1631 -2081.3115 1153.9976 -2073.7764 1153.8423 -2065.9932 c1153.6909 -2058.4063 1154.0415 -2050.8076 1153.752 -2043.2227 c1153.457 -2035.4902 1152.2559 -2027.6514 1151.2183 -2019.9883 c1149.1733 -2004.8799 1148.2109 -1989.7988 1148.2109 -1974.5479 c1148.2109 -1966.9678 1149.2197 -1960.1396 1150.3916 -1952.6768 c1151.542 -1945.3535 1151.5859 -1937.1826 1151.3516 -1929.7871 c1151.1182 -1922.4229 1151.9023 -1915.4443 1152.1641 -1908.125 c1152.4551 -1899.9619 1152.0542 -1892.3857 1153.4937 -1884.2764 c1154.8735 -1876.5049 1156.4058 -1868.7617 1157.6328 -1860.9629 c1158.918 -1852.793 1161.0127 -1845.0684 1163.0225 -1837.0498 c1167.1646 -1820.5225 1169.4941 -1804.1182 1176.3887 -1788.3643 c1179.4629 -1781.3398 1185.793 -1775.5791 1190.5845 -1769.7051 c1195.9961 -1763.0693 1202.2549 -1757.3691 1209.106 -1752.2422 c1216.1006 -1747.0088 1224.0146 -1742.8047 1231.5259 -1738.3643 c1237.1177 -1735.0586 1242.7554 -1730.8232 1248.8662 -1728.2783 C1239.479 -1736.415 1234.521 -1748.9482 1226.9844 -1758.6299 c1222.8101 -1763.9922 1221.6289 -1770.6279 1217.9985 -1776.1709 c1213.6724 -1782.7764 1211.2944 -1789.9434 1208.3389 -1797.1816 c1202.5884 -1811.2646 1198.6836 -1825.9316 1192.6655 -1839.9375 c1186.5234 -1854.2324 1181.1255 -1868.8096 1176.7153 -1883.7344 c1172.2554 -1898.8281 1169.9312 -1914.1904 1167.1143 -1929.6445 c1165.832 -1936.6826 1165.8828 -1943.8672 1164.9775 -1950.9492 c1164.5244 -1954.4922 1164.5532 -1958.2344 1164.2988 -1961.8096 c1164.0024 -1965.9688 1163.3687 -1970.1846 1163.3687 -1974.3506 c1163.3687 -1988.3496 1162.4331 -2002.2578 1162.6099 -2016.2813 c1162.8008 -2031.457 1164.8262 -2046.4277 1168.2573 -2061.1953 c1171.3379 -2074.4561 1174.6396 -2087.6426 1177.6445 -2100.9258 c1179.0859 -2107.2969 1180.5889 -2113.8164 1183.2041 -2119.8184 c1185.6318 -2125.3906 1188.4243 -2130.5293 1190.0928 -2136.4082 c1191.9541 -2142.9668 1193.2637 -2149.7197 1194.5078 -2156.418 c1194.728 -2157.6035 1194.9668 -2158.7695 1195.2095 -2159.9277 C1208.6201 -2159.9277 L1208.2461 -2158.2168 1207.8477 -2156.502 1207.4365 -2154.7725 c1205.5713 -2146.9297 1204.3408 -2138.9883 1202.1357 -2131.2168 c1200.3394 -2124.8867 1196.9023 -2119.3643 1194.481 -2113.2988 c1191.5767 -2106.0234 1190.2207 -2097.8477 1188.5884 -2090.2109 c1185.375 -2075.1777 1180.9775 -2060.4219 1178.1699 -2045.3027 c1175.4204 -2030.4941 1175.564 -2015.3682 1175.564 -2000.3682 c1175.564 -1986.3486 1176.4355 -1972.1543 1177.5752 -1958.1895 c1178.1592 -1951.0342 1178.5791 -1943.8711 1179.1875 -1936.7119 c1179.8779 -1928.5908 1182.2544 -1920.6035 1183.2939 -1912.5 c1185.2563 -1897.1982 1190.6318 -1882.3105 1195.5664 -1867.7646 c1199.6328 -1855.7793 1205.4375 -1844.5195 1209.7603 -1832.6602 c1214.0405 -1820.917 1217.5391 -1809.0254 1222.1787 -1797.4082 c1224.4727 -1791.6641 1226.7749 -1786.4707 1230.1875 -1781.2607 c1231.6128 -1779.085 1232.3408 -1776.0176 1233.311 -1773.6035 c1234.5645 -1770.4844 1236.3813 -1767.9297 1238.2324 -1765.1709 c1241.4688 -1760.3486 1244.7817 -1755.584 1247.7949 -1750.6162 c1250.3311 -1746.4346 1253.624 -1740.6797 1257.6221 -1737.7354 c1262.9424 -1733.8184 1259.9043 -1725.8564 1255.0283 -1725.3086 C1258.8477 -1721.1074 1255.3594 -1712.5615 1248.5908 -1714.5928 c1242.4946 -1716.4219 1236.9844 -1719.8721 1231.6016 -1723.1689 c1224.4424 -1727.5537 1217.1328 -1731.6846 1210.0308 -1736.165 c1203.9209 -1740.0195 1198.2534 -1744.1689 1192.7485 -1748.8623 c1186.7793 -1753.9521 1182.0854 -1759.8682 1177.0479 -1765.833 c1172.7842 -1770.8809 1168.0361 -1775.7793 1165.1636 -1781.8027 c1161.9463 -1788.5498 1159.2417 -1795.9766 1157.207 -1803.1563 c1153.1313 -1817.5391 1150.5967 -1832.4297 1146.9038 -1846.9287 c1145.1338 -1853.8779 1144.5532 -1861.1211 1143.2793 -1868.1748 c1141.8965 -1875.833 1139.8418 -1883.6494 1139.2334 -1891.416 c1138.6504 -1898.8564 1139.9199 -1906.4434 1138.6611 -1913.8232 c1137.3706 -1921.3848 1138.6309 -1929.1055 1138.1133 -1936.7119 c1137.8696 -1940.291 1138.0625 -1943.9014 1137.9395 -1947.4863 c1137.8125 -1951.1826 1136.854 -1954.8447 1136.1846 -1958.4688 c1134.749 -1966.2412 1135.2109 -1974.1895 1135.2109 -1982.0566 c1135.2109 -1997.2402 1137.5366 -2012.0977 1139.0757 -2027.1484 cf*u1 D1776.3174 -1999.0195 m1775.2715 -1996.7422 1775.2998 -1994.1494 1774.0332 -1991.917 c1771.4248 -1987.3193 1767.6567 -1982.877 1763.2534 -1979.9277 c1759.4316 -1977.3672 1756.4683 -1974.2002 1752.1484 -1972.375 c1747.4365 -1970.3848 1742.2954 -1968.75 1737.2925 -1967.6816 c1726.9375 -1965.4727 1715.8271 -1966.5938 1706.2617 -1970.9492 C1706.0278 -1970.5469 1705.7646 -1970.1563 1705.438 -1969.793 c1702.6826 -1966.7363 1700.5405 -1963.1201 1697.7192 -1960.0781 c1694.9385 -1957.0801 1691.1284 -1954.5645 1687.7554 -1952.29 c1680.9849 -1947.7236 1670.4639 -1943.8984 1662.2568 -1944.5986 c1652.9692 -1945.3906 1643.2603 -1945.5107 1634.6445 -1949.5029 c1627.9717 -1952.5947 1621.6392 -1955.5127 1616.3242 -1960.417 C1615.8955 -1959.3037 1615.1538 -1958.2598 1614.0181 -1957.4053 c1609.8867 -1954.2939 1607.3203 -1950.8281 1602.2861 -1948.8867 c1596.9951 -1946.8467 1591.0396 -1946.2402 1585.9316 -1943.7979 c1574.7417 -1938.4453 1562.3491 -1937.4941 1550.2803 -1939.8555 c1541.2119 -1941.6289 1531.7832 -1947.1143 1526.0659 -1954.3545 c1518.3672 -1964.1025 1518.4888 -1976.0273 1520.5791 -1987.6514 C1519.6694 -1987.0029 1518.7627 -1986.3496 1517.8647 -1985.6816 c1511.6123 -1981.0303 1504.4766 -1979.4893 1496.8496 -1978.6387 c1489.0396 -1977.7676 1481.2295 -1978.5068 1473.5039 -1979.8271 c1465.8164 -1981.1416 1457.6963 -1982.5703 1450.7891 -1986.2783 c1443.8652 -1989.9951 1439.0151 -1996.0215 1433.5752 -2001.4619 c1428.3682 -2006.6699 1423.082 -2010.7715 1422.4189 -2018.5283 c1422.3975 -2018.7803 1422.3896 -2019.0234 1422.3926 -2019.2607 C1410.8799 -2019.1807 1394.3672 -2018.7148 1386.3755 -2027.8828 c1382.3887 -2032.457 1381.0762 -2039.3525 1379.208 -2044.959 c1377.0986 -2051.291 1379.2627 -2060.1816 1381.6221 -2066.1133 c1383.918 -2071.8838 1386.0586 -2077.3965 1389.7979 -2082.4336 c1394.1289 -2088.2676 1400.2803 -2092.832 1405.9199 -2097.3398 c1411.3389 -2101.6719 1417.2188 -2105.5303 1423.2549 -2108.9414 c1429.4443 -2112.4395 1436.3369 -2114.5215 1442.7646 -2117.5156 c1449.1475 -2120.4893 1455.5352 -2122.4824 1462.2676 -2124.4707 c1469.7705 -2126.6875 1477.415 -2129.5703 1485.2344 -2130.4189 c1500.5684 -2132.083 1515.957 -2132.832 1531.3789 -2132.832 c1547.1172 -2132.832 1562.6758 -2133.123 1578.3018 -2130.96 c1585.6221 -2129.9473 1592.854 -2128.4395 1600.1021 -2127.0215 c1608.0166 -2125.4727 1615.9858 -2124.3916 1623.7881 -2122.2979 c1637.9683 -2118.4922 1651.6079 -2112.5752 1665.9014 -2109.2617 c1680.3252 -2105.918 1693.8799 -2098.7988 1707.3408 -2092.7891 c1713.7725 -2089.916 1719.7275 -2086.0762 1725.5674 -2082.167 c1732.3818 -2077.6055 1737.8584 -2071.1543 1743.6523 -2065.3613 c1748.3838 -2060.6299 1751.9141 -2055.1865 1756.3008 -2050.1982 c1761.0117 -2044.8418 1765.8281 -2040.3086 1769.2061 -2033.876 c1771.499 -2029.5088 1775.3081 -2026.1201 1777.5034 -2021.625 c1779.9824 -2016.5498 1779.3872 -2010.6201 1778.4209 -2005.2285 c1778.0391 -2003.0957 1777.2188 -2000.9814 1776.3174 -1999.0195 cf0 D1763.9473 -2019.1475 m1762.1123 -2021.9697 1759.8965 -2024.5459 1757.9805 -2027.3154 c1756.1587 -2029.9482 1754.8354 -2032.7402 1752.7461 -2035.2295 c1750.6797 -2037.6914 1748.2173 -2039.7451 1746.1001 -2042.1523 c1743.6914 -2044.8916 1741.7813 -2048.0371 1739.5103 -2050.8838 c1734.7441 -2056.8574 1728.5972 -2062.0313 1723.1963 -2067.4316 c1717.9067 -2072.7217 1710.5933 -2076.6133 1703.9971 -2080.0469 c1697.6133 -2083.3711 1690.8174 -2086.0273 1684.2065 -2088.8613 c1677.0034 -2091.9482 1670.0889 -2094.877 1662.4458 -2096.7266 c1648.2046 -2100.1719 1634.4077 -2105.6641 1620.332 -2109.7617 c1613.2036 -2111.8379 1605.7842 -2112.8369 1598.4912 -2114.1426 c1590.6001 -2115.5547 1582.7827 -2117.2559 1574.8457 -2118.4248 c1559.3008 -2120.7148 1543.333 -2119.8643 1527.668 -2119.8281 c1512.6245 -2119.793 1496.3521 -2119.9629 1481.6523 -2116.5117 c1474.4839 -2114.8291 1467.5039 -2112.3848 1460.4141 -2110.4102 c1453.3877 -2108.4531 1447.0674 -2105.0234 1440.3013 -2102.3652 c1433.9473 -2099.8682 1428.4971 -2096.6699 1422.6152 -2093.2852 c1415.8018 -2089.3633 1410.2729 -2083.8291 1404.1792 -2078.96 c1399.5195 -2075.2363 1396.6567 -2069.502 1394.6289 -2064.0234 c1393.5059 -2060.9883 1392.3076 -2057.9453 1391.876 -2054.7129 c1391.2998 -2050.3916 1392.2017 -2047.04 1393.5537 -2042.9834 c1394.334 -2040.6445 1394.8457 -2037.9043 1396.5083 -2035.9961 c1398.0469 -2034.2314 1401.7871 -2033.9648 1403.9102 -2033.5488 c1411.1055 -2032.1377 1418.4717 -2032.2607 1425.7715 -2032.2705 c1431.9556 -2032.2793 1437.8584 -2033.7881 1443.9751 -2034.5039 c1451.355 -2035.3682 1458.522 -2036.375 1465.8271 -2037.8643 c1472.979 -2039.3232 1479.9985 -2040.4619 1486.9541 -2042.7549 c1493.5415 -2044.9268 1499.5649 -2048.2236 1506.0327 -2050.54 c1508.917 -2051.5732 1512.1401 -2051.8867 1514.9385 -2053.1025 c1517.7813 -2054.3379 1520.4121 -2056.2217 1522.9834 -2057.9297 c1527.5244 -2060.9473 1531.582 -2065.6348 1535.6216 -2069.3027 c1545.6572 -2078.4141 1549.3828 -2092.8125 1561.5996 -2099.7646 c1568.8965 -2103.918 1575.4443 -2092.6846 1568.1611 -2088.54 c1562.0298 -2085.0508 1559.166 -2078.6875 1555.207 -2073.1719 c1550.998 -2067.3076 1546.8027 -2061.6973 1541.2676 -2057.0078 c1536.9009 -2053.3076 1533.1382 -2049.0918 1528.3345 -2045.9004 c1525.709 -2044.1563 1523.0127 -2042.5352 1520.1182 -2041.2773 c1516.7505 -2039.8145 1512.9341 -2039.6045 1509.6597 -2037.9707 c1496.1157 -2031.209 1482.1543 -2027.9541 1467.4458 -2024.9541 c1460.3154 -2023.5 1452.9971 -2021.834 1445.6992 -2021.6357 c1442.0928 -2021.5371 1438.5542 -2020.9551 1435.0049 -2020.3936 C1435.2134 -2019.8252 1435.3608 -2019.207 1435.4189 -2018.5283 c1435.5513 -2016.9775 1438.1533 -2015.2686 1439.147 -2014.2754 c1441.5186 -2011.9033 1443.8594 -2009.541 1446.0942 -2007.041 c1450.2095 -2002.4385 1454.7627 -1998.6416 1460.3574 -1995.9834 c1462.7637 -1994.8408 1465.877 -1994.7813 1468.459 -1994.2246 c1471.8125 -1993.5029 1475.2197 -1992.498 1478.6318 -1992.1143 c1485.3828 -1991.3555 1491.8496 -1990.8213 1498.6143 -1991.9365 c1504.8086 -1992.958 1508.8701 -1995.0537 1513.8472 -1998.8135 c1518.7349 -2002.5059 1523.876 -2005.5928 1528.5488 -2009.5527 c1533.1519 -2013.4551 1538.6504 -2016.0176 1543.0879 -2020.1074 c1544.9453 -2021.8193 1546.5669 -2023.7617 1548.0049 -2025.8311 c1549.7695 -2028.3721 1552.5439 -2029.8809 1552.9814 -2033.1279 c1553.4551 -2036.6465 1557.9136 -2038.5107 1560.9771 -2037.668 c1564.7339 -2036.6348 1565.9893 -2033.1816 1565.5166 -2029.6729 c1564.6641 -2023.3379 1558.5264 -2017.8184 1554.4893 -2013.1875 c1549.375 -2007.3203 1542.3345 -2004.2539 1536.5049 -1999.3125 c1533.9434 -1997.1416 1531.2529 -1995.1553 1528.5234 -1993.2207 C1531.5386 -1992.2607 1534.0977 -1989.3984 1533.3369 -1985.4248 c1531.6143 -1976.4316 1531.2188 -1967.3574 1538.0308 -1960.3984 c1543.3711 -1954.9434 1551.6904 -1952.2607 1559.1069 -1951.626 c1568.9995 -1950.7793 1576.6387 -1954.6426 1585.7344 -1957.5039 c1590.0557 -1958.8643 1594.6201 -1959.5791 1598.7759 -1961.4375 c1602.0576 -1962.9043 1604.5757 -1966.4609 1607.4565 -1968.6299 c1607.9277 -1968.9844 1608.3975 -1969.251 1608.8618 -1969.4521 C1605.4541 -1974.5977 1602.9561 -1980.0381 1600.5664 -1986.0928 c1598.8906 -1990.3369 1596.3135 -1994.0811 1594.5547 -1998.2979 c1592.4463 -2003.3545 1591.2207 -2008.1602 1590.4912 -2013.582 c1589.0581 -2024.2344 1589.4092 -2034.7803 1589.6792 -2045.4941 c1589.937 -2055.7305 1589.7563 -2066 1589.7563 -2076 c1589.7563 -2085 1603 -2085 1603 -2076 C1603 -2059.8262 1603 -2051.5127 v1603 -2041.8477 1602.1768 -2032.209 1602.8779 -2022.5508 c1603.5117 -2013.8232 1604.5835 -2006.2207 1608.9595 -1998.4785 c1612.8418 -1991.6094 1614.6846 -1983.793 1619.0156 -1977.1543 c1627.5332 -1964.0977 1642.5503 -1959.0791 1657.3882 -1957.9473 c1660.981 -1957.6738 1664.498 -1957.123 1668.0342 -1958.0059 c1672.0283 -1959.0029 1676.2109 -1960.7363 1679.8359 -1962.6709 c1686.2803 -1966.1094 1689.9355 -1971.5098 1694.3477 -1976.7891 C1694.4736 -1977.1934 1694.6328 -1977.584 1694.8291 -1977.9541 C1689.4106 -1981.9941 1684.2744 -1986.5508 1678.7842 -1990.2969 c1673.6938 -1993.7695 1669.377 -1998.6719 1664.8701 -2002.8779 c1660.4404 -2007.0107 1656.2012 -2011.291 1652.2744 -2015.9072 c1645.1738 -2024.2529 1639.229 -2033.5381 1634.6387 -2043.4824 c1632.1431 -2048.8877 1630.5596 -2054.5967 1629.0654 -2060.3457 c1627.7324 -2065.4736 1627.3071 -2071.5156 1625.2373 -2076.3906 c1623.8525 -2079.6523 1624.2266 -2083.3252 1627.5693 -2085.2832 c1630.3301 -2086.9004 1635.0767 -2086.2158 1636.4629 -2082.9512 c1639.0469 -2076.8652 1639.9941 -2070.2051 1641.6006 -2063.8008 c1643.5054 -2056.2109 1645.9932 -2049.2295 1649.7246 -2042.3447 c1656.9766 -2028.9639 1667.2354 -2018.4082 1678.2861 -2008.1396 c1683.7041 -2003.1055 1689.3252 -1998.9043 1695.1992 -1994.4316 c1701.0396 -1989.9844 1706.4043 -1985.3086 1713.0391 -1982.0313 c1719.0405 -1979.0674 1725.8467 -1979.8174 1732.3257 -1980.0342 c1735.3613 -1980.1357 1738.4512 -1981.3848 1741.2979 -1982.3359 c1744.4795 -1983.3994 1748.0288 -1984.0674 1750.5498 -1986.4561 c1754.7651 -1990.4502 1761.4111 -1993.3135 1762.957 -1999.4395 c1764.7383 -2006.498 1768.3862 -2012.3203 1763.9473 -2019.1475 cf*U1869.8638 -2023.4189 m1872.4087 -2028.8906 1874.5186 -2035.1719 1878.0352 -2040.084 c1879.5762 -2042.2363 1880.7847 -2044.6299 1881.9873 -2046.9795 c1883.3555 -2049.6523 1885.4346 -2051.8223 1886.9814 -2054.3926 c1888.5674 -2057.0273 1889.2344 -2060.1357 1890.7246 -2062.8398 c1892.0396 -2065.2275 1894.1382 -2067.251 1895.6221 -2069.5527 c1902.8291 -2080.7305 1912.2324 -2091.377 1917.1392 -2103.8906 c1922.4355 -2117.3984 1918.3062 -2130.9863 1915.2095 -2144.3818 c1913.9321 -2149.9082 1911.6738 -2155.0586 1908.8491 -2159.9277 C1923.5557 -2159.9277 L1924.1582 -2158.6895 1924.7402 -2157.4375 1925.2803 -2156.1621 c1927.7256 -2150.3945 1928.8975 -2143.7266 1930.3643 -2137.6406 c1931.9756 -2130.9541 1932.791 -2124.0078 1932.6846 -2117.1348 c1932.4795 -2103.8525 1926.5186 -2092.3027 1919.5117 -2081.3555 c1916.0889 -2076.0078 1912.0474 -2071.0762 1908.5229 -2065.7949 c1906.79 -2063.1982 1905.2554 -2060.5977 1903.3184 -2058.1289 c1901.4419 -2055.7383 1900.9609 -2053.083 1899.5298 -2050.4863 c1896.853 -2045.6279 1893.7271 -2041.1318 1890.9961 -2036.2803 c1889.4395 -2033.5156 1887.6025 -2031.0801 1886.2744 -2028.1758 c1884.9917 -2025.3682 1883.9175 -2022.4834 1882.5386 -2019.7178 c1879.8398 -2014.3066 1878.5962 -2008.332 1876.5967 -2002.6348 c1874.3389 -1996.2021 1873.3218 -1988.7988 1872.4775 -1982.0586 c1871.6494 -1975.4463 1872.1201 -1968.4023 1872.1436 -1961.7441 c1872.1689 -1954.54 1872.707 -1947.6143 1874.5566 -1940.6494 c1875.6406 -1936.5674 1875.9639 -1932.6299 1877.0654 -1928.8193 C1877.3887 -1933.5586 1878.4258 -1938.498 1879.1758 -1943.0205 c1881.1914 -1955.168 1884.9346 -1968.1045 1889.7676 -1979.4199 c1891.9043 -1984.4219 1894.1299 -1989.5205 1896.4155 -1994.457 c1899.0425 -2000.1309 1903.3452 -2005.3438 1906.8145 -2010.5469 c1909.5542 -2014.6563 1913.5381 -2018.2305 1916.8657 -2021.8613 c1921.2734 -2026.6709 1925.6484 -2031.5234 1929.9502 -2036.4297 c1933.8291 -2040.8525 1937.5322 -2045.4063 1940.959 -2050.1885 c1944.4609 -2055.0762 1948.4805 -2059.46 1952.1074 -2064.209 c1959.4619 -2073.8398 1965.7148 -2084.666 1968.5205 -2096.5225 c1971.4287 -2108.8086 1967.791 -2122.2822 1964.5654 -2134.1553 c1962.2305 -2142.751 1960.0098 -2151.3525 1957.6924 -2159.9277 C1971.3105 -2159.9277 L1973.2529 -2153.1016 1975.125 -2146.2412 1976.6191 -2139.3242 c1979.3184 -2126.8281 1983.1016 -2114.7617 1982.3428 -2101.8203 c1981.6699 -2090.3613 1977.0947 -2076.9531 1970.0918 -2067.7822 c1966.543 -2063.1348 1964.0342 -2057.8242 1959.9385 -2053.584 c1955.3604 -2048.8438 1951.9414 -2043.1084 1947.9297 -2037.9092 c1944.4121 -2033.3506 1940.6875 -2028.9727 1936.874 -2024.6611 c1932.6074 -2019.8359 1927.5635 -2015.3262 1923.6973 -2010.1914 c1922.2041 -2008.21 1920.4453 -2006.5146 1918.7217 -2004.7393 c1916.7446 -2002.7021 1915.3213 -1999.9082 1913.749 -1997.5498 c1911.9609 -1994.8682 1910.1733 -1992.1865 1908.3857 -1989.5049 c1906.5498 -1986.751 1905.7612 -1982.8711 1904.3633 -1979.8506 c1899.1729 -1968.6367 1895.8662 -1956.9072 1892.8145 -1944.9258 c1891.3174 -1939.0459 1890.7427 -1932.9629 1890.1377 -1926.9424 c1889.4863 -1920.458 1891.4282 -1914.0303 1890.7695 -1907.5078 c1890.4858 -1904.6992 1889.0073 -1901.918 1885.9976 -1901.2402 c1880.9941 -1900.1123 1878.2651 -1903.4766 1875.856 -1907.2666 c1873.6821 -1910.6865 1868.5107 -1915.5869 1866.0825 -1920.543 c1863.0176 -1926.7988 1863.1387 -1933.8369 1861.1074 -1940.374 c1859.0488 -1946.9971 1859.2241 -1954.8828 1859.1436 -1961.7441 c1858.9736 -1976.2197 1859.6865 -1990.6543 1863.6162 -2004.6816 c1865.3472 -2010.8594 1867.1553 -2017.5957 1869.8638 -2023.4189 cf2380.6797 -2040.8818 m2383.998 -2041.167 2387.6729 -2040.5547 2390.9238 -2041.1895 c2394.9521 -2041.9766 2399.0078 -2042.627 2403.0566 -2043.3018 c2409.9775 -2044.457 2416.4854 -2045.1484 2423.1406 -2047.7324 c2429.4629 -2050.1875 2436.1182 -2052.2578 2440.9805 -2057.0703 c2445.1045 -2061.1533 2450.4033 -2063.6445 2456.124 -2061.3877 c2461.6641 -2059.2031 2466.0732 -2054.0049 2471.0254 -2050.7217 c2483.8789 -2042.1992 2496.7617 -2035.6123 2512.0889 -2033.1484 c2526.9033 -2030.7666 2541.2998 -2029.3574 2556.3359 -2029.9736 c2559.5674 -2030.1055 2562.5654 -2030.8662 2565.5664 -2032.0381 c2567.5791 -2032.8242 2572.9766 -2034.0068 2573.9609 -2035.1934 c2579.3193 -2041.6523 2588.4639 -2032.4023 2583.1543 -2026.002 c2579.793 -2021.9512 2572.1895 -2020.7393 2567.4863 -2018.9023 c2560.8984 -2016.3301 2553.1289 -2016.8496 2546.2021 -2016.8604 c2530.9971 -2016.8828 2516.125 -2019.041 2501.207 -2021.917 c2486.8838 -2024.6777 2473.3975 -2033.4355 2461.499 -2041.4814 c2459.1113 -2043.0957 2456.8564 -2044.7969 2454.7441 -2046.7549 c2453.1563 -2048.2275 2452.2021 -2049.6543 2451.1602 -2048.7979 c2448.9854 -2047.0117 2447.2676 -2044.7646 2444.9043 -2043.1797 c2441.8105 -2041.1045 2438.1348 -2039.918 2434.6699 -2038.6025 c2428.0098 -2036.0732 2421.7852 -2033.3359 2414.8008 -2031.709 c2407.6338 -2030.0391 2400.0898 -2029.7695 2392.8359 -2028.3525 c2389.4639 -2027.6934 2385.7607 -2028.1201 2382.3291 -2027.9824 c2379.0742 -2027.8516 2375.9395 -2027.1426 2372.7119 -2026.8047 c2365.6641 -2026.0664 2358.3418 -2026.4063 2351.2861 -2026.8779 c2344.5293 -2027.3291 2337.6211 -2028.5117 2331.3174 -2031.0234 c2324.4756 -2033.75 2317.1191 -2034.9746 2310.2363 -2037.7051 c2308.1064 -2038.5498 2305.9844 -2039.4355 2303.8662 -2040.334 C2299.293 -2034.6582 2294.127 -2033.0195 2287.1777 -2031.0332 c2279.6855 -2028.8926 2272.832 -2026.3242 2265.8145 -2022.9238 c2259.0654 -2019.6543 2252.4268 -2016.1641 2245.6641 -2012.9229 c2239.5879 -2010.0098 2234.7197 -2005.3242 2228.6602 -2002.459 c2222.4707 -1999.5313 2215.6406 -1997.6338 2209.0908 -1995.7041 c2201.8271 -1993.5645 2194.3125 -1991.082 2186.8115 -1990.0107 c2180.1992 -1989.0654 2173.623 -1988.2637 2167.0713 -1986.9199 c2159.3818 -1985.3438 2151.542 -1984.7949 2143.918 -1982.9248 c2136.5908 -1981.1279 2129.8008 -1978.5352 2122.2031 -1978.0146 c2115.4971 -1977.5557 2108.9854 -1977.6416 2102.4102 -1976.0596 c2095.3311 -1974.3564 2086.9824 -1976.0039 2079.8223 -1976.4492 c2071.7891 -1976.9502 2063.7031 -1976.5801 2055.6582 -1976.8701 c2040.8535 -1977.4033 2025.8027 -1980.3096 2011.3398 -1983.3975 c2004.3799 -1984.8838 1998.0508 -1988.125 1991.168 -1989.8428 c1983.5996 -1991.7324 1976.6846 -1994.0732 1969.4287 -1996.9766 c1961.7441 -2000.0508 1965.0938 -2012.6289 1972.8838 -2009.5117 c1979.001 -2007.0645 1984.8965 -2004.5791 1991.3369 -2003.1328 c1998.2305 -2001.585 2004.5176 -1998.7676 2011.2705 -1996.8125 c2018.1543 -1994.8203 2025.4053 -1994.1719 2032.4209 -1992.7646 c2039.5439 -1991.3359 2046.6172 -1990.334 2053.874 -1989.9492 c2061.2539 -1989.5566 2068.6445 -1989.6992 2076.0293 -1989.6084 c2083.6367 -1989.5156 2091.1631 -1988.4014 2098.7852 -1988.6904 c2101.877 -1988.8076 2105.1357 -1989.8525 2108.2217 -1990.2578 c2111.6279 -1990.7041 2115.1475 -1990.7871 2118.5801 -1990.8867 c2126.3076 -1991.1084 2133.0557 -1993.5117 2140.4629 -1995.4609 c2146.96 -1997.1699 2153.6406 -1997.5479 2160.2217 -1998.7754 c2166.9424 -2000.0293 2173.6006 -2001.415 2180.3975 -2002.2295 c2193.9043 -2003.8477 2207.6826 -2008.3965 2220.4316 -2013.0928 c2226.292 -2015.252 2230.6191 -2019.6885 2236.0078 -2022.6875 c2242.4297 -2026.2607 2249.3359 -2029.2129 2255.917 -2032.5029 c2262.4307 -2035.7588 2269.1914 -2039.4189 2276.2129 -2041.4238 c2281.1348 -2042.8301 2286.4287 -2043.5771 2290.6738 -2046.1133 C2284.9609 -2049.0352 2279.873 -2053.9121 2275.2363 -2058.1836 c2269.6689 -2063.3164 2264.8027 -2069.166 2259.8027 -2074.835 c2254.3848 -2080.9795 2248.8379 -2086.9668 2244.707 -2094.0918 c2240.4932 -2101.3574 2251.7295 -2107.9004 2255.9316 -2100.6523 c2259.5137 -2094.4766 2264.2666 -2089.3291 2268.9951 -2084.0273 c2274.043 -2078.3691 2278.9316 -2072.6133 2284.4297 -2067.377 c2289.1182 -2062.9102 2294.2227 -2058.4443 2300.251 -2055.9766 c2306.9336 -2053.2402 2313.4805 -2050.0723 2320.3506 -2047.8301 c2326.502 -2045.8232 2332.7393 -2044.002 2338.9111 -2042.082 c2346.4746 -2039.7295 2354.502 -2039.5742 2362.3477 -2039.5176 c2368.6074 -2039.4727 2374.4697 -2040.3477 2380.6797 -2040.8818 cf2362.4844 -2159.9277 m2365.2715 -2156.4629 2369.2256 -2153.4658 2372.2471 -2150.916 c2378.1777 -2145.9111 2384.4668 -2141.1338 2390.8291 -2136.6797 c2396.7148 -2132.5586 2402.8379 -2128.7803 2408.9941 -2125.0811 c2415.6514 -2121.0801 2422.7119 -2118.6777 2429.8438 -2115.707 c2443.2148 -2110.1377 2456.5713 -2104.1709 2470.3164 -2099.5518 c2477.1025 -2097.2715 2484.2607 -2095.3223 2491.2617 -2093.8281 c2494.8506 -2093.0615 2498.6738 -2093.4102 2502.3301 -2093.2168 c2506.6895 -2092.9863 2511.0117 -2092.3936 2515.3828 -2092.1992 c2522.998 -2091.8613 2530.626 -2091.8242 2538.2471 -2091.8066 c2546.502 -2091.7881 2553.8789 -2092.9551 2561.9043 -2094.8066 c2568.4854 -2096.3242 2574.8047 -2096.9863 2580.9629 -2100.0205 c2586.9727 -2102.9824 2592.2451 -2107.5586 2597.9814 -2111.0293 c2600.1738 -2112.3555 2602.3174 -2113.6846 2603.916 -2115.7197 c2605.4951 -2117.7285 2606.2363 -2119.752 2609.0098 -2120.5342 c2616.2852 -2122.5859 2618.5146 -2116.124 2623.3682 -2112.4561 c2634.1191 -2104.3301 2647.2617 -2099.3535 2660.6172 -2097.8223 c2681.0723 -2095.4766 2699.9941 -2103.54 2718.7832 -2110.5137 c2727.1914 -2113.6348 2734.9668 -2118.1641 2741.2979 -2124.4941 c2744.7578 -2127.9531 2748.2471 -2131.2852 2751.9414 -2134.4932 C2752.8262 -2135.5215 2753.1992 -2135.7744 2753.0859 -2135.2871 C2753.2539 -2135.6631 2753.4355 -2136.0322 2753.6328 -2136.3955 c2754.1523 -2137.4121 2754.8896 -2138.3535 2755.5674 -2139.2695 c2760.4941 -2145.9277 2771.7861 -2139.4561 2766.792 -2132.707 c2766.4678 -2132.2695 2766.1553 -2131.8242 2765.8428 -2131.377 c2764.5039 -2129.4658 2765.5518 -2130.6865 2764.3789 -2128.6855 c2762.625 -2125.6895 2758.9414 -2123.4541 2756.3965 -2121.1631 c2750.6611 -2116 2745.8994 -2110.2852 2739.2871 -2106.1377 c2735.5586 -2103.7988 2731.4619 -2101.7734 2727.292 -2100.0039 C2730.0996 -2094.5811 2733.2598 -2089.2754 2737.0889 -2084.5439 c2742.0664 -2078.3945 2747.3955 -2072.5723 2751.9893 -2066.1152 c2756.5879 -2059.6514 2759.3721 -2052.5254 2765.3164 -2047.0762 c2771.541 -2041.3701 2777.6953 -2035.3945 2784.8115 -2030.8174 c2798.5156 -2022.002 2814.7236 -2018.8154 2830.7695 -2017.6895 c2839.4023 -2017.084 2847.8652 -2017.8271 2856.3467 -2019.4316 c2859.9434 -2020.1113 2864.2959 -2020.4912 2867.6699 -2021.9385 c2869.3389 -2022.6543 2870.8438 -2023.6553 2872.541 -2024.3359 c2869.6934 -2023.1934 2872.293 -2026.1963 2873.0254 -2027.4424 c2877.2686 -2034.6631 2888.5078 -2028.125 2884.25 -2020.8818 c2882.2217 -2017.4297 2881.1738 -2013.8779 2877.1484 -2012.2627 c2873.5107 -2010.8027 2870.4727 -2009.167 2866.5625 -2008.3047 c2857.1582 -2006.2324 2847.709 -2004.6113 2838.0605 -2004.4756 c2819.8311 -2004.2188 2800.7148 -2007.8994 2784.457 -2016.1445 c2776.3037 -2020.2793 2770.0586 -2025.9971 2763.0195 -2031.6328 c2755.5801 -2037.5908 2749.8525 -2044.2822 2745.1094 -2052.498 c2740.5547 -2060.3906 2734.8203 -2067.0732 2728.9883 -2074.0303 c2723.5127 -2080.5605 2718.9385 -2087.8223 2715.082 -2095.4023 C2708.1357 -2092.8594 2701.1973 -2090.1211 2694.123 -2088.0869 c2678.2656 -2083.5273 2662.1328 -2083.3477 2646.1357 -2087.3848 c2638.7793 -2089.2402 2631.6621 -2092.2783 2625.0234 -2095.9199 c2621.6816 -2097.7529 2618.5381 -2099.9219 2615.502 -2102.2178 c2614.3203 -2103.1113 2613.2949 -2104.3057 2612.2754 -2105.4854 C2610.6582 -2103.5273 2607.9688 -2101.9443 2605.873 -2100.6084 c2601.1387 -2097.5928 2596.5488 -2094.5537 2591.9238 -2091.3691 c2581.5381 -2084.2178 2568.5029 -2082.792 2556.4746 -2080.2617 c2543.2129 -2077.4727 2528.8408 -2078.6768 2515.3828 -2079.1992 c2501.8008 -2079.7275 2488.4531 -2080.4238 2475.4609 -2084.668 c2469.2881 -2086.6846 2463.1152 -2088.2305 2457.0488 -2090.6621 c2451.1973 -2093.0078 2445.3291 -2095.2686 2439.4619 -2097.5576 c2433.4961 -2099.8848 2427.748 -2102.7227 2421.7637 -2105.0156 c2415.666 -2107.3516 2409.6279 -2109.584 2403.9932 -2112.9248 c2392.6621 -2119.6426 2381.6963 -2126.8564 2371.4131 -2135.1045 c2362.7842 -2142.0264 2351.8877 -2149.2383 2347.6484 -2159.9277 C2362.4844 -2159.9277 Lf3016.0898 -1946.293 m3008.9531 -1948.0498 3001.084 -1947.4863 2993.7754 -1948.584 c2990.1094 -1949.1348 2986.4902 -1949.8652 2982.9658 -1951.04 c2979.1289 -1952.3193 2975.6816 -1954.3965 2971.7813 -1955.541 c2964.0391 -1957.8125 2956.5732 -1961.7871 2949.3086 -1965.2764 c2941.4326 -1969.0586 2934.2139 -1973.7715 2926.8164 -1978.375 c2914.1465 -1986.2598 2902.7695 -1996.4063 2895.5518 -2009.6182 c2891.3613 -2017.2861 2887.8975 -2025.2256 2887.3008 -2034.0264 c2886.6699 -2043.3281 2888.2217 -2052.7285 2889.0322 -2061.9736 c2889.7588 -2070.2578 2902.7646 -2070.3281 2902.0322 -2061.9736 c2901.3232 -2053.8887 2900.2832 -2045.8379 2900.2051 -2037.7119 c2900.1221 -2029.2178 2903.5225 -2022.1348 2907.5166 -2014.8242 c2914.1816 -2002.625 2925.7227 -1994.0967 2937.4297 -1987.1357 c2950.5654 -1979.3252 2963.5615 -1972.0391 2978.1133 -1967.1748 c2980.9873 -1966.2148 2983.6055 -1964.6611 2986.4219 -1963.5762 c2989.8281 -1962.2637 2993.6328 -1961.6064 2997.2314 -1961.1201 c3004.6172 -1960.1211 3012.2734 -1960.6182 3019.5449 -1958.8281 c3027.6826 -1956.8252 3024.2305 -1944.2891 3016.0898 -1946.293 cf*u1 D3194.8594 -1881.0078 m3200.0488 -1893.0264 3206.7578 -1903.7676 3214.6523 -1914.1914 c3222.4531 -1924.4922 3233.0381 -1931.7422 3243.0391 -1939.7236 c3247.9473 -1943.6406 3253.2813 -1946.9531 3258.542 -1950.3643 c3264.0254 -1953.9209 3268.8555 -1958.248 3274.2451 -1961.9023 c3279.6836 -1965.5898 3285.5186 -1968.6348 3291.0479 -1972.1729 c3296.6943 -1975.7852 3302.3789 -1979.4189 3308.1807 -1982.7744 c3319.1445 -1989.1162 3330.9639 -1994.4912 3343.4072 -1997.0986 c3355.4863 -1999.6289 3367.6367 -2001.8955 3379.7246 -2004.3291 c3382.4883 -2004.8848 3385.0293 -2006.4082 3387.8896 -2006.5273 c3391.041 -2006.6582 3393.8818 -2007.6084 3396.8047 -2008.7393 c3401.6846 -2010.6279 3406.6904 -2012.2744 3411.9131 -2012.8164 C3409.6553 -2019.5117 3407.417 -2026.2266 3404.7744 -2032.7666 c3402.9775 -2037.2129 3402.2158 -2041.749 3401.2744 -2046.4541 c3400.1211 -2052.2217 3398.4941 -2057.9189 3397.0684 -2063.625 c3394.6289 -2073.3799 3391.5605 -2082.9697 3389.542 -2092.8281 c3387.4844 -2102.877 3387.6211 -2113.1494 3386.1816 -2123.2656 c3384.6973 -2133.7021 3384.6074 -2143.9443 3384.6074 -2154.4639 c3384.6074 -2156.0215 3384.5645 -2157.9277 3384.6201 -2159.9277 C3398.0215 -2159.9277 L3398.0176 -2159.8027 3398.0146 -2159.6777 3398.0098 -2159.5537 c3397.9258 -2157.2598 3397.6074 -2155.0664 3397.6074 -2152.7734 c3397.6074 -2144.7275 3397.4727 -2136.75 3398.4414 -2128.748 c3400.2881 -2113.5088 3401.1191 -2098.5059 3405.1357 -2083.6133 c3407.1426 -2076.1758 3409.1836 -2068.7637 3411.0518 -2061.2891 c3411.998 -2057.5059 3413.0449 -2053.7334 3413.8105 -2049.9102 c3414.6045 -2045.9375 3415.0371 -2041.6377 3416.6074 -2037.8955 c3419.4648 -2031.0859 3421.7871 -2024.1055 3423.9238 -2017.04 c3426.1387 -2009.7217 3429.0098 -2002.8389 3430.6611 -1995.3193 c3432.2031 -1988.2988 3434.0957 -1981.5742 3436.0293 -1974.6426 c3438.1992 -1966.8613 3439.2852 -1958.6855 3440.7803 -1950.75 c3443.7666 -1934.8955 3446.002 -1919.0859 3447.5498 -1903.0146 c3448.2637 -1895.5938 3448.9951 -1888.1719 3449.6914 -1880.752 c3450.3711 -1873.5186 3450.8857 -1865.8398 3452.3818 -1858.7363 c3453.709 -1852.4316 3454.3389 -1845.8711 3455.501 -1839.5088 c3456.8096 -1832.3398 3458.5469 -1825.3232 3459.3174 -1818.0557 c3461.2451 -1799.8691 3461.1777 -1781.3262 3458.25 -1763.3135 c3457.4463 -1758.3721 3457.3389 -1753.4854 3456.7285 -1748.5391 c3456.126 -1743.6572 3454.3711 -1738.8857 3453.2305 -1734.1006 c3450.8916 -1724.293 3449.6289 -1714.3369 3447.7363 -1704.4551 c3445.9326 -1695.041 3444.6328 -1685.3906 3442.1855 -1676.1289 c3439.8125 -1667.1436 3435.9326 -1658.3389 3434.2813 -1649.2451 c3433.542 -1645.1719 3431.2949 -1641.4414 3430.3281 -1637.3662 c3429.2773 -1632.9355 3429.0205 -1628.4297 3427.7988 -1624.0371 c3426.5049 -1619.3867 3425.7969 -1614.5977 3425.4121 -1609.7715 C3428.8545 -1614.9902 3432.8906 -1619.8721 3436.1055 -1625.2822 c3439.5098 -1631.0127 3443.9307 -1636.0234 3447.4941 -1641.6504 c3449.2549 -1644.4326 3450.4541 -1647.1484 3452.6895 -1649.6279 c3455.1348 -1652.3408 3457.1768 -1654.8457 3458.9863 -1658.0605 c3462.3789 -1664.0869 3465.1729 -1670.2324 3469.0029 -1676.0352 c3473.3984 -1682.6924 3475.6006 -1690.9766 3477.2871 -1698.6885 c3480.5264 -1713.4961 3484.1582 -1728.0889 3485.5693 -1743.2285 c3488.4531 -1774.1504 3485.1709 -1804.9697 3485.1709 -1835.9082 c3485.1709 -1867.1816 3481.5029 -1898.584 3479.3799 -1929.7734 c3478.6563 -1940.4072 3476.0723 -1950.7324 3474.627 -1961.2764 c3473.167 -1971.9219 3472.0176 -1982.6045 3470.8906 -1993.2891 c3470.3809 -1998.126 3468.7363 -2002.9561 3467.4629 -2007.6318 c3466.0254 -2012.9033 3464.9844 -2018.2656 3463.5166 -2023.5215 c3460.8936 -2032.917 3457.4414 -2041.7813 3453.2783 -2050.5859 c3449.0195 -2059.5938 3447.1182 -2070.1807 3444.7822 -2079.8223 c3443.5859 -2084.7627 3443.4795 -2089.833 3442.7637 -2094.8398 c3441.9795 -2100.3369 3441 -2105.793 3440.8652 -2111.3447 c3440.6162 -2121.6309 3438.751 -2131.6309 3437.4639 -2141.8086 c3436.709 -2147.7813 3436.375 -2153.8828 3436.2227 -2159.9277 C3449.4902 -2159.9277 L3449.9795 -2149.6797 3450.916 -2139.6025 3452.2539 -2129.2363 c3454.2285 -2113.9531 3454.0859 -2098.3242 3457.3184 -2083.2246 c3458.6465 -2077.0176 3460.3154 -2070.8516 3462.2227 -2064.7852 C3462.9727 -2065.8643 3463.6816 -2066.9678 3464.2734 -2068.1465 c3466.2246 -2072.0332 3467.3145 -2076.334 3468.0049 -2080.5967 c3469.7412 -2091.3105 3470.0586 -2101.3477 3468.791 -2112.1758 c3467.4648 -2123.5156 3465.5488 -2134.7637 3464.3496 -2146.1211 c3463.8613 -2150.7441 3463.2422 -2155.3438 3462.4883 -2159.9277 C3475.5918 -2159.9277 L3475.8359 -2158.2656 3476.0732 -2156.6016 3476.293 -2154.9355 c3478.0039 -2141.9766 3479.6182 -2129.002 3481.3018 -2116.0371 c3482.125 -2109.6934 3482.9219 -2103.3418 3482.8672 -2096.9375 c3482.8145 -2090.7783 3481.5781 -2084.7207 3480.7461 -2078.6426 c3480.0625 -2073.6445 3478.6621 -2069.1836 3476.7715 -2064.5176 c3474.6563 -2059.2988 3470.8828 -2055.5801 3468.3203 -2050.6484 c3468.1807 -2050.3789 3468.0283 -2050.1338 3467.8711 -2049.9004 C3468.9648 -2047.377 3470.0654 -2044.8477 3471.0771 -2042.2686 c3475.1221 -2031.959 3478.083 -2020.9209 3480.6182 -2009.959 C3481.1523 -2010.4707 3481.7412 -2010.9336 3482.3809 -2011.335 c3484.4512 -2012.6338 3485.4883 -2014.4785 3485.9873 -2015.1904 c3490.083 -2021.041 3494.0771 -2026.6836 3497.3203 -2033.0762 c3504.6563 -2047.5371 3503.3555 -2064.7646 3503.6426 -2080.5576 c3503.9316 -2096.3965 3504.418 -2112.6104 3503.0693 -2128.4023 c3502.3398 -2136.9453 3502.1699 -2145.6162 3500.957 -2154.1055 c3500.6797 -2156.0459 3500.4023 -2157.9863 3500.125 -2159.9277 C3513.127 -2159.9277 L3514.0039 -2153.3867 3514.751 -2146.8594 3515.1201 -2140.2305 c3515.6133 -2131.3828 3516.6113 -2122.6348 3516.6689 -2113.7598 c3516.7246 -2105.2578 3516.6738 -2096.752 3516.6738 -2088.249 c3516.6738 -2079.3457 3516.334 -2070.4658 3516.0371 -2061.5693 c3515.7471 -2052.8857 3515.2881 -2044.7295 3512.7178 -2036.3496 c3510.3574 -2028.6563 3506.1729 -2020.8311 3501.3057 -2014.4463 c3499.332 -2011.8555 3497.5068 -2009.0947 3495.6738 -2006.4014 c3494.8301 -2005.1602 3493.7539 -2004.5283 3492.7471 -2003.4766 c3492.4199 -2003.1348 3489.9014 -2000.75 3489.8926 -2000.7139 c3489.0859 -1997.2334 3486.3477 -1995.8711 3483.6152 -1996.0791 C3484.7441 -1989.5332 3485.0078 -1982.7148 3485.7588 -1976.1484 c3486.6885 -1968.0313 3487.7666 -1959.9365 3489.0889 -1951.873 c3490.3047 -1944.4629 3491.8066 -1937.3037 3492.3799 -1929.7725 c3492.9902 -1921.75 3493.2988 -1913.7168 3493.9854 -1905.6973 c3495.3447 -1889.8008 3496.5537 -1873.8906 3497.2832 -1857.9512 c3497.9785 -1842.7539 3497.6748 -1827.4658 3498.6709 -1812.2881 c3501.4375 -1770.1563 3500.0684 -1727.1729 3487.5928 -1686.5176 c3486.1357 -1681.7686 3484.1455 -1677.1738 3482.0508 -1672.6777 c3479.8164 -1667.8828 3476.3477 -1663.6357 3473.8818 -1658.9258 c3471.5654 -1654.502 3469.6377 -1650.0693 3466.7119 -1645.9824 c3465.5479 -1644.3555 3464.2813 -1642.8711 3462.8799 -1641.4492 c3461.002 -1639.543 3460.0645 -1637.3867 3458.7188 -1635.0898 c3456.4844 -1631.2754 3453.5986 -1627.835 3450.9766 -1624.2881 c3447.9658 -1620.2168 3445.582 -1615.7158 3442.8125 -1611.4805 c3440.1094 -1607.3457 3436.7793 -1603.583 3434.25 -1599.373 c3432.3086 -1596.1406 3429.1094 -1592.3584 3427.9463 -1588.8066 c3425.6221 -1581.709 3415.3271 -1583.6885 3415.0684 -1589.9102 C3413.2754 -1590.8809 3411.959 -1592.6953 3411.9609 -1595.3613 c3411.9648 -1602.6162 3412.3242 -1609.8438 3413.1563 -1617.0488 c3414.0146 -1624.4854 3416.123 -1631.8594 3417.4629 -1639.2314 c3418.6016 -1645.4912 3421.3096 -1651.2129 3422.6514 -1657.4268 c3423.4004 -1660.8975 3425.3242 -1664.3047 3426.2813 -1667.7705 c3427.3711 -1671.7148 3428.5527 -1675.6387 3429.6504 -1679.585 c3433.7178 -1694.2168 3434.4795 -1709.7256 3438.0146 -1724.4521 c3439.8008 -1731.8955 3440.9824 -1739.4189 3443.0859 -1746.7979 c3444.1582 -1750.5586 3443.8203 -1754.1787 3444.373 -1757.9893 c3444.957 -1762.0166 3445.5898 -1766.0342 3446.25 -1770.0488 c3448.7021 -1784.9492 3446.8027 -1799.9023 3446.5273 -1814.8945 c3446.4043 -1821.543 3444.3701 -1827.8516 3443.2666 -1834.3447 c3442.0791 -1841.334 3440.9121 -1848.2764 3439.8457 -1855.2803 c3435.1924 -1885.8545 3434.1309 -1916.8516 3428.2441 -1947.2939 c3427.3555 -1951.8906 3426.5488 -1956.4941 3425.6484 -1961.0762 C3425.4336 -1960.9189 3425.2061 -1960.7676 3424.959 -1960.626 c3421.0615 -1958.3867 3418.1143 -1954.8691 3414.0967 -1952.7471 c3409.5156 -1950.3281 3405.0576 -1947.7158 3400.4453 -1945.3486 c3389.8926 -1939.9326 3378.3516 -1938.374 3367.1641 -1934.9023 c3356.3428 -1931.5449 3345.7256 -1927 3334.7832 -1924.1143 c3329.0508 -1922.6016 3323.5498 -1920.2314 3318.0156 -1918.1367 c3312.8584 -1916.1836 3307.6367 -1914.8369 3302.6748 -1912.3555 c3298.2783 -1910.1563 3293.8652 -1908.0342 3289.5576 -1905.6816 c3285.0146 -1903.2002 3279.7402 -1902.5596 3275.5068 -1899.5352 c3273.457 -1898.0703 3271.8154 -1895.9844 3269.6895 -1894.6563 c3267.0078 -1892.9805 3264.3262 -1891.3037 3261.6445 -1889.6279 c3256.375 -1886.334 3251.1729 -1883.126 3246.2627 -1879.3145 c3238.1816 -1873.041 3230.0029 -1866.959 3221.9307 -1860.6768 c3217.4688 -1857.2041 3212.8213 -1853.9678 3208.3789 -1850.4824 c3206.5332 -1849.0332 3204.9199 -1847.4492 3202.9473 -1846.1582 c3202.4297 -1845.833 3201.9336 -1845.4775 3201.4609 -1845.0908 c3200.5225 -1844.3262 3200.5107 -1843.8408 3200.5039 -1843.9531 c3200.8584 -1838.2725 3194.9932 -1836.4727 3191.0186 -1838.4971 C3187.6172 -1838.2891 3184.1309 -1840.3691 3184.2852 -1844.7578 c3184.5059 -1851.0322 3186.2061 -1856.7383 3188.3242 -1862.5918 c3190.5488 -1868.7422 3192.2598 -1874.9883 3194.8594 -1881.0078 cf0 D3204.5469 -1863.7031 m3213.625 -1870.1582 3221.7471 -1877.9131 3230.9473 -1884.1592 c3235.8994 -1887.5205 3240.3691 -1891.6572 3245.4287 -1894.8193 c3250.793 -1898.1709 3256.1563 -1901.5234 3261.5195 -1904.875 c3265.9512 -1907.6455 3269.1377 -1911.6904 3274.1494 -1913.6172 c3279.5127 -1915.6797 3284.541 -1917.7939 3289.6768 -1920.3623 c3300.0195 -1925.5342 3310.5732 -1929.1426 3321.3398 -1933.2656 c3326.9355 -1935.4092 3332.7021 -1936.9521 3338.3555 -1938.918 c3344.4707 -1941.0449 3350.4531 -1943.5557 3356.6875 -1945.2969 c3362.5156 -1946.9238 3368.2168 -1949.2266 3374.1885 -1950.2803 c3379.8438 -1951.2793 3385.5205 -1952.8916 3390.8096 -1955.1367 c3395.6895 -1957.209 3400.5254 -1959.8408 3405.0811 -1962.5459 c3409.7773 -1965.334 3413.6973 -1969.1504 3418.3984 -1971.8506 c3420.0381 -1972.793 3421.6387 -1972.9473 3423.0547 -1972.582 C3422.7227 -1973.8389 3422.3721 -1975.0918 3421.9961 -1976.3389 c3419.5996 -1984.291 3418.2383 -1992.5176 3415.9717 -2000.4951 C3415.2813 -2000.2031 3414.5059 -2000.0117 3413.6338 -1999.9639 c3408.5596 -1999.6875 3403.5664 -1997.4834 3398.8848 -1995.6709 c3393.876 -1993.7324 3388.3496 -1993.2646 3383.1816 -1991.793 c3371.9434 -1988.5947 3359.9648 -1987.6162 3348.5879 -1984.9102 c3337.0713 -1982.1709 3326.7461 -1978.1602 3316.3506 -1972.4551 c3305.2979 -1966.3877 3294.5898 -1959.3223 3283.8789 -1952.666 c3278.7773 -1949.4961 3274.3223 -1945.4951 3269.4229 -1942.0352 c3264.7344 -1938.7236 3259.79 -1935.7871 3255.0537 -1932.5459 c3245.2441 -1925.8311 3235.0439 -1917.9873 3227.1094 -1909.1113 c3219.4082 -1900.499 3213.0146 -1889.7949 3208.2324 -1879.3232 c3205.7227 -1873.8291 3203.7959 -1868.2148 3201.9688 -1862.4639 c3201.8809 -1862.1855 3201.7842 -1861.9121 3201.6934 -1861.6348 C3202.6406 -1862.334 3203.5928 -1863.0244 3204.5469 -1863.7031 cf*U3568.5703 -2159.9277 m3568.7266 -2157.3975 3568.8809 -2154.8672 3569.0215 -2152.3369 c3569.5703 -2142.4092 3569.1973 -2132.6045 3571.2715 -2122.8281 c3575.3799 -2103.4639 3579.4482 -2084.3145 3585.9424 -2065.5742 c3592.4521 -2046.7871 3599.4092 -2028.0879 3607.8916 -2010.0986 c3616.5137 -1991.8125 3625.6055 -1973.8516 3633.6123 -1955.2715 c3641.8691 -1936.1094 3651.5986 -1917.3037 3662.3271 -1899.4238 c3667.3281 -1891.0889 3672.4082 -1882.9609 3676.3828 -1874.0791 c3680.3281 -1865.2598 3683.8613 -1856.2568 3687.085 -1847.1504 c3693.4434 -1829.1826 3698.1201 -1810.6338 3701.293 -1791.8477 c3704.457 -1773.1133 3705.0771 -1754.4971 3705.6338 -1735.5625 c3706.209 -1716.0107 3707.5 -1696.6494 3707.5 -1677.0615 c3707.5 -1667.8506 3707.6729 -1658.626 3707.2197 -1649.4238 c3706.7529 -1639.9365 3705.5898 -1630.5078 3705.5 -1621 c3705.416 -1612.0254 3702.7451 -1602.4014 3701.3857 -1593.5244 c3699.8857 -1583.7324 3697.541 -1574.2373 3695.9453 -1564.4824 c3692.8369 -1545.4766 3689.625 -1526.1426 3684.042 -1507.6719 c3681.6758 -1499.8428 3681.2871 -1491.1875 3679.2676 -1483.2725 c3676.8145 -1473.6563 3675.8672 -1463.9697 3673.4346 -1454.4199 c3668.6377 -1435.5869 3668.7695 -1415.5391 3667.7373 -1396.2207 c3666.6416 -1375.7217 3666.2168 -1355.1895 3666.1865 -1334.6631 c3666.1621 -1318.2959 3666.4707 -1301.9277 3666.9775 -1285.5684 c3667.459 -1270 3669.5 -1254.5273 3669.5 -1238.9688 c3669.5 -1231.5527 3669.4111 -1224.1299 3669.54 -1216.7139 c3669.6904 -1208.0332 3671.8994 -1199.4375 3673.793 -1191.0137 c3677.5303 -1174.3975 3680.2158 -1157.5771 3683.9902 -1140.9502 c3687.8203 -1124.0791 3690.7988 -1107.0264 3695.8516 -1090.4697 c3700.835 -1074.1431 3706.7656 -1058.1255 3711.4209 -1041.6958 c3713.3271 -1034.9688 3714.7979 -1028.3408 3715.9004 -1021.4419 c3717.168 -1013.501 3722.3535 -1006.5576 3726.4307 -999.7275 c3730.2725 -993.293 3732.1494 -986.0825 3734.5176 -978.978 c3735.832 -975.0327 3737.9473 -971.6865 3739.5254 -968.0625 C3738.584 -971.9644 3737.1455 -975.8711 3736.0684 -979.522 c3734.7754 -983.9038 3734.4316 -988.5723 3733.3965 -993.022 c3732.1572 -998.3477 3729.9609 -1003.5869 3728.2324 -1008.772 c3725.1055 -1018.1504 3722.6436 -1027.5562 3720.8066 -1037.272 c3719.084 -1046.3789 3718.3223 -1056.6772 3714.7324 -1065.272 c3714.0205 -1066.9756 3714.3438 -1069.5825 3713.9609 -1071.4116 c3713.5684 -1073.2939 3712.8223 -1075.1143 3712.1357 -1076.9023 c3710.7295 -1080.5645 3709.0068 -1083.8984 3708.2324 -1087.7725 c3706.1992 -1097.9385 3702.502 -1109.0234 3702.5 -1119.4004 c3702.4971 -1129.2285 3702.4238 -1139.1152 3701.1064 -1148.8721 c3699.833 -1158.3008 3697.6787 -1167.709 3695.9316 -1177.0645 c3688.4805 -1216.9824 3693.9434 -1258.2402 3697.0059 -1298.335 c3698.5918 -1319.1016 3698.1289 -1339.9189 3699.7432 -1360.6777 c3700.5264 -1370.7578 3701.6318 -1380.8125 3702.6553 -1390.8711 c3703.707 -1401.209 3704.0244 -1411.7002 3705.6348 -1421.959 c3706.3936 -1426.7891 3707.6436 -1431.5264 3708.2451 -1436.3848 c3708.793 -1440.8125 3708.5596 -1445.2813 3709.1641 -1449.7197 c3710.541 -1459.8242 3714.0527 -1469.5107 3714.6992 -1479.7031 c3715.2656 -1488.6348 3717.9414 -1497.3262 3719.8398 -1506.0254 c3722.0742 -1516.2637 3723.25 -1526.8145 3725.1816 -1537.1279 c3728.9082 -1557.0225 3732.2227 -1577.1592 3735.085 -1597.1982 c3737.9395 -1617.1826 3741.7539 -1637.2314 3742.3604 -1657.4385 c3743.5273 -1696.3115 3745.8955 -1734.8184 3741.2402 -1773.5928 c3738.8223 -1793.7422 3734.3213 -1813.4785 3732.3496 -1833.709 c3730.4375 -1853.3359 3728.7227 -1872.8018 3721.9316 -1891.4717 c3716.8037 -1905.5723 3711.585 -1919.6367 3705.2148 -1933.2334 c3698.4199 -1947.7402 3689.2275 -1960.9033 3682.2148 -1975.291 c3675.498 -1989.0723 3671.2119 -2003.8906 3664.21 -2017.542 c3657.1211 -2031.3623 3652.4805 -2046.9033 3647.8184 -2061.6719 c3638.3037 -2091.8066 3630.2705 -2123.166 3626.75 -2154.5996 c3626.5508 -2156.377 3626.3701 -2158.1523 3626.2012 -2159.9277 C3638.9629 -2159.9277 L3640.0752 -2149.8574 3641.6289 -2139.833 3643.5303 -2129.9277 c3647.4033 -2109.7549 3653.1563 -2089.6426 3658.9004 -2069.9277 c3661.6689 -2060.4229 3665.0791 -2051.1172 3668.2988 -2041.7588 c3671.5732 -2032.2441 3676.4873 -2023.6797 3680.1914 -2014.4199 c3683.8828 -2005.1895 3687.5752 -1995.959 3691.2676 -1986.7275 c3695.2627 -1976.7402 3701.0986 -1967.4756 3706.6123 -1958.2803 c3716.5 -1941.792 3723.7217 -1923.875 3730.4355 -1905.9121 c3737.3115 -1887.5166 3741.6396 -1869.6133 3743.7588 -1850.0771 c3744.7754 -1840.7012 3745.5146 -1831.2988 3746.5879 -1821.9287 c3747.8213 -1811.1533 3750.1914 -1800.5781 3751.9434 -1789.8857 c3755.1348 -1770.4141 3756.7715 -1750.7227 3757.3242 -1731.0098 c3757.8691 -1711.583 3755.6406 -1692.3867 3755.5 -1673 c3755.3594 -1653.6387 3753.5332 -1635.1309 3750.7969 -1615.9775 c3747.8701 -1595.4902 3743.873 -1575.1084 3741.1855 -1554.5996 c3739.9492 -1545.1641 3738.1113 -1535.8242 3736.3721 -1526.4717 c3734.4678 -1516.2363 3733.2363 -1505.9258 3730.8232 -1495.791 c3728.6641 -1486.7227 3728.1953 -1477.6348 3726.375 -1468.5693 c3724.3477 -1458.4707 3721.7354 -1449.0635 3721.4326 -1438.6924 c3721.1592 -1429.334 3717.7734 -1420.3691 3717.5 -1411 c3717.1816 -1400.1113 3715.4697 -1389.123 3714.3711 -1378.29 c3712.2471 -1357.3486 3711.9854 -1336.5557 3711.0742 -1315.5605 c3709.6836 -1283.4922 3705.4102 -1251.7393 3705.5107 -1219.5879 c3705.5625 -1203.3086 3707.1563 -1187.8154 3710.0684 -1171.8281 c3712.8242 -1156.6924 3715.2295 -1142.0342 3715.4619 -1126.5996 c3715.6826 -1111.9795 3718.3281 -1095.6504 3723.9551 -1082.0859 c3726.4443 -1076.083 3727.4561 -1069.7915 3728.8848 -1063.4897 c3730.5977 -1055.9404 3731.957 -1048.3467 3733.3418 -1040.728 c3736.2539 -1024.7012 3742.792 -1009.9756 3746.4551 -994.228 c3747.9355 -987.8628 3748.7256 -981.4727 3750.749 -975.2466 c3752.1563 -970.9175 3753.4736 -966.2969 3753.5 -961 c3753.5391 -953.3076 3742.6094 -952.6816 3740.7686 -959.0991 C3739.126 -952.5781 3729 -953.4893 3728.25 -961 C3728 -961 L3728 -962.332 L3727.2754 -965.126 3725.3047 -967.9272 3723.9951 -970.3174 c3721.9648 -974.0215 3721 -978.2817 3719.6699 -982.272 c3716.585 -991.5264 3711.5742 -999.7451 3706.4473 -1008.0361 c3702.2881 -1014.7617 3702.9795 -1023.7749 3700.7168 -1031.272 c3697.6768 -1041.3418 3694.958 -1051.4648 3691.6563 -1061.4658 c3685.1963 -1081.0293 3679.6133 -1100.2461 3675.2832 -1120.3828 c3670.9629 -1140.4785 3666.8496 -1160.5703 3662.7559 -1180.7002 c3660.9346 -1189.6592 3658.582 -1198.4932 3657.3848 -1207.5713 c3656.1006 -1217.3008 3656.5 -1227.1328 3656.5 -1236.9258 c3656.5 -1255.5908 3654.2852 -1274.2012 3653.7617 -1292.8887 c3652.6143 -1333.8369 3653.0537 -1374.8574 3655.9473 -1415.7285 c3656.5811 -1424.6855 3656.624 -1433.6563 3657.918 -1442.5605 c3659.3291 -1452.2822 3661.6445 -1461.8203 3663.2188 -1471.4961 c3666.1699 -1489.6494 3671.1621 -1507.4404 3675.2285 -1525.3242 c3677.2422 -1534.1816 3679.1357 -1543.1338 3680.8945 -1552.0391 c3682.7793 -1561.5869 3683.5107 -1571.2998 3686.1016 -1580.71 c3688.5527 -1589.6162 3689.2129 -1599.3281 3690.6143 -1608.4756 c3692.1309 -1618.377 3692.6191 -1628.1777 3693.4121 -1638.1494 c3696.4766 -1676.7061 3693.7031 -1715.6025 3692.2676 -1754.1641 c3690.8477 -1792.3457 3681.1689 -1830.4375 3666.0684 -1865.4453 c3659.585 -1880.4756 3649.5508 -1893.3916 3642.2627 -1907.9697 c3634.3652 -1923.7627 3626.4229 -1939.4492 3619.3877 -1955.6455 c3612.6582 -1971.1367 3605.0273 -1986.1445 3597.7061 -2001.3555 c3590.624 -2016.0693 3584.8008 -2031.1729 3579.0996 -2046.458 c3573.248 -2062.1426 3567.6426 -2077.9277 3564.0547 -2094.3066 c3560.6504 -2109.8486 3556.7061 -2125.4063 3556.4531 -2141.3652 c3556.3555 -2147.5605 3556.0273 -2153.7451 3555.668 -2159.9277 C3568.5703 -2159.9277 Lf*u1 D3569.377 -1108.2061 m3563.2588 -1116.1416 3566.1934 -1126.5869 3571.8037 -1133.7461 c3582.4521 -1147.3359 3602.6172 -1147.9238 3618.4102 -1147.459 c3627.6348 -1147.1865 3636.7334 -1142.082 3640.3223 -1133.3857 c3644.2227 -1123.9355 3638.0195 -1111.4404 3630.7695 -1105.2559 c3628.5059 -1103.3262 3625.4629 -1099.2305 3622.1123 -1096.5654 c3618.5508 -1093.7334 3614.7266 -1091.7617 3610.5059 -1090.0996 c3601.9375 -1086.7256 3592.0801 -1086.5303 3583 -1086.5 c3575.4219 -1086.4746 3574.6973 -1097.0898 3580.8164 -1099.1523 C3576.4189 -1101.0908 3572.5508 -1104.0889 3569.377 -1108.2061 cf0 D3579.1543 -1117.5547 m3580.4492 -1111.874 3588.0449 -1109.6504 3593 -1109.5 c3598.1836 -1109.3428 3600.1602 -1104.2891 3598.9199 -1100.5293 C3605.1348 -1101.5996 3611.0195 -1103.7852 3615.873 -1108.3018 c3617.9805 -1110.2627 3619.4004 -1112.9277 3621.7188 -1114.6123 c3624.5166 -1116.6455 3626.3281 -1119.6709 3627.4727 -1122.876 c3628.6836 -1126.2686 3628.8594 -1128.75 3626.3076 -1131.3799 c3624.3486 -1133.3975 3621.1074 -1134.2188 3618.4102 -1134.459 c3608.0781 -1135.376 3595.0625 -1134.7285 3585.9893 -1129.3203 c3582.2715 -1127.1035 3578.1152 -1122.1182 3579.1543 -1117.5547 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF