%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 1.eps)%%CreationDate: 04.10.18 13:21%%Canvassize: 16383%%BoundingBox: 23 -2149 3841 -26%%HiResBoundingBox: 23.1992 -2149 3841 -26.6084%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1655 639 0.25 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5318 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD09FF60AFFD7CFFAF5AAF60FD7CFF60FFFF85AFFD2FFFAFFFFFAF%84FD46FF36AFFFFF84A9FD2EFF6060A9855A855AFD44FF60FD05FF84FD2E%FF8BA96060FFAF85FD20FFA9AF84FFFFFFA9FD1CFF84605AAFFFFFFF85A9%FD2DFF84AF5AFFA860A9FD1BFFA9A984856084846060AF5A856085FD1BFF%6060AFFFFF8536AFFD2CFF846036856085AFFD1AFFAF608584AFA9FD04FF%8584FFFFFF60AFFD07FFAFFFFFAFAF84FD0CFF8460FD04FF5A84A8FD2BFF%5A6036A9A83C84FD1BFFA8AFFD0EFF5AFD06FF855A845A60846084FD0AFF%A961FD05FFAF84FD2DFF60855A8560FD2CFFAF60FD04FF8584FFA8FD04FF%85FD0AFF60A8FD06FF60AFFD2DFF84605A85FD2DFF8484FFFF6084FD07FF%60AFFD08FFAF84FFA9FF84FFAFAF84AFFD2FFFAFAFFD2EFF84848584FD08%FFAF84FD05FFAFFFFF5A855A36A884AFAF13605AFD5FFFA83684FD09FFA9%60FD05FF84FFFF8B848584FF84FFFF858460FD5FFF61A8FD0BFF84AFFD04%FF60FD04FF5AFFA885FFFF60FD5FFFA860A8FD0CFFA984FFFFFFA885FFFF%FF60AFFFAF84FFFF8584FD5DFFA960AFFD0DFFAF85FFFFFF8584FFFFA860%FFFF8485FFFF8484FD5DFFAFA9FD0FFF60FFFFFF5AFFFFFF85A9FFFFAF84%FFFFFF60FD6EFF85AFFFAF85FFFFAF60FFFFFF84A9FFFFFF84A8FD6DFF84%AFFFAF84FFFF5AAFAFFFFF85A9FFFFFF8485FD70FF60AFFFA8606036A8FF%5AFFA96084FF60FD6FFFAF60A8FFFFFFAF60FFFF85FFFF5A858485FD6FFF%AF84FD04FF5AFFFFAF60FFFF84A88536FD6FFF60AFFFFFFF8485FFFFAF85%FFFF848BFD70FFAF85FD04FF60A9FFFFAF84FFFFAF60FD70FF8584FFFFFF%AF84FFFFFF85AFFFFFFF85FD70FF60FD04FF60AFFFFFFF8584FFFFFF84AF%FD61FFAFA9FD0BFFA884FD04FF85FD04FF60FD04FFAF84FD60FFAF5A61FD%0BFF85A9FD04FF5A8484A98460A8FFFFFFA884FD5FFFAF5AFF5AFD0AFFAF%5AFFA8FD04FFA9AF85853685848584AF60FD5EFF8B60FFFF8B84FD09FF60%FF6060FD07FFA885FFFFA88584AFFD5CFFA96060FFFFFFA860FD08FF8484%606060FD07FF8BA9FD61FF8485AFFD05FF8485FD07FF605AAF84AFFD07FF%5AFD61FF843684AF84A9AFFFA8A95AAFFD06FF84FFFF84A8FD06FFAF8BFD%62FFAFAFAF8536FFFF85366184FD09FF60FD08FFA9FD64FFAF5AFFFFFFAF%60A8FD09FF8485FD6CFF8560FD05FF8485FD09FF85AFFD08FFAF85FD60FF%A86084FD07FF5AAFFD07FFAF5AFD0AFF60FD61FF5AAF8485A9FD05FF60FD%07FF60AFFD0AFF855AAFFD60FFA98436AFFFFF608584605AFD05FFA860FD%09FF60858460A9FD60FFAF60FFFFAFA96084AF84AFFD05FF85AFFD09FF60%846013605AAFFD5DFF845AFFFFFF60AFA860FD07FF855AFFA8FD08FF363C%3636846185FD5CFF8584FD04FF8BAFFF8485FD06FF60FF8460FD07FFA860%5A3C5A6084FD5DFF5A8484AF84AF84AFFFFF8485FD04FF36845A8560FD0A%FFAF8560AFFD5EFFAFAFA86060AFA8FF84AF5AAFFFFF5A6084FF84AFFD0B%FFA8FD62FFA95AFF84A9A836606084FFFFFFA9FFFF60A8FD6DFFAF60FFFF%8B84FFAF85FD07FF8584FD6DFF855AFFA9FF84AFFFFF8460FD06FF5AFD6E%FF608B8485606060AF84FF8485FD04FF84AFFD73FF846084855A845AFFFF%FFA860FD75FF84FD08FF61A9FD74FFA885FD07FF8584FD76FF84FD06FF85%84FD76FFA984FD05FF855AFFA8AFFD75FF60FD05FF6085848536FD74FFAF%60FD08FFA885FD0CFFAFAFFFFF8560AFFD62FF84FD08FF60A9FD0BFFAF36%84846084AF84FD61FFA9FD08FF8584FD0DFF8BA98560FF846060AFFD68FF%60FD0DFFAF603684AFA86084AF36FD67FF5AAFFD0CFF8584AFAF85606084%AF5AAFFD22FFAFAFAFFD41FFA985FD0CFFAF36FFFFFF36FF8485A8605AFD%21FFA86084FD41FFAF60A8FD0DFFAF848536AF608584AFFFAF60FD20FFAF%84FD42FFAF84FD09FFA98560FD04FF6085FF3684AF35858484FD20FFA885%FD04FFA9FD3DFF848584A984AFA8AF84855A6084FD04FFAF61FF603685AF%85AFAFAFFD1DFF84AFAFFF5A8584AF8461FFAFAFFD0BFF84AFAFFD2DFF84%AF8485608584AFA985A9FD06FF5A848484606084FD1EFFA95A8584853684%A83635845A6036FD0BFF5A84848584843660A8FD31FF84A9FD09FF60FFA9%FD1FFF60FD05FF608584AF84858585A9FD05FFAF85A9FF60AFFFFFA96013%3C606084FD30FFAF85FD08FFAF60FD21FFAFFD05FF845AFFFFFFA8608460%84FD05FF36366085FFFFAF603660A8AF8484FD30FF84AFFD09FF60FFA8AF%AFFD22FFAF8485A960FFFFFF8536AFFD06FF843C368584FFA985FFFFAFAF%84FD30FF85A8FD04FF5A365A848460363635AFFD22FFA8FF60A984FF60AF%FF3C84FD08FF6036AFFFFF5AAFFFAF8485FD30FF60FD06FF84855A613660%84FD26FF605AFFFFAFFFFF60AFFD08FF60FD05FF6085FF85A9FD2FFFAF60%AFFD09FFAF84FD27FFA9AF3585A8AF6085FD09FF84A8FD05FF84605AFD31%FF60846085FD08FF85FD29FFAFA88584AFFD0AFF84AFFD45FFA8FD39FFA8%FD3CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 Au0 O0.788052 0.235294 0.156313 0.000031 0 0.6 0.74902 Xa0 J 0 j 1 w 10 M []0 d0 XR3841 -2090.3857 m3835.8965 -2090.3154 3830.7383 -2090.2119 3825.7012 -2090.7646 c3820.21 -2091.3672 3814.8154 -2092.7305 3809.3096 -2093.2207 c3801.2314 -2093.9414 3793.0762 -2092.8027 3785.0742 -2091.8037 c3777.584 -2090.8682 3770.1035 -2090.8018 3762.6113 -2090.1094 c3755.0078 -2089.4072 3747.6133 -2087.2461 3739.918 -2087.4492 c3737.5078 -2087.5137 3735.0967 -2087.9248 3732.6934 -2088.1094 c3731.9707 -2088.165 3731.1357 -2088.2461 3730.3643 -2088.2168 C3732.1504 -2084.2266 3735.9141 -2080.3916 3738.2129 -2077.1113 c3741.3721 -2072.6045 3746.4961 -2068.333 3747.2695 -2062.6465 c3748.0449 -2056.9492 3747.3926 -2050.9814 3747.584 -2045.2324 c3748.0713 -2030.5391 3752.6289 -2016.29 3753.4199 -2001.5947 c3754.2529 -1986.1338 3754.8076 -1970.6572 3755.7881 -1955.1875 c3756.7939 -1939.291 3757 -1923.418 3757 -1907.4971 C3757 -1862.8223 L3766.3926 -1859.75 3775.6797 -1856.3594 3784.8008 -1852.4883 c3800.3203 -1845.9014 3816.1816 -1839.6035 3832.7383 -1836.1621 c3835.4551 -1835.5977 3838.2295 -1834.8633 3841 -1834.1133 C3841 -1820.6152 L3840.4092 -1820.7129 3839.8789 -1820.8027 3839.46 -1820.8906 c3834.165 -1822.002 3829.1055 -1823.5879 3823.8809 -1824.8311 c3808.7725 -1828.4268 3793.9277 -1834.3545 3779.7461 -1840.6113 c3770.6201 -1844.6377 3761.2324 -1848.0693 3751.7041 -1851.1309 C3749.1895 -1850.6904 3746.3965 -1851.4063 3744.8037 -1853.2832 C3744.3701 -1853.4141 3743.9365 -1853.5459 3743.502 -1853.6758 c3727.9551 -1858.3096 3712.1201 -1862.1055 3696.4854 -1865.9346 c3689.8262 -1867.5654 3683.1621 -1869.1797 3676.5068 -1870.8252 c3668.4023 -1872.8301 3659.5996 -1872.8604 3651.2852 -1873.3379 c3634.8408 -1874.2852 3618.3564 -1874.375 3601.8896 -1874.3975 c3585.8154 -1874.4189 3569.7314 -1874.4932 3553.667 -1873.8516 c3538.3164 -1873.2393 3523.1719 -1870.5352 3507.8379 -1870.0254 c3496.7637 -1869.6563 3485.6885 -1870.1221 3474.6221 -1869.4121 c3469.2266 -1869.0654 3464.7412 -1867.7783 3459.7119 -1865.9883 c3458.5527 -1865.5762 3457 -1865.0273 3456 -1864.0596 C3456 -1863 L3456 -1855 3443.4727 -1855 3443.4727 -1863 c3443.4727 -1868 3444.877 -1871.499 3448.9102 -1874.6416 c3453.624 -1878.3145 3461.0791 -1880.9932 3466.9336 -1881.6885 c3482.3926 -1883.5264 3497.9336 -1882.459 3513.4434 -1883.2783 c3528.7754 -1884.0889 3543.9072 -1886.5645 3559.3018 -1887.0605 c3575.4619 -1887.582 3591.6504 -1887.4336 3607.8174 -1887.3887 c3624.293 -1887.3428 3640.7686 -1887.0547 3657.2129 -1885.9756 c3664.7754 -1885.4795 3672.5938 -1885.1914 3679.9629 -1883.3623 c3687.1816 -1881.5693 3694.4131 -1879.8242 3701.6387 -1878.0547 c3715.6953 -1874.6113 3729.75 -1871.0713 3743.6299 -1866.9785 C3743.8359 -1886.3145 3744.0889 -1929.1221 3742.6514 -1953.4043 c3741.7344 -1968.8867 3740.6563 -1984.2734 3740.4805 -1999.7881 c3740.3145 -2014.4932 3735.7539 -2028.7881 3734.6816 -2043.4316 c3734.2803 -2048.9082 3734.502 -2054.4531 3734.502 -2059.9395 c3734.502 -2062.6699 3730.5986 -2064.3799 3729.3887 -2066.6416 c3728.0361 -2069.167 3726.3564 -2071.4707 3724.6758 -2073.7852 c3721.6016 -2078.0176 3718.5195 -2082.2393 3716.9873 -2087.3096 c3715.0459 -2093.7295 3719.6709 -2098.3613 3725.248 -2100.4531 c3729.7813 -2102.1543 3735.2637 -2100.7617 3739.9141 -2100.4492 c3747.4385 -2099.9453 3755.166 -2102.2246 3762.6035 -2103.1094 c3770.0469 -2103.9961 3777.5859 -2103.8809 3785.0586 -2104.8037 c3793.127 -2105.7998 3801.1377 -2106.748 3809.2793 -2106.2207 c3817.8418 -2105.667 3825.959 -2103.4219 3834.5869 -2103.4219 c3836.7217 -2103.4219 3838.8613 -2103.4512 3841 -2103.459 C3841 -2090.3857 Lf3841 -339.8975 m3837.6563 -345.4092 3834.0801 -350.7744 3832.1777 -356.9985 c3825.5205 -378.7686 3821.6572 -400.9268 3813.8838 -422.4121 c3805.6973 -445.0396 3797.835 -467.7803 3791.1484 -490.9023 c3784.1816 -514.998 3778.8789 -539.5474 3772.0381 -563.6899 c3765.1816 -587.8896 3758.5791 -612.5488 3749.8535 -636.1475 c3741.4004 -659.0078 3731.6826 -681.2637 3723.8174 -704.3691 c3708.082 -750.5977 3690.9658 -795.4746 3667.9951 -838.6841 c3656.7041 -859.9233 3643.8027 -880.1484 3631.4375 -900.7568 c3625.084 -911.3457 3618.7305 -921.9351 3612.377 -932.5244 c3607.666 -940.375 3603.0479 -947.415 3602.4883 -956.8076 c3602.2471 -960.8594 3606.8525 -964.4277 3610.7168 -963.0752 c3616.6904 -960.9844 3622.4404 -958.4331 3628.0137 -955.4321 c3633.7695 -952.332 3638.3105 -948.0913 3644.334 -945.5483 c3658.3379 -939.6348 3670.4775 -930.8267 3682.542 -921.7212 c3694.7158 -912.5332 3705.8184 -901.9956 3715.9824 -890.6411 c3720.2373 -885.8892 3724.459 -881.4683 3728.8975 -876.9819 C3728.5762 -877.9966 3728.2832 -879.0234 3728.042 -880.0703 c3725.7539 -889.9946 3725.6602 -900.2813 3722.7324 -910.0747 c3716.502 -930.9106 3711.4922 -952.1167 3705.2646 -972.9653 c3692.9082 -1014.3242 3676.8281 -1054.5918 3658.4922 -1093.6514 c3640.8379 -1131.2588 3621.2422 -1168.8008 3598.8066 -1203.7949 c3576.7842 -1238.1445 3549.1201 -1268.4473 3520.3848 -1297.2461 c3516.459 -1301.1797 3519.2471 -1308.4922 3524.9805 -1308.3418 c3540.4922 -1307.9336 3555.3037 -1302.8018 3569.7432 -1297.5625 c3585.5859 -1291.8125 3601.6123 -1285.1797 3616.167 -1276.6426 c3630.2012 -1268.4111 3642.2412 -1256.9971 3654.6729 -1246.625 c3658.5957 -1243.3525 3662.9854 -1240.5615 3667.0547 -1237.4531 c3668.4746 -1236.3682 3671.9482 -1233.2119 3675.0127 -1231.375 C3674.3535 -1237.1191 3671.4199 -1243.2471 3669.5615 -1248.0645 c3666.0508 -1257.1631 3662.6875 -1266.2207 3660.0166 -1275.6113 c3657.0879 -1285.9053 3655.3506 -1297.9453 3649.792 -1307.209 c3642.9092 -1318.6807 3636.0264 -1330.1523 3629.1426 -1341.624 c3616.4434 -1362.791 3605.0977 -1385.9307 3595.2119 -1408.5566 c3591.0273 -1418.1328 3586.4229 -1427.5059 3581.2002 -1436.5596 c3575.2646 -1446.8486 3567.7139 -1455.8652 3560.9434 -1465.5654 c3547.7383 -1484.4814 3531.5947 -1501.7734 3516.7178 -1519.3877 c3504.1172 -1534.3066 3491.3701 -1549.8359 3476.459 -1562.5176 c3468.2813 -1569.4727 3454.7422 -1579.9043 3455.2617 -1591.9414 c3455.6299 -1600.4619 3465.4395 -1600.8086 3471.9492 -1600.6475 c3483.0527 -1600.3711 3494.3789 -1599.6631 3505.4785 -1598.9961 c3512.5313 -1598.5723 3519.3193 -1596.9609 3526.2344 -1595.666 c3534.54 -1594.1094 3543.0713 -1593.6504 3551.4736 -1592.8623 c3563.7344 -1591.7129 3576.0547 -1589.1299 3588.3555 -1587.9404 C3586.9121 -1590.8545 3584.998 -1593.6123 3583.4102 -1596.2832 c3580.499 -1601.1816 3577.998 -1606.2695 3575.1025 -1611.1924 c3568.9014 -1621.7373 3565.5234 -1633.5459 3558.3721 -1643.5957 c3550.5068 -1654.6475 3544.4609 -1667.5186 3537.21 -1679.0371 c3529.6973 -1690.9707 3521.9141 -1702.7334 3514.1113 -1714.4785 c3499.1777 -1736.9512 3486.9043 -1760.5117 3473.9932 -1784.1602 c3461.4619 -1807.1133 3444.7871 -1827.9443 3434.7041 -1852.1689 c3431.4824 -1859.9072 3444.0664 -1863.2471 3447.2393 -1855.624 c3457.5352 -1830.8926 3475.21 -1809.2695 3487.9316 -1785.7246 c3501.3203 -1760.9492 3514.8145 -1736.9453 3530.373 -1713.4453 c3545.5293 -1690.5537 3559.9619 -1667.2031 3573.8672 -1643.5557 c3580.0684 -1633.0107 3583.4473 -1621.2021 3590.5986 -1611.1523 c3593.5811 -1606.9629 3595.6777 -1601.1543 3598.3223 -1596.6133 c3601.2051 -1591.665 3603.0664 -1586.5879 3603.4873 -1580.8701 c3603.7422 -1577.4111 3600.3379 -1574.2656 3596.9873 -1574.3701 c3586.7598 -1574.6885 3575.7578 -1576.1973 3565.7295 -1578.0752 c3553.8682 -1580.2969 3541.6602 -1580.5459 3529.7021 -1582.0928 c3517.8936 -1583.6211 3506.75 -1586.2139 3494.7549 -1586.3574 c3489.5625 -1586.4199 3484.4805 -1586.5303 3479.3086 -1587.0381 c3476.043 -1587.3584 3472.6309 -1587.8682 3469.3105 -1587.71 C3471.4453 -1584.374 3476.0303 -1580.502 3477.5293 -1579.0264 c3481.5566 -1575.0625 3485.9922 -1571.5693 3490.2041 -1567.8135 c3507.4316 -1552.4512 3522.0332 -1533.2969 3536.7764 -1515.6191 c3551.2695 -1498.2383 3565.3008 -1480.749 3579.085 -1462.8174 c3592.9023 -1444.8438 3601.2578 -1424.8223 3611.3008 -1404.7324 c3622.6475 -1382.0381 3633.6641 -1359.3594 3646.7217 -1337.5967 c3652.6172 -1327.7705 3660.0557 -1317.877 3664.1846 -1307.1777 c3668.3438 -1296.4023 3670.79 -1284.9873 3674.0391 -1273.9229 c3678.4863 -1258.7793 3689.9238 -1241.4697 3687.8584 -1225.249 c3685.4863 -1206.624 3663.0615 -1224.2803 3656.2852 -1229.4443 c3637.8662 -1243.4824 3620.9609 -1260.1768 3600.0293 -1270.5547 c3588.2373 -1276.4004 3576.1113 -1281.4609 3563.7441 -1285.9492 c3557.0117 -1288.3926 3550.1221 -1290.833 3543.1025 -1292.6201 C3566.9824 -1267.7559 3589.415 -1241.5586 3608.4785 -1212.7402 c3632.4229 -1176.5439 3652.5254 -1136.834 3670.9473 -1097.5947 c3689.3496 -1058.3926 3705.2861 -1017.8809 3717.7998 -976.4209 c3724.0869 -955.5913 3729.6621 -934.5513 3735.2676 -913.5308 c3737.8975 -903.6699 3738.6133 -893.5259 3740.5781 -883.5264 c3742.3252 -874.6289 3747.0684 -867.1748 3747.502 -857.7974 c3747.6816 -853.9063 3743.1426 -849.9595 3739.2734 -851.5293 c3734.3916 -853.5107 3730.5859 -856.2529 3726.8525 -859.9697 c3724.9766 -861.8374 3723.2764 -863.896 3721.5146 -865.8691 c3719.7451 -867.8516 3716.9941 -869.2349 3715.4043 -871.2031 c3705.4844 -883.4834 3694.6367 -894.7729 3682.6543 -905.0547 c3671.8184 -914.3525 3659.9287 -922.9243 3647.4053 -929.79 c3643.9912 -931.6621 3640.4414 -933.2349 3636.8145 -934.6406 c3632.9619 -936.1338 3631.0078 -937.8726 3627.708 -940.3105 c3625.0811 -942.251 3622.2402 -943.9424 3619.2949 -945.4521 C3622.0762 -940.3545 3625.7842 -935.4487 3628.3672 -931.144 c3635.25 -919.6724 3642.1328 -908.2007 3649.0166 -896.7285 c3661.2559 -876.3286 3673.6299 -856.2061 3684.5664 -835.0469 c3706.6523 -792.3179 3722.6396 -747.7305 3738.2236 -702.3545 c3746.1406 -679.3037 3756.1768 -657.1328 3764.3496 -634.2026 c3772.835 -610.3984 3779.3877 -585.6167 3786.2246 -561.2954 c3792.999 -537.1997 3798.2754 -512.7207 3805.332 -488.707 c3812.0977 -465.6816 3820.1836 -443.0645 3828.3604 -420.5103 c3832.083 -410.2402 3835.0391 -399.9248 3837.5459 -389.292 c3838.707 -384.3711 3839.8271 -379.4409 3841 -374.5229 C3841 -339.8975 Lf*u1 D1716 -1970 m1680 -1970 L1679.0161 -1970 1678.1465 -1970.1631 1677.3774 -1970.4395 C1675.1099 -1966.9951 1672.5342 -1963.6611 1670.2954 -1960.2939 c1666.9336 -1955.2373 1663.4185 -1950.2881 1659.5 -1945.6436 c1655.603 -1941.0254 1650.9131 -1937.7031 1645.9053 -1934.8262 C1648.2627 -1934.0645 1650.2051 -1932.0918 1650.292 -1928.9043 c1650.5664 -1918.8057 1656.793 -1907.3389 1665.0742 -1901.5137 c1671.873 -1896.7314 1665.3877 -1885.4531 1658.5127 -1890.2891 c1646.3521 -1898.8428 1637.6987 -1913.9473 1637.292 -1928.9043 c1637.2783 -1929.4063 1637.3145 -1929.877 1637.3906 -1930.3184 C1636.333 -1929.7832 1635.2734 -1929.2461 1634.2148 -1928.7012 C1633.2407 -1926.8838 1631.4331 -1925.5088 1628.79 -1925.4043 c1628.4868 -1925.3926 1628.2197 -1925.3438 1627.9375 -1925.3105 C1625.4922 -1923.9238 1623.0879 -1922.4814 1620.7412 -1920.9639 C1620.3193 -1920.4873 1619.8945 -1919.9961 1619.4536 -1919.4766 c1616.1318 -1915.5684 1611.9385 -1912.8018 1607.3574 -1910.6875 C1604.8901 -1908.3994 1602.5537 -1905.9531 1600.3833 -1903.3066 c1596.8071 -1898.9453 1591.5093 -1901.7012 1590.0181 -1905.9268 C1589.6963 -1905.875 1589.374 -1905.8242 1589.0527 -1905.7715 C1589.8135 -1904.7842 1590.2852 -1903.4951 1590.2856 -1901.9023 c1590.2881 -1894.5566 1589.0244 -1882.4004 1594.3823 -1876.4941 c1600 -1870.3027 1590.834 -1861.0811 1585.1899 -1867.3027 c1576.9507 -1876.3838 1577.2896 -1890.3848 1577.2856 -1901.9023 c1577.2852 -1902.6914 1577.4004 -1903.4063 1577.6089 -1904.0459 C1571.8262 -1903.249 1566.0278 -1902.5664 1560.2119 -1902.0674 c1552.8594 -1901.4365 1545.8086 -1900.9814 1538.6143 -1902.7197 c1531.7393 -1904.3809 1524.8711 -1906.0352 1518.1094 -1908.1191 C1511.8652 -1893.3164 1497.1221 -1883.2021 1480.2788 -1882.6328 c1469.9399 -1882.2832 1459.3115 -1884.5996 1449.5 -1887.8262 C1448.9399 -1887.3496 1448.2793 -1886.9404 1447.4995 -1886.6328 c1444.4512 -1885.4297 1442.9932 -1879.9092 1442.1504 -1877.1563 c1441.0381 -1873.5205 1440.3291 -1869.7041 1440.2705 -1865.8984 c1440.2183 -1862.4893 1439.251 -1858.8984 1438.8799 -1855.4951 c1438.4219 -1851.3008 1438.1401 -1847.0879 1437.8984 -1842.875 c1437.4146 -1834.4375 1437.3218 -1825.9775 1437.2822 -1817.5273 c1437.2549 -1811.7422 1436.3643 -1805.457 1439.5342 -1800.3223 c1441.7319 -1796.7627 1446.5718 -1795.1484 1450.3213 -1793.9805 c1455.5957 -1792.3359 1461.1445 -1791.3223 1466.5166 -1790.0645 c1471.6899 -1788.8535 1478.9961 -1788.6777 1483.1802 -1792.4863 c1489.3633 -1798.1162 1498.584 -1788.9492 1492.3726 -1783.2949 c1480.2842 -1772.2891 1463.2739 -1777.208 1449.209 -1780.7871 c1442.6328 -1782.4609 1436.2598 -1785.1836 1431.3364 -1789.957 c1425.7495 -1795.373 1424.27 -1803.1309 1424.2705 -1810.5889 c1424.271 -1820.1367 1424.3301 -1829.6826 1424.7202 -1839.2236 c1425.1035 -1848.5928 1426.918 -1857.8828 1427.3086 -1867.2021 c1427.6709 -1875.8311 1429.9502 -1886.2363 1435.7798 -1893.127 C1430.6211 -1895.709 1426.0156 -1899.1748 1423.7583 -1904.3145 c1421.8213 -1908.7256 1421.0151 -1913.4824 1420.9692 -1918.3711 C1411.9229 -1916.1563 1403.0557 -1913.2734 1394.0942 -1910.7295 c1383.0171 -1907.584 1371.6885 -1906.2969 1360.3247 -1904.6084 c1349.5029 -1903.001 1338.6563 -1901.5146 1327.73 -1900.8477 c1317.0059 -1900.1924 1306.1528 -1900.0898 1296.1313 -1904.2383 c1278.9712 -1911.3418 1263.9146 -1923.167 1256.9707 -1940.8057 c1253.8491 -1948.7344 1251.7402 -1955.7793 1253.1104 -1964.3857 c1254.436 -1972.7119 1261.0049 -1979.2959 1268.4736 -1982.5215 c1276.085 -1985.8096 1282.7129 -1974.6133 1275.0352 -1971.2969 c1269.5234 -1968.916 1265.8496 -1965.4512 1265.5146 -1959.2129 c1265.1729 -1952.8457 1268.3867 -1946.0674 1271.2402 -1940.5586 c1274.7637 -1933.7588 1280.4961 -1928.2734 1286.7109 -1923.9307 c1292.6787 -1919.7598 1300.834 -1914.7559 1308.2065 -1914.0332 c1327.4214 -1912.1504 1346.8691 -1915.668 1365.8135 -1918.4766 c1375.5103 -1919.9141 1384.8027 -1921.5645 1394.2388 -1924.2979 c1403.6338 -1927.0195 1412.9326 -1930.0254 1422.5103 -1932.0547 C1424.0986 -1939.4492 1426.6611 -1946.6973 1429.0044 -1953.0869 c1433.5977 -1965.6133 1441.3584 -1983.7998 1456.793 -1983.416 C1456.1172 -1988.2236 1455.7393 -1993.0801 1455.6421 -1997.9336 c1455.1587 -2022.1348 1463.4639 -2045.5869 1479.3242 -2063.5967 C1475.415 -2065.5781 1471.6821 -2067.8613 1467.8091 -2070.0332 c1465.165 -2071.5166 1461.3184 -2072.1826 1459.1772 -2074.3242 c1456.1768 -2077.3242 1453.1768 -2080.3242 1450.1763 -2083.3242 c1444.2432 -2089.2559 1453.4355 -2098.4482 1459.3687 -2092.5156 c1461.5117 -2090.373 1463.6553 -2088.2305 1465.7979 -2086.0879 c1467.8472 -2084.0391 1470.2983 -2083.3281 1472.9878 -2081.9941 c1478.5039 -2079.2568 1483.4092 -2075.4541 1489.2148 -2073.3018 C1497.0049 -2080.0303 1505.6748 -2085.8047 1514.4692 -2091.0586 c1518.0098 -2093.1738 1521.6309 -2095.1309 1525.2612 -2097.0596 C1521.4707 -2110.0703 1514.5845 -2122.001 1514.2793 -2135.9258 c1514.0957 -2144.3145 1527.0957 -2144.2959 1527.2793 -2135.9258 c1527.5313 -2124.4355 1533.1611 -2114.0938 1536.8584 -2103.3203 C1540.7441 -2105.5176 1544.5522 -2107.8457 1548.1875 -2110.4775 c1553.4487 -2114.2871 1558.9419 -2117.7207 1564.9189 -2120.2891 c1571.6641 -2123.1875 1578.3779 -2123.2588 1585.3115 -2125.0664 c1598.874 -2128.6035 1613.3584 -2129.6025 1627.23 -2127.543 c1640.6602 -2125.5488 1651.4575 -2119.5771 1663.2578 -2113.3057 c1673.1631 -2108.041 1684.7422 -2100.5879 1689.0635 -2089.6484 c1690.1021 -2087.0195 1691.0688 -2084.3828 1691.9585 -2081.7344 C1694.626 -2087.1523 1704.4688 -2086.2285 1704.2979 -2078.9199 c1704.1025 -2070.5977 1701.5449 -2062.8135 1697.791 -2055.4688 C1698.0488 -2052.9053 1698.2178 -2050.3184 1698.2822 -2047.7021 c1698.4395 -2041.2861 1698.2964 -2034.8486 1698.2964 -2028.4307 c1698.2964 -2021.2363 1698.5073 -2014.6504 1696.3647 -2007.7061 c1693.6563 -1998.9268 1689.0415 -1990.9668 1684.521 -1983 C1716 -1983 L1724 -1983 1724 -1970 1716 -1970 Cf0 D1511.2056 -1928.1641 m1508.9639 -1928.1934 1506.7246 -1928.2471 1504.4961 -1928.2979 C1505.9482 -1927.3779 1507.4199 -1926.4941 1508.9312 -1925.6973 C1509.4541 -1926.7666 1510.2568 -1927.5859 1511.2056 -1928.1641 Cf1456.0449 -1970.6416 m1453.5776 -1971.0313 1450.0498 -1966.5557 1448.2642 -1963.7881 c1445.0508 -1958.8086 1442.8271 -1953.2344 1440.832 -1947.6807 c1436.8501 -1936.5986 1432.1328 -1923.2549 1434.9399 -1911.4502 c1436.4478 -1905.1084 1446.0142 -1902.8086 1451.3784 -1900.8877 c1459.3389 -1898.0381 1467.728 -1896.1621 1476.1738 -1895.6875 c1483.7793 -1895.2607 1491.1133 -1896.5049 1497.2207 -1901.3574 c1501.0625 -1904.4092 1504.1128 -1908.3896 1506.0322 -1912.8477 C1498.1875 -1916.6318 1491.0537 -1921.5684 1484.4355 -1927.623 c1471.6543 -1939.3154 1463.5415 -1954.5039 1459.2856 -1970.8789 C1458.3164 -1970.5625 1457.2314 -1970.4541 1456.0449 -1970.6416 cf1682.7061 -2067.6221 m1681.1353 -2074.1709 1679.2178 -2081.6826 1675.4604 -2087.3164 c1672.2285 -2092.1621 1667.5322 -2095.75 1662.6294 -2098.7539 c1652.0645 -2105.2295 1640.7842 -2111.6025 1628.6016 -2114.1904 c1614.9961 -2117.0811 1600.4688 -2115.583 1587.1348 -2112.1055 c1583.9487 -2111.2744 1580.6997 -2111.418 1577.4692 -2110.7871 c1574.3936 -2110.1865 1571.4116 -2109.083 1568.5791 -2107.7676 c1562.167 -2104.7891 1556.3828 -2100.499 1550.7305 -2096.3057 c1545.7939 -2092.6436 1539.9443 -2090.2324 1534.5078 -2087.3613 c1528.5918 -2084.2383 1522.7715 -2080.9395 1517.0742 -2077.4346 c1506.4482 -2070.8984 1496.5151 -2063.3496 1488.125 -2054.0762 c1479.6523 -2044.7109 1474.3228 -2033.1348 1471.1968 -2020.9854 c1464.6963 -1995.7217 1469.6221 -1965.5713 1485.9922 -1945.0137 c1487.6938 -1942.876 1489.542 -1940.8115 1491.4961 -1938.8301 C1492.5981 -1940.3438 1494.4307 -1941.4053 1497 -1941.4053 C1519.2861 -1940.291 1529.9639 -1942.4209 v1536.0732 -1943.6396 1541.7627 -1946.0684 1547.7749 -1947.5977 c1553.0923 -1948.9502 1558.3037 -1950.5889 1563.4751 -1952.418 c1583.9756 -1959.6709 1602.3994 -1971.9434 1619.1143 -1985.6504 c1627.5332 -1992.5547 1635.5493 -1999.9287 1643.2686 -2007.6035 c1651.0151 -2015.3047 1659.2568 -2023.332 1665.8433 -2032.0674 c1671.6738 -2039.7998 1679.127 -2048.3252 1684.4619 -2057.5674 C1684.0684 -2060.9307 1683.5068 -2064.2832 1682.7061 -2067.6221 cf1685.2964 -2026.7832 m1685.2964 -2029.9619 1685.3296 -2033.1367 1685.3418 -2036.3066 C1682.7949 -2032.9199 1680.2134 -2029.624 1677.7515 -2026.4082 c1663.5996 -2007.9219 1646.1807 -1991.2832 1628.293 -1976.458 c1610.1699 -1961.4375 1590.499 -1948.7373 1568.3984 -1940.4277 c1563.2979 -1938.5107 1558.0767 -1936.9277 1552.8213 -1935.4951 c1546.2856 -1933.7148 1540.0391 -1931.3828 1533.4199 -1929.8857 c1528.5742 -1928.7891 1523.5894 -1928.3496 1518.5664 -1928.2051 C1520.1978 -1927.2041 1521.3418 -1925.4395 1521.2788 -1922.9043 c1521.2607 -1922.1826 1521.2236 -1921.4668 1521.1689 -1920.7568 C1525.4854 -1919.3867 1529.8818 -1918.248 1534.2637 -1917.1484 c1537.3613 -1916.3721 1540.4707 -1915.6416 1543.5747 -1914.8916 c1547.6733 -1913.9014 1552.1787 -1914.54 1556.354 -1914.7861 c1564.8228 -1915.2861 1573.2461 -1916.4004 1581.6289 -1917.6689 c1587.9751 -1918.6289 1594.0869 -1919.375 1599.998 -1921.6025 C1603.7949 -1924.9736 1607.874 -1928.0215 1612.1177 -1930.8389 C1612.5112 -1931.2617 1612.9092 -1931.6855 1613.3174 -1932.1035 c1616.1816 -1935.0391 1619.6763 -1936.8105 1623.4795 -1937.7041 C1629.064 -1940.8154 1634.7959 -1943.6602 1640.5112 -1946.5186 c1645.626 -1949.0771 1649.5566 -1953.6357 1652.9668 -1958.1172 c1660.5288 -1968.0566 1667.1445 -1978.7539 1673.2974 -1989.5762 c1676.4424 -1995.1084 1679.6948 -2000.6387 1682.1416 -2006.5264 c1685.0015 -2013.4063 1685.2964 -2019.4521 1685.2964 -2026.7832 cf*U*u1 D1530.4165 -2000.9326 m1530.1328 -2000.9111 1529.8633 -2000.9287 1529.5884 -2000.9307 C1528.7798 -1998.7764 1526.8496 -1997.1729 1523.7793 -1997.4121 c1516.3804 -1997.9883 1511.8706 -2002.3477 1508.2798 -2008.5518 c1504.8105 -2014.5459 1504.8306 -2020.3135 1506.0864 -2027.002 c1508.3403 -2039.0059 1523.1973 -2043.2715 1533.6919 -2040.8105 c1545.7856 -2037.9756 1546.5234 -2022.3438 1544.562 -2012.5576 c1543.2329 -2005.9258 1536.813 -2001.4082 1530.4165 -2000.9326 cf0 D1532.2549 -2023.2588 m1532.1699 -2027.542 1531.0229 -2028.5967 1527.0371 -2028.459 c1522.5708 -2028.3047 1519.2705 -2027 1518.4321 -2022.5332 c1518.2759 -2021.7012 1518.3315 -2020.7393 1518.3105 -2019.8848 C1521.3154 -2023.9277 1529.7778 -2022.5762 1530.2793 -2015.9131 c1530.4834 -2013.1992 1531.1035 -2014.1045 1532.0146 -2015.709 c1532.9883 -2017.4238 1532.292 -2021.3613 1532.2549 -2023.2588 cf*U*u1 D1607.6064 -2034.6523 m1600.3799 -2028.9189 1593.2036 -2036.3125 1588.1904 -2041.3203 c1587.5874 -2041.9229 1587.1475 -2042.5586 1586.8379 -2043.209 C1586.4102 -2042.9678 1585.9663 -2042.7734 1585.5137 -2042.6484 c1581.7803 -2041.6211 1578.8677 -2043.915 1577.5176 -2047.1885 c1574.0078 -2055.6992 1581.9014 -2061.7656 1589.2305 -2063.623 c1596.5522 -2065.4785 1604.9219 -2064.3457 1608.9604 -2057.3096 c1612.1748 -2051.71 1613.2529 -2039.1338 1607.6064 -2034.6523 cf0 D1597.7354 -2050.748 m1597.6719 -2050.8564 1597.6309 -2050.9268 1597.5825 -2051.0098 C1597.5024 -2050.9551 1596.979 -2051.2842 1597.1133 -2051.3027 C1596.8477 -2051.3711 1596.5654 -2051.4102 1596.2695 -2051.4258 C1596.6494 -2051.1738 1597.0225 -2050.8711 1597.3828 -2050.5117 c1597.5947 -2050.3008 1597.8086 -2050.0918 1598.0205 -2049.8809 C1597.9448 -2050.1895 1597.8555 -2050.4854 1597.7354 -2050.748 Cf*U1439.4907 -2007.3008 m1428.543 -2012.6465 1416.8105 -2015.7012 1405.04 -2018.6465 c1396.9111 -2020.6797 1400.3608 -2033.2168 1408.4961 -2031.1816 c1421.3979 -2027.9541 1434.0576 -2024.3828 1446.0522 -2018.5254 c1453.585 -2014.8477 1446.9917 -2003.6377 1439.4907 -2007.3008 cf136.292 -869.4888 m149.5313 -871.3491 162.7021 -873.6699 175.6802 -876.8843 C173.7119 -885.4468 171.7822 -894.0034 170.0669 -902.6362 c167.6431 -914.8325 165.3838 -927.0469 162.2388 -939.0854 c160.689 -945.0195 158.7139 -950.7676 157.4814 -956.7725 c156.2261 -962.8887 154.4907 -968.9077 152.8555 -974.9292 c149.3984 -987.6587 146.3022 -1000.5542 146.1426 -1013.813 c146.0415 -1022.2002 159.0415 -1022.1904 159.1426 -1013.813 c159.3242 -998.7612 163.833 -984.3916 167.6616 -969.9663 c169.4331 -963.293 170.6606 -956.5474 172.6807 -949.9517 c175.0669 -942.1606 176.9116 -934.208 178.6074 -926.2427 c181.5493 -912.4282 183.8228 -898.4932 187.0874 -884.7471 c187.4849 -883.0728 187.8545 -881.4014 188.2397 -879.7285 C200.6538 -881.9922 213.5581 -882.7944 225.9663 -884.4077 c241.127 -886.3784 256.3218 -888.2148 271.2744 -891.4551 c278.1499 -892.9443 284.9736 -894.665 291.8174 -896.2905 c298.8232 -897.9546 306.3828 -900.3008 313.6147 -900.3008 c329.1753 -900.3008 344.7612 -900.564 360.3184 -900.2705 c364.5054 -900.1914 368.521 -899.4443 371.6284 -896.4531 c375.4971 -892.728 375.3345 -886.2598 375.0112 -881.3711 c374.5488 -874.3789 372.5117 -867.5615 370.8804 -860.7842 c370.0625 -857.3867 369.4336 -853.9995 369.2031 -850.5107 c368.9214 -846.2515 367.6289 -842.2798 366.5205 -838.1606 c362.4185 -822.9185 358.4502 -807.6401 354.4653 -792.3667 c346.5498 -762.0269 338.2793 -731.7827 330.356 -701.4448 c326.3599 -686.1421 322.3828 -670.834 318.3013 -655.5537 c317.3452 -651.9731 316.3789 -648.3955 315.4082 -644.8193 c314.4951 -641.4561 314.6426 -637.6162 314.0371 -634.1587 c312.8628 -627.4546 310.0781 -621.2598 307.1221 -615.1895 C307.2339 -615.2866 307.3467 -615.3848 307.4575 -615.481 c311.667 -619.1167 316.063 -622.3994 320.5093 -625.7339 c325.7271 -629.6475 330.9453 -633.561 336.1631 -637.4746 c341.8579 -641.7456 348.3403 -645.707 353.417 -650.7007 c357.6035 -654.8184 362.2119 -658.4707 366.8838 -662.0146 c371.0815 -665.1992 376.4189 -667.7383 380.1377 -671.4395 c385.2627 -676.541 391.1631 -683.2813 398.667 -684.2793 c400.8804 -684.5737 403.2036 -682.8257 404.2793 -681.0601 c410.9995 -670.0332 409.2969 -655.7598 406.8501 -643.6484 c405.5093 -637.0122 404.0615 -630.4019 402.3677 -623.8467 c400.4878 -616.5693 397.0327 -609.478 395.5552 -602.1729 c389.8711 -574.0635 381.2554 -546.6729 372.5986 -519.3691 c368.4258 -506.2085 364.271 -493.043 360.4321 -479.7803 c356.1772 -465.0786 354.1436 -449.4092 350.9517 -434.4287 c345.6333 -409.4688 339.875 -384.6055 333.54 -359.8848 C334.9023 -361.0571 336.2271 -362.2744 337.5376 -363.4854 c344.3516 -369.7803 350.6382 -376.6455 356.8696 -383.5083 c358.8545 -385.6948 360.8218 -387.897 362.833 -390.0591 c365.5552 -392.9854 369.7031 -394.2847 373.0718 -396.4414 c381.8555 -402.0645 390.7051 -410.7031 401.6675 -411.252 c405.1602 -411.4268 408.2319 -408.1631 408.1675 -404.752 c408.0068 -396.2661 405.873 -388.0894 402.9727 -380.1602 c401.4907 -376.1094 399.7471 -372.1445 397.9697 -368.2168 c396.1914 -364.2861 393.6167 -360.3672 392.4121 -356.2266 c386.9766 -337.5449 378.4756 -319.9067 369.8184 -302.5479 c365.8687 -294.627 363.1929 -286.0161 359.8809 -277.8101 c358.1592 -273.5444 356.3413 -269.3169 354.4282 -265.1343 c353.4707 -263.0405 352.4463 -260.9785 351.4072 -258.9243 c350.6992 -257.5249 348.1514 -254.2944 348.1221 -252.9761 c348.0298 -248.8203 347.1323 -244.6406 345.8242 -240.7129 c345.2104 -238.8706 344.3901 -237.0894 343.6167 -235.3115 c343.2183 -234.396 341.5894 -229.3906 342.0957 -233.2412 c341.8594 -231.4448 341.2749 -229.8779 340.4937 -228.3687 C345.6372 -230.8311 350.6221 -234.1484 355.5229 -236.0938 c364.0283 -239.4692 371.1577 -245.7075 380.665 -246.2354 c382.9331 -246.3613 385.1479 -244.9023 386.2773 -243.0161 c395.5464 -227.5381 384.3926 -210.4531 378.71 -196.0034 c374.7236 -185.8652 370.1826 -175.769 366.7495 -165.4497 c363.3936 -155.3628 360.0898 -145.2588 356.9302 -135.1084 c350.7979 -115.4102 345.7915 -95.5654 339.0161 -76.0493 c333.1787 -59.2354 331.2002 -39.8818 316.2544 -28.1187 c309.7451 -22.9956 300.4775 -32.1289 307.062 -37.311 c313.2959 -42.2173 316.9561 -48.5566 319.4873 -55.9858 c322.3276 -64.3242 324.1934 -72.917 327.0903 -81.2612 c333.46 -99.6079 338.1509 -118.2622 343.8491 -136.8013 c346.644 -145.8945 349.5923 -154.9399 352.5771 -163.9727 c355.8047 -173.7383 359.957 -182.9849 363.5752 -192.6016 c366.5703 -200.5635 370.2163 -208.1729 373.4375 -216.021 c375.3936 -220.7876 377.5151 -226.9399 376.5571 -232.312 C373.3931 -231.145 370.3247 -229.125 367.5996 -227.6211 c363.1938 -225.1895 358.5439 -223.4165 354.061 -221.1382 c347.1274 -217.6147 330.5122 -206.6533 324.0479 -215.4526 c321.4556 -218.9805 322.769 -223.2764 324.4072 -226.855 c325.123 -228.4189 326.1382 -229.8657 327.0718 -231.3032 c327.6167 -232.1416 328.1602 -232.979 328.6885 -233.8281 c329.356 -234.8994 329.5371 -236.5977 329.1606 -233.7349 c329.8154 -238.7158 333.2637 -243.3755 334.5044 -248.353 c335.271 -251.4287 334.4141 -255.2471 336.0488 -258.0181 c337.7881 -260.9673 339.4141 -263.9668 340.9595 -267.022 c346.5825 -278.1382 350.7168 -289.9429 355.2334 -301.5303 c359.7998 -313.2456 366.2241 -324.2666 371.2295 -335.8198 c376.2065 -347.3081 379.3491 -359.3433 384.7876 -370.606 c388.5132 -378.3213 392.1841 -386.5645 393.999 -395.0854 C392.4072 -394.043 390.9004 -392.9253 389.5713 -392.0317 c384.9277 -388.9106 380.4702 -385.5063 375.5781 -382.7729 c374.6816 -382.272 373.749 -381.8555 372.8057 -381.4536 c372.6753 -381.3979 372.5557 -381.3481 372.4419 -381.3008 C371.585 -380.4033 370.7485 -379.4844 369.9131 -378.5664 c367.3101 -375.7075 364.7251 -372.833 362.1074 -369.9868 c355.7549 -363.0796 349.2466 -356.2476 342.085 -350.168 c336.7954 -345.6768 329.4478 -339.4927 321.9316 -341.4785 c318.4863 -342.3892 316.4888 -346.0791 317.3916 -349.4746 c324.8521 -377.5234 331.5 -405.7725 337.6143 -434.1431 c340.5957 -447.9785 343.4424 -461.8433 346.2373 -475.7173 c348.9893 -489.3799 353.7017 -502.7085 357.8975 -515.9893 c366.1118 -541.9893 374.4561 -567.9512 380.6108 -594.5361 c382.21 -601.4409 383.7319 -608.0088 386.0605 -614.7012 c388.5166 -621.7593 390.353 -629.0244 392.0195 -636.3032 c393.4775 -642.6743 394.9331 -649.0205 395.3818 -655.542 c395.6826 -659.9102 396.1543 -664.0342 395.4556 -668.04 C394.6621 -667.3345 393.8804 -666.6152 393.103 -665.8945 c390.1777 -663.1821 387.585 -660.5952 384.2461 -658.3623 c373.9233 -651.46 365.123 -643.0483 355.2476 -635.6416 c344.4014 -627.5068 333.7524 -618.9648 322.6113 -611.2397 c313.9902 -605.2622 307.9751 -596.8345 296.6567 -596.272 c293.229 -596.1016 290.0063 -599.3584 290.1567 -602.772 c290.4702 -609.8838 293.1343 -616.1064 296.2285 -622.418 c299.4204 -628.9272 301.6572 -635.6958 302.1191 -642.9771 c302.5771 -650.1948 305.354 -657.4482 307.2124 -664.4375 c309.3232 -672.3765 311.4038 -680.3232 313.481 -688.2715 c321.4116 -718.6206 329.6172 -748.8945 337.5903 -779.2324 c341.625 -794.585 345.5996 -809.9531 349.645 -825.3032 c351.5508 -832.5337 353.478 -839.7588 355.4312 -846.9771 c356.3506 -850.374 356.4829 -853.9009 356.9658 -857.3823 c357.5278 -861.4346 358.6201 -865.4214 359.6104 -869.3838 c360.9922 -874.9155 363.0288 -881.2539 362.0557 -887.0303 C358.9927 -887.3496 355.8149 -887 352.7495 -887 C329.269 -887 L321.1177 -887 313.2002 -887.4766 305.1934 -885.833 c290.7515 -882.8691 276.5713 -878.8877 262.0366 -876.3447 c246.9805 -873.7109 231.6987 -872.0967 216.5415 -870.1538 c208.8384 -869.1665 201.1323 -868.2188 193.4263 -867.2529 c192.6367 -867.1543 191.853 -867.0337 191.0698 -866.9102 C192.9321 -858.0845 194.6357 -849.2373 196.1138 -840.2852 c201.2246 -809.3408 206.0391 -778.3481 211.1157 -747.3979 c216.0918 -717.0615 215.4116 -686.2324 219.6802 -655.8208 c223.437 -629.0542 229.5542 -602.7969 232.4053 -575.8809 c235.2944 -548.6094 238.2505 -521.3447 241.1973 -494.0796 c244.1528 -466.7314 246.7183 -439.313 250.271 -412.0386 c252.0327 -398.5132 252.4346 -384.8452 254.3208 -371.3335 c255.0898 -365.8257 256.7319 -360.4834 257.562 -354.9585 c258.4468 -349.0718 259.146 -343.1768 260.9209 -337.4731 c263.4185 -329.4463 250.8672 -326.0396 248.3853 -334.0171 c246.4478 -340.2437 245.7446 -346.7246 244.7788 -353.1499 c243.6533 -360.6377 241.7163 -367.8467 240.7979 -375.3921 c238.8433 -391.4478 237.4287 -407.6426 235.7329 -423.7256 c232.3062 -456.2222 228.7754 -488.7075 225.2666 -521.1948 c221.7637 -553.6323 219.0732 -586.1616 213.0908 -618.2563 c210.1938 -633.7988 207.2754 -649.3228 205.5356 -665.0474 c203.8867 -679.9507 203.2769 -694.9536 202.2886 -709.9087 c200.5396 -736.3735 195.5654 -762.3984 191.3794 -788.5625 c187.3472 -813.7622 184.0879 -839.292 178.5737 -864.2275 C175.9717 -863.585 173.3672 -862.9346 170.7383 -862.353 c156.3491 -859.1694 141.7256 -857.1479 127.1226 -855.2437 c112.0913 -853.2842 97.1235 -851.8311 82.0176 -850.5688 c75.4092 -850.0166 68.4243 -848.2451 61.833 -848.3027 c57.2168 -848.3433 52.6108 -848.749 47.9922 -848.7764 c44.4771 -848.7974 40.2666 -848.8745 36.9634 -847.3999 C37.0044 -847.3887 36.6958 -847.1875 36.3979 -847.0273 C36.4585 -846.6392 36.3794 -845.8237 36.4814 -845.2544 c37.0244 -842.2183 38.0161 -839.2397 39.4673 -836.5234 c40.9048 -833.833 42.0605 -832.439 42.2007 -829.1582 c42.3384 -825.9307 43.6704 -822.5776 44.3511 -819.4307 c45.0293 -816.2935 45.2217 -813.1865 46.0981 -810.0811 c47.1436 -806.3774 48.3525 -802.7188 49.5552 -799.0635 c52.2773 -790.7891 54.1914 -781.6123 57.7705 -773.7036 c61.8955 -764.5879 65.9355 -755.4346 69.9751 -746.2813 c78.2026 -727.6387 86.3945 -708.9771 95.147 -690.5732 c103.0605 -673.9331 111.8633 -658.2686 123.0103 -643.5649 c133.4624 -629.7783 146.5581 -614.9961 147.1411 -596.7715 c147.251 -593.3403 144.1006 -590.1235 140.6411 -590.2715 c133.793 -590.5645 126.8857 -592.7593 120.3115 -594.5581 c111.937 -596.8491 103.2036 -597.9106 94.7671 -600.0449 c84.7461 -602.5801 71.9375 -606.4248 61.6807 -602.6357 C62.6421 -601.2061 63.8345 -599.6987 64.6045 -598.7422 c67.0176 -595.7446 69.6855 -592.9473 72.3877 -590.2114 c75.5278 -587.0322 76.7964 -581.9277 79.0601 -578.0391 c82.0488 -572.9048 84.3354 -567.4829 87.2056 -562.3286 c100.2222 -538.9536 114.2358 -516.1519 127.4219 -492.873 c140.0757 -470.5352 149.6953 -446.7212 163.8271 -425.1982 c170.8208 -414.5464 177.1523 -403.4731 184.1631 -392.8179 c191.4082 -381.8071 198.9385 -370.9873 206.2603 -360.0278 c208.8853 -356.0977 205.4663 -349.8564 200.6475 -350.2471 c194.3447 -350.7578 188.6782 -354.3379 182.7017 -356.1479 C181.9165 -356.3223 181.7979 -356.3706 182.3369 -356.2939 c180.6187 -356.4897 179.0952 -357.1016 177.4629 -357.6802 c174.8389 -358.6104 172.2524 -359.6499 169.6665 -360.6807 c164.502 -362.7383 158.9727 -364.3154 154.0166 -366.8154 c144.2646 -371.7344 134.7939 -377.1812 124.9736 -381.9707 c117.562 -385.5859 109.0039 -390.7925 100.8228 -389.0864 C101.6406 -387.2549 102.436 -385.415 103.1904 -383.5562 c103.9771 -381.6167 104.5371 -379.6328 104.8452 -377.5654 c105.1362 -375.6108 106.333 -373.8633 107.6787 -371.1719 c113.3369 -359.855 119.1445 -348.6001 124.4893 -337.1328 c133.9814 -316.7666 146.5811 -298.0938 160.8228 -280.7705 c175.2754 -263.1904 189.4209 -244.9746 206.9937 -230.3438 c213.3174 -225.0791 221.0059 -221.2354 227.541 -216.1519 c234.106 -211.0449 240.543 -204.6519 242.9185 -196.459 c243.8652 -193.1943 241.8066 -189.2119 238.3789 -188.4634 c226.5278 -185.875 214.8105 -189.1357 203.4316 -192.3994 c196.2559 -194.458 189.3984 -194.7412 181.9019 -194.9399 c177.9292 -195.0454 173.9478 -194.9897 169.9937 -194.5723 c169.7803 -194.5498 169.5664 -194.5122 169.3525 -194.4746 C169.4316 -194.3477 169.4927 -194.2124 169.5776 -194.0884 C172.2881 -189.3496 177.0781 -185.0273 181.3774 -181.7095 c186.3882 -177.8423 189.6362 -173.0107 193.9663 -168.5103 c203.3555 -158.752 212.0132 -148.3154 221.2798 -138.4424 c229.9868 -129.165 237.9141 -119.2383 247.0317 -110.3198 c251.5386 -105.9106 256.2734 -101.7402 261.1069 -97.6948 c265.6533 -93.8896 268.8516 -89.498 272.5625 -84.894 c280.4219 -75.1431 289.2173 -65.9346 299.9375 -59.3296 c307.0586 -54.9414 300.5347 -43.6934 293.376 -48.104 c282.1162 -55.042 272.769 -64.3613 264.3638 -74.4868 c260.2715 -79.4165 256.8618 -84.416 251.9146 -88.5024 c246.6182 -92.877 241.5396 -97.5073 236.6299 -102.3101 c226.6445 -112.0781 217.8105 -122.9897 208.3628 -133.2588 c198.2759 -144.2222 187.769 -155.23 178.5669 -166.8442 c175.1997 -171.0938 170.1152 -174.0347 166.3008 -177.9028 c161.6445 -182.624 156.9224 -187.9678 155.4795 -194.6187 c153.064 -205.7529 166.2139 -207.4766 174.0991 -207.8896 c181.8086 -208.2935 189.4863 -207.4414 197.1831 -207.2363 c202.9971 -207.0815 209.2339 -204.207 214.8325 -202.7271 c218.4019 -201.7837 222.1074 -200.917 225.8301 -200.5684 C222.3896 -204.3262 217.8159 -207.4326 214.1133 -210.0576 c206.8789 -215.1865 199.4546 -219.5239 192.8086 -225.4614 c175.8501 -240.6128 161.605 -259.0513 147.4316 -276.7524 c133.3281 -294.3662 121.1592 -313.2788 111.7646 -333.8193 c106.4736 -345.3877 100.4287 -356.6606 94.7393 -368.0396 c92.604 -372.3101 92.1528 -376.6475 90.2891 -380.9951 c88.6255 -384.875 86.5684 -388.4966 86.1367 -392.751 c85.9092 -394.9932 87.5435 -397.2593 89.356 -398.3633 c98.9229 -404.1924 108.9497 -403.3369 118.8301 -398.8911 c130.1279 -393.8071 141.1143 -388.3853 152.0371 -382.5293 c161.7979 -377.2959 172.1689 -373.3174 182.6113 -369.6157 c183.3042 -369.3701 184.0146 -369.1436 184.7314 -368.9224 C171.7437 -388.4561 158.9043 -408.0542 146.6011 -428.0479 c138.5044 -441.2061 132.0723 -455.3892 125.1709 -469.1924 c118.0029 -483.5273 109.9424 -497.3315 101.834 -511.1528 c93.7964 -524.8525 85.7007 -538.5171 77.8955 -552.3516 c74.5894 -558.2104 72.0962 -564.3613 68.625 -570.1499 c67.0093 -572.8447 65.4961 -575.5659 64.1953 -578.4272 c63.9121 -579.0503 61.4878 -582.7266 63.6533 -580.5591 c62.9146 -581.2983 62.1846 -582.0459 61.458 -582.7969 c56.1519 -588.2773 44.9702 -598.7935 47.3652 -607.5005 c48.792 -612.6885 56.7368 -615.0371 61.3301 -616.0757 c67.3369 -617.4346 73.6084 -617.1489 79.6646 -616.3657 c89.1992 -615.1333 98.2119 -612.1709 107.5659 -610.166 c113.5615 -608.8809 119.6387 -608.2231 125.5674 -606.6011 c127.8438 -605.978 130.2451 -605.2441 132.6733 -604.6201 C130.501 -611.1875 126.292 -617.2017 122.502 -622.8252 c116.8413 -631.2246 110.1318 -638.8955 104.3447 -647.2246 c91.8467 -665.2124 83.0171 -685.5356 74.0059 -705.4102 c64.1968 -727.0439 54.8369 -748.8779 45.0195 -770.5083 c43.0723 -774.7988 42.2041 -779.8086 40.7593 -784.3071 c39.0308 -789.6875 37.1855 -795.0298 35.4575 -800.4102 c33.9976 -804.9541 32.2656 -809.6328 32.061 -814.4297 c31.8618 -819.0942 30.0747 -823.6001 29.3882 -828.2729 C23.8989 -835.9077 20.0796 -848.9092 26.7231 -856.0308 c33.0498 -862.8125 45.4609 -861.9653 53.8193 -861.6372 c66.2974 -861.147 78.6743 -863.3374 91.1362 -864.2974 c106.2671 -865.4629 121.2661 -867.3779 136.292 -869.4888 cf3111.8809 -187.6567 m3118.1855 -184.8833 3125.8535 -181.6851 3132.8594 -183.1392 c3137.9688 -184.1997 3141.9629 -188.5005 3145.3809 -192.1108 c3149.4678 -196.4277 3153.1855 -201.0806 3157.3477 -205.3276 c3162.5586 -210.646 3167.0293 -217.0083 3171.6494 -222.8408 c3176.7246 -229.2456 3181.6631 -235.7554 3186.5547 -242.3003 c3204.9424 -266.9038 3222.3467 -292.2251 3240.8164 -316.7686 c3254.6396 -335.1372 3266.3193 -358.9219 3286.2012 -371.418 C3285.8506 -371.7441 3285.5 -372.0718 3285.1484 -372.3965 c3265.3486 -390.6816 3245.4287 -409.1338 3224.5 -426.1318 c3219.3125 -430.3457 3213.624 -433.9858 3208.8262 -438.6333 c3204.1602 -443.1523 3199.1963 -447.3623 3194.21 -451.52 c3183.7637 -460.23 3173.0313 -468.585 3163.3477 -478.1636 c3157.3818 -484.0654 3166.5771 -493.2549 3172.541 -487.356 c3183.0625 -476.9478 3194.8086 -467.9399 3206.125 -458.4341 c3211.5654 -453.8638 3216.4932 -448.3877 3222.2109 -444.2051 c3228.5879 -439.5405 3234.7324 -434.5562 3240.7695 -429.4614 c3252.7861 -419.3203 3264.2646 -408.5576 3276.0947 -398.2031 c3283.7891 -391.4683 3291.6523 -384.6294 3298.9453 -377.3403 C3299.6982 -377.5781 3300.4551 -377.8096 3301.2285 -378.0166 c3307.8447 -379.7876 3311.3477 -371.7676 3308.0215 -367.5776 C3309.5703 -365.749 3311.0762 -363.9722 3312.9961 -362.3999 c3315.4688 -360.375 3317.7168 -358.0781 3319.9268 -355.7769 c3324.8525 -350.6475 3329.3232 -345.0977 3334.1846 -339.9072 c3338.7549 -335.0278 3343.9941 -330.8608 3348.7773 -326.1973 c3354.5898 -320.5283 3360.5371 -314.9985 3366.4932 -309.4814 c3377.9482 -298.8696 3389.498 -288.3569 3400.5625 -277.335 c3405.5547 -272.3623 3412.2607 -268.4023 3418.0068 -264.3516 c3424.3438 -259.8848 3430.8164 -255.6123 3437.3584 -251.4521 c3439.7217 -249.9492 3442.1045 -248.4785 3444.4932 -247.0166 c3445.8633 -246.1782 3447.2041 -245.2842 3448.6934 -244.6646 c3448.8213 -244.6108 3451.2969 -244.2002 3451.043 -243.9883 C3454.0811 -244.8271 3455.623 -252.9404 3456.2549 -255.2549 c3458.6367 -263.981 3464.4043 -275.8057 3474.8867 -276.3325 c3484.0703 -276.7939 3490.9502 -267.9443 3496.7988 -262.1123 c3502.1484 -256.7778 3507.542 -251.2803 3513.3213 -246.3008 C3514.6826 -254.0625 3518.2383 -261.1113 3527.5186 -260.8916 c3530.5469 -260.8198 3533.3105 -260.1318 3536.1699 -259.1846 c3538.9932 -258.249 3542.3164 -258.4688 3544.5781 -256.333 c3549.1895 -251.9771 3555.1211 -249.5161 3560.8398 -246.9531 c3566.2686 -244.5195 3570.7793 -241.0137 3575.7314 -237.7896 c3578.7617 -235.8159 3581.9023 -236.2002 3584.8984 -237.9268 c3592.5352 -242.3281 3597.8535 -252.3428 3601.0098 -260.2358 c3605.6738 -271.8999 3611.0918 -283.1465 3614.8369 -295.228 c3619.1328 -309.0898 3622.3076 -323.2729 3626.4346 -337.1851 c3634.4453 -364.1875 3648.1992 -389.1147 3655.8496 -416.1836 c3657.4043 -421.6836 3658.5977 -427.3247 3659.3037 -432.9971 c3660.0762 -439.2046 3662.3086 -445.2266 3663.5742 -451.3809 c3666.1299 -463.8164 3667.46 -476.4297 3671.127 -488.6265 c3672.5977 -493.5137 3671.5918 -499.9165 3671.9326 -505.0283 c3672.3477 -511.2402 3673.292 -517.4365 3674.7285 -523.4917 c3677.0684 -533.356 3683.248 -541.2241 3683.4961 -551.7666 c3683.6934 -560.1357 3696.6934 -560.1548 3696.4961 -551.7666 c3696.1768 -538.1787 3688.5166 -527.3535 3686.0547 -514.3628 c3684.7412 -507.4287 3684.5791 -500.2744 3684.5068 -493.2368 c3684.4258 -485.3784 3681.5576 -477.9878 3680.0508 -470.2725 c3678.6016 -462.8481 3677.5596 -455.3506 3676.1094 -447.9253 c3675.375 -444.1616 3674.458 -440.4424 3673.4219 -436.7515 c3672.2686 -432.6465 3671.7715 -428.5684 3671.0508 -424.3672 c3668.6797 -410.5474 3663.541 -397.3633 3658.1738 -384.4775 c3652.7832 -371.5371 3647.5303 -358.6182 3642.7754 -345.4287 c3637.8271 -331.7036 3634.5127 -317.4414 3630.7041 -303.377 c3626.9912 -289.6675 3622.6279 -276.125 3616.1914 -263.4263 c3614.209 -259.5176 3613.0039 -255.23 3611.1719 -251.2217 c3608.9746 -246.4165 3606.1855 -241.8804 3602.9805 -237.6865 c3599.3271 -232.9067 3595.0664 -228.478 3589.6445 -225.7168 c3583.9609 -222.8228 3579.4424 -223.7534 3573.5117 -224.5693 c3570.7451 -224.9502 3567.9004 -227.3779 3565.7168 -228.9365 c3562.418 -231.2905 3559.1504 -233.4692 3555.4697 -235.1865 c3548.9775 -238.2163 3542.6338 -241.0063 3537.1504 -245.583 C3535.6602 -245.8296 3534.2002 -246.1743 3532.7148 -246.6489 c3531.0566 -247.1782 3527.7715 -249.0288 3526.5449 -246.957 c3524.5889 -243.6533 3525.4824 -237.4004 3525.4795 -233.7349 c3525.4766 -229.0732 3519.8604 -225.2788 3515.6992 -228.1221 c3504.9512 -235.4653 3495.6904 -244.8594 3486.5078 -254.0151 c3483.6543 -256.8608 3480.3115 -261.5049 3476.498 -263.1128 c3473.4121 -264.4141 3470.2734 -256.8525 3469.5049 -254.354 c3466.4131 -244.311 3462.3496 -229.418 3448.8486 -231.2363 c3442.7227 -232.061 3437.3555 -236.1128 3432.2471 -239.312 c3425.707 -243.4082 3419.2832 -247.6855 3412.9414 -252.0811 c3407.0225 -256.1836 3401.2188 -260.4531 3395.5322 -264.8721 c3389.2773 -269.7319 3383.8389 -275.5625 3378.083 -281.001 c3366.6582 -291.7959 3354.9648 -302.3008 3343.5879 -313.147 c3333.373 -322.8857 3323.4463 -332.4175 3314.0508 -342.9736 c3311.8906 -345.4004 3309.6543 -347.75 3307.332 -350.022 c3305.082 -352.2251 3302.2529 -353.979 3300.3457 -356.4668 c3298.8945 -358.3594 3297.3457 -360.1714 3295.7393 -361.9341 C3279.2422 -353.1772 3268.7529 -334.5239 3258.8867 -319.4609 c3250.8096 -307.1289 3241.166 -295.6138 3232.5273 -283.6489 c3223.5186 -271.1724 3214.5967 -258.6338 3205.5137 -246.2104 c3188.8164 -223.3716 3171.8008 -199.9453 3151.6816 -179.9512 c3141.8799 -170.2104 3130.0303 -168.1289 3116.9756 -171.9229 c3102.4424 -176.147 3088.5195 -184 3074.7988 -190.3188 c3067.9668 -193.4644 3061.1162 -196.5659 3054.2246 -199.5767 c3046.6533 -202.8838 3038.4395 -205.0532 3030.6025 -207.6655 c3026.9834 -208.8716 3022.2383 -210.6563 3018.2363 -211.085 C3018.0801 -210.7031 3017.957 -210.3091 3017.8789 -209.897 C3017.5801 -208.8555 3017.6133 -207.7827 3017.5879 -206.7085 c3017.5146 -203.5229 3018.125 -200.353 3018.708 -197.2393 c3020.3574 -188.437 3025.5615 -173.0894 3016.0732 -166.9575 c3012.292 -164.5142 3007.5098 -166.4556 3004.0391 -168.4028 c3000.0488 -170.6411 2994.751 -172.9097 2991.4424 -175.9492 c2990.2666 -177.0298 2988.7168 -177.8491 2987.1523 -178.4697 C2986.9209 -177.4873 2986.8457 -176.4448 2986.6953 -175.4482 c2985.8066 -169.4985 2980.3574 -165.9648 2975.1113 -164.1602 c2963.9766 -160.3296 2952.5811 -168.0654 2942.2852 -171.0073 c2926.374 -175.5532 2910.4639 -180.0986 2894.5527 -184.6445 c2878.5459 -189.2183 2862.2871 -192.2432 2845.9668 -195.5073 c2824.7168 -199.7573 2802.9531 -203.0288 2782.0879 -208.9019 c2763.1602 -214.23 2744.7021 -221.5356 2725.1719 -224.4673 c2721.6631 -224.9937 2719.7793 -229.3599 2720.6328 -232.4629 c2721.6553 -236.1812 2725.127 -237.5283 2728.6289 -237.0024 c2742.7119 -234.8887 2756.2617 -230.4722 2769.8066 -226.2065 c2785.1221 -221.3833 2800.4238 -217.8428 2816.1582 -214.6958 c2832.4648 -211.4346 2848.7705 -208.1733 2865.0762 -204.9121 c2872.8779 -203.3521 2880.8115 -202.0938 2888.4629 -199.9077 C2913.2832 -192.8164 L2927.4531 -188.7676 2941.9678 -185.3682 2955.6514 -179.8721 c2960.0703 -178.0967 2965.5498 -175.6455 2970.4395 -176.3999 c2971.6543 -176.5874 2972.5068 -177.0151 2973.5508 -177.6279 c2974.9473 -178.4478 2973.8701 -177.501 2974.1602 -178.9038 c2974.7305 -181.6646 2975.04 -183.9775 2976.4131 -186.5283 c2979.4277 -192.1304 2985.4014 -192.9766 2990.8281 -190.9521 c2993.502 -189.9546 2995.9795 -188.5962 2998.3096 -186.9604 c2998.6367 -186.731 3002.4199 -184.6089 2999.6543 -185.6289 c3001.2119 -185.0547 3002.7168 -184.314 3004.1787 -183.5332 c3005.7275 -182.7061 3007.2061 -181.7432 3008.6914 -180.8008 C3008.5459 -184.7236 3007.0898 -189.1733 3006.4531 -192.3457 c3004.6016 -201.5771 3001.3125 -219.6206 3013.5508 -223.584 c3018.0391 -225.0376 3022.1943 -223.1724 3026.5449 -222.2163 c3033.958 -220.5864 3041.2129 -217.8159 3048.46 -215.4004 c3063.2354 -210.4751 3077.2656 -203.4302 3091.3975 -196.9146 c3098.2021 -193.7773 3105.0215 -190.6738 3111.8809 -187.6567 cf*u1 D88.9824 -1821.7842 m97.9727 -1827.5762 108.9214 -1832.917 119.4624 -1834.6865 c133.3247 -1837.0127 147.8003 -1836.7168 161.8013 -1836.1709 c168.7271 -1835.9004 175.646 -1835.0703 182.4204 -1833.5977 C181.8159 -1834.3857 181.2158 -1835.1738 180.625 -1835.958 c175.041 -1843.3711 169.6909 -1851.0391 164.4082 -1858.6729 c154.4541 -1873.0586 144.7061 -1889.8525 143.1235 -1907.5947 c142.3701 -1916.04 145.3789 -1924.3789 152.2266 -1929.5322 c162.2241 -1937.0566 174.9678 -1936.0215 185.7354 -1931.0537 c191.3774 -1928.4512 196.355 -1924.46 201.2104 -1920.6475 c207.0044 -1916.0977 212.4233 -1911.4268 217.4517 -1906.0391 c222.6157 -1900.5049 227.5137 -1894.7246 232.3496 -1888.9043 c234.7954 -1885.96 237.2046 -1882.9863 239.6108 -1880.0098 C238.9077 -1886.1836 239.1338 -1892.4004 239.1338 -1898.6074 c239.1338 -1912.8789 239.3086 -1927.1611 238.9658 -1941.4297 c238.2622 -1970.709 236.0957 -1999.8682 241.4263 -2028.8457 c243.0684 -2037.7715 244.77 -2046.7012 246.6563 -2055.5889 C239.5957 -2053.7549 232.2759 -2052.623 225.4741 -2049.9658 c213.7144 -2045.3721 200.3882 -2045.749 188.9268 -2040.3037 c185.7051 -2038.7725 181.5669 -2038.5977 178.0781 -2037.875 c174.3921 -2037.1113 170.7236 -2036.2627 167.0527 -2035.4307 c159.5259 -2033.7236 151.9805 -2032.0391 144.3105 -2031.1055 c138.8042 -2030.4355 133.5259 -2029.8389 128.0649 -2028.8809 c122.3623 -2027.8809 116.5693 -2027.3906 110.8071 -2028.0957 c100.312 -2029.3809 87.1494 -2035.9004 89.1328 -2048.2686 c90.5923 -2057.3662 102.7305 -2060.1719 109.6558 -2063.1963 c116.042 -2065.9844 123.5303 -2066.957 130.3462 -2068.3535 c138.0337 -2069.9287 145.7729 -2071.2451 153.5269 -2072.4482 c160.7212 -2073.5645 167.9395 -2074.5273 175.1587 -2075.4668 c183.3125 -2076.5283 191.0894 -2076.3105 199.2749 -2075.5674 c216.2598 -2074.0264 232.9351 -2070.7441 250.0176 -2070.4463 C253.4214 -2084.5176 257.4775 -2098.415 262.7109 -2111.9482 c267.5068 -2124.3496 272.5518 -2136.6621 277.5146 -2149 C291.6689 -2149 L287.2246 -2137.1611 282.0479 -2125.5088 277.3623 -2113.7949 c271.583 -2099.3457 267.0864 -2084.5703 263.3237 -2069.5879 C263.6416 -2068.8906 263.8584 -2068.1465 263.9448 -2067.3867 C266.0835 -2070.8262 271.3896 -2071.166 274.3149 -2068.1445 C281.4741 -2068.3896 288.6753 -2067.9072 295.8154 -2067.5557 c307.3706 -2066.9863 317.6968 -2065.459 328.4385 -2060.8652 c339.4165 -2056.1719 351.0762 -2048.2725 356.9609 -2037.6475 c360.6577 -2030.9736 360.8237 -2022.9336 354.1885 -2018.1523 c348.8975 -2014.3398 341.2739 -2014.3428 335.0498 -2014.6475 c317.0122 -2015.5322 300.0688 -2020.4932 285.7349 -2031.833 c277.8569 -2038.0664 271.2417 -2045.6357 266.6729 -2054.4561 C266.5776 -2054.4365 266.4849 -2054.418 266.3853 -2054.3965 c266.3125 -2054.3809 265.8716 -2054.2363 265.5332 -2054.1367 C263.9292 -2052.3105 261.4253 -2051.5146 259.1685 -2051.75 C257.686 -2044.8584 256.314 -2037.9336 255.0059 -2030.9834 c252.2153 -2016.1572 250.8755 -2001.7646 250.8188 -1986.666 c250.7642 -1972.1875 251.5132 -1957.7178 251.9268 -1943.249 c252.3354 -1928.9688 252.1519 -1914.6709 252.1519 -1900.3857 c252.1519 -1894.1035 251.8857 -1887.8125 252.4639 -1881.5508 c252.9917 -1875.833 254.248 -1870.0879 254.8369 -1864.4805 C254.9434 -1864.0215 255 -1863.5303 255 -1863.002 C255 -1862.7725 L255 -1861.8447 255.1313 -1861 255.1519 -1860 C255 -1860 L255 -1859.8975 L255 -1858.1689 254.457 -1856.8027 253.5967 -1855.7881 C254.2988 -1854.5439 255.0444 -1853.3047 255.835 -1852.0977 C255.9619 -1858.2998 255.604 -1864.5771 257.3853 -1870.626 c260.8555 -1882.4102 265.166 -1893.083 271.1978 -1903.8486 c280.1475 -1919.8203 292.1519 -1942.0664 313.3862 -1942.1729 c322.0483 -1942.2158 326.3628 -1934.2402 329.0215 -1927.2354 c331.1396 -1921.6543 331.5083 -1915.1611 332.3589 -1909.2715 c333.2456 -1903.1348 333.9468 -1896.9795 334.2813 -1890.7861 c334.8989 -1879.3516 333.3164 -1868.1436 328.917 -1857.5547 C331.3892 -1859.1426 333.9033 -1860.6689 336.4814 -1862.0947 c347.0801 -1867.9561 358.6177 -1871.5127 370.0933 -1875.1924 c387.9507 -1880.9189 412.9087 -1887.1318 427.5469 -1871.3223 c435.2017 -1863.0547 438.7329 -1850.8359 435.7158 -1839.9453 c432.9116 -1829.8232 424.5815 -1821.9814 416.7451 -1815.541 c407.8169 -1808.2021 398.5415 -1801.0918 388.6953 -1795.0303 c381.2778 -1790.4639 373.689 -1786.9834 365.6304 -1784.5352 C366.2476 -1784.4717 366.8643 -1784.4014 367.4805 -1784.3223 c377.7363 -1783 386.5439 -1778.1211 393.6064 -1770.5859 c407.6753 -1755.5762 408.3838 -1732.8779 393.2471 -1718.374 c379.2651 -1704.9766 357.1997 -1711.2461 341.3843 -1717.0762 c336.4409 -1718.8984 331.9351 -1721.6035 327.6206 -1724.5889 c325.9023 -1725.7773 324.2339 -1727.0391 322.5674 -1728.3008 C323.02 -1727.2881 323.4653 -1726.2744 323.9009 -1725.2607 c331.2759 -1708.0938 336.7407 -1688.8271 336.002 -1670.0098 c335.6274 -1660.4746 332.8955 -1649.5068 323.3188 -1645.5313 c313.0605 -1641.2725 301.0962 -1643.3691 290.9614 -1646.9385 c266.9419 -1655.3965 249.1836 -1676.6426 235.9429 -1697.499 c233.7158 -1701.0078 232.2563 -1704.7354 231.2588 -1708.752 C220.7505 -1693.9121 206.5869 -1681.6699 191.5581 -1671.5234 c175.9053 -1660.9561 153.3813 -1651.3145 141.0605 -1671.5615 c130.3789 -1689.1162 150.5264 -1708.2529 161.8486 -1719.3428 c166.2695 -1723.6729 169.8843 -1728.7344 174.4233 -1733.0195 c178.3438 -1736.7197 182.5957 -1740.0654 186.9307 -1743.2715 C186.6372 -1743.2471 186.3486 -1743.2129 186.0532 -1743.1934 c179.0942 -1742.7285 172.6011 -1745.3301 165.8027 -1745.4082 c159.0703 -1745.4854 152.314 -1746.6338 145.8013 -1748.2754 c133.0078 -1751.501 120.021 -1756.0811 108.8613 -1763.0244 c103.6045 -1766.2959 98.4805 -1769.7383 93.8018 -1773.8086 c88.8516 -1778.1162 85.2646 -1783.9131 82.0347 -1789.5508 c78.5576 -1795.6211 77.041 -1801.9482 78.2466 -1808.8555 c79.312 -1814.96 84.1328 -1818.6602 88.9824 -1821.7842 cf0 D101.6191 -2044.8125 m101.9058 -2045.2627 106.7227 -2039.4082 102.0024 -2045.3057 C101.8618 -2045.1494 101.73 -2044.9873 101.6191 -2044.8125 cf206.4297 -2061.792 m199.1445 -2062.6768 191.855 -2063.2656 184.5161 -2063.4063 c176.6504 -2063.5557 168.3223 -2061.5918 160.5435 -2060.4512 c153.3979 -2059.4033 146.2808 -2058.207 139.1831 -2056.875 c135.5645 -2056.1953 131.9609 -2055.4492 128.3608 -2054.6787 c124.6738 -2053.8896 119.5923 -2053.5742 116.2158 -2051.9707 c112.5527 -2050.2305 108.6338 -2049.1211 105.0054 -2047.3008 c103.9995 -2046.7959 102.8555 -2046.2109 102.0732 -2045.3799 C102.8486 -2044.625 103.7026 -2043.9736 104.6294 -2043.3799 c108.71 -2040.7666 113.9038 -2040.627 118.5811 -2040.7861 c124.0112 -2040.9707 129.312 -2043.3438 134.6406 -2043.415 c149.4546 -2043.6143 163.9048 -2048.2803 178.3345 -2051.166 c184.5586 -2052.4111 190.2778 -2054.8936 196.4663 -2056.3955 c202.8901 -2057.9531 209.4272 -2058.9697 215.8374 -2060.5928 C212.7041 -2061.002 209.5698 -2061.4102 206.4297 -2061.792 cf318.5898 -2029.9844 m324.2998 -2028.7744 330.0566 -2027.8916 335.8887 -2027.6055 c338.4048 -2027.4824 341.9614 -2027.5645 343.5811 -2027.8408 c344.2422 -2027.9541 344.895 -2028.124 345.5405 -2028.2998 c345.6343 -2028.3252 346.2231 -2028.5693 346.522 -2028.6846 C346.5552 -2028.7061 346.5884 -2028.7285 346.6226 -2028.752 C346.3545 -2029.9053 345.856 -2030.8701 345.269 -2031.9297 c342.813 -2036.3643 338.7451 -2039.5049 334.6807 -2042.416 c324.4678 -2049.7305 312.2529 -2054.2275 299.6572 -2054.417 c293.6475 -2054.5078 287.645 -2054.9971 281.6343 -2055.1289 c281.4741 -2055.1328 281.3145 -2055.1328 281.1543 -2055.1357 C289.6411 -2042.416 304.0552 -2033.0654 318.5898 -2029.9844 cf253.1538 -1821.8945 m250.9961 -1821.1758 249.0005 -1820.126 247.0405 -1818.9863 c244.7969 -1817.6826 242.6118 -1817.333 240.1255 -1816.6914 c236.0649 -1815.6445 232.6406 -1813.5752 229.8301 -1810.4902 c224.2837 -1804.4014 225.0283 -1795.5205 226.5713 -1788.2168 c228.5386 -1778.9082 231.1963 -1771.6572 241.3223 -1769.1455 c242.7109 -1768.8008 244.1318 -1768.5908 245.5723 -1768.4775 C246.1885 -1771.0752 248.2144 -1773.3135 251.6523 -1773.3877 c257.8936 -1773.5234 263.7798 -1775.0098 269.7266 -1776.8135 c274.2456 -1778.1836 279.3799 -1779.1172 283.6963 -1781.0449 c289.5059 -1783.6396 289.8403 -1789.7764 290.0889 -1795.6348 c290.4429 -1803.9619 290.0425 -1812.7852 283.9233 -1819.0879 c276.083 -1827.1631 262.7607 -1825.0977 253.1538 -1821.8945 cf96.1509 -1791.3477 m102.1274 -1781.9717 111.3281 -1776.874 120.5098 -1771.0674 c125.3013 -1768.0371 131.415 -1766.6348 136.7524 -1764.748 c142.4082 -1762.749 148.1167 -1760.9648 153.9868 -1759.709 c159.6948 -1758.4873 165.6167 -1759.0557 171.2422 -1757.7061 c176.895 -1756.3496 182.9595 -1755.6182 188.7583 -1756.4092 c199.085 -1757.8193 208.082 -1764.043 218.6489 -1764.3867 c223.6265 -1764.5488 226.6821 -1758.7578 224.2617 -1754.6064 c219.855 -1747.0479 210.6978 -1744.3652 203.8228 -1739.6787 c195.4399 -1733.9639 187.2207 -1727.5293 180.0454 -1720.3271 c176.6123 -1716.8809 173.8516 -1712.8535 170.3901 -1709.4629 c167.4946 -1706.627 164.6187 -1703.7793 161.876 -1700.7949 c156.9751 -1695.4609 151.1172 -1688.54 151.3564 -1680.873 c151.5435 -1674.8887 158.2773 -1671.458 163.4463 -1672.2998 c171.6919 -1673.6426 179.2363 -1678.6602 186.022 -1683.2412 c193.4502 -1688.2568 200.7749 -1693.5889 206.9268 -1700.126 c210.938 -1704.3887 214.6792 -1708.8945 218.7251 -1713.1279 c222.8774 -1717.4727 225.3647 -1722.8252 228.0381 -1728.1641 c230.1021 -1732.2861 237.2793 -1732.5381 239.2637 -1728.1641 c241.5737 -1723.0713 242.5151 -1717.8164 243.6968 -1712.3877 c245.1396 -1705.7588 249.4717 -1700.3213 253.335 -1694.873 c260.731 -1684.4424 269.5908 -1675.8682 279.2822 -1667.6406 c286.2544 -1661.7217 296.0195 -1658.2959 304.8652 -1656.6416 c309.1118 -1655.8477 313.5337 -1656.0068 317.668 -1657.2256 c321.019 -1658.2129 321.7104 -1661.9043 322.4028 -1664.9561 c324.4116 -1673.8086 322.5952 -1683.8232 320.7788 -1692.5508 c319.1191 -1700.5283 316.5967 -1708.1992 313.7959 -1715.833 c311.166 -1722.999 307.5815 -1729.8945 303.7266 -1736.4668 c302.814 -1738.0225 301.8521 -1739.5488 300.8481 -1741.0469 C295.5093 -1744.5908 290.6006 -1748.8262 286.0601 -1753.291 c282.1494 -1757.1357 284.9155 -1764.6699 290.6563 -1764.3867 c299.2549 -1763.9629 305.1787 -1757.1152 309.96 -1750.6309 C312.5225 -1749.0703 315.2065 -1747.71 318.0371 -1746.625 c325.8809 -1743.6182 332.2061 -1736.7939 339.3823 -1732.4258 c345.9937 -1728.4023 354.2671 -1726.0127 361.8096 -1724.3799 c368.6431 -1722.9014 376.3105 -1722.7744 382.4873 -1726.4082 c388.2954 -1729.8242 391.6919 -1737.7607 391.7227 -1744.2188 c391.7573 -1751.5361 387.5327 -1758.3643 382.5122 -1763.3516 c369.4082 -1776.3691 349.8896 -1769.6777 333.9326 -1775.6221 c329.644 -1777.2197 327.1543 -1782.9375 331.0645 -1786.4863 c338.7041 -1793.4189 349.5845 -1793.915 359.2158 -1795.9121 c370.5605 -1798.2637 381.355 -1805.373 390.7319 -1811.916 c398.8735 -1817.5967 407.0083 -1823.7324 414.2085 -1830.5811 c421.0708 -1837.1074 425.8301 -1844.7813 422.7349 -1854.3633 c416.125 -1874.8271 390.9561 -1867.9844 375.7915 -1863.3594 c365.1265 -1860.1064 354.4116 -1856.7793 344.4863 -1851.6426 c332.8516 -1845.6201 322.5376 -1837.4863 313.2544 -1828.2988 c307.8442 -1822.9434 299.7524 -1829.7031 303.0454 -1836.1748 c311.0205 -1851.8477 320.7744 -1865.4453 321.3784 -1883.666 c321.7095 -1893.6406 320.2188 -1903.6484 318.6602 -1913.4697 c318.1587 -1916.6289 317.2378 -1930.1689 311.6919 -1929.0195 c304.1309 -1927.4531 298.6802 -1922.4844 294.2432 -1916.4297 c288.3418 -1908.3779 283.4438 -1899.4375 278.7939 -1890.6201 c274.3501 -1882.1943 271.2539 -1873.5117 269.1597 -1864.2354 c267.1807 -1855.4707 269.4761 -1846.3457 267.0156 -1837.5313 C269.4321 -1837.5791 271.8452 -1837.4795 274.2207 -1837.2207 c286.6978 -1835.8613 296.252 -1827.5762 300.7456 -1816.0918 c304.4077 -1806.7334 303.895 -1794.4336 301.8276 -1784.7656 c299.9194 -1775.8428 293.3198 -1770.4258 284.9517 -1767.7441 c283.9849 -1767.4346 283.0132 -1767.123 282.0391 -1766.8125 C282.2759 -1764.0703 280.9121 -1761.3428 277.3828 -1760.6201 c264.7227 -1758.0273 252.2705 -1754.4434 239.2578 -1756.3389 c227.4233 -1758.0635 218.8701 -1767.1846 215.5796 -1778.2109 c212.3882 -1788.9043 210.7456 -1799.7793 215.0112 -1810.4141 c219.0874 -1820.5762 227.5879 -1826.8848 238.0332 -1829.5791 c243.229 -1830.9189 247.937 -1833.8828 253.1636 -1835.4639 C249.7422 -1838.0742 247.0693 -1841.918 244.7153 -1845.4229 c241.249 -1850.584 237.5234 -1856.9512 236.4409 -1863.3281 C220.9307 -1882.8057 205.5215 -1903.2139 184.3984 -1916.9004 c177.2314 -1921.5439 166.8799 -1925.0352 159.4341 -1918.7598 c155.0674 -1915.0791 155.7114 -1908.5459 156.7915 -1903.4365 c159.8154 -1889.126 168.269 -1875.7715 176.5396 -1863.9316 c181.2788 -1857.1465 186.0928 -1850.3838 190.9746 -1843.7012 c196.8232 -1835.6953 203.6113 -1827.4883 212.9292 -1823.5049 c220.6167 -1820.2188 213.9863 -1809.0234 206.3677 -1812.2803 c205.9453 -1812.4609 205.5361 -1812.6621 205.1226 -1812.8574 C204.0859 -1811.8506 202.5991 -1811.248 200.6475 -1811.3926 c195.1973 -1811.7959 190.8027 -1814.0479 186.2886 -1817 c183.9956 -1818.5 181.7339 -1820.4336 179.0225 -1821.0762 c175.8506 -1821.8281 172.6182 -1822.2881 169.3813 -1822.6387 c157.1484 -1823.9629 144.4277 -1823.7412 132.1504 -1823.0762 c126.9609 -1822.7939 120.0542 -1822.7686 115.3154 -1820.5059 c111.147 -1818.5146 106.9214 -1816.6563 102.7881 -1814.5889 c99.064 -1812.7266 95.1758 -1810.7324 91.9941 -1808.0166 c87.3164 -1804.0215 93.9531 -1794.7949 96.1509 -1791.3477 cf*U*u1 D1898.7915 -1999.3584 m1907.6685 -2003.5186 1916.9336 -2006.7881 1926.2217 -2009.8896 c1932.8145 -2012.0918 1939.4268 -2014.0557 1945.9512 -2016.502 c1949.0693 -2017.6709 1952.168 -2018.8174 1955.2969 -2019.833 C1955.3809 -2020.1035 1955.4795 -2020.3682 1955.5557 -2020.6416 c1957.1777 -2026.4678 1964.1699 -2026.2939 1967.0801 -2022.7002 C1967.3867 -2022.7451 1967.6904 -2022.7949 1967.999 -2022.835 C1968.6221 -2032.6465 1969.1953 -2042.667 1970.8379 -2052.2891 c1972.8281 -2063.9463 1975.6553 -2075.4434 1977.6104 -2087.1094 c1978.5635 -2092.7939 1979.1436 -2098.5166 1979.3096 -2104.2773 c1979.4541 -2109.2734 1981.3779 -2114.2793 1982.2002 -2119.2432 c1983.1162 -2124.7744 1983.8916 -2130.3057 1985.1084 -2135.7832 c1986.1553 -2140.4951 1988.9072 -2144.4951 1990.3799 -2149 C2003.7236 -2149 L2002.7158 -2143.8574 2000.6143 -2139.0938 1998.2549 -2134.2813 c1996.7441 -2131.2012 1996.5244 -2126.9863 1995.9609 -2123.6309 c1995.3555 -2120.0293 1994.8623 -2116.4121 1994.2275 -2112.8154 c1993.7461 -2110.0898 1992.3369 -2107.0225 1992.3096 -2104.2773 c1992.2764 -2100.8818 1991.9609 -2097.4922 1991.6016 -2094.1182 c1990.7861 -2086.4375 1989.3584 -2078.8291 1987.8438 -2071.2617 c1986.7334 -2065.7119 1985.5508 -2060.1777 1984.4629 -2054.625 C1994.8281 -2056.9951 2010.7813 -2047.0254 2017.8906 -2042.5459 c2020.1377 -2041.1299 2022.5596 -2039.3164 2024.3281 -2038.3486 c2029.4844 -2035.5293 2034.7871 -2031.4668 2037.0127 -2025.8604 c2039.0928 -2020.6191 2037.4307 -2015.1543 2032.6191 -2012.2471 c2028.4463 -2009.7256 2023.2656 -2009.7354 2019.1094 -2007.3008 c2016.1621 -2005.5742 2011.7686 -2006.4873 2008.5352 -2006.7158 c2005.0205 -2006.9648 2001.5166 -2007.4453 1998.0283 -2007.9307 c1992.0957 -2008.7559 1986.1992 -2009.6533 1980.2383 -2010.0498 C1979.873 -2002.0977 1979.7979 -1994.1387 1980.2656 -1986.1777 c1981.0879 -1972.1738 1984.25 -1958.2588 1990.625 -1945.7148 c1996.1885 -1934.7666 2006.5801 -1927.3428 2016.835 -1921.0859 c2021.5664 -1918.1992 2026.2236 -1915.6836 2031.6709 -1914.4951 c2038.0117 -1913.1123 2044.8535 -1913.5967 2051.2852 -1913.8945 c2056.7207 -1914.1455 2062.1836 -1914.1377 2067.5322 -1915.1367 c2073.9336 -1916.333 2080.2695 -1917.8545 2086.5234 -1919.6631 c2093.4238 -1921.6592 2100.1387 -1924.1816 2106.5371 -1927.4492 c2112.418 -1930.4531 2117.6035 -1934.4541 2123.4473 -1937.5215 c2132.5391 -1942.293 2141.4414 -1948.2422 2145.6211 -1957.4961 C2145.5479 -1957.7637 2145.4629 -1958.0225 2145.3672 -1958.2734 C2138.6484 -1960.75 2129.5527 -1958.9502 2122.6523 -1958.5732 c2116.9893 -1958.2637 2111.2852 -1958.083 2105.6152 -1957.957 c2099.3066 -1957.8174 2092.3418 -1957.7363 2086.3154 -1959.8438 c2079.7715 -1962.1318 2075.3379 -1969.3164 2080.1621 -1975.5713 c2084.9922 -1981.834 2093.5703 -1984.4277 2101.0615 -1985.8184 c2105.877 -1986.7119 2110.542 -1987.6035 2115.249 -1988.2744 C2113.8555 -1991.29 2112.7705 -1994.5215 2111.3242 -1997.3037 c2105.3008 -2008.8887 2102.6846 -2020.6836 2110.5898 -2032.1846 c2113.9902 -2037.1309 2118.583 -2041.1191 2122.9014 -2045.2266 c2128.5313 -2050.5791 2134.04 -2055.9883 2139.9512 -2061.0391 c2151.2754 -2070.7129 2163.457 -2079.3906 2176.0781 -2087.2822 c2187.9551 -2094.709 2200.3711 -2099.5469 2213.5439 -2104.1543 c2219.0811 -2106.0918 2224.4805 -2108.2754 2230.125 -2109.7373 c2234.3311 -2110.8271 2239.875 -2114.0488 2244.1328 -2111.5342 c2248.3545 -2109.041 2250.7783 -2105.2861 2252.2285 -2100.6787 c2253.5107 -2096.6074 2253.0879 -2092.5615 2254.5713 -2088.625 c2258.8184 -2077.3574 2264.126 -2066.8477 2266.9883 -2055.0938 c2270.1328 -2042.1816 2271.9375 -2028.8857 2273.5977 -2015.7217 c2275.1064 -2003.7617 2274.3535 -1991.4219 2274.3535 -1979.3994 c2274.3535 -1973.6602 2275.041 -1967.4287 2273.8223 -1961.7998 c2272.7227 -1956.7188 2270.4326 -1951.8662 2267.2285 -1947.7891 c2264.5801 -1944.417 2261.2148 -1941.7705 2257.4746 -1939.6943 c2255.2412 -1938.4551 2252.7861 -1937.5352 2250.3848 -1936.6816 c2248.0957 -1935.8682 2244.917 -1935.7754 2242.8652 -1934.5166 c2240.4502 -1933.0342 2238.0117 -1932.2891 2235.5615 -1932.04 C2235.6855 -1930.5186 2235.5645 -1928.9053 2235.1172 -1927.1768 c2233.9648 -1922.7188 2227.4482 -1920.5166 2224.2539 -1924.3086 c2222.6934 -1926.1592 2221.5674 -1927.9258 2220.6748 -1930.1787 c2220.5352 -1930.5303 2220.4121 -1930.915 2220.291 -1931.3105 C2218.9141 -1929.6816 2217.7607 -1927.7949 2216.666 -1926.2012 c2214.8838 -1923.6074 2213.0283 -1921.0674 2210.6484 -1919.0664 C2208.4658 -1911.0469 2201.7744 -1902.2295 2193.7031 -1901.4814 c2182.5 -1900.4434 2178.918 -1916.0117 2177.8672 -1924.1074 c2177.3789 -1927.8809 2177.3525 -1931.6973 2177.3447 -1935.4941 c2177.3418 -1937.0664 2177.2559 -1938.6064 2176.9521 -1940.1484 c2176.8047 -1940.8984 2176.5771 -1941.6338 2176.2773 -1942.3359 C2175.1201 -1940.6162 2175.6191 -1938.0234 2175.1113 -1936.1777 c2174.2598 -1933.0801 2170.7578 -1930.2285 2168.9609 -1927.5459 c2165.6094 -1922.5449 2162.4873 -1917.3662 2157.123 -1914.291 c2154.6807 -1912.8906 2151.2061 -1913.1436 2149.2461 -1915.3066 c2144.0479 -1921.0449 2143.4971 -1928.2021 2144.1895 -1935.4795 C2143.3096 -1934.752 2142.4141 -1934.0371 2141.4951 -1933.3457 c2137.5977 -1930.4121 2133.2988 -1928.0225 2128.9883 -1925.7607 c2123.9209 -1923.1016 2119.4316 -1919.7188 2114.4219 -1916.9297 c2092.5391 -1904.7451 2066.7607 -1900.6533 2042.0557 -1900.6553 c2029.0459 -1900.6563 2018.6426 -1904.6064 2007.7559 -1911.417 c1997.457 -1917.8594 1987.0371 -1925.918 1980.792 -1936.5352 c1967.9277 -1958.4033 1966.1191 -1984.6162 1967.2119 -2009.5625 C1966.4521 -2009.4316 1965.6953 -2009.2773 1964.9404 -2009.1152 C1960.4971 -2000.2461 1953.3438 -1992.6572 1945.6348 -1986.6221 c1933.9756 -1977.4951 1923.5869 -1967.0107 1911.4497 -1958.3652 c1906.4858 -1954.8301 1901.2983 -1950.8145 1895.4468 -1948.9609 c1891.4941 -1947.708 1887.4746 -1946.7793 1883.3574 -1946.2744 c1875.5981 -1945.3242 1866.645 -1947.3447 1864.6162 -1956.0547 c1862.5283 -1965.0146 1867.918 -1975.6309 1873.5479 -1982.2051 c1880.1406 -1989.9023 1889.7524 -1995.1221 1898.7915 -1999.3584 cf0 D2014.1201 -2019.4648 m2016.2451 -2020.6387 2018.5215 -2021.3926 2021.002 -2022.0313 c2021.9297 -2022.2695 2022.8525 -2022.5117 2023.7734 -2022.7646 C2021.0527 -2025.6797 2017.0684 -2026.665 2014.2324 -2029.3184 c2014.1465 -2029.3984 2014.084 -2029.46 2014.0313 -2029.5107 c2014.0283 -2029.5137 2014.0264 -2029.5146 2014.0234 -2029.5166 C2013.1504 -2030.1533 2012.2383 -2030.7373 2011.3291 -2031.3203 c2006.5049 -2034.4189 2001.3916 -2037.1152 1996.1475 -2039.4248 c1993.8359 -2040.4424 1991.3691 -2041.1992 1988.9102 -2041.7539 c1988.2656 -2041.8994 1988.2129 -2041.9121 1987.7637 -2041.9111 C1986.4365 -2040.2559 1984.5615 -2039.2344 1982.3252 -2039.4297 C1982.041 -2035.8486 1981.835 -2032.2568 1981.5264 -2028.7256 c1981.3633 -2026.8623 1981.209 -2024.998 1981.0615 -2023.1328 C1992.0879 -2022.4189 2003.0908 -2019.8311 2014.1201 -2019.4648 Cf2223.7871 -1947.4219 m2223.8945 -1947.3828 2224.0029 -1947.3457 2224.1113 -1947.3066 C2224.7568 -1947.1729 2225.3848 -1946.9521 2225.9512 -1946.6514 C2227.9238 -1945.9658 2229.9121 -1945.3379 2231.9512 -1944.8906 c2234.0273 -1944.4355 2235.8848 -1945.4834 2237.5703 -1946.5186 c2240.1328 -1948.0918 2244.0508 -1948.2813 2246.9287 -1949.2178 c2257.1553 -1952.5449 2261.3535 -1960.6807 2261.3535 -1970.9639 c2261.3535 -1984.7852 2261.9775 -1998.7695 2260.916 -2012.5605 c2260.4004 -2019.2598 2258.6475 -2025.6973 2258.1406 -2032.3906 c2257.5537 -2040.1504 2255.3867 -2047.875 2253.5293 -2055.4033 c2251.9883 -2061.6523 2249.4482 -2067.4844 2246.9189 -2073.3887 c2244.6348 -2078.7188 2240.3623 -2085.6064 2240.3506 -2091.5098 c2240.3477 -2093.082 2240.2617 -2094.6221 2239.959 -2096.1641 c2239.7842 -2097.0518 2239.5254 -2097.9307 2239.1289 -2098.7422 c2239.0762 -2098.8506 2239.0273 -2098.9375 2238.9766 -2099.0283 C2233.748 -2097.8398 2228.5371 -2095.8145 2223.5957 -2093.9795 c2210.5195 -2089.126 2197.6445 -2085.1387 2185.6309 -2077.8936 c2172.8184 -2070.167 2160.5869 -2061.4863 2149.1436 -2051.8467 c2141.2363 -2045.1855 2133.8916 -2037.8721 2126.4717 -2030.6816 c2120.2813 -2024.6816 2116.1416 -2017.8398 2119.875 -2009.1826 c2121.708 -2004.9297 2124.1924 -2001.0029 2125.9385 -1996.7012 c2126.9551 -1994.1953 2127.8467 -1991.4033 2129.8145 -1990.2305 c2130.5166 -1989.8125 2131.2354 -1989.4639 2131.9414 -1989.0986 C2132.9619 -1988.7754 2133.791 -1988.2129 2134.4385 -1987.5039 C2136.2891 -1985.9092 2138.3447 -1986.7158 2140.5703 -1986.1777 c2145.6797 -1984.9434 2150.8594 -1984.0654 2155.9961 -1982.96 c2165.5459 -1980.9063 2173.7705 -1975.6982 2182.4121 -1971.3779 c2187.5547 -1968.8066 2192.6982 -1966.2344 2197.8418 -1963.6631 c2202.2129 -1961.4775 2206.9082 -1959.6572 2210.6123 -1956.4453 c2214.0332 -1953.4805 2219.1025 -1950.6543 2223.7871 -1947.4219 Cf2153.8369 -1968.293 m2157.4131 -1967.9033 2160.9863 -1964.7832 2160.1104 -1960.1807 c2159.8291 -1958.7021 2159.459 -1957.2734 2159.0127 -1955.8896 C2159.2871 -1951.9912 2158.8584 -1947.9746 2158.3633 -1944.2734 c2157.9609 -1941.2676 2156.7031 -1936.5352 2156.5137 -1932.2383 C2156.6504 -1932.4512 2156.7881 -1932.665 2156.9268 -1932.876 c2158.6816 -1935.5498 2160.5078 -1938.1641 2162.5684 -1940.6016 C2163.2236 -1945.8105 2165.29 -1951.0674 2169.877 -1953.9893 c2176.5049 -1958.2109 2182.3086 -1956.0781 2186.7744 -1950.2285 c2192.2646 -1943.0381 2189.6855 -1931.9893 2190.9424 -1923.6475 c2191.2695 -1921.4766 2191.8213 -1919.3584 2192.5303 -1917.2842 c2192.7822 -1916.5479 2193.2285 -1915.8779 2193.625 -1915.2148 C2194.7734 -1916.2852 2195.6455 -1917.79 2196.4014 -1919.0205 c2196.9678 -1919.9434 2197.4385 -1920.9229 2197.9053 -1921.8984 c2198.0645 -1922.2295 2198.4844 -1924.5654 2198.3477 -1922.9043 c2198.6494 -1926.5645 2200.8926 -1927.5137 2203.1572 -1929.7881 c2204.8555 -1931.4922 2206.083 -1933.7148 2207.4561 -1935.6748 c2208.2139 -1936.7568 2208.9971 -1937.7734 2209.8047 -1938.7471 C2208.4551 -1939.7666 2207.7383 -1941.2246 2207.5586 -1942.7725 C2206.6807 -1943.3555 2205.8047 -1943.9414 2204.9434 -1944.5479 c2193.4727 -1952.6309 2179.876 -1958.1406 2167.2773 -1964.4385 c2161.8232 -1967.165 2157.165 -1969.4297 2151.126 -1970.7285 c2144.8076 -1972.0879 2138.1953 -1972.6357 2131.9697 -1974.2021 c2130.3369 -1974.6133 2128.9199 -1975.4863 2127.5293 -1976.4111 C2123.6064 -1976.4111 2119.6641 -1976.3672 2115.7891 -1975.7539 c2113.5986 -1975.4063 2111.4551 -1974.8145 2109.3281 -1974.2031 c2108.5234 -1973.9727 2104.7373 -1973.3311 2105.3027 -1973.4121 c2102.3164 -1972.9854 2099.3809 -1972.1602 2096.5254 -1971.208 c2096.4219 -1971.1738 2096.3223 -1971.1309 2096.2197 -1971.0947 C2097.9902 -1970.9639 2099.7891 -1970.96 2101.5322 -1970.9346 c2106.8379 -1970.8564 2112.124 -1971.2793 2117.4238 -1971.4043 c2124.0205 -1971.5596 2130.6006 -1972.1563 2137.2021 -1972.1563 c2142.4238 -1972.1553 2149.4688 -1971.8564 2153.8369 -1968.293 Cf1878.3662 -1958.9814 m1884.5508 -1957.7119 1893.3896 -1961.9473 1898.7358 -1965.4082 c1911.2061 -1973.4785 1922.6855 -1983.0576 1933.2246 -1993.5059 c1935.1309 -1995.3955 1937.7275 -1996.7949 1939.7881 -1998.5459 c1941.0479 -1999.6162 1942.251 -2000.75 1943.4199 -2001.918 C1939.709 -2000.5029 1936 -1999.1504 1932.2627 -1998.0928 c1923.1025 -1995.5 1914.0073 -1992.0967 1905.353 -1988.1338 c1896.9272 -1984.2754 1887.4365 -1979.417 1881.7456 -1971.8213 c1879.3823 -1968.667 1878.8213 -1965.582 1877.6992 -1961.9346 c1877.5049 -1961.3037 1877.4893 -1959.9072 1877.4019 -1959.2754 C1877.6177 -1959.1826 1877.9219 -1959.0723 1878.3662 -1958.9814 cf*U2165.8438 -2021.4141 m2165.3281 -2021.3867 2165.6221 -2021.3398 2165.3799 -2020.9707 c2164.5498 -2019.7041 2164.1973 -2017.8779 2163.8643 -2016.2188 c2163.2578 -2013.1924 2163.3438 -2009.9863 2163.3428 -2006.9121 c2163.3389 -1998.5293 2150.3389 -1998.5283 2150.3428 -2006.9121 c2150.3477 -2017.874 2151.8145 -2033.6729 2165.8438 -2034.4141 c2174.2246 -2034.8574 2174.1826 -2021.8545 2165.8438 -2021.4141 cf2216.5 -2033.416 m2212.957 -2033.416 2210 -2036.373 2210 -2039.916 C2210 -2042.916 L2210 -2046.459 2212.957 -2049.416 2216.5 -2049.416 c2220.043 -2049.416 2223 -2046.459 2223 -2042.916 C2223 -2039.916 L2223 -2036.373 2220.043 -2033.416 2216.5 -2033.416 cf2229.3496 -1976.9092 m2229.3457 -1968.5264 2216.3457 -1968.5254 2216.3496 -1976.9092 c2216.3525 -1984.833 2217.1123 -1992.0732 2219.582 -1999.6387 c2222.1709 -2007.5723 2234.7266 -2004.1758 2232.1172 -1996.1836 c2229.9746 -1989.6182 2229.3525 -1983.7861 2229.3496 -1976.9092 cf*u1 D300.9741 -1226.957 m302.397 -1218.5674 300.3999 -1209.8516 293.5991 -1204.2939 c287.085 -1198.9707 278.6187 -1197.2969 270.3921 -1197.0957 c262.2607 -1196.8965 253.7393 -1198.4404 246.2124 -1201.5156 c237.5322 -1205.0605 230.3452 -1211.1758 223.7207 -1217.7842 C226.124 -1209.5283 228.1558 -1201.1631 229.6152 -1192.6074 c233.1255 -1172.0293 234.1484 -1152 234.1499 -1131 c234.1504 -1122 221.1504 -1122 221.1499 -1131 c221.1484 -1151 220.1982 -1170.8682 216.7842 -1190.8857 c215.2681 -1199.7725 213.0532 -1208.4736 210.4453 -1217.0635 C210.4512 -1199.7783 209.9175 -1176.2168 207.3564 -1161.5029 c202.6416 -1134.4141 193.9194 -1108.166 188.9131 -1081.1338 c187.3882 -1072.8975 174.8604 -1076.3755 176.3779 -1084.5684 c181.2695 -1110.9834 189.5234 -1136.7012 194.4824 -1163.1016 c197.5537 -1179.4492 197.7305 -1196.3662 197.4966 -1213.1621 C194.3789 -1208.6465 191.2095 -1204.167 187.9077 -1199.7813 c178.1094 -1186.7666 166.4092 -1171.7793 150.3145 -1166.5059 c135.02 -1161.4941 120.0215 -1173.499 116.5654 -1188.2031 c112.9131 -1203.7422 124.9102 -1216.1982 136.1934 -1224.8066 c139.8823 -1227.6211 143.7217 -1230.1387 147.6616 -1232.4609 C146.4438 -1232.4395 145.2251 -1232.459 144.0068 -1232.5352 c129.0317 -1233.4785 108.3921 -1238.1084 104.3706 -1255.1104 c103.8442 -1257.334 104.3213 -1259.8193 106.042 -1261.4336 c114.6924 -1269.5508 126.624 -1271.4404 138.0396 -1272.1172 c150.2529 -1272.8418 162.8179 -1272.624 174.9165 -1270.8096 c182.3726 -1269.6914 188.9771 -1266.9141 195.0366 -1263.1211 C194.707 -1265.126 194.5034 -1267.1387 194.3442 -1269.0586 c193.7124 -1276.6836 194.7007 -1284.0547 199.3491 -1290.3701 c209.8228 -1304.6006 230.4185 -1309.9551 247.2275 -1307.666 c255.4761 -1306.543 263.2764 -1302.5225 268.166 -1295.7305 c274.0737 -1287.5244 270.0332 -1276.8701 264.9146 -1269.5225 c262.0601 -1265.4248 258.5137 -1262.0313 254.5229 -1259.1484 C256.644 -1258.8271 258.7339 -1258.4629 260.7725 -1258.0566 c277.5059 -1254.7246 297.7974 -1245.6895 300.9741 -1226.957 cf0 D180.9517 -1256.0137 m175.855 -1257.792 170.4551 -1258.5322 165.0996 -1258.9541 c156.1577 -1259.6572 146.9961 -1259.5459 138.0396 -1259.1172 c131.6685 -1258.8135 124.2871 -1258.082 118.5913 -1254.7275 C124.0923 -1246.5977 139.4409 -1245.5977 147.8931 -1245.3564 c157.2935 -1245.0879 167.8843 -1249.5322 176.7378 -1252.3477 c179.186 -1253.126 181.6313 -1253.9131 184.0806 -1254.6836 C183.0737 -1255.1816 182.0381 -1255.6348 180.9517 -1256.0137 cf171.1816 -1230.2295 m157.7998 -1223.7354 141.499 -1215.9834 132.6616 -1203.6982 c129.1147 -1198.7666 128.0767 -1194.6396 129.6982 -1189.4893 c131.4072 -1184.0596 136.4893 -1179.2813 141.7705 -1178.3057 c143.123 -1178.0557 145.8037 -1178.6357 148.3071 -1179.541 c150.7842 -1180.4355 154.0444 -1182.5977 156.3979 -1184.4551 c163.1909 -1189.8145 168.9209 -1196.5205 174.2935 -1203.2578 c182.5967 -1213.6699 189.4751 -1225.1484 197.1611 -1236.0098 C197.1553 -1237.0068 197.1475 -1238.0059 197.1475 -1239 c197.1475 -1240.2852 197.4863 -1241.3613 198.0493 -1242.2334 C189.1445 -1238.1201 179.9648 -1234.4912 171.1816 -1230.2295 cf257.9033 -1287.1719 m256.7627 -1292.3027 249.2148 -1294.084 244.9399 -1294.9346 c233.8926 -1297.1328 219.7896 -1292.6982 211.7559 -1284.9824 c208.1465 -1281.5156 207.0747 -1277.416 207.1719 -1272.5752 c207.2344 -1269.4707 207.0962 -1261.1533 209.9287 -1259.4492 c211.3091 -1258.6182 212.1777 -1257.5303 212.6357 -1256.3467 C216.6772 -1257.8906 220.9336 -1258.9336 225.2891 -1259.5938 C234.0688 -1262.5371 242.6499 -1266.1211 249.6108 -1271.9395 c253.562 -1275.2422 259.1416 -1281.5996 257.9033 -1287.1719 cf237.9922 -1247.334 m234.6045 -1247.3271 231.0879 -1247.1602 227.6064 -1246.6982 C224.1899 -1245.584 220.7876 -1244.5439 217.48 -1243.5146 C225.0938 -1235.4336 232.3804 -1226.9717 240.3159 -1220.1973 c251.1392 -1210.958 271.4507 -1205.5557 284.4077 -1213.5684 c289.5005 -1216.7178 289.4292 -1224.4727 286.5649 -1229.6816 c282.9546 -1236.248 275.1289 -1240.0352 268.3916 -1242.4756 c258.6733 -1245.9951 248.2876 -1247.3545 237.9922 -1247.334 cf*U*u1 D3450.2393 -1438.1279 m3447.1162 -1427.0068 3438.9121 -1418.9766 3431.5869 -1410.4707 c3427.7148 -1405.9727 3424.3496 -1401.0156 3420.5752 -1396.4238 c3416.3691 -1391.3086 3411.9824 -1386.3467 3407.8711 -1381.1543 c3403.8486 -1376.0742 3399.876 -1371.5811 3395.1445 -1367.0918 c3389.7148 -1361.9404 3384.1865 -1356.8965 3378.7832 -1351.7178 c3373.9961 -1347.1318 3369.3779 -1342.3818 3365.0117 -1337.3945 c3360.0352 -1331.71 3356.1719 -1324.959 3351.9863 -1318.6807 c3349.2363 -1314.5566 3346.3105 -1310.6104 3343.4111 -1306.6436 C3343.6406 -1306.748 3343.8711 -1306.8516 3344.0996 -1306.957 c3347.8838 -1308.7031 3351.5264 -1310.751 3355.209 -1312.6973 c3360.792 -1315.6475 3366.8809 -1317.8145 3372.5664 -1320.6426 c3384.7969 -1326.7275 3398.4629 -1331.4385 3412.168 -1332.3047 c3420.7451 -1332.8467 3432.6094 -1333.1611 3439.5664 -1327.4395 c3441.2188 -1326.082 3441.9395 -1323.1025 3441.2383 -1321.1162 c3436.3887 -1307.3633 3427.1074 -1296.9531 3417.9287 -1285.9365 c3408.1719 -1274.2285 3398.0723 -1263.2422 3389.5645 -1250.5566 c3381.0342 -1237.8359 3372.2344 -1225.3242 3362.8232 -1213.2363 c3354.3271 -1202.3242 3345.0244 -1192.4072 3335.6914 -1182.2305 c3331.1992 -1177.334 3327.0605 -1172.2109 3323.5713 -1166.5479 c3321.4277 -1163.0684 3319.3545 -1159.1221 3319.6016 -1154.9492 c3319.5703 -1155.4883 3320.2832 -1153.8604 3320.0313 -1154.1533 c3320.6846 -1153.3945 3321.3672 -1153.0195 3321.665 -1152.8945 c3324.8477 -1151.5557 3327.9668 -1151.418 3331.3945 -1151.4141 c3338.7656 -1151.4053 3347.1426 -1152.6738 3353.7686 -1155.9805 c3366.5342 -1162.3486 3379.5664 -1168.4434 3393.584 -1171.4639 c3409.2295 -1174.835 3426.665 -1173.2949 3441.252 -1166.4404 c3443.1436 -1165.5518 3444.6484 -1162.9033 3444.4707 -1160.8281 c3443.8379 -1153.4102 3438.8916 -1148.4277 3433.4854 -1143.8066 c3427.1934 -1138.4297 3423.252 -1131.8721 3419.5811 -1124.5439 c3417.4697 -1120.3281 3413.1445 -1116.416 3410.3701 -1112.542 c3407.5684 -1108.6289 3404.9355 -1104.5957 3402.3447 -1100.541 c3396.958 -1092.1104 3391.9082 -1083.4697 3386.5205 -1075.0391 c3375.9707 -1058.5313 3364.1514 -1042.8979 3353.8564 -1026.1973 c3349.0176 -1018.3472 3344.4434 -1010.4043 3340.3262 -1002.1528 c3337.9531 -997.397 3334.9082 -991.2935 3334.4492 -985.437 C3335.3164 -986.0508 3336.1836 -986.666 3337.0586 -987.272 c3338.4717 -988.25 3340.0166 -989.1221 3341.6465 -989.6846 c3342.7529 -990.0537 3342.7705 -990.0713 3341.7002 -989.7378 C3342.8506 -990.8857 3344.0254 -992 3345.2275 -993.0933 c3347.9756 -995.5913 3350.9688 -997.4209 3354.4863 -998.5996 C3355.4375 -998.8525 3356.4033 -999.019 3357.3848 -999.0981 C3357.5508 -999.126 3357.6895 -999.1475 3357.8223 -999.1685 C3359.1689 -1000.0459 3360.5391 -1000.8877 3361.9189 -1001.7139 c3374.3838 -1009.1826 3390.9121 -1016.8901 3405.248 -1010.4248 c3407.2148 -1009.5381 3408.5488 -1006.8916 3408.4678 -1004.812 c3408.1738 -997.2256 3405.0781 -991.0859 3401.0781 -984.8042 c3396.6133 -977.7925 3393.292 -969.9551 3389.5781 -962.5273 c3381.3701 -946.1094 3370.1992 -931.4434 3359.8457 -916.3623 c3350.3252 -902.4927 3342.5732 -887.8262 3336.8408 -871.9956 c3333.8086 -863.6226 3331.2246 -854.9922 3329.377 -846.2793 c3327.2627 -836.3198 3327.4609 -825.9204 3327.459 -815.793 c3327.458 -810.7871 3322.8223 -808.7725 3319.0879 -809.7451 C3317.751 -804.8145 3315.7754 -800.1133 3312.9531 -796.1162 c3304.8359 -784.6201 3289.3672 -796.7358 3282.002 -803.3677 c3261.0713 -822.2134 3246.5742 -847.2598 3225.5371 -865.9683 c3215.2891 -875.0815 3203.8027 -882.7056 3192.3828 -890.2471 c3181.0703 -897.7178 3170.0938 -905.7158 3158.7275 -913.083 c3145.8623 -921.4219 3132.668 -929.2422 3119.6953 -937.4097 c3114.2578 -940.8325 3109.2246 -944.2896 3103.334 -946.8027 c3098.0791 -949.0449 3093.3281 -951.981 3089.1133 -955.8574 c3084.9893 -959.6504 3082.1846 -964.7373 3080.668 -970.0806 c3080.084 -972.1392 3080.6084 -974.9814 3082.3398 -976.4048 c3090.3926 -983.0264 3103.0566 -981.0015 3112.7813 -981.4487 c3128.5664 -982.1748 3143.9551 -984.5151 3159.8213 -984.1919 c3176.291 -983.8564 3192.7363 -982.8076 3209.2168 -983.0166 c3213.1709 -983.0669 3217.123 -983.2363 3221.0713 -983.4634 c3224.0234 -983.6328 3227.5342 -983.3887 3230.2148 -984.6265 c3230.3574 -984.6924 3230.4971 -984.7617 3230.6387 -984.8281 C3230.623 -984.8589 3230.6113 -984.8809 3230.5947 -984.9131 c3228.7637 -988.3169 3225.8467 -991.3525 3222.7861 -993.6797 c3220.0303 -995.7759 3217.3594 -997.2104 3214.8691 -999.6978 c3212.3848 -1002.1792 3209.8828 -1004.6436 3207.3584 -1007.085 c3201.8535 -1012.4082 3196.1514 -1017.5728 3190.0459 -1022.2026 c3184.2881 -1026.5688 3178.3301 -1030.3364 3172.7607 -1034.9648 c3166.7051 -1039.998 3160.3838 -1044.7002 3154.0342 -1049.3535 c3133.7842 -1064.1934 3111.7793 -1078.4673 3096.1953 -1098.5244 c3093.4629 -1102.041 3090.6045 -1105.9111 3089.7217 -1110.377 c3088.4854 -1116.6348 3093.7813 -1121.2734 3098.5771 -1124.3223 c3102.4443 -1126.7803 3106.623 -1127.3848 3110.875 -1128.5469 c3118.1895 -1130.5479 3125.8789 -1131.3438 3133.4268 -1131.8027 c3148.9072 -1132.7441 3164.457 -1131.373 3179.9453 -1131.3242 c3187.2334 -1131.3008 3194.3457 -1129.4932 3201.5479 -1128.6367 c3204.6455 -1128.2676 3207.7949 -1128.1777 3210.9531 -1128.1826 C3206.2217 -1133.5479 3199.3574 -1137.8711 3194.6523 -1142.3037 c3192.9102 -1143.9434 3191.293 -1145.7725 3189.9121 -1147.7285 c3188.2363 -1150.1025 3184.3047 -1152.2666 3182.0313 -1154.1543 c3175.9561 -1159.2002 3169.8516 -1164.21 3163.6934 -1169.1563 c3151.3848 -1179.042 3138.7676 -1188.418 3125.6738 -1197.2324 c3113.3564 -1205.5244 3101.252 -1214.1768 3090.0762 -1223.9746 c3085.8955 -1227.6396 3081.7578 -1231.0801 3077.4844 -1234.6064 c3073.2422 -1238.1094 3069.5449 -1242.7744 3067.2012 -1247.7461 c3062.7813 -1257.127 3064.9199 -1268.4414 3075.3125 -1272.082 c3079.667 -1273.6074 3084.7285 -1273.5371 3089.2773 -1274.0293 c3091.5039 -1274.2715 3093.71 -1275.3203 3095.9375 -1275.3389 c3100.5205 -1275.3779 3105.0723 -1275.6455 3109.6338 -1276.0879 c3126.0674 -1277.6826 3142.2822 -1281.6289 3158.6621 -1283.8037 c3173.6855 -1285.7988 3188.7803 -1287.2725 3203.9473 -1287.3398 c3210.5654 -1287.3691 3218.084 -1285.832 3224.9668 -1286.6328 C3221.0967 -1290.5029 L3218.9473 -1292.6523 3216.0371 -1294.3145 3213.6504 -1296.2148 c3210.5781 -1298.6602 3207.6709 -1301.3145 3204.8008 -1303.9902 c3193.9424 -1314.1123 3183.8564 -1325.0156 3172.8105 -1334.9492 c3167.4756 -1339.7471 3161.7354 -1344.0088 3156.5361 -1348.9414 c3150.9141 -1354.2754 3144.8945 -1359.1836 3138.8311 -1364.001 c3128.3291 -1372.3457 3117.8438 -1380.9082 3107.209 -1389.0283 c3100.1963 -1394.3828 3090.6592 -1400.834 3092.4092 -1410.9023 c3094.2461 -1421.4736 3115.1865 -1417.2246 3122.0869 -1416.5771 c3136.7119 -1415.2061 3151.9531 -1416.3145 3166.6396 -1416.374 c3182.9668 -1416.4395 3199.2939 -1416.8477 3215.5576 -1418.373 c3225.4287 -1419.2988 3235.0781 -1421.3662 3244.8906 -1422.5967 c3253.1084 -1423.627 3261.3184 -1424.7178 3269.5234 -1425.832 C3271.0195 -1434.5107 3272.7373 -1443.1543 3274.3105 -1451.8145 c3280.0811 -1483.5742 3278.4561 -1515.8184 3278.4561 -1547.9609 c3278.4561 -1559.1787 3279.2715 -1570.2363 3280.2754 -1581.4033 c3281.3594 -1593.4629 3281.4561 -1605.4268 3281.4561 -1617.5254 c3281.4561 -1628.5674 3282.166 -1639.8711 3281.2129 -1650.875 c3280.4512 -1659.6621 3280.1367 -1668.4746 3286.3613 -1675.4746 c3291.9414 -1681.752 3301.1025 -1672.5244 3295.5527 -1666.2832 c3292.6631 -1663.0313 3293.6777 -1657.1455 3294.001 -1653.209 c3294.5508 -1646.5313 3294.4561 -1639.8799 3294.4561 -1633.1797 c3294.4561 -1617.6865 3294.7012 -1602.1328 3293.498 -1586.6758 c3292.332 -1571.7324 3291 -1557.0557 3291 -1542.0537 C3291 -1492.8291 L3291 -1470.6543 3286.0195 -1449.2363 3282.3848 -1427.6045 C3298.6797 -1429.9023 3314.9512 -1432.3252 3331.3057 -1434.1758 c3340.8086 -1435.251 3350.1992 -1436.7695 3359.373 -1439.5234 c3364.0068 -1440.9141 3369.0625 -1441.1846 3373.8369 -1442.0635 c3378.6563 -1442.9512 3383.4443 -1444.0029 3388.2383 -1445.0127 c3407.2754 -1449.0195 3426.7207 -1452.125 3445.6992 -1446.123 c3449.0605 -1445.0605 3451.2246 -1441.6348 3450.2393 -1438.1279 cf0 D3400.6953 -1434.2871 m3386.2246 -1431.6221 3371.4414 -1429.1182 3357.2422 -1425.4238 c3342.6416 -1421.624 3327.4121 -1421.1279 3312.5488 -1418.8867 c3301.8398 -1417.2715 3291.1104 -1415.7676 3280.3779 -1414.2969 C3279.7598 -1409.5254 3279.2676 -1404.7354 3278.9707 -1399.9141 c3276.9492 -1367.1201 3280.3311 -1334.2734 3280.1982 -1301.4668 c3280.1494 -1289.5977 3279.416 -1278.0127 3277.7715 -1266.2676 c3276.1113 -1254.415 3274.7275 -1242.5293 3273.9414 -1230.585 c3273.5742 -1225.001 3272.8164 -1218.876 3273.8066 -1213.3457 c3274.6777 -1208.4795 3275.2295 -1203.6318 3275.6504 -1198.709 c3276.5518 -1188.1465 3276.4531 -1177 3276.4541 -1167 c3276.4551 -1158 3263.4551 -1158 3263.4541 -1167 C3263.6367 -1195.7686 3261.2842 -1209.9756 v3258.7061 -1225.5449 3261.751 -1242.6426 3263.7334 -1258.1934 c3264.7354 -1266.0527 3266.2227 -1273.8906 3266.7109 -1281.7988 c3267.2354 -1290.3184 3267.3438 -1298.8506 3267.3125 -1307.3848 c3267.2529 -1323.7998 3266.416 -1340.1973 3265.9277 -1356.6035 c3265.4414 -1372.9102 3264.958 -1389.5117 3266.6543 -1405.7656 c3266.8896 -1408.0225 3267.1689 -1410.2734 3267.4668 -1412.5215 C3253.4131 -1410.5664 3239.4023 -1408.3447 3225.3408 -1406.4756 c3209.7822 -1404.4072 3194.0596 -1403.7578 3178.3799 -1403.4883 c3162.832 -1403.2197 3147.2754 -1403.3525 3131.7266 -1403.3525 c3126.3574 -1403.3525 3121.1777 -1403.6748 3115.8398 -1404.1914 c3113.6592 -1404.4023 3110.7822 -1404.8975 3108.0234 -1405.0039 C3109.4814 -1403.6162 3111.0742 -1402.3555 3112.6455 -1401.1143 c3117.6367 -1397.1699 3122.5361 -1393.123 3127.5215 -1389.168 c3134.7822 -1383.4082 3142.1855 -1377.832 3149.4424 -1372.0664 c3152.7217 -1369.4609 3155.9463 -1366.7891 3159.127 -1364.0654 c3162.6914 -1361.0127 3165.8896 -1357.2314 3169.6094 -1354.4072 c3183.667 -1343.7314 3195.9414 -1330.9639 3208.4365 -1318.5576 c3214.2383 -1312.7969 3220.2168 -1307.1348 3226.8809 -1302.376 c3232.3203 -1298.4922 3236.8242 -1293.1582 3241.5469 -1288.4355 c3244.5566 -1285.4277 3243.7969 -1280.4072 3240.2324 -1278.2275 c3229.96 -1271.9463 3217.6318 -1273.7471 3206.2168 -1274.2881 c3190.4307 -1275.0371 3174.2803 -1272.8389 3158.6621 -1270.8037 c3142.2412 -1268.665 3126.0986 -1264.8848 3109.6338 -1263.0879 c3103.207 -1262.3867 3096.8555 -1261.9648 3090.4531 -1261.1748 c3086.707 -1260.7119 3081.8887 -1261.0293 3078.375 -1259.3467 C3078.252 -1258.418 3077.9941 -1257.5439 3077.9629 -1256.6211 c3077.8975 -1254.6348 3079.2305 -1252.6133 3080.2041 -1250.9922 c3082.5342 -1247.1152 3086.2324 -1243.5879 3090.2168 -1241.4473 c3093.0664 -1239.917 3095.5557 -1236.5244 3097.9482 -1234.3467 c3100.5713 -1231.958 3103.2939 -1229.6816 3106.0381 -1227.4346 c3112.0635 -1222.502 3118.416 -1217.9746 3124.8057 -1213.5303 c3137.5762 -1204.6484 3150.3379 -1195.9541 3162.6504 -1186.4258 c3174.7129 -1177.0928 3186.4424 -1167.3379 3198.1582 -1157.5771 c3200.877 -1155.3125 3202.9824 -1152.252 3205.6387 -1149.834 c3208.5703 -1147.166 3211.6846 -1144.6992 3214.6797 -1142.1025 c3220.5293 -1137.0313 3226.0186 -1131.1504 3228.2168 -1123.5518 c3229.3945 -1119.4805 3226.1328 -1115.3242 3221.9492 -1115.3242 c3215.7598 -1115.3242 3209.5264 -1115.1006 3203.3477 -1115.4697 c3195.4795 -1115.9404 3187.8477 -1118.1563 3179.9453 -1118.3242 c3164.4688 -1118.6523 3148.8984 -1119.5645 3133.4268 -1118.8027 c3126.3818 -1118.4561 3119.4707 -1117.417 3112.666 -1115.5566 c3109.627 -1114.7246 3105.7109 -1114.3418 3103.002 -1111.5801 C3103.4102 -1110.7969 3103.8779 -1110.041 3104.3467 -1109.2969 c3105.5557 -1107.3789 3107.0156 -1105.6426 3108.4844 -1103.9219 c3111.4531 -1100.4434 3114.7012 -1097.1992 3117.9844 -1094.0195 c3128.417 -1083.916 3140.2305 -1075.3613 3151.96 -1066.8525 c3157.7461 -1062.6558 3163.5352 -1058.4629 3169.2402 -1054.1567 c3175.4053 -1049.5039 3181.2031 -1043.4971 3187.7676 -1039.4863 c3200.3057 -1031.8257 3211.168 -1021.6445 3221.5713 -1011.3662 c3226.4189 -1006.5771 3232.2998 -1003.2114 3236.9248 -998.1597 c3240.6738 -994.0649 3245.9961 -986.9888 3244.3711 -980.9854 c3241.1768 -969.1841 3222.3291 -970.4111 3213.168 -970.106 c3197.3633 -969.5796 3181.541 -970.5327 3165.749 -971.0337 c3150.8008 -971.5078 3136.2861 -970.6494 3121.4238 -969.1455 c3115.4395 -968.54 3109.498 -968.3613 3103.4902 -968.2813 c3101.8516 -968.2593 3098.5107 -968.417 3095.7129 -968.2197 C3099.3418 -962.9082 3105.502 -959.6396 3111.6152 -957.4341 c3116.8516 -955.5454 3121.5566 -951.6074 3126.2559 -948.6348 c3131.9766 -945.0161 3137.748 -941.4785 3143.5127 -937.9312 c3164.2314 -925.1807 3184.1719 -911.3472 3204.4053 -897.8486 c3214.0029 -891.4458 3223.3965 -884.7329 3232.2383 -877.3115 c3241.9697 -869.1426 3249.4912 -859.5049 3257.7246 -849.9307 c3265.5986 -840.7749 3273.1143 -831.0991 3281.4395 -822.3784 c3287.0664 -816.4834 3294.4902 -806.8159 3303.1484 -804.6992 C3307.3584 -811.0933 3308.3662 -820.6543 3308.459 -827.7944 c3308.5127 -831.9141 3311.6846 -834.0054 3314.8818 -834.0742 C3315.0938 -837.4072 3315.4082 -840.7339 3315.8916 -844.0503 c3317.209 -853.0884 3319.7852 -861.8848 3322.6182 -870.5522 c3327.7578 -886.2764 3334.7617 -901.4517 3343.6152 -915.4282 c3353.4141 -930.896 3364.8926 -945.2114 3374.0654 -961.0918 c3378.623 -968.9819 3382.4629 -977.3081 3386.5361 -985.4541 c3388.9746 -990.3311 3392.8125 -994.874 3394.5557 -1000.0752 C3390.7959 -1000.1855 3386.7275 -998.8208 3383.4902 -997.7427 c3377.5156 -995.7524 3371.9092 -992.5996 3366.5576 -989.3247 c3363.8477 -987.667 3361.9482 -986.3901 3358.6289 -986.2578 c3355.6787 -986.1401 3352.7646 -982.3887 3350.8926 -980.5454 c3348.623 -978.3115 3346.1816 -977.7148 3343.6191 -976.0469 c3340.1289 -973.7734 3336.9287 -971.1733 3333.2422 -969.1963 c3330.3789 -967.6616 3325.8418 -968.2134 3324.3486 -971.5283 c3316.8809 -988.1094 3326.8984 -1005.9429 3335.1953 -1020.3018 c3345.541 -1038.209 3357.0166 -1055.418 3368.9424 -1072.3037 c3380.374 -1088.4902 3389.6299 -1106.083 3401.3135 -1122.1035 c3404.1543 -1125.998 3407.5674 -1129.5654 3409.752 -1133.875 c3411.9727 -1138.2578 3414.5254 -1142.4736 3417.6621 -1146.2686 c3419.9697 -1149.0605 3422.4561 -1151.4297 3425.1973 -1153.7715 c3426.1914 -1154.6211 3427.9688 -1155.9189 3429.3809 -1157.3516 C3407.1855 -1164.9453 3383.6289 -1156.1963 3363.4199 -1146.2861 c3349.5908 -1139.5049 3329.333 -1134.0889 3314.7422 -1141.9258 c3293.2227 -1153.4834 3318.2393 -1182.418 3327.6172 -1192.6426 c3337.0645 -1202.9434 3346.3887 -1213.0254 3354.9395 -1224.1143 c3364.2793 -1236.2266 3372.8574 -1248.9063 3381.3516 -1261.6182 c3388.7197 -1272.6426 3397.7598 -1282.3271 3406.3867 -1292.3594 c3413.5742 -1300.7178 3421.501 -1309.1816 3426.4082 -1319.1699 C3423.9551 -1319.3398 3421.0977 -1319.2461 3419.6797 -1319.2891 c3413.375 -1319.4824 3407.4355 -1319.0049 3401.2949 -1317.4707 c3394.25 -1315.7109 3387.2627 -1313.333 3380.7168 -1310.1973 c3374.7402 -1307.334 3368.4199 -1304.8613 3362.541 -1301.873 c3354.8203 -1297.9473 3346.8682 -1292.4277 3338.0156 -1291.7402 c3332.1084 -1291.2813 3329.0127 -1296.6973 3328.3838 -1301.835 c3327.6211 -1308.0605 3331.292 -1311.0391 3334.4072 -1315.7119 c3342.6992 -1328.1494 3350.4102 -1340.957 3360.6426 -1351.918 c3370.8496 -1362.8535 3382.3018 -1372.5703 3392.9648 -1383.0479 c3397.3213 -1387.3291 3400.7539 -1392.9941 3404.7109 -1397.6885 c3409.2549 -1403.0791 3414.0615 -1408.3662 3418.0752 -1414.1719 c3423.1592 -1421.5244 3430.6758 -1427.5508 3435.0771 -1435.3701 C3423.7021 -1437.4961 3412.2129 -1436.4092 3400.6953 -1434.2871 cf*U*u1 D1869.3208 -314.8564 m1863.9966 -313.2388 1859.2412 -307.7041 1856.2773 -303.2256 c1854.4229 -300.4238 1852.7632 -297.4243 1851.2568 -294.4224 c1850.228 -292.373 1849.4941 -290.2183 1848.8071 -288.0366 c1848.5869 -287.3369 1848.1138 -286.4268 1847.7192 -285.5537 C1848.1416 -284.0249 1848.0698 -282.3311 1847.5205 -280.8535 C1864.1924 -274.5957 1884.3218 -266.0566 1878.5981 -245.8364 c1876.7085 -239.1611 1871.7803 -234.2539 1866.1855 -230.1187 C1870.3398 -228.6709 1874.4424 -227.0552 1878.4795 -225.231 c1889.3813 -220.3047 1899.5645 -213.478 1909.3203 -206.5894 c1918.3525 -200.2114 1926.9355 -193.0942 1934.167 -184.7007 c1949.5078 -166.8926 1955.7441 -143.7954 1946.1406 -121.7012 c1944.0645 -116.9248 1940.833 -112.5459 1936.9697 -109.0718 c1932.7598 -105.2861 1925.6816 -101.105 1919.8193 -101.2222 c1905.5605 -101.5073 1892.4146 -107.3931 1880.9297 -115.5361 c1871.6157 -122.1396 1864.2861 -130.373 1856.7949 -138.8867 c1849.1357 -147.5918 1841.645 -156.4492 1834.5996 -165.6606 c1832.1943 -168.8052 1829.8384 -172.0044 1827.5498 -175.2539 C1827.1646 -166.7314 1825.8633 -158.437 1822.502 -150.251 c1817.6685 -138.4814 1809.9053 -128.4585 1802.4907 -118.2388 c1799.6582 -114.335 1796.1865 -110.3032 1791.2026 -109.3652 c1785.0508 -108.2075 1780.8384 -111.498 1776.7627 -115.5737 c1773.2354 -119.1011 1767.4277 -123.1138 1766.2729 -128.1475 c1764.8979 -134.1421 1764.8979 -140.4883 1765.0156 -146.6006 c1765.2461 -158.5791 1765.791 -170.7861 1766.6636 -182.7334 c1767.665 -196.4507 1771.1582 -209.8628 1777.5254 -222.0752 c1778.0244 -223.0322 1778.5479 -223.9312 1779.085 -224.7979 C1778.4419 -224.9063 1777.7964 -225.0293 1777.1445 -225.1885 c1773.5503 -226.0664 1769.9526 -226.9248 1766.3696 -227.8472 c1761.7783 -229.0293 1757.1621 -230.3564 1752.7563 -232.0928 C1747.4038 -225.5864 1745.1948 -217.6787 1745.0996 -208.6338 c1745.0112 -200.2559 1732.0112 -200.2471 1732.0996 -208.6338 c1732.2207 -220.1104 1735.1875 -229.8604 1741.3057 -238.1582 C1738.5977 -240.0894 1736.0981 -242.3413 1733.9058 -245.0322 c1731.271 -248.2661 1728.8047 -252.2266 1727.0234 -256.4844 C1723.0361 -255.4824 1719.8516 -252.5439 1716.9541 -249.7715 c1714.6768 -247.5933 1712.7373 -245.1099 1710.5801 -242.7974 c1709.5776 -241.7231 1708.5674 -240.6416 1707.7012 -239.4526 c1707.2813 -238.8525 1706.9063 -238.2246 1706.5718 -237.5732 C1706.6157 -237.5444 1706.6631 -237.4956 1706.7139 -237.4136 c1711.1494 -230.2695 1699.8994 -223.7476 1695.4893 -230.8521 c1689.5547 -240.4111 1699.0479 -250.2861 1705.5049 -256.728 c1709.9351 -261.1479 1714.563 -265.603 1720.4902 -267.9131 c1721.7588 -268.4072 1723.0112 -268.7617 1724.2563 -269.0137 C1724.2495 -271.8042 1724.7061 -274.5532 1725.7627 -277.1543 c1729.8872 -287.3086 1740.4326 -292.3809 1750.1118 -295.9775 c1766.8125 -302.1836 1784.269 -301.3188 1801.2178 -297.2817 C1801.397 -301.4063 1801.8218 -305.4858 1802.7905 -309.5703 c1804.1221 -315.1826 1807.4414 -320.1318 1810.186 -325.1348 c1815.1792 -334.2358 1821.8105 -343.5762 1833.0947 -344.1504 c1841.4771 -344.5767 1841.4355 -331.5635 1833.0947 -331.1392 c1826.8242 -330.8203 1822.8042 -321.105 1820.2793 -316.4604 c1818.4111 -313.0239 1816.4141 -309.8154 1815.3262 -306.0249 c1814.2998 -302.4492 1814.123 -298.771 1814.0977 -295.083 C1814.3882 -294.5645 1814.6021 -294 1814.752 -293.4146 C1821.4463 -291.2085 1828.0034 -288.6592 1834.3379 -286.0132 C1835.0254 -290.0967 1837.042 -294.1387 1838.6411 -297.8506 c1840.5811 -302.3564 1843 -306.6719 1845.7061 -310.7603 c1850.3672 -317.8037 1857.6313 -324.8862 1865.8647 -327.3882 c1873.9072 -329.8315 1877.3188 -317.2871 1869.3208 -314.8564 cf0 D1817.2012 -222.2832 m1817.2744 -222.1934 1817.3501 -222.1064 1817.4209 -222.0142 c1822.0161 -216.0083 1824.6309 -209.1333 1826.0698 -201.936 C1834.3149 -186.5571 1845.2402 -172.479 1856.3691 -159.231 c1864.8779 -149.1016 1873.3809 -138.394 1883.5156 -129.8467 c1888.7061 -125.4697 1894.5576 -121.8735 1900.6465 -118.8984 c1906.3311 -116.1216 1914.73 -112.9785 1921.0684 -114.7363 c1931.2676 -117.5645 1936.9111 -129.2476 1937.8633 -139.0449 c1938.9346 -150.0732 1935.416 -160.3604 1929.4746 -169.5151 c1917.709 -187.6421 1896.5313 -201.0923 1877.8286 -211.0933 c1869.4595 -215.5684 1860.5322 -218.7549 1851.3682 -221.0752 C1850.043 -220.9116 1848.8086 -221.2583 1847.7617 -221.9385 C1844.9014 -222.5903 1842.0225 -223.1689 1839.1338 -223.6763 c1832.8862 -224.7739 1826.311 -224.2349 1819.9805 -224.2349 c1818.8438 -224.2349 1817.7061 -224.2397 1816.5693 -224.2437 C1816.7739 -223.5879 1816.9844 -222.9346 1817.2012 -222.2832 Cf1779.0479 -166.1475 m1778.7324 -160.1421 1778.2734 -154.1475 1778.0586 -148.1372 c1777.9512 -145.1353 1777.9521 -142.1338 1778.0391 -139.1318 c1778.0791 -137.7314 1778.188 -136.3359 1778.3032 -134.9404 c1778.416 -133.5762 1779.7842 -130.937 1778.1436 -132.5776 c1780.0693 -130.6523 1781.9946 -128.7266 1783.9204 -126.8013 c1785.0752 -125.646 1787.5425 -122.5308 1788.5366 -122.1812 c1790.1152 -121.626 1795.7202 -131.04 1796.8027 -132.4946 c1804.4707 -142.7979 1810.9785 -153.4019 1813.8877 -166.0454 c1815.0698 -171.1836 1814.5562 -177.123 1814.6318 -182.3838 c1814.7061 -187.501 1814.5254 -192.5986 1813.7139 -197.6348 C1809.6973 -205.2881 1806.3184 -213.2529 1803.8154 -221.5596 C1800.6777 -221.8765 1797.5654 -222.3716 1794.4502 -222.8687 C1793.7354 -222.4268 1793.0405 -221.854 1792.3237 -221.0645 c1787.9824 -216.2827 1785.5728 -209.2021 1783.6245 -203.1714 c1779.687 -190.9824 1779.71 -178.7617 1779.0479 -166.1475 cf1778.6265 -287.3623 m1767.1016 -287.7402 1755.4082 -285.2988 1745.3154 -279.6499 c1742.0117 -277.8008 1738.6953 -275.2852 1737.5264 -271.5459 c1737.2993 -270.8193 1737.1943 -270.0518 1737.1729 -269.2637 C1738.1372 -269.2095 1739.1108 -269.1602 1740.0996 -269.1313 c1747.8721 -268.9053 1748.438 -257.6694 1741.749 -256.2754 C1744.063 -252.5732 1747.0776 -249.8291 1750.5078 -247.6826 C1750.9434 -248.0371 1751.3662 -248.397 1751.8179 -248.7451 c1754.6318 -250.9141 1759.0923 -249.1768 1760.7109 -246.4131 c1761.3037 -245.4019 1761.5762 -244.3887 1761.5981 -243.4063 C1761.7744 -243.7188 1761.9688 -244.0293 1762.2075 -244.3315 c1771.957 -256.6875 1779.8882 -271.3701 1781.1348 -287.2412 C1780.2998 -287.292 1779.4644 -287.335 1778.6265 -287.3623 cf1794.0098 -285.5894 m1792.4556 -268.4722 1784.6245 -252.9321 1774.4731 -239.1807 C1778.666 -238.1602 1782.8765 -237.3228 1787.2061 -236.9229 c1789.2607 -236.7329 1791.2998 -236.4443 1793.333 -236.1289 C1795.46 -236.7295 1797.7676 -237.0894 1800.2998 -237.1875 c1806.2944 -237.4194 1812.3271 -237.2349 1818.3252 -237.2349 c1825.2427 -237.2349 1832.3853 -237.7617 1839.2349 -236.7529 c1842.791 -236.229 1846.3115 -235.5718 1849.7979 -234.7959 C1855.874 -238.6035 1862.5537 -242.3833 1865.9214 -248.8618 c1870.1318 -256.9619 1858.1553 -262.3374 1852.833 -264.769 c1849.0063 -266.5176 1844.9668 -267.8354 1840.9819 -269.1719 c1834.3496 -271.3955 1828.0024 -274.7583 1821.4785 -277.3164 c1812.5669 -280.8096 1803.3979 -283.7905 1794.0098 -285.5894 Cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF