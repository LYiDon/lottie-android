%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 4.eps)%%CreationDate: 03.10.18 13:10%%Canvassize: 16383%%BoundingBox: 109 -2157 3835 1%%HiResBoundingBox: 109.6289 -2156.9258 3834.0107 0.289551%%DocumentProcessColors: Cyan Magenta Yellow%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -741.4468 408.3306 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 76 8%%BeginData: 4970 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0FFFCFFFFFFFCFFD2DFFCFFFFFFFCFFFCFFFCFFD38FFCFFD0BFF%CACFCACFCACFCACFFD2CFFCAFFFFCFC9FFFFFFCAFFFFFFCFCFCAFFCFFD2E%FFCACFCFFD0AFFCFFFFFC9FFFFFFCAFD25FFCFCFCAFD04FFCFFFFFCFCFFF%FFCFFFFFFFCACFCFFFCFCFFD2FFFC9CFC9CFCAFD07FFCAFFFFCFCFFFCAFD%25FFCACFCFCFC9CFCFFFCAFFFFFFC9FFFFCFC9CFCAFD05FFCACFFD2FFFCF%CFCFFFCFFD09FFC9FFCFCFFD25FFCFFD04FFCFCFCFFFCFFFFFCFFFFFC9CF%FD07FFCFFD31FFCFCFCACFCACFCAFFFFFFCFCFC9CFCACFFD26FFCACFFD05%FFCFC9CFFFFFCAFFCACFFD06FFCFCFCAFD23FFCAFD10FFCAFFFFFFCAFFCF%FFC9CFCFCFFD28FFCACFFD06FFC9CFCFCFCACFFD06FFCACFFD20FFCFCFFF%FFCFCFCAFD10FFCACFCAFFC9CFCACFC9CFFD2AFFCACFCFFD05FFC9CFCFCF%CAFFFFFFCACFCACFFD21FFCFCAFFC9FFFFCFCAFD12FFCFCFFD04FFCFCFCA%FD27FFCFFFC9CFCFFFCFFD07FFCFCFCACFC9CFCFFD1FFFCFFFCFFFCFFFFF%FFCFFD14FFCACFCFFFFFCFCAFFCACFFD22FFCFCFCACFCAFFCFFFCACFCACF%C9FFFFFFCAFFCFFFCFFFCFCFCAFD0AFFCFC9CFFD11FFCFCACFCACFCAFFCF%CFFD14FFCFCACFCACFC9FFFFFFCAFD22FFCFCFFD0AFFCFCAFFCFCFCFFD07%FFCAFD07FFCFCFCFFFCFFD13FFCFCFC9FFCFCFCFFD12FFCACFCFFFC9CFCA%FFC9CFCAFD23FFCACFFD08FFCACFCACFC9FFCACECAFD06FFCFCAFD05FFCF%CFC9CFCFCFCAFD0FFFCFCFC9CFC9C9C9CFCACFCAFD10FFCFCFFFFFCFFFCF%FD29FFCFCFCFFFCFFFCFFFC9CFCFFFFFCFFFFFCAFFCFCFCFFFCFFFCFFD07%FFCACFC9CFCAFD11FFCFFFFFFFCACFCFFFCFFD10FFCACFFFFFFFCFCFFFCA%FD29FFCFFFCFFFCAFFCACFCFFFFFCFC9FFFFCFCAFFCFCFCAFFCFFD09FFC9%FD13FFC9FFFFCFC9FFCAFFCAFD12FFCFFFFFFFCAFFCFFD2FFFCFCFFD04FF%CFCFCFFFFFCFFD24FFCAFD05CFFD13FFCFCFCACFC9CFFFFFCAFD2EFFCFCA%FFFFFFCACFCACFFFFFCAFD27FFCFCFCAFD16FFCFFFCFFFCFFD2FFFCFFD04%FFCFFFFFCFFFFFCFFD42FFFD04CFFD2DFFCAFD04FFCFCAFFFFCFCFFFCAFD%42FFCFCFCFFD2EFFCFFD04FFCAFFFFFFCFCFFFCFFD73FFC9FFFFFFC9FD05%FFCACFCAFD73FFCFFFFFCAFD07FFCFFD74FFCACFCAFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD62FFCFFD7FFFCAFD7EFFC9%CFFD7DFFCAFFCFFD7CFFC9CFC9CFFD7CFFCFCFFFC9FD7CFFCFC9CACFFD7C%FFCFCFFFC9FD7CFFC9CFC9CFFD7EFFCFCAFD08FFCAFD74FFCFCACFFD08FF%CFFD74FFCAFD09FFCFCAFD73FFCAFD04FFCFCFFD04FFCFFD74FFCFFD04FF%CFC9CFFFFFC9FD75FFCACFCACFFFCFFFCFFFCFCFFD74FFCFCFFFFFCAFFFF%CACFC9CFFD75FFCFC9FFCAFD04FFCACFCFFD43FFCFFD31FFCFCFCFFD06FF%C9FD43FFCACFCFFFCAFD2EFFCFCAFD07FFCFFD43FFFD05CFFD2EFFCFFD08%FFCAFD43FFCACFC9FFCAFD2DFFCACFFD3BFFCFFFFFFFCFFD0BFFCFFFCFFF%FFCFFD2EFFCFFD08FFCAFD31FFCACFCACFCACFFD0CFFFD04CFC9FD2DFFC9%FD09FFCFFFFFCACFCFFD2DFFCAFFC9FFCAFD0BFFCFFFCFCFCAFFCFFD2BFF%CFFD0AFFCACFCAFFC9CFFD2DFFCFCACFC9CFCAFD0BFFC9CEC9CFC9CFFD2A%FFCACFFD0AFFCFC9FFCAFD2DFFFD04CFC9CFC9CFFD07FFCFCFFFCFCFCAFF%CFCFCFFD2AFFCFFD07FFC9CFCFFFCAFFCFFD1FFFCACFCAFD0BFFCACFCFFF%C9CFCACFCAFD07FFC9FD05CFCAFFCACFCAFD28FFCFCAFD07FFCFCFCFFFCF%FD20FFFD05CFFD0BFFCACFCFCFCACFCFCFFD08FFC9CFCFFFFFFFCFCFCFFD%29FFCFFD08FFCFCFCACFCAFD20FFCFCAFFCFCFFFFFCAFD0BFFCACFCACFCA%FD08FFCFC9FD2BFFCFFFFFFFC9FD0BFFCFC9FD21FFCAFFFFFFCAFFCFCFFD%0BFFCFCAFD19FFCFFD1DFFC9FFFFFFCAFD0CFFCACFFD20FFCACFFFFFCACF%CACFCAFD18FFCFCAFD0BFFCACFCAFD1BFFCFCFCAFFCACFCACFFD0AFFCFFD%22FFCFCFCAFFFFCFC9CFFD16FFCAFFCFCFC9FD0BFFCACFCFFD0DFFCAFD0D%FFCFFFCACFCFCFCAFD09FFCFCAFD23FFCFFFCAFFC9C9CAFD15FFCAC9C9CF%C9CFCFFD0AFFCFCAFD0DFFCAFFCAFD0CFFCFCAC9C9CFCAFD0AFFCFFD17FF%CFFD0DFFCFCFC9CFCAFD17FFCFCFC9CFFD0CFFCAFFCFFD09FFCFCFFFFD04%CFFD0CFFCFCAFD0CFFCFCFFD13FFCFCACFCACFCFFD0DFFCAFFFFCFCFFD17%FFCACFFD0CFFC9CFC9CFFD09FFCFC9CFCAFFCAFD0DFFCAFD0EFFCAFD12FF%CFCACFCFCFCAFD11FFCFFD19FFCFFD0EFFCFCFFD0AFFCFC9CFCFFD0EFFCF%FD0DFFCFCFFD12FFC9FFC9CEC9CFCACFCFFD0EFFCFCFFD17FFCACFFD0EFF%CACFFD0AFFCAFFCAFD0FFFCAFD0CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 4 255 255 79 0 50 Lb(Layer 5) Ln0 Au*u1 D0 O0.00238 0.11249 0.431525 0 1 0.878431 0.623529 Xa0 J 0 j 1 w 10 M []0 d0 XR712.3296 -328.7612 m716.8823 -323.1895 719.8652 -316.4043 724.7227 -311.0713 c729.4902 -305.8364 730.7871 -298.3208 731.7881 -291.564 c734.0078 -276.5879 728.7534 -264.4009 719.2456 -253.0059 c711.2246 -243.3931 699.6699 -238.1934 687.5356 -236.0308 c675.4658 -233.8794 660.0654 -233.2866 649.1279 -239.8872 c644.1338 -242.9014 639.9956 -246.8394 635.7144 -250.7212 C634.6689 -247.3345 633.3418 -244.0791 631.7773 -241.061 c627.1895 -232.2109 619.8887 -223.8921 611.9448 -217.2012 C617.3833 -213.2441 622.938 -209.4473 628.3613 -205.4692 c633.9248 -201.3882 639.6875 -197.6177 645.1353 -193.3682 c651.292 -188.5659 656.7964 -183.1714 662.6577 -178.0479 c673.7813 -168.3247 682.2222 -155.8813 691.3018 -144.3442 c700.7891 -132.2891 709.585 -119.4204 718.1841 -106.7139 c731.3789 -87.2173 756.7495 -53.4204 729.769 -34.0171 c718.7852 -26.1177 707.2773 -19.4028 693.7021 -17.166 c680.2319 -14.9458 668.1567 -23.8687 657.8896 -31.6172 c646.8647 -39.938 637.6162 -49.7539 629.6631 -60.5488 C628.8423 -57.5493 627.8413 -54.6084 626.5938 -51.7607 c621.2573 -39.5806 609.1172 -31.4507 596.7417 -27.3677 c590.2275 -25.2183 583.1997 -24.4609 576.5571 -22.7246 c569.6353 -20.9146 562.4409 -18.3716 555.1924 -19.7617 c541.0498 -22.4731 535.1704 -37.8877 532.1504 -50.2368 c528.4902 -65.2046 527.105 -80.3345 528.8672 -95.6626 c531.3569 -117.3149 538.5977 -138.2891 545.3325 -158.9126 c548.6045 -168.9312 552.2153 -178.811 556.3779 -188.4951 c557.1416 -190.2715 557.9985 -191.9941 558.8857 -193.7012 C546.7119 -191.0483 534.562 -190.4878 521.9131 -190.4526 c508.5278 -190.415 493.4482 -193.0488 481.8691 -200.0996 c481.5659 -200.2842 481.2808 -200.4912 480.9849 -200.6851 C480.8359 -200.4941 480.7139 -200.3394 480.6563 -200.2744 c479.73 -199.2334 478.127 -198.5884 476.9619 -197.8608 c474.1963 -196.1348 471.6968 -193.7993 468.9834 -191.9434 c462.6084 -187.583 456.2109 -183.2949 449.9263 -178.8042 c437.8447 -170.1714 424.7944 -162.9497 411.7075 -155.9785 c405.458 -152.6494 398.9678 -150.3608 392.5708 -147.396 c385.1748 -143.9678 378.3135 -141.0352 370.3096 -139.1577 c363.8862 -137.6509 357.2114 -135.978 350.645 -135.2515 c345.5137 -134.6836 341.8887 -136.0938 338.7129 -138.9541 C335.1782 -136.998 331.5742 -135.2861 327.9438 -133.4146 c322.3472 -130.5283 317.3188 -126.7764 312.124 -123.2568 c301.7007 -116.1943 290.6519 -110.0874 279.5522 -104.168 c269.98 -99.0635 260.4951 -92.5752 249.4609 -91.3569 c244.9448 -90.8584 239.5366 -90.5088 235.5029 -93.021 C232.8613 -90.6514 229.7314 -88.5928 226.9795 -86.3203 c217.6724 -78.6357 208.8779 -70.4067 198.688 -63.854 c188.9561 -57.5962 177.6753 -52.6167 166.7573 -48.8379 c157.876 -45.7642 146.709 -49.8447 146.1914 -60.2324 c145.7227 -69.6372 152.1934 -78.812 157.667 -85.8496 c164.2275 -94.2847 175.6201 -98.3994 184.0649 -104.5444 c188.686 -107.9072 192.9141 -111.8247 197.4507 -115.3062 c201.7153 -118.5791 206.8394 -120.791 211.7925 -122.79 c217.25 -124.9927 223.0356 -126.5913 228.9189 -127.6504 C234.8281 -142.4141 250.8462 -153.6719 263.4116 -162.6401 c273.6094 -169.918 285.9082 -172.7524 297.7393 -176.313 c300.6763 -177.1973 303.5625 -177.7168 306.5776 -178.2725 c309.8906 -178.8828 313.6284 -180 317.0005 -180 C328.7222 -180 L331.5107 -192.8965 344.7017 -202.2671 355.1733 -208.832 c367.479 -216.5459 382.1196 -219.8657 395.1572 -226.1548 c408.2109 -232.4512 423.1211 -236.5654 437.4199 -238.7378 c442.4385 -239.5 447.6343 -240.3198 452.3428 -242.272 c455.4121 -243.5449 458.1621 -244.0391 461.0435 -243.5518 C461.7832 -252.689 465.9165 -261.0156 472.5952 -268.0088 c480.8271 -276.6289 492.3755 -281.979 503.6865 -285.8491 C501.2944 -286.6084 498.9141 -287.4175 496.5195 -288.1362 c488.9346 -290.4141 481.8799 -293.2144 474.8145 -296.7905 c461.1045 -303.7305 448.7793 -312.9878 435.874 -321.2832 c423.7686 -329.0649 412.0146 -337.4424 400.0771 -345.4873 c388.749 -353.1221 377.7329 -361.3594 368.5215 -371.5093 c364.2686 -376.1948 359.6616 -381.6084 357.4927 -387.6357 c354.7983 -395.1245 356.2041 -401.8457 359.333 -408.9399 c364.6494 -420.9902 371.5708 -431.7813 381.2144 -440.8496 c391.2026 -450.2427 403.501 -456.6626 416.2593 -461.4136 c429.2588 -466.2544 444.9346 -470.1836 458.1445 -464.2656 c464.1577 -461.5723 469.5283 -456.1904 474.019 -451.4858 c479.1343 -446.127 483.0391 -439.6348 486.8794 -433.3472 c488.1357 -431.2896 489.4429 -429.2661 490.7627 -427.251 C490.0557 -432.5317 489.3291 -437.8086 488.6035 -443.0903 c487.4995 -451.1221 487.7134 -459.1084 487.7134 -467.2031 c487.7134 -480.4639 487.7891 -495.0449 495.5352 -506.4873 c501.7422 -515.6572 512.4404 -520.0625 522.8779 -522.3403 c534.7549 -524.9326 546.4395 -525.9731 557.0225 -518.9121 c569.085 -510.8638 571.8267 -496.9678 577.0693 -484.4766 c583.9482 -468.0874 584.5654 -450.29 584.5654 -432.7764 c584.5654 -414.5801 585.9438 -395.7373 582.6045 -377.7622 c580.8433 -368.2837 578.541 -358.6733 577.4341 -349.0972 c576.9541 -344.9419 576.7827 -340.7505 576.4702 -336.5811 c576.1104 -331.7793 574.9854 -327.4429 573.9736 -322.769 c572.6919 -316.8472 572.1611 -310.4292 570.9448 -304.3223 C581.2744 -306.877 591.6826 -309.1816 602.3315 -309.0278 c608.4238 -308.9395 614.0239 -306.9678 619.8774 -306.1895 c620.5186 -306.1045 621.1816 -306.0059 621.853 -305.8877 C627.0669 -315.0869 633.5762 -323.2734 642.3203 -329.6694 c653.5435 -337.8794 666.269 -340.2559 679.9238 -340.9536 c691.9644 -341.5688 704.4458 -338.4102 712.3296 -328.7612 cf0 D227.6943 -107.5854 m227.1313 -109.7212 226.8096 -111.7944 226.6729 -113.8174 C216.5313 -111.2725 207.0376 -106.6841 198.7764 -99.811 c192.2021 -94.3418 185.3589 -89.7979 178.0552 -85.3828 c170.0933 -80.5703 164.6665 -74.938 160.7041 -66.4468 c160.0078 -64.9546 158.8369 -62.7217 159.1118 -61.0078 C159.5151 -60.8848 159.9287 -60.8081 160.3618 -60.8198 C162.332 -60.6479 164.6567 -61.7871 166.417 -62.5308 c175.2241 -66.2544 183.9551 -70.0684 192.1265 -75.0796 c199.8555 -79.8188 206.6738 -85.9619 213.5054 -91.8721 c216.8184 -94.7388 220.1357 -97.6504 223.7485 -100.1377 c225.6201 -101.4268 228.2417 -102.7124 228.3726 -105.0806 C228.1367 -105.9248 227.9106 -106.7656 227.6943 -107.5854 cf327.6807 -167 m322.1094 -167 L316.7939 -167 311.7686 -166.0718 306.5552 -165.0884 c301.043 -164.0483 295.5977 -162.0356 290.2393 -160.3809 c285.1772 -158.8174 280.0718 -157.4629 275.4126 -154.8984 c266.9536 -150.2422 258.1035 -143.6602 251.3652 -136.7656 c249.0913 -134.4385 246.7627 -131.8662 244.6846 -129.2051 C245.1606 -129.2158 245.6406 -129.2432 246.1152 -129.2476 c254.5015 -129.3213 254.4941 -116.3208 246.1152 -116.2476 c243.9409 -116.2285 241.7783 -116.1309 239.6328 -115.9526 C239.6675 -114.8545 239.7725 -113.7358 239.9287 -112.5933 c240.2427 -110.2988 241.3462 -104.0874 243.522 -103.96 c247.9268 -103.7026 252.5425 -104.8721 256.5459 -106.624 c265.478 -110.5332 274.0835 -115.8999 282.6172 -120.6094 c292.0063 -125.791 301.1772 -131.3545 309.96 -137.5127 c316.7266 -142.2568 324.1372 -145.6392 331.2676 -149.6475 C328.9805 -154.9678 327.8716 -161.04 327.6807 -167 Cf462.1538 -230.7559 m461.1924 -230.5684 460.1597 -230.5981 459.0957 -230.8916 C458.9956 -230.8267 458.7485 -230.7612 458.3379 -230.6953 C457.0708 -230.3687 455.8354 -229.752 454.6304 -229.252 c451.4644 -227.939 447.8589 -227.4297 444.5063 -226.8057 c437.5371 -225.5078 430.6924 -224.5981 423.8599 -222.6113 c417.1929 -220.6724 409.5864 -218.8267 403.3667 -215.7373 c396.8096 -212.4795 390.1074 -209.5044 383.2651 -206.896 c377.4316 -204.6724 371.6221 -202.8828 366.0332 -200.0347 c360.1147 -197.0186 354.854 -192.9063 349.7319 -188.7256 c345.2734 -185.0864 342.7188 -180.7896 341.5342 -176.1289 C342.3521 -173.9131 342.0801 -171.2134 340.7168 -169.3242 C340.7119 -164.8584 341.626 -160.207 343.0771 -155.5825 c343.7471 -153.4482 344.9453 -151.585 346.1772 -149.7358 c347.8193 -147.272 349.1035 -148.0073 351.8911 -148.5313 c358.7168 -149.8135 365.5762 -151.269 372.2886 -153.0483 c379.4253 -154.9404 385.6582 -158.5786 392.4248 -161.4189 c398.9253 -164.1475 405.0679 -167.1328 411.2881 -170.5015 c423.8794 -177.3198 436.2041 -184.6499 447.71 -193.1943 c453.4019 -197.4209 459.4937 -201.1211 465.3169 -205.1636 c467.27 -206.519 469.2139 -208.3623 471.2344 -210.083 C466.7856 -216.1763 463.8276 -223.4941 462.1538 -230.7559 Cf627.1553 -142.6289 m631.457 -127.3589 632.7295 -111.2588 632.9541 -95.4604 c633.0283 -90.2266 632.9888 -84.8638 632.6396 -79.5132 C639.04 -69.0176 646.4824 -59.1733 655.7109 -50.3813 c660.4751 -45.8423 665.6289 -41.7788 671.0874 -38.1118 c675.9629 -34.8369 682.7109 -29.5762 688.7759 -29.6411 c694.9092 -29.7065 702.0278 -32.52 707.4883 -35.1426 c713.2578 -37.9136 719.1816 -41.7529 723.9902 -45.9766 c734.9214 -55.5767 724.8325 -72.2124 719.0454 -81.7954 c711.1182 -94.9229 702.1523 -107.5723 693.0439 -119.8989 c686.1045 -129.291 679.332 -138.7544 672.1768 -147.9873 c664.8804 -157.4023 656.8535 -165.6655 648.1987 -173.8145 c639.5967 -181.9131 629.8706 -188.3237 620.3857 -195.2813 c615.5801 -198.8066 610.6631 -202.1792 605.8223 -205.6548 c604.3838 -206.6875 602.6997 -208.0439 600.9048 -209.3169 C598.3955 -207.9082 595.7651 -206.6631 593.1377 -205.4395 C598.8262 -198.7534 604.1841 -191.7998 608.8716 -184.3477 c616.8535 -171.6567 623.0947 -157.042 627.1553 -142.6289 cf618.834 -116.5459 m617.2729 -132.3633 612.7168 -147.4429 606.0605 -161.8252 c600.6162 -173.5894 593.6738 -183.9907 585.7666 -193.8179 C585.9629 -192.5718 586.1641 -191.3257 586.3848 -190.0811 c587.7495 -182.377 590.2783 -174.9053 592.8857 -167.5503 c598.1069 -152.8223 604.6162 -138.7129 610.7373 -124.3525 c613.7119 -117.374 616.7095 -110.4414 619.8892 -103.6406 C619.624 -108.002 619.251 -112.3237 618.834 -116.5459 cf546.8267 -119.3735 m542.7119 -104.2876 540.1841 -88.9731 541.291 -73.3047 c541.7964 -66.1475 543.4043 -58.9351 545.1055 -51.9771 c546.7017 -45.4512 548.9653 -37.916 554.6519 -33.7334 c559.6001 -30.0938 567.937 -33.8296 573.1016 -35.2598 c580.3096 -37.2563 587.8071 -38.0957 594.9131 -40.4399 c600.4375 -42.2627 606.46 -46.4419 610.6406 -50.4072 c615.7129 -55.2188 617.1875 -63.5859 618.439 -70.1108 c618.8213 -72.1025 619.1309 -74.1201 619.3843 -76.1538 C613.1914 -86.6416 607.8804 -97.7383 603.1094 -109.0718 c596.3491 -125.1304 588.833 -140.9438 582.8018 -157.2959 c579.8936 -165.1802 577.0732 -173.1035 575.0117 -181.2568 c574.085 -184.9229 573.4736 -188.644 572.8984 -192.3726 C571.9395 -190.5151 570.9082 -188.6938 569.8467 -186.894 c565.853 -180.1191 563.4937 -171.8213 560.8979 -164.4336 c555.6899 -149.6118 550.96 -134.5298 546.8267 -119.3735 cf498.6162 -377.4785 m496.8955 -383.0283 495.7363 -388.6699 494.8452 -394.3574 C494.501 -395.2314 494.1416 -396.0991 493.7568 -396.9561 c490.561 -404.0698 486.2397 -410.7563 481.8179 -417.1563 c478.1343 -422.4883 474.9272 -428.1226 471.4229 -433.5718 c467.665 -439.415 463.1318 -444.0303 458.0474 -448.7046 c446.9785 -458.8809 430.3867 -452.8521 418.0361 -448.2524 c405.4907 -443.5811 394.1411 -436.166 385.1147 -426.2891 c381.041 -421.8315 377.7485 -416.7544 374.8472 -411.4766 c371.6304 -405.6255 366.9731 -397.8804 370.04 -391.1943 c372.6968 -385.4023 377.8115 -380.3867 382.25 -375.9419 c387.251 -370.9336 392.8154 -366.5181 398.5303 -362.3613 c416.3228 -349.4209 434.9639 -337.4189 453.4214 -325.4595 c463.2524 -319.0898 472.5239 -312.5083 483.0161 -307.1973 c488.5215 -304.4102 494.1211 -302.4453 500.0229 -300.6719 c504.5889 -299.2993 509.4121 -297.1406 514.2139 -296.3604 C517.6855 -297.5796 522.1465 -295.9087 522.8867 -291.3516 C522.9243 -291.3613 522.9624 -291.3711 523 -291.3809 c524.7725 -291.8447 526.5415 -292.3174 528.3003 -292.8218 C527.0933 -295.5952 525.3862 -297.9131 524.6963 -300.9492 c523.8291 -304.7651 522.2388 -308.4409 520.7949 -312.0635 c517.8501 -319.4497 516.6113 -327.3057 513.3877 -334.6431 c507.3022 -348.4922 503.0913 -363.0454 498.6162 -377.4785 cf571.5654 -419.791 m571.5654 -427.2188 571.5801 -434.6465 571.5591 -442.0747 c571.5488 -445.8408 571.4346 -449.5991 571.1719 -453.3564 c570.8706 -457.6685 569.5195 -461.6948 568.9722 -465.9355 c568.521 -469.4302 567.5498 -472.8247 566.439 -476.1587 c565.3369 -479.4648 563.2397 -482.501 562.2891 -485.8188 c560.3442 -492.6035 558.3345 -499.4683 553.5518 -504.8613 c545.3579 -514.1021 533.2046 -511.626 522.606 -508.9238 c518.1182 -507.7798 513.5361 -506.0483 509.9004 -503.1016 c505.188 -499.2817 503.4204 -493.7529 502.0112 -488.0547 c500.333 -481.2681 500.7134 -474.1323 500.7134 -467.2031 c500.7134 -459.019 500.4946 -450.9575 501.6597 -442.8413 c503.4468 -430.3916 505.4673 -417.8745 506.5518 -405.3403 c506.7964 -402.5117 507.1777 -399.75 507.6543 -397.0273 C508.5845 -394.6689 509.459 -392.2822 510.2773 -389.8628 c512.8086 -382.377 517.5806 -376.105 521.4502 -369.291 c525.2983 -362.5151 528.1982 -355.2153 530.4878 -347.7852 c532.9058 -339.9395 535.8843 -332.2686 538.207 -324.4004 c540.6304 -316.1904 540.0537 -307.4209 541.9746 -299.0952 c542.0908 -298.5913 542.1514 -298.1055 542.1636 -297.6387 C542.647 -297.7813 543.1328 -297.916 543.6245 -298.0352 c547.6611 -299.0122 551.7539 -299.7544 555.8086 -300.6494 c556.1582 -300.7266 556.5083 -300.8091 556.8584 -300.8882 C557.6548 -303.3267 558.0244 -305.9878 558.415 -308.2261 c559.5596 -314.7891 560.3975 -321.418 561.8071 -327.9307 c563.3359 -334.9937 563.7236 -341.896 564.4341 -349.0972 c565.2441 -357.3081 567.21 -365.4961 568.6855 -373.6108 c571.4966 -389.0728 571.5654 -404.1152 571.5654 -419.791 cf623.0566 -269.7373 m622.623 -272.6084 621.8877 -275.5581 621.0713 -278.3501 c620.5708 -280.0625 620.7466 -281.5625 621.3491 -282.791 C619.6753 -285.3354 617.4448 -287.5283 614.5493 -289.1611 c612.1216 -290.5303 611.2319 -292.6855 611.3862 -294.8018 C611.106 -294.873 610.8306 -294.9448 610.5464 -295.0151 c603.1157 -296.8535 595.165 -296.1074 587.7305 -294.7388 c580.4492 -293.3979 573.3105 -291.332 566.0801 -289.752 c565.7988 -289.6904 565.5117 -289.6333 565.229 -289.5728 C563.7671 -287.5117 561.9736 -285.625 559.7349 -283.9746 c556.0732 -281.2754 552.5 -283.355 551.0508 -286.6069 C548.4717 -285.9912 545.9297 -285.2983 543.4863 -284.4434 c536.5757 -282.0259 529.8154 -279.8755 522.7456 -277.9497 c515.2793 -275.9155 507.7407 -273.9111 500.6318 -270.8086 c489.8169 -266.0889 478.3218 -259.1382 474.6353 -247.2124 c471.1792 -236.0322 477.6963 -218.9331 487.1206 -212.2124 c498.2764 -204.2559 513.9526 -203.2974 527.145 -203.5029 c534.6035 -203.6191 542.0093 -203.5864 549.3906 -204.8169 c555.0234 -205.7559 560.6182 -207.3164 566.0952 -209.0767 C566.8423 -210.4624 567.8623 -211.7651 569.5981 -213.0767 c570.0122 -213.3892 570.4248 -213.6387 570.834 -213.8315 C571.2969 -218.707 577.5132 -222.7134 581.7974 -218.1113 c582.5459 -217.3076 583.2876 -216.4966 584.0313 -215.6885 C585.0732 -216.1455 586.1074 -216.6147 587.1309 -217.1021 C585.4233 -221.0942 587.2808 -226.5269 592.7612 -226.0664 c595.1323 -225.8672 597.4565 -225.2935 599.6997 -224.4575 C602.2256 -226.2813 604.6631 -228.2881 606.9897 -230.5435 c616.0107 -239.2871 623.9136 -249.7852 625.2935 -262.6504 c625.3564 -263.2378 625.4048 -263.8291 625.4434 -264.4224 C624.3047 -266.1987 623.313 -268.0396 623.0566 -269.7373 cf678.4941 -327.8804 m673.4136 -327.6211 668.2813 -326.895 663.3213 -325.7852 c657.8838 -324.5688 653.3848 -321.5913 648.8818 -318.4443 c641.8115 -313.5039 636.7188 -306.2749 632.6133 -298.6616 C632.6548 -298.5166 632.707 -298.3809 632.7422 -298.2305 c633.3589 -295.5718 632.439 -293.4165 630.8589 -291.9951 C635.8994 -285.4609 638.1685 -277.2554 638.3384 -268.7925 C638.5771 -268.3921 638.8169 -267.9888 639.0537 -267.5771 c641.8198 -262.7676 645.2715 -259.5493 649.3325 -255.8228 c657.8887 -247.9727 668.9517 -247.1362 680.0332 -248.0571 c689.2881 -248.8262 698.8843 -251.731 705.9917 -257.8916 c714.7319 -265.4673 720.3354 -276.6338 719.2305 -288.1665 c718.7686 -292.9902 717.896 -299.2813 714.541 -302.9644 c710.5273 -307.3711 707.502 -312.8135 704.1958 -317.7725 c698.0947 -326.9229 688.8926 -328.4116 678.4941 -327.8804 cf*U*u1 D120.5962 -1881.5137 m127.2437 -1895.6904 134.5967 -1908.834 146.5366 -1919.2471 c151.9956 -1924.0088 157.498 -1928.9238 163.3687 -1933.167 c166.3076 -1935.291 169.9712 -1936.8984 172.5796 -1939.4189 c174.9897 -1941.7471 177.8032 -1943.7275 180.7207 -1945.3604 c186.7876 -1948.7559 194.2104 -1950.4834 200.9282 -1952.0234 c202.563 -1952.3984 204.2417 -1952.8604 205.9448 -1953.3213 C205.9424 -1953.6094 205.9419 -1953.8975 205.939 -1954.1855 C204.7485 -1956.0215 203.5166 -1957.8486 202.2368 -1959.6719 c193.3516 -1972.3281 184.3467 -1984.5801 176.9063 -1998.1523 c173.749 -2003.9102 169.8384 -2008.542 166.0835 -2013.8291 c162.1445 -2019.375 158.6572 -2025.2139 154.7612 -2030.8047 c150.917 -2036.3213 148.7427 -2041.8975 146.918 -2048.3184 c144.8711 -2055.5205 141.9204 -2061.833 140.8462 -2069.3613 c138.7671 -2083.9316 138.5835 -2099.3145 140.2109 -2113.9395 c140.9775 -2120.8311 142.1904 -2127.6738 143.3521 -2134.5068 c143.938 -2137.9521 144.6167 -2141.3818 145.2974 -2144.8096 c146.0703 -2148.7031 147.9512 -2152.1572 149.0796 -2155.9414 c149.1846 -2156.2939 149.3159 -2156.6172 149.458 -2156.9258 C161.3555 -2156.9258 L161.9556 -2155.6973 162.1255 -2154.1973 161.6147 -2152.4844 c160.6475 -2149.2393 159.1245 -2146.2217 158.1567 -2142.9766 c157.1943 -2139.748 156.8169 -2136.1982 156.2119 -2132.8857 c154.8579 -2125.4727 153.5928 -2118.0107 152.8501 -2110.5098 c152.1201 -2103.1357 152.2861 -2095.6846 152.4194 -2088.2871 c152.564 -2080.2695 152.6699 -2071.5059 155.1357 -2063.8125 c156.1226 -2060.7334 157.7817 -2057.9746 158.5894 -2054.8633 c159.3994 -2051.7441 160.2417 -2048.5898 161.2344 -2045.5244 c163.2993 -2039.1494 168.8594 -2033.7305 172.248 -2028.0293 c175.2681 -2022.9492 179.0747 -2018.7188 182.5713 -2013.9941 c187.0356 -2007.9619 190.1323 -2000.8262 193.8491 -1994.3281 c199.79 -1983.9424 207.4443 -1974.5273 214.4238 -1964.7285 C216.8745 -1964.0625 218.9009 -1962.1572 218.9009 -1959 C218.9048 -1958.7051 218.9082 -1958.1914 V219.4604 -1957.3467 220.0054 -1956.498 220.5391 -1955.6436 c220.6387 -1955.4844 220.7314 -1955.3213 220.8301 -1955.1611 C221.4819 -1955.0557 222.1309 -1954.9258 222.7734 -1954.7402 c227.6182 -1953.3398 228.2949 -1948.2295 226.3042 -1944.8984 C230.8086 -1935.0938 233.7285 -1924.6836 235.8457 -1913.9941 c238.8818 -1898.6611 242.3491 -1883.418 245.2773 -1868.0566 c246.6377 -1860.9219 248.3687 -1853.7588 249.1987 -1846.5449 c249.4424 -1844.4248 249.5415 -1842.25 249.5674 -1840.0557 C254.6611 -1844.5137 260.0776 -1845.623 266.7861 -1845.2227 c274.3232 -1844.7725 281.6816 -1843.585 289.2563 -1843.373 c304.1943 -1842.9531 317.6064 -1838.9414 331.7588 -1834.6455 c345.7163 -1830.4092 358.6382 -1824.2656 370.0801 -1815.1367 c380.2944 -1806.9873 389.3657 -1795.373 388.334 -1781.6328 c387.8774 -1775.5527 385.0981 -1768.4561 379.9277 -1765.0127 c377.5938 -1763.458 374.2573 -1763.2607 371.5688 -1763.0723 c367.6777 -1762.7988 363.7588 -1762.584 359.8569 -1762.3955 c352.8252 -1762.0566 345.5156 -1761.5918 338.6123 -1763.0938 c331.1787 -1764.71 323.6943 -1767.2939 316.4668 -1769.667 c303.2358 -1774.0117 288.8408 -1779.835 278.3223 -1789.1396 c272.6577 -1794.1504 266.8813 -1799.2021 261.5488 -1804.5576 c257.0083 -1809.1191 252.9912 -1814.0332 248.8052 -1818.8643 C248.0044 -1804.8037 245.957 -1790.7295 244.9639 -1776.6934 c243.8921 -1761.5566 241.6055 -1746.6123 240.585 -1731.4717 c239.5239 -1715.7324 239.4189 -1700.1104 240.7285 -1684.3828 c242.0195 -1668.8789 243.416 -1653.1846 247.5532 -1638.1436 c251.6821 -1623.1328 257.3037 -1608.5996 262.7559 -1594.0459 c267.8838 -1580.3613 276.1299 -1567.4707 283.6509 -1554.9961 c291.3701 -1542.1924 302.562 -1531.6348 311.6348 -1519.7871 c321.1548 -1507.3545 327.8452 -1493.7129 334.7148 -1479.7617 c340.5898 -1467.832 346.9731 -1455.9746 351.6211 -1443.5078 c352.9521 -1439.9375 353.6387 -1436.1152 354.3877 -1432.3926 c354.9941 -1429.3809 357.2891 -1425.9658 358.4756 -1423.083 c360.5688 -1418 361.7979 -1412.3721 362.2305 -1406.8311 C364.1685 -1402.9824 362.4282 -1397 357 -1397 C356.1885 -1397 355.9004 -1397 v352.2949 -1397 349.4824 -1400.1426 349.4004 -1403.6836 c349.249 -1410.2012 347.3965 -1416.7393 344.624 -1422.625 c341.2271 -1429.8359 340.0581 -1437.6914 337.1851 -1445.1416 c334.7231 -1451.5264 330.6182 -1457.1777 328.0215 -1463.4922 c325.0518 -1470.7129 321.3359 -1477.6768 318.0435 -1484.7578 c311.5435 -1498.7402 302.1475 -1511.6973 292.0889 -1523.3145 c287.4277 -1528.6982 282.6099 -1534.0986 278.3184 -1539.7773 c273.7778 -1545.7852 270.0288 -1552.3496 266.209 -1558.8281 c258.5254 -1571.8613 252.0342 -1585.21 247.209 -1599.5361 c246.9365 -1600.3457 246.6504 -1601.1504 246.3594 -1601.9551 C244.6924 -1587.9209 241.3154 -1574.2422 236.5972 -1560.9072 c231.9785 -1547.8545 227.4302 -1534.3604 218.2339 -1523.752 c213.8735 -1518.7217 209.9546 -1513.4053 205.6875 -1508.3281 c201.4189 -1503.25 195.835 -1499.752 190.9678 -1495.3223 c186.4106 -1491.1748 181.1924 -1487.1113 175.9722 -1483.8428 c171.5942 -1481.1016 164.4063 -1477.2148 159.8438 -1481.5537 c155.5176 -1485.668 155.3906 -1491.7246 155.6729 -1497.2979 c156.0405 -1504.5684 155.8462 -1511.7148 156.8394 -1518.9561 c157.8208 -1526.1152 161.2793 -1532.7305 164.0293 -1539.3311 c167.2578 -1547.0801 170.4863 -1554.8281 173.6421 -1562.6055 c178.9248 -1575.625 187.8486 -1587.5996 197.2983 -1597.9092 c203.7729 -1604.9727 210.3359 -1611.5732 216.0542 -1619.29 c220.6416 -1625.4805 225.7295 -1631.6709 232.6694 -1635.2383 C232.0767 -1637.5615 231.2656 -1639.7822 230.1284 -1641.7695 c228.3057 -1644.9561 229.4277 -1648.001 231.6152 -1649.8105 C229.2466 -1663.0498 228.252 -1676.7285 227.2861 -1690.0586 c226.1494 -1705.749 226.8662 -1721.3906 227.9707 -1737.0576 c229.0444 -1752.2832 231.1943 -1767.3877 232.4106 -1782.6211 c233.644 -1798.0674 236.0005 -1813.6055 236.1499 -1829.1016 c236.2158 -1835.9404 237.1665 -1843.2334 235.5249 -1849.9268 c233.5977 -1857.7813 232.502 -1865.9307 230.959 -1873.8721 c228.0132 -1889.0381 224.959 -1904.2666 221.4185 -1919.3018 c220.2334 -1924.334 218.6787 -1929.0996 216.814 -1933.6895 C215.2212 -1928.0566 212.7495 -1922.8613 210.4063 -1917.3945 c207.4531 -1910.5039 204.7402 -1903.4678 201.0571 -1896.9258 c197.3794 -1890.3926 191.8965 -1884.6094 186.9282 -1879.0527 c184.7607 -1876.6279 182.9468 -1873.8799 180.9917 -1871.2861 c178.8726 -1868.4756 176.2217 -1866.5059 173.5576 -1864.2246 c167.894 -1859.375 162.7568 -1853.7256 156.0347 -1850.3643 c149.2744 -1846.9844 143.2876 -1842.6035 136.2959 -1839.6563 c129.9688 -1836.9893 123.2383 -1834.7959 116.4468 -1833.916 c113.728 -1833.5635 110.7437 -1836.1484 110.1792 -1838.6885 c108.7061 -1845.3135 110.4443 -1853.7617 112.4043 -1860.1992 c114.6235 -1867.4883 117.3618 -1874.6152 120.5962 -1881.5137 cf0 D262.0317 -1823.0273 m266.3516 -1817.9189 271.1436 -1813.1328 276.1484 -1808.7051 c280.8813 -1804.5176 285.2759 -1799.4385 290.4824 -1795.8418 c295.3882 -1792.4541 300.9209 -1789.9502 306.3535 -1787.5459 c317.7622 -1782.4961 329.9565 -1778.6123 342.0684 -1775.6289 c347.5884 -1774.2695 354.2065 -1775.1768 359.8569 -1775.3955 c362.8667 -1775.5127 365.8691 -1775.75 368.8672 -1776.0313 c370.0811 -1776.1445 371.3281 -1775.9521 372.542 -1776.123 c374.1802 -1776.3535 373.563 -1776.6523 374.1616 -1778.2822 c378.4331 -1789.918 369.1582 -1799.0547 360.8877 -1805.9443 c351.6133 -1813.6709 339.814 -1818.8301 328.3027 -1822.1094 c316.3311 -1825.5205 305.2764 -1829.3867 292.7212 -1830.2119 c286.9775 -1830.5898 281.2876 -1830.4453 275.563 -1831.1748 c270.6489 -1831.8008 262.5942 -1834.3281 258.4912 -1830.6328 c257.9355 -1830.1328 257.3555 -1829.7559 256.7651 -1829.4785 C258.6099 -1827.4023 260.2354 -1825.1504 262.0317 -1823.0273 cf234.3398 -1620.6738 m226.877 -1614.458 221.7324 -1604.749 215.2959 -1597.8809 c205.2583 -1587.1699 195.606 -1576.7061 188.4731 -1563.7383 c184.8999 -1557.2432 182.4639 -1550.0322 179.6162 -1543.1973 c176.4834 -1535.6787 172.7095 -1528.1553 170.3853 -1520.3438 c168.4341 -1513.7861 168.7661 -1506.5859 168.7627 -1499.8213 c168.7622 -1498.0996 168.5352 -1496.3252 168.4844 -1494.5713 C168.7944 -1494.7363 169.104 -1494.9023 169.4111 -1495.0684 c174.6797 -1497.9121 179.8071 -1502.6113 184.1494 -1506.7178 c189.0088 -1511.3125 194.2656 -1514.3164 198.1787 -1519.959 c202.0503 -1525.543 207.2339 -1530.0586 211.1987 -1535.5381 c215.3369 -1541.2578 218.0225 -1547.9229 220.3325 -1554.542 c225.3652 -1568.9648 230.3389 -1582.834 232.7705 -1598.001 c233.9717 -1605.4912 234.6118 -1613.0869 234.3398 -1620.6738 Cf149.4731 -1861.5889 m155.1934 -1864.4492 159.5103 -1869.3066 164.3652 -1873.416 c166.5146 -1875.2344 169.0522 -1876.8955 170.7441 -1879.1396 c172.7085 -1881.7451 174.6196 -1884.3818 176.6494 -1886.9385 c180.6782 -1892.0127 185.3716 -1896.54 188.9375 -1901.9854 c192.6343 -1907.6318 194.981 -1914.1172 197.625 -1920.2871 c200.2231 -1926.3486 203.1338 -1932.168 204.7031 -1938.6035 c204.7808 -1938.9219 204.8325 -1939.2402 204.9009 -1939.5596 C204.1323 -1939.4102 203.3647 -1939.2539 202.6006 -1939.0791 c197.0405 -1937.8047 191.0742 -1936.2578 186.0742 -1933.459 c184.0396 -1932.3203 182.356 -1930.791 180.6904 -1929.1816 c178.4395 -1927.0059 175.2383 -1925.4883 172.6284 -1923.7793 c167.0591 -1920.1338 162.167 -1915.4844 157.0776 -1911.2061 c152.1577 -1907.0703 147.8179 -1902.7559 144.1299 -1897.4854 c140.1104 -1891.7412 137.4644 -1885.5957 134.1616 -1879.4941 c131.0728 -1873.7871 128.665 -1867.8457 126.5508 -1861.7178 c125.3979 -1858.377 124.436 -1855.0586 123.7227 -1851.5996 c123.5293 -1850.6621 123.2749 -1849.5449 123.0503 -1848.3779 C132.4639 -1851.2891 140.7534 -1857.2285 149.4731 -1861.5889 cf*U*u1 D695.8076 -2133.0264 m697.4282 -2134.1377 698.6772 -2136.2021 700.1113 -2137.5645 c702.1938 -2139.5449 704.5088 -2141.2656 706.5947 -2143.248 c709.7158 -2146.2139 713.1191 -2149.1309 716.6514 -2151.5947 c719.8516 -2153.8271 723.7813 -2155.2422 727.4009 -2156.9258 C752.8975 -2156.9258 L752.5234 -2154.8174 751.1025 -2152.9434 748.3613 -2152.2666 c740.8682 -2150.415 734.0059 -2145.6016 727.0449 -2142.334 c720.3003 -2139.167 714.8696 -2133.251 709.3037 -2128.373 c706.4492 -2125.8711 703.7822 -2122.915 701.0913 -2120.2246 c699.1821 -2118.3145 698.7817 -2115.8369 700.7896 -2113.7207 c704.8545 -2109.4355 713.9658 -2108.1582 719.438 -2108 c727.3711 -2107.7695 736.2246 -2107.3135 743.7847 -2109.9893 c745.5 -2110.5957 747.1353 -2111.4844 748.75 -2112.4277 C748.7671 -2112.4619 748.7837 -2112.4971 748.8008 -2112.5313 c754.083 -2123.0449 760.2183 -2132.666 767.1919 -2142.0879 c770.5122 -2146.5732 774.4092 -2150.5469 778.3442 -2154.4863 c779.2251 -2155.3682 780.0674 -2156.1797 780.9116 -2156.9258 C799.416 -2156.9258 L799.5957 -2156.625 799.7563 -2156.3145 799.873 -2155.9863 C800.0972 -2156.332 800.3604 -2156.6406 800.6465 -2156.9258 C810.1563 -2156.9258 L813.1401 -2154.1641 813.9873 -2149.2363 814.563 -2145.3877 c815.4521 -2139.4395 815.4717 -2133.4043 815.3145 -2127.4033 c815.2778 -2126.002 815.1899 -2124.624 815.0615 -2123.2617 C816.6196 -2115.2578 818.75 -2107.3857 821.4775 -2099.873 c824.4307 -2091.7412 827.4355 -2083.5732 832.0825 -2076.2363 c836.686 -2068.9688 844.0649 -2065.1904 852.0957 -2062.7959 c854.5767 -2062.0566 856.5454 -2065.3613 857.8726 -2066.9629 c859.8643 -2069.3682 858.5635 -2076.3887 858.5635 -2079.3262 c858.5635 -2087.9375 851.1265 -2096.8789 846.543 -2103.7324 c841.4424 -2111.3613 836.3936 -2119.0605 830.98 -2126.4717 c825.0317 -2134.6152 819.8477 -2143.2373 814.499 -2151.7949 c813.3379 -2153.6523 813.2012 -2155.4258 813.7129 -2156.9258 C826.811 -2156.9258 L838.043 -2142.7949 858.8496 -2136.5967 876.1021 -2135.6777 c885.6675 -2135.168 896.7002 -2133.8691 905.9102 -2136.8633 c909.4668 -2138.0195 912.7993 -2140.1855 914.8477 -2143.3398 c915.9912 -2145.1025 914.9634 -2145.8213 913.9111 -2147.4727 C913.5532 -2147.9102 913.2422 -2148.3789 912.979 -2148.8789 C911.9243 -2150.625 911.5205 -2150.3125 913.4736 -2149.6729 c909.9106 -2150.8398 908.6396 -2154.0176 909.0396 -2156.9258 C923.4199 -2156.9258 L924.7119 -2155.1113 925.7856 -2153.0938 926.7964 -2151.2266 c930.1787 -2144.9766 927.9976 -2138.3223 923.519 -2133.2832 c914.4785 -2123.1113 901.1108 -2121.9941 888.3735 -2122.3701 c873.6343 -2122.8057 859.2583 -2123.7861 845.3379 -2129.1426 c845.1812 -2129.2031 845.0269 -2129.2686 844.8706 -2129.3301 C851.2998 -2120.3164 857.5742 -2111.04 863.3901 -2101.626 c866.1563 -2097.1475 868.4116 -2092.4268 870.2793 -2087.5098 c872.2402 -2082.3486 871.5635 -2076.6563 871.5635 -2071.2246 c871.5635 -2061.8691 865.5635 -2052.5303 856.1885 -2050.0039 c847.0684 -2047.5469 835.1978 -2055.2373 828.4824 -2060.5762 c820.9194 -2066.5898 816.7012 -2076.5977 813.2295 -2085.3027 c811.4409 -2089.7871 809.748 -2094.2441 808.2197 -2098.7373 C807.6016 -2097.3105 806.9585 -2095.8848 806.2905 -2094.4531 c803.8203 -2089.1602 799.959 -2084.8291 796.5703 -2080.1416 c793.0566 -2075.2832 789.8911 -2070.2822 785.3037 -2066.3359 c781.3916 -2062.9707 776.8599 -2060.7744 772.062 -2058.9814 c766.0874 -2056.748 761.4907 -2053.5771 754.8057 -2054.834 c744.3555 -2056.7998 740.2446 -2069.0664 739.9731 -2078.2021 c739.7925 -2084.2979 740.6948 -2090.3037 742.3203 -2096.127 C741.7451 -2096.0176 741.1665 -2095.9199 740.582 -2095.8447 c730.646 -2094.5625 719.7412 -2094.1133 709.8599 -2096.0254 c701.9038 -2097.5664 693.9653 -2101.2461 688.9839 -2107.709 c686.1206 -2111.4238 686.2363 -2116.4668 686.9561 -2120.8428 c687.7974 -2125.957 691.5679 -2130.1182 695.8076 -2133.0264 cf0 D758.2617 -2067.3701 m759.4653 -2066.9834 761.7695 -2068.5391 762.7349 -2069.0645 c764.6816 -2070.125 766.501 -2070.8105 768.606 -2071.5166 c772.2861 -2072.752 775.5508 -2074.8916 778.3442 -2077.5488 c781.5361 -2080.5859 783.7949 -2084.5596 786.3589 -2088.1055 c789.1157 -2091.918 792.0322 -2095.4395 794.3291 -2099.5742 c798.4399 -2106.9736 801.2603 -2115.2383 802.0791 -2123.6709 C800.5923 -2132.7275 799.2896 -2141.8271 798.9736 -2151.002 C798.9565 -2150.9785 798.9438 -2150.9551 798.9268 -2150.9316 c798.0508 -2149.7373 798.0972 -2148.7891 798.085 -2147.2959 c798.0625 -2144.5313 796.1074 -2141.7422 795.0361 -2139.2607 c793.1318 -2134.8486 791.1895 -2130.6445 788.2656 -2126.8066 c782.7534 -2119.5732 775.311 -2112.6982 767.6118 -2107.8477 c764.7969 -2106.0742 761.7568 -2104.6816 758.7739 -2103.1914 C756.4258 -2097.9268 754.5713 -2092.5352 753.5195 -2086.6895 c752.5576 -2081.3438 751.3438 -2069.5928 758.2617 -2067.3701 cf*U*u1 D1194.0337 -2008.0107 m1222.7476 -2015.4287 1255.147 -2009.7969 1281.3486 -1996.5361 c1295.3809 -1989.4336 1308.459 -1979.4199 1316.4194 -1965.9131 C1323.0396 -1977.7314 1332.0425 -1988.2285 1338.4019 -2000.2813 c1342.6934 -2008.4141 1346.9238 -2016.5137 1351.4702 -2024.5176 c1352.8857 -2027.0088 1354.3242 -2029.4824 1355.5176 -2032.0723 C1350.0708 -2031.2979 1344.6035 -2030.6895 1339.0215 -2030.5068 c1327.1689 -2030.1191 1315.1563 -2031.8838 1303.5342 -2034.0664 c1294.0264 -2035.8525 1284.5659 -2038.0234 1276.1265 -2042.9502 c1268.5098 -2047.3965 1259.7261 -2056.3564 1258.9219 -2065.5566 c1257.9619 -2076.5303 1272.7773 -2078.7109 1280.7417 -2079.3945 c1286.2246 -2079.8633 1291.9453 -2078.5508 1297.2891 -2077.4893 c1303.2358 -2076.3086 1309.2344 -2075.3945 1315.188 -2074.2441 c1326.5117 -2072.0547 1336.8057 -2068.2549 1347.2515 -2063.4385 c1351.9814 -2061.2568 1357.21 -2059.6934 1361.6772 -2057.0313 c1362.0977 -2056.7813 1362.498 -2056.499 1362.8994 -2056.2178 C1364.6875 -2061.8428 1366.377 -2067.499 1367.9155 -2073.1963 c1370.3613 -2082.252 1371.4141 -2091.5332 1373.5542 -2100.624 c1375.6084 -2109.3506 1375.6025 -2118.5049 1376.2344 -2127.4072 c1376.8838 -2136.5596 1377.1729 -2145.8984 1377.2354 -2155.0771 c1377.2402 -2155.749 1377.3359 -2156.3613 1377.4932 -2156.9258 C1390.0029 -2156.9258 L1390.1528 -2156.3613 1390.2402 -2155.749 1390.2354 -2155.0771 c1390.1133 -2137.0928 1389.644 -2118.458 1386.7773 -2100.6816 c1383.8584 -2082.5811 1379.4961 -2064.9609 1373.7515 -2047.5469 c1373.7466 -2047.5313 1373.7422 -2047.5166 1373.7368 -2047.501 C1374.1245 -2046.8887 1374.4023 -2046.2197 1374.5703 -2045.5264 C1375.1914 -2044.8076 1375.5742 -2044.042 1375.75 -2043.2666 C1385.0879 -2038.3496 1392.2783 -2030.1113 1397.3442 -2020.8018 c1400.6055 -2014.8096 1403.2358 -2008.1094 1405.9019 -2001.8232 c1408.7012 -1995.2217 1410.5093 -1988.293 1412.104 -1981.3135 c1415.231 -1967.6289 1415.812 -1953.7217 1417.2886 -1939.8281 c1418.5645 -1927.8242 1414.7104 -1913.1396 1402.1831 -1908.8672 c1396.541 -1906.9434 1390.1914 -1912.0146 1386.5874 -1915.7119 c1381.5508 -1920.8789 1377.2632 -1926.9316 1373.7642 -1933.2236 c1366.9639 -1945.4521 1365.4736 -1960.8809 1364.0488 -1974.54 c1362.6377 -1988.0684 1361.7412 -2001.6465 1361.1846 -2015.2373 C1358.0693 -2009.7559 1354.8936 -2004.3115 1352.0518 -1998.6768 c1347.9063 -1990.4551 1343.3794 -1982.667 1338.2002 -1975.0439 c1333.2417 -1967.7461 1327.5806 -1961.1113 1324.3047 -1952.7969 c1323.5337 -1950.8398 1322.147 -1949.5986 1320.5581 -1948.96 C1321.7012 -1946.5254 1322.772 -1944.0654 1323.3252 -1941.4111 c1324.2959 -1936.7539 1324.0449 -1931.2539 1323.7573 -1926.5293 c1323.165 -1916.8086 1317.9258 -1908.7119 1312.5703 -1900.9395 c1301.4214 -1884.7568 1288.0229 -1870.6719 1274.832 -1856.1504 c1268.4375 -1849.1113 1259.6113 -1844.2988 1251.1885 -1840.0986 c1247.8188 -1838.418 1242.9463 -1836.127 1239.0889 -1837.1875 c1235.1494 -1838.2715 1233.4683 -1841.8457 1232.5313 -1845.4668 c1230.1455 -1854.6895 1232.3096 -1865.8125 1234.1152 -1874.9834 c1235.0269 -1879.6152 1236.0674 -1884.2617 1237.8647 -1888.6328 c1238.1353 -1889.291 1238.4336 -1889.9336 1238.7251 -1890.5811 C1237.8247 -1890.3506 1236.9297 -1890.124 1236.064 -1889.8643 c1229.0464 -1887.7568 1221.2686 -1888.1953 1214.041 -1888.3408 c1204.6729 -1888.5303 1185.2158 -1886.5303 1185.1328 -1900.333 c1185.043 -1915.332 1194.9478 -1925.9639 1205.7866 -1934.6904 C1204.5752 -1935.623 1203.3564 -1936.5439 1202.2266 -1937.6973 c1196.8257 -1943.21 1190.3779 -1947.0205 1185.6108 -1953.2266 c1181.3613 -1958.7588 1177.5229 -1964.6387 1174.23 -1970.791 c1171.2393 -1976.3799 1165.9404 -1981.8105 1166.0332 -1988.6172 c1166.207 -2001.377 1184.2495 -2005.4824 1194.0337 -2008.0107 cf0 D1374.0674 -2017.8535 m1374.4717 -2005.8037 1375.2866 -1993.7676 1376.3643 -1981.7627 c1378.2246 -1961.0342 1380.6079 -1934.4219 1399.7661 -1921.7002 c1401.1279 -1920.7959 1404.1777 -1930.6123 1404.3071 -1931.1826 c1405.439 -1936.168 1404.0322 -1941.9473 1403.6973 -1946.9746 c1402.9248 -1958.5586 1401.4775 -1970.0635 1398.7451 -1981.3574 c1397.4736 -1986.6133 1396.0938 -1991.9199 1393.9785 -1996.9082 c1391.9282 -2001.7422 1389.4517 -2006.3213 1387.5645 -2011.2266 c1385.0342 -2017.8027 1380.0562 -2024.791 1373.9497 -2029.3076 C1374.084 -2025.498 1373.9404 -2021.6367 1374.0674 -2017.8535 cf1345.7939 -2049.8799 m1337.3975 -2053.6133 1329.3467 -2057.4658 1320.415 -2059.7881 c1311.6812 -2062.0586 1302.6973 -2063.3184 1293.833 -2064.958 c1289.4326 -2065.7715 1285.2388 -2066.5293 1280.7417 -2066.4014 c1278.1572 -2066.3271 1275.6514 -2065.5488 1273.208 -2064.7813 C1273.0068 -2064.7012 1272.8027 -2064.6289 1272.6006 -2064.5527 C1279.4297 -2050.4355 1298.625 -2048.0127 1312.2183 -2045.7441 c1321.7222 -2044.1572 1331.3237 -2043.3721 1340.9585 -2043.6875 c1345.9844 -2043.8516 1350.9043 -2044.4443 1355.811 -2045.1738 C1352.998 -2047.4668 1349.0664 -2048.4248 1345.7939 -2049.8799 cf1188.7334 -1971.6523 m1192.4961 -1965.3789 1196.5635 -1959.3955 1202.1631 -1954.6357 c1207.2236 -1950.334 1212.2397 -1946.0264 1217.4019 -1941.8936 c1222.0703 -1938.1563 1221.7412 -1932.0215 1218.2139 -1927.7354 c1216.5317 -1925.6914 1213.2266 -1924.0957 1211.1504 -1922.4248 c1208.0571 -1919.9355 1205.0225 -1917.2588 1202.626 -1914.0723 c1200.5791 -1911.3486 1199.6475 -1907.6074 1198.7988 -1904.377 c1198.6094 -1903.6553 1198.4727 -1902.9443 1198.3643 -1902.2275 C1204.7109 -1901.7334 1210.9678 -1901.4014 1217.3721 -1901.2744 c1220.8179 -1901.2061 1224.248 -1901.248 1227.6855 -1901.5049 c1230.123 -1901.6865 1234.2842 -1902.8174 1235.585 -1903.1055 c1240.3867 -1904.168 1244.9478 -1906.8047 1249.9775 -1905.0566 c1257.8037 -1902.3369 1255.561 -1894.4043 1252.3608 -1888.9746 c1248.1064 -1881.7559 1246.5205 -1872.7285 1245.4395 -1864.5127 c1244.8892 -1860.334 1244.7446 -1856.1211 1244.8125 -1851.9111 c1244.8154 -1851.7402 1244.8257 -1851.582 1244.832 -1851.417 C1252.2729 -1854.668 1260.0732 -1859.4512 1265.6396 -1865.3428 c1276.9966 -1877.3633 1289.2773 -1889.6514 1298.5928 -1903.3438 c1302.853 -1909.6055 1308.1069 -1915.9668 1310.04 -1923.4023 c1311.0371 -1927.2373 1310.9009 -1930.9619 1310.7485 -1934.8975 c1310.5664 -1939.5967 1309.0771 -1942.6504 1307.2373 -1946.9219 c1306.0874 -1949.5918 1306.7212 -1952.1377 1308.168 -1953.9912 C1307.896 -1954.4316 1307.6523 -1954.8975 1307.4473 -1955.3896 c1307.9771 -1954.1172 1305.5859 -1958.334 1305.7178 -1957.9834 c1305.127 -1959.5488 1304.6445 -1960.752 1303.749 -1962.1621 c1302.0088 -1964.9023 1299.5688 -1967.2227 1297.3032 -1969.5205 c1291.9702 -1974.9307 1285.9297 -1979.1348 1279.3418 -1982.877 c1266.5693 -1990.1309 1250.9346 -1995.3486 1236.3481 -1997.1807 c1221.5918 -1999.0352 1206.8203 -1998.3594 1192.5264 -1994.0938 c1189.3267 -1993.1396 1186.2686 -1991.8682 1183.1812 -1990.6143 c1182.1504 -1990.1953 1181.1709 -1989.707 1180.1875 -1989.1885 c1179.7056 -1988.9346 1179.4048 -1988.7266 1179.2144 -1988.5674 C1180.7305 -1982.6768 1185.6426 -1976.8047 1188.7334 -1971.6523 cf*U*u1 D1842.4775 -1798.0479 m1837.8662 -1799.0918 1833.5156 -1800.6934 1829.3232 -1802.6299 C1830.8232 -1799.9014 1832.2559 -1797.1328 1833.7573 -1794.4434 c1837.1465 -1788.3721 1839.8882 -1781.9102 1842.1357 -1775.3369 c1846.4521 -1762.7158 1846.1982 -1749.6943 1848.1631 -1736.6807 c1848.9844 -1731.2451 1848.9072 -1725.2441 1847.7432 -1719.874 c1846.5869 -1714.5361 1841.6387 -1710.6582 1836.917 -1708.5586 c1826.502 -1703.9287 1816.5146 -1706.1963 1808.8213 -1714.4971 c1800.6982 -1723.2607 1794.9482 -1734.8154 1790.9238 -1745.9297 c1788.7446 -1751.9463 1787.1382 -1758.168 1785.4893 -1764.3457 c1785.3994 -1764.6826 1785.3203 -1765.0215 1785.2412 -1765.3604 C1782.8389 -1758.8213 1779.9014 -1752.4824 1776.4019 -1746.4688 c1766.6768 -1729.7588 1750.4224 -1716.5771 1731.5986 -1711.4639 c1723.312 -1709.2129 1714.9175 -1709.9199 1708.1216 -1715.4082 c1699.3311 -1722.5068 1699.5518 -1736.877 1700.0547 -1746.9336 c1700.832 -1762.4688 1711.4912 -1772.1973 1720.2222 -1784.0176 c1724.5986 -1789.9424 1728.8467 -1796.249 1734.0972 -1801.4424 c1739.8745 -1807.1572 1746.1289 -1812.3457 1752.2358 -1817.6963 c1754.0654 -1819.2998 1755.832 -1820.9561 1757.6016 -1822.6025 C1755.1616 -1822.2402 1752.7158 -1821.8965 1750.2471 -1821.6152 c1735.3438 -1819.9199 1719.3984 -1820.4971 1704.5723 -1822.585 c1690.749 -1824.5322 1676.6025 -1827.8281 1664.3223 -1834.6641 c1654.5508 -1840.1025 1642.707 -1848.9639 1639.2041 -1860.0313 c1635.1196 -1872.9375 1650.168 -1883.4668 1660.3613 -1887.3135 c1673.1758 -1892.1504 1689.5547 -1890.6553 1702.6221 -1887.8945 c1709.3154 -1886.4814 1715.3359 -1883.6699 1721.7749 -1881.542 c1729.2969 -1879.0557 1736.8843 -1876.7881 1744.3159 -1874.0342 c1747.6187 -1872.8105 1750.9009 -1871.5156 1754.1396 -1870.127 C1748.3628 -1880.8633 1746.498 -1892.9814 1745.0635 -1904.9941 c1744.3384 -1911.0684 1743.8701 -1917.2236 1743.6235 -1923.3262 c1743.3643 -1929.7246 1742.8574 -1936.2773 1745.0444 -1942.4111 c1748.7031 -1952.6719 1757.666 -1961.7607 1769.2808 -1959.0625 c1780.2959 -1956.5039 1786.9863 -1944.4473 1790.7891 -1934.8125 c1796.1606 -1921.2061 1796.7988 -1907.3262 1798.4771 -1893.001 c1798.7104 -1891.0098 1798.8721 -1889.0127 1798.9814 -1887.0127 C1800.6416 -1889.2695 1802.2881 -1891.5381 1803.8345 -1893.8906 c1807.4551 -1899.3984 1811.7432 -1902.5947 1817.1626 -1906.2168 c1821.561 -1909.1553 1825.1563 -1913.0088 1829.8013 -1915.6338 c1834.4824 -1918.2783 1839.9355 -1918.9434 1845.207 -1919.4004 c1855.0537 -1920.2549 1868.2529 -1917.3447 1873.9194 -1908.3984 c1879.7324 -1899.2207 1877.4663 -1889.0654 1873.1489 -1879.8379 c1868.5684 -1870.0498 1860.5044 -1859.7109 1852.0938 -1852.9102 c1848.1299 -1849.7051 1843.8521 -1847.1211 1839.4014 -1844.8643 C1841 -1844.6182 1842.5967 -1844.3535 1844.189 -1844.0508 c1853.3403 -1842.3115 1862.4414 -1838.877 1870.5596 -1834.332 c1877.8994 -1830.2236 1886.6079 -1823.0664 1885.3608 -1813.6719 c1882.9941 -1795.8486 1855.751 -1795.043 1842.4775 -1798.0479 cf0 D1754.4609 -1802.4805 m1749.2427 -1797.9521 1743.9429 -1793.375 1739.5146 -1788.0586 c1734.6074 -1782.166 1730.3003 -1775.7793 1725.6201 -1769.709 c1721.8638 -1764.8359 1717.771 -1760.4854 1714.8604 -1755.001 c1711.793 -1749.2207 1712.7036 -1740.9541 1713.1807 -1734.6523 c1713.7539 -1727.084 1717.1001 -1722.8545 1724.3574 -1723.2783 c1731.3931 -1723.6895 1738.4731 -1727.8223 1744.3125 -1731.4219 c1751.7944 -1736.0332 1757.5156 -1741.5059 1762.5098 -1748.8057 c1769.7954 -1759.4541 1774.2788 -1771.6758 1777.2729 -1784.1494 c1778.4824 -1789.1885 1779.375 -1794.1807 1780.0488 -1799.249 C1778.8545 -1807.1895 1778.3647 -1815.4063 1779.1294 -1823.2764 C1778.8965 -1823.1074 1778.668 -1822.9404 1778.4438 -1822.7822 c1775.8018 -1820.9141 1773.1025 -1819.1504 1770.6387 -1817.0449 c1765.1289 -1812.3369 1759.9409 -1807.2344 1754.4609 -1802.4805 cf1749.063 -1858.0039 m1737.7266 -1863.6543 1725.1392 -1866.0195 1713.5195 -1870.8984 c1702.478 -1875.5332 1690.8359 -1877.3711 1678.9302 -1877.043 c1673.5234 -1876.8936 1667.541 -1876.5488 1662.5513 -1874.2539 c1659.1846 -1872.7051 1651.8516 -1868.3564 1651.6377 -1864.1563 c1651.4512 -1860.4932 1656.5972 -1856.6182 1658.9775 -1854.5166 c1663.0479 -1850.9238 1667.481 -1847.7832 1672.2212 -1845.1445 c1682.3809 -1839.4893 1694.8086 -1837.1514 1706.1758 -1835.3818 c1718.8301 -1833.4121 1732.0938 -1833.6162 1744.853 -1834.2051 c1750.6768 -1834.4746 1756.4116 -1835.127 1762.1309 -1836.2334 c1764.9717 -1836.7832 1767.8301 -1837.3047 1770.689 -1837.7441 c1772.3623 -1838.002 1774.0508 -1838.1768 1775.7334 -1838.3652 c1776.2939 -1838.4277 1776.9424 -1838.6719 1777.4243 -1838.8125 C1775.6377 -1840.9385 1774.0576 -1843.2109 1772.4629 -1845.4775 C1770.2236 -1847.1992 1767.6641 -1848.6885 1765.9595 -1849.7861 c1760.6572 -1853.1992 1754.6719 -1855.208 1749.063 -1858.0039 cf1785.4771 -1893.001 m1784.3906 -1903.7197 1783.7231 -1914.1602 1780.665 -1924.5693 c1778.4854 -1931.9863 1774.1396 -1943.9668 1765.8247 -1946.5273 c1762.9116 -1947.4238 1760.5645 -1944.1025 1759.2061 -1942.0225 c1756.8149 -1938.3604 1756.4009 -1934.6631 1756.3818 -1930.374 c1756.3345 -1919.7305 1757.4678 -1908.9531 1758.9854 -1898.4287 c1760.3975 -1888.6338 1763.1128 -1879.4971 1768.6934 -1871.2207 c1771.5039 -1867.0537 1774.8242 -1863.2402 1778.1387 -1859.4717 c1779.3701 -1858.0723 1780.4712 -1856.5732 1781.5361 -1855.0508 C1782.2402 -1858.7383 1783.5039 -1862.2432 1785.1196 -1865.6123 C1786.3701 -1874.6885 1786.4023 -1883.877 1785.4771 -1893.001 cf1793.2222 -1799.6436 m1793.5264 -1797.7168 1793.8555 -1795.8193 1794.1924 -1793.9805 c1796.3364 -1782.2773 1797.0903 -1770.7637 1800.3247 -1759.25 c1803.3188 -1748.5918 1807.4971 -1739.3184 1813.415 -1729.9854 c1815.564 -1726.5967 1817.8813 -1723.5176 1820.8833 -1720.835 c1823.8115 -1718.2188 1827.3193 -1718.9063 1830.7139 -1719.9766 c1839.2515 -1722.6641 1835.0723 -1736.21 1834.5313 -1742.834 c1833.6221 -1753.9668 1832.2676 -1764.6055 1828.4424 -1775.165 c1826.6504 -1780.1133 1824.2407 -1784.8193 1821.6797 -1789.4063 c1818.9404 -1794.3135 1816.375 -1799.3477 1813.2471 -1804.0264 c1810.4517 -1808.208 1807.0054 -1811.918 1803.4189 -1815.4258 c1800.4121 -1818.3652 1797.4805 -1821.4375 1793.9604 -1823.6953 C1794.7656 -1815.7969 1794.2822 -1807.6338 1793.2222 -1799.6436 Cf1855.9497 -1876.5459 m1860.3247 -1882.502 1865.8867 -1890.791 1864.2285 -1898.5459 c1862.5859 -1906.2266 1851.3291 -1906.7129 1845.207 -1906.4004 c1835.8516 -1905.9229 1830.9932 -1899.917 1823.7236 -1894.9912 c1819.6377 -1892.2227 1816.8457 -1890.0469 1814.1172 -1885.8955 c1811.6406 -1882.1279 1808.9824 -1878.5234 1806.2388 -1874.9473 c1803.228 -1871.0234 1799.8027 -1866.4375 1797.3291 -1861.5605 C1796.9443 -1859.2451 1796.6021 -1856.9326 1796.4702 -1854.6201 c1796.3003 -1851.6387 1795.9497 -1847.2207 1794.7119 -1843.3936 C1798.4854 -1843.9199 1802.3428 -1844.6104 1806.1924 -1845.1787 C1808.209 -1845.7676 1810.2383 -1846.4727 1812.3062 -1847.332 c1820.6963 -1850.8193 1829.3159 -1853.7939 1837.21 -1858.3477 c1844.8389 -1862.748 1850.7773 -1869.5049 1855.9497 -1876.5459 cf1866.9204 -1821.2744 m1863.5898 -1823.5879 1859.8687 -1825.416 1856.1157 -1826.9268 c1848.7935 -1829.875 1841.0381 -1831.7803 1833.2075 -1832.7031 c1825.7178 -1833.5859 1818.1455 -1833.4307 1810.6436 -1832.8135 C1809.2754 -1832.3281 1807.8887 -1831.8848 1806.4717 -1831.5029 C1816.2764 -1825.5225 1825.585 -1818.7637 1836.1475 -1813.9805 c1842.7031 -1811.0107 1849.1729 -1809.5693 1856.3433 -1809.833 c1859.5283 -1809.9502 1871.9355 -1810.543 1872.5352 -1815.0586 c1872.856 -1817.4756 1868.5029 -1820.1758 1866.9204 -1821.2744 cf*U*u1 D2070.7686 -2044.9209 m2079.2402 -2052.7285 2087.0977 -2059.3242 2097.6152 -2064.2129 c2101.9316 -2066.2188 2106.4805 -2068.8486 2110.998 -2070.29 c2113.5098 -2071.0908 2116.1289 -2071.708 2118.7637 -2072.2949 C2118.8945 -2072.8018 2119.0293 -2073.3096 2119.1689 -2073.8184 c2119.4736 -2074.9238 2119.9766 -2075.8057 2120.6035 -2076.4971 C2119.8184 -2080.7285 2118.998 -2084.9512 2118.1123 -2089.1563 c2114.9043 -2104.3779 2111.6973 -2119.3486 2111.0664 -2134.9395 c2110.9092 -2138.8252 2110.4736 -2142.6953 2110.3164 -2146.582 c2110.1758 -2150.043 2110.4004 -2153.5 2109.9326 -2156.9258 C2122.9395 -2156.9258 L2123.418 -2151.8535 2123.2383 -2146.7354 2123.5957 -2141.6338 c2124.1387 -2133.9033 2124.3164 -2126.1807 2125.4727 -2118.5039 c2127.8115 -2102.9707 2132.2354 -2087.835 2134.2832 -2072.2451 c2134.4512 -2070.9629 2134.6377 -2069.6748 2134.8213 -2068.3887 C2135.1055 -2067.584 2135.2109 -2066.7705 2135.168 -2065.9746 C2135.3516 -2064.7471 2135.5469 -2063.5176 2135.7432 -2062.2871 C2136.6318 -2062.499 2137.6367 -2062.4668 2138.7412 -2062.1152 C2139.2021 -2062.4668 2139.7207 -2062.7871 2140.3096 -2063.0713 c2142.8975 -2064.3164 2146.0879 -2064.3066 2148.1865 -2062.0547 c2148.4746 -2061.7451 2148.7627 -2061.4355 2149.0508 -2061.127 c2150.2773 -2059.8115 2150.8125 -2058.3535 2150.8467 -2056.9355 C2164.8477 -2050.4316 2178.0215 -2042.3984 2189.2148 -2031.5479 c2196.499 -2024.4854 2202.1123 -2016.4141 2207.1973 -2007.6963 c2208.9326 -2004.7197 2211.6406 -2002.0039 2211.6406 -1998.2607 c2211.6406 -1993.6533 2207.502 -1990.9844 2203.4512 -1990.1416 c2199.7607 -1989.374 2195.6797 -1990.2607 2192.0098 -1990.8525 c2187.0547 -1991.6504 2182.209 -1993.1982 2177.7334 -1995.4805 c2169.0381 -1999.916 2160.9668 -2005.8467 2154.2139 -2012.8926 c2149.6191 -2017.6875 2145.6992 -2022.9492 2142.5645 -2028.6885 C2142.6914 -2028.1719 2142.8145 -2027.6523 2142.9424 -2027.1377 c2144.5059 -2020.875 2145.1777 -2014.4648 2146.9404 -2008.2275 c2149.0361 -2000.8115 2150.7725 -1993.8701 2151.6328 -1986.1768 c2153.374 -1970.6055 2156.2324 -1955.1768 2159.7227 -1939.9033 c2163.0137 -1925.5039 2166.043 -1910.6572 2172.543 -1897.293 c2175.6621 -1890.8818 2179.2588 -1884.3115 2182.875 -1878.1582 c2184.5645 -1875.2842 2186.373 -1872.4805 2188.1025 -1869.6309 c2190.0859 -1866.3643 2190.5537 -1862.2471 2192.3936 -1858.8643 c2199.0488 -1846.6279 2207.998 -1835.793 2218.6396 -1826.8594 c2220.3018 -1825.4639 2222.0518 -1823.4189 2223.8828 -1821.8408 C2223.8477 -1821.9834 2223.7949 -1822.1191 2223.7676 -1822.2646 c2223.0986 -1825.9033 2223.1836 -1829.1563 2224.0234 -1832.7637 c2225.3418 -1838.4258 2229.0615 -1842.9658 2232.2559 -1847.6289 c2236.1797 -1853.3584 2240.9902 -1858.3906 2246.4111 -1862.7109 c2257.4756 -1871.5293 2270.751 -1876.7266 2284.5986 -1879.2041 c2298.9775 -1881.7773 2313.8408 -1881.7617 2328.3965 -1881.3848 c2342.8887 -1881.0088 2358.0234 -1877.9141 2371.8047 -1873.4824 c2377.4541 -1871.666 2382.4434 -1868.2695 2386.7832 -1864.3008 c2388.9922 -1862.2803 2390.7686 -1860.0273 2393.0879 -1858.1328 c2395.6924 -1856.0059 2397.3711 -1853.3281 2398.5752 -1850.2354 c2403.3066 -1838.082 2380.6748 -1828.9922 2372.6523 -1825.8076 c2357.0801 -1819.624 2340.1357 -1817.415 2323.3223 -1815.6621 C2325.0342 -1815.2031 2326.7373 -1814.7324 2328.4268 -1814.248 c2340.4385 -1810.8027 2352.251 -1806.5166 2362.0771 -1798.5664 c2366.9551 -1794.6211 2372.1279 -1788.9434 2372.5273 -1782.4229 c2372.915 -1776.085 2372.5488 -1769.0254 2371.0742 -1762.8379 c2367.8936 -1749.499 2353.1602 -1746.8652 2341.4102 -1746.8701 c2333.1396 -1746.873 2325.0029 -1748.7705 2317.2227 -1751.6621 C2323.6602 -1742.4082 2330.5596 -1733.2539 2334.8506 -1722.8496 c2340.0537 -1710.2354 2343.4277 -1695.8877 2343.7275 -1682.2217 c2343.8779 -1675.3467 2343.0449 -1669.168 2341.3721 -1662.4766 c2339.8906 -1656.5537 2338.6807 -1650.7373 2335.7393 -1645.3154 c2333.1602 -1640.5615 2327.0508 -1634.4883 2321.1484 -1634.9609 c2314.2197 -1635.5156 2309.1699 -1638.9053 2304.0566 -1643.3936 c2298.9805 -1647.8477 2295.0625 -1653.5889 2290.8535 -1658.8242 c2286.2705 -1664.5254 2282.0996 -1670.5459 2277.6543 -1676.3516 c2274.2998 -1680.7324 2271.3516 -1685.374 2268.4922 -1690.0791 C2268.5117 -1688.1816 2268.5137 -1686.2891 2268.4951 -1684.4063 c2268.3428 -1668.6699 2267.5576 -1652.6514 2265.1074 -1637.0977 c2264.0566 -1630.4307 2262.3574 -1623.9238 2260.7363 -1617.3818 c2259.5332 -1612.5273 2257.7041 -1606.9121 2253.6162 -1603.7168 c2243.2471 -1595.6143 2230.0566 -1603.6348 2223.793 -1612.8242 c2220.9707 -1616.9648 2219.1855 -1621.9023 2217.5391 -1626.5996 c2215.0049 -1633.8232 2212.6826 -1641.1348 2210.4004 -1648.4414 c2205.7588 -1663.2998 2201.9844 -1678.585 2198.9375 -1693.8516 c2196.5811 -1705.665 2197.7637 -1717.6436 2199.1924 -1729.498 c2200.6289 -1741.4219 2201.5742 -1753.3975 2203.2813 -1765.2891 c2204.8857 -1776.4639 2206.9385 -1787.5527 2211.5684 -1797.9248 c2213.3867 -1801.999 2215.0186 -1806.7207 2217.3711 -1810.6943 C2216.4941 -1811.5488 2215.7012 -1812.4629 2214.6523 -1813.1934 c2211.8975 -1815.1123 2209.3838 -1817.6738 2206.8535 -1819.8926 c2201.4941 -1824.5898 2196.2021 -1829.7617 2192.1055 -1835.624 c2188.2979 -1841.0723 2184.8672 -1846.793 2181.168 -1852.3027 c2179.3789 -1854.9697 2178.4248 -1858.3838 2177.3984 -1861.3945 c2176.1475 -1865.0596 2173.6406 -1868.2939 2171.6504 -1871.5967 c2168.0566 -1877.5596 2165.2832 -1883.9375 2161.7656 -1889.958 C2160.7676 -1887.2832 2159.665 -1884.6348 2158.8232 -1881.8262 c2155.3604 -1870.2725 2149.5391 -1860.2031 2142.0313 -1850.8584 c2135.248 -1842.416 2128.2813 -1833.7471 2120.498 -1826.2021 c2114.7061 -1820.5869 2101.9756 -1811.3037 2094.043 -1818.5313 c2087.3574 -1824.623 2089.2891 -1837.2363 2090.8994 -1845.0244 c2093.1582 -1855.9541 2099.1709 -1866.1133 2105.6328 -1875.0479 c2112.3145 -1884.2861 2120.0146 -1892.8105 2128.0664 -1900.8623 c2132.249 -1905.0459 2136.5303 -1909.1309 2140.7227 -1913.3047 c2143.6406 -1916.209 2146.2715 -1920.0234 2150.5059 -1921.0273 c2150.5771 -1921.0439 2150.6455 -1921.0518 2150.7158 -1921.0664 C2147.5391 -1933.0869 2145.0029 -1945.3652 2142.791 -1957.5322 c2140.1465 -1972.0742 2139.7832 -1987.3379 2135.4014 -2001.4619 c2131.3037 -2014.6689 2128.9727 -2028.8037 2126.5518 -2042.4121 c2126.2266 -2044.2363 2125.9082 -2046.0635 2125.5918 -2047.8916 C2124.5684 -2045.6279 2123.4375 -2043.4111 2122.3408 -2041.2764 c2117.5068 -2031.8691 2110.4043 -2024.0234 2102.54 -2017.0674 c2094.9414 -2010.3467 2086.96 -2005.1406 2077.8496 -2000.7256 c2072.7871 -1998.2715 2067.7168 -1996.0547 2062.4541 -1993.9492 c2058.3604 -1992.3125 2052.5225 -1990.6768 2049.0947 -1994.7197 c2043.0957 -2001.7969 2047.6445 -2012.9531 2050.9336 -2020.4766 c2055.3418 -2030.5615 2062.8271 -2037.6016 2070.7686 -2044.9209 cf0 D2152.877 -2036.6865 m2155.9434 -2030.3086 2160.6611 -2024.7617 2165.6465 -2019.8037 c2170.6797 -2014.7979 2176.6445 -2010.8984 2182.832 -2007.4824 c2186.2607 -2005.5898 2189.9434 -2004.4795 2193.7598 -2003.6631 c2194.0313 -2003.6055 2194.3535 -2003.5332 2194.7051 -2003.4561 C2193.1855 -2006.1816 2191.5098 -2008.9434 2189.7158 -2011.374 c2185.5391 -2017.0332 2180.5273 -2022.1074 2175.2686 -2026.7559 c2167.9375 -2033.2373 2159.3486 -2038.4912 2150.4229 -2042.9102 C2151.0938 -2040.7803 2151.9111 -2038.6973 2152.877 -2036.6865 cf2328.2256 -1829.1943 m2335.4131 -1829.9727 2342.6211 -1831.5088 2349.709 -1832.916 c2357.3184 -1834.4268 2365.3711 -1836.2344 2372.3447 -1839.7275 c2375.0537 -1841.085 2377.7188 -1842.5098 2380.3262 -1844.0547 c2381.6016 -1844.8115 2382.8906 -1845.6299 2384.0645 -1846.5381 C2384.4385 -1846.8545 2384.8125 -1847.1719 2385.1865 -1847.4893 C2385.2832 -1847.6162 2385.3652 -1847.7129 2385.4502 -1847.8154 C2384.2412 -1849.2188 2381.541 -1850.9336 2380.8066 -1851.7734 c2378.5967 -1854.3008 2376.1807 -1856.5762 2373.3711 -1858.4141 c2367.9307 -1861.9717 2361.0615 -1863.1191 2354.8193 -1864.4902 c2347.2598 -1866.1494 2339.6875 -1867.7441 2331.9531 -1868.2324 c2317.5293 -1869.1436 2302.3359 -1868.9902 2288.0547 -1866.668 c2274.249 -1864.4238 2261.1426 -1858.9492 2250.8057 -1849.4004 c2246.4512 -1845.3779 2242.8652 -1840.5352 2239.5928 -1835.6152 c2237.9863 -1833.2012 2236.8867 -1830.7168 2236.2314 -1827.8994 c2236.1787 -1827.6729 2236.1572 -1827.4453 2236.1504 -1827.2188 C2237.8184 -1828.0371 2239.8555 -1828.1436 2241.9609 -1827.0107 c2242.5781 -1826.6787 2243.207 -1826.4102 2243.8438 -1826.1768 C2257.5508 -1826.2344 2270.8086 -1826.2227 2284.4268 -1823.9639 C2290.9414 -1824.4971 2297.4307 -1825.8398 2303.9121 -1826.6289 c2312.002 -1827.6133 2320.124 -1828.3174 2328.2256 -1829.1943 cf2332.7217 -1760.7656 m2338.251 -1759.6113 2344.3613 -1759.4082 2349.9063 -1760.5313 c2355.4014 -1761.6445 2358.4111 -1763.2139 2359.1172 -1769.1436 c2359.6064 -1773.248 2360.7881 -1780.1943 2358.4688 -1783.7188 c2355.5098 -1788.2168 2350.418 -1791.2783 2345.8467 -1793.8574 c2336.2168 -1799.291 2325.1807 -1801.6436 2314.5283 -1804.1172 c2304.3066 -1806.4912 2294.0928 -1808.9971 2283.7705 -1810.915 C2283.75 -1810.9131 2283.7305 -1810.9111 2283.71 -1810.9092 c2277.9307 -1810.4385 2272.0801 -1810.5371 2266.2871 -1810.5967 c2262.5752 -1810.6348 2258.7627 -1810.9639 2254.998 -1811.3232 C2255.3574 -1810.8203 2255.7217 -1810.3242 2256.082 -1809.8232 C2264.9219 -1801.7354 2275.5684 -1796.0742 2285.1836 -1788.9756 c2290.9248 -1784.7363 2295.9316 -1779.9541 2300.4697 -1774.7529 C2300.9727 -1774.4316 2301.4678 -1774.0967 2301.9727 -1773.7783 c2311.5195 -1767.7607 2321.6338 -1763.083 2332.7217 -1760.7656 cf2265.1074 -1730.3281 m2265.7148 -1726.585 2266.2402 -1722.793 2266.6836 -1718.9746 C2267.6846 -1718.5029 2268.6104 -1717.7402 2269.3613 -1716.6221 c2272.3721 -1712.1436 2274.2627 -1707.1318 2276.5449 -1702.2695 c2278.8428 -1697.374 2282.0264 -1692.6934 2285.0293 -1688.2041 c2291.8926 -1677.9443 2299.791 -1668.0859 2307.5977 -1658.5342 c2310.6992 -1654.7402 2314.9336 -1649.7725 2319.7646 -1648.2266 c2323.7617 -1646.9482 2326.2559 -1655.7178 2326.9893 -1658.2861 c2328.5225 -1663.6621 2330.0654 -1669.3926 2330.7666 -1674.9375 c2331.5957 -1681.4932 2330.3477 -1688.4316 2329.2148 -1694.876 c2327.2334 -1706.1436 2324.0996 -1716.9561 2318.1572 -1726.8184 c2311.8672 -1737.2578 2304.6191 -1747.1475 2297.874 -1757.2969 c2296.3535 -1759.585 2294.6924 -1761.7832 2292.9277 -1763.9033 C2283.8594 -1769.5801 2275.2051 -1776.1133 2266.7539 -1782.5049 c2261.6055 -1786.3984 2256.0957 -1789.9199 2251.5723 -1794.5635 c2251.5479 -1794.5889 2251.5254 -1794.6162 2251.501 -1794.6416 C2253.208 -1788.7236 2254.54 -1782.7129 2256.6182 -1776.8789 c2261.918 -1761.999 2262.5859 -1745.8604 2265.1074 -1730.3281 cf2216.6211 -1767.1885 m2214.0977 -1751.6025 2212.543 -1735.6621 2211.0752 -1719.9434 c2210.3779 -1712.4727 2210.127 -1704.6953 2211.4736 -1697.3076 c2212.9004 -1689.4795 2215.0215 -1681.7266 2216.8203 -1673.9746 c2220.2734 -1659.0879 2225.1387 -1644.5059 2230.0742 -1630.0557 c2231.543 -1625.7549 2233.3086 -1621.2656 2236.2324 -1617.7256 c2237.6143 -1616.0518 2239.209 -1614.8086 2241.2734 -1614.1465 c2244.3672 -1613.1543 2245.1689 -1612.9336 2246.6289 -1615.7793 c2248.8906 -1620.1826 2249.6348 -1626.3047 2250.7266 -1631.0449 c2252.625 -1639.2871 2253.6162 -1647.5938 2254.1777 -1656.0195 c2254.6807 -1663.5693 2255.127 -1671.1201 2255.3721 -1678.6826 c2255.6406 -1686.958 2255.0176 -1695.1377 2254.6563 -1703.4004 c2253.9902 -1718.6338 2251.8398 -1733.7275 2249.4766 -1748.7861 c2248.2607 -1756.5381 2247.3301 -1764.1855 2244.7285 -1771.6074 c2242.0283 -1779.3115 2240.2646 -1787.1572 2237.8145 -1794.9258 c2236.7188 -1798.4023 2235.3896 -1801.8115 2233.9326 -1805.1514 c2233.5615 -1806.002 2233.0859 -1806.8027 2232.5645 -1807.582 C2231.6523 -1806.8916 2230.5234 -1806.4072 2229.1709 -1806.2539 c2231.0371 -1806.4658 2229.3457 -1805.2559 2228.7324 -1804.2871 c2227.8193 -1802.8418 2227.208 -1801.0566 2226.5098 -1799.501 c2225.0225 -1796.1885 2223.4053 -1792.9258 2222.0889 -1789.542 c2219.3018 -1782.3779 2217.8457 -1774.7471 2216.6211 -1767.1885 cf2149.916 -1904.1133 m2146.6504 -1900.707 2143.1719 -1897.4883 2139.8027 -1894.1855 c2133.1406 -1887.6543 2126.8652 -1880.8506 2120.9053 -1873.6729 c2110.5977 -1861.2607 2101.4727 -1846.124 2102.6973 -1829.4463 C2102.7803 -1829.457 2102.8633 -1829.4639 2102.9453 -1829.4746 C2103.1582 -1829.585 2103.5293 -1829.7559 2104.082 -1829.9971 C2107.7266 -1831.8379 2110.6973 -1834.7324 2113.5371 -1837.6035 c2119.6533 -1843.7881 2125.0391 -1850.7529 2130.6426 -1857.3945 c2136.9004 -1864.8135 2141.6533 -1872.5674 2145.0654 -1881.6738 c2147.7715 -1888.8965 2152.4482 -1897.6123 2151.2578 -1905.6543 C2150.7207 -1905.0205 2150.2285 -1904.4385 2149.916 -1904.1133 cf2066.4082 -2009.4492 m2070.0234 -2010.8945 2073.5449 -2012.9434 2077.0693 -2014.6514 c2084.5762 -2018.291 2091.1152 -2024.0527 2097.1367 -2029.7178 c2103.2363 -2035.458 2108.0381 -2041.8486 2111.8682 -2049.3027 c2113.3125 -2052.1133 2114.3574 -2054.9707 2115.2129 -2057.8643 C2112.4648 -2056.9727 2109.8662 -2055.5225 2107.2012 -2054.3477 c2099.1348 -2050.793 2092.0752 -2046.8613 2085.5469 -2040.8994 c2074.8584 -2031.1396 2062.8242 -2021.2705 2059.959 -2006.8701 C2062.1094 -2007.7295 2064.2588 -2008.5889 2066.4082 -2009.4492 cf*U*u1 D2528.8506 -2105.0225 m2542.8457 -2106.3555 2555.2803 -2099.3076 2565.8965 -2090.9238 c2566.5156 -2090.4355 2567.125 -2089.9355 2567.7393 -2089.4414 C2568.5225 -2090.0273 2569.2695 -2090.6445 2569.957 -2091.3008 C2571.2227 -2094.6836 2572.1299 -2098.166 2572.6895 -2101.7939 c2573.7334 -2108.5586 2575.3691 -2115.0234 2575.3691 -2121.8955 c2575.3691 -2132.2021 2577.2705 -2145.0898 2571.9346 -2154.3887 c2571.4395 -2155.252 2571.166 -2156.1045 2571.0664 -2156.9258 C2585.1055 -2156.9258 L2588.7012 -2148.0361 2588.3691 -2138.1484 2588.3691 -2128.6104 c2588.3691 -2116.5889 2587.4609 -2103.9385 2584.0039 -2092.3008 C2584.3418 -2091.5029 2584.4688 -2090.624 2584.3369 -2089.7051 C2586.6426 -2090.0273 2588.9717 -2090.1553 2591.2158 -2090.1777 c2601.0605 -2090.2773 2615.6719 -2085.0908 2616.3105 -2073.4736 c2616.8281 -2064.0215 2607.5967 -2056.5859 2599.1084 -2054.6855 c2588.582 -2052.3271 2578.8906 -2060.6787 2572.1719 -2067.6338 c2572.1055 -2067.7021 2572.0391 -2067.7695 2571.9727 -2067.8379 C2571.8438 -2067.7002 2571.7129 -2067.5625 2571.585 -2067.4258 C2569.708 -2064.8008 2567.709 -2062.2627 2565.6045 -2059.8223 c2558.1348 -2051.1582 2545.1816 -2041.7959 2548.3711 -2028.8652 c2548.541 -2028.1777 2548.5986 -2027.5264 2548.5762 -2026.9102 C2558.8281 -2023.6201 2569.1445 -2021.4668 2578.126 -2014.9209 c2587.7871 -2007.8789 2593.416 -1997.6855 2593.123 -1985.6445 c2592.8535 -1974.5557 2589.708 -1963.7734 2581.8906 -1955.7178 c2574.6904 -1948.2998 2563.9658 -1944.3672 2553.7383 -1944.9961 c2533.1992 -1946.2588 2518.8809 -1965.1797 2514.9375 -1984.0029 c2512.5146 -1995.5654 2513.6445 -2006.1533 2524.3184 -2012.8232 c2528.3359 -2015.334 2532.8564 -2017.292 2537.5898 -2018.7686 C2536.8838 -2020.1045 2536.6719 -2021.6465 2536.877 -2023.1104 C2536.4229 -2023.7412 2536.0605 -2024.499 2535.8359 -2025.4102 c2532.6123 -2038.4766 2538.3691 -2048.209 2546.3535 -2058.0957 c2549.29 -2061.7314 2552.6709 -2064.959 2555.8232 -2068.3984 C2554.9238 -2068.0186 2554.0293 -2067.6445 2553.1436 -2067.2813 c2547.1318 -2064.8154 2540.7939 -2063.4697 2534.3232 -2063.0352 c2527.8486 -2062.6016 2521.2715 -2064.1875 2514.8896 -2065.0449 c2509.583 -2065.7568 2504.0938 -2067.7324 2500.9141 -2072.3271 c2497.6055 -2077.1104 2498.3594 -2082.9395 2499.9639 -2088.2129 c2503.752 -2100.6641 2517.5635 -2103.9473 2528.8506 -2105.0225 cf0 D2590.3291 -2069.1602 m2593.918 -2067.0029 2596.4736 -2066.916 2599.958 -2068.9561 c2603.4082 -2070.9766 2604.3184 -2072.8779 2600.6563 -2074.9766 c2595.9316 -2077.6826 2589.7246 -2077.3955 2584.6025 -2076.5156 c2583.8047 -2076.3789 2583.0342 -2076.1641 2582.2881 -2075.8848 C2584.7383 -2073.377 2587.2852 -2070.9902 2590.3291 -2069.1602 cf2534.9883 -2003.7217 m2531.4375 -2002.1738 2527.9629 -2000.5957 2526.8682 -1996.667 c2525.9863 -1993.5049 2527.0801 -1989.334 2527.7402 -1986.1846 c2530.4082 -1973.4521 2539.7832 -1959.4883 2553.7383 -1957.9961 c2560.8301 -1957.2373 2567.584 -1960.0947 2572.6982 -1964.9102 c2578.6953 -1970.5566 2579.9707 -1979.3633 2580.1621 -1987.2285 c2580.458 -1999.4014 2571.2617 -2005.416 2560.8496 -2009.3887 C2551.998 -2009.2246 2543.1191 -2007.2666 2534.9883 -2003.7217 cf2512.1211 -2079.2793 m2513.7012 -2077.8145 2516.7656 -2077.7793 2518.7637 -2077.7246 c2522.1094 -2077.6328 2525.5039 -2076.4668 2528.8535 -2076.1445 c2532.4219 -2075.8018 2535.9805 -2076.0283 2539.4932 -2076.6904 c2545.1191 -2077.751 2550.4375 -2079.9805 2555.5459 -2082.5254 C2552.1045 -2085.0469 2548.4824 -2087.3281 2544.6172 -2089.2676 c2538.3906 -2092.3945 2531.8379 -2092.5986 2525.0586 -2091.5684 c2519.7422 -2090.7617 2513.7949 -2089.0146 2512.0645 -2083.3281 c2511.6309 -2081.9014 2511.0713 -2080.252 2512.1211 -2079.2793 cf*U*u1 D2897.4521 -2090.2705 m2902.9473 -2096.8447 2911.3574 -2101.5703 2918.9863 -2105.2354 c2923.2725 -2107.2939 2927.6543 -2108.4922 2932.377 -2108.8086 C2929.1523 -2115.6729 2925.7012 -2122.3555 2923.0732 -2129.5723 c2921.5195 -2133.8398 2919.0742 -2137.7959 2918.0332 -2142.2188 c2916.9658 -2146.749 2916.5459 -2151.4551 2915.332 -2155.9414 c2915.2402 -2156.2793 2915.1816 -2156.6055 2915.1367 -2156.9258 C2928.5586 -2156.9258 L2928.5801 -2156.6992 2928.5938 -2156.4727 2928.5918 -2156.248 C2929.0762 -2153.8477 2929.4531 -2151.4121 2929.9678 -2149.0283 c2930.9531 -2144.459 2932.5801 -2140.6807 2934.3496 -2136.3506 c2937.7656 -2127.9902 2940.9648 -2119.8516 2945.165 -2111.8359 c2945.3818 -2111.4219 2945.585 -2111.0088 2945.7939 -2110.5947 C2949.6563 -2114.2598 2953.6299 -2117.4551 2958.8799 -2119.6348 c2965.6201 -2122.4326 2972.3906 -2124.2119 2979.6484 -2124.9785 c2986.8955 -2125.7432 2994.2607 -2124.9111 3001.4092 -2123.7109 c3006.5273 -2122.8506 3016.5625 -2121.6045 3017.6738 -2115.0225 c3019.918 -2101.7334 3001.9336 -2092.8506 2991.3965 -2090.5088 c2984.0459 -2088.875 2976.5625 -2089.9395 2969.3252 -2091.5928 c2963.9844 -2092.8125 2958.6416 -2094.0605 2953.3086 -2095.3389 C2954.6719 -2092.9941 2956.2158 -2090.7197 2958.1006 -2088.5508 c2963.8516 -2081.9355 2969.2666 -2075.1162 2975.4688 -2068.9043 c2976.9707 -2067.4004 2977.5 -2065.6875 2977.3594 -2064.0654 C2980.6035 -2065.4707 2984.4121 -2065.6309 2987.8311 -2066.168 c2993.3164 -2067.0283 2998.832 -2067.7148 3004.2197 -2069.084 c3015.2393 -2071.8848 3025.8027 -2075.5439 3036.8125 -2070.5625 c3046.2666 -2066.2852 3055.5039 -2058.0156 3059.1699 -2048.0996 c3063.5908 -2036.1406 3059.0303 -2026.2158 3051.5566 -2016.7412 c3048.4414 -2012.793 3046.1143 -2009.2471 3041.999 -2006.1768 c3038.0654 -2003.2412 3032.3926 -2001.5723 3027.6338 -2000.7676 c3016.4883 -1998.8848 3003.4307 -1999.0273 2992.4844 -2001.8516 c2981.6055 -2004.6582 2976.0459 -2013.5068 2971.6318 -2023.248 c2969.1689 -2028.6816 2967.2256 -2034.3047 2965.8379 -2040.1045 c2965.1904 -2042.8115 2964.6631 -2045.4512 2964.4287 -2048.2305 c2964.1055 -2052.0605 2965.7979 -2054.6406 2966.334 -2058.2559 c2966.3926 -2058.6504 2966.5059 -2059.0195 2966.6533 -2059.3711 C2966.5273 -2059.4824 2966.4004 -2059.5898 2966.2773 -2059.7129 c2960.085 -2065.9131 2954.543 -2072.6563 2948.9082 -2079.3594 c2948.0439 -2080.3877 2947.2275 -2081.4209 2946.4463 -2082.4609 C2946.1221 -2081.3867 2945.7598 -2080.3193 2945.3447 -2079.2578 c2942.2861 -2071.4316 2937.1445 -2064.168 2931.2227 -2058.2402 c2921.793 -2048.7988 2900.0352 -2033.623 2889.5879 -2049.5693 c2886.4531 -2054.3535 2886.0928 -2062.0195 2886.751 -2067.5391 c2887.7822 -2076.1787 2891.9434 -2083.6807 2897.4521 -2090.2705 cf0 D2979.4502 -2102.8613 m2984.6211 -2102.2432 2989.4063 -2103.1162 2994.248 -2104.9014 c2996.7686 -2105.8311 3000.3691 -2107.7793 3002.8174 -2110.1621 C3002.2559 -2110.293 3001.6953 -2110.4316 3001.1309 -2110.5527 c2998.4854 -2111.1426 2995.8066 -2111.5586 2993.1133 -2111.8545 c2988.1621 -2112.3975 2982.9941 -2112.4785 2978.0498 -2111.8096 c2973.1504 -2111.1465 2968.4365 -2109.4805 2963.8389 -2107.7227 c2962.9717 -2107.3916 2962.1543 -2106.9951 2961.3682 -2106.5566 C2967.376 -2105.0088 2973.4531 -2103.5781 2979.4502 -2102.8613 cf2978.0049 -2045.2891 m2979.2646 -2040.6426 2980.3809 -2036.1016 2982.1152 -2031.5898 c2984.6191 -2025.0801 2988.3379 -2015.8789 2995.9414 -2014.3867 c3004.7285 -2012.6621 3013.627 -2012.5586 3022.5742 -2013.1631 c3030.2578 -2013.6816 3036.4287 -2016.9844 3040.4678 -2023.502 c3044.8906 -2030.6416 3050.626 -2035.792 3046.5479 -2044.7119 c3043.3594 -2051.6865 3035.9238 -2057.4102 3028.793 -2059.7705 c3021.2949 -2062.252 3011.7051 -2057.4395 3004.4492 -2055.7656 c3000.1367 -2054.7715 2995.6582 -2054.3096 2991.2871 -2053.6318 c2988.5469 -2053.207 2984.2871 -2053.3848 2981.9336 -2051.7813 c2980.5518 -2050.8398 2979.1895 -2050.5391 2977.9453 -2050.6855 C2977.5664 -2049.0889 2977.3828 -2047.584 2978.0049 -2045.2891 cf2900.2383 -2057.6895 m2900.6699 -2055.8389 2900.707 -2055.7695 2902.3438 -2055.6484 c2905.2754 -2055.4316 2908.3789 -2057.5342 2910.8516 -2058.8242 c2915.8965 -2061.4541 2920.4336 -2065.6426 2924.2949 -2069.7764 c2931.3906 -2077.3711 2934.4775 -2085.9326 2935.4629 -2095.4912 C2932.8799 -2095.7217 2930.2549 -2095.6318 2927.3164 -2094.7061 c2921.9238 -2093.0059 2915.5469 -2089.0898 2911.1504 -2085.5264 c2902.8643 -2078.8105 2897.752 -2068.3271 2900.2383 -2057.6895 cf*U*u1 D3423.4414 -2046.083 m3426.5811 -2051.8828 3430.9785 -2056.624 3435.0342 -2061.7686 c3438.6289 -2066.3281 3442.7305 -2070.0254 3448.2461 -2070.0771 C3446.5 -2073.9375 3444.8809 -2077.8389 3443.5654 -2081.9531 c3435.7256 -2106.4844 3426.4141 -2130.8389 3426.0127 -2156.9258 C3439.0068 -2156.9258 L3439.249 -2141.4902 3442.7715 -2126.6172 3447.4902 -2111.9727 c3449.6611 -2105.2344 3452.4297 -2098.6875 3454.3164 -2091.8643 c3456.2861 -2084.7393 3458.4951 -2077.9453 3461.8535 -2071.3408 c3465.0527 -2065.0498 3467.5508 -2058.4746 3470.3438 -2052 c3471.5674 -2049.1641 3472.9043 -2046.3906 3474.3232 -2043.6611 C3475.2637 -2044.4141 3476.4883 -2044.8789 3478 -2044.8789 C3490.7588 -2044.5684 3497.168 -2043.0293 v3504.4932 -2041.2695 3511.8066 -2039.167 3519.1406 -2037.416 c3533.377 -2034.0166 3546.7598 -2028.7637 3560.0254 -2022.6846 c3571.2168 -2017.5566 3582.8301 -2011.5498 3590.2324 -2001.3496 c3595.332 -1994.3213 3599.8262 -1984.5488 3598.6914 -1975.6738 c3597.0137 -1962.5645 3583.0459 -1960.0244 3571.8809 -1960.416 c3557.9639 -1960.9053 3544.8594 -1966.4453 3532.4668 -1972.2969 c3525.9277 -1975.3848 3519.3213 -1978.1152 3513.0928 -1981.7949 c3512.8711 -1981.9258 3512.6543 -1982.0635 3512.4346 -1982.1953 C3514.2227 -1979.0605 3515.9902 -1975.9131 3517.833 -1972.8135 c3521.8691 -1966.0234 3526.3096 -1959.5547 3530.1836 -1952.6523 c3533.7402 -1946.3145 3537.3047 -1940 3541.4102 -1933.9961 c3545.917 -1927.4033 3551.4023 -1921.4473 3556.2842 -1915.1318 c3560.3779 -1909.8359 3564.2168 -1904.4521 3568.707 -1899.4746 c3573.7578 -1893.877 3578.7295 -1888.3242 3583.3311 -1882.3438 c3592.9238 -1869.8779 3602.0449 -1857.042 3610.8984 -1844.0449 c3615.1445 -1837.8125 3619.4443 -1831.707 3623.4102 -1825.2969 c3627.0723 -1819.3779 3630.6602 -1813.1426 3635.3779 -1808.0176 c3639.8691 -1803.1396 3642.8057 -1797.8555 3646.127 -1792.1543 c3649.8828 -1785.709 3655.0557 -1780.3184 3658.5381 -1773.6777 c3661.8301 -1767.4033 3665.7061 -1761.3174 3669.7764 -1755.5244 c3673.9512 -1749.583 3676.9355 -1742.9893 3680.1494 -1736.5068 c3683.1563 -1730.4424 3687.0947 -1725.0391 3690.5234 -1719.2178 c3694.208 -1712.9629 3697.0947 -1706.543 3700.168 -1699.9648 c3702.9961 -1693.9121 3706.5352 -1688.1826 3709.46 -1682.165 c3712.9541 -1674.9766 3715.4521 -1667.3125 3717.9766 -1659.7461 c3720.291 -1652.8125 3721.1504 -1645.4678 3722.7314 -1638.3516 c3724.5322 -1630.2441 3726.6748 -1622.209 3727.3672 -1613.918 c3727.5615 -1611.5898 3727.7148 -1609.2656 3727.8525 -1606.9414 C3732.6729 -1606.0449 3737.3613 -1604.2295 3741.9004 -1602.4785 c3748.9531 -1599.7598 3756.123 -1597.127 3762.9863 -1593.9629 c3775.875 -1588.0215 3787.542 -1579.5371 3798.2051 -1570.2471 c3808.1758 -1561.5586 3818.124 -1551.6367 3824.5332 -1539.959 c3827.4023 -1534.7314 3829.3926 -1528.9932 3830.7637 -1523.208 c3832.2441 -1516.958 3833.8379 -1509.0195 3829.7002 -1503.459 c3822.416 -1493.667 3803.9316 -1497.4971 3794.1406 -1500.3232 c3780.5254 -1504.2529 3767.8936 -1512.1016 3755.4922 -1518.7734 c3745.2939 -1524.2598 3737.2871 -1531.2471 3730.0234 -1539.6074 C3730.5996 -1533.5283 3731.3311 -1527.4541 3732.2021 -1521.3594 c3734.0176 -1508.6572 3736.6211 -1495.9385 3740.5625 -1483.7168 c3744.166 -1472.5439 3749.916 -1462.2891 3751.6904 -1450.5488 c3751.8594 -1449.4277 3751.834 -1448.3105 3751.6016 -1447.2744 C3755.4922 -1447.1895 3759.3027 -1444.0645 3757.7422 -1439.3135 c3757.0596 -1437.2334 3762.8682 -1430.3086 3763.9385 -1428.2656 c3767.0527 -1422.3242 3769.1592 -1415.5635 3773.3291 -1410.25 c3777.5449 -1404.8779 3780.1846 -1398.9648 3783.1289 -1392.8525 c3785.7217 -1387.4707 3789.1846 -1382.1621 3792.6006 -1377.2891 c3793.875 -1375.4707 3795.041 -1373.5674 3796.1611 -1371.6309 C3796.1455 -1371.7441 3796.125 -1371.8555 3796.1094 -1371.9688 c3794.6377 -1382.4453 3793.1152 -1393.3555 3799.1201 -1402.791 c3803.5996 -1409.8301 3813.3682 -1408.2998 3819.7695 -1405.2813 c3825.9883 -1402.3496 3830.168 -1397.5127 3834.0107 -1392.2148 C3834.0107 -1367.4912 L3832.7207 -1369.9199 3831.3818 -1372.3184 3830.0273 -1374.6875 c3828.123 -1378.0176 3825.6504 -1380.9268 3823.6631 -1384.165 c3821.7031 -1387.3584 3819.6748 -1390.1494 3816.4844 -1392.2061 c3814.5361 -1393.4619 3812.7588 -1394.251 3810.4873 -1394.7949 c3810.0732 -1394.8945 3809.7617 -1394.9199 3809.5332 -1394.9102 C3808.4883 -1393.0596 3807.9375 -1390.8672 3807.7129 -1388.7813 c3806.8906 -1381.1279 3808.9023 -1372.3857 3810.4795 -1364.9316 c3812.2959 -1356.3418 3815.3799 -1348.2627 3819.5684 -1340.5654 c3823.5703 -1333.21 3828.0225 -1326.1465 3831.7256 -1318.624 c3832.2041 -1317.6523 3832.6875 -1316.6855 3833.1797 -1315.7275 C3833.4609 -1315.3867 3833.7324 -1315.0391 3834.0107 -1314.6953 C3834.0107 -1291.9395 L3830.9473 -1294.8916 3828.3691 -1298.2813 3826.0957 -1301.8984 C3824.5635 -1302.5361 3823.3594 -1303.9131 3823.0078 -1306.1875 c3822.8604 -1307.1426 3822.4648 -1308.0176 3821.9678 -1308.8584 C3820.0977 -1310.9434 3818.1357 -1312.9434 3816.0635 -1314.832 c3807.4561 -1322.6826 3795.8779 -1326.8926 3785.8193 -1332.4912 c3775.3506 -1338.3174 3765.2402 -1344.3535 3752.9863 -1345.0342 c3746.3594 -1345.4023 3724.9092 -1344.082 3727.2305 -1332.8906 c3729.0293 -1324.2109 3739.6025 -1316.7607 3746.5566 -1312.5117 c3756.4141 -1306.4893 3766.7129 -1300.666 3777.3096 -1296.082 c3782.4395 -1293.8633 3788.457 -1293.1924 3793.832 -1291.707 c3799.6816 -1290.0908 3805.5195 -1287.9805 3811.1211 -1285.6563 c3817.9854 -1282.8086 3826.0732 -1281.2656 3834.0107 -1280.4941 C3834.0107 -1257.2119 L3829.3066 -1252.8428 3825.2061 -1247.5342 3819.7168 -1244.0645 c3816.793 -1242.2158 3813.3574 -1240.8438 3809.957 -1239.5576 C3804.9414 -1234.499 3800.127 -1229.252 3795.334 -1223.9619 c3791.666 -1219.915 3788.1279 -1215.9238 3785.6016 -1211.0518 c3783.2871 -1206.5898 3782.2598 -1201.4082 3781.3389 -1196.5107 c3780.4541 -1191.8008 3775.5479 -1173.3691 3782.1221 -1170.71 c3787.5801 -1168.5029 3796.5166 -1174.7656 3800.5576 -1177.9844 c3803.5127 -1180.3379 3806.0459 -1183.0273 3808.3105 -1185.9258 C3812.4375 -1209.6699 3821 -1232.7715 3834.0107 -1253.0146 C3834.0107 -1204.1055 L3832.9482 -1202.1367 3831.8896 -1200.1699 3830.8711 -1198.1982 c3827.7041 -1192.0684 3824.4844 -1185.9844 3820.415 -1180.4238 C3819.5576 -1174.9131 3819.0674 -1169.335 3818.7422 -1163.7754 c3818.3848 -1157.6699 3817.7939 -1150.8936 3818.6699 -1144.8203 c3819.458 -1139.3623 3824.2373 -1136.1953 3828.5352 -1133.3906 c3830.332 -1132.2188 3832.1758 -1131.1191 3834.0107 -1130.0078 C3834.0107 -1114.5576 L3832.3223 -1115.5791 3830.6357 -1116.8164 3828.6807 -1118.0439 c3822.873 -1121.6914 3817.3262 -1125.168 3812.2324 -1129.7979 c3807.6748 -1133.9404 3806.1035 -1140.0215 3805.5742 -1145.9023 c3804.9873 -1152.4248 3805.334 -1159.2793 3805.8594 -1165.8936 C3801.2031 -1162.5801 3796.0576 -1159.9736 3790.4512 -1158.3359 c3785.0527 -1156.7588 3778.7148 -1157.0381 3774.127 -1160.5322 c3768.416 -1164.8818 3766.4189 -1171.9492 3766.1592 -1178.8301 c3765.8965 -1185.7598 3767.6221 -1193.1631 3768.7998 -1199.9668 c3770.0586 -1207.2393 3772.3535 -1214.251 3776.0352 -1220.6641 c3776.7754 -1221.9541 3777.623 -1223.1992 3778.5127 -1224.4248 C3771.2773 -1222.623 3763.4805 -1221.9902 3756.6611 -1221.8857 c3745.4082 -1221.7129 3732.6201 -1223.8711 3721.8418 -1227.1318 c3711.6152 -1230.2246 3710.875 -1239.8008 3712.5488 -1248.7578 c3714.4688 -1259.0332 3721.3467 -1264.8398 3729.5742 -1270.5029 c3738.5889 -1276.708 3748.4258 -1282.4834 3759.2861 -1284.502 c3762.166 -1285.0371 3765.0059 -1285.6367 3767.8281 -1286.2148 C3766.6201 -1286.7061 3765.418 -1287.2148 3764.2275 -1287.7666 c3758.2637 -1290.5322 3752.752 -1294.2061 3746.9785 -1297.3447 c3740.7715 -1300.7197 3734.8379 -1304.3242 3729.4033 -1308.8643 c3720.5908 -1316.2266 3711.9678 -1327.3574 3714.7158 -1339.4316 c3717.7734 -1352.8672 3733.79 -1356.2656 3745.207 -1357.7461 c3760.6846 -1359.7539 3774.6875 -1353.5713 3787.8613 -1346.25 c3792.2061 -1343.8359 3796.6484 -1341.5781 3801.0625 -1339.2734 C3800.876 -1339.5352 3800.6963 -1339.8018 3800.5078 -1340.0615 c3792.1895 -1351.5293 3786.0732 -1364.21 3778.2627 -1375.9365 c3774.6602 -1381.3457 3771.7148 -1386.6572 3768.9775 -1392.585 c3766.0078 -1399.0176 3761.2549 -1404.1494 3758.0996 -1410.4492 c3755.2734 -1416.0889 3752.9629 -1421.9346 3749.4268 -1427.1836 c3746.5078 -1431.5156 3743.5742 -1437.0381 3745.0986 -1442.3721 C3742.3984 -1442.5586 3739.5752 -1444.3125 3739.1553 -1447.0938 c3737.0371 -1461.1006 3729.749 -1473.666 3725.9639 -1487.2334 c3721.6074 -1502.8438 3719.3984 -1518.8545 3717.5742 -1534.9209 c3716.6465 -1543.0898 3716.1504 -1551.1738 3715.8828 -1559.2725 C3715.1777 -1560.6318 3714.5176 -1562.041 3713.9131 -1563.5313 c3711.6816 -1569.0361 3710.4492 -1575.2354 3709.667 -1581.1172 c3708.9277 -1586.6729 3710.208 -1592.9434 3715.4121 -1595.7959 C3715.0967 -1606.3125 3714.2285 -1616.7441 3711.9238 -1627.1152 c3708.5059 -1642.499 3705.6484 -1657.458 3699.7676 -1672.1631 c3697.2051 -1678.5723 3693.8428 -1684.3828 3690.4727 -1690.3779 c3686.9189 -1696.7012 3684.6777 -1703.665 3681.0527 -1709.9648 c3677.7109 -1715.7734 3673.6074 -1721.1191 3670.3535 -1726.9844 c3666.8545 -1733.29 3664.2344 -1740.0078 3660.4336 -1746.168 c3656.71 -1752.2012 3652.6016 -1757.9375 3649.0459 -1764.0918 c3645.3008 -1770.5742 3640.8516 -1776.2676 3636.792 -1782.5039 c3633.1992 -1788.0225 3630.6904 -1793.9688 3626.1855 -1798.8262 c3621.4102 -1803.9746 3617.877 -1809.8955 3614.0713 -1815.7646 c3605.5732 -1828.8691 3596.9561 -1841.9004 3587.8311 -1854.5996 c3578.9414 -1866.9717 3569.7793 -1879.0205 3559.5146 -1890.2832 c3555.0225 -1895.2119 3551.1104 -1900.5254 3547.1289 -1905.8643 c3542.3975 -1912.207 3537.0293 -1918.0732 3532.3408 -1924.4482 c3523.3652 -1936.6514 3516.6416 -1950.4414 3508.4893 -1963.1895 c3500.1836 -1976.1748 3492.9717 -1989.8018 3484.4434 -2002.668 c3481.543 -2007.0439 3478.6201 -2011.417 3475.7539 -2015.8262 C3473.9297 -2017.4785 3472.1143 -2019.1338 3470.4111 -2020.9209 C3470.4209 -2020.1348 3470.4277 -2019.3467 3470.4092 -2018.5508 c3470.2471 -2011.5137 3468.2881 -2004.3984 3467.1064 -1997.4844 c3465.7588 -1989.6016 3463.5039 -1982.0098 3460.0107 -1974.8223 c3456.7871 -1968.1904 3452.8252 -1961.9658 3449.2646 -1955.5205 c3445.9023 -1949.4326 3443.1152 -1942.8193 3438.6416 -1937.4453 c3434.873 -1932.918 3429.8418 -1929.752 3425.4785 -1925.873 c3420.8584 -1921.7646 3413.6963 -1917.5508 3408.2119 -1922.9873 c3403.7119 -1927.4473 3402.5059 -1934.1826 3401.7646 -1940.2178 c3400.8799 -1947.416 3400.7441 -1954.5752 3400.5762 -1961.8301 c3400.2139 -1977.5029 3404.1758 -1992.2842 3408.708 -2007.165 c3412.7178 -2020.332 3416.8623 -2033.9277 3423.4414 -2046.083 cf0 D3762.7422 -1271.9658 m3753.6211 -1270.4043 3746.1211 -1265.5352 3738.3301 -1260.8096 c3731.9082 -1256.9141 3726.6729 -1252.8496 3725.084 -1245.3018 c3724.502 -1242.5332 3723.5137 -1240.207 3726.5117 -1239.2998 c3730.7783 -1238.0098 3735.4932 -1237.4893 3739.8652 -1236.6699 c3750.127 -1234.7461 3760.042 -1234.4297 3770.3203 -1236.3379 c3774.3281 -1237.082 3778.7236 -1237.79 3782.457 -1239.4785 c3786.3613 -1241.2451 3789.8027 -1244.0088 3793.3564 -1246.3662 c3796.3418 -1248.3467 3799.6689 -1249.6895 3803.0195 -1250.9805 C3804.6201 -1252.5557 3806.2363 -1254.1191 3807.8809 -1255.6611 c3812.9082 -1260.376 3818.2324 -1264.8818 3823.8945 -1268.832 C3817.584 -1269.9395 3811.416 -1271.5645 3805.8506 -1273.874 c3802.9863 -1275.0625 3800.0801 -1276.084 3797.1514 -1277.0244 C3795.5791 -1275.7861 3793.416 -1275.3896 3791.2402 -1275.7139 c3781.7842 -1277.1221 3772.0488 -1273.5596 3762.7422 -1271.9658 cf3728.582 -1569.0586 m3728.582 -1566.8857 3728.6113 -1564.7188 3728.6602 -1562.5566 C3731.3242 -1557.8154 3735.2266 -1553.4805 3738.6025 -1549.2607 c3742.5703 -1544.3027 3746.9531 -1539.7412 3752.1357 -1536.0498 c3761.6963 -1529.2402 3772.8506 -1524.0811 3783.2939 -1518.7754 c3793.9688 -1513.3516 3805.0078 -1509.9795 3817.0645 -1510.6465 c3819.7148 -1510.793 3819.2949 -1511.125 3819.3174 -1513.6553 c3819.3398 -1516.1143 3818.4385 -1518.8623 3817.875 -1521.2402 c3816.6387 -1526.459 3814.5693 -1531.2998 3811.8799 -1535.9238 c3805.9834 -1546.0625 3796.4697 -1554.5566 3787.7139 -1562.1855 c3778.6914 -1570.0469 3768.6543 -1576.7012 3757.9375 -1582.0146 c3752.21 -1584.8535 3746.0449 -1586.9453 3740.1025 -1589.2949 c3736.5186 -1590.7119 3732.4141 -1592.6035 3728.3877 -1593.6709 C3728.584 -1585.4824 3728.582 -1577.291 3728.582 -1569.0586 cf3481.6836 -2030.7539 m3482.9941 -2028.6055 3484.3281 -2026.4697 3485.6709 -2024.3389 C3490.0498 -2020.5557 3493.7471 -2016.0635 3497.5762 -2011.7305 c3505.8809 -2002.332 3515.7236 -1993.7939 3527.3926 -1988.8281 c3538.5127 -1984.0957 3549.0039 -1978.3232 3560.7598 -1975.2344 c3566.5176 -1973.7227 3572.3359 -1973.0869 3578.2754 -1973.5332 c3581.2129 -1973.7549 3585.6914 -1974.1719 3585.8779 -1977.6406 c3586.2441 -1984.4258 3581.6191 -1992.0391 3577.1748 -1996.7998 c3569.9023 -2004.5889 3559.2207 -2008.8457 3549.7207 -2013.1885 c3538.2285 -2018.4414 3526.291 -2022.3662 3513.9902 -2025.3027 c3507.792 -2026.7832 3501.5225 -2028.3887 3495.374 -2030.0635 c3490.5313 -2031.3838 3485.8896 -2031.7578 3481.0215 -2031.8496 C3481.2422 -2031.4844 3481.4609 -2031.1182 3481.6836 -2030.7539 cf3413.9258 -1946.8936 m3414.3408 -1944.125 3414.584 -1941.3389 3415.0576 -1938.5781 c3415.2676 -1937.4541 3415.54 -1936.3457 3415.874 -1935.252 C3415.9521 -1935.0439 3416.0293 -1934.8369 3416.1074 -1934.6289 C3418.9014 -1936.5625 3421.6045 -1939.3604 3424.0762 -1941.4121 c3428.4932 -1945.0762 3431.1426 -1949.2266 3433.8496 -1954.2305 c3439.501 -1964.6748 3447.334 -1975.2549 3451.0107 -1986.5771 c3452.9102 -1992.4287 3454.2188 -1998.4551 3455.1543 -2004.5303 c3456.0605 -2010.4258 3457.5332 -2016.0107 3457.416 -2022.0361 c3457.1895 -2033.6396 3453.5078 -2044.0303 3449.5625 -2054.8047 c3449.2754 -2055.5898 3449.1465 -2056.3271 3449.1396 -2057.0156 C3448.9434 -2057.0313 3448.7441 -2057.0566 3448.541 -2057.0898 C3448.4121 -2056.9297 3448.0586 -2056.6553 3447.459 -2056.2578 C3446.6934 -2055.4854 3445.9609 -2054.6797 3445.2637 -2053.8438 c3443.4707 -2051.7852 3441.877 -2049.5469 3440.1465 -2047.4346 c3436.6523 -2043.165 3434.0166 -2038.6143 3431.7031 -2033.5938 c3426.7861 -2022.9248 3423.5479 -2011.3672 3420.166 -2000.1533 c3416.75 -1988.8301 3413.6172 -1977.4023 3413.5371 -1965.5088 c3413.4961 -1959.543 3413.043 -1952.7832 3413.9258 -1946.8936 cf*U*u1 D3444.166 -380.1636 m3441.6025 -390.729 3439.9912 -400.9126 3442.4404 -412.1558 c3446.709 -431.7446 3462.8271 -459.1313 3486.4453 -454.4697 c3496.9951 -452.3877 3502.4814 -440.8955 3506.7656 -432.2988 c3512.9443 -419.9014 3513.7031 -407.3999 3513.2256 -393.7549 c3512.7666 -380.6289 3507.5195 -369.7124 3501.0146 -358.5898 c3499.7598 -356.4438 3498.6221 -354.2529 3497.5156 -352.0498 C3499.7285 -353.269 3501.9492 -354.4805 3504.2402 -355.564 c3515.5771 -360.9243 3527.5713 -364.4375 3539.6836 -367.5415 c3550.6289 -370.3467 3563.1504 -373.2422 3574.4707 -371.3442 c3585.2246 -369.5405 3593.8418 -363.645 3600.3906 -355.0962 c3606.9785 -346.4951 3607.915 -335.0244 3605.8311 -324.6025 c3603.8369 -314.6279 3595.8857 -307.0649 3587.4375 -302.1694 c3579.9414 -297.8262 3570.9658 -297.2598 3562.3828 -298.0737 C3565.6191 -294.6733 3568.8633 -291.2974 3572.373 -288.1333 c3577.9805 -283.0791 3582.7637 -277.958 3586.7793 -271.5366 c3590.1621 -266.1274 3594.9541 -261.7305 3597.249 -255.6519 c3600.2412 -247.7241 3603.4443 -240.5918 3604.5488 -232.1279 c3605.4961 -224.8701 3605.0566 -217.4541 3604.9736 -210.1602 c3604.9326 -206.4941 3604.1621 -202.8174 3603.6152 -199.1919 c3603.0488 -195.4473 3602.293 -191.1699 3600.9873 -187.6157 c3598.8721 -181.855 3593.5527 -177.418 3588.6904 -173.9043 c3582.7891 -169.6411 3576.7139 -167.6943 3569.4375 -167.6914 c3562.9336 -167.688 3555.9902 -167.644 3549.6211 -168.9736 c3542.5459 -170.4512 3535.8447 -173.8828 3529.8867 -177.8325 c3517.9756 -185.7271 3508.4277 -196.2681 3500.0361 -207.748 c3493.3262 -216.9287 3487.9512 -227.0156 3483.4082 -237.4209 c3481.0527 -242.814 3479.0654 -248.3218 3477.5449 -254.0078 c3475.9238 -260.0679 3475.332 -266.2979 3473.5449 -272.3296 c3469.835 -284.8569 3472 -297.2729 3472 -310.1191 C3472 -317.585 L3470.6787 -315.3101 3469.582 -312.8467 3468.3242 -310.7285 c3464.6406 -304.5249 3460.1406 -298.7212 3456.1992 -292.6724 c3452.79 -287.4414 3450.4395 -281.729 3447.7383 -276.1333 c3446.2334 -273.0166 3445.707 -269.4785 3444.1543 -266.4253 c3442.541 -263.2505 3440.8398 -260.1211 3439.2236 -256.9482 c3432.9902 -244.7163 3428.3096 -230.4688 3427.7988 -216.6958 c3427.5576 -210.2075 3426.4014 -203.3008 3429.0879 -197.3154 c3429.9492 -195.3965 3430.8535 -190.6821 3433.3555 -190.4971 c3434.9766 -190.377 3436.5771 -190 3438.1563 -189.6201 C3439.6279 -196.9614 3451.0928 -196.4224 3451.0928 -188 c3451.0928 -186 3451.4482 -183.4463 3450.8604 -181.3091 c3449.5879 -176.6846 3444.4043 -175.606 3440.2705 -175.9121 c3436.0391 -176.2256 3430.7422 -177.2285 3426.8926 -178.9824 c3422.957 -180.7754 3421.1064 -183.5928 3419.3447 -187.4097 c3417.4883 -191.4302 3414.8516 -195.7031 3414.5039 -200.1792 c3414.1631 -204.5801 3414.75 -208.9956 3414.7549 -213.4033 c3414.7646 -223.1519 3416.5332 -232.5869 3419.3486 -241.8979 c3421.9063 -250.3579 3425.4502 -258.6807 3429.5469 -266.5054 c3432.9619 -273.0273 3435.4648 -279.9849 3438.4268 -286.7485 C3429.4814 -276.2012 3418.8984 -265.042 3406.0996 -259.4194 c3393.1914 -253.7485 3378.2617 -252.2827 3364.3105 -252.0146 c3358.8633 -251.9097 3352.9658 -251.4067 3347.6641 -252.9468 c3341.1992 -254.8252 3339.3418 -260.6665 3337.1846 -266.249 c3334.1582 -274.0811 3346.7314 -277.4385 3349.7197 -269.7051 c3351.2822 -265.6611 3351.1465 -264.9858 3355.5537 -264.9678 c3362.0107 -264.9414 3368.4678 -265.0122 3374.9102 -265.4648 c3386.9932 -266.3135 3399.6455 -269.335 3409.5996 -276.4072 c3414.3242 -279.7642 3418.2559 -284.4434 3422.2871 -288.5664 c3426.8008 -293.1826 3431.085 -297.8945 3434.9297 -303.0908 c3438.9023 -308.4624 3442.2441 -314.8105 3446.3691 -320.3525 C3434.3516 -317.248 3421.5215 -315.8672 3409.416 -314.6694 c3378.8242 -311.6411 3348.0723 -323.6401 3329.7305 -348.6519 c3321.9639 -359.2422 3315.752 -373.7676 3316.501 -387.1138 c3317.2754 -400.9155 3326.8184 -410.832 3339.1309 -415.6909 c3352.4619 -420.9521 3367.3398 -416.396 3380.623 -413.4219 c3395.1826 -410.1611 3407.8418 -404.4556 3420.3584 -396.4741 c3428.6094 -391.2124 3436.7471 -386.3408 3444.166 -380.1636 Cf0 D3578.2197 -312.2266 m3593.3945 -316.7021 3598.6563 -336.5503 3589.1777 -348.4839 c3577.5645 -363.1045 3558.9355 -358.9268 3543.1396 -355.0059 c3533.9375 -352.7217 3524.8408 -350.0737 3516.0117 -346.6011 c3511.8789 -344.9756 3507.7568 -343.0723 3503.8242 -340.9824 C3504.6064 -340.7441 3505.3857 -340.4897 3506.1621 -340.21 c3512.4961 -337.9282 3518.7686 -333.8198 3524.3545 -330.0874 c3529.7344 -326.4932 3535.5225 -323.752 3540.502 -319.5098 c3540.5186 -319.4961 3540.5342 -319.481 3540.5508 -319.4668 C3552.0986 -312.7808 3564.1924 -308.0894 3578.2197 -312.2266 cf3486.5215 -274.1362 m3488.6484 -266.9517 3489.3691 -259.4795 3491.5947 -252.3027 c3499.9492 -225.3657 3518.2813 -200.3931 3542.1113 -185.4155 c3547.7813 -181.8516 3554.7529 -181.1987 3561.1816 -181.0889 c3568.6738 -180.9604 3574.3867 -179.9546 3580.9453 -184.272 c3583.3848 -185.8779 3585.459 -188.1157 3587.5254 -190.1572 c3589.8477 -192.4507 3589.2471 -196.0586 3590.248 -198.9434 c3592.8281 -206.3765 3592.1504 -215.2329 3592.0898 -222.9746 c3592.0273 -231.0342 3590.4814 -237.6909 3587.5049 -245.1318 c3586.1924 -248.4146 3585.043 -251.7017 3583.1436 -254.6963 c3581.1523 -257.834 3578.3477 -260.3481 3576.4277 -263.5425 c3572.7773 -269.6147 3568.4238 -274.2148 3563.1816 -278.9409 c3557.3877 -284.1626 3552.252 -289.9448 3546.8057 -295.5161 c3542.4863 -299.9346 3537.998 -304.1836 3533.4287 -308.3413 C3530.3184 -310.2876 3527.2832 -312.3208 3524.2988 -314.2314 c3523.5801 -314.6914 3523.0107 -315.2241 3522.5605 -315.8008 C3520.4775 -317.0254 3518.5459 -318.3594 3516.4648 -319.75 c3511.3936 -323.1387 3505.5645 -326.8428 3499.7441 -328.6733 c3495.0869 -330.1382 3489.5957 -329.6494 3485.3984 -332.3848 c3485.1592 -332.541 3484.9512 -332.7119 3484.7402 -332.8818 C3484.8691 -331.8594 3485 -330.8896 3485 -330.1416 C3485 -319.8442 L3485 -311.6235 3485.0498 -303.4121 3484.4717 -295.207 c3483.9375 -287.6362 3484.3633 -281.4229 3486.5215 -274.1362 cf3474.0645 -349.5142 m3476.3115 -351.4067 3479.7471 -351.6797 3482.1309 -350.3135 C3482.7021 -351.415 3483.21 -352.5557 3483.7119 -353.6689 c3485.5029 -357.6401 3487.5947 -361.3892 3489.7891 -365.1514 c3494.7871 -373.7188 3499.2656 -381.9028 3500.123 -391.9688 c3500.9756 -401.9839 3501.0703 -413.1763 3497.0449 -422.5356 c3494.2891 -428.9419 3490.3652 -439.6782 3482.9893 -441.9341 c3475.4453 -444.2417 3468.2939 -435.8291 3464.751 -430.4795 c3459.4229 -422.4341 3455.0234 -413.1167 3454.1299 -403.4092 c3453.1582 -392.8589 3456.625 -382.8662 3459.5029 -372.9023 c3462.0996 -363.9155 3468.5215 -356.8398 3474.0645 -349.5142 Cf3398.6328 -394.1768 m3392.4941 -397.126 3385.4434 -398.7524 3378.8789 -400.4531 c3371.1553 -402.4541 3362.9785 -404.5552 3355 -405.0669 c3342.7646 -405.8521 3330.1543 -398.749 3329.4141 -385.5703 c3328.6563 -372.061 3338.1338 -357.5337 3346.8516 -348.1431 c3356.458 -337.7949 3372.6689 -329.7783 3386.6748 -328.0732 c3402.8369 -326.1055 3418.2813 -328.7529 3434.2207 -331.2988 c3441.4229 -332.4487 3448.3164 -334.2549 3455.1582 -336.793 c3456.5605 -337.3135 3460.9199 -338.9243 3464.8262 -340.6387 C3464.6123 -340.8037 3464.4023 -340.98 3464.2012 -341.1816 c3454.7021 -350.7207 3445.9766 -361.043 3436.0391 -370.2085 c3430.7227 -375.1123 3424.3721 -378.5308 3418.2832 -382.3662 c3411.8145 -386.4409 3405.54 -390.8584 3398.6328 -394.1768 cf*U*u1 D2848.0547 -282.8071 m2844.8115 -276.27 2841.6807 -268.8018 2835.876 -264.1548 c2829.8418 -259.3242 2825.6123 -254.0938 2817.7813 -251.896 c2813.9297 -250.8149 2809.7627 -251.0352 2805.8457 -251.4771 c2801.5078 -251.9658 2797.1553 -252.021 2792.8516 -252.8301 c2785.0898 -254.2891 2781.0039 -260.3667 2776.5127 -266.1533 c2771.1289 -273.0903 2768.4717 -279.582 2767.3857 -288.2915 c2766.3301 -296.7529 2764.085 -305.2686 2763.8193 -313.793 c2763.6475 -319.3364 2763.8818 -324.8301 2764.1572 -330.3242 C2756.6406 -324.9072 2749.7012 -319.0103 2743.7949 -311.79 c2740.8545 -308.1948 2738.1738 -303.8555 2739.1875 -299.1006 c2740.3203 -293.7856 2743.0332 -288.9097 2745.6758 -284.2246 c2749.7988 -276.9131 2738.5684 -270.3628 2734.4512 -277.6631 c2730.9414 -283.8857 2727.7822 -290.3438 2726.2842 -297.3696 c2724.873 -303.9878 2727.2998 -310.4033 2730.8281 -315.9375 c2734.4121 -321.5615 2738.9736 -326.4727 2743.9785 -330.9224 C2733.6309 -326.1841 2723.9951 -319.1978 2712.4824 -318.2412 c2705.3408 -317.6479 2700.7734 -323.4487 2698.542 -329.4395 c2695.2207 -338.355 2699.252 -347.7559 2703.6152 -355.4497 c2712.1426 -370.4873 2725.8008 -379.7861 2742.334 -384.0303 c2749.832 -385.9551 2758.7256 -387.3882 2765.8848 -383.6313 c2772.2002 -380.3164 2775.8477 -374.2466 2777.1367 -367.3804 c2778.043 -362.5562 2777.9746 -356.3882 2776.5498 -350.7124 C2777.9473 -351.083 2779.3623 -351.3066 2780.7607 -351.7505 c2787.8301 -353.9927 2795.2285 -354.9878 2802.3047 -357.2324 c2805.3203 -358.188 2808.2715 -359.3574 2811.3008 -360.2715 c2815.1426 -361.4307 2819.626 -360.9941 2823.5449 -360.5996 c2835.1377 -359.4326 2848.292 -353.4336 2854.2744 -343.0903 c2860.7207 -331.9458 2858.5254 -316.646 2855.6162 -304.8018 c2853.7158 -297.0635 2851.6191 -289.9912 2848.0547 -282.8071 cf0 D2763.8604 -367.167 m2760.5615 -379.2861 2738.7578 -370.0586 2731.9453 -366.4258 c2726.5283 -363.5371 2721.9199 -359.04 2718.2695 -354.1509 c2714.3447 -348.8936 2709.4863 -341.4365 2710.5986 -334.585 c2710.7998 -333.3438 2711.2305 -332 2712.0342 -331 C2712.4824 -331 L2715.3965 -331 2718.8242 -332.936 2721.4219 -334.1064 c2728.3848 -337.2437 2735.0244 -341.123 2742.0801 -344.0547 c2748.3066 -346.6406 2754.6641 -348.1733 2761.3574 -348.6675 C2762.4795 -349.8999 2763.1992 -351.4727 2763.7383 -353.0356 c2765.2979 -357.5557 2765.1016 -362.6089 2763.8604 -367.167 cf2844.041 -334.0239 m2842.5068 -339.6069 2837.626 -342.7466 2832.5195 -344.7241 c2826.5469 -347.0381 2819.6309 -349.2065 2813.2744 -347.2886 c2805.9629 -345.0815 2798.8887 -342.7534 2791.3975 -341.0674 c2787.8623 -340.2715 2784.2852 -338.7778 2780.6934 -338.4131 c2779.582 -338.3003 2778.5371 -337.9141 2777.502 -337.4736 C2777.2305 -331.5298 2776.8193 -325.6157 2776.8193 -319.6279 c2776.8193 -311.7065 2778.252 -304.4526 2779.417 -296.6514 c2780.4043 -290.0386 2780.3457 -283.8091 2783.9355 -277.9575 c2787.0928 -272.813 2791.3262 -265.8691 2797.791 -265.104 c2803.79 -264.3936 2812.0479 -262.6763 2817.6074 -265.6338 c2820.3955 -267.1172 2822.5449 -269.2734 2824.5059 -271.7085 c2826.3799 -274.0352 2829.0967 -274.9282 2830.6621 -277.688 c2833.876 -283.3564 2837.1328 -289.2852 2839.5703 -295.3389 c2842.1514 -301.7461 2843.4727 -308.918 2844.627 -315.7124 c2845.6514 -321.7363 2845.6631 -328.1216 2844.041 -334.0239 cf*U*u1 D2518.9658 -64.0947 m2513.8633 -61.1465 2508.3027 -59.126 2502.918 -56.7744 c2495.4824 -53.5278 2487.8721 -50.7847 2479.9707 -48.917 c2449.1797 -41.6382 2417.7227 -50.1455 2388.167 -58.6108 c2358.7656 -67.0317 2330.9395 -78.2061 2304.1016 -92.8594 c2291.1074 -99.9541 2278.5293 -108.6929 2266.7656 -117.6592 c2264.0166 -119.7549 2261.2754 -121.8535 2258.5684 -123.9858 C2259.2256 -119.8267 2259.9951 -115.6665 2260.9033 -111.5771 c2262.2705 -105.4209 2264.6738 -99.5391 2265.9961 -93.3555 c2267.416 -86.7158 2268.6777 -80.1079 2269.5039 -73.353 c2271.0947 -60.3462 2273.5859 -47.7031 2272.7266 -34.5005 c2271.9697 -22.8921 2270.7441 -11.333 2270.3672 0.289551 C2257.3643 0.289551 L2257.709 -10.728 2258.7881 -21.6992 2259.5996 -32.6948 c2260.5762 -45.9146 2258.334 -58.4644 2256.7266 -71.4995 c2255.1719 -84.1113 2251.5791 -95.8848 2248.3672 -108.1157 c2247.6504 -110.8477 2247.3008 -113.6865 2246.8457 -116.4707 c2246.3027 -119.7998 2245.1914 -122.9409 2245.0977 -126.3286 c2244.9902 -130.1748 2243.5566 -133.8169 2242.8936 -137.5635 C2239.9248 -140.4839 2237.0879 -143.5493 2234.4424 -146.8296 c2227.0059 -156.0498 2220.4512 -165.9365 2213.4873 -175.5078 c2208.2324 -182.7295 2201.4521 -188.8115 2198.3506 -196.9629 C2193.8105 -194.5938 2188.791 -192.9453 2184.0459 -191.3438 c2177.5771 -189.1602 2171.6201 -187.0723 2164.7383 -186.4312 c2161.3672 -186.1172 2157.9609 -186.3237 2154.582 -186.0986 c2150.2373 -185.8086 2146.2148 -185.0986 2141.8955 -185.9863 c2132.1035 -187.998 2122.917 -194.3569 2115.8184 -201.7334 C2116.7744 -199.0996 2116.2373 -195.9473 2113.1582 -194.0728 c2106.5088 -190.0264 2101.7676 -183.7549 2097.2197 -177.5659 c2092.1826 -170.7114 2087.6201 -163.5146 2083.1621 -156.2749 c2073.834 -141.1245 2066.2305 -125.0317 2060.8193 -108.0542 c2058.0918 -99.4951 2056.1484 -90.6851 2053.3926 -82.1206 c2050.4883 -73.0942 2046.7725 -64.3584 2043.4512 -55.4829 c2037.2578 -38.9287 2034.2598 -22.8408 2034.2539 -5.18311 c2034.2529 -2.49609 2032.9141 -0.674805 2031.0986 0.289551 C2024.4053 0.289551 L2022.5908 -0.674805 2021.2529 -2.49609 2021.2539 -5.18311 c2021.2598 -23.3184 2024.125 -40.1675 2030.291 -57.2417 c2033.4951 -66.1143 2037.2129 -74.7881 2040.2451 -83.7241 c2043.5508 -93.4663 2045.7383 -103.5229 2048.8574 -113.3096 c2054.5908 -131.2969 2063.0195 -148.353 2072.8896 -164.3833 c2076.2139 -169.7822 2079.667 -175.5718 2083.46 -181.1821 C2082.4336 -180.4614 2081.4199 -179.729 2080.4453 -178.9585 c2074.6777 -174.396 2068.5723 -170.2529 2062.5879 -165.978 c2056.2764 -161.4702 2050.4551 -156.3906 2043.9746 -152.0854 c2031.4512 -143.7661 2017.9395 -137.2432 2004.585 -130.4292 c1991.084 -123.541 1979.6592 -113.4438 1966.1328 -106.6792 c1952.5635 -99.8926 1939.3857 -92.2637 1925.8047 -85.501 c1912.2813 -78.7666 1897.0103 -76.1938 1882.3877 -72.8291 c1868.2588 -69.5781 1851.9126 -72.7681 1838.1802 -76.5898 c1832.5459 -78.1577 1827.4346 -80.3384 1822.8755 -84.0225 c1817.9751 -87.9819 1813.5693 -94.6641 1810.8501 -100.2612 c1807.8281 -106.4819 1808.6143 -112.8647 1809.5776 -119.4907 c1810.6392 -126.792 1812.8755 -133.6724 1815.5439 -140.5371 c1820.8618 -154.2183 1829.1045 -166.0044 1838.5176 -177.1548 c1848.377 -188.834 1859.0723 -200.1177 1870.8115 -209.9229 c1876.4521 -214.6338 1882.4756 -218.6895 1888.5815 -222.7598 c1894.8887 -226.9648 1900.8145 -231.2119 1907.6006 -234.603 c1913.1602 -237.3813 1918.7236 -239.7822 1924.3623 -241.9048 C1922.2354 -241.9604 1920.1055 -242 1917.9688 -242 C1892.813 -242 L1885.542 -242 1878.3208 -241.9512 1871.1162 -242.9805 c1863.4116 -244.0811 1855.751 -245.3291 1847.9893 -245.9336 c1832.9961 -247.1016 1817.9907 -249.5869 1803.4756 -253.6367 c1796.8599 -255.4824 1790.7563 -258.4521 1784.5034 -261.2183 c1778.2861 -263.9678 1772.4834 -266.873 1767.1367 -271.1167 c1755.5049 -280.3491 1752.8208 -294.1499 1750.999 -308.0132 c1749.2402 -321.3999 1756.6855 -333.7134 1765.9375 -342.6875 c1775.7778 -352.2319 1788.6362 -357.1035 1801.2397 -361.7744 c1815.1914 -366.9453 1829.6143 -370.3936 1844.4897 -371.2949 c1862.9072 -372.4111 1881.252 -375.1685 1899.7285 -373.2588 c1909.1108 -372.2891 1918.728 -373.0176 1928.1699 -372.3223 c1937.4453 -371.6387 1946.6719 -370.1313 1955.9229 -369.1763 c1959.9902 -368.7563 1964.1035 -368.7368 1968.1885 -368.708 c1973.1045 -368.6729 1977.9102 -367.8999 1982.7637 -367.1333 c1991.9482 -365.6831 2001.0498 -363.7544 2010.2363 -362.312 c2017.6592 -361.1465 2024.8477 -359.4541 2032.0098 -357.3657 C2026.3701 -361.6606 2020.7959 -366.04 2015.2695 -370.4297 c2003.5732 -379.7197 1991.623 -389.2451 1980.8311 -399.5801 c1975.6963 -404.4976 1971.3408 -410.3906 1967.2666 -416.1919 c1962.6006 -422.8354 1958.1152 -429.7017 1953.6992 -436.5229 c1945.3496 -449.4189 1939.2803 -462.8452 1933.6895 -477.1094 c1928.2188 -491.0659 1924.7656 -505.8506 1921.6914 -520.4912 c1918.5488 -535.4546 1915.8174 -551.6143 1916.9961 -566.9194 c1918.9854 -592.7539 1938.6338 -619.042 1966.9541 -614.7842 c1973.293 -613.8311 1979.5313 -611.5742 1985.582 -609.5059 c1992.0762 -607.2861 1998.0713 -603.9375 2003.6504 -599.9805 c2015.6523 -591.4673 2027.792 -582.4644 2038.6602 -572.5396 c2044.1865 -567.4927 2049.5938 -562.3198 2055.2236 -557.3853 c2061.2314 -552.1191 2066.123 -546.627 2070.8379 -540.1445 c2075.0742 -534.3188 2078.6914 -528.0371 2082.749 -522.0801 c2087.2852 -515.4204 2091.1143 -508.5239 2094.6797 -501.3105 c2101.2256 -488.0635 2108.6309 -475.2671 2114.8369 -461.8657 c2117.8652 -455.3271 2120.3184 -448.5444 2123.2822 -441.9932 c2126.4395 -435.0156 2131.0674 -428.8701 2134.2598 -421.917 c2138.3135 -413.0889 2141.4482 -403.8784 2145.4307 -395.022 c2148.9404 -387.2168 2152.1582 -379.3174 2154.459 -371.0977 C2157.2539 -385.1016 2159.2432 -399.2656 2162.3926 -413.2041 c2165.708 -427.8774 2170.4063 -442.2432 2174.0078 -456.8589 c2177.7266 -471.9482 2182.5371 -487.1382 2187.9805 -501.6899 c2190.5684 -508.6094 2193.5811 -515.3794 2196.8057 -522.0225 c2199.9121 -528.4219 2202.2148 -534.9873 2206.5166 -540.7197 c2215.1895 -552.2754 2223.5371 -564.0967 2237.7051 -568.9927 c2249.5469 -573.0854 2266.0156 -569.9932 2275.6143 -562.0186 c2280.4521 -557.999 2281.9785 -551.3809 2283.4834 -545.6138 c2285.4395 -538.1221 2286.8779 -530.4976 2287.96 -522.834 c2289.415 -512.5278 2289.2676 -502.3237 2289.2676 -491.9385 c2289.2676 -481.376 2286.0234 -471.2056 2284.9453 -460.75 c2283.8408 -450.0361 2282.4453 -439.2827 2280.9766 -428.6128 c2280.3174 -423.8267 2279.0488 -419.1074 2278.459 -414.3325 c2277.8721 -409.5928 2277.6523 -404.7827 2276.0684 -400.2393 c2272.7676 -390.7725 2268.6064 -381.5786 2264.6387 -372.3657 c2260.7148 -363.2563 2255.5391 -355.4565 2249.958 -347.3208 c2239.8945 -332.6504 2240.3027 -312.0278 2221.3906 -304.9316 c2220.3115 -304.5269 2219.3213 -304.4224 2218.4287 -304.5371 C2219.457 -303.6743 2220.4385 -302.7764 2221.3555 -301.8369 C2227.0215 -307.8955 2234.0957 -312.7173 2240.8711 -318.0566 c2246.3008 -322.3354 2251.6289 -326.6885 2257.5947 -330.2095 c2263.9111 -333.9385 2270.6846 -336.8584 2277.1836 -340.2451 c2290.4512 -347.1582 2303.1963 -356.3462 2317.3857 -361.3086 c2332.3965 -366.5581 2347.6328 -369.9673 2363.1738 -373.1489 c2370.3359 -374.6152 2377.4082 -376.2339 2384.6836 -377.0635 c2392.5879 -377.9648 2400.8203 -377.3472 2408.7676 -377.3472 c2415.9004 -377.3472 2423.0322 -377.4048 2430.1572 -377.0229 c2438.0508 -376.6001 2445.7744 -374.999 2453.5352 -373.6387 c2467.5869 -371.1763 2479.9766 -367.3911 2489.5625 -356.3408 c2499.3887 -345.0137 2498.5557 -332.4941 2494.8369 -318.8301 c2493.6201 -314.3594 2492.0684 -310.0303 2490.0225 -305.8701 c2487.5762 -300.8984 2483.4951 -297.1333 2479.8398 -293.083 c2475.9209 -288.7397 2472.2969 -284.0532 2467.584 -280.5176 c2462.8945 -277.0005 2458.0908 -273.5991 2453.5049 -269.9507 c2444.9629 -263.1553 2437.0137 -255.9331 2426.8438 -251.5918 c2416.3086 -247.0947 2404.3594 -246.1577 2393.1475 -244.2915 c2374.9688 -241.2656 2356.8535 -239.9858 2338.5938 -239.3516 C2343.3477 -237.7656 2348.0703 -236.0825 2352.8555 -234.5967 c2360.4512 -232.2378 2368.0293 -229.9971 2375.4404 -227.0835 c2389.7891 -221.4424 2404.3955 -216.0293 2418.0957 -208.9087 c2431.5781 -201.9014 2444.8711 -193.7461 2457.6768 -185.5688 c2470.1504 -177.6045 2479.8799 -166.7432 2491.375 -157.6011 c2502.5479 -148.7158 2513.418 -138.6641 2522.9023 -127.9995 c2527.3496 -122.998 2531.377 -117.5391 2535.3301 -112.1431 c2537.2598 -109.5098 2538.8848 -106.5952 2540.0234 -103.5317 c2541.418 -99.7773 2540.6563 -95.6143 2540.0508 -91.7373 c2538.0508 -78.9292 2529.9277 -70.4277 2518.9658 -64.0947 cf0 D2112.2266 -205.7725 m2111.9063 -206.1616 2111.5811 -206.5503 2111.2725 -206.9409 C2111.2354 -206.8867 2111.2061 -206.8325 2111.167 -206.7778 c2111.0303 -206.5874 2110.8838 -206.4038 2110.7441 -206.2148 C2111.2617 -206.1338 2111.7598 -205.9873 2112.2266 -205.7725 Cf2012.1191 -349.022 m1996.9365 -351 1981.7969 -355.6108 1966.4561 -355.7202 c1951.0732 -355.8296 1935.918 -359.0845 1920.562 -359.769 c1913.0142 -360.1055 1905.4224 -359.6709 1897.9131 -360.4468 c1889.9131 -361.2739 1881.6826 -361.0054 1873.665 -360.606 c1843.7764 -359.1162 1813.6875 -355.9331 1786.7886 -341.7075 c1775.6206 -335.8013 1765.3633 -325.9766 1763.6802 -312.9287 c1763.2607 -309.6777 1764.3125 -305.9155 1764.8545 -302.7319 c1765.4219 -299.3994 1765.9492 -296.1709 1766.9907 -292.9443 c1769.0273 -286.6343 1774.4863 -281.252 1780.0034 -277.8657 c1790.0605 -271.6934 1801.9932 -267.186 1813.4531 -264.583 c1820.0269 -263.0898 1826.7026 -261.6997 1833.3296 -260.4585 c1840.3145 -259.1504 1847.6973 -259.1514 1854.7803 -258.4814 c1861.3984 -257.8555 1867.9927 -256.4561 1874.5718 -255.5161 c1881.7031 -254.4971 1889.3696 -255 1896.5732 -255 C1917.9688 -255 L1925.7842 -255 1933.5107 -254.3994 1941.3086 -254.2505 c1944.9365 -254.1812 1946.9922 -251.7217 1947.4785 -248.9707 C1948.3213 -249.1758 1949.1553 -249.3916 1950.0059 -249.5894 c1956.9727 -251.207 1963.7305 -253.6084 1970.7012 -255.2266 c1978.8096 -257.1099 1987.0088 -257.9648 1995.2197 -259.2319 c2010.998 -261.666 2026.6816 -264.8589 2042.3721 -267.8008 c2057.4531 -270.6284 2072.8516 -274.6211 2088.2139 -275.314 C2089.9951 -275.3418 L2098.3828 -275.4736 2098.3701 -262.4731 2089.9951 -262.3418 c2074.6357 -262.1006 2059 -257.7349 2043.9414 -254.9116 c2028.251 -251.9697 2012.5674 -248.8394 1996.79 -246.4053 c1989.2061 -245.2354 1981.6387 -244.479 1974.1563 -242.6914 c1966.6055 -240.8867 1959.2441 -238.396 1951.6807 -236.6406 c1944.6143 -234.9995 1937.709 -233.0996 1930.8135 -230.8335 c1923.4551 -228.4155 1916.4248 -224.6226 1909.5117 -221.1543 c1903.3643 -218.0703 1897.7524 -213.2744 1892.0308 -209.46 c1885.3911 -205.0332 1879.2188 -200.271 1873.311 -194.8975 c1861.917 -184.5352 1851.4536 -172.854 1841.8516 -160.8301 c1832.8027 -149.498 1826.7261 -135.8423 1823.0957 -121.8853 c1821.5757 -116.0425 1820.5913 -109.2769 1823.605 -103.895 c1826.3242 -99.0391 1830.4697 -93.2759 1835.7695 -91.0752 c1846.6943 -86.5396 1859.937 -84.6216 1871.7002 -84.6001 c1877.8501 -84.5889 1883.835 -86.5542 1889.7676 -87.9556 c1896.2979 -89.498 1902.9531 -90.7959 1909.3789 -92.7231 c1921.3037 -96.2998 1932.0938 -103.7822 1943.1689 -109.3208 c1954.5918 -115.0332 1965.9102 -120.9033 1976.375 -128.2529 c1997.1113 -142.8164 2020.9824 -151.8213 2041.8193 -166.3042 c2046.7324 -169.7192 2051.1611 -173.7285 2056.0264 -177.2036 c2061.5947 -181.1812 2067.2988 -185.0229 2072.668 -189.2695 c2077.5459 -193.1289 2083.2578 -196.1714 2087.8574 -200.3242 c2092.0469 -204.1069 2096.6445 -208.748 2099.9424 -213.3394 c2101.4502 -215.439 2103.583 -216.2554 2105.6563 -216.1797 C2104.5059 -218.6875 2103.54 -221.2813 2102.7451 -223.8911 c2100.5283 -231.1694 2098.0137 -238.0923 2096.7012 -245.6377 c2093.127 -266.2026 2100.041 -288.9277 2114.3623 -304.3379 c2115.1953 -305.2349 2116.043 -306.126 2116.8984 -307.0142 C2114.5889 -307.9478 2112.3457 -309.1089 2110.1182 -310.4536 c2103.6563 -314.3545 2097.0391 -317.1943 2090.1719 -320.3125 c2083.8281 -323.1929 2077.8887 -327.5654 2071.7324 -330.8999 c2067.5273 -333.1772 2063.4297 -335.5664 2059.3965 -338.0747 C2057.6016 -336.2588 2054.8975 -335.5918 2052.1367 -337.5723 c2047.1387 -341.1563 2041.1924 -340.8052 2035.584 -342.6592 c2028.0469 -345.1509 2020.0186 -347.9932 2012.1191 -349.022 cf2145.5352 -349.6689 m2143.0371 -365.2461 2138.4434 -379.1538 2131.9268 -393.4995 c2128.9297 -400.0952 2126.6689 -407.0303 2123.7822 -413.6792 c2120.7129 -420.7505 2116.3037 -427.0093 2112.8125 -433.8647 c2109.5645 -440.2427 2107.2949 -447.1387 2104.3574 -453.6704 c2101.1895 -460.7148 2097.8008 -467.6802 2093.751 -474.2573 c2085.8535 -487.0806 2080.9082 -501.3472 2072.5596 -513.9771 c2068.5645 -520.0205 2064.707 -526.1646 2060.627 -532.1445 c2056.0273 -538.8838 2050.7314 -544.0728 2044.6445 -549.4082 c2032.9961 -559.6182 2022.0449 -570.1104 2009.5264 -579.2954 c2004.0293 -583.3286 1998.8105 -587.7534 1993.0928 -591.4731 c1987.1367 -595.3481 1980.8643 -597.0137 1974.3057 -599.4282 c1961.6846 -604.0752 1950.1943 -602.9014 1940.9131 -592.7275 c1931.3672 -582.2627 1928.8896 -568.248 1929.9404 -554.5444 c1932.2695 -524.1709 1939.8223 -493.1777 1952.377 -465.3921 c1958.8027 -451.1729 1968.2031 -438.8887 1976.4746 -425.7788 c1984.5195 -413.0278 1995.4473 -403.9512 2006.7686 -394.2949 c2030.0879 -374.4077 2054.3984 -355.147 2081.3623 -340.458 c2084.9775 -338.4883 2088.5449 -336.4395 2092.0498 -334.2783 c2096.3213 -331.644 2100.7773 -329.8198 2105.377 -327.8262 c2112.4023 -324.7803 2119.3027 -318.0439 2127.166 -317.6997 c2127.543 -317.6831 2127.8975 -317.6328 2128.2412 -317.5669 C2130.9004 -319.2534 2133.7813 -320.5542 2136.6367 -322.0532 c2141.127 -324.4106 2146.0313 -325.9307 2151.041 -326.6362 C2148.3604 -334.2314 2146.8105 -341.7202 2145.5352 -349.6689 cf2227.6143 -328.8535 m2230.2559 -335.7451 2232.7178 -342.7207 2236.0566 -349.3179 c2239.1162 -355.3643 2243.6514 -360.6118 2247.2266 -366.3584 c2251.2109 -372.7646 2254.1699 -380.1582 2256.6172 -387.2705 c2258.877 -393.8408 2262.5713 -399.6577 2264.3828 -406.4756 c2265.1973 -409.5356 2265.2715 -412.8169 2265.6582 -415.9482 c2266.1719 -420.0981 2267.2324 -424.1572 2267.8994 -428.2876 c2270.4268 -443.9292 2271.2285 -459.8169 2274.166 -475.4019 c2276.9756 -490.3105 2277.3037 -506.0679 2275.1777 -521.1265 c2274.1768 -528.21 2272.6924 -535.2231 2270.9482 -542.1577 c2270.2207 -545.0488 2269.6152 -548.0898 2268.1865 -550.7222 c2266.4434 -553.9316 2261.8809 -555.0972 2258.6367 -556.0669 c2252.6475 -557.8579 2247.2021 -558.2358 2241.1602 -556.457 c2234.001 -554.3491 2229.2607 -548.5591 2224.667 -543.0557 c2220.2373 -537.748 2215.6836 -532.2432 2212.7432 -525.9546 c2209.5508 -519.127 2206.377 -512.2407 2203.3652 -505.3296 c2197.1445 -491.0601 2192.6846 -475.6299 2188.4629 -460.6646 c2186.3066 -453.0239 2184.8008 -445.2285 2182.7012 -437.5767 c2180.6387 -430.0659 2178.1699 -422.6768 2176.1992 -415.1387 c2172.3066 -400.2471 2171.1777 -384.8398 2167.5918 -369.9194 c2165.75 -362.2534 2164.2559 -354.5425 2163.9453 -346.6499 c2163.6807 -339.9312 2164.2012 -333.3945 2164.627 -326.7637 C2164.9668 -325.7046 2165.291 -324.6436 2165.5938 -323.5801 C2168.0986 -323.501 2170.6016 -323.3936 2173.1035 -323.2065 c2181.0938 -322.6094 2188.251 -320.4526 2195.5928 -317.3354 c2201.4004 -314.8701 2208.3125 -311.7397 2214.3262 -307.6313 C2212.6787 -310.9058 2213.4551 -315.7871 2217.9336 -317.4678 c2222.9355 -319.3438 2225.7881 -324.0879 2227.6143 -328.8535 cf2220.7695 -274.3613 m2220.375 -276.3159 2219.8457 -278.1826 2219.1133 -279.9814 C2214.9854 -279.7451 2210.7344 -282.915 2212.5313 -287.8584 c2212.8838 -288.8281 2213.2764 -289.7588 2213.6934 -290.668 C2213.5137 -290.9043 2213.3359 -291.1411 2213.1318 -291.3667 c2208.4385 -296.5698 2201.7979 -299.8843 2195.6348 -302.9941 c2189.0684 -306.3076 2182.1582 -309.2959 2174.7734 -310.0591 c2172.4111 -310.3032 2170.04 -310.4541 2167.666 -310.5566 C2167.668 -309.062 2167.5859 -307.5503 2167.3799 -306.0127 c2166.9082 -302.502 2164.7803 -299.5127 2160.8799 -299.5127 c2157.6943 -299.5127 2153.9063 -302.6162 2154.3799 -306.1377 c2154.5977 -307.7578 2154.668 -309 2154.6299 -311 C2152.2354 -311 L2150.1709 -311 2148.6182 -311.6665 2147.5703 -312.8545 C2145.9941 -312.2661 2144.4717 -311.4951 2143.1982 -310.8906 c2140.4238 -309.5723 2137.4854 -308.208 2134.9004 -306.5459 c2132.1484 -304.7764 2130.3232 -301.6948 2128.0176 -299.4443 c2118.2529 -289.9102 2111.832 -277.8887 2108.9512 -264.4819 c2106.0723 -251.0811 2112.043 -235.415 2116.7451 -223.0732 c2121.1396 -211.5391 2132.3447 -202.8994 2143.7178 -198.979 c2147.1172 -197.8076 2151.0918 -198.7813 2154.582 -199.0996 c2157.9551 -199.4072 2161.3574 -199.2427 2164.7383 -199.4316 c2171.8154 -199.8276 2178.6465 -203.1426 2185.2266 -205.4844 c2198.3848 -210.168 2208.4766 -220.6782 2215.6582 -232.3994 c2219.4229 -238.5439 2221.7344 -244.6372 2222.0039 -251.8779 c2222.2773 -259.2378 2222.2256 -267.1309 2220.7695 -274.3613 cf2524.1055 -105.5815 m2515.9736 -117.3574 2505.8711 -127.4761 2495.2441 -136.9834 c2484.3633 -146.7188 2473.5 -156.5908 2462.4199 -166.0889 c2451.1152 -175.7798 2437.3477 -182.502 2424.666 -190.1631 c2411.0918 -198.3633 2396.8838 -204.8252 2382.0996 -210.5288 c2367.8105 -216.041 2353.3691 -220.5894 2338.8809 -225.5293 c2323.8447 -230.6558 2308.7422 -234.0757 2293.0127 -236.2485 c2288.3945 -236.8862 2283.7734 -237.4961 2279.1611 -238.1602 C2278.8076 -238.1577 2278.4531 -238.1504 2278.0996 -238.1479 c2271.7148 -238.1055 2265.3662 -239.2314 2259.0352 -240.0229 c2256.2861 -240.3662 2253.2979 -240.4214 2250.6016 -241.0718 c2250.3496 -241.1328 2250.001 -241.2563 2249.6152 -241.4028 C2245.9932 -241.248 2241.8613 -241.5498 2239.2715 -244.3628 c2236.2676 -247.6226 2237.0273 -254.3779 2242.1387 -255.2266 c2245.3203 -255.7549 2248.498 -255.2109 2251.6699 -254.5103 C2251.7754 -254.5166 2251.8809 -254.5234 2251.9863 -254.5298 c2255.0527 -254.7153 2258.1133 -254.4004 2261.1563 -254.0542 c2267.166 -253.3706 2273.123 -252.2539 2279.0957 -251.2593 C2280.7402 -251.21 2282.3936 -251.1821 2284.0645 -251.2007 c2300.6348 -251.3843 2317.1973 -251.9775 2333.7705 -252.001 c2341.668 -252.0122 2349.5488 -252.418 2357.4219 -253.0049 c2365.8027 -253.6299 2374.7598 -253.8193 2382.9844 -255.5845 c2389.8301 -257.0542 2396.7988 -257.9199 2403.6816 -259.1914 c2410.9316 -260.5303 2418.1201 -261.394 2424.7148 -264.9453 c2436.7705 -271.4355 2447.124 -281.3188 2458.0586 -289.52 c2463.8594 -293.8706 2468.2109 -299.7051 2473.123 -304.9736 c2477.9805 -310.1836 2480.3799 -315.4614 2482.3018 -322.2861 c2484.0186 -328.3828 2485.7129 -334.3936 2484.082 -340.6953 c2482.5996 -346.4253 2476.8574 -351.5728 2472.0684 -354.6689 c2466.2754 -358.4136 2458.6006 -359.3726 2451.9658 -360.7412 c2444.1758 -362.3481 2436.3066 -363.6934 2428.3564 -364.1196 c2419.4141 -364.5986 2410.4141 -364.3472 2401.4619 -364.3472 c2391.3018 -364.3472 2381.9189 -363.8989 2371.957 -361.7588 c2352.5723 -357.5942 2331.9121 -354.7114 2314.0254 -345.6792 c2305.7861 -341.519 2297.707 -336.8872 2289.6035 -332.4629 c2281.6777 -328.1362 2273.5645 -324.1587 2265.6367 -319.8237 c2257.3662 -315.3013 2250.2031 -308.9766 2242.834 -303.1597 c2237.7305 -299.1323 2232.1504 -295.4951 2228.3281 -290.3726 C2230.4961 -285.0903 2232.9219 -280.3926 2233.9268 -274.46 c2235.1768 -267.0815 2235.085 -259.3408 2235.0039 -251.8779 c2234.8457 -237.4043 2227.2988 -224.4927 2218.125 -213.7588 c2215.4951 -210.6821 2212.6152 -207.7866 2209.5645 -205.0938 C2209.6445 -204.7471 2209.708 -204.3887 2209.7383 -204.0073 c2210.2402 -197.6504 2216.7422 -191.9907 2220.6045 -187.4248 c2225.4639 -181.6812 2229.5938 -175.2524 2233.9395 -169.1206 c2242.6699 -156.8032 2251.9346 -145.937 2263.6777 -136.3833 c2286.8613 -117.5225 2312.6484 -101.3984 2339.9658 -89.2563 c2367.6211 -76.9629 2397.6895 -68.2153 2427.2881 -62.0596 c2457.0664 -55.8662 2487.2646 -60.7959 2513.6348 -76.0303 c2518.3154 -78.7349 2522.4805 -82.2056 2525.2803 -86.8721 c2526.7617 -89.3418 2527.1426 -92.3706 2527.5049 -95.1826 c2528.0713 -99.5786 2526.5527 -102.0371 2524.1055 -105.5815 cf*U2179.2354 0.289551 m2178.0957 -3.63428 2177.3906 -7.65625 2176.5195 -11.7754 c2174.9824 -19.0371 2170.8379 -25.8008 2168.4434 -32.8467 c2166.1016 -39.7344 2163.3906 -46.5547 2161.3086 -53.5249 c2159.1377 -60.79 2158.7705 -68.6323 2158.2383 -76.1499 c2158.2021 -76.6616 2158.1465 -77.1719 2158.1064 -77.6831 C2157.0439 -72.6187 2156.1738 -67.5122 2154.8398 -62.5 c2152.9463 -55.3853 2150.1934 -48.4058 2146.8496 -41.854 c2142.6582 -33.6416 2138.7207 -25.4287 2134.9727 -16.9976 c2133.1826 -12.9692 2131.3564 -8.95508 2129.6191 -4.90381 c2128.8545 -3.12012 2127.9375 -1.42676 2127.0801 0.289551 C2112.9355 0.289551 L2114.6553 -4.85449 2117.5684 -9.65234 2119.7588 -14.5815 c2123.1934 -22.3125 2126.5596 -30.0791 2130.0869 -37.7686 c2133.1973 -44.5474 2136.9766 -50.8301 2139.6807 -57.8062 c2142.3799 -64.7686 2143.917 -72.144 2145.3164 -79.4561 c2147.5771 -91.2769 2151.3398 -102.6597 2153.6406 -114.4233 C2153.3027 -117.4185 2152.9941 -120.417 2152.7734 -123.4253 c2151.7949 -136.7559 2152.1953 -150.4751 2153.9746 -163.7148 c2154.5068 -167.6782 2155.585 -171.4355 2158.3115 -174.4678 c2162.7578 -179.4121 2170.123 -176.623 2171.8018 -170.8877 c2172.624 -168.0786 2171.7021 -164.8008 2171.7021 -161.9331 c2171.7021 -158.3066 2171.501 -154.8604 2171.0537 -151.2627 c2170.0723 -143.3628 2169.1963 -135.4678 2168.4766 -127.5405 c2168.0859 -123.2339 2167.4883 -119.0083 2166.7539 -114.8257 C2167.7188 -104.9092 2169.0918 -95.0439 2170.3691 -85.0889 c2171.2715 -78.0513 2171.3438 -70.9292 2172.3691 -63.9072 c2173.4951 -56.1851 2176.6328 -49.0234 2179.2363 -41.7256 c2181.8652 -34.3569 2184.7246 -27.2803 2187.667 -20.04 c2190.3242 -13.501 2189.9688 -6.14453 2192.9355 0.289551 C2179.2354 0.289551 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF