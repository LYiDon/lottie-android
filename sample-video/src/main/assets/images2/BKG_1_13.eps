%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 1.eps)%%CreationDate: 04.10.18 2:07%%Canvassize: 16383%%BoundingBox: -1 -2160 3787 -36%%HiResBoundingBox: -0.372559 -2159.9277 3786.1816 -36.5513%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -855.458 291.3179 0.3333 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5396 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD34FF55A9FD19FFA97F7FFD22FF7F7FFD3AFFA9A97F552BFD12FF%A97F7F557FFFFFFF7F557F2B557FA9A9FD1CFF7F557FFD39FFA955557F2B%55A9FD11FF557FA9FFFD057FA97FA97FA97F7F7FA9FD19FFA97FFF7FFD3A%FF7FA9A9FF55A9FD11FFA92BA9FFFFA9A9FD08FFA9FF7F557FFD17FF54A9%7F5554FD04FFA955FD49FF8555FFA9A97F7F7FA9A9A9557FA9A97FFFFF7F%55FD17FF7F557FA9A9A97F7FFFFF55A97FFD48FFFD057FA9FFA97FA95555%55FD067FFD17FF7F7FFD06FF7F7F55A9FF7FFD51FFA9557F7FFFFFA9A9FD%19FF7FFD08FFA97FFFA955FD52FFA97FA9FD1CFF7F7EFD0AFFA9A9A955FD%70FF55FD0BFF7FFFFFA95BFD10FF7F7F55A9FD5AFFA97FFD0BFF7F55A9A9%55FD0FFFA97FA9A97FA9FD59FFA97FFFFFFF7FA9FD06FFA97F7F7FA9FD0F%FFA97FFFA97F7FFD59FFA97FA9FF7F7F557FA9FD04FFA97FFD13FF7F7FA9%7FFD5BFF7F557FFF7FA97FA9FD04FF7FFD14FFA97F7FFD5CFFA955A955FF%FFA97FFFFFFFA97FFD74FFA97FA9A9FFA9A9FFA9A955A9FD75FFA955FFFF%A97FA903552BA954A9FD74FFA955FFA9557F7F7FA97F7FA9FD75FFA9557F%A9FFA955557FA9FD7CFF557FFD7FFFA9FDFCFFFDFCFFFDFCFFFDFCFFFDFC%FFFDA1FF7EFD72FFA9A9FD0AFF7F7FA9FD71FF55A9FD09FFA97F7FA9FD70%FFA955FD0BFFA9A9FD71FFA955FD7EFF547FFD7EFF557FFD7EFF2B7FFD7E%FF7F7FFD16FF7FFD67FF557FFD15FFA9557FFD66FF557FFD08FF7FA9A9FD%0BFF55A9FD66FF557FFD07FF7F7F7FA955A9FD71FF7F55FD06FF54557FA9%A9FF55A9FD70FF7E55A9FD05FF7F7FA97F55A9A97FFD70FFA955A9FD04FF%7FA9FF7F5555A97F7F7FA9FD6EFFA9557FFD04FF7FFF7FA97F7FA97F7FA9%55FD6FFF557FFD04FF7FFF7FA9FFFFFFA9FFFF7FA9FD6EFF7F2AFD04FFA9%7F7FFD05FF7F557FFD6FFFA9557FFFFFFFA955FF7F7FA9FFA97F7F7FFD04%FFA97FFD6AFF557FFFFFFFA97FFD0455FFFF7FFF7FA9FFFFFFA955FD6AFF%A931FD04FFA9FFA9A97E7FFFA97FA97FFFFFFF7F55FD6AFFA9557EFD08FF%7FFF85A9A9A9FFFFFF7F55FD67FFA9FFFFFF557FFD09FF557FA9A97FFFFF%FF7F55FD63FFA9A9FFA95555FFFF7F55FD09FFA955FF7F7FFFFFFFA955A9%FD62FF557FFFFF557FFFFF7F7FA9FD08FFA97FFF7F54A9FFFF7F7F7FFD62%FF7F55FFFFA9A9FFFF7F55A9FD08FFA97FFF7FFF55A9FFA97F7FFD0AFFA9%FD0BFFA9FD4BFF7F55A9FD05FF7F85A9FD08FFA9A9A97FFFFF55FFA97F7F%A9FD08FFA97FFD0AFF2B7FFD4BFFA955A9FD05FF7F7F7FFD08FFA97FA955%FFFFFF55FF7FA97FFD05FFA9FFFFA97FFD09FF7F7FA9FD4BFF7F7FA9FD05%FF7FA97FFD08FF7FA97F55A9FFFFA97FA97F7FA9FD04FF7FA9FF55A9FD08%FF7EA97FA9FD4BFF7F54A9FD04FFA97F7F7FFD08FFA9A9A97F7FFFFFFF7F%55A97FFD04FFA97FFFA97FFD08FFA97FA97FFD4CFF7FA9A9FD04FFA97FA9%FD047FA9A9FFFFFF7FA97FFF7FA9FFFFA92BA97FA9FFFFFF55FFFF7FA9FD%08FFA97FA97FFD43FF55A9FD06FFA97F7FA9FD04FF7FA97FA9FFA9A97F7F%7FA9FFA9A9A97FFF55FFFFFF7F7F7FFFFFFF55A9FFA97FFD09FFA9A97FFD%44FF7F2BA9FD05FFA97F7FA9FFFFFFA97FFF7FA9FD05FFA9557F7FA9A97F%FFA955FFFFFF2B7FFFA955A9FFFF55FD0AFFA9557FFD18FF7EFD2BFFA955%557FA9FFFFFF5AA97FFD04FF7F7EA955FD05FFA955FFFFFF7FA955FFFF7F%A9FFFFFF557F7FFFFFFF7FA9FD0AFFA97F7FFD0BFFA97F7FA955A9FD06FF%A955FD23FFA97FA9FD06FF7F7FA97F7FA9A97FA9A9FD04FF55FF7FFFFF7F%FFFFFFA97F7FA9A9FF7FFFFFFFA955FD04FFA9FFFFFF7F7FFD0BFFA955A9%FD08FFA97F7F55A97F55FF557F7FA9FFFFFFA92BA9FFA97FA97F7F7FA9A9%FD17FF7F7F7FA9A9FD07FF7F7F7FA97F557FA9A9FFFFFF7F7FA97FFFFF7F%FFA955FFFFA9FD097FFD07FFA955FD06FFA9FD05FFA97FA9FD08FF557FFF%55A9A9A9FF7FFFFF55FFFFFFA97F7FFF7FFD05A97F7F55A9FD08FFA9FD08%FFA9A9A97F7FFD0CFFA97F7FA955FF55FD04FF7FA97FA9FFFF7FA97E7F55%7FFD04FFA9FFA9FD09FFA955A9FD05FFA95555A9FFFFFFA954A9FD06FF7E%7F7F7F7EAF7FA9A97FA9FFA97FFD04FF557F7FFD09FF55FD047FA9A97F55%7F54A9FD04FFA95554A97F55A9FD0FFFA97FA9557EFFFFA954FF55FD04FF%557FFFFF7F7F7FA9FD0DFF7FA9FD07FF7FA955FFFFFFA97F7FFD06FFA97F%FFFFA955FFA9857FFFA97FA9FD04FF7F7F7FFD09FFA955A9A9A97F7FA9FD%08FF7F7FFFFFFF7FFD11FFFD047FFFFF7FA9A97FFD05FFA9FD04FFA97F7F%557F7FA97F7F55A9FD04FF7FFD09FF55A955FFFFFF7F7FA9FD06FF7F7FA9%A9FF557F7F7F557FA9FD05FF7F7F7FA9FD08FF55FD05FFFD0A7F55FD15FF%7FA9557F7FFFFF7FFF7FA9FD0EFFFD05A9FF55A9FFFFFFA97FFD08FFA9A9%7FA9FFFFA97F7FFD07FFA9FD077FFD08FFFD04A9FD0CFFA955A9A9FFFFFF%A97FFFFFA97FFD15FF7F7F857F7FA9FF7FFF7FFD16FF557FA9FF55A9FD08%FFFD04A9FFFFA9A97EFD17FF7EFF7FA9FD0BFFA954FD0BFFA9FD15FF7FA9%7FA955FFA97FFF7FA9FFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 2 79 255 79 0 50 Lb(Layer 3) Ln0 Au0 O0.841245 0.759243 0 0 0.176471 0.121569 1 Xa0 J 0 j 1 w 10 M []0 d0 XR752.2041 -1953.7813 m748.7119 -1959.3545 744.6362 -1964.2979 740.9717 -1969.708 c739.248 -1972.252 737.3398 -1974.5186 735.083 -1976.6055 c733.894 -1977.7051 732.4229 -1978.2871 731.6221 -1979.7969 c730.5405 -1981.8359 729.3535 -1983.7607 728.0439 -1985.6621 c724.3081 -1991.0869 719.8662 -1995.8789 715.5718 -2000.8418 c710.5376 -2006.6592 705.9028 -2012.7939 700.6172 -2018.3955 c690.1738 -2029.4619 678.0283 -2038.8047 667.6294 -2049.9238 c663.4766 -2054.3643 661.3081 -2059.3662 661.0483 -2065.4336 c660.7363 -2072.7285 660.8418 -2079.6855 663.2661 -2086.6191 c665.5996 -2093.293 667.9951 -2100.0146 670.4482 -2106.6191 c672.9321 -2113.3076 671.9321 -2120.916 672.2603 -2127.8994 c672.4917 -2132.8369 674.0303 -2141.4229 670.6294 -2145.5625 c666.2837 -2150.8516 660.2988 -2155.1621 653.6606 -2156.7754 c646.353 -2158.5518 638.061 -2158.8643 630.5625 -2159.6006 c629.2358 -2159.7305 627.9082 -2159.835 626.5801 -2159.9277 C674.3857 -2159.9277 L679.418 -2155.877 683.2129 -2151.3711 684.6416 -2144.9277 c686.0752 -2138.4609 685.3789 -2131.7988 685.1519 -2125.2568 c684.9106 -2118.3223 685.0903 -2111.5596 683.4609 -2104.752 c681.6973 -2097.3857 678.4541 -2090.252 675.8018 -2083.1631 c673.6812 -2077.4951 673.249 -2070.2793 674.0728 -2064.2363 c674.8765 -2058.3398 682.8662 -2052.9766 686.8511 -2049.2148 c697.9927 -2038.6973 709.3506 -2028.75 719.0957 -2016.8691 c723.4502 -2011.5596 728.6919 -2006.6289 732.584 -2001.0068 c734.3594 -1998.4424 736.4087 -1996.0527 738.292 -1993.5664 c740.5771 -1990.5508 741.5757 -1988.0127 744.2754 -1985.7979 c749.0381 -1981.8896 752.4219 -1975.9893 756.209 -1971.1914 c760.7344 -1965.459 764.2153 -1958.9756 768.5591 -1953.0977 c777.7144 -1940.71 784.7695 -1926.7695 793.3716 -1913.959 c801.7886 -1901.4229 809.7764 -1888.8057 816.5923 -1875.3125 c819.8848 -1868.7959 823.5542 -1862.4756 827.2827 -1856.2002 c831.5142 -1849.0801 834.8174 -1841.4609 838.3848 -1833.9863 c845.3081 -1819.4824 852.2349 -1804.9795 858.7744 -1790.2969 c861.8735 -1783.3379 865.0928 -1776.3467 867.6953 -1769.1846 c870.4106 -1761.7129 872.021 -1753.8691 873.7246 -1746.123 c876.7983 -1732.1514 882.812 -1718.8105 883.1074 -1704.3311 c883.2783 -1695.9434 870.2783 -1695.96 870.1074 -1704.3311 c869.9565 -1711.7383 867.9932 -1718.7461 865.7656 -1725.7656 c863.4502 -1733.0635 861.7036 -1740.3818 860.0439 -1747.8555 c856.5522 -1763.582 850.252 -1777.8926 843.6016 -1792.499 c836.9189 -1807.1777 829.8794 -1821.6914 822.9517 -1836.2539 c816.2773 -1850.2842 808.0181 -1863.54 800.7178 -1877.2656 c793.729 -1890.4053 785.3276 -1902.5146 777.127 -1914.9219 c773.0615 -1921.0723 769.0469 -1927.3213 765.6416 -1933.8662 c761.9219 -1941.0156 756.458 -1946.9912 752.2041 -1953.7813 cf568.2021 -2148.4004 m562.3193 -2146.4043 556.6475 -2144.375 551.4248 -2140.9385 c545.6279 -2137.125 541.0688 -2130.8779 536.7314 -2125.5742 c528.8135 -2115.8926 520.3477 -2104.3047 509.0386 -2098.2646 C508.6572 -2096.5156 507.3213 -2095.2002 505.6929 -2094.4668 C505.8999 -2093.8047 506.0688 -2093.1094 506.1675 -2092.3574 c506.6289 -2088.835 502.8613 -2085.8574 499.6675 -2085.8574 c496.7119 -2085.8574 494.7646 -2087.583 493.7959 -2089.9502 C493.7847 -2089.9551 493.7773 -2089.96 493.7656 -2089.9648 c492.7993 -2090.373 491.7666 -2090.6328 490.7573 -2090.9072 c488.8325 -2091.4297 486.8447 -2091.7402 484.8643 -2091.9521 c479.7925 -2092.4951 474.7598 -2093.4482 469.6587 -2093.6865 c462.792 -2094.0068 455.9912 -2093.8633 449.1323 -2094.5342 c440.8716 -2095.3428 432.6646 -2096.499 424.3647 -2096.8711 c408.0586 -2097.6006 391.5815 -2096.9443 375.2588 -2096.9443 c359.6763 -2096.9443 343.6909 -2096.7949 328.2231 -2094.8311 c313.6563 -2092.9814 299.7329 -2090.2061 285.8525 -2085.2734 c279.3447 -2082.96 273.0747 -2081.2686 266.2681 -2080.0146 c258.6147 -2078.6055 251.7056 -2076.0928 244.3359 -2073.7432 c237.1895 -2071.4648 229.7612 -2070.8555 222.7314 -2068.0742 c215.6895 -2065.2891 208.6133 -2062.748 201.9482 -2059.1094 c196.0347 -2055.8818 189.1724 -2054.127 182.9634 -2051.4502 c176.0957 -2048.4893 169.7817 -2044.8633 163.1909 -2041.3965 c156.9731 -2038.125 148.4097 -2037.0439 143.1616 -2032.3301 c140.7412 -2030.1553 137.9453 -2029.1777 135.6069 -2026.6816 c132.7441 -2023.626 130.3472 -2021.7158 126.687 -2019.6494 c123.6045 -2017.9092 120.8872 -2015.4326 117.8911 -2013.498 c115.084 -2011.6865 112.6128 -2009.3516 109.9653 -2007.3203 c104.3066 -2002.9795 98.2271 -2000.5596 91.0518 -2000.334 c90.0327 -2000.3018 89.1406 -2000.4688 88.3701 -2000.7813 C84.6797 -1999.8398 79.9976 -2001.8643 79.8003 -2006.834 c79.5498 -2013.1475 77.6382 -2018.7207 75.9453 -2024.6865 c73.8062 -2032.2256 71.4141 -2039.6143 69.2627 -2047.1582 c68.2993 -2050.5371 67.6602 -2053.9023 66.8931 -2057.3115 c66.3535 -2059.7109 64.0737 -2062.2109 63.0684 -2064.5508 c62.1997 -2066.5723 61.4355 -2068.4775 59.9453 -2070.0869 C59.853 -2070.0449 59.7295 -2069.9863 59.5366 -2069.8809 c53.2974 -2066.4824 49.4824 -2057.3721 45.8467 -2051.6182 c38.6621 -2040.249 31.8706 -2028.1924 25.4971 -2016.3271 c22.1074 -2010.0166 18.8516 -2003.6826 16.0044 -1997.1055 c12.875 -1989.875 10.6475 -1982.2158 7.24805 -1975.1152 c4.29053 -1968.9385 2.9834 -1961.8428 1.3833 -1955.2295 c0.826172 -1952.9258 0.23291 -1950.6318 -0.372559 -1948.3408 C-0.372559 -1991.9365 L3.01123 -2000.3525 6.75684 -2008.668 10.8955 -2016.5547 c17.9229 -2029.9453 26.3281 -2042.5654 33.1743 -2056.0449 c36.688 -2062.9619 41.7773 -2070.1182 46.8687 -2075.9355 c52.856 -2082.7764 61.5605 -2085.8359 69.0229 -2079.4082 c73.019 -2075.9668 74.1021 -2070.4463 76.8599 -2066.2139 c80.4033 -2060.7754 80.9863 -2053.4629 82.749 -2047.2822 c85.9521 -2036.0498 90.4756 -2024.9971 92.165 -2013.4297 C96.7944 -2013.8789 100.3833 -2016.127 104.0259 -2019.0859 c108.7817 -2022.9492 113.7725 -2026.4902 118.7681 -2030.0244 c121.2036 -2031.748 123.4902 -2032.6104 125.5063 -2034.8672 c127.3857 -2036.9707 129.3657 -2039.0449 131.7188 -2040.6318 c136.3218 -2043.7373 141.4717 -2046.7637 147.9258 -2048.998 c154.1909 -2051.168 159.4287 -2054.6299 165.3057 -2057.542 c172.0806 -2060.8994 179.0371 -2063.8975 186.0605 -2066.6924 c199.4248 -2072.0117 212.3179 -2079.1191 226.2603 -2082.9688 c233.6074 -2084.9971 240.8032 -2086.21 247.9868 -2088.8906 c254.8545 -2091.4541 262.2393 -2092.3672 269.3892 -2093.8047 c276.124 -2095.1582 282.3643 -2097.9014 288.8804 -2100.0117 c295.8828 -2102.2783 303.228 -2104.2217 310.4595 -2105.5635 c325.3809 -2108.332 340.7407 -2108.834 355.8584 -2109.7227 c372.0723 -2110.6758 388.5103 -2109.9443 404.75 -2109.9443 c416.502 -2109.9443 428.0723 -2109.877 439.7671 -2108.5762 c450.251 -2107.4092 460.5518 -2107.1113 471.0645 -2106.6211 c477.9014 -2106.3018 485.2793 -2105.1787 492.0239 -2103.9326 c493.6279 -2103.6367 495.2148 -2103.2383 496.7183 -2102.71 C497.9497 -2107.9023 503.4106 -2109.7305 507.2725 -2112.792 c512.8052 -2117.1777 517.5605 -2122.6563 522.0659 -2128.0537 c530.8975 -2138.6348 538.8945 -2149.9229 551.6948 -2155.9727 c554.96 -2157.5166 558.3521 -2158.7529 561.7666 -2159.9277 C606.8628 -2159.9277 L600.1216 -2159.4502 593.5166 -2158.0771 587.0977 -2155.9785 c580.6597 -2153.874 574.6445 -2150.5869 568.2021 -2148.4004 cf*u1 D769.0239 -1763.6543 m762.5869 -1760.5264 756.8291 -1768.3213 760.0718 -1772.916 C760.0083 -1773.2129 759.9634 -1773.4492 759.9717 -1773.4199 c759.5015 -1775.0693 758.8247 -1776.6543 758.1196 -1778.2148 c756.5254 -1781.7432 754.6694 -1785.1494 752.8354 -1788.5566 c750.1816 -1793.4873 747.4551 -1798.1699 745.2715 -1803.3574 c742.3872 -1810.21 741.1982 -1817.7578 738.1812 -1824.5029 c732.6152 -1836.9463 724.2065 -1847.0205 716.0684 -1857.8027 c707.4165 -1869.2646 697.7725 -1880.0977 687.0947 -1889.7158 c676.4209 -1899.3301 664.7422 -1907.7734 653.4585 -1916.6416 c641.7227 -1925.8643 629.6914 -1933.3711 615.2759 -1937.7422 c608.6816 -1939.7422 602.877 -1943 595.8823 -1943 C585.1919 -1943 L582.3896 -1943 579.4688 -1943.7891 576.7129 -1943.1563 c575.1543 -1942.7988 573.1895 -1939.041 572.4658 -1937.7393 c570.856 -1934.8418 570.4302 -1932.1963 568.0293 -1929.7217 c567.4409 -1929.1152 566.8711 -1928.4922 566.3135 -1927.8584 C566.9058 -1926.7275 567.5542 -1925.6221 568.0537 -1924.5293 c569.5146 -1921.3389 571.3555 -1918.3691 572.7134 -1915.1123 c575.6938 -1907.9648 577.4819 -1900.4414 579.3652 -1892.9482 c583.2578 -1877.4619 585.3911 -1861.9668 587.4819 -1846.1729 c591.5532 -1815.418 584.6055 -1784.3145 572.6494 -1756.0596 c566.9019 -1742.4775 560.0342 -1729.373 554.4653 -1715.7236 c548.6221 -1701.4023 544.3105 -1686.4971 540.085 -1671.6377 c531.8018 -1642.5098 520.9346 -1612.7666 518.8403 -1582.374 c518.3052 -1574.6104 518.5747 -1566.6807 518.3633 -1558.8936 c518.1406 -1550.6738 518.0244 -1542.4551 518.3535 -1534.2363 c518.6768 -1526.1631 520.6826 -1518.2969 522.2632 -1510.3945 c522.9404 -1507.0088 523.2959 -1503.4863 524.1807 -1500.1611 c525.1987 -1496.3359 526.4849 -1492.9316 526.7593 -1488.9307 c526.9551 -1486.0742 524.6313 -1483.3906 521.9873 -1482.6631 c518.2344 -1481.6309 515.3657 -1483.9395 513.9912 -1487.2031 c502.188 -1515.2275 497.0752 -1545.9141 494.1602 -1576.0391 c493.4258 -1583.6289 493.3496 -1591.1914 493.0815 -1598.8008 c492.8057 -1606.6465 491.3145 -1614.4189 490.4976 -1622.2158 c488.9053 -1637.4072 491.0723 -1652.9131 493.165 -1667.9512 c495.2773 -1683.126 496.5225 -1698.2617 499.7964 -1713.2637 c502.7334 -1726.7207 509.2813 -1739.0469 513.5322 -1752.082 c518.0859 -1766.043 522.8423 -1781.7334 523.5908 -1796.4482 c523.9648 -1803.8008 523.2622 -1811.1982 523.2622 -1818.5557 c523.2622 -1826.0254 523.6665 -1833.5762 522.3638 -1840.9619 c521.5049 -1845.835 520.2124 -1850.2979 519.9824 -1855.2666 c519.8887 -1857.2852 519.6328 -1859.3252 519.2295 -1861.3418 C518.4512 -1860.1738 517.6729 -1859.0068 516.8945 -1857.8398 c513.0635 -1852.0938 510.1396 -1845.7129 506.8643 -1839.6289 c500.4341 -1827.6855 494.8354 -1815.332 488.4238 -1803.3877 c481.6772 -1790.8184 472.4092 -1779.4512 463.5908 -1768.2891 c459.0991 -1762.6045 454.439 -1757.0547 449.6807 -1751.5918 c444.9429 -1746.1533 441.3091 -1739.7109 436.9536 -1733.9502 c427.8066 -1721.8535 417.0962 -1710.752 407.2212 -1699.2314 c397.8003 -1688.2402 387.5176 -1677.5986 379.1514 -1665.7725 c377.103 -1662.877 375.3955 -1659.7793 373.3154 -1656.9043 c371.4399 -1654.3115 369.3018 -1651.7783 368.1465 -1648.7549 c367.3726 -1646.7295 366.1777 -1644.9678 365.0493 -1643.1309 c364.4365 -1642.1328 363.877 -1641.1113 363.3335 -1640.0752 c363.124 -1639.6758 363.0234 -1639.3945 362.9653 -1639.1748 C364.9727 -1636.1885 363.8164 -1633.2949 361.4873 -1631.627 C363.4023 -1621.248 365.2109 -1610.8799 365.2109 -1600.2676 c365.2109 -1584.792 366.3867 -1568.8926 363.0786 -1553.667 c361.5488 -1546.624 358.4253 -1539.793 355.6372 -1533.1729 c352.7529 -1526.3223 349.2119 -1519.8857 344.7759 -1513.915 c337.9307 -1504.7012 333.0425 -1494.3418 325.2964 -1485.7266 c321.2476 -1481.2236 316.501 -1477.7236 311.2627 -1475.3018 C313.6289 -1474.6094 316.001 -1473.9336 318.3882 -1473.2852 c325.4473 -1471.3691 331.856 -1467.8281 338.7871 -1465.6279 c350.9204 -1461.7773 360.7612 -1452.4717 357.8735 -1438.9395 c356.4873 -1432.4434 353.6479 -1425.8984 351.3447 -1419.6816 c349.4102 -1414.4609 347.8936 -1409.0957 345.9551 -1403.8672 c342.5859 -1394.7783 336.5972 -1384.8027 325.4517 -1385.8262 c322.7412 -1386.0752 320.1816 -1387.1982 317.5327 -1387.4102 c314.395 -1387.6611 310.9551 -1386.8193 307.8857 -1387.6426 c300.9316 -1389.5068 294.3516 -1392.4404 287.2964 -1393.9775 c281.7148 -1395.1934 276.041 -1399.3496 271.2563 -1402.3008 c266.7012 -1405.1113 262.1626 -1408.0264 257.2891 -1410.2461 C257.771 -1408.5537 259.1177 -1405.7666 259.2578 -1405.2354 c260.1143 -1401.9834 261.2441 -1398.7959 262.3066 -1395.6074 c264.4639 -1389.1348 265.8809 -1382.4756 268.0942 -1376.0273 c269.125 -1373.0225 270.231 -1370.0527 271.1431 -1367.0088 c272.1709 -1363.5801 271.7676 -1359.8564 271.7676 -1356.3174 c271.7676 -1349.252 272.0513 -1342.207 270.5234 -1335.2607 c267.7461 -1322.6367 258.1035 -1312.625 249.2749 -1303.7891 c247.0361 -1301.5488 243.8228 -1300.0098 241.3682 -1297.9434 c238.9399 -1295.8994 236.5952 -1293.7637 234.1299 -1291.7627 c228.4482 -1287.1504 222.0654 -1284.1797 215.3364 -1281.4102 c202.103 -1275.9639 186.2495 -1274.6816 172.0884 -1273.8936 c156.6929 -1273.0352 140.1289 -1273.9346 125.3657 -1278.6436 c112.3926 -1282.7803 99.1172 -1290.4883 88.6597 -1299.1973 c84.3135 -1302.8174 81.5 -1307.5068 78.8882 -1312.4482 c75.7329 -1318.417 71.2017 -1323.7432 70.2979 -1330.5586 c69.8306 -1334.0811 73.6079 -1337.0586 76.7979 -1337.0586 c80.6934 -1337.0586 82.832 -1334.0703 83.2979 -1330.5586 c83.5459 -1328.6895 86.2197 -1326.0146 87.1621 -1324.3359 c88.6123 -1321.752 90.0254 -1319.1553 91.4268 -1316.543 c94.063 -1311.6299 97.2617 -1308.9277 101.7749 -1305.7656 c112.6377 -1298.1543 124.313 -1291.4775 137.4683 -1288.9414 c151.3096 -1286.2725 165.6108 -1286.209 179.6108 -1287.4316 c193.4351 -1288.6387 206.8667 -1291.2539 219.3462 -1297.4297 c224.6738 -1300.0664 228.8906 -1304.3701 233.3931 -1308.1602 c237.7227 -1311.8047 242.0396 -1314.8389 245.9287 -1318.9951 c250.0151 -1323.3623 253.7261 -1328.0566 256.2534 -1333.5 c258.8506 -1339.0947 258.7676 -1345.0352 258.7676 -1351.0576 c258.7676 -1357.6475 258.8545 -1363.2334 256.6499 -1369.4902 c254.5806 -1375.3643 253.1606 -1381.335 251.3545 -1387.2793 c249.6328 -1392.9443 248.0088 -1398.8965 245.8086 -1404.3789 c244.1563 -1408.4932 243.938 -1412.3418 245.2876 -1415.9805 C243.125 -1420.2451 246.5967 -1427.0137 252.7417 -1425.5176 c264.9556 -1422.5439 274.8047 -1414.8535 285.6421 -1408.9277 c291.3135 -1405.8262 297.8599 -1404.6914 303.9419 -1402.5283 c307.1099 -1401.4004 309.9209 -1400.4102 313.3135 -1400.4102 c316.2754 -1400.4102 319.1099 -1400.4277 322.0176 -1399.7676 c326.105 -1398.8379 328.1704 -1397.8652 330.688 -1401.6973 c333.0381 -1405.2734 334.2236 -1409.54 335.6133 -1413.543 c337.7207 -1419.6143 339.8823 -1425.6826 341.9385 -1431.7773 c343.5278 -1436.4873 347.6143 -1443.6025 343.9546 -1447.9863 c340.3359 -1452.3203 334.7876 -1452.5127 330.0898 -1454.8164 c323.4883 -1458.0537 316.6641 -1460.5322 309.4692 -1462.0801 c303.0571 -1463.459 296.5229 -1466.2314 290.3672 -1468.4805 c284.52 -1470.6172 277.5928 -1472.8691 272.8169 -1476.9971 c264.2002 -1484.4443 267.1631 -1495.0811 271.623 -1503.9219 c274.1719 -1508.9736 276.8066 -1513.8027 278.8267 -1519.1143 c281.3608 -1525.7783 283.8135 -1532.4189 288.1631 -1538.1465 c288.459 -1538.5361 288.7783 -1538.876 289.1133 -1539.1768 C289.832 -1552.5908 291.6504 -1566.1768 288.6685 -1579.3564 c285.2212 -1594.5957 283.4395 -1610.1563 279.8872 -1625.375 c278.0869 -1633.0879 276.0894 -1640.708 274.2026 -1648.3564 C273.6729 -1647.9961 273.0469 -1647.7051 272.3115 -1647.5137 C272.2349 -1647.4209 272.1582 -1647.3281 272.0684 -1647.1963 c271.4116 -1646.2305 270.8589 -1645.1846 270.2866 -1644.168 c268.9077 -1641.7207 267.5938 -1639.1582 265.7065 -1637.0479 c264.8247 -1636.0605 264.1714 -1634.1113 263.4814 -1632.9473 c262.1895 -1630.7695 260.731 -1628.6885 259.2837 -1626.6123 c256.6436 -1622.8271 253.7993 -1619.2617 251.4224 -1615.2998 c247.082 -1608.0664 242.8262 -1600.7725 238.3779 -1593.6045 c236.3887 -1590.3994 235.1504 -1586.6963 233.5884 -1583.2754 c232.0532 -1579.9141 229.6401 -1577.3213 227.7231 -1574.2158 c224.2646 -1568.6133 221.5918 -1563.791 217.5425 -1558.3105 c215.0479 -1554.9336 213.5938 -1551.0342 211.5205 -1547.3916 c209.5459 -1543.9238 207.1714 -1540.6826 204.8096 -1537.4727 c200.0957 -1531.0684 195.9102 -1524.1641 191.5781 -1517.4844 c187.9404 -1511.875 183.7007 -1506.8066 179.749 -1501.4756 C179.7378 -1498.2334 177.4888 -1495 173 -1495 C172.3525 -1495 171.8247 -1495 v170.1685 -1495 168.6172 -1495.7344 167.4307 -1496.8584 C167.2646 -1496.877 167.0996 -1496.8926 166.9292 -1496.9229 c156.9033 -1498.7119 146.4033 -1501.2676 136.6807 -1504.2559 c126.7119 -1507.3203 117.0483 -1511.6934 108.2134 -1517.2295 c108.1641 -1517.2598 108.1123 -1517.2881 108.0635 -1517.3184 C107.6089 -1517.3359 107.165 -1517.3975 106.7456 -1517.5127 c105.2041 -1517.9365 104.0796 -1518.7822 103.3203 -1519.8711 C100.7446 -1521.1064 98.0811 -1522.2266 95.5576 -1523.4336 c91.5542 -1525.3486 87.5981 -1526.791 83.1328 -1526.7793 c78.7217 -1526.7666 74.2881 -1526.2021 71.9907 -1522.0762 c69.6318 -1517.8398 67.6655 -1513.1797 66.3276 -1508.5283 c63.7417 -1499.5342 68.4941 -1493.0508 75.8955 -1488.3887 c79.3403 -1486.2178 83.1162 -1484.5352 86.8765 -1482.998 c90.5664 -1481.4893 94.8843 -1481.2031 98.7188 -1479.9502 c106.7793 -1477.3164 115.6934 -1471.9922 119.4282 -1464.0342 c124.062 -1454.1602 123.3921 -1444.6572 118.8374 -1434.9756 c117.9004 -1432.9834 116.4346 -1431.9785 114.8486 -1431.7041 C114.8804 -1431.0742 114.9131 -1430.4434 114.9429 -1429.8145 c115.3535 -1421.1348 117.022 -1414.4502 122.6377 -1407.5547 c127.5298 -1401.5469 133.2324 -1394.8887 140.9644 -1392.751 c142.5483 -1392.3125 144.418 -1392.1934 146.3115 -1392.2705 C146.9351 -1394.0889 147.6689 -1395.8652 148.5928 -1397.5859 c150.6685 -1401.4551 154.0576 -1402.918 157.0869 -1405.7129 c163.1802 -1411.3369 172.0239 -1413.9443 180.104 -1414.627 c196.2798 -1415.9941 214.0454 -1409.7002 221.1284 -1393.9502 c224.4697 -1386.5195 221.9785 -1376.7734 219.9961 -1369.2422 c217.8555 -1361.1094 215.5015 -1354.1455 209.8076 -1347.7441 c204.1602 -1341.3945 195.8623 -1336.5264 187.415 -1335.4668 c183.5952 -1334.9883 179.7319 -1335.1455 175.8892 -1335.1455 c174.0371 -1335.1455 171.9033 -1334.8809 170.0967 -1335.3779 c169.1431 -1335.6406 168.2617 -1336.0527 167.3921 -1336.4863 C162.1733 -1333.8457 156.4448 -1331.6807 150.6646 -1330.9082 c144.2349 -1330.0479 137.7129 -1330.2695 131.252 -1329.5107 c118.0718 -1327.9629 103.8447 -1328.7334 91.5176 -1333.9961 c79.8496 -1338.9766 69.3433 -1348.1396 60.8696 -1357.4326 c52.2905 -1366.8398 45.7007 -1377.791 41.3433 -1389.7393 c36.9531 -1401.7764 37.0229 -1414.3916 36.6836 -1427.0176 c36.3433 -1439.6621 38.04 -1453.4902 46.9209 -1463.1914 c52.2178 -1468.9775 61.1602 -1472.8291 68.8789 -1473.2637 c77.2583 -1473.7354 77.2129 -1460.7334 68.8789 -1460.2637 c64.5757 -1460.0215 61.6807 -1457.6152 58.1797 -1455.6738 c53.6406 -1453.1572 52.3301 -1447.54 50.9497 -1442.998 c49.2422 -1437.3818 49.5718 -1431.1641 49.7275 -1425.3691 c49.8774 -1419.8008 49.8638 -1414.1787 50.3052 -1408.627 c52.0322 -1386.8887 66.6919 -1366.9922 83.5181 -1354.1016 c92.627 -1347.123 101.9033 -1343.0752 113.395 -1342.0918 c124.6611 -1341.1289 136.2119 -1342.8965 147.4683 -1343.5459 c150.292 -1343.709 153.209 -1344.377 156.0776 -1345.4072 C156.1133 -1348.6191 158.1851 -1351.6387 162.3223 -1351.3125 c163.6714 -1351.2061 164.9473 -1350.9814 166.2007 -1350.6934 C169.0698 -1352.6934 171.6533 -1354.9707 173.7266 -1357.3584 c177.1143 -1361.2598 176.5215 -1366.1484 176.2129 -1370.9453 c175.8838 -1376.0693 171.9829 -1380.1191 167.9326 -1383.2578 C163.4912 -1382.0293 158.9971 -1381.1367 154.4575 -1380.2803 C153.3257 -1379.7119 152.0254 -1379.5332 150.7495 -1379.6904 C145.917 -1379.1113 140.7822 -1379.3096 136.1846 -1380.5811 c125.5234 -1383.5293 117.2202 -1393.2754 110.7798 -1401.7158 c103.7075 -1410.9834 102.3745 -1420.8643 101.8306 -1432.1309 c101.5249 -1438.4531 101.1157 -1450.8027 109.4644 -1452.3613 C108.7363 -1457.5293 105.5596 -1462.0713 100.2173 -1465.207 c96.2617 -1467.5283 91.6475 -1468.6113 87.1987 -1469.5234 c82.7002 -1470.4463 78.54 -1472.4219 74.397 -1474.4082 c66.2241 -1478.3271 58.644 -1484.2373 54.6953 -1492.585 c50.0752 -1502.3516 53.5835 -1513.2568 57.8149 -1522.4561 c59.5801 -1526.2939 61.2969 -1529.9414 63.9722 -1533.2383 c67.1714 -1537.1816 73.5781 -1539.0176 78.3813 -1539.5049 c88.8525 -1540.5684 97.269 -1536.9961 106.3877 -1532.584 C106.8086 -1532.9336 107.2437 -1533.2676 107.7046 -1533.5664 c110.8442 -1535.6025 113.8081 -1537.9951 117.0786 -1539.8125 c124.8467 -1544.1289 134.1426 -1547.4785 142.6909 -1549.7988 c151.2173 -1552.1133 159.7866 -1551.5127 168.4922 -1551.0215 c177.9795 -1550.4863 186.6841 -1552.3135 195.6948 -1548.3975 c195.9512 -1548.2861 196.189 -1548.1641 196.4141 -1548.0361 C200.291 -1554.0068 203.1201 -1560.5381 207.3315 -1566.2383 c211.6577 -1572.0928 214.6343 -1578.707 219.0591 -1584.5469 c223.6694 -1590.6309 226.0732 -1598.3184 230.0161 -1604.8906 c234.7417 -1612.7666 239.1099 -1621.0596 244.6021 -1628.4219 c249.1885 -1634.5693 253.2988 -1641.0703 257.2798 -1647.5762 c259.9873 -1652.002 262.4717 -1658.8652 268.291 -1659.918 c269.4736 -1660.1318 270.5552 -1660.0488 271.521 -1659.7549 C270.6357 -1663.7666 269.8188 -1667.8008 269.1201 -1671.8779 c266.4243 -1687.6074 265.3442 -1703.2861 265.0571 -1719.2188 c264.9199 -1726.8438 264.1646 -1734.4521 263.3179 -1742.0254 c262.3921 -1750.3115 261.9575 -1758.3838 261.6714 -1766.7139 c261.4165 -1774.1318 260.9888 -1781.543 260.6865 -1788.958 c260.3672 -1796.7822 260.6582 -1804.6572 259.832 -1812.4492 c259.0845 -1819.5 257.6348 -1826.4658 256.5498 -1833.4697 c255.3994 -1840.9033 256 -1848.4561 256 -1855.9629 C256 -1877.5977 L256 -1884.833 255.2607 -1892.3379 256.0723 -1899.5322 c256.8018 -1905.9932 259.3955 -1911.874 261.0054 -1918.1123 c262.5996 -1924.2891 263.5776 -1930.418 266.7866 -1936.0361 c270.1138 -1941.8623 275.3081 -1946.8213 279.9912 -1951.5342 c284.3257 -1955.8965 288.6641 -1960.0859 293.9175 -1963.3418 c304.8989 -1970.1465 316.3633 -1972.8584 328.2695 -1966.8691 c335.499 -1963.2314 341.9858 -1958.7314 345.8135 -1952.3438 C348.2407 -1950.748 349.8291 -1947.5469 348.8521 -1944.4766 C349.1187 -1943.1504 349.3081 -1941.7734 349.376 -1940.3145 c349.5381 -1936.8203 347.3716 -1934.7939 344.7637 -1934.2168 C344.5166 -1932.3311 344.3306 -1930.4512 343.8809 -1928.8066 c341.7349 -1920.9639 339.4966 -1913.1465 337.2627 -1905.3281 c335.2046 -1898.123 333.1523 -1890.918 331.1538 -1883.6973 c329.1987 -1876.6348 327.2002 -1869.4424 327.2002 -1862.1152 c327.2002 -1846.3994 328.1738 -1830.7783 328.667 -1815.0791 c329.1084 -1801.0283 329.3652 -1787.0029 331.499 -1773.1084 C332.8188 -1776.9277 334.3057 -1780.7012 335.8135 -1784.4561 c337.8433 -1789.5098 340.3843 -1794.3389 342.2158 -1799.4668 c343.1445 -1802.0664 343.8398 -1804.749 344.5244 -1807.4209 c345.2998 -1810.4482 347.415 -1813.5342 348.7676 -1816.3486 c354.0986 -1827.4414 360.0054 -1838.1543 366.7334 -1848.4668 c373.3882 -1858.668 381.9609 -1867.2412 389.0664 -1877.0439 c392.0381 -1881.1445 394.0977 -1885.8066 396.6826 -1890.1416 c399.8657 -1895.4805 403.5029 -1900.457 406.8296 -1905.7021 c413.4419 -1916.127 420.4043 -1926.4443 426.5747 -1937.1475 c433.1504 -1948.5547 438.8784 -1960.4463 444.958 -1972.1025 c447.4419 -1976.8662 450.7402 -1981.1768 452.2217 -1986.3877 c452.4741 -1987.2764 452.7373 -1988.1602 453.0088 -1989.04 C449.7197 -1990.0332 446.374 -1990.8555 443.0381 -1991.6582 c436.4834 -1993.2354 429.8511 -1994.9297 423.2246 -1996.1592 c408.1641 -1998.9531 393.3911 -2003.0459 377.9937 -2003.4834 c362.9253 -2003.9111 347.272 -2004.9551 332.3076 -2002.7773 c325.7368 -2001.8213 319.313 -2001.917 312.667 -2001.917 c305.6299 -2001.917 299.0356 -1999.5078 292.0713 -1998.8037 c285.6274 -1998.1514 279.0342 -1997.9385 272.562 -1997.4434 c264.0903 -1996.7969 256.2373 -1994.708 247.9907 -1992.6475 c241.2793 -1990.9697 234.811 -1988.7148 227.9678 -1987.6094 c225.0923 -1987.1455 222.291 -1985.7334 219.5928 -1984.6973 c215.6147 -1983.1699 211.6953 -1983.085 207.604 -1982.1543 c201.3926 -1980.7412 195.6733 -1978.0732 189.3906 -1976.8096 c186.4927 -1976.2266 183.6289 -1975.6094 180.8159 -1974.6934 c177.9058 -1973.7451 175.4351 -1971.3027 173.0522 -1969.4863 c170.6133 -1967.6289 168.1411 -1965.4805 165.1646 -1964.5488 c162.1099 -1963.5938 159.5425 -1962.5918 156.8125 -1960.916 c152.2051 -1958.0859 146.5591 -1953.916 144.9541 -1948.4824 C148.8018 -1946.8535 152.0488 -1944.291 156.3481 -1942.498 c162.8457 -1939.7891 170.2598 -1939.793 177.1455 -1938.2324 c191.2412 -1935.0391 207.1255 -1935.9707 219.2329 -1927.0342 c223.5352 -1923.8584 226.3428 -1919.3398 225.7388 -1913.8184 c225.0342 -1907.377 219.8691 -1903.9209 215.2979 -1900.084 c204.9697 -1891.417 190.543 -1888.5508 178.1494 -1883.9795 c171.3267 -1881.4629 164.2744 -1879.5645 157.2446 -1877.7314 c153.8999 -1876.8584 149.959 -1875.2207 146.4858 -1875.2148 c142.7183 -1875.208 139.0742 -1875.3301 135.543 -1873.8633 c129.3687 -1871.2988 124.1851 -1870.6602 117.5391 -1870.2969 c110.3887 -1869.9053 104.1602 -1867.3154 97.3672 -1865.4688 c82.2842 -1861.3691 67.0571 -1857.8857 51.4497 -1856.583 c44.0376 -1855.9639 36.5869 -1856.334 29.1626 -1855.9619 c21.7954 -1855.5928 14.6362 -1853.7676 7.24658 -1853.4746 c4.72559 -1853.375 2.1543 -1853.3232 -0.372559 -1853.4336 C-0.372559 -1866.3848 L1.25391 -1866.3867 2.79395 -1866.4639 3.89746 -1866.4424 c10.627 -1866.3096 17.0479 -1867.623 23.6802 -1868.4883 c30.9941 -1869.4434 38.4033 -1869.0918 45.7554 -1869.2715 c53.418 -1869.458 61.0142 -1870.541 68.5366 -1871.9463 c75.2881 -1873.209 81.9648 -1874.8633 88.6094 -1876.5908 c95.0405 -1878.2627 101.2168 -1880.7168 107.7354 -1882.0439 c113.8218 -1883.2832 120.7432 -1882.2637 126.543 -1884.2207 c129.311 -1885.1553 131.9141 -1886.5166 134.7339 -1887.3145 c137.894 -1888.209 141.4521 -1888.1719 144.7056 -1888.2119 c151.0352 -1888.29 158.3848 -1891.4297 164.439 -1893.1875 c171.1934 -1895.1484 177.6152 -1897.9473 184.2964 -1900.0742 c190.3257 -1901.9951 196.2949 -1903.7461 201.9209 -1906.6992 c203.8174 -1907.6953 213.2588 -1913.1963 212.7656 -1915.5527 c212.6455 -1916.125 209.2734 -1918.1152 208.1387 -1918.8643 c205.2998 -1920.7363 200.8687 -1921.0713 197.5972 -1921.6328 c190.2158 -1922.8984 182.8843 -1924.1836 175.4814 -1925.3428 c172.1245 -1925.8682 168.9795 -1927.1348 165.5825 -1927.3965 c162.0693 -1927.666 159.2295 -1927.623 155.8428 -1928.7852 c152.5957 -1929.8984 149.4302 -1931.2549 146.3711 -1932.8076 c143.7813 -1934.1221 141.5786 -1936.7529 138.5654 -1936.9912 c133.104 -1937.4229 131.1592 -1942.9844 132.9287 -1946.6943 C132.1328 -1947.9961 131.8105 -1949.6396 132.2979 -1951.5449 c135.0366 -1962.25 146.0981 -1970.9287 155.8667 -1975.1094 c158.7236 -1976.332 161.1689 -1976.8848 163.7363 -1978.6563 c166.2871 -1980.417 168.6396 -1982.4531 171.166 -1984.248 c176.2686 -1987.875 182.9263 -1988.7051 188.8921 -1989.9512 c195.3252 -1991.2949 201.1968 -1994.2656 207.7114 -1995.4082 c211.2212 -1996.0234 214.2788 -1996.5195 217.6338 -1997.8076 c220.8486 -1999.042 224.0557 -2000.3867 227.5439 -2000.5879 c234.3975 -2000.9844 241.6846 -2004.4707 248.3359 -2006.1328 c252.1367 -2007.083 255.9375 -2008.0332 259.7388 -2008.9834 c264.0659 -2010.0654 268.1323 -2010.1611 272.562 -2010.4434 c279.0811 -2010.8604 285.5386 -2011.5654 292.0713 -2011.8037 c299.0103 -2012.0566 305.5723 -2014.917 312.667 -2014.917 c327.2583 -2014.917 341.5845 -2017.0361 356.2007 -2016.8613 c371.4023 -2016.6787 386.4141 -2016.5166 401.4194 -2013.8301 c412.2373 -2011.8936 422.9932 -2009.4854 433.7114 -2007.083 c441.8604 -2005.2568 450.0601 -2003.5713 458.042 -2001.0879 c458.3652 -2000.9873 458.7012 -2000.8789 459.0425 -2000.7676 C463.4229 -2005.1846 469.791 -2000.3438 469.4658 -1995.0576 C471.5449 -1992.79 472.3711 -1989.876 470.4365 -1986.1318 c469.0669 -1983.4805 466.7646 -1982.6123 464.5391 -1982.9199 C464.1006 -1981.2168 463.6694 -1979.5635 463.0903 -1978.2002 c460.9629 -1973.1934 457.6738 -1968.8242 455.4805 -1963.8447 c452.896 -1957.9775 449.7959 -1952.4004 446.5513 -1946.877 c443.4204 -1941.5469 440.8291 -1935.9766 437.7998 -1930.5859 c432.0239 -1920.3086 424.4463 -1911.0371 418.9331 -1900.6387 c416.2573 -1895.5918 412.3813 -1891.249 409.4922 -1886.3223 c406.7095 -1881.5752 404.2476 -1876.625 401.3003 -1871.9746 c395.1895 -1862.3311 386.5376 -1854.2363 379.9561 -1844.8545 c373.2251 -1835.2607 367.3628 -1824.8887 362.2075 -1814.373 c359.7344 -1809.3291 357.2886 -1804.4717 355.7319 -1799.0713 c354.1943 -1793.7383 351.8408 -1788.7354 349.4756 -1783.7354 c344.6626 -1773.5596 340.1045 -1761.6016 339.8706 -1750.2607 c339.8096 -1747.2871 338.127 -1745.373 335.9932 -1744.5098 C336.2856 -1742.7012 336.5024 -1740.8809 336.6572 -1739.0605 c336.9644 -1735.4512 339.0908 -1731.7598 340.1938 -1728.332 c341.1885 -1725.2422 341.3965 -1721.9609 341.5 -1718.7422 c341.5977 -1715.707 342.686 -1712.5977 343.4521 -1709.6826 c345.4087 -1702.2402 347.9297 -1694.9727 349.8931 -1687.5352 c352.6182 -1677.209 355.0835 -1666.665 357.1201 -1656.1084 C358.0864 -1657.7324 359.085 -1659.3057 360.1006 -1660.7588 c364.0918 -1666.4688 367.77 -1672.4004 372.0576 -1677.9014 c376.7212 -1683.8857 381.8091 -1689.5068 386.7627 -1695.248 c397.3677 -1707.54 407.3457 -1720.7676 418.7036 -1732.3633 c423.728 -1737.4932 427.9399 -1743.3428 432.0088 -1749.2363 c436.5073 -1755.7529 441.311 -1761.6455 446.4141 -1767.6992 c456.105 -1779.1934 465.7314 -1791.2061 473.7368 -1803.9502 c481.2271 -1815.875 486.5269 -1829.1602 493.1553 -1841.5713 c496.3965 -1847.6406 499.7012 -1853.6748 502.8335 -1859.8018 c506.4873 -1866.9473 511.7739 -1873.5635 516.228 -1880.2441 c524.7964 -1893.0967 533.2114 -1906.043 542.9312 -1918.0703 c546.1631 -1922.0703 548.9556 -1926.4063 551.9878 -1930.5635 C551.894 -1931.165 551.8149 -1931.7715 551.77 -1932.3896 c551.4448 -1936.8789 555.0356 -1938.9395 558.5278 -1938.6064 C558.8887 -1939.1367 559.1934 -1939.6777 559.4082 -1940.2412 c560.6387 -1943.4658 562.228 -1946.4609 564.4473 -1949.1172 c568.4648 -1953.9258 572.4014 -1956.3047 578.7715 -1956.5693 c585.5981 -1956.8535 592.5981 -1956.3174 599.4458 -1956.3174 c606.2217 -1956.3174 612.3589 -1952.2354 618.7319 -1950.4375 c626.0239 -1948.3789 633.0601 -1945.2344 639.7603 -1941.7305 c652.5952 -1935.0195 663.4868 -1925.1602 674.8882 -1916.3438 c686.2158 -1907.5859 697.4355 -1898.6641 707.27 -1888.2129 c717.1143 -1877.752 725.521 -1866.2979 734.5078 -1855.127 c743.0552 -1844.502 749.4805 -1832.8584 753.3477 -1819.7871 c756.5078 -1809.1035 761.5601 -1800.0117 766.6553 -1790.2451 c769.8979 -1784.0293 778.9185 -1768.4619 769.0239 -1763.6543 cf0 D169.9092 -1397.3262 m172.9609 -1397.6973 175.1616 -1395.7412 176.043 -1393.2207 C179.7749 -1390.1113 183.0386 -1386.6152 186.0376 -1382.6475 c190.0903 -1377.2871 189.9854 -1367.2871 189.1255 -1360.9092 c188.4746 -1356.0859 186.1694 -1351.8232 183.0098 -1348.1436 C188.0386 -1348.5283 192.2637 -1349.8115 196.7778 -1353.3105 c206.3428 -1360.7246 209.0469 -1374.541 209.6431 -1386.0508 c209.8975 -1390.9619 204.2285 -1395.0254 200.8198 -1397.8086 c195.918 -1401.8105 188.8174 -1401.6143 182.8159 -1401.6533 c177.6216 -1401.6875 171.9409 -1400.377 167.5352 -1397.4053 C168.2852 -1397.5586 169.0825 -1397.5527 169.9092 -1397.3262 Cf168.4922 -1538.0215 m161.624 -1538.3457 154.7588 -1539.1689 147.9692 -1537.708 c140.7109 -1536.1475 134.5234 -1532.5771 127.623 -1530.1826 c125.0508 -1529.2891 122.5762 -1528.2852 120.4629 -1526.5186 c120.2202 -1526.3164 119.8848 -1526.085 119.5005 -1525.835 C125.1045 -1522.8828 130.7427 -1520.0273 136.8218 -1517.8848 c142.3271 -1515.9434 148.0161 -1514.9844 153.6499 -1513.5107 c158.9897 -1512.1152 164.2729 -1510.6113 169.7007 -1509.5967 C173.3218 -1514.3506 177.1118 -1518.9336 180.353 -1524.0195 c183.166 -1528.4326 185.9985 -1532.8799 188.9243 -1537.252 C182.8882 -1539.751 174.8853 -1537.7188 168.4922 -1538.0215 cf351.6602 -1613.3174 m350.6016 -1620.4805 348.2275 -1627.4395 347.4595 -1634.6445 c346.647 -1642.2666 345.1606 -1649.7832 343.5342 -1657.2676 c340.4326 -1671.543 336.8975 -1685.5928 332.686 -1699.5723 c330.8096 -1705.8027 329.0942 -1712.251 328.5 -1718.7422 c327.8569 -1725.7695 323.876 -1732.0547 323.6572 -1739.0605 c323.5557 -1742.3066 322.5679 -1745.5771 321.7051 -1748.6846 c320.8301 -1751.8359 320.5601 -1754.4834 320.4922 -1757.748 c320.335 -1765.3691 318.4453 -1773.083 317.5688 -1780.6699 c315.8066 -1795.9238 315.957 -1811.1689 315.1885 -1826.4785 c314.8066 -1834.0781 314.376 -1841.6699 314.2314 -1849.2783 c314.0879 -1856.8262 313.4644 -1864.9141 314.832 -1872.3564 c315.4185 -1875.5449 317.1436 -1878.4463 317.3677 -1881.7148 c317.6182 -1885.3643 319.1636 -1889.1318 320.1455 -1892.6426 c322.3174 -1900.4111 324.5532 -1908.1621 326.7632 -1915.9199 c328.5615 -1922.2305 331.0215 -1928.7314 331.875 -1935.2305 c332.3589 -1938.917 333.2207 -1942.5166 334.7695 -1945.8086 C333 -1948.9561 329.9814 -1951.3975 326.7197 -1953.1006 c320.4404 -1956.3779 316.0698 -1958.4102 309.0024 -1956.3896 c303.4141 -1954.793 297.9878 -1950.8535 293.7939 -1946.9287 c288.4873 -1941.9619 282.9619 -1936.6787 278.7988 -1930.6992 c275.2075 -1925.5391 274.5737 -1919.0449 273.0356 -1913.085 c272.1675 -1909.7227 271.0371 -1906.4775 270.0376 -1903.1494 c268.8306 -1899.1318 269 -1895.2744 269 -1891.125 C269 -1847.2822 L269 -1832.6895 273.3486 -1818.6963 273.5518 -1804.1094 c273.7695 -1788.4854 274.769 -1772.8965 275.0107 -1757.2754 c275.1294 -1749.6367 276.4268 -1742.0313 277.1631 -1734.4229 c277.96 -1726.1865 278.0171 -1717.9785 278.2065 -1709.7168 c278.5752 -1693.6592 280.9678 -1677.7422 284.1689 -1662.0303 c286.333 -1651.4082 289.3208 -1641.0938 291.9956 -1630.6104 c294.752 -1619.8047 296.3667 -1608.7266 298.2891 -1597.7539 c300.1519 -1587.123 302.8867 -1576.7451 303.2407 -1565.9092 c303.6133 -1554.498 301.9482 -1543.1074 301.8608 -1531.6992 c301.8296 -1527.6104 298.7183 -1525.5215 295.5479 -1525.4219 C293.6826 -1521.8037 292.2495 -1517.9912 290.7695 -1514.0996 c288.5542 -1508.2734 285.7207 -1502.8691 282.8481 -1497.3604 c281.4229 -1494.627 278.9224 -1490.3906 280.6689 -1487.377 c281.7559 -1485.502 285.6128 -1484.4424 287.436 -1483.5977 c288.1177 -1483.2813 288.811 -1482.9902 289.5039 -1482.6982 C290.5332 -1483.6777 291.957 -1484.3174 293.7759 -1484.3506 c304.5239 -1484.5459 312.6753 -1490.1113 319.1064 -1498.4385 c322.2744 -1502.54 324.9971 -1506.9834 327.7109 -1511.3916 c331.0957 -1516.8887 334.9434 -1522.0381 338.3164 -1527.5303 c341.9512 -1533.4482 343.8047 -1539.8828 346.7637 -1546.0654 c349.8535 -1552.5234 351.3936 -1559.5879 351.9854 -1566.6943 c352.5879 -1573.9219 352.2109 -1581.2832 352.2109 -1588.5283 c352.2109 -1596.7139 352.8599 -1605.2002 351.6602 -1613.3174 cf559.3032 -1913.2715 m558.7832 -1914.2959 558.2422 -1915.3125 557.6982 -1916.3291 C556.895 -1915.1719 556.0898 -1914.0176 555.2686 -1912.8799 c546.6089 -1900.8818 537.7881 -1889.1748 529.5649 -1876.8408 C528.3594 -1875.0332 L530.8066 -1869.2598 532.1519 -1863.3916 532.8418 -1857.0801 c533.6055 -1850.0928 535.3081 -1843.2939 536.0288 -1836.2773 c536.751 -1829.2402 536.2236 -1821.9922 536.2759 -1814.9258 c536.335 -1806.8896 537.0161 -1798.9268 536.1553 -1790.9053 c534.5835 -1776.2559 530.1411 -1761.1133 525.5835 -1747.1406 c521.2959 -1733.9951 514.9292 -1721.708 511.9634 -1708.1191 c508.7007 -1693.1699 507.5723 -1677.9434 505.4648 -1662.7988 c503.3359 -1647.5049 502.2061 -1632.1924 504.1177 -1616.8242 c505.2612 -1607.6289 505.7393 -1598.4268 506.2866 -1589.2217 C507.4053 -1601.5107 510.4404 -1613.7852 513.583 -1625.5762 c517.5195 -1640.3467 521.8638 -1655.0156 526.0283 -1669.7227 c530.2422 -1684.6055 534.4771 -1699.4834 539.8999 -1713.9814 c545.0923 -1727.8623 551.8823 -1741.0801 557.9385 -1754.5918 c570.6665 -1782.9883 577.9712 -1812.999 574.71 -1844.2441 c573.0474 -1860.1748 570.2798 -1875.7676 566.3745 -1891.3037 c564.5024 -1898.752 562.7983 -1906.3857 559.3032 -1913.2715 cf*U917.1377 -2032.9229 m919.873 -2035.8477 921.7881 -2039.6523 923.5161 -2043.2334 c924.7715 -2045.835 925.6401 -2048.6064 927.3281 -2050.9668 c929.1406 -2053.499 931.333 -2055.7021 933.5269 -2057.8984 c938.6064 -2062.9844 941.9331 -2068.6426 945.5332 -2074.7734 c951 -2084.084 957.0327 -2093.1006 960.1758 -2103.5273 c963.0713 -2113.1328 967.3076 -2121.7695 971.1211 -2131.0186 c974.8979 -2140.1787 975.436 -2150.1465 974.2085 -2159.9277 C986.9893 -2159.9277 L987.2988 -2157.6621 987.521 -2155.377 987.5879 -2153.0605 c987.7793 -2146.3975 987.5024 -2139.9531 985.7344 -2133.4951 c983.9316 -2126.9102 980.6934 -2120.6982 977.8184 -2114.5381 c975.125 -2108.7676 973.688 -2102.8359 971.6831 -2096.835 c969.3452 -2089.8359 965.7153 -2083.291 961.9932 -2076.9541 c958.6685 -2071.2949 955.5405 -2065.4453 952.0635 -2059.8887 c948.3975 -2054.0313 943.0454 -2049.4082 938.502 -2044.2842 c936.6904 -2042.2402 935.8579 -2039.126 934.7412 -2036.6719 c933.3271 -2033.5645 931.5464 -2030.5664 929.6089 -2027.7607 c928.6294 -2026.3418 927.4629 -2025.0264 926.3301 -2023.7305 c925.936 -2023.2793 923.5356 -2019.4277 923.9473 -2021.8896 c923.8989 -2021.6006 923.8047 -2021.3047 923.6963 -2021.0098 C923.9614 -2021.0322 924.228 -2021.0547 924.4922 -2021.0762 c926.8564 -2021.2676 928.9434 -2022.0918 931.2197 -2022.8232 c934.2803 -2023.8057 937.1104 -2025.0039 939.8457 -2026.6982 c942.8691 -2028.5713 947.3677 -2029.1084 950.7148 -2030.4033 c963.3101 -2035.2764 974.2188 -2045.9746 983.8091 -2055.1621 c988.9092 -2060.0488 992.6431 -2066.4121 996.3623 -2072.375 c1000.2495 -2078.6074 1004.0527 -2084.8828 1007.9922 -2091.084 c1012.6289 -2098.3828 1015.6563 -2105.4648 1018.1597 -2113.7148 c1020.8813 -2122.6865 1023.4209 -2131.7041 1026.2002 -2140.6572 c1028.1763 -2147.0215 1029.9365 -2153.4521 1031.5176 -2159.9277 C1044.7285 -2159.9277 L1039.978 -2139.7461 1033.9263 -2119.8525 1027.5278 -2100.1455 c1025.3877 -2093.5537 1021.1499 -2087.5273 1017.4355 -2081.7285 c1013.4385 -2075.4893 1009.6846 -2069.1045 1005.7217 -2062.8438 c1001.9873 -2056.9453 998.0156 -2050.8545 993.0015 -2045.9697 c987.6558 -2040.7627 981.9751 -2035.8965 976.127 -2031.2656 c971.1147 -2027.2969 966.001 -2023.3799 960.2651 -2020.5146 c953.9883 -2017.3799 947.1812 -2015.3174 940.748 -2012.5703 c932.4614 -2009.0322 917.4897 -2003.5693 910.7246 -2012.4053 c908.0308 -2015.9229 909.937 -2020.9678 911.4121 -2025.3457 c912.501 -2028.5781 914.8335 -2030.459 917.1377 -2032.9229 cf1121.5674 -2043.4033 m1124.0645 -2060.9736 1128.6157 -2077.8555 1133.6245 -2094.8389 c1136.1733 -2103.4824 1139.3457 -2111.9238 1141.8047 -2120.5967 c1144.2178 -2129.1055 1148.063 -2137.1055 1150.2788 -2145.7227 c1151.4819 -2150.4023 1151.9756 -2155.1494 1152.2451 -2159.9277 C1165.3135 -2159.9277 L1164.5913 -2150.625 1162.9351 -2141.4639 1159.8926 -2132.4873 c1157.5479 -2125.5693 1154.9297 -2118.8926 1152.7969 -2111.8965 c1150.5234 -2104.4404 1147.8501 -2097.1143 1145.6445 -2089.6357 c1141.3286 -2075.001 1137.4053 -2060.4443 1134.9307 -2045.3633 c1132.5098 -2030.6123 1131.2837 -2015.6758 1130.376 -2000.7656 c1129.416 -1985.002 1130.1777 -1968.9854 1130.1777 -1953.1904 c1130.1777 -1936.9795 1131.0713 -1921.001 1131.9736 -1904.8369 c1134.0024 -1868.4746 1135.335 -1828.6494 1155.5537 -1797.0781 c1164.3418 -1783.3555 1176.1787 -1771.7754 1188.4575 -1761.1914 c1195.0039 -1755.5479 1202.1367 -1749.2686 1208.3564 -1742.2822 C1207.6641 -1748.1104 1206.6655 -1753.8545 1205.877 -1759.6963 c1203.8608 -1774.6338 1197.9565 -1788.6221 1193.4087 -1802.874 c1188.7881 -1817.3555 1182.5664 -1831.084 1176.8896 -1845.1426 c1171.0703 -1859.5518 1164.708 -1874.5313 1160.9365 -1889.6104 c1159.1514 -1896.749 1158.0674 -1904.0361 1156.3057 -1911.1816 c1154.522 -1918.4131 1152.5254 -1925.5732 1151.0771 -1932.8848 c1148.0278 -1948.2852 1148.5322 -1964.1563 1148.7676 -1979.7656 c1149.0122 -1995.9678 1148.8408 -2011.958 1151.1182 -2028.0479 c1153.167 -2042.5215 1158.166 -2055.8086 1162.3701 -2069.7129 c1166.1382 -2082.1738 1170.1167 -2094.5898 1175.2305 -2106.5742 c1180.1631 -2118.1348 1187.5186 -2128.4961 1192.9292 -2139.834 c1195.9878 -2146.2441 1198.0552 -2153.001 1199.1563 -2159.9277 C1212.3438 -2159.9277 L1210.4854 -2146.4902 1205.0225 -2134.1055 1198.4248 -2122.3184 c1194.8872 -2115.998 1191.1714 -2109.791 1187.8896 -2103.3301 c1184.2881 -2096.2373 1181.9336 -2088.2578 1179.4419 -2080.7266 c1177.0562 -2073.5137 1174.8906 -2066.2285 1172.707 -2058.9531 c1170.6094 -2051.9619 1167.915 -2045.2461 1166.1689 -2038.1289 c1162.4165 -2022.8281 1161.8721 -2007.0449 1161.854 -1991.3672 c1161.8354 -1975.498 1160.9619 -1959.5781 1162.5215 -1943.7529 c1163.9644 -1929.1143 1168.9424 -1914.7676 1171.8604 -1900.376 c1174.9951 -1884.915 1181.1753 -1870.3643 1186.6982 -1855.6367 c1190.9956 -1844.1787 1196.1753 -1833.1553 1200.4517 -1821.6914 c1204.6768 -1810.3652 1208.585 -1798.8994 1212.3755 -1787.4219 c1220.147 -1763.8887 1221.0249 -1739.8193 1223.6206 -1715.416 c1224.4185 -1707.915 1212.8306 -1706.8779 1210.8525 -1713.6885 c1208.8032 -1720.7451 1203.7871 -1727.0518 1199.1387 -1732.6182 c1193.9736 -1738.8047 1188.1675 -1744.4561 1182.0576 -1749.6992 c1171.8174 -1758.4873 1162.0181 -1767.5371 1153.4712 -1778.0244 c1145.2622 -1788.0977 1138.6997 -1799.0508 1133.7041 -1811.0381 c1127.8506 -1825.083 1125.2896 -1840.6055 1123.2129 -1855.5957 c1121.0371 -1871.2998 1119.9805 -1887.1162 1119.0801 -1902.9365 c1118.1587 -1919.1357 1117.1787 -1935.1543 1117.1777 -1951.4004 c1117.1768 -1967.2129 1116.3818 -1983.2607 1117.2744 -1999.0439 c1118.1143 -2013.8877 1119.4751 -2028.6826 1121.5674 -2043.4033 cf*u1 D1761.7871 -1991.1504 m1759.1821 -1988.5498 1756.5371 -1986.0469 1753.6509 -1983.7588 c1748.1333 -1979.3848 1742.9102 -1975.4951 1736.3896 -1972.7246 c1729.8047 -1969.9258 1722.9736 -1968.9355 1715.9619 -1967.8379 c1709.5498 -1966.834 1703.8008 -1966.4492 1697.4458 -1968.1416 c1694.1914 -1969.0078 1691.0947 -1970.4131 1688.1187 -1972.0605 C1683.7764 -1965.0928 1679.0693 -1958.3486 1673.6211 -1952.1934 c1667.7017 -1945.5068 1658.7896 -1944.0254 1650.2822 -1943.4658 c1632.4414 -1942.293 1613.6938 -1949.3809 1605.5654 -1966.0908 c1605.3984 -1966.4346 1605.2158 -1966.7676 1605.0439 -1967.1074 C1600.5684 -1962.9785 1596.793 -1958.1582 1592.6938 -1953.6045 c1586.8193 -1947.0801 1579.3647 -1943.5107 1570.9907 -1941.3027 c1556.9614 -1937.6035 1541.1304 -1937.8984 1529.7817 -1948.0244 c1524.1328 -1953.0645 1521.2422 -1961.6934 1519.4844 -1968.8027 c1518.334 -1973.458 1517.6313 -1978.4092 1517.9048 -1983.2383 C1512.3984 -1980.5752 1506.8428 -1978.0313 1500.9751 -1976.1631 c1489.5586 -1972.5283 1476.3462 -1973.3818 1464.5161 -1973.4111 c1459.4355 -1973.4238 1452.8809 -1973.6182 1448.668 -1976.7344 c1444.041 -1980.1582 1440.9922 -1985.165 1437.9966 -1989.9795 c1433.2529 -1997.6025 1431.5806 -2007.2988 1431.0215 -2016.5498 C1429.5723 -2016.3145 1428.0791 -2016.1699 1426.5083 -2016.1699 c1413.2832 -2016.1699 1401.7109 -2017.542 1389.6401 -2023.3936 c1385.5293 -2025.3857 1380.6226 -2029.832 1378.5811 -2033.9443 c1375.9458 -2039.2529 1376.5527 -2046.4863 1377.8184 -2052.0898 c1380.8027 -2065.3047 1390.7319 -2076.9063 1399.9063 -2086.3506 c1404.3403 -2090.915 1409.415 -2095.0762 1414.0781 -2099.4316 c1419.5474 -2104.5391 1425.3779 -2109.0352 1432.1484 -2112.2637 c1456.1523 -2123.7119 1483.7354 -2121.6348 1509.4775 -2124.1729 c1512.3213 -2124.4531 1515.2036 -2125.7822 1518.0396 -2125.7813 c1521.6445 -2125.7793 1525.2456 -2125.6611 1528.8486 -2125.5264 c1535.2339 -2125.2891 1541.3896 -2124 1547.7959 -2124 C1566.9482 -2124 L1574.4678 -2124 1581.8135 -2122.6406 1589.3101 -2122.4648 c1589.3789 -2122.4629 1589.4424 -2122.4531 1589.5098 -2122.4502 C1590.5542 -2123.5449 1592.0674 -2124.2461 1594.0615 -2124.1973 c1600.5068 -2124.0371 1607.2749 -2122.833 1613.1797 -2120.1416 c1618.9873 -2117.4941 1626.1235 -2117.4805 1632.3491 -2116.5752 c1639.4878 -2115.5371 1646.5459 -2112.085 1653.2012 -2109.3965 c1660.915 -2106.2813 1668.5308 -2102.9219 1676.1353 -2099.5518 c1682.5273 -2096.7188 1689.4897 -2095.3184 1696.0142 -2092.793 c1702.7988 -2090.168 1709.1152 -2086.3223 1715.5317 -2082.9238 c1718.8413 -2081.1699 1722.1973 -2079.4678 1725.6597 -2078.0352 c1728.8413 -2076.7188 1731.5176 -2074.2656 1734.2021 -2072.1406 c1736.8037 -2070.0811 1740.0537 -2068.3125 1742.106 -2065.708 c1744.1104 -2063.1641 1746.6172 -2061.0088 1748.9189 -2058.7441 c1758.2896 -2049.5225 1762.3682 -2034.9053 1764.3037 -2022.2373 c1765.3682 -2015.2666 1765.6309 -2008.1074 1764.8877 -2001.0918 c1764.5508 -1997.9111 1764.1782 -1993.5361 1761.7871 -1991.1504 cf0 D1752.2744 -2010 m1752.2856 -2016.3887 1751.3174 -2022.5703 1749.6992 -2028.7363 c1748.2012 -2034.4473 1746.2412 -2040.5088 1743.1582 -2045.5684 c1740.605 -2049.7588 1736.1025 -2052.8125 1732.9136 -2056.5156 c1729.5947 -2060.3711 1723.585 -2064.8232 1718.9546 -2066.8574 c1712.8999 -2069.5156 1707.123 -2072.7021 1701.2852 -2075.7959 c1689.9653 -2081.7949 1677.6948 -2084.7383 1666.0103 -2089.9043 c1659.4453 -2092.8066 1652.8511 -2095.6348 1646.1816 -2098.29 c1640.1309 -2100.6992 1633.9795 -2103.377 1627.4941 -2104.2441 c1621.8462 -2104.998 1616.1406 -2105.4766 1610.686 -2107.2129 c1605.0547 -2109.0059 1600.0908 -2111.0479 1594.0615 -2111.1973 c1593.9775 -2111.1992 1593.8994 -2111.2109 1593.8174 -2111.2148 C1592.7739 -2110.1504 1591.2759 -2109.4688 1589.3101 -2109.5146 c1581.8135 -2109.6895 1574.4678 -2111 1566.9482 -2111 C1544.0625 -2111 L1537.1963 -2111 1530.4287 -2112.5605 1523.5024 -2112.6631 c1515.8892 -2112.7764 1508.2847 -2110.8398 1500.6182 -2110.5547 c1485.9985 -2110.0098 1471.2178 -2109.1709 1456.8125 -2106.4561 c1450.0537 -2105.1816 1443.3779 -2103.252 1437.1636 -2100.2891 c1430.4214 -2097.0742 1425.0479 -2091.9648 1419.7026 -2086.8604 c1409.5645 -2077.1787 1399.2744 -2068.3271 1392.9229 -2055.5068 c1390.6494 -2050.918 1388.9365 -2045.0352 1390.1221 -2039.9063 c1390.4429 -2038.5176 1392.6284 -2037.2666 1393.6807 -2036.4824 c1396.5615 -2034.3369 1399.4795 -2033.0645 1402.8613 -2031.877 c1415.1133 -2027.5732 1428.7271 -2028.123 1440.7188 -2032.6973 c1447.4741 -2035.2734 1454.6904 -2036.8027 1461.5581 -2039.1211 c1469.353 -2041.752 1476.9653 -2044.9268 1484.8208 -2047.3555 c1493.3096 -2049.9814 1501.2178 -2054.2646 1508.9712 -2058.5283 c1512.5957 -2060.5215 1516.1895 -2062.5693 1519.8057 -2064.5762 c1523.6978 -2066.7363 1528.1128 -2068.4707 1531.6201 -2071.2305 c1537.8203 -2076.1074 1542.3999 -2083.0156 1547.873 -2088.6553 c1553.7529 -2094.7148 1558.2363 -2101.9727 1564.1245 -2108.0391 c1569.9712 -2114.0645 1579.1553 -2104.8633 1573.3169 -2098.8477 c1568.6025 -2093.9893 1564.6729 -2088.4902 1560.3989 -2083.2568 c1555.9971 -2077.8662 1551.0713 -2072.793 1546.4604 -2067.5693 c1541.9863 -2062.501 1536.9067 -2058.9883 1530.9751 -2055.8564 c1524.1953 -2052.2773 1517.5898 -2048.375 1510.8335 -2044.75 c1497.4121 -2037.5488 1482.9453 -2032.9131 1468.6343 -2027.8398 c1461.4888 -2025.3066 1454.2588 -2023.0332 1446.9136 -2021.1543 c1445.8574 -2020.8838 1444.8306 -2020.5811 1443.8193 -2020.2637 C1443.9707 -2012.7588 1444.6094 -2003.6689 1448.4233 -1997.8086 c1450.6519 -1994.3838 1452.582 -1990.8623 1455.4497 -1987.9141 c1458.0835 -1985.2061 1466.1973 -1986.4063 1469.6245 -1986.4111 c1479.4849 -1986.4229 1489.6802 -1986.2031 1499.1572 -1989.2207 c1508.3975 -1992.1631 1516.7773 -1997.3613 1525.6226 -2001.2568 C1526.2754 -2002.0283 1526.9272 -2002.7949 1527.5498 -2003.5645 c1530.7319 -2007.498 1533.0908 -2012.2031 1535.9575 -2016.3789 c1538.5635 -2020.1748 1541.3418 -2023.8516 1544.1025 -2027.5342 c1546.7603 -2031.0791 1548.5308 -2034.627 1550.4375 -2038.6211 c1554.0479 -2046.1846 1565.2549 -2039.585 1561.6631 -2032.0605 c1558.4785 -2025.3896 1554.5898 -2020.0684 1550.2373 -2014.1133 c1545.5259 -2007.6689 1541.6489 -2000.6611 1536.7422 -1994.3721 c1534.9971 -1992.1348 1533.1914 -1990.0908 1531.8057 -1987.5967 c1530.1997 -1984.7041 1530.8867 -1980.7266 1531.1279 -1977.6133 c1531.6196 -1971.2705 1533.8096 -1962.9453 1538.1299 -1958.0625 c1545.8984 -1949.2842 1560.3135 -1951.7852 1570.1318 -1954.5459 c1577.1523 -1956.5205 1581.6763 -1960.6055 1586.334 -1966.0205 c1590.2344 -1970.5547 1594.1245 -1974.8271 1598.5977 -1978.6172 C1596.481 -1982.6729 1595.3457 -1987.1934 1594.272 -1991.6191 c1591.7734 -2001.9199 1590.9565 -2012.6318 1590.1904 -2023.1748 c1589.8223 -2028.2451 1589.0835 -2033.4424 1589.1733 -2038.5215 c1589.2627 -2043.5957 1590.1943 -2048.6826 1590.9609 -2053.6875 c1592.6094 -2064.4443 1592.3125 -2075 1592.3125 -2086 c1592.3125 -2094 1605.3125 -2094 1605.3125 -2086 c1605.3125 -2077 1605.7729 -2067.793 1604.7148 -2058.7881 c1603.7217 -2050.332 1601.728 -2042.0801 1602.4336 -2033.5273 c1603.8306 -2016.6016 1602.9917 -1996.5059 1611.9487 -1981.4697 c1613.6743 -1978.5723 1615.3203 -1975.6875 1616.7905 -1972.6514 c1618.0903 -1969.9668 1619.3804 -1966.6846 1621.8232 -1964.8018 c1628.7466 -1959.4648 1636.5459 -1956.2832 1645.3057 -1956.3223 c1650.7681 -1956.3457 1659.249 -1956.0107 1663.3745 -1960.248 c1668.8071 -1965.8281 1673.1582 -1972.4902 1677.2266 -1979.1416 C1675.9746 -1979.9785 1674.6035 -1980.6982 1673.4058 -1981.6465 c1671.6777 -1983.0156 1670.3252 -1985.2539 1669.0645 -1987.0352 c1666.5469 -1990.5938 1664.8916 -1994.8232 1662.6865 -1998.583 c1658.1807 -2006.2676 1652.5898 -2013.2539 1648.4058 -2021.1318 c1643.9175 -2029.584 1640.8364 -2038.7412 1637.354 -2047.6289 c1634.019 -2056.1416 1631.0034 -2065.3027 1626.46 -2073.2383 c1622.2871 -2080.5254 1633.521 -2087.0703 1637.6846 -2079.7988 c1641.9736 -2072.3086 1644.501 -2063.9951 1647.8428 -2056.0742 c1651.585 -2047.2012 1654.584 -2038.0322 1658.7881 -2029.3564 c1662.4473 -2021.8057 1667.6094 -2015.1055 1672.1172 -2008.0605 c1674.5444 -2004.2666 1676.5869 -2000.2949 1678.6738 -1996.3115 c1680.5903 -1992.6533 1683.0723 -1990.9336 1686.0293 -1988.6914 C1686.0337 -1988.6885 L1690.3179 -1985.8477 1694.6616 -1982.9004 1699.5137 -1981.1182 c1704.9253 -1979.1309 1709.9741 -1980.0049 1715.4971 -1980.8311 c1721.6436 -1981.751 1727.6631 -1982.8369 1733.3208 -1985.5205 c1738.8032 -1988.1221 1743.7134 -1992.1045 1748.2324 -1996.1191 c1750.1934 -1997.8613 1751.3149 -1998.6611 1751.8389 -2001.0371 c1752.4727 -2003.9141 1752.2695 -2007.0752 1752.2744 -2010 cf*U2368.8633 -2159.9277 m2373.0146 -2156.7227 2377.1045 -2153.4824 2381.1289 -2150.0791 c2392.5957 -2140.3828 2404.6465 -2132.1826 2418.0273 -2125.3525 c2445.6582 -2111.248 2474.5889 -2101.5391 2505.2861 -2096.9736 c2534.5625 -2092.6201 2566.249 -2091.4492 2592.5918 -2107.1328 c2597.5479 -2110.084 2600.7861 -2113.8389 2604.2588 -2118.3027 c2608.5166 -2123.7754 2613.9961 -2123.334 2619.0234 -2118.9473 c2623.4414 -2115.0938 2626.8867 -2110.3379 2631.5713 -2106.7461 c2637.2656 -2102.3789 2644.1406 -2098.7295 2651.0195 -2096.6729 c2655.501 -2095.333 2660.3965 -2095.748 2665.0127 -2095.6436 c2670.3096 -2095.5244 2675.0791 -2094.6279 2680.3096 -2095.7871 c2689.7031 -2097.8691 2698.0781 -2103.1465 2706.8027 -2106.9707 c2710.7363 -2108.6953 2714.6533 -2110.3457 2718.293 -2112.6504 c2722.1914 -2115.1191 2725.3115 -2119.3574 2728.4951 -2122.6563 c2734.6191 -2129.001 2738.9473 -2136.9551 2743.0254 -2144.7324 c2746.9199 -2152.1582 2758.1387 -2145.5859 2754.25 -2138.1699 c2748.9365 -2128.0371 2742.7422 -2118.4678 2734.8877 -2110.2305 C2735.5898 -2109.2021 2736 -2107.9561 2736 -2106.6084 C2736 -2105 L2736 -2103.6855 2735.6445 -2102.5918 2735.0586 -2101.71 C2736.2373 -2095.6621 2739.2676 -2089.8145 2741.8115 -2084.3232 c2745.3662 -2076.6514 2748.9316 -2068.8564 2752.9834 -2061.4355 c2760.2617 -2048.1035 2773.1191 -2039.3701 2787.0576 -2033.8896 c2793.6328 -2031.3037 2800.5605 -2030.0078 2807.373 -2028.2324 c2811.3955 -2027.1855 2815.4131 -2026.1338 2819.4688 -2025.2197 c2823.4834 -2024.3154 2827.3701 -2024.416 2831.4639 -2024.416 c2839.9541 -2024.416 2848.4658 -2024.2402 2856.9521 -2024.5098 c2860.2246 -2024.6133 2873.4316 -2026.4697 2873.5918 -2029.0029 c2873.9199 -2034.1777 2879.0693 -2036.1533 2882.791 -2034.8965 C2882.5791 -2039.2188 2882.7646 -2043.5869 2882.9297 -2047.8086 c2883.2734 -2056.6172 2882.4844 -2065.5674 2887.1494 -2073.4629 c2889.2803 -2077.0684 2894.3828 -2077.7529 2897.3574 -2074.7773 c2897.8857 -2074.25 2898.4141 -2073.7217 2898.9414 -2073.1934 c2902.6973 -2069.4375 2900.3906 -2064.3818 2896.6885 -2062.6768 C2895.3525 -2057.417 2896.0664 -2051.3105 2895.8633 -2046.126 c2895.5254 -2037.4648 2895.4023 -2029.3477 2899.7109 -2021.5938 c2908.6172 -2005.5664 2922.8379 -1992.2441 2937.3672 -1981.3809 c2944.3594 -1976.1533 2952.46 -1973.9951 2960.6836 -1971.459 c2969.1191 -1968.8574 2977.3154 -1965.5723 2985.9023 -1963.4648 c2994.5332 -1961.3457 3003.7031 -1960.0352 3012.5732 -1959.5625 c3020.7285 -1959.127 3028.7471 -1960.9453 3036.8867 -1961.0654 c3045.2744 -1961.1895 3045.2617 -1948.1895 3036.8867 -1948.0654 c3028.1084 -1947.9355 3019.5674 -1946.1895 3010.7598 -1946.6592 c3000.7939 -1947.1904 2990.4473 -1948.9648 2980.7656 -1951.3418 c2971.0869 -1953.7178 2961.7598 -1957.5557 2952.2275 -1960.4512 c2942.5547 -1963.3887 2934.4844 -1967.2324 2926.4844 -1973.4414 c2910.6758 -1985.709 2894.8477 -2001.1318 2886.1963 -2019.4863 c2885.6973 -2020.5459 2885.2676 -2021.627 2884.8955 -2022.7246 C2882.7686 -2018.8184 2878.8359 -2016.5244 2873.9004 -2014.8164 c2864.1426 -2011.4395 2854.5313 -2011.417 2844.3105 -2011.417 c2834.168 -2011.417 2824.1865 -2010.8447 2814.2461 -2013.084 c2805.0234 -2015.1621 2795.5332 -2017.3174 2786.5605 -2020.291 c2769.9619 -2025.79 2754.0293 -2035.9541 2744.2998 -2050.6455 c2738.7617 -2059.0088 2734.8604 -2068.7432 2730.5869 -2077.7891 c2727.248 -2084.8564 2723.666 -2092.1855 2722.2188 -2099.8945 C2718.4639 -2097.8359 2714.4414 -2096.2461 2710.5215 -2094.4834 c2703.6543 -2091.3965 2697.0645 -2087.8604 2690.0059 -2085.1865 c2682.2246 -2082.2393 2675.1074 -2081.8887 2666.9023 -2082.5352 c2658.5537 -2083.1914 2650.418 -2082.3691 2642.5557 -2085.9541 c2635.3633 -2089.2344 2628.5498 -2092.5361 2622.3633 -2097.5576 c2619.6045 -2099.7969 2617.0996 -2102.2031 2614.7158 -2104.834 c2614.0254 -2105.5947 2613.208 -2106.7109 2612.3008 -2107.7002 C2610.625 -2105.5488 2608.9727 -2103.3955 2606.8848 -2101.543 c2602.4248 -2097.584 2597.2021 -2094.5654 2591.8398 -2092.0215 c2579.8496 -2086.334 2566.0986 -2082.7344 2552.9238 -2081.3525 c2539.7168 -2079.9668 2525.6074 -2081.584 2512.4629 -2083.0479 c2498.6758 -2084.583 2485.0332 -2087.1279 2471.5557 -2090.3906 c2458.5078 -2093.5488 2445.7344 -2098.626 2433.416 -2103.8975 c2420.3828 -2109.4756 2407.3496 -2115.5381 2395.3652 -2123.1504 c2384.3066 -2130.1768 2374.9531 -2139.1514 2364.6035 -2147.0723 c2359.1758 -2151.2266 2353.5723 -2155.1064 2349.0332 -2159.9277 C2368.8633 -2159.9277 Lf2378.126 -2050 m2385.917 -2050 2393.9609 -2049.3633 2401.6543 -2050.8066 c2408.2988 -2052.0527 2414.2598 -2056.0938 2420.6152 -2058.3633 c2423.6953 -2059.4639 2426.7256 -2060.3564 2429.7578 -2061.5576 c2430.7949 -2061.9688 2431.8975 -2062.2461 2433.0195 -2062.3584 C2433.0293 -2062.4668 2433.3223 -2062.7012 2433.9023 -2063.0664 C2434.6602 -2063.7129 2435.4385 -2064.3301 2436.2383 -2064.9238 C2441.9248 -2068.7559 2447.292 -2066.9961 2450.9268 -2061.5566 c2452.2891 -2059.5186 2453.4746 -2057.9893 2454.915 -2056.042 c2456.7324 -2053.584 2459.6309 -2052.5117 2462.4072 -2051.543 c2468.8828 -2049.2871 2474.9766 -2045.6494 2481.2676 -2042.8916 c2488.1162 -2039.8896 2495.2354 -2037.501 2502.4619 -2035.5996 c2516.7422 -2031.8428 2531.7324 -2030.248 2546.4707 -2030.1309 c2553.7939 -2030.0723 2559.8828 -2030.2041 2566.1914 -2034.2197 c2569.1045 -2036.0742 2571.3135 -2039.3672 2574.3086 -2040.9502 c2575.9648 -2041.8262 2578.9258 -2043.0039 2579.2412 -2044.9844 c2580.5527 -2053.2461 2593.0781 -2049.7275 2591.7764 -2041.5293 c2590.7129 -2034.832 2584.1113 -2032.4424 2579.6855 -2028.3809 c2574.5244 -2023.6455 2567.3652 -2018.418 2560.168 -2017.752 c2544.3428 -2016.2871 2528.4063 -2017.6055 2512.7695 -2020.2207 c2497.1953 -2022.8262 2482.6543 -2027.8994 2468.3623 -2034.5303 c2462.3877 -2037.3027 2455.5664 -2039.5176 2450.0303 -2043.0684 c2448.7949 -2043.8604 2447.6611 -2044.8809 2446.582 -2045.8672 C2445.9629 -2046.5039 2445.3984 -2047.1865 2444.8691 -2047.8984 C2444.6523 -2048.0664 2444.2852 -2048.3643 2443.7598 -2048.8008 C2442.8564 -2049.7676 2442.0791 -2050.7842 2441.3438 -2051.8838 c2441.2383 -2052.042 2441.1318 -2052.2686 2441.0234 -2052.5215 C2439.2773 -2051.126 2437.5859 -2049.4805 2435.0488 -2049.4277 c2433.6846 -2049.3994 2431.8545 -2048.0322 2430.335 -2047.6426 c2427.7012 -2046.9678 2425.1172 -2046.1406 2422.5586 -2045.2266 c2417.6748 -2043.4824 2413.3125 -2040.666 2408.3926 -2038.9941 c2403.5469 -2037.3467 2398.127 -2037.0352 2393.0547 -2036.8311 c2371.5391 -2035.9648 2349.4424 -2035.8369 2328.2578 -2039.9922 c2318.1504 -2041.9746 2308.0762 -2044.9121 2298.4502 -2048.8789 C2292.1523 -2038.6172 2281.8555 -2031.4951 2272.5537 -2024.1406 c2267.4473 -2020.1045 2262.6035 -2015.7793 2257.3252 -2011.9551 c2251.3486 -2007.624 2244.6035 -2004.5313 2237.8301 -2001.6846 c2231.1875 -1998.8936 2224.2939 -1997.2969 2217.5195 -1994.9551 c2210.2334 -1992.4365 2203.4893 -1988.7617 2196.3838 -1985.8369 c2182.915 -1980.293 2167.9492 -1979.7412 2153.627 -1979.7412 c2137.2363 -1979.7412 2120.8232 -1979.9785 2104.4346 -1979.6729 c2087.9717 -1979.3662 2071.5635 -1977.7314 2055.0859 -1978.3145 c2039.3535 -1978.8701 2023.541 -1981.5137 2008.2891 -1985.3477 c1994.7715 -1988.7451 1981.3809 -1994.4961 1970.499 -2003.3145 c1969.6445 -2003.9893 1968.8086 -2004.6855 1967.9883 -2005.4023 c1961.6006 -2010.8496 1970.8418 -2020.001 1977.1816 -2014.5938 c1987.0977 -2006.1377 1999.2686 -2001.1924 2011.7451 -1997.8828 c2026.4873 -1993.9727 2041.8008 -1991.7842 2057.0293 -1991.2461 c2072.1719 -1990.71 2087.3281 -1992.1631 2102.4551 -1992.624 c2118.1807 -1993.1025 2133.9629 -1992.7412 2149.6953 -1992.7412 c2163.4824 -1992.7412 2176.6162 -1992.9629 2189.8711 -1997.2539 c2196.457 -1999.3867 2202.709 -2002.9268 2209.1201 -2005.5762 c2215.7852 -2008.3311 2222.7744 -2009.8643 2229.5332 -2012.3311 c2242.0293 -2016.8926 2252.0039 -2023.9775 2262.166 -2032.3643 c2270.4814 -2039.2275 2280.4072 -2045.3906 2286.5449 -2054.4551 C2282.5596 -2056.5674 2278.6875 -2058.875 2274.9746 -2061.4014 c2260.9609 -2070.9375 2246.9219 -2083.7383 2246.4141 -2101.8574 c2246.1787 -2110.2461 2259.1797 -2110.2227 2259.4141 -2101.8574 c2259.7461 -2090.0176 2269.5283 -2081.5176 2278.3477 -2074.9385 c2289.0723 -2066.9385 2301.127 -2061.4004 2313.8145 -2057.2773 c2326.7461 -2053.0723 2340.9932 -2050 2354.6484 -2050 C2378.126 -2050 Lf1910.1484 -2064.5547 m1913.4321 -2070.0625 1915.9478 -2075.7598 1918.6992 -2081.5234 c1924.7578 -2094.2148 1920.6909 -2107.0088 1917.1035 -2119.6494 c1913.7412 -2131.4951 1907.5488 -2142.3613 1902.813 -2153.6738 c1901.9375 -2155.7656 1901.0029 -2157.8477 1900.0469 -2159.9277 C1914.061 -2159.9277 L1914.21 -2159.5703 1914.3623 -2159.2119 1914.5078 -2158.8535 c1919.165 -2147.3955 1925.2178 -2136.5586 1929.0713 -2124.7676 c1932.8564 -2113.1836 1936.3262 -2100.8633 1934.1992 -2088.6094 c1932.1104 -2076.5781 1925.79 -2065.377 1919.5825 -2055.0215 c1906.9028 -2033.8691 1898.1406 -2008.5098 1896.96 -1983.7461 c1896.3486 -1970.9238 1899.0186 -1958.1338 1902.3921 -1945.832 c1902.5605 -1945.2188 1902.7485 -1944.6123 1902.9272 -1944.002 C1905.3208 -1957.7305 1909.4814 -1971.2393 1913.5391 -1984.4785 c1920.2275 -2006.3027 1928.3125 -2026.7305 1942.3818 -2044.8838 c1954.5039 -2060.5234 1967.8594 -2076.0879 1971.7012 -2096.0742 c1973.7217 -2106.584 1972.8125 -2119.0498 1971.3154 -2129.5762 c1969.8369 -2139.9775 1965.6699 -2149.6953 1963.5332 -2159.9277 C1976.8682 -2159.9277 L1978.9375 -2151.5078 1981.9668 -2143.3369 1983.5654 -2134.7783 c1985.7275 -2123.209 1986.1602 -2110.542 1985.1025 -2098.8252 c1983.2266 -2078.0469 1971.2109 -2060.9385 1958.8057 -2044.9512 c1952.5898 -2036.9414 1946.2529 -2029.1777 1941.3467 -2020.2646 c1935.6309 -2009.8809 1931.6855 -1998.627 1928.0645 -1987.3779 c1920.583 -1964.1367 1912.3564 -1939.6885 1914.1494 -1914.9697 c1914.6084 -1908.6445 1907.0293 -1907.2764 1903.0532 -1910.373 c1895.9126 -1915.9355 1894.4644 -1927.3926 1891.8862 -1935.54 c1887.874 -1948.2188 1884.9092 -1961.4609 1884.0332 -1974.7539 c1882.3774 -1999.8662 1890.7656 -2027.1797 1901.5972 -2049.5869 c1904.0957 -2054.7568 1907.2119 -2059.6289 1910.1484 -2064.5547 cf*u1 D3592.6826 -1666.9434 m3601.5488 -1670.8945 3611.3447 -1673.376 3620.1377 -1668.0459 c3632.7197 -1660.417 3636.502 -1640.3301 3633.6426 -1626.9229 c3631.7715 -1618.1465 3626.4238 -1610.9414 3618.1143 -1607.3809 c3608.8916 -1603.4277 3597.1475 -1602.79 3587.9316 -1606.8545 c3585.1289 -1608.0898 3584.2451 -1610.373 3584.6162 -1612.6084 C3581.9121 -1613.7383 3579.4307 -1615.5186 3577.2939 -1618.4668 c3571.9043 -1625.9063 3571.1895 -1636.4199 3572.8682 -1645.1768 c3574.8359 -1655.4395 3583.5986 -1662.8955 3592.6826 -1666.9434 cf0 D3587.8262 -1625.9844 m3589.1543 -1623.7939 3592.3203 -1623.3701 3594.5967 -1623.1738 c3598.834 -1622.8066 3603.0088 -1622.7813 3607.1934 -1621.9014 c3609.4141 -1621.4346 3610.7734 -1620.1719 3611.4199 -1618.6172 C3611.9375 -1618.7979 3612.4375 -1618.9844 3612.9004 -1619.1826 c3617.5488 -1621.1748 3620.6719 -1625.707 3621.2344 -1630.748 c3622.2031 -1639.4131 3620.6279 -1650.6133 3613.8086 -1656.6875 c3609.8418 -1660.2197 3603.3848 -1657.1523 3599.2754 -1655.6914 c3592.6572 -1653.3398 3587.1494 -1648.6084 3585.4033 -1641.7207 c3584.1514 -1636.7803 3585.21 -1630.2998 3587.8262 -1625.9844 cf*U*u1 D3206.9414 -1878.793 m3210.9258 -1891.7207 3217.2461 -1903.877 3224.3184 -1915.3555 c3236.6016 -1935.2949 3250.7471 -1954.7842 3269.3066 -1969.3379 c3278.6387 -1976.6563 3288.8027 -1982.3369 3299.8359 -1986.6621 c3312.9883 -1991.8184 3325.2656 -1998.9023 3338.7402 -2003.3184 c3351.1953 -2007.4004 3364.4336 -2010.3369 3377.1631 -2013.4609 c3384.0059 -2015.1406 3390.9395 -2016.4658 3397.8457 -2017.8477 c3402.7578 -2018.8301 3406.9795 -2021.2236 3411.793 -2022.3096 C3409.4512 -2030.2002 3406.6914 -2037.9697 3404.0479 -2045.7617 c3400.9375 -2054.9297 3399.5869 -2064.6641 3397.7705 -2074.1533 c3396.0146 -2083.3213 3393.8662 -2092.4033 3392.1152 -2101.5762 c3390.3955 -2110.5938 3388.9414 -2119.6504 3387.7715 -2128.7559 c3386.6025 -2137.8652 3386.7393 -2146.8838 3386.7393 -2156.0508 c3386.7393 -2157.3477 3386.7393 -2158.6387 3386.7402 -2159.9277 C3400 -2159.9277 L3400 -2159.8379 3400 -2159.749 3400 -2159.6592 C3400 -2138.2822 L3400 -2130.2715 3401.8145 -2121.8418 3403.1582 -2113.9668 c3405.7813 -2098.5977 3409.2725 -2083.4219 3412.167 -2068.1064 c3415.126 -2052.4453 3420.8594 -2037.876 3425.2734 -2022.6123 c3428.415 -2011.748 3430.4844 -2000.4199 3434.3047 -1989.7148 C3439.918 -1990.3232 3442.5088 -1982.7207 3438.957 -1978.6797 C3441.4736 -1972.7334 3443.1416 -1966.46 3444.875 -1960.251 c3446.9805 -1952.7139 3449.6982 -1945.377 3452.3691 -1938.0273 c3463.1035 -1908.498 3469.8467 -1877.6348 3478.4492 -1847.4629 c3483.3955 -1830.1172 3486.0674 -1812.2783 3487.5996 -1794.3496 c3488.3564 -1785.501 3488.3574 -1776.6533 3489.2539 -1767.8203 c3490.2383 -1758.124 3490.958 -1748.4023 3491.3936 -1738.665 c3492.2285 -1719.9971 3491.583 -1701.3643 3488.9824 -1682.8584 c3487.3555 -1671.2822 3486.4521 -1659.5781 3486.2734 -1647.8701 C3488.8047 -1653.5439 3491.0283 -1659.3887 3493.5957 -1665.2734 c3499.5479 -1678.917 3502.3027 -1693.1133 3504.7793 -1707.7393 c3509.8496 -1737.6816 3512.7041 -1767.7979 3511.4473 -1798.1797 c3510.8086 -1813.6406 3510.8066 -1829.2031 3509.793 -1844.6348 c3508.7275 -1860.8662 3504.9033 -1876.7617 3501.0371 -1892.5146 c3499.1934 -1900.0293 3497.084 -1907.4736 3494.6689 -1914.8252 c3493.6289 -1917.9883 3493.4648 -1921.7344 3492.8027 -1925.0146 c3492.0205 -1928.8994 3491.043 -1932.7393 3489.959 -1936.5498 c3488.0234 -1943.3486 3485.8164 -1950.0879 3483.582 -1956.7949 c3481.25 -1963.7979 3479.5479 -1971.0137 3477.1758 -1977.9756 c3474.7656 -1985.0479 3470.7764 -1991.3418 3469.3281 -1998.7656 c3468.5127 -2002.9404 3466.5176 -2007.1963 3465.1709 -2011.2373 c3463.5869 -2015.9883 3462.0039 -2020.7402 3460.4199 -2025.4912 c3457.6787 -2033.7168 3451.8516 -2040.8701 3451.6289 -2049.8613 c3451.4229 -2058.168 3446.9883 -2066.3896 3444.7803 -2074.2832 c3440.1104 -2090.9766 3438.6563 -2108.3838 3436.0693 -2125.4668 c3434.3643 -2136.7246 3434.5635 -2148.3447 3435.0283 -2159.9277 C3448.3516 -2159.9277 L3448.1543 -2151.6396 3448.0371 -2143.3516 3448.3496 -2135.0596 c3448.9121 -2120.1357 3451.6289 -2104.7813 3454.4443 -2090.125 c3455.8193 -2082.9678 3457.6641 -2075.917 3460.0117 -2069.0186 c3460.0791 -2068.8203 3460.1484 -2068.623 3460.2168 -2068.4248 C3461.9805 -2071.9199 3463.0957 -2075.5938 3464.1436 -2079.6836 c3467.6348 -2093.3184 3471.6387 -2106.0361 3472.2031 -2120.2568 c3472.7285 -2133.4502 3473.3066 -2146.7402 3472.8086 -2159.9277 C3485.9805 -2159.9277 L3486.2246 -2147.3418 3485.3496 -2134.7109 3485.248 -2122.1348 c3485.1387 -2108.2949 3482.3008 -2094.5508 3478.2217 -2081.377 c3476.167 -2074.7402 3474.6709 -2068.041 3471.7021 -2061.7188 c3470.2324 -2058.5879 3465.0576 -2054.6328 3464.6748 -2051.1738 c3464.6338 -2050.8008 3464.5596 -2050.4512 3464.4717 -2050.1123 C3464.5889 -2049.4033 3464.7246 -2048.6992 3464.9121 -2048.0068 c3466.8984 -2040.7051 3471.166 -2034.3164 3473.5488 -2027.165 c3474.7051 -2023.6982 3475.8604 -2020.2305 3477.0156 -2016.7637 C3482.2646 -2020.8457 3485.6777 -2025.7988 3488.8506 -2031.7275 c3492.7041 -2038.9297 3496.3672 -2046.04 3498.7725 -2053.877 c3503.5586 -2069.4736 3505.5234 -2085.5615 3505.5234 -2101.7969 c3505.5234 -2109.46 3505.7295 -2117.1582 3505.3584 -2124.8145 c3504.9824 -2132.5811 3504.0313 -2140.2617 3503.9111 -2148.0488 c3503.8496 -2152.0293 3503.333 -2155.9883 3502.6543 -2159.9277 C3515.6426 -2159.9277 L3516.1611 -2156.6055 3516.5889 -2153.2676 3516.8281 -2149.8965 c3518.0557 -2132.6104 3518.5234 -2115.375 3518.5234 -2098.041 c3518.5234 -2080.293 3515.4668 -2061.6953 3509.4922 -2044.9385 c3503.999 -2029.5342 3495.6729 -2013.8779 3482.0449 -2004.3838 c3481.7939 -2004.209 3481.5439 -2004.0615 3481.2949 -2003.9277 C3483.3457 -1997.7734 3485.3154 -1991.9395 3487.8955 -1985.9414 c3490.793 -1979.2041 3492.2695 -1971.998 3494.5342 -1965.0313 c3498.9971 -1951.3047 3503.668 -1937.7041 3506.3027 -1923.4795 c3507.6836 -1916.0244 3510.1953 -1908.8818 3512.1494 -1901.5479 c3514.2813 -1893.5469 3516.0781 -1885.459 3517.8779 -1877.3779 c3521.4111 -1861.5166 3523.2227 -1845.5117 3523.2813 -1829.2617 c3523.3457 -1811.0693 3525.1113 -1792.9443 3524.7842 -1774.7393 c3524.4473 -1755.9951 3521.6797 -1737.7705 3519.4707 -1719.2158 c3517.291 -1700.9141 3514.5273 -1681.6494 3507.3486 -1664.583 c3504.2793 -1657.2881 3501.5762 -1649.8486 3498.498 -1642.5703 c3495.0859 -1634.5 3490.3525 -1627.3984 3484.9434 -1620.541 c3481.1025 -1615.6709 3474.1836 -1620.1436 3473.8477 -1625.1367 c3472.7637 -1641.248 3473.2383 -1657.3604 3474.8613 -1673.418 c3476.4785 -1689.4111 3478.6172 -1705.0479 3478.7383 -1721.1719 c3478.8594 -1737.4023 3477.6953 -1753.626 3476.0566 -1769.7646 c3475.2881 -1777.3301 3475.2998 -1784.9219 3474.7451 -1792.5117 c3474.1641 -1800.4531 3473.9453 -1809.1133 3472.0537 -1816.8564 c3470.2939 -1824.0557 3468.9961 -1831.3613 3467.3066 -1838.5771 c3465.46 -1846.4639 3462.6563 -1854.0664 3460.5635 -1861.8887 c3456.4795 -1877.1523 3452.9395 -1892.5537 3448.6123 -1907.7539 c3444.3955 -1922.5684 3438.6445 -1936.8125 3433.9082 -1951.4492 c3431.6787 -1958.3389 3430.0889 -1965.3916 3427.582 -1972.1934 C3426.3086 -1971.332 3425.0518 -1970.4395 3423.793 -1969.5488 c3419.623 -1966.6006 3415.3525 -1964.54 3410.4775 -1963.0166 c3399.5391 -1959.5996 3387.9844 -1958.918 3377.4746 -1954.2354 c3372.541 -1952.0371 3367.7598 -1949.5234 3362.791 -1947.4004 c3357.5654 -1945.168 3352.0801 -1944.0098 3346.6924 -1942.2344 c3341.0088 -1940.3613 3335.1914 -1939.1543 3329.8633 -1936.4189 c3324.6533 -1933.7461 3319.6982 -1930.6787 3314.2852 -1928.4082 c3308.8867 -1926.1455 3303.7148 -1922.4033 3298.6895 -1919.4102 c3293.5459 -1916.3467 3288.4727 -1913.168 3283.457 -1909.9014 c3273.4043 -1903.3535 3263.7422 -1896.2471 3254.6523 -1888.415 c3246.0586 -1881.0117 3237.4648 -1872.9414 3230.002 -1864.3906 c3222.8008 -1856.1387 3218.3379 -1845.3984 3213.5488 -1835.667 c3210.6133 -1829.7021 3201.4258 -1832.7549 3201.4365 -1838.9473 c3201.4482 -1845.625 3202.959 -1852.0469 3203.0596 -1858.6641 c3203.1689 -1865.9219 3204.8379 -1871.9658 3206.9414 -1878.793 cf0 D3218.7783 -1871.0635 m3226.0508 -1880.3496 3235.3262 -1888.6025 3244.1172 -1896.4316 c3262.832 -1913.0996 3284.3154 -1926.3984 3306.0508 -1938.7129 c3311.1475 -1941.5996 3316.5918 -1943.9932 3321.752 -1946.8184 c3327.1436 -1949.7686 3332.4492 -1951.3857 3338.2793 -1953.1484 c3343.7832 -1954.8115 3349.5195 -1956.2725 3354.9258 -1958.1611 c3360.4385 -1960.0879 3365.6162 -1963.0264 3370.9131 -1965.46 c3376.1465 -1967.8652 3381.4043 -1969.9473 3387.0879 -1970.9316 c3393.2363 -1971.9951 3399.3164 -1973.3359 3405.3184 -1975.0439 c3411.8711 -1976.9092 3417.2539 -1980.8418 3422.918 -1984.3574 C3421.6895 -1987.5635 3420.4834 -1990.7793 3419.3574 -1994.0342 c3417.5684 -1999.2021 3416.3262 -2004.4961 3415.0674 -2009.792 C3410.3418 -2009.417 3405.7188 -2006.8613 3401.3027 -2005.3125 c3395.3301 -2003.2178 3388.3516 -2002.7158 3382.1602 -2001.291 c3369.9414 -1998.4805 3357.7617 -1994.957 3345.6172 -1991.793 c3332.9893 -1988.5039 3321.3438 -1982.0273 3309.5391 -1976.6426 c3299.0313 -1971.8506 3289.0059 -1967.7637 3279.5547 -1960.918 c3261.9355 -1948.1543 3249.124 -1929.9063 3237.4756 -1911.8564 c3230.4072 -1900.9033 3224.2334 -1889.377 3220.0225 -1877.0166 c3219.1553 -1874.4727 3218.3789 -1872.0674 3217.7402 -1869.6611 C3218.0879 -1870.127 3218.4189 -1870.6045 3218.7783 -1871.0635 cf*U3590.2813 -2159.9277 m3590.9609 -2144.2598 3592.9482 -2129.1465 3596.8047 -2113.5352 c3601.5527 -2094.3096 3607.6807 -2076.0918 3615.6064 -2057.9443 c3619.1045 -2049.9365 3622.6328 -2041.9561 3626.0137 -2033.8965 c3629.6992 -2025.1152 3631.8818 -2015.6572 3635.0518 -2006.6797 c3638.1611 -1997.8721 3641.9492 -1988.9951 3645.8418 -1980.5039 c3650.0742 -1971.2656 3654.0791 -1962.002 3658.2432 -1952.7383 c3665.8213 -1935.8721 3675.0566 -1919.8545 3681.4219 -1902.4424 c3688.2637 -1883.7275 3695.4814 -1865.1904 3702.0713 -1846.3828 c3708.4141 -1828.2822 3711.502 -1809.0264 3715.6797 -1790.3525 c3724.2578 -1752.0117 3725.2148 -1712.7734 3723.8164 -1673.6699 c3722.3828 -1633.5732 3717.7412 -1593.292 3707.8086 -1554.3643 c3703.123 -1535.9961 3696.1387 -1518.2842 3689.4951 -1500.5635 c3682.7637 -1482.6094 3677.4434 -1464.3203 3671.4424 -1446.1357 c3665.2148 -1427.2656 3660.2813 -1408.1416 3654.9863 -1389.0088 c3652.3887 -1379.6211 3651.1211 -1369.8965 3648.3877 -1360.5889 c3645.5342 -1350.874 3642.2881 -1341.2666 3639.6846 -1331.4795 c3637.8887 -1324.7285 3637.4766 -1317.6396 3636.8896 -1310.708 c3636.207 -1302.6494 3634.7012 -1295.4785 3632.8516 -1287.6475 c3631.126 -1280.3359 3631.1973 -1272.9072 3630.4746 -1265.4824 c3629.6875 -1257.3828 3629.3438 -1249.2432 3629.1348 -1241.1104 c3628.3623 -1211.123 3628.7139 -1180.6885 3630.4043 -1150.7402 c3632.0918 -1120.8613 3636.4922 -1091.2432 3643.2959 -1062.1084 c3643.5391 -1061.0669 3643.7988 -1060.0273 3644.0518 -1058.9873 C3643.4971 -1063.6807 3642.9297 -1068.3701 3642.2939 -1073.0444 c3641.1641 -1081.3652 3638.3887 -1089.3604 3637.4258 -1097.707 c3636.375 -1106.8047 3636.9775 -1116.1885 3636.9775 -1125.3359 c3636.9775 -1144.376 3635.6191 -1163.3457 3635.0801 -1182.3691 c3634.5488 -1201.1094 3636.2637 -1219.6338 3638.4844 -1238.2217 c3640.7539 -1257.21 3643.4014 -1275.8789 3647.5801 -1294.5332 c3651.8027 -1313.3828 3654.0176 -1332.7715 3659.7793 -1351.1641 c3665.4248 -1369.1807 3668.8555 -1388.1484 3673.1094 -1406.543 c3682.0059 -1445.0068 3695.707 -1481.6904 3710.3516 -1518.3037 c3717.4531 -1536.0557 3722.0117 -1554.1748 3727.1074 -1572.5762 c3732.2168 -1591.0244 3735.958 -1609.8438 3738.8506 -1628.7578 c3741.8535 -1648.3975 3746.3418 -1667.7549 3748.7188 -1687.5098 c3751.0605 -1706.9609 3750.9082 -1726.4121 3751.2041 -1745.9619 c3751.5039 -1765.6846 3751.9805 -1785.4053 3751.4727 -1805.1289 c3751.248 -1813.8604 3751.1719 -1822.7109 3749.8906 -1831.3623 c3748.5059 -1840.709 3745.3047 -1849.5713 3743.3486 -1858.7842 c3741.8184 -1865.9863 3741.2148 -1873.3525 3739.7051 -1880.5469 c3738.2217 -1887.6084 3735.8848 -1894.4688 3733.2266 -1901.1641 c3728.1504 -1913.9541 3720.6445 -1925.6973 3714.4434 -1937.9453 c3707.3535 -1951.9492 3699.4551 -1965.5039 3692.6563 -1979.6689 c3686.3906 -1992.7236 3682.0107 -2006.4844 3677.7549 -2020.2959 c3675.5273 -2027.5225 3673.6309 -2034.8066 3671.875 -2042.1602 c3670.1055 -2049.5762 3666.6523 -2056.9004 3665.3242 -2064.3086 c3664.041 -2071.4736 3661.7578 -2078.46 3659.2549 -2085.2793 c3656.5742 -2092.582 3655.4609 -2100.3809 3654.1504 -2108.0459 c3651.1719 -2125.4805 3650.0791 -2142.6836 3650.1992 -2159.9277 C3662.7402 -2159.9277 L3662.6738 -2155.0947 3662.7275 -2150.2559 3662.9414 -2145.4082 c3663.792 -2126.1143 3665.832 -2104.9697 3672.5078 -2086.7803 c3675.5957 -2078.3691 3676.8672 -2069.46 3679.9961 -2061.1367 c3683.4961 -2051.8262 3685.1084 -2041.877 3687.7559 -2032.3125 c3692.7637 -2014.2266 3698.7734 -1996.4883 3707.0869 -1979.6514 c3711.252 -1971.2158 3715.8018 -1962.999 3720.2383 -1954.7061 c3724.4336 -1946.8633 3728.0195 -1938.6162 3732.4736 -1930.9268 c3741.4502 -1915.4316 3748.9834 -1899.5117 3752.6914 -1881.8525 c3754.4893 -1873.293 3755.1914 -1864.582 3757.3027 -1856.0566 c3759.5625 -1846.9385 3762.0352 -1838.1963 3763.25 -1828.8369 c3765.665 -1810.2207 3764.832 -1790.7627 3764.6191 -1772.0322 c3764.3945 -1752.4121 3764.4824 -1732.7188 3763.7705 -1713.1113 c3763.0703 -1693.8223 3760.3223 -1674.624 3756.8848 -1655.6514 c3753.4004 -1636.4268 3750.416 -1617.0771 3746.5215 -1597.9287 c3742.7266 -1579.2734 3737.6143 -1560.8506 3732.498 -1542.5215 c3727.3057 -1523.9189 3719.2246 -1506.3662 3712.7061 -1488.1953 c3706.0781 -1469.7197 3698.377 -1451.75 3693.0508 -1432.8271 c3687.8086 -1414.2061 3683.5723 -1395.2275 3679.4268 -1376.3389 c3677.4873 -1367.502 3675.5137 -1358.5879 3672.9805 -1349.9014 c3671.6914 -1345.4795 3670.2051 -1341.1133 3668.75 -1336.7441 c3667.0908 -1331.7607 3667.0254 -1325.5859 3666.1025 -1320.3867 c3663.5693 -1306.0996 3660.3496 -1291.9424 3657.0977 -1277.8057 c3653.7988 -1263.4639 3652.6641 -1248.3389 3650.9531 -1233.7275 c3649.3037 -1219.6436 3647.9824 -1205.543 3647.9502 -1191.3535 c3647.916 -1176.1768 3649.0605 -1161.0137 3649.6436 -1145.8555 c3650.1797 -1131.9375 3649.9775 -1117.9971 3649.9775 -1104.0723 c3649.9775 -1096.9395 3652.1279 -1090.0625 3653.6699 -1083.1611 c3655.3252 -1075.7578 3655.9658 -1068.0645 3656.8818 -1060.543 c3658.6914 -1045.6797 3660.376 -1030.812 3663.502 -1016.1528 c3666.1455 -1003.7568 3669.2031 -989.8491 3678.166 -980.3823 c3683.5635 -974.6807 3675.8379 -966.2324 3670.0928 -970.2202 C3667.3379 -968.9141 3663.7471 -969.2344 3661.6221 -972.5054 c3651.1826 -988.5703 3644.7178 -1006.2041 3639.9844 -1024.6377 c3635.0859 -1043.7139 3629.5449 -1062.4414 3625.8428 -1081.8145 c3618.4854 -1120.3223 3616.7422 -1158.9639 3616.3105 -1198.0605 c3616.0879 -1218.1035 3615.5996 -1238.1357 3616.8877 -1258.1563 c3617.4912 -1267.5449 3617.9717 -1277.0479 3619.3926 -1286.3516 c3620.1592 -1291.3711 3622.416 -1296.2676 3623.0029 -1301.2529 c3623.6465 -1306.7139 3623.9971 -1312.2109 3624.5059 -1317.6846 c3626.3066 -1337.0732 3634.7197 -1354.4746 3637.9805 -1373.46 c3639.6387 -1383.1123 3642.4434 -1392.5635 3645.1289 -1401.9668 c3647.9639 -1411.8975 3650.2363 -1421.9658 3653.2451 -1431.8613 c3658.8281 -1450.2256 3664.4033 -1468.7256 3670.7012 -1486.8535 c3676.9316 -1504.79 3684.165 -1522.3594 3690.1211 -1540.3945 c3702.7129 -1578.5215 3707.8057 -1619.2373 3710.1387 -1659.1748 c3712.4541 -1698.834 3712.3096 -1738.8027 3704.9766 -1777.9609 c3701.459 -1796.749 3697.4131 -1815.7949 3692.2598 -1834.2031 c3686.9775 -1853.0723 3679.6973 -1871.7207 3672.4941 -1889.9365 c3666.8066 -1904.3232 3660.7061 -1918.2539 3653.793 -1932.0986 c3646.9297 -1945.8457 3641.1416 -1960.0479 3634.6094 -1973.9434 c3628.2354 -1987.502 3622.8096 -2001.6709 3618.2969 -2015.9502 c3613.7627 -2030.3008 3607.5781 -2043.791 3601.6357 -2057.5938 c3589.5303 -2085.71 3580.8223 -2115.8457 3577.6074 -2146.3652 c3577.1328 -2150.8584 3576.8828 -2155.3848 3576.7607 -2159.9277 C3590.2813 -2159.9277 Lf*u1 D3778.7168 -302.1235 m3776.0176 -296.5635 3773.6807 -290.8315 3770.8438 -285.3413 c3767.6143 -279.0938 3763.4297 -274.1592 3758.582 -269.1416 c3754.5195 -264.936 3750.9063 -260.2559 3747.2236 -255.7212 c3743.6113 -251.272 3739.5723 -246.0347 3733.8965 -244.1455 c3727.5957 -242.0474 3721.3633 -240.3335 3714.8916 -238.9248 c3711.2773 -238.1382 3709.0059 -235.9116 3705.1172 -236.0591 c3705.0977 -236.0596 3705.0801 -236.0625 3705.0605 -236.0635 C3705.3076 -235.5972 3705.5449 -235.125 3705.7598 -234.6377 C3706.1367 -233.8784 3706.4404 -233.0913 3706.6689 -232.2773 c3706.7539 -232.0068 3706.8242 -231.7783 3706.8838 -231.5781 C3706.998 -231.5596 3707.3086 -231.1616 3708 -229.9375 c3709.4063 -227.4502 3710.4326 -224.7095 3711.4541 -222.0493 c3715.4453 -211.6563 3716.8984 -200.1362 3715.3594 -189.1304 c3714.6084 -183.7637 3712.1289 -178.937 3710.2539 -173.9194 c3708.1367 -168.2534 3705.376 -162.8394 3702.5938 -157.4795 c3697.5654 -147.7979 3693.6221 -136.6895 3686.084 -128.6172 c3681.0586 -123.2358 3673.3906 -129.6519 3675.4258 -135.4385 C3674.752 -135.9668 3674.0654 -136.4771 3673.3721 -136.978 c3670.334 -139.1724 3667.1758 -141.2075 3663.9863 -143.1724 c3655.3809 -148.4741 3649.0166 -157.1304 3642.5986 -164.8564 c3638.8984 -169.3115 3635.6611 -173.5244 3633.1211 -178.7515 c3630.4551 -184.2358 3628.375 -190.0068 3626.5635 -195.8208 c3624.8086 -201.4512 3622.752 -207.4048 3622.7148 -213.3276 c3622.7012 -215.5107 3622.7402 -218.1265 3622.373 -220.6133 C3622.3027 -220.4722 3622.2324 -220.3354 3622.165 -220.208 c3620.6797 -217.3984 3617.0605 -215.1035 3614.6699 -213.0977 c3609.0176 -208.353 3603.4092 -203.5186 3598.1846 -198.3037 c3595.7988 -195.9229 3593.3926 -193.5913 3590.8076 -191.4258 c3588.7451 -189.6987 3587.4658 -187.4199 3585.1074 -185.9443 c3583.4873 -184.9307 3579.4844 -183.5649 3578.9131 -182.9956 c3576.377 -180.4702 3573.6104 -178.1978 3570.5195 -176.3872 c3567.7246 -174.751 3564.7549 -173.2466 3561.8945 -171.6904 c3559.291 -170.2739 3556.1367 -169.6357 3553.71 -167.9561 c3547.8672 -163.9102 3542.9023 -159.2896 3536.249 -156.5117 c3533.2891 -155.2754 3529.7266 -155.1284 3526.6162 -154.396 c3523.2725 -153.6084 3520.0273 -152.2339 3516.7119 -151.3066 c3515.1289 -150.8638 3513.5332 -150.4717 3511.9307 -150.1074 C3511.6387 -147.1069 3509.5586 -144.2568 3505.6885 -144.1348 c3502.4824 -144.0332 3500.0479 -143.0586 3498.4072 -140.2314 c3497.2197 -138.1846 3498.3105 -134.6201 3498.5283 -132.4214 c3498.8242 -129.4263 3498.4414 -126.4658 3497.7021 -123.5664 c3496.5117 -118.8975 3493.4834 -115.4756 3489.3389 -113.1763 c3487.4502 -112.1284 3485.4746 -111.3174 3483.6289 -110.1787 c3482.2119 -109.3057 3480.3281 -109.2354 3478.9922 -108.1997 C3478.9775 -108.1128 3478.957 -108.0083 3478.9287 -107.873 C3478.8438 -106.5332 3478.958 -105.147 3479.0117 -103.8081 c3479.1045 -101.5435 3479.6328 -100.0171 3480.9277 -98.2231 c3483.0977 -95.2168 3486.0879 -91.5327 3485.9102 -87.5684 c3485.7139 -83.1665 3483.0527 -79.3696 3478.6465 -78.1992 c3476.4873 -77.626 3474.5449 -77.1353 3472.3184 -77.248 C3472.3994 -76.9546 3472.4922 -76.6675 3472.5684 -76.3716 c3473.6201 -72.2803 3473.1875 -67.6924 3474.4219 -63.7251 c3474.9824 -61.9214 3475.3887 -60.0693 3475.9336 -58.2593 c3476.5518 -56.2056 3478.1318 -54.6377 3478.6963 -52.5845 c3479.7119 -48.8926 3479.9648 -44.8467 3478.6963 -41.2095 c3477.4248 -37.5635 3474.3945 -36.1021 3470.7012 -36.6699 c3465.1582 -37.5215 3461.1152 -43.1494 3457.5693 -46.9917 c3455.1836 -49.5771 3451.8516 -51.543 3449.2285 -53.9272 c3446.5 -56.4072 3443.9287 -59.0698 3441.3359 -61.6895 c3429.2383 -73.9126 3417.6973 -86.6729 3405.6377 -98.9341 c3394.3701 -110.3906 3385.1279 -123.0127 3376.6797 -136.6616 c3369.3838 -148.4478 3361.4922 -160.1191 3360.0508 -174.0571 C3352.4199 -179.9121 3345.9121 -187.2363 3340.1133 -194.8677 c3331.0273 -206.8252 3324.1152 -220.2246 3317.6777 -233.7319 c3310.498 -248.7969 3303.9482 -264.1782 3298.2969 -279.8828 c3292.9414 -294.7671 3288.1016 -309.96 3284.2305 -325.2983 c3282.3154 -332.8838 3280.3193 -340.4263 3279.2832 -348.1895 c3278.208 -356.249 3276.1875 -364.1929 3275.875 -372.3643 c3275.7158 -376.5269 3278.8389 -378.6128 3282.0635 -378.6396 C3282.2793 -380.29 3283.3047 -381.811 3285.4297 -382.7285 c3296.0586 -387.3174 3307.0029 -392.0327 3317.0234 -397.8555 c3317.2744 -398.001 3317.5303 -398.1372 3317.7832 -398.2793 C3314.3857 -399.54 3311.4688 -401.7764 3309.4521 -405.6104 c3307.082 -410.1152 3307.3945 -415.4106 3307.5371 -420.3286 c3307.7314 -427.0645 3307.7656 -433.1113 3310.8184 -439.2832 c3313.5518 -444.8086 3320.5488 -446.8096 3324.8184 -450.8701 c3327.2139 -453.1479 3329.9473 -455.0908 3332.4834 -457.2056 c3335.6543 -459.8486 3338.2568 -463.1816 3341.043 -466.2144 c3351.8945 -478.0249 3363.2568 -489.3599 3374.5938 -500.7002 c3385.5342 -511.6436 3396.4531 -522.6592 3408.7129 -532.1465 c3414.4395 -536.5776 3420.6016 -540.332 3426.3857 -544.6699 c3432.7676 -549.4561 3438.9795 -555.209 3446.4014 -558.2861 c3452.5752 -560.8462 3459.3486 -562.625 3465.873 -564.0488 c3471.7686 -565.335 3478.6348 -565.2344 3483.7773 -561.7144 c3491.5859 -556.3687 3494.3359 -546.481 3498.1318 -538.2583 C3500.6465 -537.8589 3503.1475 -537.3799 3505.6885 -537.2427 c3510.292 -536.9941 3514.6494 -536.2979 3519.0781 -534.9971 c3521.9346 -534.1582 3524.8779 -532.7075 3527.7842 -532.3696 c3530.2754 -532.0801 3532.7129 -531.5918 3535.1475 -530.9961 c3542.79 -529.1255 3555.3701 -525.6655 3558.7432 -517.6719 C3559.5508 -518.4141 3560.3379 -519.1875 3561.082 -520.0229 c3564.3164 -523.6543 3566.4473 -528.4854 3569.0469 -532.5781 c3579.9902 -549.8125 3586.3359 -569.1367 3595.2412 -587.4194 c3598.0117 -593.1089 3599.4883 -599.9717 3604.1826 -604.6167 c3610.4199 -610.7896 3618.4199 -604.9917 3621.2266 -598.5479 c3622.7227 -595.1147 3623.0381 -591.4697 3623.0527 -587.7588 c3623.0693 -583.5557 3624.3799 -578.8936 3625.1777 -574.7637 c3626.2227 -569.3521 3626.3096 -563.8022 3626.2715 -558.2734 C3626.9795 -558.5439 3627.6572 -558.8262 3628.25 -559.04 c3629.1074 -559.3496 3629.8779 -559.7188 3630.6934 -560.1123 c3632.9277 -561.1885 3635.1973 -560.9277 3637.5918 -561.2686 c3644.8936 -562.3076 3652.1279 -563.6226 3659.1553 -560.5737 c3665.2031 -557.9502 3667.6367 -552.25 3667.5781 -545.9248 c3667.5508 -542.9331 3666.2773 -540.7139 3664.709 -538.6733 C3665.1836 -538.688 3665.6504 -538.6826 3666.1064 -538.6489 c3671.2549 -538.2666 3676.3916 -536.8452 3681.1895 -534.9839 c3688.8691 -532.0039 3696.3105 -529.9248 3701.2373 -522.8193 c3703.8291 -519.0815 3703.8262 -514.5596 3703.8262 -510.2295 c3703.8262 -505.5898 3705.1465 -500.6885 3702.4395 -496.5576 c3700.002 -492.8374 3695.5068 -492.022 3691.4395 -491.4561 c3689.3857 -491.1704 3687.3252 -490.9443 3685.2773 -490.6211 c3683.4883 -490.3384 3681.7139 -489.3994 3679.9043 -489.3994 c3667.8779 -489.3994 3656.2227 -489.4922 3644.3066 -487.6763 c3637.1172 -486.5806 3630.0088 -484.9839 3622.8818 -483.5308 C3630.6143 -475.7935 3637.0547 -466.6543 3642.8477 -457.3628 c3648.0313 -449.0474 3653.9111 -440.9805 3657.6426 -431.8931 c3659.4307 -427.5386 3659.708 -422.7026 3661.5 -418.4277 c3663.7715 -413.0078 3665.5352 -407.3755 3667.2217 -401.752 c3670.2744 -391.5796 3673.7148 -381.481 3673.7344 -370.7808 c3673.7383 -368.7334 3674.5977 -366.5947 3674.9688 -364.5894 c3675.5176 -361.6289 3675.3184 -358.5698 3675.3184 -355.5762 c3675.3184 -349.459 3676.6689 -343.6045 3676.9014 -337.5215 c3676.9639 -335.877 3676.9453 -334.2402 3676.8965 -332.6069 C3685.959 -338.2358 3696.5469 -340.8257 3706.8828 -343.1313 c3719.5059 -345.9473 3731.9316 -347.2046 3744.8262 -345.542 c3751.6865 -344.6572 3758.3867 -342.8584 3765.1768 -341.562 c3770.8359 -340.481 3776.9248 -340.6831 3781.585 -336.7251 c3785.8867 -333.0713 3786.0957 -326.6211 3786.1797 -321.3555 c3786.2793 -315.0562 3781.4238 -307.7021 3778.7168 -302.1235 cf0 D3387.9043 -143.2231 m3395.7334 -130.4775 3404.2969 -118.7686 3414.8301 -108.1265 c3426.0215 -96.8193 3436.7324 -85.0459 3447.8223 -73.6406 c3452.3789 -68.9556 3456.9473 -64.249 3461.9492 -60.0352 C3461.9277 -60.1133 3461.9072 -60.1919 3461.8857 -60.2695 c3461.0322 -63.3574 3461.1982 -66.4736 3460.707 -69.6313 c3460.1084 -73.4785 3458.9746 -77.3179 3457.3135 -80.8354 c3455.6045 -84.4546 3456.8174 -89.3735 3461.1973 -90.3838 c3463.9941 -91.0293 3466.5078 -91.1543 3469.3467 -90.7358 c3469.7363 -90.6787 3470.1387 -90.5977 3470.5469 -90.5161 C3469.4941 -91.978 3468.4561 -93.3496 3467.7451 -95.0581 c3464.2021 -103.5693 3464.6787 -115.3145 3473.5654 -120.0439 c3476.9453 -121.8433 3481.3301 -122.8286 3484.3164 -125.3154 c3488.0557 -128.4302 3484.1592 -137.1777 3485.167 -141.2764 c3485.6318 -143.168 3486.3037 -144.9009 3487.1523 -146.4722 C3474.748 -145.3628 3462.168 -145.3066 3449.8711 -147.062 c3443.1182 -148.0264 3436.3467 -148.73 3429.6094 -149.7314 c3422.376 -150.8057 3415.5762 -152.8096 3408.5703 -154.8179 c3397.4063 -158.0186 3386.1396 -160.5483 3375.4941 -165.1162 C3378.5303 -157.3579 3383.6074 -150.2183 3387.9043 -143.2231 cf3627.8965 -497.748 m3638.0771 -499.7129 3648.9492 -502 3659.3477 -502 C3673.9902 -502 L3677.5938 -502 3680.6729 -502.8188 3684.207 -503.3105 c3686.4863 -503.6279 3688.7969 -503.8833 3691.0527 -504.3662 C3690.9268 -505.2202 3690.8486 -506.0991 3690.8262 -506.9609 c3690.6875 -509.3599 3691.2832 -512.1143 3690.7793 -514.4688 c3689.6055 -519.957 3679.582 -521.8921 3675.166 -523.3579 c3670.9775 -524.748 3666.9072 -525.7139 3662.4824 -525.8232 c3658.5723 -525.9199 3655.2529 -524.605 3651.252 -526.0571 c3648.0313 -527.2261 3645.5732 -530.478 3646.7129 -534.0532 c3648.1719 -538.6343 3651.1328 -541.5449 3653.8945 -545.3198 c3656.7344 -549.2021 3651.3232 -549.5249 3648.2285 -549.583 c3645.2246 -549.6392 3642.2246 -548.9004 3639.2656 -548.479 c3639.2314 -548.4741 3634 -547.3184 3636.4443 -548.4961 c3635.2754 -547.9331 3634.0615 -547.4634 3632.8672 -546.96 c3632.4434 -546.7813 3632.0059 -546.606 3631.5615 -546.4336 C3630.7012 -545.1436 3629.3574 -544.1294 3627.7832 -543.4805 c3622.9189 -541.4756 3619.709 -536.5239 3614.7178 -534.4668 c3609.4648 -532.3022 3604.0381 -529.771 3599.2441 -526.7139 c3592.1533 -522.1914 3585.6396 -533.4468 3592.6836 -537.9385 c3598.0625 -541.3691 3604.1846 -544.0859 3610.0742 -546.5127 c3611.3652 -547.0444 3612.5625 -547.9492 3613.7061 -548.9238 C3613.4033 -549.6572 3613.2207 -550.4575 3613.2207 -551.332 c3613.2207 -557.4263 3613.4043 -563.5513 3612.8789 -569.6274 c3612.3145 -576.1475 3610.4297 -582.4253 3610.0801 -588.9814 C3606.9209 -581.625 3603.1914 -574.5596 3599.8535 -567.2827 c3596.5059 -559.9805 3594.4033 -552.2158 3590.7627 -545.022 c3586.9023 -537.3945 3582.834 -530.0928 3578.2676 -522.8491 c3574.209 -516.4111 3570.625 -510.54 3564.8203 -505.46 c3560.1406 -501.3647 3553.4707 -497.2573 3551.5508 -491.0039 c3551.543 -490.9771 3551.5303 -490.9551 3551.5215 -490.9287 C3554.7871 -491.9521 3557.9805 -493.438 3561.0225 -494.6592 c3568.1406 -497.5166 3575.2959 -500.293 3582.4189 -503.1416 c3589.1406 -505.8306 3596.208 -507.644 3603.1211 -509.8506 c3606.2959 -510.8638 3609.5605 -511.6157 3612.7939 -512.4053 c3615.3496 -513.0293 3619.3633 -512.9873 3621.459 -514.7495 c3627.832 -520.105 3637.0781 -510.9575 3630.6523 -505.5571 c3625.3486 -501.1001 3618.3184 -500.1777 3611.7285 -498.7422 c3609.5293 -498.2632 3607.3672 -497.6069 3605.2197 -496.9038 C3606.7051 -496.1035 3608.1484 -495.249 3609.5557 -494.3496 C3615.6689 -495.4058 3621.7471 -496.5615 3627.8965 -497.748 cf3587.4277 -491.2285 m3589.127 -491.4189 3590.8252 -491.6104 3592.5195 -491.8096 C3592.502 -492.2002 3592.5254 -492.5938 3592.5879 -492.9854 C3590.9434 -492.502 3589.3105 -491.9805 3587.7021 -491.3369 c3587.6113 -491.3003 3587.5195 -491.2646 3587.4277 -491.2285 Cf3772.9844 -325.6426 m3772.9053 -326.04 3772.8262 -326.4375 3772.7461 -326.835 C3772.3203 -328.5234 3772.2402 -328.6621 3772.5068 -327.2505 C3770.4531 -328.5059 3767.498 -327.4326 3765.2852 -328.0859 c3758.2637 -330.1577 3750.4453 -331.8174 3743.1758 -332.7549 c3729.3418 -334.5386 3716.2051 -332.1255 3702.8203 -328.8481 c3695.4189 -327.0361 3688.293 -324.6631 3681.9082 -320.4214 c3679.6982 -318.9536 3677.4541 -317.022 3675.4648 -314.8037 C3675.3535 -313.4126 3675.2539 -312.02 3675.1895 -310.624 c3674.832 -302.8774 3673.3398 -293.8569 3667.0781 -288.5791 c3660.9785 -283.4375 3652.2441 -291.6211 3657.1738 -297.0742 C3656.3818 -298.0791 3655.9111 -299.4146 3655.9824 -301.0942 c3656.2617 -307.6895 3658.7598 -313.8188 3662.5156 -319.1606 C3663.1016 -326.4604 3664.6943 -333.6821 3663.6328 -341.1387 c3662.9395 -346.0137 3662.3184 -350.6382 3662.3184 -355.5762 c3662.3184 -360.8457 3661.1191 -365.5806 3660.7344 -370.7808 c3660.3594 -375.8477 3659.8652 -379.9907 3658.4766 -384.9312 c3657.0625 -389.9575 3655.6777 -394.9912 3654.1777 -399.9927 c3652.8232 -404.5054 3651.3047 -408.9619 3649.6113 -413.3579 c3647.8975 -417.8096 3647.1895 -422.4961 3645.6367 -427.0273 c3644.3203 -430.8691 3642.1553 -434.3882 3639.8613 -437.7124 c3637.2139 -441.5488 3634.8574 -445.5054 3632.4277 -449.4941 c3625.3066 -461.1846 3617.1816 -472.521 3606.3291 -480.7031 C3595.3555 -479.228 3584.2227 -478.126 3573.3643 -476.2461 c3568.1836 -475.3491 3563.4863 -473.7549 3558.1875 -473.5615 c3552.3984 -473.3506 3546 -473.5615 3541 -473.5615 c3532.3857 -473.5615 3532.0225 -485.4629 3539.8984 -486.4839 C3540.1895 -487.0132 3540.5527 -487.5029 3540.9873 -487.9346 C3539.1768 -489.3135 3538.1328 -491.5864 3539.0156 -494.46 c3540.8203 -500.3374 3544.5654 -504.5254 3548.7227 -508.6201 C3547.7012 -509.6353 3547.1064 -510.9761 3546.9092 -512.4512 C3546.5225 -512.8179 3546.3838 -512.811 3545.7793 -513.1924 c3544.252 -514.1572 3542.5762 -514.9082 3540.8994 -515.5698 c3536.7969 -517.1885 3532.4902 -518.3789 3528.1719 -519.2505 c3526.165 -519.6558 3527.3975 -518.9609 3524.5488 -519.7236 c3521.0195 -520.6685 3517.5742 -521.8882 3514.0684 -522.918 c3510.8535 -523.8623 3507.7539 -524.1309 3504.4297 -524.3105 c3503.3984 -524.3662 3502.377 -524.4927 3501.3604 -524.6479 C3501.5557 -521.313 3501.5059 -517.98 3501.4863 -514.9707 c3501.4385 -507.5352 3500.8926 -500.2183 3500.2266 -492.8276 c3498.7334 -476.2744 3500.1621 -459.6104 3498.8105 -443.0459 c3497.4775 -426.7319 3492.7666 -410.5508 3488.5703 -394.7891 c3486.9248 -388.606 3484.918 -382.4888 3483.584 -376.2383 c3482.5352 -371.3301 3480.5977 -365.8413 3475.709 -363.584 c3468.1523 -360.0952 3461.5439 -371.2983 3469.1484 -374.8096 c3469.4482 -374.9478 3469.6475 -375.0234 3469.7783 -375.061 C3469.7754 -375.1104 3469.7891 -375.1836 3469.8359 -375.2959 c3470.2734 -376.3418 3470.5215 -377.4814 3470.7959 -378.5771 c3471.291 -380.5557 3471.5967 -382.5679 3472.2158 -384.5142 c3474.625 -392.0835 3476.499 -399.8799 3478.4805 -407.5781 c3482.4512 -423.0063 3485.9453 -438.2783 3486.4072 -454.2534 c3486.6289 -461.9131 3486.4805 -469.5815 3486.5586 -477.2432 c3486.6426 -485.5527 3488.0498 -493.8418 3488.1123 -502.0996 c3488.1631 -508.707 3488.6523 -515.2793 3488.3691 -521.8911 c3488.1104 -527.9399 3486.459 -532.686 3484.1318 -538.1455 c3482.3623 -542.2944 3480.4941 -546.8047 3477.4111 -550.1641 c3473.6475 -554.2646 3465.7051 -550.4761 3461.3438 -549.3823 c3454.0059 -547.5415 3448.502 -545.1104 3442.4502 -540.5718 c3435.8174 -535.5977 3429.1904 -530.7437 3422.3281 -526.1045 c3409.6113 -517.5078 3398.6641 -506.354 3387.8389 -495.5586 c3376.4639 -484.2153 3365.0977 -472.8574 3354.0859 -461.1602 c3347.9434 -454.6353 3342.0977 -448.4736 3335.2129 -442.7339 c3332.3896 -440.3809 3329.8525 -437.9878 3326.7012 -436.043 c3323.0088 -433.7632 3321.1582 -432.3618 3320.7031 -427.8208 c3320.377 -424.5703 3320.5732 -421.2583 3320.4639 -417.9946 c3320.3877 -415.7134 3319.9307 -412.5488 3321.6162 -410.7222 c3323.2646 -408.936 3328.5703 -409.8379 3330.6807 -409.9092 c3334.3613 -410.0342 3338.0273 -410.4077 3341.709 -410.5103 C3343.8828 -411.9639 3346.0039 -413.5146 3348.1602 -415.1465 c3357.8652 -422.4888 3367.3145 -430.1626 3375.9727 -438.728 c3380.3154 -443.0239 3384.6123 -447.3672 3388.9316 -451.686 c3391.8662 -454.6216 3395.0781 -457.5215 3397.1299 -461.1694 c3401.2373 -468.4756 3412.4678 -461.9243 3408.3545 -454.6079 c3403.498 -445.9707 3394.6631 -439.0327 3387.7578 -432.1274 c3378.7646 -423.1348 3369.1533 -414.9912 3359.0723 -407.2456 c3354.3193 -403.5928 3349.6504 -399.5967 3344.3857 -396.7139 c3338.6563 -393.5762 3332.5283 -391.1934 3326.6836 -388.2837 c3315.166 -382.5503 3303.8213 -376.6113 3291.9902 -371.5029 c3290.9521 -371.0547 3289.9336 -370.8838 3288.9658 -370.9175 C3289.3926 -364.4746 3290.9365 -358.1035 3291.8105 -351.7217 c3292.8789 -343.9282 3294.8633 -336.3779 3296.7656 -328.7544 c3300.4512 -313.9897 3305.2002 -299.4531 3310.2119 -285.0898 c3319.9785 -257.0996 3332.2451 -228.4141 3349.3887 -204.0967 c3357.2813 -192.9014 3367.1953 -183.4146 3379.5801 -177.4082 c3391.7969 -171.4829 3405.7559 -169.4272 3418.6348 -165.3687 c3424.7617 -163.438 3431.2656 -162.2446 3437.6816 -161.9136 c3445.0723 -161.5322 3452.3447 -159.499 3459.7461 -158.896 c3474.4795 -157.6958 3490.2754 -159.1147 3504.7598 -161.8672 c3511.0654 -163.0654 3517.0293 -165.1187 3523.1602 -166.9316 c3526.3174 -167.8647 3529.6328 -168.104 3532.793 -169.0474 c3535.6475 -169.8989 3538.6494 -172.6304 3540.9688 -174.4326 c3543.4014 -176.3237 3545.8027 -178.249 3548.3379 -180.0044 c3550.666 -181.6167 3554.1143 -182.2524 3556.667 -183.6411 c3559.542 -185.2051 3562.4736 -186.7432 3565.2891 -188.3921 c3567.9043 -189.9233 3569.5117 -192.7451 3572.0938 -194.2583 c3573.9834 -195.3647 3576.3994 -195.5103 3578.1699 -196.8789 c3579.1846 -197.6636 3579.2588 -198.7798 3580.2813 -199.5771 c3581.6162 -200.6191 3582.9004 -201.6938 3584.167 -202.8188 c3589.1807 -207.271 3594.1973 -212.0098 3598.998 -216.6738 c3603.7285 -221.2676 3609.334 -224.6753 3612.9932 -230.2305 c3615.8623 -234.585 3622.1338 -240.3115 3627.752 -237.0205 c3632.1572 -234.4399 3634.0596 -228.0938 3634.8975 -223.4351 c3635.9727 -217.4556 3635.665 -211.6953 3637.2383 -205.7832 c3638.9512 -199.3433 3640.9404 -192.9346 3643.6406 -186.834 c3646.5098 -180.3491 3650.6709 -175.3359 3655.2158 -169.9629 c3657.1768 -167.645 3659.1846 -165.3682 3661.21 -163.1074 c3662.9277 -161.1904 3665.457 -157.2314 3667.6973 -156.0649 c3670.7168 -154.4927 3673.5703 -152.5259 3676.3994 -150.6431 c3678.1152 -149.5015 3680.4238 -148.1035 3682.6309 -146.4697 C3683.918 -149.0034 3685.0752 -151.6123 3686.2822 -154.1196 c3689.748 -161.3169 3693.7422 -168.2363 3696.9844 -175.5439 c3699.8223 -181.939 3702.668 -188.688 3703.0703 -195.7363 c3703.4766 -202.8691 3701.7852 -210.3086 3699.4873 -217.0093 c3698.3242 -220.4038 3696.7939 -223.5112 3694.8809 -226.5435 c3694.8457 -226.5991 3693.6699 -229.7578 3693.7773 -229.7134 C3693.3867 -230.4473 3692.9307 -231.1567 3692.5117 -231.8628 c3689.9414 -236.1987 3686.7617 -242.7061 3691.1465 -247.0903 c3695.8213 -251.7656 3702.0986 -247.4731 3706.7148 -249.6318 c3713.1768 -252.6533 3720.7617 -253.5059 3727.5781 -255.731 c3733.1426 -257.5474 3736.2695 -262.8545 3739.873 -267.144 c3741.8965 -269.5508 3743.8047 -272.0439 3745.834 -274.4468 c3748.499 -277.6006 3752.0498 -280.2466 3754.4756 -283.5601 c3758.4326 -288.9639 3761.4014 -295.0532 3763.9121 -301.2383 c3765.1543 -304.2993 3766.7793 -307.2192 3768.2227 -310.1909 c3768.9727 -311.7368 3769.6953 -313.2959 3770.415 -314.856 c3771.2061 -316.5703 3773.1836 -319.4678 3773.1797 -321.3555 c3773.1758 -322.7905 3773.0957 -324.2129 3772.9844 -325.6426 Cf*U3661.0635 -255.1646 m3660.9326 -246.7896 3647.9326 -246.7769 3648.0635 -255.1646 c3648.1768 -262.4321 3649.7822 -269.6729 3653.7031 -275.8667 c3658.1729 -282.9272 3669.4258 -276.4111 3664.9277 -269.3052 c3662.1973 -264.9912 3661.1426 -260.2329 3661.0635 -255.1646 cf*u1 D3432.8145 -347.8418 m3428.8604 -346.1846 3424.7861 -345.8159 3420.7471 -344.5913 c3416.3066 -343.2446 3411.4531 -343.5479 3407.2217 -345.3628 c3398.791 -348.9795 3391.7852 -360.271 3394.8906 -369.3418 c3395.0879 -369.918 3395.3438 -370.4272 3395.6367 -370.8857 C3395.1426 -373.8594 3394.6035 -376.7471 3394.8428 -380.0127 c3395.1533 -384.2461 3396.082 -388.2959 3397.8066 -392.1748 c3401.2725 -399.9678 3408.1084 -405.79 3415.6563 -409.5156 c3423.5508 -413.4126 3433.2598 -415.5757 3441.8652 -412.9365 c3451.1445 -410.0898 3454.4326 -400.3188 3455.0732 -391.6001 c3456.3877 -373.7061 3450.3936 -355.208 3432.8145 -347.8418 cf0 D3442.0732 -391.5928 m3441.8594 -396.3379 3440.3389 -400.6821 3435.0996 -401.0708 c3429.5059 -401.4858 3423.6729 -399.2808 3418.9326 -396.4932 c3414.2852 -393.7603 3410.5352 -389.8828 3408.835 -384.7183 c3407.2734 -379.9746 3407.9414 -375.8271 3408.6074 -371.4111 C3411.6123 -368.7808 3411.4551 -363.5806 3408.1367 -361.2188 C3409.7539 -358.4824 3413.1387 -356.3721 3415.9756 -356.8188 c3421.8828 -357.7485 3427.8711 -359.2642 3432.9375 -362.5811 c3442.0469 -368.5454 3442.5059 -381.9434 3442.0732 -391.5928 cf*U*u1 D2094.791 -199.8945 m2102.0498 -199.9814 2109.5303 -202.0835 2116.8027 -202.6943 c2134.1328 -204.1489 2151.2959 -201.481 2168.5664 -201.481 c2176.1777 -201.481 2184.1934 -202.3188 2191.582 -200.3457 c2199.7842 -198.1553 2207.79 -195.2319 2215.5957 -191.9058 c2223.2402 -188.6479 2230.627 -184.8711 2238.0566 -181.1563 c2243.0264 -178.6709 2249.8193 -176.0493 2253.0586 -171.0835 C2253.4385 -173.2075 2254.8379 -175.1289 2257.5234 -175.9082 c2271.0322 -179.8291 2284.4346 -185.0264 2298.6094 -185.7441 c2304.6865 -186.0518 2311.6689 -186.3364 2317.5654 -187.7197 c2324.3887 -189.3208 2331.3213 -189.5137 2338.1543 -190.7866 c2344.499 -191.9688 2351.0176 -191.9756 2357.4463 -191.9785 c2364.3164 -191.9819 2371.1504 -192.9009 2378.0234 -192.5864 c2388.3418 -192.1152 2398.4092 -189.2168 2408.3281 -186.1265 C2402.8672 -191.25 2396.8018 -196.1738 2390.8838 -200.5786 c2380.1758 -208.5483 2363.5 -212.7793 2356.5859 -224.9595 c2354.6689 -228.3354 2356.082 -231.6763 2358.918 -233.853 c2364.5703 -238.1914 2371.7373 -235.0249 2378.0361 -234.7402 c2384.7842 -234.4355 2389.627 -243.5522 2393.707 -247.7153 c2398.8848 -252.9995 2406.7227 -258.6528 2414.0469 -260.1953 c2422.7969 -262.0381 2429.5508 -253.9077 2435.5527 -248.9287 c2438.3936 -246.5723 2440.7539 -243.5728 2442.6738 -240.4385 c2445.2236 -236.272 2444.7197 -231.7549 2444.7197 -227.0747 c2444.7197 -222.5244 2444.9199 -218.0229 2444.1709 -213.5254 c2443.3203 -208.4146 2442.5352 -203.3052 2442.0215 -198.1484 c2441.792 -195.8511 2441.7002 -193.582 2441.6943 -191.3267 C2449.6484 -195.0522 2458.0508 -196.9849 2466.8701 -197.896 c2478.0059 -199.0459 2488.8838 -196.8916 2499.9873 -196.7295 c2508.3633 -196.6074 2508.375 -183.6069 2499.9873 -183.7295 c2490.4873 -183.8682 2481.1387 -185.5522 2471.6152 -185.2173 c2462.2246 -184.8867 2452.9355 -182.8184 2444.668 -178.2817 c2443.9238 -177.874 2443.1904 -177.6289 2442.4766 -177.5098 C2442.624 -175.9004 2442.7764 -174.2856 2442.9219 -172.6567 c2443.3477 -167.8872 2443.166 -164.6675 2438.9756 -161.8008 c2435.1533 -159.1855 2431.208 -162.2163 2428.8711 -165.0444 c2428.1992 -165.8569 2427.7627 -166.7153 2427.5176 -167.5815 C2426.0938 -168.6958 2424.749 -169.8682 2423.4375 -171.0679 C2422.0332 -169.6855 2419.9824 -168.9834 2417.4863 -169.708 c2404.5146 -173.4727 2391.5879 -178.4595 2378.0234 -179.5864 c2371.209 -180.1528 2364.2686 -179.0498 2357.4463 -178.9785 c2351.1191 -178.9121 2344.791 -179.0361 2338.5859 -177.627 c2336.0547 -177.0518 2333.2383 -177.2646 2330.6523 -176.9907 c2327.4141 -176.6475 2324.1934 -175.8926 2321.0215 -175.1846 c2314.7002 -173.7725 2308.0352 -173.709 2301.5732 -173.0005 c2294.5977 -172.2358 2288.0586 -171.3179 2281.2412 -169.4678 c2274.4346 -167.6201 2267.752 -165.3384 2260.9805 -163.373 c2258.248 -162.5801 2256.0518 -163.4961 2254.6494 -165.1421 C2253.6426 -159.7002 2244.8652 -158.0195 2242.2363 -163.8608 C2242.1816 -163.915 2242.1338 -163.9619 2242.0693 -164.0278 C2240.8574 -164.9556 2239.7734 -165.7915 2238.4063 -166.4756 c2234.9502 -168.2031 2231.4951 -169.9312 2228.0391 -171.6587 c2221.1484 -175.105 2214.2813 -178.5542 2207.1309 -181.439 c2200.9297 -183.9404 2194.5654 -186.0171 2188.126 -187.8101 c2181.5742 -189.6338 2173.5762 -188.481 2166.7979 -188.481 c2151.9746 -188.481 2137.2607 -190.3691 2122.3652 -190.002 c2115.8301 -189.8408 2109.3379 -188.981 2102.8906 -187.959 c2099.6992 -187.4531 2096.6367 -186.9165 2093.4023 -186.8779 c2092.6377 -186.8687 2091.6895 -186.8867 2090.7158 -186.8364 C2093.8086 -182.7725 2098.7402 -179.6895 2102.5703 -176.8369 c2105.8174 -174.4189 2108.5996 -171.5098 2111.9561 -169.1895 c2115.5371 -166.7144 2119.373 -164.6138 2123.2188 -162.585 c2135.3066 -156.2061 2147.0947 -149.0259 2160.2637 -145.9731 C2162.0127 -146.5449 2164.0107 -146.0884 2165.6445 -144.9658 C2167.7695 -144.6758 2169.9336 -144.499 2172.1445 -144.4648 c2180.5195 -144.335 2180.5322 -131.335 2172.1445 -131.4648 c2169.7354 -131.502 2167.377 -131.6797 2165.0566 -131.9683 C2163.666 -130.7061 2162.0488 -129.6694 2160.3789 -128.7886 c2156.8945 -126.9517 2155.584 -126.5303 2152.2539 -124.8677 c2148.2236 -122.8564 2145.9316 -118.7217 2142.166 -116.5142 c2136.751 -113.3408 2131.1221 -110.6709 2125.3408 -108.2388 c2123.0859 -107.29 2120.8223 -106.3652 2118.5527 -105.4521 c2116.5313 -104.6387 2114.4648 -104.3857 2112.4268 -103.771 C2112.7773 -103.5498 2113.127 -103.3262 2113.4883 -103.1221 c2115.8203 -101.7026 2118.2813 -100.5034 2120.7549 -99.355 c2130.3809 -94.8872 2141.1973 -92.8359 2151.5293 -90.7363 c2162.3809 -88.5313 2173.1836 -88.5322 2184.2148 -88.7988 c2193.6631 -89.0269 2203.5264 -88.3003 2212.876 -89.9136 c2216.6172 -90.5591 2220.584 -91.7041 2223.584 -94.1348 c2227.6074 -97.394 2230.7715 -102.4692 2235.3828 -104.7749 c2240.0391 -107.103 2244.5508 -109.2813 2248.7314 -112.4097 c2250.8281 -113.9785 2253.0186 -115.3848 2255.0977 -116.981 c2255.9912 -117.6665 2257.1309 -118.2554 2258.1416 -118.9561 C2258.6533 -121.6538 2260.6025 -124 2264 -124 C2265.5098 -124 L2260.8184 -128.6558 2266.8809 -137.7754 2273.6191 -134.0747 c2300.6953 -119.2031 2330.123 -110.6133 2360.6973 -106.7075 c2376.4697 -104.6929 2392.3232 -105.311 2408.1279 -103.8804 c2424.04 -102.4399 2439.624 -100.2959 2455.6406 -100.144 c2471.8467 -99.9902 2487.9951 -100.5425 2504.0664 -102.7607 c2511.584 -103.7988 2518.7676 -105.4097 2526.0576 -107.4888 c2534.0156 -109.7583 2542.1533 -110.1172 2550.207 -112.0835 c2556.8906 -113.7148 2563.3105 -115.7085 2570.1328 -116.8784 c2577.415 -118.1279 2584.7012 -119.23 2591.75 -121.5117 c2597.5615 -123.3926 2602.8691 -127.8677 2607.6602 -131.5132 c2612.9678 -135.5518 2618.1719 -139.6572 2624.0918 -142.7808 c2632.2158 -147.0674 2640.6582 -149.0566 2649.3066 -149.9858 C2640.9824 -155.4932 2632.8438 -161.2871 2624.584 -166.9209 c2616.9082 -172.1567 2609.7627 -177.9199 2601.4395 -182.1514 c2594.0498 -185.9077 2586.7969 -190.0205 2579.5107 -193.9766 c2571.7598 -198.1851 2564.8672 -201.4697 2556.0674 -202.9673 c2554.2695 -203.2729 2552.498 -203.6118 2550.7217 -204.0249 c2548.876 -204.4546 2547.0654 -205.9233 2545.2383 -206.1475 c2546.6914 -205.9692 2541.9072 -204.3857 2541.165 -204.3188 c2540.2373 -204.2354 2539.4307 -203.125 2538.9248 -202.4355 c2538.2813 -201.5596 2537.7783 -200.5786 2537.2754 -199.6191 c2536.2178 -197.6016 2533.6914 -196.4956 2531.9766 -195.1362 c2528.4951 -192.376 2526.5469 -190.6895 2525.2588 -187.4927 c2523.8652 -184.0347 2522.3076 -180.6484 2520.9775 -177.1641 c2519.8564 -174.2256 2518.5664 -170.478 2516.6855 -167.9434 c2511.751 -161.292 2500.459 -167.7632 2505.4609 -174.5049 c2507.9082 -177.8037 2509.2197 -182.71 2510.832 -186.4995 c2511.8633 -188.9204 2512.9014 -191.3335 2513.8398 -193.7925 c2515.0615 -196.9941 2516.7617 -198.8086 2519.2061 -201.1611 c2523.0215 -204.833 2525.8867 -206.5278 2528.4063 -209.96 c2531.1416 -213.686 2534.4902 -216.0078 2538.7559 -216.9365 C2543.1885 -219.5913 2547.3467 -219.3433 2552.5908 -217.0962 c2558.4443 -214.5879 2565.4561 -214.6157 2571.5381 -212.5112 c2577.1699 -210.563 2582.2285 -207.2886 2587.4336 -204.4624 c2593.3232 -201.2646 2599.2305 -198.0952 2605.1221 -194.8979 c2629.3164 -181.7656 2650.1504 -163.2412 2674.3164 -149.9126 c2680.043 -146.7534 2677.4033 -137.7998 2671.0352 -137.7998 c2656.9609 -137.7998 2643.6611 -137.8931 2630.6533 -131.5557 c2618.96 -125.8584 2610.1592 -115.6919 2598.2949 -110.1792 c2585.5205 -104.2446 2570.4229 -104.8823 2557.0996 -100.5693 c2553.4893 -99.4009 2549.7832 -98.585 2546.0605 -97.8438 c2542.3506 -97.105 2538.3389 -97.3096 2534.7021 -96.3789 c2526.8984 -94.3813 2519.3711 -92.061 2511.3936 -90.7988 c2504.9922 -89.7856 2498.583 -89.0127 2492.1699 -88.4375 C2492.9824 -83.3926 2486.7227 -78.4038 2481.9316 -82.0063 C2479.4678 -81.3794 2477.2813 -80.1172 2474.791 -79.4326 c2471.0107 -78.3926 2467.375 -78.6572 2463.6738 -76.9194 c2456.0342 -73.3345 2449.5615 -67.5093 2441.626 -64.5005 c2437.9609 -63.1108 2434.1699 -62.3237 2430.3584 -61.4526 c2426.46 -60.5615 2422.8418 -58.9819 2418.9717 -58.0112 c2410.7383 -55.9458 2403.3926 -52.6538 2394.8242 -52.1113 c2387.1279 -51.6235 2379.5205 -50.5635 2371.7949 -50.3027 c2365.6328 -50.0947 2359.4551 -52.1108 2356.2197 -57.6582 c2354.7539 -60.1719 2354.4297 -63.2856 2354.1787 -66.1152 c2353.9053 -69.1924 2353.2412 -72.0483 2352.8721 -75.1377 c2352.1035 -81.5796 2352.3945 -88.5537 2352.498 -94.8086 C2342.2246 -96.3613 2332.0273 -98.4546 2321.9365 -100.8936 c2304.3945 -105.1328 2287.2197 -112.1753 2271.2119 -120.6191 C2272.334 -118.6899 2272.5322 -116.248 2271.1992 -114.1572 c2268.5049 -109.9307 2264.2705 -108.1362 2260.6816 -104.8916 c2256.2695 -100.9038 2250.3994 -97.7935 2245.1113 -95.1489 c2239.8691 -92.5278 2236.2969 -87.8018 2231.7402 -84.1104 c2227.6572 -80.8022 2222.7773 -78.8584 2217.7002 -77.6592 c2207.4697 -75.2427 2196.5186 -76.1055 2186.1035 -75.8481 c2172.5771 -75.5142 2159.626 -75.854 2146.333 -78.5552 c2134.7656 -80.9058 2123.4541 -83.832 2112.7139 -88.8174 c2107.9766 -91.0161 2100.8018 -94.3691 2098.3398 -99.3135 c2095.835 -104.3428 2096.7969 -110.7383 2102.3438 -113.4858 c2113.6855 -119.1021 2127.6758 -120.4609 2137.2012 -129.5718 c2139.0703 -131.3589 2141.1055 -132.9336 2143.167 -134.4863 c2144.2959 -135.3359 2145.5205 -136 2146.7754 -136.6313 C2135.8984 -140.7144 2125.6338 -146.623 2115.1465 -152.1567 c2106.8252 -156.5479 2100.2715 -162.4556 2092.8154 -167.9805 c2085.5859 -173.3384 2077.9219 -179.3643 2075.6006 -188.5015 c2075.0654 -190.6074 2075.5146 -193.3516 2077.2715 -194.8257 c2082.3574 -199.0918 2088.3359 -199.8174 2094.791 -199.8945 cf0 D2418.5684 -194.2998 m2422.2178 -190.9551 2425.3965 -187.2427 2428.8057 -183.7549 C2428.75 -184.3765 2428.6973 -184.9985 2428.6523 -185.6211 c2428.1299 -192.9009 2429.1787 -200.2817 2430.1523 -207.4785 c2431.1387 -214.7656 2431.7197 -221.5557 2431.7197 -228.9165 c2431.7197 -232.8179 2431.3721 -234.5776 2428.7188 -237.4971 c2426.5107 -239.9263 2423.6582 -241.5342 2421.3477 -243.8315 c2420.4609 -244.7148 2417.6904 -248.043 2416.127 -247.3799 c2413.2246 -246.1484 2410.249 -244.3438 2407.6152 -242.5835 c2402.3848 -239.0874 2399.041 -233.6445 2394.6211 -229.3267 c2390.7402 -225.5352 2386.0771 -222.4487 2380.6055 -221.8833 C2381.0693 -221.6323 2381.5273 -221.3818 2381.9668 -221.1313 c2388.1836 -217.5869 2394.415 -214.2275 2400.082 -209.8037 c2406.3721 -204.894 2412.6797 -199.6968 2418.5684 -194.2998 cf2365.7285 -76.8042 m2365.9248 -73.418 2367.0566 -70.292 2367.1328 -66.9082 c2367.1533 -66.0313 2367.2197 -65.5464 2367.3965 -64.6694 C2367.7188 -63.8848 2367.8008 -63.5522 2367.6484 -63.6479 C2368.1982 -63.0327 2368.4385 -62.9902 2368.3643 -63.5205 C2370.6025 -62.7686 2373.6143 -63.3579 2375.9209 -63.5107 c2379.6982 -63.7617 2383.4541 -63.8193 2387.2217 -64.2466 c2391.5752 -64.7397 2396.2109 -64.8105 2400.4512 -65.874 c2404.4023 -66.8647 2408.2402 -68.3208 2412.1172 -69.5586 c2419.1738 -71.811 2426.2549 -73.731 2433.4531 -75.5044 c2441.502 -77.4873 2448.2949 -83.2939 2455.4424 -87.2725 C2442.2012 -87.5645 2428.958 -88.5571 2415.7295 -90.0854 c2399.9219 -91.9116 2384.0723 -91.4551 2368.249 -92.8823 c2367.334 -92.9648 2366.4209 -93.0698 2365.5059 -93.1626 C2365.4648 -87.7417 2365.4111 -82.2783 2365.7285 -76.8042 cf*U2537.8848 -170.4048 m2539.998 -171.5181 2541.6729 -173.6143 2544.1299 -174.041 c2547.082 -174.5537 2549.0723 -173.8774 2551.3877 -172.061 c2552.5693 -171.1338 2553.5293 -169.2085 2554.2119 -167.8506 c2555.1416 -166.0005 2555.4717 -164.6514 2555.7178 -162.6201 c2555.9785 -160.4648 2554.793 -158.4492 2553.5078 -156.876 c2552.2236 -155.3027 2549.7773 -154.6284 2547.8486 -154.6284 c2546.5254 -154.6284 2545.3242 -154.9639 2544.1484 -155.437 C2543.8594 -155.499 2543.5811 -155.5771 2543.3027 -155.6665 C2540.3848 -154.7686 2537.2324 -155.5732 2535.5527 -158.4409 c2534.7471 -159.8164 2534.5215 -161.5737 2534.8555 -163.1973 C2534.2314 -165.8706 2535.3945 -169.0923 2537.8848 -170.4048 cf*u1 D1416.1484 -122.3242 m1417.3794 -123.5303 1418.2256 -125.1182 1419.7344 -126.1558 c1422.4712 -128.0371 1425.0786 -130.0737 1428.064 -131.5518 c1434.6084 -134.792 1443.5547 -134.2368 1450.6494 -133.9297 c1464.4048 -133.3345 1478.1689 -133.5088 1491.4014 -129.1919 c1505.0972 -124.7241 1517.3511 -115.0757 1529.2417 -107.1504 c1529.3604 -107.0713 1529.4736 -106.9863 1529.5918 -106.9067 C1530.0469 -110.3696 1530.8203 -113.7681 1532.1401 -116.9194 c1536.0786 -126.3247 1545.0449 -133.1792 1552.5625 -139.6899 c1556.3428 -142.9639 1560.6616 -144.814 1565.7085 -144.6719 c1570.3926 -144.5396 1576.54 -141.9224 1577.7744 -136.8882 c1580.1309 -127.2759 1571.7646 -116.6426 1565.2847 -110.5205 c1561.5229 -106.9668 1556.9067 -104.3403 1553.2949 -100.6528 c1550.7275 -98.0317 1548.2832 -95.3877 1545.5586 -93.0259 C1550.5498 -87.9355 1555.3584 -82.6523 1560.5635 -77.8862 c1564.6309 -74.1616 1568.6997 -70.4829 1571.2798 -65.519 c1574.0039 -60.2783 1573.9307 -54.4175 1573.0205 -48.7451 c1570.6729 -34.1187 1551.7168 -40.3013 1543.2695 -44.2988 c1531.9102 -49.6743 1527.9653 -61.4048 1527.4014 -73.2461 c1527.2031 -77.4106 1527.7368 -81.5557 1528.2339 -85.7051 C1527.5117 -85.6392 1526.7939 -85.5884 1526.085 -85.5601 c1520.0308 -85.3179 1514.1494 -83.252 1508.2041 -82.1016 c1496.5078 -79.8389 1484.7021 -81.3818 1473.0127 -82.9673 c1450.2939 -86.0488 1428.1348 -94.2827 1412.0835 -111.1953 c1407.8936 -115.6104 1411.5942 -121.6729 1416.1484 -122.3242 Cf0 D1557.1104 -120.6748 m1560.0054 -123.4102 1563.5083 -127.5601 1564.7891 -131.6899 C1564.6606 -131.6973 1564.5337 -131.7046 1564.3799 -131.709 c1563.6187 -131.7305 1562.8203 -131.1646 1562.2241 -130.812 c1560.2085 -129.6211 1558.5908 -127.5542 1556.7715 -126.0781 c1552.3369 -122.481 1547.6045 -118.1172 1544.6641 -113.1787 c1543.8149 -111.7524 1543.2295 -110.166 1542.8188 -108.4907 C1542.9063 -108.584 1542.9932 -108.6777 1543.0806 -108.7705 c1547.2773 -113.2373 1552.6484 -116.4595 1557.1104 -120.6748 cf1547.1479 -56.9746 m1550.0386 -55.2798 1552.9429 -54.3413 1556.1968 -53.605 c1557.4995 -53.3101 1559.083 -52.6147 1560.4023 -52.5269 c1560.4922 -52.521 1560.5566 -52.5166 1560.6406 -52.5107 C1561.6045 -56.748 1559.2471 -60.9819 1556.4243 -63.9683 c1552.647 -67.9644 1548.5029 -71.4897 1544.8027 -75.5811 c1543.4829 -77.0405 1542.1123 -78.4531 1540.7168 -79.8418 C1539.7979 -70.9761 1539.7437 -61.3149 1547.1479 -56.9746 cf1489.8477 -94.1689 m1496.7832 -93.6436 1503.103 -94.1953 1509.895 -95.7124 c1513.0938 -96.4272 1516.269 -97.2471 1519.4668 -97.9663 C1511.3975 -103.7988 1502.8179 -108.9751 1494.2397 -113.98 c1482.6978 -120.7144 1468.772 -119.9106 1455.9663 -120.626 c1448.8828 -121.0215 1441.4473 -121.7407 1434.4458 -120.1758 c1431.3965 -119.4941 1429.1514 -117.3062 1426.9795 -115.0386 C1444.4102 -100.438 1467.3667 -95.8716 1489.8477 -94.1689 cf*U*u1 D474.0586 -396.46 m477.9644 -402.1094 481.5078 -407.8311 486.1499 -412.9453 c490.4409 -417.6729 495.7114 -422.4209 501.4551 -425.2578 c508.0649 -428.5225 515.5166 -429.8164 522.7715 -430.604 c529.0024 -431.2798 536.4478 -431.9932 542.6226 -430.6201 c549.4473 -429.1025 554.5381 -424.8726 559.9668 -420.7393 c566.2666 -415.9424 572.6377 -411.2363 578.9722 -406.4854 c584.9087 -402.0327 589.5674 -394.7046 593.1504 -388.3145 c596.4707 -382.3936 597.5752 -373.7261 597.8008 -367.0039 c598.0376 -359.9424 594.9014 -352.1094 591.624 -345.9897 c588.4258 -340.0176 583.9331 -334.7026 579.7163 -329.437 c575.248 -323.8574 567.459 -319.6738 561.4575 -315.9043 c553.6909 -311.0264 545.8745 -306.6162 536.6572 -305.5869 c532.3535 -305.106 527.9209 -305.5591 523.6064 -305.6641 c519.2061 -305.7715 514.9409 -305.9907 510.7183 -307.3501 c503.2339 -309.7598 496.9238 -315.4473 490.9199 -320.3071 c487.0107 -323.4707 484.1255 -327.2612 482.3887 -331.6055 C480.6948 -333.5869 479.1279 -335.6851 477.626 -337.8042 c469.5327 -349.2246 464.627 -364.9907 466.667 -378.9775 c467.605 -385.4082 470.3892 -391.1523 474.0586 -396.46 cf0 D479.4985 -368.4854 m480.1162 -360.5195 483.2026 -353.4326 487.3853 -346.9414 C490.4258 -346.6885 493.3535 -344.6016 493.5 -340.689 c493.5332 -339.7959 493.6582 -338.9678 493.8481 -338.1836 C495.2871 -336.4282 496.7617 -334.709 498.2451 -333.0259 c499.6338 -331.4502 500.8027 -331.3911 502.8374 -331.3511 c507.8804 -331.2515 509.8867 -326.4971 508.8555 -322.7661 C510.9106 -321.4121 513.062 -320.2437 515.3584 -319.5044 c520.8789 -317.7271 527.7993 -318.4189 533.5386 -318.4346 c540.9976 -318.4546 547.1255 -322.4766 553.3467 -326.1816 c558.9966 -329.5459 566.3784 -333.4561 570.5239 -338.6294 c575.0342 -344.2583 579.8599 -350.1265 582.4849 -356.9272 c588.1128 -371.5083 581.4971 -388.4448 569.2432 -397.6357 c563.0747 -402.2622 556.8477 -406.8203 550.7549 -411.5469 c548.3208 -413.4346 545.8979 -415.2568 543.21 -416.7725 c540.106 -418.5234 536.481 -418.1396 533.0615 -418.1099 c526.0415 -418.0493 519.2876 -417.4043 512.5093 -415.5405 c505.4258 -413.5923 500.3237 -408.9751 495.3423 -403.7529 c490.9873 -399.188 487.9063 -393.6914 484.3423 -388.5371 c479.978 -382.2246 478.9141 -376.0283 479.4985 -368.4854 cf*U524.8975 -366.8906 m528.8975 -369.4224 534.3901 -370.4824 539.0615 -370.3613 c542.1724 -370.2813 544.6494 -369.4243 547.0801 -367.498 c550.2817 -364.9604 549.7666 -360.3911 548.2876 -357.165 c548.1089 -356.7754 547.8359 -356.4272 547.584 -356.0845 c547.7173 -356.2656 545.1616 -352.5313 546.3286 -354.5952 c545.7422 -353.5581 544.8403 -352.5845 543.9131 -351.8242 c541.5928 -349.9224 538.9712 -348.4863 536.0488 -347.731 c533.2109 -346.9976 529.7617 -347.0449 527.2617 -348.7578 c524.1519 -350.8892 523.1362 -353.959 523.2393 -357.3408 C521.2305 -360.1646 521.1177 -364.4985 524.8975 -366.8906 cf*u1 D236.7632 -1055.5054 m247.1123 -1055.1719 259.9414 -1051.4326 267.2485 -1043.7695 c274.25 -1036.4263 276.7017 -1025.2456 278.5669 -1015.6079 c280.877 -1003.6729 274.7456 -993.6528 266.6987 -985.4434 c263.1377 -981.8105 260.1177 -977.9028 255.5547 -975.4312 c249.415 -972.1055 242.6519 -973.498 236.6489 -976.2319 c227.6426 -980.3335 220.2227 -988.4673 216.5483 -997.7402 C214.9111 -1000.439 213.4126 -1003.2212 212.0698 -1006.061 c206.9766 -1016.833 204.0078 -1029.1074 209.7979 -1040.1885 c214.8335 -1049.8262 226.1558 -1055.8472 236.7632 -1055.5054 cf0 D220.5259 -1020.0898 m221.0713 -1017.8779 221.9297 -1014.8926 223.0537 -1012.1406 C225.0107 -1011.6953 226.6748 -1010.2671 227.1919 -1007.6055 c227.4482 -1006.2871 227.7949 -1005.0225 228.2139 -1003.8037 C229.4214 -1001.8848 230.4663 -999.8545 231.9795 -998.1743 c232.8501 -997.207 234.6104 -996.4487 235.7021 -995.6519 c237.6099 -994.2598 239.5698 -993.0259 241.3584 -991.4683 c242.7817 -990.229 243.4136 -988.8057 243.4746 -987.4058 C245.9639 -986.291 248.5747 -985.9131 251.0513 -987.8887 c254.2295 -990.4243 256.9004 -993.9385 259.6787 -996.9009 c265.2676 -1002.8613 266.7236 -1008.4385 265.1216 -1016.2949 c263.7661 -1022.9448 262.02 -1030.4199 257.2021 -1035.4727 c252.6338 -1040.2637 243.041 -1042.063 236.7632 -1042.5054 c229.7456 -1043 222.4878 -1038.2627 220.0913 -1031.5581 c218.7969 -1027.937 219.6357 -1023.7021 220.5259 -1020.0898 cf*U*u1 D539 -1206.8525 m535.0918 -1206.8525 533.0986 -1209.9551 533.0088 -1213.1289 C526.709 -1218.0537 524.3042 -1227.8486 523.5586 -1236.0518 c522.9683 -1242.5498 522.939 -1248.9033 525.8125 -1254.9014 c529.4424 -1262.4805 537.7993 -1267.6846 545.3774 -1270.1553 c554.0029 -1272.9678 561.6748 -1271.9854 567.0498 -1264.1465 c572.2344 -1256.5869 574.1279 -1246.8809 574.2729 -1237.8721 c574.4229 -1228.5156 571.562 -1220.4199 565.5054 -1213.3096 c558.7407 -1205.3672 549 -1206.8525 539 -1206.8525 cf0 D557.9448 -1253.8145 m557.3198 -1255.1689 556.0264 -1258.6602 554.2725 -1258.8096 c552.0669 -1258.9961 549.6763 -1257.8975 547.6274 -1257.2295 c543.3193 -1255.8252 538.2793 -1251.8506 536.6523 -1247.4414 c535.5488 -1244.4512 536.2832 -1240.127 536.4829 -1237.0107 c536.8047 -1231.9951 537.4229 -1222.5469 544.0151 -1223.0205 c547.0454 -1223.2383 548.9653 -1221.6689 549.7944 -1219.5537 C551.9839 -1219.7568 553.981 -1220.3184 555.4395 -1221.6055 c559.6899 -1225.3574 560.9209 -1230.958 561.1816 -1236.335 c561.4697 -1242.2578 560.4346 -1248.4219 557.9448 -1253.8145 cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF