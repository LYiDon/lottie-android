%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.1.0%%For: (Evgeny Bakal) ()%%Title: (BKG 3.eps)%%CreationDate: 04.10.18 13:23%%Canvassize: 16383%%BoundingBox: 16 -2149 3912 -33%%HiResBoundingBox: 16.127 -2149 3911.0068 -33.1021%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 1920.5 -1080.5 1920.5 -1080.5%AI3_TileBox: 1524 -1386 2316 -774%AI3_DocumentPreview: Header%AI5_ArtSize: 3840 2160%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1655 639 0.25 1831 940 18 0 0 6 130 0 0%AI5_OpenViewLayers: 7%%PageOrigin:1520 -1380%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 72 8%%BeginData: 5294 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FF8B60FD7DFF85608584FD7BFFAF60FFA985FD7BFF36FFFFFF%5AFD2DFF608484FFFFAF8485A8FD44FF60AFFFFFFF8BA9FD2BFFAF60A98B%848584AF6085FD1CFFA9AF84616085FFFFA9FD1EFFAF605AAFFFFF8485FD%2CFF8484FF6084A960A9FD1AFF8485608484FFA985608460845AFD1EFFAF%60AFFFA93C36FD2BFFAF8560605A6160FD1BFF848584FD07FF84FFFFAF60%FD07FF84AFFFFF8485FD10FFA984FFFFFF5A84A8FD2AFFAF3536A8FF5AAF%FD1AFFA9FD0EFF8460FD05FF60605A8536605AA9FD0FFF60FD04FF85A9FD%2CFFAF36855AAFFD2BFF8584FFFFFF8585FF8B60FFFFFF60AFFD0DFF5AAF%FD04FFA884FD2DFFAF5A6084FD2CFF8584FFA860FD08FF5AFD0CFF84AFFF%FF84FFAFFF84FD2FFFA9FD2EFF858460AFFD08FFAF60FD05FFAFFD04FF5A%608484FF84AFA9366084FD5DFFA836A8FD0AFF60A8FFFFFFA884FD04FF85%846084FF84FFAF8584AFFD5CFFAF85AFFD0BFFA985FFFFFFAF84FD06FF60%FFA885FFFF60FD5DFFA960A8FD0DFF60AFFFFF60AFFD05FF84AFFFAF84FF%FF8584FD5BFF8461AFFD0EFFAF84FFFF85FD05FFA960FFFF8485FFFFA884%FD5AFFAF84A8FD0FFFA884FFAF5AFD05FF8584FFFF8BA8FFFFFF60FD6DFF%84FF84AFFD05FF5AFFFFFF84AFFFFFFF84A8FD6EFF84A8FD04FF84AFFFFF%FF85AFFFFFFF84AFFD6EFF60FD04FFA8365A60A9FF5AFF846084AF84FD6D%FF8485FD04FFAF848B60FFFF85FFAF60856085FD6DFF85AFFD06FF5AFFFF%AF60FFAF84FF8584FD6DFF5AFD06FFA985FFFFAF85FFFF84FD6FFF84AFFD%06FF84A8FFFFAF84FFFFA984FD6EFF84A8FD06FF60FFFFFFA9AFFFFFAF85%FD6DFFAF60FD06FF84A9FFFFFF8584FFFFFF60FD61FFA9FD0BFF5AAFFD06%FF85AFFFFFFF84AFFFFFFF85AFFD5EFFAF6084FD0AFFAF85FD07FF5AA984%AFA984A8FFFFFF84AFFD5CFFA8845AAF6085FD09FF85A8FD08FFA9AF8485%36858485848584FD5BFF8485A9FFFFFF60FD09FF60FD0CFFAF84A8AFA8A9%84AFFD5AFF5A85FD05FF8484FD07FF5AAFA860A8FD0AFF84FD5FFF60FD08%FF85FD06FFA985848584AFFD09FF8485FD5EFF5A85AFAF84AF84FFA8AF60%A9FD05FFAF3685FF85A8FD09FFAFA9FD5FFF848B84AF3685FFFF366036FD%09FF60FD0AFFA8FD63FF8485FFFFFF856085AFFD07FF60AFFD6DFF8460FD%05FF85FD08FFAF60FD6DFF8460FFFFAFFFFFFF8484FD07FF84A8FD0CFFA9%AFFD5EFF8485FFFFAFFFAFAFFFFF84AFFD05FFAF60FD0DFFAF5AAFFD5DFF%60606013AFFF85368460AF36AFFD04FF5AFD0FFF36A8FD5EFF8536AFFFAF%A985AFFF846184FFFFFF60AFFD0BFFA86084AF36A984FD5CFF855AFFFFFF%60FFA860FD06FF8484FD0DFF5A613636606184FD5AFF8B84FD04FF85FFFF%8585FD05FF61FFFFA9FD0BFF603560133684FD5AFFAF36FFA9AFFFFF60FF%FFFF8485FFFFFF8484AF606084FD0AFFA98584AF60FD5CFFAF84858460A9%85FFFF5AAF5AFFFFAF368584FF60FD6FFFAF5AFF5AFFA960846084FFA8AF%AFFF8484FD6FFF60FFFF85FFFF84AFFD07FF85AFFD6EFF5AFFFFFF84FFFF%FF5AAFFD05FFA960FD6EFF6085FFFFFF85FD04FF5AFD05FF60FD6EFFA985%60845A8436846085848484FFFFFF6085FD74FF8584AFA9AFAFFFFFFFA985%FD75FF84AFFD06FFAF60A8FD75FFAF85FD06FF85A9FD76FF84A9FD05FF84%84FFA8FD75FFAF84FD05FF5A85848560FD74FFA885FD06FFA8FF8485FD12%FFAF60FD61FF84FD08FF61FD0FFF84AFFF855A8584FD5FFFA960FD07FF84%84FD0EFF8485846160FFAF85FD60FFA8FD06FFAF60FD10FF5AFF84608485%3684A8FD65FF5AAFFD0FFF84605A61A9AF36FF84AFFD21FFAF60AFFD40FF%8485FD0FFF5AAFFFFF5AAFA9848436A8FD20FFAF36AFAFFD3FFFA960AFFD%0BFFA8A9FFAF85848560FF606084FF8585FD20FFA98BFD41FF8584FD09FF%AFAF848584FFFFA9AF36AFFF85848436AF5A85FD1FFFAF84FD41FF5AAFA8%AFA9AFA8AF8485608584AFFD05FFA98BFFAF146185608485FD1DFFAFA8FF%FF85608BAFAF5AFD3CFFAF84858485608584AFA985FD08FFAF5A85608484%6084FD1DFF846084845A8436A984365A845A60AFFD0AFFAF5A8484AF6060%FD32FF84FD0AFFA9FF84FD1FFF8485FD04FFA985FF855A85A9FF60AFFD06%FF84AFFFFF60FFA9853636368584FD30FF85AFFD0BFF84A8FD1EFF84A8FD%05FF846084FFA86084FF5AAFFD04FFA86060AF84AFFFAF36365AAF846084%FD2FFF60AFFD0BFF84FD27FF36AFA8FFFF8584AF84FD05FF8485606084AF%FF8560FFFFFF8485FD2FFF85AFFD07FFA984AFFF85848484FD23FF846084%84A8A9A8845AAFFD06FF8460136035FFA88484AFA9AF60FD2FFF60FD08FF%606036615A3636AFFD24FFAF60A9FF60AFFF60FD09FF8584FFFFFF6085A9%FF84AFFD2FFF85FD09FFA9AF84855AFD26FFAF84845A85848484FD09FF84%FD05FF84846060A9FD2FFF8484608584FD09FF85A9FD27FF84AFA9AFFD0B%FF85A9FD3AFFAF84AFFD09FFA8A9FD36FF84AFFD3DFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade To Edge Black)(Fade To Edge Black) 0 3 Bd[0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br0.6976270.6752270.6385750.7395590.1372550.1215690.125494 %_Br[0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Neon Rings Vignette)(Neon Rings Vignette) 1 17 Bd[0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B5B6B8B9BABDBEC0C1C3C4C5C7C8CACBCDCFD0D2D3D4D5D7D7D8DADBDBDDDEDFE0E2E3E4E5E6E7E7E8EAEAEBECECEDEDEEEEEEEFEFF0F0F1F1F1F2F2F2F2F3F3F2F3F4F3F3F4F4F4F4F5F4F4F5F5F4F4F4F4F4F4F4F3F3F4F4F3F3F3F3F2F3F2F2F2F2F2F2F2F1F1F0F1F0EFF0EFEEEEEEEEEDEDEDECECECECEBEAEBEAEAEAE9E8E8E8E7E7E7E6E6E5E5E5E4E3E3E3E2E2E1E1E0E0DFDFDFDEDDDDDCDCDBDBDAD9D8D8D7D7D6D6D5D4D4D3D3D2D2D1D0D0D0CFCECECDCDCCCCCBCACAC9C8C7C7C6C5C5C4C4C3C3C2C1C1C0BFBFBEBEBDBCBCBBBABAB9B8B7B7B6B5B5B4B3B2B2B1><B0B0B1B1B1B0B1B1B1B2B2B2B1B3B3B2B2B4B3B2B4B4B3B3B5B4B4B6B5B4B3B5B5B4B6B6B5B4B6B5B5B4B6B5B4B6B5B4B4B5B5B4B6B5B4B3B4B4B3B4B3B2B1B3B1B0AFB1B0AFB0AFAEADAFADACAEADABAAACAAA9AAA9A8A7A8A7A5A4A5A4A3A4A3A1A0A1A09E9F9E9D9B9C9B999A9997969795949293929091908E8D8E8C8A8B8A888787868485838280817F7D7B7C7A797977767475737172706F6D6D6C6A6A69676565646260615F5D5D5C5A5858565555535250504E4D4D4B4A4848474544444241413F3E3C3C3B393A3837353634323331302E2F2D2C2A2B2928292726242524><A5A5A3A3A3A3A2A1A19F9F9E9E9C9C9C9B999998979796969594949292929290908F8D8D8C8C8A8A8A8A88888886868686848483828281817F7F7F7D7C7C7C7A797979777776757474737271716F6F6E6E6C6C6C6A6A696967676665646363616160605E5D5D5C5B5B5A58585756555554535251514F4E4E4C4B4B4A484847454544444241413F3E3E3D3B3B3A3A3837373534333331302F2E2D2D2C2A2A292727262624232222201F1F1D1C1B1B191817151514131211110F0E0E0D0B0B0A0908070705050404030202000000000000000000000000000000000000000000000000><D5D4D3D2D1D0CFCECDCCCBC9C8C7C5C4C3C2C0BFBDBCBAB8B7B5B3B1AFADABA9A8A6A4A29F9D9B99979593918F8D8B89878583817E7C7A79777573716F6D6B6968666462605E5C5B5957555352504E4C4B494846444342403F3D3C3A383736343332302F2E2C2B2A29272625242221201F1E1D1C1B1A191716151514131211100F0E0E0D0C0B0B0A090908080706060505040404030303030202020202010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><1313131313131212121212121212121212121111111111111111111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090808080808080808080808080707070707070707070707070606060606060606060606050505050505050505050505040404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><0C0D0D0E0F10101112121314151516171818191A1A1B1C1D1D1E1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F30313132333434353636373839393A3B3C3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F50505152535354555556575858595A5A5B5C5D5D5E5F60606162626364656566676768696A6A6B6C6C6D6E6F6F70717272737474757677777879797A7B7C7C7D7E7E7F80818182838484858686878889898A8B8B8C8D8E8E8F90909192939394959696979898999A9B9B9C9D9D9E9FA0A0A1A2A2A3A4A5A5A6A7A8A8A9AAAAABACADADAE><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF>4 %_Br<B1B1B0B0B0B0B0B0AFAFAFAFAEAEAEAEADADADADADACACACABABAAAAAAA9A9A8A8A7A7A7A6A6A6A6A5A4A4A4A3A3A3A3A2A2A2A1A1A1A09F9F9E9E9E9D9D9D9C9B9B9A9A99989897969695959494939292919190908F8E8E8D8C8C8B8B8A898988888786868584848382828180807F7E7D7C7C7B7A797878777675747373727170706F6E6D6C6B6B6A69696867666564636261605F5E5D5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484747464544434241403F3F3E3D3C><2424222222222020211F1F201E1E1E1E1C1C1C1B1B1B1919191A17171816161614141414121213111212101010100E0E0F0D0D0D0D0B0B0C0A0A0B0909090A080909080808070708080607070506060505050504040403040403040404030304020303030202030202020101010201010100010100010101010101000101000001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000001000001010001>00<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC><AEAEAFAFAFAFB0B0B0B1B1B1B2B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBFBFBFC0C0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C6C6C6C6C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADBDBDBDCDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6><EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB>4 %_Br<3C3D3E3F3F40414243444546474748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5D5E5F60616263646566676869696A6B6B6C6D6E6F707071727373747576777878797A7B7C7C7D7E7F808081828283848485868687888889898A8B8B8C8C8D8E8E8F90909191929293949495959696979898999A9A9B9B9C9D9D9D9E9E9E9F9FA0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A6A6A6A6A7A7A7A8A8A9A9AAAAAAABABACACACADADADADADAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1><0100010100000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010100000101000101010101010001010001010102010101020202030202030303020403030404040304040304040405050505060605070706080807070808080909080A0909090B0A0A0C0B0B0D0D0D0D0F0E0E10101010121211131212141414141616161817171A1919191B1B1B1C1C1C1E1E1E1E201F1F212020222222222424>00<BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDDDCDCDCDCDBDBDBDADADAD9D9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D1D1D1D1D0D0D0CFCFCFCECECECECDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C3C3C3C3C2C2C2C1C1C1C0C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAFAEAE><FBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEF>4 %_Br<B1B2B2B3B4B5B5B6B7B7B8B9BABABBBCBCBDBEBEBFBFC0C1C1C2C3C3C4C4C5C5C6C7C7C8C9CACACBCCCCCDCDCECECFD0D0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADBDBDCDCDDDDDEDFDFDFE0E0E1E1E2E2E3E3E3E4E5E5E5E6E6E7E7E7E8E8E8E9EAEAEAEBEAEBECECECECEDEDEDEEEEEEEEEFF0EFF0F1F0F1F1F2F2F2F2F2F2F2F3F2F3F3F3F3F4F4F3F3F4F4F4F4F4F4F4F5F5F4F4F5F4F4F4F4F3F3F4F3F2F3F3F2F2F2F2F1F1F1F0F0EFEFEEEEEEEDEDECECEBEAEAE8E7E7E6E5E4E3E2E0DFDEDDDBDBDAD8D7D7D5D4D3D2D0CFCDCBCAC8C7C5C4C3C1C0BEBDBAB9B8B6B5B4><24252426272928292B2A2C2D2F2E3031333234363537383A393B3C3C3E3F4141424444454748484A4B4D4D4E5050525355555658585A5C5D5D5F61606264656567696A6A6C6D6D6F707271737574767779797A7C7B7D7F818082838584868787888A8B8A8C8E8D8E9091909293929495979697999A999B9C9B9D9E9F9EA0A1A0A1A3A4A3A4A5A4A5A7A8A7A8A9AAA9AAACAAABADAEACADAFADAEAFB0AFB0B1AFB0B1B3B1B2B3B4B3B4B4B3B4B5B6B4B5B5B4B4B5B6B4B5B6B4B5B5B6B4B5B6B6B4B5B5B3B4B5B6B4B4B5B3B3B4B4B2B3B4B2B2B3B3B1B2B2B2B1B1B1B0B1B1B1B0B0><00000000000000000000000000000000000000000000000002020304040505070708090A0B0B0D0E0E0F111112131415151718191B1B1C1D1F1F202222232426262727292A2A2C2D2D2E2F3031333334353737383A3A3B3B3D3E3E3F414142444445454748484A4B4B4C4E4E4F51515253545555565758585A5B5B5C5D5D5E606061616363646566676769696A6A6C6C6C6E6E6F6F717172737474757677777979797A7C7C7C7D7F7F7F81818282838484868686868888888A8A8A8A8C8C8D8D8F909092929292949495969697979899999B9C9C9C9E9E9F9FA1A1A2A3A3A3A3A5A5><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010202020202030303030404040505060607080809090A0B0B0C0D0E0E0F101112131415151617191A1B1C1D1E1F20212224252627292A2B2C2E2F303233343637383A3C3D3F404243444648494B4C4E5052535557595B5C5E6062646668696B6D6F71737577797A7C7E81838587898B8D8F91939597999B9D9FA2A4A6A8A9ABADAFB1B3B5B7B8BABCBDBFC0C2C3C4C5C7C8C9CBCCCDCECFD0D1D2D3D4D5><00000000000001010101010101010101010102020202020202020202020203030303030303030303030304040404040404040404040405050505050505050505050506060606060606060606060707070707070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010111111111111111111111111121212121212121212121212131313131313><AEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929190908F8E8E8D8C8B8B8A89898887868685848483828181807F7E7E7D7C7C7B7A79797877777675747473727271706F6F6E6D6C6C6B6A6A69686767666565646362626160605F5E5D5D5C5B5A5A59585857565555545353525150504F4E4E4D4C4B4B4A49484847464645444343424141403F3E3E3D3C3C3B3A39393837363635343433323131302F2F2E2D2C2C2B2A2A292827272625242423222221201F1F1E1D1D1C1B1A1A19181817161515141312121110100F0E0D0D0C><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B3B2B0B0AEADABAAA9A9A7A6A4A4A2A2A0A09E9E9D9D9C9C9A9A989896969595939391918F8F8C8C8988868684848383818180807E7F7D7D7C7B7A7A79797777757574747272717170706F6F6E6E6D6D6C6C6B6B6A6A696968686767666665656464636462626162616160605F5F5E5E5D5D5C5C5B5C5A5A5959585857575656555554545353525150504F4F4E4E4D4C4B4B4A4A49494747464645444343424140403F3E3D3D3C3B3A39383837363534333231302F2E2D2C2B2A282726242322201F1E1C1B1A181716141312100F0E0C0B0A080706050403020000><B0B1B2B3B3B4B5B6B8B8BABABCBDBFC0C2C3C5C4C5C5C6C6C7C7C8C8C9C9CBCBCDCCCECFD1D1D3D5D7D7D9DBDDDEDFE0E0E0E1E2E3E3E4E3E4E5E6E6E8E8EAEAEBECEDEEEFEFEFEFF0F1F1F2F3F2F2F2F3F3F4F4F4F4F5F5F6F6F7F7F6F7F7F7F8F8F9F8F8F9F9FAFAFAFAFAFBFBFBFBFCFCFBFCFCFCFCFDFDFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F2F2F1F1><A5A5A3A3A3A3A1A19FA09FA09F9F9E9E9D9D9C9D9C9C9B9B9A9A9A9A999998989798979796979596949594949394939393949293929291929192909190908F908F908E8F8E8F8E8F8E8F8D8E8D8E8D8E8C8D8B8C8B8C8B8C8A8B8A8B8A8B898A898A888A8889888887888788868786868586858684858384838482838182808180807F7F7E7E7D7D7C7D7B7C7A7B797A787977787677757674757373717270706F6F6D6E6C6D6B6B696A686866666464626260615F5F5D5D5B5B595A57575454525250504E4E4B4B49494646444441413F3F3D3D3A3A383836363434><D5D5D4D3D2D2D1D1D0CFCECECDCDCCCBCACAC9C9C7C7C5C5C4C3C2C1C0BFBDBDBBBAB9B8B6B6B4B3B1B0AFAEACABA9A8A6A5A3A2A0A09D9D9B9A9796949391908E8D8B8A8887858482817F7E7C7A7877757472716F6E6C6B696866656362605F5D5C5A595756545351504F4E4C4B49484646444341403E3D3C3B39383736343332312F2E2D2C2A2928272525232221201F1E1D1C1A1A181816161414131211100F0F0E0D0C0B0A0A09090807070606050404030302020202010101010101000000000000000000000000000000000000000000000000000000000000><131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE><0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F101010101010101111111111111111121212121212121313131313131314141414141414141515151515151516161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1F1F1F1F1F1F1F202020202020202121212121212122222222222222222323232323232324242424242424252525252525252526262626262626272727272727272828282828282828292929292929292A2A2A2A><0E0E0F0F10101111121213131414151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F20202121222223232424252526262727282829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F60606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727273737474757576767777787879797A7A7B7B>4 %_Br<0000000000000000000101010101010101010101010101010102020202020202020202020202030202020304030404040404050505050505050505060606060606060606070707070707070809090909090909090A0A0A0A09090A0A0B0B0B0B0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0D0D0D0D0E0E0E0E0E0E0E0E0E0E101010101011111111><F1F1F0EFEFEEEDEDECECEBEBEAE9E8E8E7E6E6E5E4E3E3E2E1E0DFDFDEDDDDDCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBCBBBAB9B7B6B5B4B3B2B1B0AEADACAAA9A8A6A5A3A2A19F9E9D9B9A999796949391908E8D8B8A888786848382807E7D7B7A787776747372706F6E6C6B6A686765646261605E5D><343233302E2F2D2E2B292A2826272523232120201F1F1E1C1D1B1A1A1917181617151314131112100F100E0F0D0C0D0C0B0C0B0A0B0A090A090908070807060605040505060504050404040303040304030203020203020102020102010202010101000100000000010000000000000000000000000000000000000000000000000000000000>0<EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6><2A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF><7B7C7C7D7E7E7F7F8081818283838485858687878888898A8A8B8C8C8D8E8E8F8F9091919293939495959696979898999A9A9B9C9C9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A6A7A8A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBCBCBDBDBEBFBFC0C1C1C2C3C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCDCECFCFD0>4 %_Br<1111111110101010100E0E0E0E0E0E0E0E0E0E0D0D0D0D0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0B0B0B0B0A0A09090A0A0A0A090909090909090908070707070707070606060606060606060505050505050505050404040404030403020202030202020202020202020202020201010101010101010101010101010101000000000000000000><5D5E606162646567686A6B6C6E6F707273747677787A7B7D7E808283848687888A8B8D8E909193949697999A9B9D9E9FA1A2A3A5A6A8A9AAACADAEB0B1B2B3B4B5B6B7B9BABBBCBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E8E9EAEBEBECECEDEDEEEFEFF0F1F1><0000000000000000000000000000000000000000000000000000000000010000000001000101010202010201020201020302020302030403040303040404050405060505040506060708070809090A090A0B0A0B0C0B0C0D0C0D0F0E100F1012111314131517161817191A1A1B1D1C1E1F1F2020212323252726282A292B2E2D2F2E30333234>0<E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEE><AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A><D0CFCFCECDCDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C3C2C1C1C0BFBFBEBDBDBCBCBBBABAB9B8B8B7B6B6B5B5B4B3B3B2B1B1B0AFAFAEADADACACABAAAAA9A8A8A7A6A6A5A5A4A3A3A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969595949393929191908F8F8E8E8D8C8C8B8A8A8988888787868585848383828181807F7F7E7E7D7C7C7B>4 %_Br<0000020304050607080A0B0C0E0F101213141617181A1B1C1E1F202223242627282A2B2C2D2E2F30313233343536373838393A3B3C3D3D3E3F40404142434344454646474749494A4A4B4B4C4D4E4E4F4F5050515253535454555556565757585859595A5A5C5B5C5C5D5D5E5E5F5F606061616261626264636464656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F70707171727274747575777779797A7A7B7C7D7D7F7E8080818183838484868688898C8C8F8F919193939595969698989A9A9C9C9D9D9E9EA0A0A2A2A4A4A6A7A9A9AAABADAEB0B0B2B3B4><F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFBFBFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFDFDFCFCFCFCFBFCFCFBFBFBFBFAFAFAFAFAF9F9F8F8F9F8F8F7F7F7F6F7F7F6F6F5F5F4F4F4F4F3F3F2F2F2F3F2F1F1F0EFEFEFEFEEEDECEBEAEAE8E8E6E6E5E4E3E4E3E3E2E1E0E0E0DFDEDDDBD9D7D7D5D3D1D1CFCECCCDCBCBC9C9C8C8C7C7C6C6C5C5C4C5C3C2C0BFBDBCBABAB8B8B6B5B4B3B3B2B1B0><3434363638383A3A3D3D3F3F41414444464649494B4B4E4E50505252545457575A595B5B5D5D5F5F616062626464666668686A696B6B6D6C6E6D6F6F707072717373757476757776787779787A797B7A7C7B7D7C7D7D7E7E7F7F8080818082818382848384838584868586858686878688878887888889888A888A898A898B8A8B8A8B8A8C8B8C8B8C8B8D8C8E8D8E8D8E8D8F8E8F8E8F8E8F8E908F908F909091909291929192929392949393939493949495949695979697979897989899999A9A9A9A9B9B9C9C9D9C9D9D9E9E9F9FA09FA09FA1A1A3A3A3A3A5A5><000000000000000000000000000000000000000000000000000000000000010101010101020202020303040405060607070809090A0A0B0C0D0E0F0F101112131414161618181A1A1C1D1E1F2021222325252728292A2C2D2E2F31323334363738393B3C3D3E40414344464648494B4C4E4F505153545657595A5C5D5F606263656668696B6C6E6F7172747577787A7C7E7F8182848587888A8B8D8E9091939496979A9B9D9DA0A0A2A3A5A6A8A9ABACAEAFB0B1B3B4B6B6B8B9BABBBDBDBFC0C1C2C3C4C5C5C7C7C9C9CACACBCCCDCDCECECFD0D1D1D2D2D3D4D5D5><EEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413><2A2A2A2A292929292929292828282828282828272727272727272626262626262625252525252525252424242424242423232323232323222222222222222221212121212121202020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181818171717171717171616161616161615151515151515141414141414141413131313131313121212121212121111111111111111101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C><7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A49494848474746464545444443434242414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19191818171716161515141413131212111110100F0F0E0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br<B4B4B5B4B4B4B5B5B4B4B6B6B6B5B7B7B7B7B9B9B9BBBBBBBABCBCBCBCBEBDBDBCBEBEBEBEBFBFBFBFC0C1C0C2C2C1C1C2C2C2C2C3C3C2C2C3C3C3C2C3C3C3C4C4C3C3C4C4C3C3C4C3C3C2C4C3C3C2C3C2C2C1C2C1C0C2C1C0BFC0C0BFBFBFBFBEBDBDBDBCBBBCBBBABABAB9B8B8B8B6B6B6B5B4B3B4B2B1B0B0AFAEADADACAAAAA9A8A6A6A5A3A2A2A09F9D9D9C9A989896><B0B2B1B3B3B5B5B7B8B9B9BCBEBEC0C0C2C2C4C4C6C6C8CACACCCCCECDCFCFD0D0D1D3D3D5D4D6D5D7D7D8D8DADBDBDCDCDDDCDEDDDEDEDFE0DFE1E0E1E1E2E1E2E1E3E4E3E4E3E4E3E4E3E4E4E5E4E5E6E4E5E4E5E4E5E4E5E4E5E5E4E5E4E5E4E4E3E4E3E3E4E3E3E2E3E1E2E1E1E0E0E1DFE0DEDFDEDEDDDDDCDCDDDBDBDADAD9D9D8D8D7D7D7D6D6D4D4D3D3D2D2D1D1><A5A3A3A2A2A0A09E9E9C9C9A9898969594939191908F8E8C8C8A898887868584838281807F7E7D7C7B7B797978777675747373727170706F6D6D6C6B6A6A69686766656463626160605E5E5C5C5B5A595857565554535251504F4E4D4C4A4A48474645444342403F3D3C3B3A383736353331302E2E2C2B292826252321201D1C1A1917151312100E0D0B0A09080605030200><D5D4D3D2D1D0CECDCCCBCAC9C7C6C5C3C2C1BFBEBCBBB9B7B5B3B1AFADABA9A7A5A3A19F9C9A989693918F8D8B888684827F7D7B79777572706E6C6A68666462605E5B59575553514F4D4B4948454442403E3C3A38363533312F2E2C2A292726242221201E1D1B1A181715141312100F0E0D0C0A0A0808070605050403030302020201010101010101000000000000000000><1314141516171718191A1A1B1C1D1D1E1F20202122222324252526272828292A2B2B2C2D2E2E2F30313132333334353636373839393A3B3C3C3D3E3F3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F60606162636364656666676869696A6B6C6C6D6E6F6F707171727374747576777778797A7A7B7C7D7D7E><0C0C0D0D0E0E0F0F101011111112121313141415151616161717181819191A1A1B1B1B1C1C1D1D1E1E1F1F202020212122222323242425252526262727282829292A2A2A2B2B2C2C2D2D2E2E2F2F303030313132323333343435353536363737383839393A3A3A3B3B3C3C3D3D3E3E3F3F3F404041414242434344444445454646474748484949494A4A4B4B4C4C4D4D4E4E><0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F>4 %_Br<96959392908F8D8C8A898786848382807F7D7B7A787775747371706F6D6C6B69686665646261605E5D5C5A59575655545251504F4C4B4A48474645444241403E3D3C3B3A39383735343332302F2D2C2B2928272625242221201F1E1D1C1B1A191817161514131211><D1CFCECCCBC9C8C7C5C5C4C2C1C0BFBDBCBBBAB9B7B6B5B3B2B1B1AFAEACABAAA9A7A6A5A3A2A1A09E9D9C9C9B99989795949391918F8E8D8C8B898887878685848381807F7E7D7C7B7A7977767575747372706F6E6D6C6B6A6968676665646463636261605F5E5D>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6><4E4F50515253545556565758595A5B5C5D5E5F60616263646566666768696A6B6C6D6E6F70717273747576767778797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F90919293949596979798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAF><9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBCBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0>4 %_Br<1112131415161718191A1B1C1D1E1F2021222425262728292B2C2D2F30323334353738393A3B3C3D3E40414244454647484A4B4C4F50515254555657595A5C5D5E60616264656668696B6C6D6F707173747577787A7B7D7F808283848687898A8C8D8F9092939596><5D5E5F6061626363646465666768696A6B6C6D6E6F7072737475757677797A7B7C7D7E7F808183848586878788898B8C8D8E8F91919394959798999B9C9C9D9EA0A1A2A3A5A6A7A9AAABACAEAFB1B1B2B3B5B6B7B9BABBBCBDBFC0C1C2C4C5C5C7C8C9CBCCCECFD1>0<0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E><AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888787868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756565554535251504F4E><D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F>4 %_Br<9698989A9C9D9D9FA0A2A2A3A5A6A6A8A9AAAAACADADAEAFB0B0B1B2B4B3B4B5B6B6B6B8B8B8B9BABABABBBCBBBCBDBDBDBEBFBFBFBFC0C0BFC0C1C2C0C1C2C1C2C2C3C2C3C3C4C2C3C3C4C3C3C4C4C3C3C4C4C3C3C3C2C3C3C3C2C2C3C3C2C2C2C2C1C1C2C2C0C1C0BFBFBFBFBEBEBEBEBCBDBDBEBCBCBCBCBABBBBBBB9B9B9B7B7B7B7B5B6B6B6B4B4B5B5B4B4B4B5B4B4><D1D1D2D2D3D3D4D4D6D6D7D7D7D8D8D9D9DADADBDBDDDCDCDDDDDEDEDFDEE0DFE1E0E0E1E1E2E1E3E2E3E3E4E3E3E4E3E4E4E5E4E5E4E5E5E4E5E4E5E4E5E4E5E4E6E5E4E5E4E4E3E4E3E4E3E4E3E4E3E1E2E1E2E1E1E0E1DFE0DFDEDEDDDEDCDDDCDCDBDBDAD8D8D7D7D5D6D4D5D3D3D1D0D0CFCFCDCECCCCCACAC8C6C6C4C4C2C2C0C0BEBEBCB9B9B8B7B5B5B3B3B1B2B0><000203050608090A0B0D0E1012131517191A1C1D202123252628292B2C2E2E303133353637383A3B3C3D3F40424344454647484A4A4C4D4E4F505152535455565758595A5B5C5C5E5E60606162636465666768696A6A6B6C6D6D6F707071727373747576777879797B7B7C7D7E7F808182838485868788898A8C8C8E8F9091919394959698989A9C9C9E9EA0A0A2A2A3A3A5><00000000000000000001010101010101020202030303040505060708080A0A0C0D0E0F101213141517181A1B1D1E202122242627292A2C2E2F31333536383A3C3E4042444548494B4D4F51535557595B5E60626466686A6C6E70727577797B7D7F828486888B8D8F919396989A9C9FA1A3A5A7A9ABADAFB1B3B5B7B9BBBCBEBFC1C2C3C5C6C7C9CACBCCCDCED0D1D2D3D4D5><7E7D7D7C7B7A7A797877777675747473727171706F6F6E6D6C6C6B6A69696867666665646363626160605F5E5E5D5C5B5B5A59585857565555545352525150504F4E4D4D4C4B4A4A494847474645444443424141403F3F3E3D3C3C3B3A39393837363635343333323131302F2E2E2D2C2B2B2A29282827262525242322222120201F1E1D1D1C1B1A1A191817171615141413><4E4E4D4D4C4C4B4B4A4A494949484847474646454544444443434242414140403F3F3F3E3E3D3D3C3C3B3B3A3A3A393938383737363635353534343333323231313030302F2F2E2E2D2D2C2C2B2B2A2A2A292928282727262625252524242323222221212020201F1F1E1E1D1D1C1C1B1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0D0D0C0C><9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E>4 %_Br0.7073320.6909440.6457470.8361490.074510.0470590.0549024 %_Br[0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 75.6015 73.8792 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 87.8493 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 88.1542 Bs0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 %_BS%_0.23563 0.002045 0 0 0.737255 0.901961 0.984314 2 50 88.7967 Bs0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 %_BS%_0.693446 0.140078 0 0 0 0.682353 0.937255 2 50 89.2704 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 89.6428 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 90.8946 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 91.2834 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 92.2176 Bs0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 %_BS%_0 0.946166 0.204593 0 0.933333 0.164706 0.482353 2 50 92.7625 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 93.1133 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 94.3587 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 94.7866 Bs0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 %_BS%_0.066621 0.365332 0 0 0.901961 0.686275 0.815686 2 50 95.6817 Bs0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 %_BS%_0.589197 0.818265 0 0.000122 0.494118 0.305882 0.623529 2 50 96.3828 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 26.3746 96.8106 Bs0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 %_BS%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 99.929 BsBD%AI5_EndGradient%AI5_BeginGradient: (Pink Radial)(Pink Radial) 1 2 Bd[0<00000102030405060708090B0C0D0E1011121314141617191A1C1D1E202122232426272728292A2C2D2E2F31313234353638393A3A3B3C3E3F414242434546474848494B4C4D4D4E4F51525254555758585A5B5C5D5D5F60616162636565666869696A6B6C6C6E6F6F707273737576767779797A7B7B7D7E7E7F8181828383848585878888898A8A8C8C8D8E8E8F8F91929294939596969898999B9A9C9C9D9D9F9FA0A2A2A3A3A4A4A6A6A7A7A8A8A9A9AAAAACACADADAEAEAFAFB1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B9B9BAB9B9BABABBBBBBBCBCBEBDBDBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C9C9C9C8C9C9C9C9CACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCDCECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D1D1><0000000001010102020303030303040405050606070808090909090A0A0B0C0C0D0E0E0E0F0F10101112121113131415151615161818191A191A1A1C1C1C1C1D1E1F1E1F20212221222324252425262727282829282A2B2C2B2D2D2E2D2F302F3031323132343334363536373837383A393A3C3B3C3E3D3E403F40404142424445454647474847494A4A4B4A4C4D4D4E4D4F4E505150525153525355555756585759585A5A5B5B5D5D5E5E5F5F616162626363646465656767686869696A6A696B6B6D6D6E6E6D6F6F7171707272747473757577777678787A7A797B7B7A7C7C7C7E7D7D7F7F7F8180808282818184838385858587878686888888888A8A8A8A8C8B8B8B8B8D8D8D8D8F8E8E8E8E909090909090919191919191939292929292929294949494949494949494949595959595959595959595959595>01<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C9C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A999998979796959594939392919190908F8E8E8D8D8C8B8B8A8A89888887878685858484838382828180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777676757574747373727272717170706F6F6F6E6E6D6D6C6C6C6B6B6A6A6A69696868686767676666666565646464636363626262626161616060605F5F5F5F5E5E5E5D5D5D5D5C5C5C5C5B5B5B5B5A5A5A5A5A59595959595858585858585757575757575656565656565656555555555555555555555454545454545454545454545454><FFFEFDFCFBFAF9F8F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E8E8E7E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D8D8D7D6D5D4D3D2D2D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B1B0AFAFAEADACACABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9C9B9A9A999898979696959594939392929190908F8F8E8E8D8C8C8B8B8A8A898888878786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7979787877777776767575747474737372727271717070706F6F6E6E6E6D6D6C6C6C6B6B6B6A6A6A6969696868686767676666666665656564646463636363626262626161616160606060605F5F5F5F5E5E5E5E5E5D5D5D5D5D5D5C5C5C5C5C5C5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A5A5A5A5A5959595959595959595959595959>4 %_Br[0 0 0 0 1 1 1 2 31.3953 49.7076 %_BS%_0 0 0 0 1 1 1 2 31.3953 49.7076 Bs0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 %_BS%_0 0.819882 0.584924 0 1 0.329412 0.34902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 11)(Unnamed gradient 11) 0 3 Bd[0<A9A9AAAAABABADADAEAEAEAFAFB0B0B1B1B1B2B2B3B3B4B4B5B5B5B6B6B7B8B9B9BABABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9C9C9CACACBCB><080A0B0C0D0F1012131517191B1C1E1F2123242627292B2D2E3032333537383A3C3D3F414244484A4B4E505153545657595B5D5F6062636567696A6C6F70727476787A7C7D7F81838587898B>01<7B7B7A7A79797878777777767675757474747373727271717070706F6F6E6E6D6D6C6C6C6B6B6A6A69696968686767666665656564646363626261616160605F5F5E5E5E5D5D5C5C5B5B5A5A><ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160>4 %_Br0<8282828383838383838585858585858686878787878888888888888A8A8A8A8A8A8C8C8C8C8C8C8D8D8D8D8D8D8F8F8F8F8F8F90909090909192929292929294949494949495959595959797979797979999999999999B9B9B9B9B9B9D9D9D9D9D9D9E9E9E9E9F9FA0A0A0A0A0A0A2A2A2A2A2A2A3A3A3A3A3A3A4A4A4A4A4A4A5A5A5A5A5A5A7A7A7A7A7A7A9A9A9><F5F4F4F3F2F1F0EFEEEDECEAE9E8E6E6E5E4E3E2E1E0DFDEDDDBDAD8D7D6D4D3D2D1D0CFCDCCCAC8C6C5C4C2C1C0BFBEBDBCBAB9B7B6B4B3B1AFADACAAA9A7A5A3A2A09F9D9B9998969492908E8C8A88868482817F7D7A78777573716F6D6B69676562605F5D5B59565452504F4D4A484644413F3C3B39373533302E2D2B29272422201E1C1A17151312100E0B0A08>01<9393939292929292929191919191919090909090908F8F8F8F8F8F8E8E8E8E8E8E8D8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888887878787878686868686868585858585858484848484848383838383838282828282828181818181818080808080807F7F7F7F7F7F7E7E7E7E7E7E7D7D7D7D7D7D7C7C7C7C7C7C7B7B7B><1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC>4 %_Br[0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 %_BS%_0 0.796872 0.544518 0 1 0.352941 0.376471 2 50 100 Bs0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 %_BS%_0 0.661738 0.032776 0 1 0.482353 0.67451 2 50 61.7977 Bs0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 %_BS%_0 0.508354 0.961639 0 1 0.576471 0.117647 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 139)(Unnamed gradient 139) 1 2 Bd[00001114 %_Br[0 0 0 0 1 1 1 2 87 36.6667 %_BS%_0 0 0 0 1 1 1 2 87 36.6667 Bs0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50525354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F80818182838384858686878889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAD><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041424344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F8081818283848485858687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>4 %_Br[0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Water)(Water) 0 5 Bd[<D5D6D6D7D7D8D9D9D9DADADBDCDCDDDEDEDFDFE0E1E1E1E2E3E3E4E4E5><5253545657595A5A5B5D5E606163646567686A6B6C6C6D6E7071727475><3F3F404141424345454647474848494B4B4C4C4D4D4F4F505151525353><02020203030304040505050606070709090A0A0B0C0C0D0E0F10101112>0<8A89888786858484838281807F7E7D7C7B7A7978777776757473727170><A9A8A7A6A5A4A3A2A1A09F9E9D9C9B999897969594939291908F8E8D8C>4 %_Br<B9BABBBBBCBDBDBEBFBFC0C1C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCCCCCDCDCECFD0D0D0D1D2D2D3D4D4D4D5><17181A1A1B1D1E2021212324262829292B2D2E3032313335363838393B3C3E403F414344464747494A4C4D4F4F5052><15161718191A1A1B1B1D1E1E1F1F202223232425252728292B2C2E2E2F30303133343535363738393A3A3B3C3D3E3F><0000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010202>0<B0AFAEAEADACABAAA9A9A8A7A6A5A4A4A3A2A1A09F9F9E9D9C9B9B9A9998979696959493929191908F8E8D8C8C8B8A><D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9>4 %_Br<7576777879797A7B7C7D7E7E7F808182828384858586878888898A8B8C8C8D8E8E8F9090919293939494959696979899999A9A9B9C9C9D9E9E9E9FA0A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAAAABABACACADADADADAEAEAFAFB0B0B0B1B2B2B2B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B8B9B9B9B9B9><02020202020102020201020202010202020102020101020201010202010102010101020202010302020203030202030303030404030304040404050404040505040505050506060605070706060707070708080808090909080A0A09090B0B0B0A0C0C0C0C0E0E0E0E10100F0F111111111212121214141414151515151717><10111010121211111111101112121212121211111313121313131212141413141414131315151414141513141516141515151414161614151515141416161414151414161615151515141416161515151615151617161616161515171716161617161618181717171716161717161616161515171716161616151516171515>0<7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCCCBCBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBBBABABABAB9B9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0><E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDADADADADADADADAD9D9D9D9D9D9D9D9D8D8D8D8>4 %_Br<000001010203040505060708090A0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343535363738393A3A3B3C3D3E3F40414243434445464748494A4B4C4D4E4F50515252535455565758595A5B5C5C5D5E5F616162636465666768696A6B6B6C6D6E6F70707172737475><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000010100010102010102010102010202010202><000000000000000000010101010102010202010103020202020203030303030403040403040404050405060506050506060606060607060706060707080807080808090808080909090909080A0A09090A0A0B0B0A0B0A0B0C0B0B0C0C0C0C0C0C0B0D0D0C0C0D0D0E0D0D0D0D0E0F0E0E0E0E0F0F0F0F0E101010100F0F111010>0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F><FFFFFEFEFEFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F8F7F7F7F6F6F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEEEEEEEDEDEDECECECEBEBEAEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0><FFFFFFFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8>4 %_Br[0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 %_BS%_0.897429 0.459052 0.325963 0.070954 0 0.439216 0.54902 2 50 98.8764 Bs0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 %_BS%_0.835508 0.320409 0.246159 0.006683 0 0.541176 0.662745 2 50 77.5281 Bs0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 %_BS%_0.727382 0.088624 0.08365 0 0 0.690196 0.847059 2 50 52.2472 Bs0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 %_BS%_0.459419 0.007385 0.064607 0 0.498039 0.815686 0.909804 2 50 51.6854 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Diamond Cubes)(Diamond Cubes) 6.5605 11.3652 85.3018 79.5596 [%AI3_Tile(0 O 0 R 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 Xa 0.175937 0.165347 0.272679 0 0.827451 0.792157 0.717647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR45.9316 56.8281 m39.3691 45.4609 L26.2471 45.4609 L32.8066 56.8281 L45.9316 56.8281 Lf45.9316 34.0957 m39.3691 22.7305 L26.2471 22.7305 L32.8066 34.0957 L45.9316 34.0957 Lf65.6162 22.7305 m59.0537 11.3652 L45.9316 11.3652 L52.4932 22.7305 L65.6162 22.7305 Lf65.6162 45.4609 m59.0537 34.0977 L45.9316 34.0977 L52.4932 45.4609 L65.6162 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L6.5605 11.3652 L13.123 22.7305 L26.2471 22.7305 Lf26.2471 45.4609 m19.6846 34.0977 L6.5605 34.0977 L13.123 45.4609 L26.2471 45.4609 Lf45.9316 79.5586 m39.3691 68.1924 L26.2471 68.1924 L32.8066 79.5586 L45.9316 79.5586 Lf65.6162 68.1934 m59.0537 56.8281 L45.9316 56.8281 L52.4932 68.1924 L65.6162 68.1934 Lf85.3018 56.8281 m78.7402 45.4609 L65.6162 45.4609 L72.1777 56.8281 L85.3018 56.8281 Lf85.3018 34.0957 m78.7402 22.7305 L65.6162 22.7305 L72.1777 34.0957 L85.3018 34.0957 Lf85.3018 79.5586 m78.7402 68.1924 L65.6162 68.1924 L72.1777 79.5586 L85.3018 79.5586 Lf26.2471 68.1924 m19.6846 56.8281 L6.5605 56.8281 L13.123 68.1924 L26.2471 68.1924 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 Xa 0.48307 0.366674 0.215518 0.002136 0.54902 0.584314 0.67451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.2471 68.1924 m19.6846 56.8281 L26.2471 45.4609 L32.8066 56.8281 L26.2471 68.1924 Lf26.2471 45.4609 m19.6846 34.0957 L26.2471 22.7305 L32.8066 34.0957 L26.2471 45.4609 Lf26.2471 22.7305 m19.6846 11.3652 L26.2471 0 L32.8066 11.3652 L26.2471 22.7305 Lf45.9316 34.0957 m39.3691 22.7305 L45.9316 11.3652 L52.4932 22.7305 L45.9316 34.0957 Lf45.9316 56.8281 m39.3691 45.4609 L45.9316 34.0977 L52.4932 45.4609 L45.9316 56.8281 Lf6.5605 34.0957 m0 22.7305 L6.5605 11.3652 L13.123 22.7305 L6.5605 34.0957 Lf6.5605 56.8281 m0 45.4609 L6.5605 34.0977 L13.123 45.4609 L6.5605 56.8281 Lf26.2471 90.9238 m19.6846 79.5586 L26.2471 68.1924 L32.8066 79.5586 L26.2471 90.9238 Lf45.9316 79.5586 m39.3691 68.1924 L45.9316 56.8281 L52.4932 68.1924 L45.9316 79.5586 Lf65.6162 68.1924 m59.0537 56.8281 L65.6162 45.4609 L72.1777 56.8281 L65.6162 68.1924 Lf65.6162 45.4609 m59.0537 34.0957 L65.6162 22.7305 L72.1777 34.0957 L65.6162 45.4609 Lf65.6162 22.7305 m59.0537 11.3652 L65.6162 0 L72.1777 11.3652 L65.6162 22.7305 Lf85.3018 34.0957 m78.7402 22.7305 L85.3018 11.3652 L91.8643 22.7305 L85.3018 34.0957 Lf85.3018 56.8281 m78.7402 45.4609 L85.3018 34.0977 L91.8643 45.4609 L85.3018 56.8281 Lf65.6162 90.9238 m59.0537 79.5586 L65.6162 68.1924 L72.1777 79.5586 L65.6162 90.9238 Lf85.3018 79.5586 m78.7402 68.1924 L85.3018 56.8281 L91.8643 68.1924 L85.3018 79.5586 Lf6.5605 79.5576 m0 68.1924 L6.5605 56.8281 L13.123 68.1924 L6.5605 79.5576 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6091.6558 7111 L-6091.6558 7075.8271 L-6271 7075.8271 L-6271 7111 Lnuu0 O0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa0 R0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA0.5 w-6109.8286 7076.0781 m-6252.8276 7076.0781 L-6252.8276 7078.6475 L-6109.8286 7078.6475 L-6109.8286 7076.0781 Lb-6252.8276 7101.4829 m-6109.8286 7101.4829 L-6109.8286 7098.7109 L-6252.8276 7098.7109 L-6252.8276 7101.4829 Lb0 0 0 0 1 1 1 Xa-6252.8276 7078.6475 m-6252.8276 7098.7109 L-6109.8286 7098.7109 L-6109.8286 7078.6475 L-6252.8276 7078.6475 LbU0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7110.6191 m-6092.2544 7110.6191 L-6094.4292 7108.3984 L-6125.9976 7108.3984 L-6131.1978 7110.6191 Lb-6092.2544 7086.5854 m-6109.8286 7086.5854 L-6109.8286 7088.6797 L-6094.3237 7088.6797 L-6092.2544 7086.5854 Lb0 0 0 0 1 1 1 Xa-6094.3237 7088.6797 m-6109.8286 7088.6797 L-6109.8286 7101.4829 L-6125.9976 7108.3984 L-6094.4292 7108.3984 L-6104.6465 7099.1279 L-6094.3237 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6270.4019 7110.6191 m-6231.4595 7110.6191 L-6236.6587 7108.3984 L-6268.2285 7108.3984 L-6270.4019 7110.6191 Lb0 0 0 0 1 1 1 Xa-6252.8286 7088.6797 m-6268.3345 7088.6797 L-6258.0112 7099.1279 L-6268.2285 7108.3984 L-6236.6587 7108.3984 L-6252.8286 7101.4829 L-6252.8286 7088.6797 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6252.8286 7086.5854 m-6270.4019 7086.5854 L-6268.3345 7088.6797 L-6252.8286 7088.6797 L-6252.8286 7086.5854 Lb-6231.4595 7110.6191 m-6252.8286 7101.4829 LSu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6131.1978 7101.4829 m-6131.1978 7108.1836 L-6115.5269 7101.4829 L-6131.1978 7101.4829 Lb0.000397 0.462379 0.988952 0 0.972549 0.603922 0.109804 Xa-6131.1978 7108.1836 m-6131.1978 7110.6191 L-6109.8286 7101.4829 L-6115.5269 7101.4829 L-6131.1978 7108.1836 Lb-6252.8286 7101.4829 m-6231.4595 7110.6191 L-6231.4595 7108.1836 L-6247.1294 7101.4829 L-6252.8286 7101.4829 Lb0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa-6247.1294 7101.4829 m-6231.4595 7108.1836 L-6231.4595 7101.4829 L-6247.1294 7101.4829 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 44)0 Au1 Ap0 J 0 j 1 w 4 M []0 d1 XR-6266.6665 7111 m-6271 7111 L-6271 7107.3989 L-6266.6665 7107.3989 L-6266.6665 7111 Lnu0 Ap0 XR-6269.9702 7110.3359 m-6267.6963 7110.3359 L-6267.6963 7108.0625 L-6269.9702 7108.0625 L-6269.9702 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6267.6963 7109.1992 m-6267.6963 7109.8271 -6268.2056 7110.3359 -6268.8335 7110.3359 c-6269.4614 7110.3359 -6269.9702 7109.8271 -6269.9702 7109.1992 c-6269.9702 7108.5718 -6269.4614 7108.0625 -6268.8335 7108.0625 c-6268.2056 7108.0625 -6267.6963 7108.5718 -6267.6963 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 47)0 Au0 Ap0 J 0 j 1 w 4 M []0 d1 XR-6264.6064 7111 m-6271 7111 L-6271 7107.3989 L-6264.6064 7107.3989 L-6264.6064 7111 Lnu0 XR-6268.9404 7110.3359 m-6266.6665 7110.3359 L-6266.6665 7108.0625 L-6268.9404 7108.0625 L-6268.9404 7110.3359 Ln1 Ap0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa1 XR-6266.6665 7109.1992 m-6266.6665 7109.8271 -6267.1753 7110.3359 -6267.8032 7110.3359 c-6268.4312 7110.3359 -6268.9404 7109.8271 -6268.9404 7109.1992 c-6268.9404 7108.5718 -6268.4312 7108.0625 -6267.8032 7108.0625 c-6267.1753 7108.0625 -6266.6665 7108.5718 -6266.6665 7109.1992 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 48)0 Au0 Ap0 J 0 j 1 w 4 M []0 d0 XR-6271 7111 m-6263.1465 7111 L-6263.1465 7102.5957 L-6271 7102.5957 L-6271 7111 Lnu0 O0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa3.86371 M-6270.1582 7102.5957 m-6269.6812 7102.5845 -6269.2842 7102.959 -6269.2725 7103.4375 c-6269.2593 7103.9141 -6269.6357 7104.3101 -6270.1138 7104.3237 c-6270.5903 7104.3359 -6270.9878 7103.96 -6270.9995 7103.4824 c-6271.0122 7103.0054 -6270.6357 7102.6069 -6270.1582 7102.5957 cf-6270.1357 7103.46 mFUu-6270.1558 7104.8188 m-6269.6782 7104.8086 -6269.2813 7105.1846 -6269.2686 7105.6621 c-6269.2563 7106.1382 -6269.6333 7106.5356 -6270.1104 7106.5488 c-6270.5874 7106.5615 -6270.9849 7106.1846 -6270.9971 7105.707 c-6271.0093 7105.23 -6270.6328 7104.834 -6270.1558 7104.8188 cf-6270.1333 7105.6846 mFUu-6270.1523 7107.0469 m-6269.6753 7107.0342 -6269.2783 7107.4102 -6269.2661 7107.8877 c-6269.2539 7108.3638 -6269.6304 7108.7612 -6270.1074 7108.7744 c-6270.5845 7108.7871 -6270.9814 7108.4102 -6270.9937 7107.9326 c-6271.0068 7107.4556 -6270.6299 7107.0581 -6270.1523 7107.0469 cf-6270.1299 7107.9102 mFUu-6270.1499 7109.2725 m-6269.6724 7109.2588 -6269.2754 7109.6357 -6269.2627 7110.1133 c-6269.25 7110.5894 -6269.6274 7110.9863 -6270.1045 7111 c-6270.5815 7111.0127 -6270.9785 7110.6357 -6270.9912 7110.1582 c-6271.0029 7109.6816 -6270.6274 7109.2832 -6270.1499 7109.2725 cf-6270.1274 7110.1357 mFUu-6268.1538 7103.666 m-6267.6763 7103.6533 -6267.2793 7104.0293 -6267.2666 7104.5068 c-6267.2539 7104.9829 -6267.6309 7105.3804 -6268.1084 7105.3945 c-6268.5854 7105.4063 -6268.9824 7105.0293 -6268.9946 7104.5527 c-6269.0068 7104.0752 -6268.6304 7103.6768 -6268.1538 7103.666 cf-6268.1304 7104.5293 mFUu-6268.1499 7105.8901 m-6267.6729 7105.8789 -6267.2764 7106.2549 -6267.2632 7106.7324 c-6267.2515 7107.21 -6267.6274 7107.6069 -6268.1055 7107.6191 c-6268.5825 7107.6318 -6268.9795 7107.2549 -6268.9917 7106.7773 c-6269.0039 7106.3008 -6268.6274 7105.9023 -6268.1499 7105.8901 cf-6268.1274 7106.7549 mFUu-6268.1475 7108.1157 m-6267.6699 7108.1045 -6267.2729 7108.4805 -6267.2607 7108.959 c-6267.2485 7109.4341 -6267.6255 7109.8325 -6268.1025 7109.8447 c-6268.5791 7109.8574 -6268.9766 7109.4814 -6268.9888 7109.0029 c-6269.0015 7108.5264 -6268.6245 7108.1279 -6268.1475 7108.1157 cf-6268.1245 7108.9805 mFUu-6266.0723 7104.7119 m-6265.5952 7104.6997 -6265.1987 7105.0781 -6265.1865 7105.5532 c-6265.1738 7106.0303 -6265.5508 7106.4287 -6266.0273 7106.4414 c-6266.5054 7106.4541 -6266.9019 7106.0757 -6266.9141 7105.5996 c-6266.9272 7105.123 -6266.5498 7104.7261 -6266.0723 7104.7119 cf-6266.0503 7105.5781 mFUu-6266.0698 7106.9395 m-6265.5928 7106.9253 -6265.1953 7107.3013 -6265.1831 7107.7788 c-6265.1704 7108.2573 -6265.5474 7108.6543 -6266.0249 7108.6685 c-6266.5024 7108.6797 -6266.8994 7108.3013 -6266.9116 7107.8252 c-6266.9233 7107.3486 -6266.5469 7106.9512 -6266.0698 7106.9395 cf-6266.0474 7107.8013 mFUu-6264.0332 7105.7822 m-6263.5557 7105.7695 -6263.1592 7106.1475 -6263.1465 7106.6255 c-6263.1333 7107.1016 -6263.5103 7107.498 -6263.9883 7107.5117 c-6264.4653 7107.5229 -6264.8618 7107.1475 -6264.8745 7106.6685 c-6264.8862 7106.1909 -6264.5098 7105.7949 -6264.0332 7105.7822 cf-6264.0103 7106.6475 mFUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Banner/ Adobe Patte) -(rnOnPath Brush Tool/ Arrow Brush Circles/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 0 0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Arrow Brush Circles)(1 / Unnamed Brush Pat 44/ Unnamed Brush Pat 44/ Unnamed Brush ) -(Pat 44/ Unnamed Brush Pat 48/ Unnamed Brush Pat 47/ 0 1 /  1 3) -( 1 0 4 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(Black)Pc0 0.993988 1 0 1 0 0 Xa(RGB Red)Pc0.061982 0 0.965148 0 1 1 0 Xa(RGB Yellow)Pc0.627649 0 1 0 0 1 0 Xa(RGB Green)Pc0.517937 0 0.125399 0 0 1 1 Xa(RGB Cyan)Pc0.883665 0.769161 0 0 0 0 1 Xa(RGB Blue)Pc0.269902 0.816403 0 0 1 0 1 Xa(RGB Magenta)Pc0.169619 0.978973 0.927245 0.067445 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.798032 0.968749 0.000122 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0.000366 0.500664 0.985656 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0.000214 0.348486 0.871305 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.045136 0 0.931884 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188968 0.000397 0.98233 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501091 0.001373 0.990387 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.746151 0 0.99704 0.000092 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.863859 0.175784 1 0.038239 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.90219 0.334752 0.98764 0.260655 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.761959 0 0.749783 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.78442 0.090852 0.457557 0.000275 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.6972 0.14847 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.875364 0.526451 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262516 0.245243 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.495582 0.991913 0.013703 0.001099 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.348913 1 0.372045 0.108156 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.118441 1 0.4925 0.008728 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.970001 0.204959 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.22855 0.274266 0.39942 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.398444 0.428534 0.525292 0.068086 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.50399 0.531365 0.608972 0.235935 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.575982 0.60415 0.637385 0.419348 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.226719 0.383947 0.636683 0.01181 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.315953 0.491829 0.739315 0.098909 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.362341 0.574029 0.840574 0.226139 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.391699 0.641047 0.934417 0.35581 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.477943 0.734768 0.837125 0.681575 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Fade To Edge Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade To Edge Black)PcBb0 0 0 0 Bh2 (Neon Rings Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Neon Rings Vignette)PcBb2 (Water) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Water)PcBb0 0 0 0 Bh2 (Pink Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Pink Radial)Pc(Diamond Cubes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Diamond Cubes)Pc0.75021 0.679683 0.670222 0.90164 0 0 0 Xa(R=0 G=0 B=0)Pc0.725765 0.66601 0.651911 0.781613 0.101961 0.101961 0.101961 Xa(R=26 G=26 B=26)Pc0.69482 0.6318 0.621515 0.583612 0.2 0.2 0.2 Xa(R=51 G=51 B=51)Pc0.653773 0.579889 0.56878 0.366613 0.301961 0.301961 0.301961 Xa(R=77 G=77 B=77)Pc0.597284 0.512352 0.507713 0.201328 0.4 0.4 0.4 Xa(R=102 G=102 B=102)Pc0.516472 0.431495 0.431495 0.075471 0.501961 0.501961 0.501961 Xa(R=128 G=128 B=128)Pc0.426368 0.347875 0.353155 0.009857 0.6 0.6 0.6 Xa(R=153 G=153 B=153)Pc0.306798 0.242466 0.247654 0 0.701961 0.701961 0.701961 Xa(R=179 G=179 B=179)Pc0.193668 0.150057 0.155337 0 0.8 0.8 0.8 Xa(R=204 G=204 B=204)Pc0.084596 0.061311 0.065766 0 0.901961 0.901961 0.901961 Xa(R=230 G=230 B=230)Pc0.037049 0.025086 0.025086 0 0.94902 0.94902 0.94902 Xa(R=242 G=242 B=242)Pc0.6318 0.219425 0 0 0.247059 0.662745 0.960784 Xa(R=63 G=169 B=245)Pc0.55407 0 0.965515 0 0.478431 0.788235 0.262745 Xa(R=122 G=201 B=67)Pc0 0.508354 0.961639 0 1 0.576471 0.117647 Xa(R=255 G=147 B=30)Pc0 0.965057 0.900572 0 1 0.113725 0.145098 Xa(R=255 G=29 B=37)Pc0 0.661738 0.032776 0 1 0.482353 0.67451 Xa(R=255 G=123 B=172)Pc0.253758 0.127169 0.116762 0 0.741176 0.8 0.831373 Xa(R=189 G=204 B=212)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 3 79 79 255 0 50 Lb(Layer 4) Ln0 Au*u1 D0 O0.788052 0.235294 0.156313 0.000031 0 0.6 0.74902 Xa0 J 0 j 1 w 10 M []0 d0 XR94.3145 -865.96 m103.8198 -867.8608 113.3315 -869.7251 122.8735 -871.4355 c132.1904 -873.1055 140.9014 -876.0156 149.9932 -878.6011 c158.4893 -881.0171 166.7935 -880.8477 175.731 -880.7295 C175.5674 -883.0264 175.4023 -885.3237 175.2456 -887.6216 c174.2905 -901.623 173.2988 -915.6279 170.9448 -929.4771 c168.603 -943.252 164.7803 -956.6777 162.6958 -970.5244 c160.605 -984.416 159.582 -998.4106 159.5371 -1012.4565 c159.5103 -1020.8408 172.5103 -1020.8384 172.5371 -1012.4565 c172.5859 -997.105 173.8291 -981.8618 176.3926 -966.7241 c179.0576 -950.9873 183.3472 -935.6938 185.4116 -919.8354 c186.8872 -908.4971 187.6313 -897.0806 188.3975 -885.6709 C203.3115 -886.0654 217.9639 -888.7861 232.7134 -890.8779 c247.5757 -892.9863 262.2271 -892.9072 277.1943 -893.1504 c292.5586 -893.4004 307.958 -894.29 323.0435 -897.3569 c330.1245 -898.7964 337.4985 -896.9683 344.5562 -898.377 c350.541 -899.5713 357.374 -902.4326 362.5449 -897.6802 c369.0508 -891.7012 366.0698 -881.1934 363.5801 -874.041 c362.2085 -870.1006 360.5073 -866.2583 358.7437 -862.4795 c356.5337 -857.7437 355.1421 -852.8232 353.6895 -847.7842 c345.2114 -818.3691 342.7598 -787.7095 334.7671 -758.2866 c330.8848 -743.9956 327.7031 -729.5225 324.1616 -715.145 c320.5122 -700.3306 315.6172 -686.2231 310.668 -671.8169 c305.9922 -658.2075 301.7554 -644.436 298.2305 -630.4819 c296.7886 -624.7729 296.2695 -619.8184 295.9404 -613.9731 c295.8604 -612.5508 295.5732 -611.145 295.2407 -609.752 C295.6587 -609.9063 296.0684 -610.0649 296.4609 -610.207 c301.3701 -611.9829 305.9063 -615.9326 309.5889 -619.522 c312.0586 -621.9292 315.4238 -623.7178 318.1411 -625.8711 c320.813 -627.9883 323.4751 -630.1128 326.1875 -632.1787 c336.8105 -640.2695 347.7979 -648.5078 357.5996 -657.5977 c363.1816 -662.7744 369.0923 -667.6836 375.2578 -672.1475 c379.5811 -675.2778 386.3765 -677.9707 389.9751 -674.6699 C393.897 -676.7788 399.9092 -674.9824 399.6973 -669.2466 c399.4888 -663.6133 397.8687 -658.2754 396.3491 -652.8892 c394.7305 -647.1499 394.0967 -641.2324 392.7139 -635.4199 c389.4346 -621.6396 389.4575 -607.4917 386.2964 -593.6504 c383.2275 -580.2168 378.7813 -567.1396 375.5977 -553.7324 c374.0581 -547.2495 373.5039 -540.7041 372.3047 -534.1855 c370.9048 -526.5742 369.3384 -518.9985 367.6475 -511.4463 c361.2202 -482.7471 353.2231 -454.3525 344.8701 -426.1621 c342.936 -419.6353 340.9316 -413.1294 338.8345 -406.6533 c337.0835 -401.2456 336.123 -395.6128 334.6987 -390.1045 c333.7617 -386.4805 332.7334 -382.7705 331.5283 -379.1006 C337.1763 -381.8525 342.7886 -384.5991 348.0957 -388.1284 c353.6226 -391.8032 359.4233 -394.4341 364.7627 -398.4292 c370.3892 -402.6396 376.1533 -406.1753 383.3213 -406.6108 c389.7515 -407.0015 392.0049 -398.1934 391.9019 -393.3623 c391.7656 -386.9751 388.708 -380.7593 386.6592 -374.8286 c381.8091 -360.791 375.9346 -347.1704 371.4785 -332.9824 c369.3267 -326.1318 367.4453 -319.2021 365.1694 -312.3901 c362.7573 -305.1704 358.8408 -298.8027 356.1079 -291.7935 c354.9722 -288.8809 353.9531 -285.9517 352.6812 -283.0918 c351.5132 -280.4653 349.813 -278.8018 349.1504 -276.8218 c346.9731 -270.3154 342.9609 -264.6016 339.877 -258.5259 c336.7285 -252.3223 334.9072 -244.6748 333.5303 -237.8892 c332.79 -234.2417 333.1758 -231.0801 331.5273 -227.646 c331.043 -226.6362 330.6328 -225.5864 330.2529 -224.5225 C333.6362 -226.6245 336.7319 -229.4443 339.2188 -231.8677 c345.4229 -237.9136 356.186 -240.7104 364.208 -243.3823 C364.3877 -244.5396 364.5176 -245.7168 364.5669 -246.9331 c364.708 -250.4033 365.4253 -253.4409 367 -256.2637 C367 -262 L367 -270 380 -270 380 -262 C380 -254.4321 L380 -252.2324 378.6499 -251.3335 378.0029 -249.5034 c377.3696 -247.7129 377.5205 -245.5918 377.4932 -243.729 c377.4482 -240.6904 376.646 -238.0283 375.7393 -235.1431 c372.624 -225.2305 368.231 -215.9233 365.4121 -205.8965 c362.5889 -195.8555 359.0864 -186.0151 355.8521 -176.1035 c354.1216 -170.8013 352.5059 -165.4644 351.0371 -160.084 c349.9888 -156.2417 349.7871 -152.4048 348.2314 -148.6919 c346.5742 -144.7373 344.3726 -141.1455 342.0195 -137.5708 c339.1533 -133.2153 338.4609 -126.7163 337.5791 -121.6943 c336.6606 -116.4639 335.9736 -111.3237 334.0332 -106.3594 c332.1011 -101.4165 330.2935 -96.4248 328.4775 -91.438 c325.2197 -82.4917 322.0967 -73.4521 318.6606 -64.5859 c316.1626 -58.1396 312.6675 -52.1646 309.4941 -46.0352 C312.2954 -42.1431 309.6606 -35.3799 304.2622 -35.5591 C302.6992 -33.6436 300.395 -32.5918 297.6421 -33.3496 c294.9473 -34.0903 292.4893 -37.1035 292.7793 -40.0342 C288.333 -42.6753 284.3867 -46.1157 280.9375 -50.1416 c278.2363 -53.2944 276.2612 -55.6665 272.9868 -58.2827 c268.8525 -61.5864 264.9434 -65.165 261.1094 -68.8091 c254.4453 -75.144 248.0415 -81.6245 242.6558 -89.1006 c240.1777 -92.5405 238.0654 -96.2334 236.061 -99.9634 c233.8633 -104.0532 230.1411 -107.0615 226.873 -110.3296 C218.231 -118.9717 L214.8428 -122.3599 212.7583 -128.4102 210.1646 -132.4961 c204.854 -140.8608 198.8696 -148.7773 193.375 -157.0195 c188.5684 -164.23 183.7363 -171.1655 178.4497 -178.0439 c173.2109 -184.8608 168.8105 -192.3159 167.1768 -200.8521 c166.5039 -204.3662 168.1118 -207.8047 171.7163 -208.8477 c181.064 -211.5537 194.0483 -210.7075 203.1558 -207.5405 c207.5215 -206.0225 212.6416 -206.5293 217.2764 -206.5977 C215.0034 -209.4209 212.625 -212.1694 210.7017 -215.0444 c204.7412 -223.9526 202.0264 -233.9517 197.8433 -243.6646 c189.1333 -263.8867 178.855 -282.1563 164.0684 -298.5996 c156.9658 -306.498 148.9644 -313.5508 142.1553 -321.7119 c134.8828 -330.4282 130.333 -341.02 122.4458 -349.1123 c118.7808 -352.8726 114.6978 -356.2202 110.5898 -359.4785 c106.3643 -362.8291 102.4761 -365.269 99.603 -369.8794 c97.3271 -373.5317 93.9727 -376.4893 91.0176 -379.5757 c87.7837 -382.9541 85.5786 -387.1587 82.4282 -390.5767 c81.5039 -391.5796 80.98 -392.6636 80.7646 -393.749 C73.7383 -395.125 74.168 -406.7026 82.0864 -406.6108 c101.3745 -406.3877 119.2666 -399.3618 138.1353 -396.502 c148.1162 -394.9897 158.4492 -390.9956 167.5747 -386.8169 c166.0938 -387.4951 170.1943 -386.3369 170.7866 -386.2188 c171.6924 -386.0371 172.5864 -385.7852 173.4741 -385.5112 C169.4575 -391.1899 164.5625 -396.4336 161.1157 -402.3071 c154.3506 -413.8364 148.3262 -425.7827 141.5605 -437.3125 c138.3467 -442.79 134.7129 -447.8462 131.8691 -453.5723 c128.9639 -459.4209 126.5239 -465.5098 124.0811 -471.561 c119.5205 -482.8579 111.1162 -492.0264 106.6973 -503.3164 c102.1123 -515.0288 97.7681 -526.7168 90.7803 -537.2871 c87.3975 -542.4048 85.7949 -548.5249 83.0366 -554.0752 c81.751 -556.6616 80.4663 -559.2437 79.269 -561.8726 c77.8984 -564.8823 77.1699 -568.313 75.6738 -571.229 c72.6465 -577.1309 68.8403 -582.6846 64.6772 -587.8364 c62.8564 -590.0889 60.8999 -592.2261 58.9067 -594.3252 c56.6118 -596.7407 55.1919 -599.6787 53.0718 -602.2485 c51.1123 -604.623 48.8999 -606.7979 46.7363 -608.9829 c44.708 -611.0308 43.3252 -613.4629 41.4189 -615.6206 c37.5898 -619.9546 34.2236 -623.7915 33.6113 -629.7407 c33.2979 -632.7896 35.873 -635.0244 38.3833 -636.0088 c45.1338 -638.6543 52.8325 -635.1963 58.9673 -632.4395 c66.957 -628.8491 75.1328 -626.376 83.687 -624.459 c93.2524 -622.3149 102.936 -621.042 112.4082 -618.4644 c114.3823 -617.9268 116.3467 -617.3511 118.3047 -616.7549 C115.0591 -621.7197 112.436 -627.3872 109.8071 -632.6328 c103.0942 -646.0278 95.2183 -658.8403 87.4443 -671.645 c79.626 -684.5234 74.2393 -697.9512 68.5034 -711.8184 c62.4707 -726.4033 55.7524 -740.6914 49.9897 -755.3911 c47.3706 -762.0723 45.9971 -769.3198 43.7197 -776.1611 c41.3115 -783.397 39.8804 -790.9844 37.2813 -798.123 c34.9312 -804.5786 31.1143 -810.4512 28.5596 -816.8364 c25.7627 -823.8286 23.084 -830.5737 19.8203 -837.3945 c15.1074 -847.2451 13.0083 -860.0952 25.3901 -864.7451 c29.7002 -866.3633 35.1069 -865.8804 39.6172 -865.8623 c48.0977 -865.8281 56.5732 -865.3271 65.0454 -865.0098 c74.6421 -864.6499 84.8428 -864.0659 94.3145 -865.96 cf0 D49.4741 -852.6426 m43.2842 -852.8701 36.999 -853.1636 30.8135 -852.6821 c27.0962 -852.3926 28.9624 -848.6934 30.3184 -845.5459 c33.0815 -839.1328 36.6211 -833.1328 38.9712 -826.5313 c41.4746 -819.501 44.7729 -813.0435 47.8667 -806.2515 c50.7944 -799.8228 52.0313 -793.0425 54.0728 -786.3237 c56.3213 -778.9248 59.0396 -771.7095 60.8052 -764.167 c62.5059 -756.9028 66.1392 -749.8115 69.0874 -742.9707 c72.3457 -735.4092 75.6978 -727.8892 78.9199 -720.3125 c84.8301 -706.417 90.0117 -692.708 97.7769 -679.6885 c105.7505 -666.3193 114.0542 -653.1187 121.0322 -639.1943 c123.9985 -633.2754 126.9863 -627.0356 130.7104 -621.5708 c133.4019 -617.6221 136.0591 -613.9736 138.063 -609.8423 C138.9111 -609.5127 139.7593 -609.1831 140.6045 -608.8477 c148.3008 -605.7949 144.9492 -593.2178 137.1484 -596.3125 c136.8174 -596.4438 136.4858 -596.5601 136.1548 -596.6895 C133.2573 -595.6704 129.7031 -596.4175 128.1338 -599.646 C114.1123 -604.542 99.9912 -608.019 85.2485 -610.8799 c76.5469 -612.5684 67.9819 -614.8125 59.6797 -617.9297 c58.0181 -618.5537 56.0439 -619.6353 53.9551 -620.71 C54.3105 -620.2349 54.6631 -619.7573 55 -619.2646 c58.5625 -614.0605 63.7944 -610.1934 67.2134 -604.7383 c70.4883 -599.5127 75.5947 -595.0317 79.2817 -590.0039 c82.96 -584.9883 87.1172 -579.1704 88.7837 -573.1191 c90.4419 -567.0977 93.876 -561.5669 96.5391 -555.958 c97.7446 -553.4194 98.8066 -550.8071 99.7676 -548.1675 c100.9175 -545.0093 103.0073 -542.3906 104.7417 -539.5137 c111.165 -528.8589 114.3745 -516.9185 119.7246 -505.8384 c122.147 -500.8213 125.5186 -496.248 128.4854 -491.5488 c131.8071 -486.2871 134.3042 -480.7788 136.6167 -475.0171 c139.0703 -468.9028 141.6631 -462.8638 144.6768 -457.0024 c147.5801 -451.354 151.3892 -446.3047 154.5635 -440.8247 c161.2568 -429.2671 167.2852 -417.3389 174.1191 -405.8608 c180.0181 -395.9526 188.7852 -388.6401 192.0576 -377.1475 c193.1709 -373.2397 190.021 -368.6929 185.79 -368.9194 c178.9697 -369.2842 172.8608 -372.5762 166.2412 -373.9014 c161.958 -374.7583 158.019 -376.9858 153.8516 -378.5049 c148.7334 -380.3701 143.438 -381.7441 138.165 -383.0908 c129.4536 -385.3164 120.5332 -386.8193 111.7876 -389.0093 c107.0269 -390.2012 102.2725 -391.2881 97.4805 -392.1099 C97.9844 -391.4297 98.4971 -390.7563 99.0337 -390.1021 c102.187 -386.2588 105.9434 -383.0205 108.9546 -379.0303 c109.5459 -378.2471 111.1182 -375.2988 111.4692 -375.0356 c113.7915 -373.293 116.1064 -371.54 118.3955 -369.7529 c123.0068 -366.1533 127.4717 -362.4165 131.6382 -358.3047 c139.7871 -350.2627 144.1943 -339.7554 151.3477 -330.9043 c158.3628 -322.2246 166.917 -314.8467 174.377 -306.5508 c189.5083 -289.7236 200.125 -270.8916 209.0684 -250.2261 c213.2891 -240.4727 216.3149 -230.7256 221.9268 -221.606 c226.6426 -213.9414 233.2837 -207.981 236.502 -199.3696 c237.9438 -195.5122 234.2202 -190.9126 230.2344 -191.1416 c227.8467 -191.2788 225.5376 -191.7344 223.3872 -192.8643 c222.8413 -193.1504 222.3408 -193 221.8389 -194 C219.5479 -194 L214.6069 -194 209.6309 -193.6123 204.7202 -194.2285 c201.8413 -194.5898 199.1582 -195.1431 196.501 -196.3296 c198.2588 -195.5449 195.8696 -196.2393 195.291 -196.2842 c194.0693 -196.3799 192.8496 -196.4897 191.6299 -196.6099 c188.4565 -196.9229 185.165 -197.2778 181.9155 -197.2285 C183.8525 -192.7261 186.6221 -188.6567 189.6748 -184.6108 c194.5737 -178.1191 199.3296 -171.7681 203.7256 -164.9185 c208.7148 -157.145 214.2871 -149.7529 219.4204 -142.0742 c222.0615 -138.124 224.54 -134.0718 226.8398 -129.9141 c228.8618 -126.2588 231.9668 -123.6211 234.9092 -120.6787 C243.7539 -111.8335 L246.7476 -108.8398 248.3247 -104.4932 250.48 -100.8687 c254.8643 -93.4946 260.6294 -87.5049 266.6929 -81.5103 c269.9326 -78.3071 273.2471 -75.1846 276.6484 -72.1538 c280.063 -69.1108 285.1313 -66.4014 287.6992 -62.6509 c290.5679 -58.46 293.9849 -54.7432 298.0947 -52.0161 C300.6035 -56.9575 303.2373 -61.8335 305.6006 -66.8657 c309.5195 -75.2104 312.1685 -84.5186 315.3247 -93.1968 c318.7568 -102.6328 322.7671 -111.7388 324.4585 -121.6646 c325.2593 -126.3628 326.0562 -131.0215 327.3774 -135.6079 c328.9019 -140.8999 331.6782 -145.2451 334.4229 -149.9346 c335.9028 -152.4634 337.209 -155.166 337.3149 -158.1357 c337.5034 -163.4185 340.0869 -169.2725 341.6367 -174.2925 c344.707 -184.2402 348.2168 -194.0459 351.2876 -203.9937 c353.7739 -212.0479 356.2598 -219.835 359.1753 -227.6646 C353.6563 -225.314 348.5972 -222.4702 343.6216 -218.4434 c337.2783 -213.3105 329.9287 -208.8472 321.5928 -208.4258 c318.1519 -208.252 314.96 -211.5146 315.0928 -214.9258 c315.2305 -218.4634 315.9063 -221.8965 316.8682 -225.2959 c317.606 -227.9038 320.0303 -232.1851 320.0806 -234.0615 c320.3223 -242.9985 323.5093 -252.4048 326.7017 -260.6733 c329.54 -268.0264 334.6152 -274.3022 337.1177 -281.7808 c338.2549 -285.1787 340.6309 -287.5161 341.9526 -290.8359 c343.5962 -294.9639 344.9668 -299.1162 347.0928 -303.04 c355.4326 -318.4321 357.9585 -336.3477 364.708 -352.4565 c366.3115 -356.2842 367.1753 -360.5737 368.6689 -364.4844 c370.2588 -368.6479 372.0273 -372.7402 373.6182 -376.9038 c374.8418 -380.1079 375.9419 -383.3726 377.0894 -386.605 c377.4736 -387.687 378.6191 -390.3237 379.0225 -392.5352 C373.1846 -389.9795 368.6689 -383.6777 362.8267 -381.4971 c358.874 -380.022 355.3677 -377.376 351.8794 -375.0562 c348.5903 -372.8691 345.2285 -371.3242 341.7197 -369.5908 c337.2202 -367.3677 332.6729 -365.2603 328.2363 -362.9102 c326.0098 -361.7305 323.8359 -360.459 321.7075 -359.1113 C320.9482 -358.2808 320.0742 -357.7134 319.1504 -357.3701 C318.9087 -357.1802 318.666 -356.9941 318.4307 -356.7891 c317.9756 -356.3926 317.7466 -356.1436 317.6504 -356.0396 C314.9424 -349.9678 304.3369 -350.5972 305.2158 -358.1357 c305.7632 -362.8296 308.9346 -366.2651 312.8018 -369.0078 C317.6719 -376.8794 320.2363 -386.1084 322.5322 -394.9873 c323.835 -400.0264 324.6797 -405.1641 326.2988 -410.1094 c328.417 -416.5781 330.3906 -423.0947 332.3345 -429.6182 c340.7329 -457.8013 348.6011 -486.2192 355.1118 -514.9023 c358.1626 -528.3442 359.7241 -541.999 362.6616 -555.4365 c365.4766 -568.3125 369.6826 -580.8438 372.9165 -593.6138 c376.25 -606.7734 376.376 -620.0801 378.9575 -633.3203 c380.165 -639.5142 381.4692 -645.6743 382.6831 -651.8579 c383.4253 -655.6392 384.8008 -659.3242 385.7363 -663.0806 C385.5557 -663.0986 385.374 -663.1177 385.1938 -663.1484 C385.165 -663.1343 385.1411 -663.1221 385.126 -663.1133 c383.7202 -662.3076 382.4009 -661.3438 381.0903 -660.3945 c377.8501 -658.0488 374.8003 -655.4277 371.7686 -652.8223 c364.1294 -646.2568 356.3662 -639.8672 348.6924 -633.3315 c337.8452 -624.0933 325.9404 -616.1797 315.0752 -606.9746 c307.8472 -600.8511 292.7427 -590.5625 283.856 -599.2183 c280.1987 -602.7808 281.4746 -608.3179 282.5703 -612.6411 c283.8774 -617.7969 283.2021 -623.4956 284.2676 -628.8066 c287.1802 -643.3159 292.2622 -657.7759 296.9517 -671.791 c301.7764 -686.2109 306.9854 -700.2554 310.731 -715.0171 c314.5259 -729.9746 317.8247 -745.0527 321.7588 -759.9756 c323.4565 -766.4165 325.2759 -772.647 326.3657 -779.2241 c327.5508 -786.3784 328.7456 -793.5308 330.0015 -800.6729 c332.4585 -814.6431 335.248 -828.5552 338.7388 -842.3066 c341.2988 -852.3936 344.3521 -861.9878 348.6196 -871.4404 c350.2422 -875.0332 351.5869 -878.7554 352.625 -882.5576 c353.0293 -884.0381 353.3096 -885.4863 353.4053 -887.0039 C353.2627 -887.0098 353.1182 -887.0166 352.9502 -887.0303 C351.2939 -886.6992 349.6558 -886.23 348.0122 -885.8413 c344.584 -885.0298 341.1421 -884.9688 337.6421 -884.9688 c330.0801 -884.9688 323.2148 -884.0479 315.7573 -882.9438 c301.1758 -880.7852 286.4331 -880.2344 271.7124 -880.0767 c257.8545 -879.9282 244.436 -879.5938 230.6963 -877.5454 c216.9497 -875.4966 203.2251 -873.1431 189.3198 -872.6982 C189.3262 -872.6196 189.3311 -872.541 189.3374 -872.4624 c190.4492 -858.3062 196.4976 -844.7705 199.144 -830.8389 c200.4951 -823.7251 199.6973 -815.979 199.6973 -808.7529 c199.6973 -801.9067 201.6309 -794.4258 202.9375 -787.6797 c205.8862 -772.4541 207.54 -756.9976 209.5742 -741.5835 c211.6133 -726.1299 213.2744 -711.0972 213.2773 -695.4814 c213.2788 -688.4551 213.3223 -681.4399 213.9097 -674.4341 c214.6089 -666.0942 216.9282 -657.7476 218.5088 -649.5322 c223.6548 -622.7803 228.1694 -595.4971 229.1104 -568.229 c229.5449 -555.6372 228.9233 -543.1489 230.8862 -530.6533 c231.8496 -524.5195 232.9233 -518.4155 233.6426 -512.2451 c234.3926 -505.8076 234.1431 -499.3267 234.7109 -492.877 c235.8604 -479.8198 238.7905 -467.0254 239.1836 -453.8833 c239.375 -447.502 241.4712 -440.895 242.8848 -434.6885 c244.3618 -428.2065 245.8911 -421.7378 247.2534 -415.2305 c249.9092 -402.5459 251.8193 -389.6958 254.3232 -376.9766 c255.5649 -370.6689 256.5996 -365.0576 256.2065 -358.6035 c255.8584 -352.8911 255.0044 -346.7896 258.0693 -341.6636 c262.3828 -334.4497 251.1406 -327.917 246.8442 -335.1021 c243.4517 -340.7764 242.7461 -347.0117 242.9214 -353.5151 c243.0142 -356.9463 243.3403 -360.3696 243.4644 -363.8008 c243.5972 -367.4844 242.1753 -371.5522 241.4653 -375.1567 c238.6069 -389.6772 236.418 -404.3296 233.2031 -418.7764 c231.624 -425.8721 229.9185 -432.9385 228.3936 -440.0469 c226.7085 -447.9023 226.3228 -455.4937 225.5806 -463.4585 c224.8833 -470.9414 223.5293 -478.3516 222.5459 -485.7993 c221.5347 -493.4585 221.5015 -501.0488 220.9727 -508.7344 c219.98 -523.1519 216.334 -537.002 216.3262 -551.5522 c216.3184 -566.2324 215.355 -580.5845 213.8579 -595.1729 c212.1709 -611.6123 209.4155 -627.896 206.3452 -644.127 c203.4219 -659.5801 200.4087 -674.3564 200.2876 -690.1455 c200.1826 -703.8066 199.9033 -717.1191 198.0405 -730.6763 c196.1289 -744.5908 194.3706 -758.5264 192.6235 -772.4624 c191.1187 -784.4678 186.6973 -796.6206 186.6973 -808.7529 c186.6973 -815.4009 187.5059 -822.6587 186.2637 -829.1973 c184.9634 -836.0425 182.9907 -842.7495 181.0684 -849.439 c179.458 -855.0425 177.3398 -860.9438 176.8213 -866.7778 c176.7852 -867.1851 176.7578 -867.5928 176.7227 -868 C169.7407 -868 L166.2168 -868 161.9678 -868.4834 158.5342 -867.6113 c151.7563 -865.8906 145.0859 -863.7085 138.4492 -861.5146 c131.7769 -859.3086 124.4526 -858.6221 117.54 -857.3286 c110.4019 -855.9932 103.2808 -854.5459 96.1602 -853.1221 c81.0508 -850.1001 64.7275 -852.0825 49.4741 -852.6426 cf*U*u1 D277.8613 -1254.8477 m293.751 -1248.6035 306.7793 -1235.293 302.623 -1217.0713 c300.811 -1209.125 292.0532 -1206.7305 285.1206 -1205.5254 c274.0142 -1203.5938 263.5415 -1204.1738 253.127 -1208.6094 c252.4502 -1208.8975 249.3989 -1208.915 248.186 -1209.0918 c245.5723 -1209.4736 243.0625 -1210.418 240.6377 -1211.4238 c235.7456 -1213.4551 231.3481 -1216.2646 226.9536 -1219.1904 c224.2983 -1220.958 221.7808 -1222.6094 219.3643 -1224.5059 C219.7207 -1223.6348 220.0659 -1222.8203 220.3696 -1222.1045 c222.2163 -1217.75 221.856 -1213.4277 222.5991 -1208.793 c223.5107 -1203.1045 225.2124 -1197.5391 226.6255 -1191.9619 c228.9063 -1182.9648 229.082 -1173.3193 235.6187 -1166.124 c242.0024 -1159.0967 248.5962 -1153.4932 249.0801 -1143.3203 c249.479 -1134.9365 236.4771 -1134.9756 236.0801 -1143.3203 c235.8828 -1147.4658 232.895 -1150.3457 230.144 -1153.1465 c226.916 -1156.4326 223.7964 -1159.6475 221.3315 -1163.5703 c217.564 -1169.5645 216.1187 -1176.9287 214.7612 -1184.124 C214.8745 -1174.7871 214.6509 -1165.4678 214.3291 -1156.3066 c214.1079 -1149.9951 213.374 -1143.7061 212.1968 -1137.5029 c211.3037 -1132.7969 209.7183 -1128.542 209.0205 -1123.8506 c207.9414 -1116.5938 205.6191 -1107.2363 198.9473 -1103.1406 c191.7822 -1098.7412 185.2568 -1109.9883 192.3857 -1114.3652 c194.9653 -1115.9492 196.3545 -1125.5117 196.5615 -1128.1348 c196.9878 -1133.5381 199.3638 -1139.002 200.2813 -1144.4082 c201.2354 -1150.0293 201.3613 -1155.8115 201.4678 -1161.499 c201.8354 -1181.2266 202.1216 -1201.5527 198.731 -1221.1182 C191.4199 -1216.2549 182.4434 -1212.9717 175.3267 -1210.5098 c165.6299 -1207.1563 155.8682 -1204.3652 145.9961 -1201.5596 c134.9502 -1198.4189 123.478 -1193.4736 111.7764 -1195.6914 c100.2837 -1197.8691 98.6113 -1209.3828 103.3257 -1218.2061 c107.7129 -1226.418 115.6665 -1233.8301 123.5361 -1238.5801 c128.7915 -1241.752 134.542 -1244.1133 140.1479 -1246.5781 c140.6836 -1246.8135 141.2139 -1247.0635 141.7446 -1247.3125 C127.8818 -1250.4756 110.3418 -1259.2412 117.4497 -1275.7236 c120.9624 -1283.8691 130.4619 -1288.7373 138.4326 -1291.1816 c147.5015 -1293.9629 157.478 -1293.9873 166.7939 -1292.7158 c170.5708 -1292.2002 175.9077 -1291.8008 179.1943 -1289.6738 c184.1753 -1286.4512 189.5195 -1283.8525 194.4722 -1280.583 c198.7217 -1277.7783 203.0923 -1274.2549 206.6758 -1270.625 c207.6216 -1269.667 208.543 -1268.5527 209.4854 -1267.415 C209.9697 -1271.2217 210.8701 -1274.9492 212.5654 -1278.4688 c215.1963 -1283.9316 218.5708 -1289.1162 222.3511 -1293.8525 c229.4487 -1302.7451 240.7671 -1313.1162 252.8052 -1307.0742 c265.9331 -1300.4854 260.877 -1280.1914 256.2617 -1269.8652 c254.3159 -1265.5117 251.8335 -1261.7432 248.9736 -1258.374 C258.5029 -1259.3994 268.0957 -1258.6846 277.8613 -1254.8477 cf0 D120.1445 -1218.9863 m117.7778 -1216.4521 115.6934 -1213.7842 114.0562 -1210.7197 c113.8896 -1210.4082 113.5996 -1209.3828 113.4653 -1208.9531 C113.5942 -1208.875 113.7383 -1208.7891 113.9175 -1208.6836 c114.4399 -1208.376 115.0806 -1208.2002 115.6816 -1208.1309 c119.8862 -1207.6504 124.2349 -1208.6494 128.2446 -1209.8037 c133.5532 -1211.3311 138.8296 -1213.04 144.1689 -1214.5576 c152.5137 -1216.9297 160.7495 -1219.3145 168.9707 -1222.0625 c177.6821 -1224.9756 195.5156 -1229.6631 198.6211 -1240.1504 C198.0215 -1240.2285 197.4214 -1240.3096 196.8184 -1240.3984 c193.7681 -1240.8506 190.7568 -1241.5938 187.7607 -1242.3096 c185.7261 -1242.7969 183.6616 -1243.0117 181.5879 -1243.1719 C178.7832 -1243.0791 175.9785 -1242.998 173.1675 -1242.9668 c167.8369 -1242.9082 162.167 -1242.6914 157.2158 -1240.4893 c152.2759 -1238.291 147.4624 -1235.6934 142.4922 -1233.4941 c134.0273 -1229.749 126.4956 -1225.7861 120.1445 -1218.9863 cf195.8887 -1262.9854 m192.6709 -1265.9912 188.8896 -1268.7979 185.1328 -1271.1406 c181.3159 -1273.5215 176.5063 -1277.1299 172.2295 -1278.3965 c159.5303 -1282.1582 140.644 -1282.4434 130.7524 -1272.248 c127.2065 -1268.5928 128.3359 -1267.0762 132.4131 -1264.5439 c137.8564 -1261.1631 144.6147 -1259.749 150.8677 -1258.7998 c153.8301 -1258.3496 156.8828 -1258.4824 159.8643 -1258.3564 c166.0615 -1258.0947 172.2168 -1257.002 178.3828 -1256.3799 c179.4805 -1256.2695 180.5537 -1256.1592 181.6177 -1256.0459 C188.3418 -1256.2344 195.0479 -1256.8691 201.7788 -1256.4111 c201.9785 -1256.3975 202.1733 -1256.373 202.3716 -1256.3564 C200.2632 -1258.5234 198.2134 -1260.8135 195.8887 -1262.9854 cf246.4365 -1295.7832 m243.0522 -1299.0449 232.8525 -1286.3984 231.1704 -1284.1465 c228.6074 -1280.7148 226.4922 -1276.9629 224.4248 -1273.2236 c221.3745 -1267.707 221.9233 -1260.4941 221.9199 -1254.4316 c221.9194 -1253.9336 221.8486 -1253.4355 221.7197 -1252.9473 C229.5547 -1257.6904 236.9019 -1262.6729 241.9971 -1270.7021 c244.5381 -1274.7061 246.0645 -1278.9277 247.1992 -1283.5107 c248.064 -1287.002 249.3643 -1292.9609 246.4365 -1295.7832 cf223.4482 -1238.7451 m224.9478 -1237.0332 226.4668 -1235.3389 228.1523 -1233.8398 c230.8633 -1231.4287 234.4097 -1229.7959 237.4502 -1227.8281 c240.9478 -1225.5645 244.5337 -1223.5986 248.5171 -1222.3496 c252.3433 -1221.1494 256.0015 -1221.5859 259.6885 -1219.834 c263.3608 -1218.0898 267.6226 -1217.5127 271.6333 -1217.3486 c276.23 -1217.1592 280.7998 -1217.8623 285.2964 -1218.7246 c287.1362 -1219.0781 289.7529 -1219.8613 290.2222 -1220.6816 c292.0352 -1223.8525 289.4546 -1230.668 287.0215 -1233.6172 c282.9512 -1238.5508 276.8442 -1241.5459 270.917 -1243.6016 c254.7295 -1249.2129 238.9248 -1243.9395 223.4482 -1238.7451 Cf*U*u1 D87.7661 -1833.9883 m99.4673 -1839.0215 111.3379 -1840.8877 124.062 -1841.1406 c136.4922 -1841.3867 148.5835 -1840.377 160.584 -1837.6748 C153.4653 -1844.5781 147.8306 -1852.6523 143.771 -1861.9668 c135.5044 -1880.9316 126.7656 -1907.5361 144.5098 -1924.0156 c152.5845 -1931.5156 165.9146 -1934.1504 176.5996 -1933.3711 c182.0225 -1932.9766 187.3545 -1931.625 191.8125 -1928.4434 c194.0176 -1926.8711 195.8062 -1924.6748 198.0659 -1923.2197 c201.5938 -1920.9473 205.4316 -1919.1504 209.1768 -1917.2734 c222.5601 -1910.5674 232.5825 -1899.875 242.147 -1888.5664 c244.0508 -1886.3154 245.9141 -1884.04 247.7837 -1881.7715 C242.6982 -1899.9141 241.0532 -1918.7832 241.0146 -1937.8086 c240.9595 -1965.1016 239.1328 -1992.4287 246.1895 -2019.1221 c249.1245 -2030.2266 249.0718 -2042.0029 251.9614 -2053.1846 c252.5059 -2055.29 253.1309 -2057.3682 253.8003 -2059.4316 C249.3105 -2060.6592 244.7681 -2061.6367 240.188 -2062.4355 C235.2295 -2060.0391 230.0923 -2058.5322 224.7007 -2056.5488 c209.5454 -2050.9727 193.9868 -2046.8379 178.4648 -2042.4023 c163.9961 -2038.2686 150.1035 -2033.5098 134.9414 -2033.1563 c124.938 -2032.9219 112.2231 -2035.1846 108.6489 -2046.3027 c104.5874 -2058.9375 116.229 -2065.4609 126.2769 -2068.6406 c138.8042 -2072.6064 151.3525 -2074.5859 164.3091 -2076.5176 c171.957 -2077.6582 179.2456 -2078.7637 187.0132 -2079.0498 c195.3345 -2079.3574 203.6694 -2079.1445 211.9785 -2078.6504 c220.4922 -2078.1436 229.5171 -2077.5469 238.3408 -2076.2637 C240.6904 -2077.9531 243.0205 -2079.6904 245.7905 -2080.4521 c249.499 -2081.4727 253.271 -2082.9297 257.3955 -2083.1543 c259.3696 -2083.2617 260.8701 -2082.6172 261.9111 -2081.5703 C263.3218 -2085.5801 264.5981 -2089.6396 265.5537 -2093.8145 c266.999 -2100.1309 270.2002 -2106.3115 272.6089 -2112.333 c275.3252 -2119.123 278.041 -2125.9121 280.7568 -2132.7031 c283.2407 -2138.9121 287.6563 -2143.9365 292.0225 -2149 C308.6987 -2149 L303.7979 -2142.21 297.6313 -2136.3574 293.3755 -2129.0889 c290.1279 -2123.542 288.2715 -2116.6943 285.8853 -2110.7285 c283.2588 -2104.1621 279.5405 -2097.2764 278.0894 -2090.3584 c276.9189 -2084.7813 275.1611 -2079.4287 273.2202 -2074.1436 C273.8154 -2074.0928 274.3779 -2074.0479 274.8911 -2074.0166 c284.2188 -2073.4502 293.1182 -2072.1621 302.3428 -2070.6357 c312.8232 -2068.9004 322.0806 -2065.5938 329.7324 -2058.1055 c335.5244 -2052.4375 342.8071 -2044.5137 342.2163 -2035.7803 c341.4097 -2023.8506 330.0742 -2024.5166 321.3721 -2026.4248 c311.1021 -2028.6758 301.918 -2032.584 294.0552 -2039.6484 c290.1128 -2043.1904 285.8613 -2046.8291 280.8076 -2048.5625 c275.6802 -2050.3213 271.0645 -2053.0137 266.1592 -2055.1992 C265.9497 -2054.5791 265.7412 -2053.958 265.54 -2053.334 c261.9277 -2042.1143 261.1968 -2030.3145 259.2949 -2018.7539 c258.2871 -2012.6289 256.5186 -2006.6553 255.5366 -2000.5078 c254.5283 -1994.1934 254.1387 -1987.7725 253.8579 -1981.3916 c253.2749 -1968.1377 253.8306 -1954.8545 253.9868 -1941.5977 c254.2422 -1919.8955 255.3237 -1898.2207 262.5015 -1877.7031 C268.1641 -1887.2793 275.9312 -1895.7725 284.3188 -1903.2285 c287.6748 -1906.2129 290.6802 -1909.1563 293.2632 -1912.8105 c295.645 -1916.1807 298.0889 -1919.5459 301.1758 -1922.3086 c307.3521 -1927.8359 316.2231 -1929.3262 323.4717 -1924.9941 c335.1865 -1917.9922 335.4482 -1899.8945 335.4985 -1887.9639 c335.542 -1877.7773 330.9146 -1868.3457 325.6064 -1859.8906 c325.5811 -1859.8506 325.5571 -1859.8105 325.5322 -1859.7695 C326.647 -1860.6104 327.7637 -1861.4219 328.8877 -1862.1836 c333.8438 -1865.5439 338.8794 -1868.7051 344.3145 -1871.2412 c349.5552 -1873.6855 355.1182 -1874.9355 360.5229 -1876.875 c378.0933 -1883.1787 403.2471 -1888.0254 415.395 -1870.0332 c429.0757 -1849.7705 410.2661 -1830.7891 395.2744 -1818.7266 c391.2612 -1815.4971 387.4214 -1811.9824 383.3149 -1808.8896 c378.2476 -1805.0723 372.665 -1802.3828 366.8169 -1799.9854 c366.0288 -1799.6621 365.2197 -1799.3408 364.4023 -1799.0225 C365.4033 -1798.5557 366.3916 -1798.0566 367.3599 -1797.5166 c375.5742 -1792.9316 383.5356 -1784.3779 387.9067 -1776.1074 c395.0313 -1762.625 397.5166 -1743.5039 384.6777 -1732.543 c376.9136 -1725.9141 365.1641 -1722.4688 355.1128 -1722.4824 c346.7051 -1722.4932 336.9976 -1725.8301 329.5059 -1730.499 C330.0283 -1728.4883 330.541 -1726.4736 331.0479 -1724.46 c331.5762 -1722.3633 332.0591 -1720.252 332.6885 -1718.1826 c333.5703 -1715.2832 333 -1711.6504 333 -1708.6455 C333 -1696.2422 L333 -1682.3438 333.8911 -1668.4424 326.2964 -1656.1348 c319.4688 -1645.0723 307.2422 -1640.2529 294.7085 -1642.3115 c283.0229 -1644.2305 272.7373 -1653.0645 264.3135 -1660.7832 c255.0952 -1669.2305 245.9453 -1677.8691 239.6626 -1688.7979 c235.0879 -1696.7559 232.1323 -1705.5391 230.4478 -1714.5703 C226.7612 -1712.8203 223.1528 -1710.8877 219.4063 -1709.2734 c213.2676 -1706.6289 207.875 -1702.2471 202.1963 -1698.6895 c193.8892 -1693.4854 186.2598 -1687.9023 177.2671 -1683.9766 c165.4824 -1678.833 141.8765 -1667.9238 131.8613 -1681.4375 c126.5283 -1688.6328 127.2432 -1699.1416 128.731 -1707.4111 c130.543 -1717.4824 135.1743 -1727.4902 140.9053 -1735.9111 c146.2568 -1743.7754 153.6982 -1749.459 161.7734 -1754.2256 C160.4141 -1754.2637 159.0518 -1754.3203 157.6816 -1754.4209 c143.9951 -1755.4199 133.0259 -1761.1768 120.9253 -1767.0205 c109.8311 -1772.3789 101.0781 -1781.4766 90.7378 -1788.0264 c81.7148 -1793.7412 72.2593 -1801.1143 70.8525 -1812.4414 c69.4844 -1823.458 78.749 -1830.1104 87.7661 -1833.9883 cf0 D147.3945 -2060.9453 m139.7935 -2059.3662 131.2051 -2057.3223 124.1514 -2054.0762 c116.2944 -2050.4609 125.7554 -2046.1162 130.4165 -2046.1182 c135.1489 -2046.1201 139.8662 -2046.2422 144.5771 -2046.7197 c150.3374 -2047.3037 156.0288 -2049.5156 161.5659 -2051.0977 c173.7285 -2054.5723 185.8911 -2058.0479 198.0542 -2061.5234 c202.4414 -2062.7773 206.7593 -2064.2188 211.0596 -2065.7061 C189.7153 -2066.9316 168.3716 -2065.3027 147.3945 -2060.9453 cf304.2754 -2047.917 m309.543 -2043.1836 315.7686 -2041.3027 322.4912 -2039.5273 c324.583 -2038.9756 326.7012 -2038.4648 328.8486 -2038.208 C328.7017 -2038.5771 328.5361 -2038.9395 328.3848 -2039.2363 c325.9624 -2043.9893 321.7666 -2047.8018 317.9331 -2051.4102 c312.4717 -2056.5527 303.0293 -2057.4463 295.9717 -2058.5742 c292.8555 -2059.0723 289.8955 -2059.5283 286.9268 -2059.9141 C293.4229 -2056.9639 298.7949 -2052.8418 304.2754 -2047.917 cf153.1421 -1730.7637 m148.1455 -1724.6523 144.8008 -1716.7568 142.5532 -1709.2705 c140.9302 -1703.8623 138.856 -1692.958 142.4775 -1688.8828 C142.4521 -1688.96 142.9497 -1688.623 143.3599 -1688.498 c144.3281 -1688.2041 145.4146 -1688.2314 146.666 -1688.2461 c149.9307 -1688.2852 153.1563 -1689.1641 156.2847 -1690.0205 c163.0752 -1691.8789 169.6255 -1694.6152 175.9932 -1697.5898 c179.7256 -1699.334 182.8589 -1701.6387 186.2783 -1703.9473 c191.3857 -1707.3945 196.7002 -1710.5313 201.873 -1713.8789 c204.5327 -1715.6006 207.1201 -1717.4238 209.6699 -1719.3037 c211.7549 -1720.8408 215.2314 -1721.5322 217.6064 -1722.6689 c221.3599 -1724.4648 225.043 -1726.3555 228.8457 -1728.0039 C228.7456 -1729.8203 228.686 -1731.6348 228.6719 -1733.4443 c228.6064 -1741.8301 241.6074 -1741.8242 241.6724 -1733.4443 c241.7632 -1721.7334 243.8066 -1710.0889 248.7822 -1699.4209 c253.9863 -1688.2637 262.6563 -1680.3428 271.3838 -1671.9727 c278.8062 -1664.8535 288.2529 -1655.9414 298.9854 -1654.7266 c311.7598 -1653.2813 318.7036 -1665.916 319.8213 -1676.9238 c320.4668 -1683.2842 320 -1689.8564 320 -1696.2422 C320 -1706.8369 L320 -1709.2061 320.7183 -1712.8672 320.0513 -1715.0605 c318.3682 -1720.5938 317.2002 -1726.2949 315.6699 -1731.873 c314.1919 -1737.2607 312.6094 -1742.6855 310.5894 -1747.9199 C310.0161 -1748.2148 309.4424 -1748.5146 308.8774 -1748.8408 c307.9321 -1749.3867 306.9771 -1749.96 306.0283 -1750.5625 C305.1538 -1749.6748 304.1992 -1748.8164 303.1289 -1747.9961 c293.7061 -1740.7773 281.4854 -1737.6221 269.8008 -1736.8857 c256.8804 -1736.0723 242.584 -1737.0146 230.5796 -1742.0986 c221.5283 -1745.9316 213.5278 -1753.4072 208.5405 -1762.2305 C208.0381 -1761.3408 207.3188 -1760.543 206.355 -1759.9307 c197.6665 -1754.4092 187.5703 -1753.0244 178.5474 -1748.4912 c169.3047 -1743.8477 159.7983 -1738.9053 153.1421 -1730.7637 cf296.0898 -1773.624 m297.9277 -1774.4561 299.6563 -1774.8975 301.293 -1775.041 C301.333 -1781.5 300.4048 -1788.1914 300.2852 -1794.1865 c300.0757 -1804.6816 290.7539 -1813.6328 282.0415 -1818.1445 C280.9971 -1816.791 279.3701 -1815.8555 277.1484 -1815.833 c264.0068 -1815.7002 250.7964 -1812.3369 239.1763 -1806.1455 c230.124 -1801.3223 220.4688 -1793.7715 217.314 -1783.6133 c213.5576 -1771.5176 225.5313 -1758.7012 235.5889 -1753.9814 c246.6377 -1748.7969 261.8799 -1748.9238 273.7871 -1750.2314 c279.1807 -1750.8242 284.7432 -1752.5518 289.6265 -1754.875 c291.7329 -1755.877 294.3228 -1757.2266 296.3853 -1758.9766 C294.458 -1761.5801 293.1406 -1764.5615 292.8706 -1768.0117 c292.7095 -1770.0684 294.1821 -1772.7598 296.0898 -1773.624 cf84.4668 -1811.1563 m87.7632 -1803.9297 96.356 -1799.9795 102.6514 -1795.8467 c107.5259 -1792.6475 111.8594 -1788.5234 116.54 -1785.0449 c121.5278 -1781.3369 127.0127 -1779.1953 132.2808 -1776.0938 c141.8408 -1770.4668 151.4805 -1767.5674 162.5728 -1767.1533 c176.314 -1766.6406 189.3779 -1771.7783 203.0742 -1772.043 c203.5747 -1772.0527 204.0391 -1771.9971 204.4849 -1771.9121 C204.4844 -1771.9141 204.4839 -1771.915 204.4834 -1771.917 c201.1011 -1784.1582 207.4453 -1796.0869 215.6685 -1804.7217 c221.8389 -1811.2012 229.4878 -1816.3105 237.8281 -1820.1455 C236.7261 -1821.2666 236 -1822.8809 236 -1825 C236 -1826.4482 236 -1827.2715 v236 -1830.8477 238.998 -1833.7275 242.54 -1833.7715 c256.1592 -1833.9414 269.4106 -1836.3721 282.7002 -1831.8906 c293.8784 -1828.1211 303.3936 -1819.8584 308.8994 -1809.4727 c314.2427 -1799.3926 313.7729 -1787.5225 313.8882 -1776.416 c313.9141 -1773.9326 313.855 -1771.5215 313.6606 -1769.1865 C316.606 -1765.8115 318.9751 -1761.4023 320.873 -1757.042 C322.5518 -1756.0752 324.0488 -1755.041 325.4702 -1753.3711 c327.7588 -1750.6846 329.5645 -1747.6309 331.894 -1744.9805 c334.3608 -1742.1738 338.4053 -1740.7607 341.668 -1739.0811 c345.3242 -1737.1982 349.4517 -1735.9473 353.5449 -1735.5586 c361.3052 -1734.8193 371.4668 -1737.7832 377.167 -1743.2568 c384.811 -1750.5977 379.6836 -1764.543 375.2393 -1772.1396 c371.479 -1778.5674 364.1606 -1785.3682 357.1895 -1788.0674 c348.3975 -1791.4707 339.0557 -1789.4766 330.6577 -1794.499 c325.3872 -1797.6514 327.2388 -1804.3154 332.2104 -1806.3789 c336.2573 -1808.0596 340.8999 -1807.8408 345.2017 -1807.8477 c349.5806 -1807.8555 353.3906 -1809.1465 357.5508 -1810.4395 c367.6733 -1813.585 375.0811 -1819.1289 383.1997 -1825.6172 c389.9487 -1831.0098 397.2271 -1836.418 402.4536 -1843.3877 c407.7705 -1850.4785 408.3359 -1857.3008 403.3315 -1864.7139 c399.1445 -1870.915 388.6089 -1869.7432 382.3306 -1869.0156 c374.0581 -1868.0557 366.6812 -1864.3691 358.6895 -1862.6123 c348.4771 -1860.3682 339.6724 -1853.8926 331.2061 -1848.0811 c322.1406 -1841.8594 314.4404 -1833.9766 303.5679 -1830.8809 c298.5254 -1829.4443 292.6436 -1835.6904 296.2275 -1840.4287 c301.3047 -1847.1426 306.8301 -1853.5322 311.1621 -1860.7725 c315.583 -1868.1621 320.4097 -1875.625 322.2979 -1884.1328 c323.3208 -1888.7422 322.4478 -1894.541 322.0229 -1899.1855 c321.6045 -1903.7549 320.7598 -1909.5977 317.5684 -1913.1396 c314.0547 -1917.041 309.4487 -1912.4951 307.0532 -1909.7119 c302.4126 -1904.3223 298.7021 -1898.8877 293.3291 -1894.0488 c279.5767 -1881.6611 267 -1866.5625 266 -1847.0244 C266 -1847 L266.3628 -1847 L266.1982 -1838.6445 253.6118 -1838.6611 253.3662 -1847 C253 -1847 L253 -1847.0244 L253 -1858.3271 243.8765 -1865.7676 237.2378 -1873.9629 c229.4429 -1883.585 220.9912 -1894.9131 210.4609 -1901.6934 c205.4268 -1904.9355 199.8892 -1907.2852 194.6333 -1910.1338 c192.2314 -1911.4355 189.7925 -1912.8252 187.8457 -1914.7617 c186.0845 -1916.5146 184.1538 -1918.4121 181.7915 -1919.3242 c173.8208 -1922.4023 162.6514 -1920.1055 155.4609 -1916.0898 c138.8223 -1906.7988 150.1899 -1879.5479 155.6489 -1867.0234 c160.0332 -1856.9648 166.7935 -1848.4883 175.4771 -1841.8232 c180.668 -1837.8389 185.3687 -1832.9766 190.6909 -1829.1875 C195.3613 -1827.5234 199.8521 -1825.5479 203.8853 -1823.0068 c210.1997 -1819.0293 206.0894 -1809.4805 198.877 -1811.127 c193.9063 -1812.2617 189.6426 -1814.4004 185.7007 -1817.0371 C179.8711 -1818.9814 173.7705 -1820.3672 168.0615 -1822.1865 c155.4756 -1826.1982 142.8188 -1828.1826 129.6172 -1828.1777 c118.3862 -1828.1748 107.7598 -1827.5166 97.1143 -1823.7793 c91.7617 -1821.8994 81.0801 -1818.5801 84.4668 -1811.1563 cf*U*u1 D1689.7974 -1979.2441 m1688.4668 -1973.4258 1685.9346 -1968.5742 1682.4521 -1963.4971 c1678.688 -1958.0098 1674.2275 -1952.9004 1670.1162 -1947.6719 c1665.4644 -1941.7549 1660.3032 -1936.335 1654.9199 -1931.084 c1653.1655 -1929.373 1651.418 -1927.626 1649.6616 -1925.8721 C1650.2412 -1925.626 1650.8184 -1925.374 1651.394 -1925.1191 C1651.4785 -1925.1133 1651.5581 -1925.1094 1651.6611 -1925.1016 C1652.8071 -1925.0693 1654.1187 -1924.9023 1655.2246 -1924.6797 c1658.0166 -1924.1201 1660.5786 -1922.9834 1663.145 -1921.7725 c1670.7231 -1918.1982 1664.1201 -1906.9932 1656.5835 -1910.5479 c1652.8818 -1912.293 1649.0811 -1911.874 1645.4238 -1913.6338 c1643.5249 -1914.5479 1641.5811 -1915.3613 1639.626 -1916.1494 C1634.7129 -1911.6602 1629.542 -1907.498 1623.8218 -1904.2139 c1610.8599 -1896.7734 1596.9844 -1897.3145 1582.541 -1897.3145 c1581.8857 -1897.3145 1581.2227 -1897.3115 1580.5605 -1897.3086 C1580.6704 -1896.4648 1580.7808 -1895.6201 1580.9043 -1894.7783 c1582.2231 -1885.7803 1586.7114 -1877.1309 1589.5889 -1868.5049 c1592.25 -1860.5303 1579.6924 -1857.1387 1577.0537 -1865.0498 c1574.3506 -1873.1504 1570.1699 -1881.2773 1568.6416 -1889.6465 c1568.1777 -1892.1865 1567.834 -1894.7432 1567.5269 -1897.3037 C1556.8242 -1897.4746 1545.9863 -1898.4199 1536.6108 -1902.6592 C1534.4678 -1899.7188 1530.1484 -1898.3164 1526.873 -1901.6875 c1525.5806 -1903.0176 1524.3408 -1904.3936 1523.1138 -1905.7803 C1519.7329 -1899.0449 1513.9072 -1893.6572 1507.6909 -1889.4424 c1499.3628 -1883.7969 1490.5205 -1882.4395 1480.7139 -1882.5225 c1467.4395 -1882.6357 1452.7754 -1883.7539 1441.2891 -1890.5547 C1440.7739 -1887.7852 1438.7334 -1885.2393 1435.1729 -1884.9688 c1433.4229 -1884.8359 1432.272 -1879.1611 1431.9756 -1877.8789 c1431.0483 -1873.8652 1429.5288 -1865.6943 1429.3657 -1859.9873 c1429.1543 -1852.5898 1429.3271 -1845.166 1429.3271 -1837.7656 c1429.3271 -1829.5381 1427.9326 -1821.8271 1427.041 -1813.6914 c1425.5562 -1800.1338 1435.2671 -1789.7051 1445.7803 -1782.6348 c1458.0518 -1774.3818 1472.7886 -1774.5156 1487.0249 -1774.5117 c1495.4082 -1774.5098 1495.4082 -1761.5098 1487.0249 -1761.5117 c1469.062 -1761.5166 1451.8457 -1762.4814 1436.6929 -1773.1475 c1423.2686 -1782.5977 1412.8032 -1796.6201 1414.041 -1813.6914 c1414.3535 -1817.9951 1415.2559 -1822.2725 1415.9194 -1826.5303 c1416.6826 -1831.4277 1416.3271 -1836.5303 1416.3271 -1841.4688 c1416.3271 -1851.2363 1415.6709 -1861.3018 1417.291 -1870.9746 c1418.9678 -1880.9873 1421.373 -1894.9199 1432.6152 -1897.5723 C1431.9336 -1898.3203 1431.2705 -1899.0967 1430.6377 -1899.9199 c1425.9644 -1905.9951 1424.2422 -1913.5332 1423.6484 -1921.1416 C1419.5737 -1919.6484 1415.7554 -1917.6289 1411.9023 -1915.5557 c1407.3252 -1913.0928 1402.5728 -1911.1201 1397.9307 -1908.8086 c1392.2734 -1905.9912 1386.5508 -1903.3457 1380.6919 -1900.9756 c1374.4795 -1898.4619 1368.9951 -1897.3145 1362.3335 -1897.3145 c1350.6147 -1897.3145 1339.2612 -1894.8457 1327.5327 -1894.8457 c1315.8105 -1894.8457 1303.7925 -1893.8096 1292.4131 -1897.1455 c1272.4258 -1903.0049 1255.3223 -1917.8545 1239.5742 -1930.8857 c1223.9268 -1943.834 1214.1226 -1962.4053 1213.8584 -1982.8271 c1213.75 -1991.2139 1226.75 -1991.2041 1226.8584 -1982.8271 c1227.0977 -1964.332 1236.9502 -1949.5039 1251.041 -1938.2266 c1265.792 -1926.4209 1281.2617 -1913.0273 1300.1196 -1908.6396 c1304.8477 -1907.54 1309.8184 -1908 1314.6323 -1908 C1330.8496 -1908 L1336.3652 -1908 1341.5869 -1908.6719 1347.0254 -1909.5195 c1352.5991 -1910.3877 1358.1099 -1910.3535 1363.7319 -1910.3535 c1375.7656 -1910.3535 1385.5215 -1918.5186 1396.4077 -1922.4473 c1405.7676 -1925.8262 1413.7256 -1932.0303 1423.4307 -1934.7422 C1423.6982 -1944.3467 1424.7852 -1954.5645 1427.2754 -1963.666 c1431.8047 -1980.2246 1448.8525 -1991.0117 1465.4165 -1993.6436 C1465.2861 -1994.5928 1465.1514 -1995.5264 1464.999 -1996.416 c1462.9658 -2008.3037 1461.915 -2020.1436 1463.5645 -2032.1348 c1465.229 -2044.2344 1471.4531 -2053.2051 1480.0098 -2061.4941 c1482.1689 -2063.5859 1484.4126 -2065.6523 1486.7295 -2067.6631 C1482.7622 -2071.083 1478.0024 -2073.6426 1473.6792 -2076.5488 c1467.8359 -2080.4766 1463.5142 -2085.6328 1461.0039 -2092.2109 c1458.0088 -2100.0566 1470.5811 -2103.417 1473.5391 -2095.666 c1475.2637 -2091.1484 1479.3955 -2088.1348 1483.4146 -2085.7773 c1487.9199 -2083.1348 1492.6709 -2079.8379 1496.5591 -2076.3125 c1496.751 -2076.1387 1496.9268 -2075.9609 1497.0898 -2075.7813 C1503.2061 -2080.0361 1509.752 -2083.6211 1516.6924 -2085.9951 c1523.5039 -2088.3242 1530.0718 -2091.333 1536.729 -2094.0566 c1543.2754 -2096.7344 1551.4287 -2100.4326 1558.6299 -2100.4385 c1574.1646 -2100.4502 1589.0483 -2105.2715 1604.5674 -2105.3867 c1618.3667 -2105.4893 1631.5815 -2106.7422 1644.3677 -2100.3936 c1655.4634 -2094.8838 1666.9141 -2091.6953 1676.2832 -2083.0898 c1685.3545 -2074.7568 1690.3018 -2060.4199 1691.2383 -2048.4424 c1691.7725 -2041.6152 1693.5313 -2035.2578 1693.522 -2028.3115 c1693.5112 -2019.8408 1693.291 -2011.3896 1692.3101 -2002.9697 c1691.9043 -1999.4863 1691.6768 -1995.9707 1691.4165 -1992.4609 C1693.4873 -1993.3086 1695.0283 -1994.6914 1695.5723 -1996.9004 c1697.5742 -2005.0381 1710.1104 -2001.5859 1708.1074 -1993.4453 c1705.7256 -1983.7646 1698.2388 -1980.377 1689.7974 -1979.2441 Cf0 D1467.6465 -1980.8506 m1467.6396 -1980.8574 1467.6323 -1980.8633 1467.6255 -1980.8691 C1455.3374 -1979.0732 1442.9033 -1971.252 1439.542 -1958.9629 c1437.2588 -1950.6182 1436.7422 -1941.209 1436.4351 -1932.6074 c1436.1377 -1924.2686 1436.1421 -1914.5518 1441.1011 -1907.4951 c1448.8628 -1896.4502 1466.0859 -1895.8408 1478.1377 -1895.5615 c1485.6709 -1895.3867 1491.9048 -1895.4746 1498.6792 -1899.1699 c1504.9678 -1902.5996 1511.1553 -1908.2383 1512.8574 -1915.4189 c1512.9316 -1915.7324 1513.0269 -1916.0234 1513.1313 -1916.3037 C1511.2935 -1917.8711 1509.4595 -1919.2607 1507.877 -1921.2344 c1505.7148 -1923.9297 1502.9312 -1926.1514 1500.2974 -1928.3604 c1489.8491 -1937.123 1482.9966 -1947.9033 1476.8086 -1959.9775 c1473.6982 -1966.0469 1470.9692 -1972.3096 1468.4111 -1978.6299 c1468.124 -1979.3398 1467.874 -1980.085 1467.6465 -1980.8506 Cf1672.521 -2066.8486 m1669.459 -2072.542 1664.5674 -2076.4502 1659.0718 -2079.6377 c1654.125 -2082.5078 1648.7451 -2084.5596 1643.4385 -2086.6465 c1636.6812 -2089.3047 1631.0498 -2092.1328 1623.6421 -2092.6436 c1617.3003 -2093.0801 1610.9106 -2092.5127 1604.5674 -2092.3867 c1597.1855 -2092.2402 1590.0513 -2090.4883 1582.7041 -2089.9561 c1579.0386 -2089.6895 1575.2754 -2088.4082 1571.5928 -2087.9287 c1567.9199 -2087.4492 1564.1777 -2087.46 1560.4814 -2087.4395 c1553.6855 -2087.4033 1546.396 -2084.0088 1540.1851 -2081.5205 c1526.8506 -2076.1787 1513.439 -2071.5059 1501.7251 -2063.0166 c1491.9419 -2055.9268 1481.0986 -2047.0762 1477.4854 -2035.1387 c1474.3535 -2024.792 1475.4873 -2013.2275 1477.0752 -2002.7129 c1477.9194 -1997.125 1479.0381 -1991.5811 1480.1514 -1986.042 c1481.5391 -1979.1367 1484.8872 -1972.8125 1488.0342 -1966.5391 c1491.0625 -1960.5 1494.4531 -1954.6387 1498.2681 -1949.0625 c1499.9204 -1946.6484 1501.811 -1944.543 1503.8403 -1942.5742 C1510.9307 -1944.792 1518.3086 -1944.1094 1525.3818 -1946.502 c1529.6753 -1947.9551 1533.9756 -1949.4375 1538.0649 -1951.4023 c1542.0933 -1953.3389 1546.731 -1954.2471 1550.8828 -1956.0137 c1555.0146 -1957.7725 1559.124 -1959.5469 1563.3872 -1960.9678 c1567.4082 -1962.3086 1571.4253 -1963.1328 1575.2598 -1965.0137 c1582.8096 -1968.7178 1588.7217 -1975.1572 1595.436 -1980.1045 c1602.5137 -1985.3193 1609.2793 -1990.9365 1615.6445 -1997.002 c1622.1504 -2003.2012 1627.3115 -2010.209 1633.0459 -2017.0527 c1644.3564 -2030.5527 1658.2314 -2043.8018 1663.4736 -2061.0977 c1664.9717 -2066.042 1670.3335 -2066.624 1673.6382 -2064.4521 C1673.3037 -2065.2627 1672.9424 -2066.0645 1672.521 -2066.8486 cf1679.5225 -2040.3584 m1679.2129 -2041.9248 1678.9248 -2043.4883 1678.6738 -2045.0654 c1678.5161 -2046.1895 1678.3711 -2047.3145 1678.2383 -2048.4424 C1677.751 -2050.1846 1677.8213 -2050.6299 1678.4492 -2049.7773 C1677.3428 -2052.2295 1676.6245 -2054.7949 1675.915 -2057.3613 C1670.5762 -2040.041 1658.1338 -2026.4141 1646.5493 -2012.9434 c1640.3716 -2005.7598 1634.9111 -1998.0918 1628.3105 -1991.2568 c1621.855 -1984.5723 1614.6953 -1978.5928 1607.3433 -1972.9268 c1600.125 -1967.3633 1593.2969 -1961.0088 1585.6895 -1956.0049 c1577.9844 -1950.9355 1568.9004 -1949.4736 1560.4824 -1946.0781 c1551.7236 -1942.5459 1542.9775 -1939.0898 1534.123 -1935.8184 c1529.8008 -1934.2207 1524.9585 -1931.8867 1520.3096 -1931.8809 c1518.8369 -1931.8789 1517.29 -1931.8926 1515.7354 -1931.8369 C1518.0376 -1929.5264 1520.1865 -1927.2588 1522.7041 -1925.1582 c1523.0176 -1924.8965 1523.313 -1924.6172 1523.6172 -1924.3467 C1525.8682 -1925.9424 1528.8682 -1925.9209 1531.1274 -1923.0674 c1538.8008 -1913.3799 1551.1592 -1910 1563.0479 -1910 C1565.9946 -1910 L1565.6523 -1912.3125 1565.2432 -1914.6162 1564.708 -1916.9014 c1562.7969 -1925.0557 1575.3311 -1928.5176 1577.2432 -1920.3564 c1578.0449 -1916.9346 1578.5889 -1913.4746 1579.042 -1910 C1586.4399 -1910 L1594.0371 -1910 1601.5405 -1909.6963 1608.9263 -1911.7471 c1615.8799 -1913.6787 1621.707 -1917.666 1627.0664 -1922.3232 C1623.7329 -1926.8926 1629.5137 -1934.7637 1635.9849 -1931.6494 c1636.1836 -1931.5537 1636.3848 -1931.4648 1636.584 -1931.3711 C1637.9707 -1932.7441 1639.3525 -1934.1064 1640.7422 -1935.4258 c1651.2568 -1945.4082 1660.1924 -1956.2275 1669.3198 -1967.415 c1672.1958 -1970.9395 1674.5259 -1974.6426 1676.0752 -1978.7441 C1674.749 -1978.7646 1673.4546 -1978.7871 1672.21 -1978.7959 c1663.8301 -1978.8555 1663.8242 -1991.8555 1672.21 -1991.7959 c1673.7061 -1991.7852 1675.7676 -1991.5977 1678.0527 -1991.4434 C1678.0522 -1992.0859 1678.0508 -1992.7266 1678.0542 -1993.3594 c1678.0806 -1997.8672 1679.2803 -2002.3701 1679.7339 -2006.8643 c1680.5181 -2014.626 1680.5146 -2022.4648 1680.5244 -2030.2578 c1680.5293 -2033.7266 1680.1943 -2036.9609 1679.5225 -2040.3584 cf*U*u1 D1586.5313 -2030.8809 m1584.668 -2031.293 1583.415 -2032.2646 1582.6777 -2033.4932 C1575.2915 -2037.9854 1571.2563 -2046.5322 1572.5723 -2055.5195 c1574.3853 -2067.9072 1590.7871 -2072.0059 1601.0664 -2070.085 c1613.1284 -2067.8311 1620.4893 -2053.2178 1615.6792 -2042.1641 c1610.9834 -2031.3721 1596.9429 -2028.5742 1586.5313 -2030.8809 cf0 D1597.6104 -2057.5498 m1594.0693 -2058.4609 1586.6035 -2056.8857 1585.3213 -2052.9766 c1583.8135 -2048.3818 1588.5391 -2044.3564 1592.4565 -2043.416 c1592.8936 -2043.3105 1593.2905 -2043.1699 1593.6621 -2043.0078 C1597.2612 -2042.9902 1600.9199 -2044.0938 1603.416 -2046.6826 c1607.2441 -2050.6523 1601.29 -2056.6016 1597.6104 -2057.5498 cf*U*u1 D1532.4971 -2011.6289 m1531.875 -2011.375 1531.2363 -2011.1611 1530.5918 -2010.9629 C1530.9185 -2006.5176 1526.0684 -2001.624 1520.7808 -2004.375 c1513.7627 -2008.0264 1506.0869 -2014.4209 1506.1704 -2023.0596 c1506.2773 -2034.082 1520.1982 -2038.0908 1529.0664 -2037.8291 c1539.3286 -2037.5254 1546.9253 -2027.6553 1541.3535 -2018.1055 c1539.4053 -2014.7656 1535.9233 -2013.0293 1532.4971 -2011.6289 cf0 D1529.4624 -2024.7646 m1527.1875 -2025.3926 1524.3257 -2024.4746 1522.1577 -2023.8818 c1521.0957 -2023.5918 1520.0488 -2023.1475 1519.2148 -2022.4111 c1519.2476 -2022.4395 1519.1821 -2024.2559 1519.1641 -2022.3594 c1519.1641 -2022.3662 1519.5313 -2021.8428 1519.9902 -2021.2393 C1522.7256 -2022.292 1525.5571 -2022.957 1528.3467 -2023.9072 c1528.5703 -2023.9834 1528.7285 -2024.0352 1528.8462 -2024.0713 C1528.9199 -2024.124 1529.0947 -2024.2246 1529.4546 -2024.4082 c1529.5703 -2024.4678 1529.7163 -2024.5625 1529.8506 -2024.6475 C1529.7358 -2024.6855 1529.6104 -2024.7236 1529.4624 -2024.7646 cf*U1450.3296 -2010.3301 m1446.3271 -2013.9336 1440.2397 -2014.0664 1435.4556 -2016.2266 c1429.6455 -2018.8496 1425.1289 -2023.5674 1419.5464 -2026.5977 c1412.1772 -2030.5977 1418.7393 -2041.8223 1426.1079 -2037.8223 c1431.8564 -2034.7021 1436.5508 -2029.3086 1442.8359 -2027.2813 c1448.9824 -2025.2979 1454.5776 -2023.9746 1459.522 -2019.5215 c1465.7637 -2013.9004 1456.54 -2004.7363 1450.3296 -2010.3301 cf1534.2808 -2101.6875 m1527.2998 -2108.9316 1523.4121 -2117.3496 1520.2637 -2126.7773 c1517.6001 -2134.752 1530.1572 -2138.1436 1532.7988 -2130.2344 c1535.2314 -2122.9502 1538.0688 -2116.4883 1543.4731 -2110.8809 c1549.2891 -2104.8457 1540.1069 -2095.6426 1534.2808 -2101.6875 cf*u1 D1896.2793 -2007.4648 m1917.3506 -2024.1172 1939.1514 -2040.2129 1967.0234 -2041.1328 C1967.2754 -2042.1914 1967.8516 -2043.2412 1968.8477 -2044.1992 c1971.3633 -2046.6191 1973.8994 -2048.1758 1976.5449 -2049.1885 C1976.623 -2056.5742 1976.6807 -2063.9639 1977.0273 -2071.3291 c1977.3271 -2077.7197 1979.0127 -2083.8906 1979.4727 -2090.2344 c1979.6943 -2093.292 1980.2578 -2096.3496 1980.7568 -2099.3701 c1981.3643 -2103.0508 1981.3281 -2106.8389 1981.9912 -2110.4824 c1984.21 -2122.6816 1981.4717 -2137.1953 1985.7979 -2149 C2000.7539 -2149 L1995.4297 -2142.4121 1995.8105 -2132.2393 1995.6738 -2124.209 c1995.5967 -2119.667 1995.6162 -2115.1152 1995.0635 -2110.5986 c1994.165 -2103.2451 1992.875 -2095.7754 1992.3389 -2088.3828 c1991.8438 -2081.5557 1990.127 -2074.9727 1989.8955 -2068.0576 c1989.7061 -2062.3896 1989.75 -2056.7119 1989.6914 -2051.0381 C1990.5156 -2051.0459 1991.3506 -2051.0488 1992.209 -2051.0488 c2002.8242 -2051.0488 2014.3936 -2052.5586 2024.6221 -2049.4102 c2037.3271 -2045.502 2055.2656 -2036.4717 2051.8496 -2020.25 c2048.3691 -2003.7158 2027.7568 -2003.042 2014.3516 -2003.3486 c2006.0869 -2003.5381 1999.1191 -2005.1367 1992.1553 -2009.916 c1991.1074 -2010.6348 1990.1055 -2011.3965 1989.1445 -2012.1953 C1989.2051 -2009.457 1989.2939 -2006.7188 1989.4473 -2003.9805 c1990.2178 -1990.2295 1992.7441 -1976.3438 1998.8096 -1963.8857 c2001.833 -1957.6768 2004.7529 -1951.1934 2007.4912 -1944.8379 c2010.1426 -1938.6855 2014.8936 -1934.3242 2020.2627 -1930.373 c2029.1484 -1923.833 2038.1143 -1920.0869 2049.2637 -1919.8535 c2061.8076 -1919.5898 2072.96 -1924.6621 2084.373 -1929.2188 c2090.5898 -1931.7012 2097.4883 -1932.5918 2103.4873 -1935.4805 c2108.3057 -1937.8008 2112.6074 -1941.4346 2116.6318 -1944.8887 c2120.9561 -1948.5996 2127.2803 -1952.1592 2131.7969 -1956.7324 C2130.7715 -1956.7012 2129.7627 -1956.6211 2128.7988 -1956.4365 c2121.1367 -1954.9688 2113.332 -1954.3838 2105.5449 -1954.1836 c2094.6172 -1953.9014 2078.6914 -1951.4395 2073.6816 -1963.8398 c2071.5693 -1969.0703 2074.1553 -1975.917 2077.5811 -1979.9248 c2081.4414 -1984.4414 2086.6777 -1986.5264 2092.2461 -1988.2725 c2097.9707 -1990.0664 2104.084 -1991.0791 2110.1543 -1991.5234 C2109.5742 -1994.9434 2112.3584 -1998.3672 2115.7402 -1999.0293 C2100.8525 -2007.4434 2099.1104 -2031.8066 2109.6914 -2045.4023 c2112.9805 -2049.6289 2117.7139 -2052.4482 2121.5469 -2056.1084 c2126.5107 -2060.8496 2132.0977 -2064.9971 2137.9219 -2068.6113 c2143.5596 -2072.1094 2149.6338 -2074.3164 2155.6719 -2076.9482 c2162.0703 -2079.7383 2168.2305 -2082.9004 2174.9375 -2084.9316 c2180.4248 -2086.5938 2185.5605 -2089.8623 2190.6182 -2092.5479 c2196.7393 -2095.7979 2202.9277 -2098.835 2209.3516 -2101.4443 c2220.6934 -2106.0518 2234.8135 -2108.6416 2246.4082 -2103.4902 c2264.7861 -2095.3262 2271.4385 -2071.209 2274.8613 -2053.2441 c2276.8496 -2042.8086 2280.5498 -2033.0771 2280.2891 -2022.2559 c2280.1455 -2016.3262 2278.5293 -2010.6846 2278.9688 -2004.7451 c2279.3789 -1999.1807 2280.0137 -1993.6582 2279.6816 -1988.0703 c2279.0117 -1976.8242 2270.5898 -1965.6904 2264.0791 -1956.9297 c2258.2236 -1949.0508 2251.7598 -1940.5469 2242.334 -1936.8955 c2231.209 -1932.5859 2220.0684 -1935.0195 2209.1631 -1938.7744 c2204.2578 -1940.4629 2199.4805 -1942.4805 2194.7607 -1944.6387 C2198.791 -1935.248 2199.5557 -1925.8027 2200.1543 -1915.6123 c2200.6299 -1907.5303 2200.9424 -1896.2168 2190.7285 -1894.8457 c2188.6748 -1894.5703 2185.9902 -1896.248 2185.1162 -1898.0654 c2182.3955 -1903.7197 2180.4277 -1909.6973 2177.708 -1915.3496 c2175.2275 -1920.5039 2174.2803 -1926.4814 2172.2109 -1931.8281 c2171.5156 -1933.625 2170.5938 -1935.3379 2169.5801 -1936.9844 C2169.2607 -1935.1416 2169.0313 -1933.2354 2168.7354 -1931.707 c2167.1719 -1923.6377 2162.8496 -1914.1055 2156.1016 -1909.2539 c2146.4912 -1902.3438 2136.0371 -1913.7549 2134.918 -1922.9688 c2134.2646 -1928.3555 2134.3779 -1933.2871 2135.3867 -1938.876 c2135.6621 -1940.4023 2135.8887 -1941.9814 2136.1211 -1943.5742 C2135.6426 -1943.1846 2135.1582 -1942.8008 2134.6689 -1942.4209 c2126.9658 -1936.4521 2119.4756 -1929.5537 2110.9844 -1924.7461 c2106.416 -1922.1602 2101.2539 -1920.8271 2096.1602 -1919.7695 c2092.8232 -1919.0762 2089.4414 -1917.3271 2086.2832 -1916.0664 c2082.7656 -1914.6621 2079.1279 -1913.4893 2075.666 -1911.9619 c2064.7148 -1907.1318 2052.208 -1905.916 2040.417 -1907.5625 c2029.4482 -1909.0938 2020.1074 -1914.1982 2011.4189 -1920.8633 c2006.4248 -1924.6943 2002.1094 -1928.9385 1998.2813 -1933.9336 c1996.3174 -1936.4941 1995.4902 -1940.124 1994.0957 -1943.0391 c1992.3223 -1946.7471 1990.4072 -1950.373 1988.7793 -1954.1504 c1983.1582 -1967.1973 1979.1289 -1979.7637 1977.3428 -1993.9092 c1976.3926 -2001.4316 1976.0605 -2009.0156 1976.0156 -2016.6055 C1972.7246 -2009.9541 1967.8242 -2004.1533 1962.4297 -1998.8193 c1952.7207 -1989.2188 1942.5225 -1980.2803 1931.9404 -1971.6719 c1921.6436 -1963.2959 1914.3154 -1952.2031 1902.5591 -1945.4668 c1892.8887 -1939.9258 1879.1553 -1940.041 1874.6284 -1951.8408 c1871.5576 -1959.8438 1872.1973 -1971.7637 1874.0098 -1980.0088 c1876.6021 -1991.7988 1887.3291 -2000.3916 1896.2793 -2007.4648 cf0 D1998.7168 -2021.1416 m2003.6777 -2017.4482 2008.3896 -2016.5049 2014.3516 -2016.3496 c2019.7607 -2016.209 2038.1563 -2014.7168 2039.2119 -2022.998 c2040.2871 -2031.4258 2025.3066 -2035.6367 2019.3672 -2037.3945 c2016.2773 -2038.3086 2013.2051 -2038 2009.9873 -2038 C1996.1602 -2038 L1993.9512 -2038 1991.6553 -2038.2002 1989.3965 -2038.2617 C1989.3389 -2036.2061 1989.2852 -2034.1494 1989.2363 -2032.0938 C1991.6387 -2027.8613 1994.8496 -2024.0205 1998.7168 -2021.1416 cf2149.9424 -1920.7822 m2150.3135 -1921.1426 2150.5957 -1921.6445 2150.8672 -1922.0459 c2152.3359 -1924.2129 2153.2734 -1926.7441 2154.2969 -1929.1367 c2155.4961 -1931.9414 2155.9805 -1933.9482 2156.7236 -1937.9238 c2157.4512 -1941.8174 2158.1865 -1945.9111 2160.2861 -1949.3398 c2167.4873 -1961.0957 2178.582 -1948 2182.3174 -1940.8184 c2182.3271 -1940.7998 2182.3359 -1940.7803 2182.3457 -1940.7617 C2181.0859 -1944.2627 2182.9414 -1947.4648 2185.5859 -1948.9951 C2181.627 -1950.9258 2177.6816 -1952.8789 2173.7129 -1954.751 c2168.2441 -1957.3301 2163.0098 -1960.3613 2157.4063 -1962.6523 c2155.0391 -1963.6201 2152.5615 -1964.5107 2150.0957 -1965.4512 C2150.0811 -1965.3359 2150.0566 -1965.2246 2150.04 -1965.1104 C2151.0879 -1963.8711 2151.9219 -1962.3467 2152.4727 -1960.4619 c2153.1563 -1958.1201 2152.666 -1955.4385 2151.9688 -1953.1758 c2151.585 -1951.9346 2150.9814 -1950.7432 2150.4561 -1949.5566 c2150.3633 -1949.3477 2150.2852 -1949.1816 2150.2158 -1949.043 C2150.2119 -1948.8652 2150.2021 -1948.6543 2150.1787 -1948.3682 c2149.6631 -1942.1348 2147.6348 -1936.1338 2147.1895 -1929.8955 c2146.9043 -1925.8955 2147.6152 -1923.5352 2149.9424 -1920.7822 Cf2154.1943 -1977.8457 m2167.3682 -1972.4434 2179.9941 -1966.1445 2192.8047 -1959.9238 c2199.2939 -1956.7715 2205.8301 -1953.7637 2212.6191 -1951.3096 c2219.3125 -1948.8906 2226.5762 -1946.5439 2233.7178 -1947.8564 c2238.6133 -1948.7559 2242.4453 -1951.2246 2245.6953 -1954.9082 c2249.998 -1959.7842 2254.0693 -1964.916 2257.6465 -1970.3672 c2260.8613 -1975.2676 2265.3262 -1981.2539 2266.5654 -1987.0469 c2267.8516 -1993.0576 2266.3115 -2000.0977 2265.8643 -2006.1494 c2265.3848 -2012.6455 2267.3623 -2019.0518 2267.3184 -2025.6045 c2267.2695 -2032.7246 2264.1191 -2038.8301 2263.041 -2045.6738 c2261.5479 -2055.1445 2259.3359 -2064.7959 2255.5488 -2073.6328 c2252.1875 -2081.4746 2247.1406 -2090.1836 2238.3828 -2092.6094 c2223.5791 -2096.709 2206.9268 -2086.5059 2194.4609 -2079.8779 c2180.8096 -2072.6191 2166.082 -2067.9883 2152.0596 -2061.4824 c2144.6533 -2058.0469 2137.8906 -2053.3584 2131.8262 -2047.9219 c2127.207 -2043.7813 2121.3232 -2040.1045 2117.9707 -2034.7803 c2113.1279 -2027.0889 2115.2793 -2009.501 2126.5303 -2009.0811 c2134.8867 -2008.7695 2134.917 -1995.7686 2126.5303 -1996.0811 c2124.9229 -1996.1406 2123.4043 -1996.3428 2121.9639 -1996.6582 C2126.2021 -1992.8086 2131.1963 -1990.0117 2136.2012 -1987.2627 c2142.1572 -1983.9902 2147.8984 -1980.4277 2154.1943 -1977.8457 cf2137.6279 -1969.8838 m2137.7852 -1970.3867 2137.9922 -1970.8506 2138.248 -1971.2676 C2132.7246 -1974.7148 2126.9043 -1977.5488 2121.4414 -1980.9727 C2120.3945 -1979.6914 2118.8008 -1978.8184 2116.6543 -1978.7969 c2111 -1978.7393 2105.4678 -1978.0723 2099.9482 -1976.8555 c2095.1514 -1975.7988 2089.1699 -1974.5713 2086.4766 -1970.0703 c2086.1055 -1969.4521 2086.0547 -1968.5664 2086.1426 -1967.8047 C2086.332 -1967.7227 2086.6191 -1967.6172 2087.0576 -1967.4932 c2089.3691 -1966.8418 2092.0586 -1967.1084 2094.4316 -1967.1055 c2102.2637 -1967.0957 2110.084 -1967.1533 2117.8867 -1967.8965 c2123.1123 -1968.3936 2130.7725 -1970.1074 2137.6279 -1969.8838 Cf1886.2949 -1958.123 m1887.9521 -1949.292 1900.6885 -1959.5967 1903.9189 -1962.3672 c1908.1196 -1965.9697 1911.6929 -1970.0078 1915.376 -1974.0996 c1919.1265 -1978.2646 1923.6904 -1981.6816 1928.0674 -1985.1475 c1936.5723 -1991.8809 1944.3408 -1999.5752 1952.1904 -2007.0566 c1958.6377 -2013.2031 1964.1484 -2019.6387 1966.4619 -2028.1172 C1944.2324 -2027.0947 1925.9922 -2014.4434 1909.0342 -2001.0693 c1901.5835 -1995.1943 1893.2695 -1989.4238 1888.3608 -1981.1084 c1886.2358 -1977.5088 1886.1699 -1973.7891 1886.0571 -1969.749 c1885.9497 -1965.9121 1885.5825 -1961.9189 1886.2949 -1958.123 cf*U2170.9746 -2035.5869 m2168.6465 -2035.3477 2165.0166 -2029.5137 2163.2246 -2027.6133 c2160.0195 -2024.2148 2157.8438 -2022.2686 2157.7217 -2017.3955 c2157.5127 -2009.0273 2144.5117 -2009.0078 2144.7217 -2017.3955 c2144.9287 -2025.6973 2148.3096 -2031.0664 2154.0332 -2036.8066 c2159.2813 -2042.0703 2162.96 -2047.7617 2170.9746 -2048.5869 c2179.3115 -2049.4453 2179.2285 -2036.4375 2170.9746 -2035.5869 cf2212.209 -2043.2266 m2208.7344 -2041.9131 2209.5762 -2035.3096 2209.5742 -2032.21 c2209.5684 -2023.8271 2196.5684 -2023.8262 2196.5742 -2032.21 c2196.5801 -2042.3818 2198.207 -2051.7754 2208.752 -2055.7617 c2212.0703 -2057.0166 2215.875 -2054.3984 2216.748 -2051.2227 c2217.7539 -2047.5654 2215.5195 -2044.4785 2212.209 -2043.2266 cf2232.0293 -1972.1396 m2229.834 -1975.7627 2228.6787 -1979.6602 2227.9697 -1983.8086 c2227.4971 -1986.5723 2227.5801 -1990.8359 2225.6387 -1993.0469 c2220.1289 -1999.3164 2229.2871 -2008.5479 2234.8301 -2002.2383 c2240.9238 -1995.3037 2238.7334 -1986.1621 2243.2539 -1978.7002 c2247.6104 -1971.5107 2236.3652 -1964.9814 2232.0293 -1972.1396 cf3435.5156 -1451.6211 m3441.96 -1456.8564 3451.2168 -1447.7168 3444.707 -1442.4277 c3438.7373 -1437.5781 3433.3193 -1432.2012 3428.2754 -1426.3984 c3422.5088 -1419.7637 3418.0723 -1412.2217 3412.6074 -1405.3906 c3400.7305 -1390.5439 3388.168 -1376.1611 3378.2119 -1359.9639 c3369.4902 -1345.7754 3359.9395 -1332.0693 3350.5586 -1318.3135 c3347.9541 -1314.4941 3338.4141 -1302.5254 3339.5664 -1296.166 C3342.542 -1297.1543 3345.5049 -1298.9883 3348.1426 -1300.165 c3350.3916 -1301.1699 3352.2744 -1301.7109 3353.8242 -1302.9756 c3355.8662 -1304.6426 3358.0625 -1305.9893 3360.3945 -1307.2031 c3364.7803 -1309.4844 3369.7305 -1310.4473 3374.1143 -1312.6367 c3379.1133 -1315.1348 3384.1563 -1317.4873 3389.3086 -1319.6504 c3394.2109 -1321.709 3399.2793 -1323.29 3404.4502 -1324.5088 c3407.957 -1325.335 3411.3193 -1326.6914 3414.9648 -1327.2842 c3422.6221 -1328.5313 3431.1416 -1328.5713 3437.2988 -1323.2266 c3438.8906 -1321.8447 3439.7383 -1318.8965 3438.9707 -1316.9023 c3435.9219 -1308.9707 3429.8477 -1303.3018 3423.6758 -1297.7051 c3423.127 -1297.207 3420.7217 -1294.4414 3421.1211 -1295.5615 c3420.1523 -1292.8438 3418.8691 -1290.2217 3417.5547 -1287.6592 c3414.998 -1282.6777 3411.7852 -1278.0254 3408.6865 -1273.374 c3402.9658 -1264.7842 3396.1289 -1256.6982 3390.0303 -1248.3506 c3383.4619 -1239.3594 3376.4531 -1230.8145 3369.4082 -1222.2012 c3355.877 -1205.6602 3342.1035 -1189.4297 3328.0176 -1173.3838 c3322.0488 -1166.585 3314.7471 -1160.6533 3309.5781 -1153.2432 c3306.1084 -1148.2695 3301.5371 -1142.5049 3299.5068 -1136.3643 C3309.2354 -1136.0898 3319.3008 -1141.25 3327.9121 -1144.6504 c3341.3271 -1149.9482 3354.5479 -1151.7891 3368.7402 -1153.7021 c3382.5801 -1155.5684 3395.5342 -1163.0303 3408.9795 -1166.7949 c3413.4854 -1168.0566 3418.2246 -1168.1748 3422.3799 -1169.9785 c3426.2188 -1171.6455 3430.1191 -1173.1465 3434.0889 -1174.4697 c3442.0918 -1177.1396 3451.4863 -1179.6699 3459.8828 -1177.4805 c3463.5762 -1176.5176 3467.5498 -1173.5625 3468.6006 -1169.7402 c3470.2021 -1163.918 3463.4707 -1157.0576 3460.0088 -1153.1523 c3451.3848 -1143.4248 3443.0879 -1133.6123 3435.8467 -1122.7568 c3428.4961 -1111.7354 3419.0605 -1102.3115 3410.7314 -1092.0596 c3403.4238 -1083.0645 3397.7754 -1072.7251 3391.9805 -1062.7256 c3385.8604 -1052.1636 3379.8672 -1041.5293 3373.3926 -1031.1777 c3366.8398 -1020.7012 3359.7256 -1010.3203 3352.249 -1000.4844 c3349.4629 -996.8188 3346.5957 -993.5796 3344.2529 -989.6167 c3343.8457 -988.9287 3343.2422 -988.0386 3342.6182 -987.0557 C3344.2813 -987.8433 3345.8906 -988.6865 3347.3887 -989.4116 c3352.7734 -992.0171 3358.4434 -993.6548 3363.4043 -997.0996 c3370.1504 -1001.7847 3376.5879 -1007.1831 3383.082 -1012.2852 c3389.9277 -1017.6636 3397.5967 -1023.9521 3406.3809 -1025.645 c3410.2607 -1026.3926 3414.1602 -1025.9844 3417.5869 -1023.9268 c3423.166 -1020.5762 3422.0176 -1014.9795 3420.5547 -1009.6226 c3419.1436 -1004.457 3417.0254 -999.458 3414.877 -994.5645 c3411.9805 -987.9668 3407.0332 -982.0039 3403.043 -976.019 c3394.6855 -963.4829 3387.4287 -949.6792 3380.5293 -936.2637 c3373.5693 -922.728 3368.4707 -908.167 3361.8965 -894.4131 c3355.1934 -880.3892 3346.7012 -866.9897 3340.6133 -852.7241 c3336.7744 -843.7271 3331.7695 -835.2251 3326.292 -827.1387 c3323.7178 -823.3384 3321.7637 -819.7568 3319.7178 -815.6621 c3317.9932 -812.2075 3315.9316 -809.0059 3315.7461 -805.0493 c3315.3535 -796.7036 3302.3516 -796.6655 3302.7461 -805.0493 c3302.9473 -809.3403 3304.0576 -812.9746 3305.7715 -816.8818 c3307.5283 -820.8867 3309.4805 -825.978 3312.0518 -829.4448 c3318.1846 -837.7153 3323.4375 -846.6465 3327.8711 -855.9316 c3337.3223 -875.7271 3348.1074 -894.8599 3357.1387 -914.8999 c3361.3086 -924.1543 3364.7539 -933.7485 3369.3047 -942.8252 c3374.1631 -952.5156 3379.9121 -961.7451 3385.0342 -971.2964 c3390.1084 -980.7593 3396.4414 -989.5156 3402.3994 -998.4536 c3404.2334 -1001.2051 3405.2539 -1004.936 3406.374 -1008.0117 c3406.917 -1009.5034 3407.5273 -1011.0879 3408.0156 -1012.6992 C3407.8389 -1012.6426 3407.6504 -1012.5825 3407.4258 -1012.5161 c3404.1523 -1011.5459 3401.1338 -1009.4019 3398.3281 -1007.5186 c3391.9395 -1003.2285 3386.1436 -998.0947 3380.042 -993.417 c3373.6543 -988.5195 3367.3594 -983.748 3359.8652 -980.6401 c3351.5742 -977.2017 3343.0889 -971.8833 3333.9375 -971.3887 c3330.875 -971.2231 3328.6621 -973.5361 3327.6699 -976.1606 c3324.9512 -983.3477 3330.1406 -991.2954 3333.6553 -997.2393 c3335.8037 -1000.873 3338.3027 -1003.7534 3340.9824 -1007.0181 c3344.8691 -1011.7554 3347.9063 -1017.1211 3351.5537 -1022.0303 c3364.2773 -1039.1543 3374.1729 -1058.2148 3384.9961 -1076.542 c3390.0684 -1085.1299 3395.3135 -1093.4443 3401.5391 -1101.252 c3407.8203 -1109.1289 3414.9189 -1116.3301 3421.0566 -1124.3242 c3427.6084 -1132.8564 3433.002 -1142.0547 3440.2549 -1150.0771 c3442.9229 -1153.0283 3445.2324 -1156.251 3447.9258 -1159.1953 c3449.6982 -1161.1318 3451.7549 -1163.1152 3453.4492 -1165.2988 C3451.6191 -1165.2998 3449.7871 -1165.0527 3447.9941 -1164.7246 c3442.4912 -1163.7188 3437.1201 -1161.9004 3431.9004 -1159.9258 c3429.8838 -1159.1631 3428.9521 -1158.7754 3427.2803 -1158.0186 c3424.1465 -1156.6016 3420.8975 -1156.2363 3417.5371 -1155.5225 c3408.0625 -1153.5088 3398.9736 -1149.9365 3389.9531 -1146.4863 c3385.8711 -1144.9248 3381.7813 -1143.3936 3377.6406 -1141.9912 c3373.3809 -1140.5469 3367.9814 -1140.5928 3363.5195 -1140.0449 c3354.8535 -1138.9814 3346.3291 -1137.7275 3338.1348 -1134.584 c3323.3496 -1128.9111 3306.4863 -1120.0068 3290.2344 -1124.708 c3287.5371 -1125.4883 3285.3457 -1128.0752 3285.4629 -1130.9756 c3286.1563 -1148.1289 3300.2607 -1163.0039 3311.4492 -1174.6055 c3318.5723 -1181.9922 3324.8477 -1190.0732 3331.8623 -1197.5342 c3339.3682 -1205.5166 3346.2344 -1214.0889 3353.1084 -1222.6113 c3359.8164 -1230.9268 3366.8672 -1238.998 3373.3184 -1247.5107 c3380.0205 -1256.3535 3386.3691 -1265.458 3393.0723 -1274.3018 c3396.4365 -1278.7402 3399.6602 -1283.1582 3402.6396 -1287.8711 c3403.9492 -1289.9424 3405.1592 -1292.0684 3406.3291 -1294.2207 c3407.7031 -1296.748 3408.3721 -1299.707 3409.8076 -1302.1572 c3411.7793 -1305.5234 3415.9561 -1308.1953 3418.7656 -1310.8398 c3420.1973 -1312.1875 3421.7617 -1313.6377 3423.1484 -1315.2227 C3420.957 -1315.1875 3418.6641 -1314.7891 3417.2383 -1314.5566 c3411.6182 -1313.6416 3406.4717 -1311.7783 3400.9043 -1310.0859 c3394.3926 -1308.1055 3388.2451 -1305.1572 3382.1592 -1302.1504 c3375.832 -1299.0244 3368.9229 -1297.4961 3362.9316 -1293.6533 c3361.6543 -1292.834 3360.7539 -1291.5635 3359.4414 -1290.7949 c3358.0098 -1289.9561 3356.2266 -1289.5869 3354.7031 -1288.9404 c3351.6572 -1287.6465 3348.7012 -1286.1543 3345.6504 -1284.8701 c3339.5449 -1282.3008 3333.8867 -1281.1279 3329.4355 -1286.9883 c3323.3262 -1295.0283 3328.1602 -1306.1211 3332.332 -1313.8242 c3337.54 -1323.4375 3344.375 -1332.3604 3350.5029 -1341.3848 c3354.7109 -1347.583 3358.8809 -1353.8057 3362.9375 -1360.1025 c3367.3623 -1366.9688 3371.1523 -1374.2539 3376.2559 -1380.6328 c3386.4541 -1393.3818 3397.1563 -1405.8652 3406.4922 -1419.2578 c3414.499 -1430.7422 3423.4883 -1441.5801 3434.2461 -1450.5898 c3434.6699 -1450.9336 3435.0918 -1451.2773 3435.5156 -1451.6211 cf3410 -1440.5244 m3398 -1440.5244 3384.7988 -1440.667 3371.9688 -1442.2129 c3359.3945 -1443.7275 3346.8477 -1444.3174 3334.1846 -1443.8545 c3311.3711 -1443.0205 3288.2412 -1443.8984 3265.4678 -1441.7461 C3265.002 -1435.8984 3264.6787 -1430.04 3264.4346 -1424.1855 c3263.125 -1392.7217 3264.3115 -1361.293 3265.5723 -1329.8545 c3266.1162 -1316.3008 3266.8398 -1302.7021 3265.709 -1289.1777 c3264.6387 -1276.375 3264.2422 -1263.5225 3264.041 -1250.6807 c3263.8359 -1237.5215 3263.3213 -1224.3965 3265.2813 -1211.377 c3267.3203 -1197.8291 3268.7617 -1184.1924 3268.833 -1170.4814 c3268.877 -1162.0967 3255.877 -1162.1006 3255.833 -1170.4814 c3255.752 -1185.9404 3253.8867 -1201.2432 3251.4004 -1216.4805 c3250.1895 -1223.9053 3250.8926 -1231.8164 3250.9307 -1239.333 c3250.9717 -1247.4492 3251.0908 -1255.5645 3251.3301 -1263.6777 c3251.7891 -1279.2383 3253.5234 -1294.6572 3253.2031 -1310.2246 c3252.8691 -1326.4014 3251.9834 -1342.5615 3251.3936 -1358.7295 c3250.4082 -1385.75 3250.1846 -1413.123 3252.3477 -1440.1494 C3239.042 -1438.249 3225.7598 -1436.3477 3212.4531 -1434.4463 c3205.5332 -1433.458 3198.9238 -1433.1934 3191.9473 -1432.9873 c3185.0762 -1432.7832 3178.3652 -1430.7227 3171.585 -1430.6211 c3164.7686 -1430.5186 3157.9883 -1429.248 3151.2178 -1428.5645 c3145.0947 -1427.9463 3138.998 -1427.9824 3132.8789 -1427.1748 c3126.8838 -1426.3828 3120.7852 -1425.4199 3114.7217 -1425.7969 c3112.25 -1425.9502 3108.4502 -1426.8203 3105.3018 -1426.5273 C3109.1885 -1419.6992 3116.2813 -1413.7383 3121.1914 -1408.3311 c3130.1543 -1398.46 3139.2949 -1388.6953 3148.0791 -1378.627 c3152.8691 -1373.1367 3157.5498 -1367.5518 3162.2207 -1361.96 c3167.2852 -1355.8984 3171.627 -1349.3184 3176.6914 -1343.248 c3185.0645 -1333.209 3194.792 -1324.375 3203.1182 -1314.3809 c3208.7012 -1307.6787 3218.1113 -1299.4404 3217.1768 -1289.7832 c3215.9102 -1276.7021 3193.1563 -1282.1172 3184.5293 -1282.4805 c3181.375 -1282.6133 3177.9922 -1281.7129 3174.8516 -1281.3672 c3171.2949 -1280.9746 3167.7217 -1280.7461 3164.1504 -1280.5449 c3156.0107 -1280.0859 3147.8467 -1280.0547 3139.6953 -1280.0352 c3123.2852 -1279.9951 3107.6787 -1277.8193 3091.6992 -1274.125 c3086.5869 -1272.9434 3081.4971 -1271.6592 3076.4063 -1270.3867 c3072.3818 -1269.3809 3067.8096 -1270.9824 3063.8857 -1269.2422 c3060.2988 -1267.6514 3065.7334 -1259.8594 3067.1865 -1258.2051 c3070.3467 -1254.6064 3074.0195 -1251.4463 3077.6426 -1248.3291 c3092.7998 -1235.2852 3107.5732 -1220.8135 3124.5107 -1210.0771 c3128.6035 -1207.4834 3132.8066 -1205.3711 3136.7246 -1202.498 c3141.1709 -1199.2383 3145.5332 -1195.8643 3149.8926 -1192.4883 c3158.8477 -1185.5547 3167.6719 -1178.4531 3176.7246 -1171.6445 c3192.3232 -1159.9131 3210.3359 -1151.377 3221.0322 -1134.2559 c3223.4355 -1130.4102 3220.9131 -1126.1621 3217.1484 -1124.708 c3212.9258 -1123.0771 3208.0723 -1124.4121 3203.9893 -1125.8389 c3201.8945 -1126.5713 3199.8555 -1127.4814 3197.8115 -1128.3428 c3197.0322 -1128.6719 3196.248 -1128.9824 3195.4551 -1129.2754 C3194.5723 -1129.5098 3194.6426 -1129.5547 3195.666 -1129.4131 C3194.4561 -1129.5088 3193.2725 -1129.7402 3192.1152 -1130.1074 C3178.0879 -1133.665 3163.9502 -1135.6436 3149.7539 -1138.4824 c3142.2754 -1139.9785 3134.7998 -1141.4443 3127.3662 -1143.1416 c3120.1914 -1144.7793 3112.4863 -1146.0449 3105.1465 -1144.8105 c3104.0928 -1144.6328 3103.4336 -1144.4209 3102.6582 -1144.0156 C3102.9902 -1143.2061 3103.8789 -1141.9316 3104.3545 -1141.2402 c3106.6738 -1137.8662 3110.3535 -1134.9746 3113.6377 -1132.5898 c3118.7578 -1128.8701 3123.0098 -1123.9268 3127.5527 -1119.5225 c3133.2959 -1113.9541 3139.2275 -1108.5918 3145.374 -1103.4727 c3157.1719 -1093.6465 3168.3613 -1083.5479 3178.4346 -1071.9146 c3183.2549 -1066.3486 3188.7295 -1062.0332 3194.1299 -1057.0317 c3199.9512 -1051.6392 3205.2744 -1045.6797 3210.0811 -1039.3701 c3214.4258 -1033.666 3220.1719 -1028.604 3224.9541 -1023.2256 c3227.4111 -1020.4624 3229.873 -1017.7041 3232.3613 -1014.9692 c3234.9346 -1012.1426 3238.958 -1009.2148 3240.7852 -1005.8608 c3242.1113 -1003.4277 3243.6543 -1001.4541 3245.6123 -999.4961 c3247.541 -997.5684 3250.2324 -996.7134 3252.1152 -994.8306 c3253.8662 -993.0791 3254.8984 -990.8945 3256.7803 -989.1636 c3259.2803 -986.8638 3262.0029 -984.8403 3264.459 -982.4849 c3267.9863 -979.1035 3266.2598 -972.8564 3261.5918 -971.6211 c3254.9092 -969.8521 3248.7725 -971.5044 3242.2627 -973.1689 c3235.5859 -974.876 3228.3672 -975.8989 3221.4619 -976.1968 c3217.8057 -976.3545 3214.1396 -976.3262 3210.4814 -976.3271 c3206.708 -976.3281 3202.6387 -977.5337 3198.8867 -978.0186 c3190.5469 -979.0957 3182.1582 -979.7666 3173.7656 -980.2666 c3157.6855 -981.2246 3141.5605 -981.2568 3125.457 -981.2646 c3116.6162 -981.269 3107.7529 -982.0894 3098.9199 -981.5405 c3093.1768 -981.1836 3084.6621 -979.7803 3083.7588 -972.7598 c3082.1836 -960.5146 3095.2012 -951.7441 3102.8066 -944.1372 c3107.4902 -939.4536 3111.8271 -934.4653 3117.4883 -930.9766 c3123.4824 -927.2817 3129.3721 -923.585 3134.8594 -919.1523 c3140.459 -914.6289 3146.502 -910.7544 3152.1641 -906.2944 c3158.2402 -901.5083 3163.8887 -896.3232 3170.1992 -891.8047 c3180.1934 -884.6489 3191.0645 -878.2207 3202.4219 -873.5073 c3214.5889 -868.4585 3225.9922 -861.8481 3237.6914 -855.8398 c3249.2061 -849.9258 3261.7549 -846.6421 3273.1973 -840.6812 c3277.791 -838.2881 3282.3428 -835.7642 3286.5615 -832.731 c3290.3818 -829.9844 3294.4795 -826.5933 3299.3701 -826.3643 c3307.7158 -825.9731 3307.7539 -812.9717 3299.3701 -813.3643 c3293.4102 -813.6436 3288.3203 -815.8418 3283.3926 -819.104 c3278.3545 -822.4404 3273.3848 -825.4771 3268.2236 -828.5698 c3262.2129 -832.1714 3255.5254 -833.9795 3249.041 -836.4653 c3241.793 -839.2437 3234.8145 -842.6904 3227.9336 -846.2656 c3221.5488 -849.583 3215.2471 -853.0542 3208.8271 -856.3062 c3201.9492 -859.7905 3194.7031 -862.4082 3187.8613 -865.939 c3175.1309 -872.5088 3163.3105 -880.3857 3152.127 -889.3257 c3146.5439 -893.7881 3141.3301 -898.3936 3135.3945 -902.4351 c3129.2666 -906.6079 3123.8848 -911.5913 3117.6289 -915.6133 c3112.1924 -919.1099 3106.5781 -921.981 3101.9785 -926.5815 c3096.7383 -931.8218 3091.498 -937.0615 3086.2578 -942.3018 c3077.5664 -950.9941 3069.7764 -959.6177 3070.7588 -972.7598 c3071.4844 -982.4619 3077.6338 -988.9932 3086.4434 -992.3101 c3095.1367 -995.5835 3105.3672 -994.8516 3114.4648 -994.4741 c3129.707 -993.8413 3144.9873 -994.3164 3160.2393 -993.8594 c3168.625 -993.6079 3177.001 -993.1377 3185.3604 -992.4419 c3194.2441 -991.7031 3203.4551 -989.3296 3212.332 -989.3267 c3220.4258 -989.3237 3228.54 -989.1611 3236.4805 -987.4409 c3237.9482 -987.123 3239.4219 -986.8613 3240.8955 -986.6001 C3235.5488 -990.3237 3232.6211 -995.856 3228.1074 -1000.5015 c3217.6309 -1011.2842 3207.0703 -1022.6348 3197.6279 -1034.3081 c3192.958 -1040.0825 3187.7021 -1045.3765 3182.1943 -1050.3467 c3179.6719 -1052.623 3175.8906 -1054.6367 3173.7871 -1057.2432 c3171.1563 -1060.5015 3168.4424 -1063.6821 3165.6494 -1066.8022 c3155.3154 -1078.3477 3143.5127 -1087.9316 3131.8008 -1097.9844 c3121.7695 -1106.5947 3112.957 -1116.5332 3102.6504 -1124.752 c3095.792 -1130.2217 3088.0547 -1138.2559 3089.9424 -1147.7578 c3092.5049 -1160.6582 3113.1836 -1158.6699 3122.2461 -1157.2773 c3137.834 -1154.8818 3153.3301 -1150.9941 3168.8037 -1147.8994 c3173.373 -1146.9854 3178.0479 -1146.8457 3182.6318 -1145.9082 c3187.125 -1144.9893 3191.5986 -1143.7285 3196.0234 -1142.5908 C3191 -1146.6035 3185.5244 -1150.1133 3180.1572 -1153.4238 c3167.2598 -1161.3809 3155.5869 -1171.665 3143.6621 -1180.9893 c3137.7637 -1185.6025 3131.8008 -1190.1299 3125.7188 -1194.499 c3122.9141 -1196.5137 3119.4375 -1197.9092 3116.4932 -1199.7754 c3113.1777 -1201.877 3110.0273 -1204.2363 3106.9268 -1206.6377 c3095.8799 -1215.1943 3085.6963 -1224.7031 3074.9873 -1233.6494 c3064.9658 -1242.0215 3051.8535 -1251.123 3050.0957 -1265.1318 c3049.3037 -1271.4385 3051.8652 -1277.1875 3057.3242 -1280.4668 c3063.1875 -1283.9893 3070.457 -1282.3008 3076.7734 -1283.877 c3092.4609 -1287.7891 3108.2305 -1291.3613 3124.3799 -1292.666 c3139.9834 -1293.9277 3155.709 -1292.7754 3171.3428 -1294.0352 c3177.7061 -1294.5469 3183.6221 -1295.6455 3190.0146 -1295.1221 c3194.2383 -1294.7764 3198.6895 -1294.1514 3203.0156 -1294.3652 C3201.2578 -1297.1484 3198.125 -1300.3359 3196.8135 -1301.8506 c3192.7793 -1306.5068 3189.0391 -1311.1094 3184.6973 -1315.4932 c3178.332 -1321.9199 3172.1318 -1328.5 3166.3369 -1335.4482 c3160.1182 -1342.9043 3154.625 -1350.8838 3148.375 -1358.3232 c3137.1211 -1371.7168 3124.9102 -1384.2422 3113.5049 -1397.4453 c3105.4707 -1406.7471 3094.1582 -1415.7773 3090.6328 -1428.0127 c3090.0283 -1430.1094 3090.6025 -1432.8643 3092.3047 -1434.3359 c3100.5498 -1441.4707 3110.4961 -1438.3984 3120.3535 -1438.8164 c3126.7373 -1439.0869 3133.0527 -1440.3115 3139.4043 -1440.9512 c3146.4258 -1441.6572 3153.4502 -1441.7695 3160.4814 -1442.6436 c3167.2861 -1443.4902 3174.0557 -1444.1973 3180.8516 -1445.0762 c3188.2637 -1446.0332 3195.9434 -1445.1133 3203.2666 -1446.1592 c3217.9902 -1448.2627 3232.7129 -1450.3662 3247.4365 -1452.4688 c3249.4932 -1452.7627 3251.5498 -1453.0215 3253.6055 -1453.2637 C3255.3516 -1468.6279 3258.7412 -1483.7109 3260.873 -1499.0225 c3263.084 -1514.915 3264.3545 -1530.9434 3265.5195 -1546.9404 c3266.5078 -1560.5068 3267.3398 -1574.084 3268.3281 -1587.6504 c3269.3281 -1601.3594 3271.041 -1614.9463 3272.3203 -1628.6162 c3273.5244 -1641.4795 3274.9512 -1654.4121 3275.8027 -1667.2842 c3276.6133 -1679.5293 3280.748 -1691.1416 3283.2285 -1703.0732 c3284.75 -1710.3877 3296 -1708.5449 3296 -1701.3457 C3296 -1699 L3296 -1697.207 3295.4785 -1695.7764 3294.6514 -1694.6982 C3293.5332 -1690.0498 3292.2617 -1685.4385 3291.1338 -1680.791 c3289.3262 -1673.3418 3289.2861 -1665.9424 3288.0908 -1658.4561 c3285.7881 -1644.0322 3285.8008 -1629.3164 3283.6797 -1614.8535 c3281.334 -1598.8643 3280.9307 -1582.3945 3279.8496 -1566.2803 c3278.7734 -1550.2275 3277.6816 -1534.1748 3276.0947 -1518.1631 c3274.5352 -1502.4316 3272.4063 -1486.7422 3269.3604 -1471.2275 c3268.2734 -1465.6895 3267.4258 -1460.1123 3266.7441 -1454.5117 C3288.0137 -1456.0908 3309.3066 -1455.7549 3330.6982 -1456.7051 c3344.0137 -1457.2969 3357.1113 -1456.7588 3370.3574 -1455.4219 c3377.1602 -1454.7344 3383.6367 -1453.627 3390.4883 -1453.5244 c3397.0684 -1453.4258 3404 -1453.5244 3410 -1453.5244 c3419 -1453.5244 3419 -1440.5244 3410 -1440.5244 cf3898.6963 -1799.2998 m3896.499 -1802.6533 3889.1563 -1804.0527 3885.6074 -1805.3926 c3881.4053 -1806.9805 3877.4258 -1809.0322 3873.5557 -1811.2979 c3862.2627 -1817.9092 3849 -1821.6553 3836.6191 -1825.834 c3813.1904 -1833.7412 3789.0459 -1838.1162 3765.1309 -1844.1338 c3742.5938 -1849.8047 3719.6523 -1858.3926 3696.5732 -1861.2383 c3674.5645 -1863.9512 3652.1992 -1863.6553 3630.3477 -1866.9209 c3606.8193 -1870.4375 3584.4121 -1873.292 3560.5615 -1872.0068 c3548.9395 -1871.3799 3537.3496 -1870.1963 3525.7793 -1868.96 c3514.0117 -1867.7031 3502.4561 -1867.6846 3490.626 -1867.6846 c3479.9648 -1867.6846 3469.2539 -1867.3838 3458.5996 -1867.7246 c3454.9834 -1867.8408 3451.3652 -1868.4199 3447.7568 -1868.6758 c3445.8535 -1868.8115 3443.9648 -1868.7813 3442.0615 -1868.6963 C3441.7344 -1868.5381 3441.4736 -1868.4395 3441.2539 -1868.3789 C3441.3545 -1867.6797 3441.46 -1866.9814 3441.5498 -1866.2813 C3442.1563 -1856.502 3449.1221 -1847.6846 3452.2129 -1838.7549 c3456.1602 -1827.3535 3462.2725 -1816.7363 3467.8037 -1806.0566 c3473.1855 -1795.667 3480.2813 -1786.1816 3486.4521 -1776.2305 c3492.8496 -1765.916 3498.5107 -1755.252 3504.9824 -1744.9814 c3517.5342 -1725.0605 3529.1973 -1704.9277 3544.9922 -1687.3047 c3550.835 -1680.7852 3555.9541 -1673.0928 3560.7754 -1665.7148 c3563.3301 -1661.8057 3564.4365 -1657.2148 3566.3193 -1652.9961 c3568.8262 -1647.3818 3571.5469 -1641.8613 3574.2344 -1636.3311 c3578.9072 -1626.7148 3583.4434 -1617.0576 3587.5107 -1607.167 c3590.2305 -1600.5508 3594.1563 -1593.8135 3594.6973 -1586.5459 c3595.1523 -1580.4453 3592.6992 -1574.3018 3586.5381 -1572.1426 c3576.9297 -1568.7764 3565.8398 -1575.5 3556.6924 -1577.7471 c3547.1572 -1580.0889 3538.4629 -1583.7324 3528.5068 -1583.7354 c3516.6191 -1583.7383 3504.6045 -1583.7354 3492.8291 -1585.5732 c3486.54 -1586.5557 3480.5723 -1588.9434 3474.1758 -1589.2793 c3473.127 -1589.334 3472.2246 -1589.2715 3471.2598 -1589.0859 C3471.4189 -1588.6699 3471.6953 -1588.0186 3472.1914 -1587.0059 c3474.6221 -1582.041 3478.2578 -1577.6738 3480.9824 -1572.8643 c3491.8457 -1553.6904 3507.2822 -1539.0264 3520.8965 -1521.9326 c3537.3896 -1501.2256 3553.7188 -1480.3525 3569.8877 -1459.4248 c3578.4414 -1448.3535 3585.6865 -1435.874 3593.1084 -1424.002 c3601.249 -1410.9805 3608.7891 -1397.5879 3616.2217 -1384.1533 c3623.125 -1371.6758 3629.6543 -1358.9541 3636.7539 -1346.6016 c3639.958 -1341.0273 3641.9102 -1335.0547 3645.4434 -1329.5547 c3648.9316 -1324.124 3652.5566 -1318.9717 3654.6816 -1312.8291 c3657.1035 -1305.8291 3660.3525 -1299.126 3663.4023 -1292.3857 c3666.1387 -1286.3408 3667.9277 -1278.9043 3671.4697 -1273.3369 c3676.9902 -1264.6602 3681.0635 -1253.082 3678.4766 -1242.8281 c3677.9473 -1240.7256 3676.0801 -1238.7676 3673.9375 -1238.2881 c3663.7344 -1236.0039 3654.6738 -1242.4775 3646.4121 -1247.585 c3641.834 -1250.4141 3636.9209 -1252.8125 3632.2275 -1255.4561 c3625.2988 -1259.3594 3618.2227 -1261.2695 3610.8857 -1264.0371 c3595.5801 -1269.8096 3580.4766 -1276.1035 3565.2305 -1282.0264 c3557.0664 -1285.1973 3549.1035 -1288.8633 3540.7402 -1291.4785 c3537.1895 -1292.5889 3533.5684 -1293.4844 3529.9658 -1294.4023 c3528.2402 -1294.8418 3526.582 -1295.6055 3524.9258 -1296.3164 C3527.3086 -1293.4473 3530.0732 -1290.6611 3531.5068 -1288.4727 c3536.4668 -1280.8994 3541.3438 -1273.2793 3545.6113 -1265.2852 c3550.0889 -1256.8984 3557.1719 -1250.0566 3562.8379 -1242.4482 c3569.0469 -1234.1094 3573.4072 -1224.4531 3579.0557 -1215.7373 c3599.9297 -1183.5332 3628.1855 -1156.2803 3645.7227 -1121.9092 c3650.1172 -1113.2979 3656.6543 -1105.4023 3661.6084 -1097.0547 c3666.7344 -1088.418 3670.5557 -1079.1602 3675.4619 -1070.4346 c3680.3662 -1061.7119 3685.1016 -1052.897 3690.0771 -1044.2139 c3695.583 -1034.6055 3702.5908 -1025.6704 3707.4004 -1015.7354 c3716.4141 -997.1152 3723.2646 -977.5591 3727.8594 -957.3945 c3732.4053 -937.4438 3734.8721 -919.4502 3727.8594 -899.6172 c3726.9805 -897.1294 3724.5547 -894.4771 3721.5918 -894.8452 c3713.9297 -895.7969 3708.6973 -900.7593 3702.4316 -904.8228 c3698.8574 -907.1416 3695.792 -909.3213 3692.7441 -912.356 c3688.4209 -916.6592 3682.2061 -919.5288 3677.1836 -923.0029 c3668.5215 -928.9941 3660.332 -935.6304 3651.834 -941.8442 c3647.4951 -945.0176 3642.8389 -947.748 3638.1592 -950.3809 c3633.5078 -952.998 3627.1035 -954.8838 3623.168 -958.4775 c3619.292 -962.0181 3613.9287 -964.9722 3608.8887 -966.5342 C3608.5186 -965.1025 3608.9307 -963.0903 3609.1572 -961.7124 c3609.8574 -957.4404 3611.3887 -953.2773 3612.8184 -949.2085 c3616.2813 -939.3521 3622.834 -930.1406 3628.0859 -921.1382 c3634.5371 -910.0806 3641.1104 -899.0947 3647.5615 -888.0366 c3671.8418 -846.4185 3690.0664 -801.6826 3712.4932 -759.0874 c3722.6797 -739.7378 3729.334 -718.6934 3736.1475 -697.9946 c3743.2227 -676.502 3751.1875 -655.1758 3759.0332 -633.9497 c3763.4824 -621.9121 3767.8906 -610.0513 3771.4629 -597.7026 c3774.9375 -585.6909 3777.9512 -573.6069 3782.5039 -561.9395 c3786.8564 -550.7861 3792.8916 -539.6191 3794.9609 -527.7427 c3797.2881 -514.3779 3801.1309 -501.2559 3805.2295 -488.3433 c3809.04 -476.3413 3812.4707 -464.4492 3814.8584 -452.0703 c3817.416 -438.8057 3821.0254 -425.9224 3824.5088 -412.8618 c3827.1172 -403.083 3830.4473 -393.2764 3831.9639 -383.2974 c3832.4873 -379.853 3833.4141 -376.4688 3834.4385 -373.145 c3835.0547 -371.144 3835.832 -369.2339 3836.7617 -367.3604 c3837.4805 -365.9116 3839.7207 -364.3784 3837.6416 -364.6357 c3845.8496 -363.6206 3845.9482 -350.6084 3837.6416 -351.6357 c3825.0781 -353.1895 3821.2715 -369.3677 3819.4277 -379.8413 c3815.9971 -399.3311 3809.6279 -418.8125 3804.2129 -437.8892 c3801.3291 -448.0483 3800.3965 -458.8794 3797.6162 -469.1392 c3794.501 -480.6304 3790.3809 -491.8281 3787.2383 -503.3213 c3784.3965 -513.7114 3782.9561 -524.4438 3779.4863 -534.6348 c3775.8838 -545.2158 3770.9922 -555.3159 3767.2109 -565.835 c3763.5723 -575.959 3761.1514 -586.5571 3758.1641 -596.8857 c3754.8496 -608.3428 3750.6602 -619.3389 3746.498 -630.4941 c3738.5879 -651.6914 3730.707 -673.0576 3723.6113 -694.5386 c3716.5313 -715.979 3709.5508 -737.4287 3698.6963 -757.3237 c3687.2363 -778.3281 3677.6006 -800.5127 3667.2002 -822.0576 c3652.7139 -852.0654 3636.7471 -880.7783 3619.8467 -909.4844 c3612.6348 -921.7349 3604.4365 -933.9282 3599.7119 -947.377 c3596.9688 -955.1875 3591.958 -970.0176 3599.8975 -976.6675 c3607.375 -982.9307 3616.5654 -978.0435 3623.8711 -973.7661 c3627.1416 -971.8506 3629.9756 -969.2217 3633.3242 -967.5454 c3640.3311 -964.0391 3647.2158 -960.3623 3653.8379 -956.1665 c3666.5986 -948.0811 3677.9678 -937.8916 3690.6191 -929.5952 c3693.2373 -927.8779 3696.0908 -926.458 3698.5391 -924.5 c3701.6494 -922.0107 3704.1592 -918.9048 3707.5898 -916.834 c3710.3301 -915.1797 3713.8418 -911.7314 3717.2715 -909.6064 C3721.6592 -927.4961 3717.9111 -944.0054 3713.3564 -962.1611 c3708.5488 -981.3276 3701.8105 -1002.2827 3690.5918 -1018.6758 c3684.8232 -1027.1035 3679.7402 -1035.9976 3674.7441 -1044.8965 c3669.9404 -1053.4517 3664.4688 -1062.0293 3660.5293 -1071.0098 c3652.2393 -1089.9072 3639.7715 -1106.5557 3629.6113 -1124.3994 c3610.5518 -1157.875 3581.8672 -1184.6641 3562.4443 -1217.999 c3557.4258 -1226.6113 3552.6084 -1234.9463 3546.2324 -1242.6523 c3540.0186 -1250.1641 3535.208 -1257.5781 3530.3457 -1266.0029 c3526.4102 -1272.8213 3522.1133 -1279.6904 3517.3906 -1285.9922 c3513.2002 -1291.585 3508.6016 -1296.666 3507.6846 -1303.8145 c3507.3076 -1306.7539 3509.9707 -1309.2305 3512.457 -1310.082 c3518.7236 -1312.2285 3523.9229 -1310.7314 3529.8115 -1308.1699 c3537.7969 -1304.6953 3546.8184 -1303.457 3554.9697 -1300.2002 c3570.2188 -1294.1094 3585.4346 -1287.9131 3600.7051 -1281.8633 c3614.2607 -1276.4932 3628.0693 -1272.7188 3640.8301 -1265.5313 c3645.7939 -1262.7363 3650.873 -1260.1396 3655.6982 -1257.1123 c3658.46 -1255.3799 3662.498 -1252.2813 3666.3359 -1251.1289 C3665.7617 -1257.9072 3660.7305 -1263.6387 3658.5342 -1269.9883 c3654.752 -1280.916 3649.4609 -1291.1689 3645.082 -1301.8516 c3642.9561 -1307.0352 3641.1338 -1312.1221 3638.1836 -1316.9141 c3635.6807 -1320.9785 3632.9238 -1324.8604 3630.5566 -1329.0117 c3624.8506 -1339.0156 3620.9492 -1349.9814 3614.7451 -1359.7939 c3601.9336 -1380.0527 3591.6904 -1401.9629 3578.8447 -1422.2734 c3573.1758 -1431.2373 3567.5986 -1440.4463 3561.5039 -1449.1064 c3555.8311 -1457.168 3548.7803 -1464.1807 3543.0313 -1472.2051 c3529.5771 -1490.9854 3515.1641 -1510.2588 3499.2529 -1527.0049 c3492.5137 -1534.0977 3486.3691 -1541.7168 3480.4902 -1549.5293 c3474.0176 -1558.1309 3469.2383 -1567.4355 3463.3672 -1576.4033 c3459.3262 -1582.5752 3456.4648 -1588.9482 3459.7354 -1596.0234 c3462.3574 -1601.6953 3470.3398 -1602.4814 3475.6719 -1602.2012 c3481.9131 -1601.8721 3487.6592 -1599.6279 3493.7227 -1598.5098 c3506.041 -1596.2363 3519.001 -1596.7373 3531.4688 -1596.7344 c3540.4756 -1596.7324 3549.1377 -1593.4023 3557.6748 -1590.9492 c3562.5244 -1589.5557 3567.0195 -1588.1387 3571.7627 -1586.4473 c3574.5801 -1585.4424 3577.584 -1584.8379 3580.5469 -1584.5 c3582.7285 -1584.25 3581.8076 -1585.8076 3581.3203 -1587.8965 c3579.5918 -1595.3027 3575.334 -1603.0557 3572.333 -1609.9453 c3567.6533 -1620.6875 3562.2744 -1631.1152 3557.2725 -1641.709 c3553.2324 -1650.2637 3550.3574 -1658.4941 3544.5742 -1666.0762 c3537.75 -1675.0234 3530.7344 -1683.7188 3523.834 -1692.6426 c3509.8408 -1710.7373 3498.9492 -1730.8652 3486.3506 -1749.917 c3480.0859 -1759.3896 3475.166 -1769.9453 3468.9746 -1779.5459 c3462.1602 -1790.1123 3455.9824 -1800.5713 3450.2109 -1811.751 c3445.3545 -1821.1611 3441.9844 -1831.3125 3436.9727 -1840.5918 c3432.5205 -1848.8359 3429.6025 -1858.5674 3428.3213 -1867.7637 c3425.6895 -1886.6426 3452.207 -1880.6846 3462.8086 -1880.6846 c3485.834 -1880.6846 3508.6709 -1880.1738 3531.5762 -1882.5732 c3547.9561 -1884.2891 3564.375 -1885.5449 3580.8516 -1885.623 c3596.8027 -1885.6992 3612.7295 -1882.7637 3628.4326 -1880.2881 c3644.9697 -1877.6816 3661.6729 -1877.9023 3678.3398 -1876.2949 c3694.3926 -1874.7471 3709.5645 -1872.2227 3725.1494 -1868.1064 c3741.5332 -1863.7793 3757.875 -1859.2207 3774.3486 -1855.25 c3791.583 -1851.0957 3808.9111 -1847.7266 3825.9658 -1842.8115 c3834.5293 -1840.3438 3842.9648 -1837.4375 3851.3623 -1834.4609 c3858.8242 -1831.8164 3868.8662 -1829.8047 3875.4902 -1825.4766 c3881.8818 -1821.3008 3888.3164 -1818.6494 3895.2441 -1815.5996 c3901.2939 -1812.9355 3906.123 -1811.6592 3909.9209 -1805.8604 c3914.5293 -1798.8252 3903.2686 -1792.3184 3898.6963 -1799.2998 cf*u1 D3878.9424 -2095.5957 m3875.8027 -2102.5508 3864.2188 -2101.9258 3857.8945 -2101.752 c3847.293 -2101.458 3837.1328 -2098.2236 3826.8867 -2095.7832 c3812.1152 -2092.2646 3797.3145 -2088.8721 3782.5801 -2085.2012 c3776.127 -2083.5938 3769.7217 -2081.7012 3763.5977 -2079.0879 c3760.4805 -2077.7568 3757.1299 -2075.2705 3753.6914 -2075.0918 c3752.5283 -2075.0313 3750.0635 -2074.3311 3748.3203 -2073.7813 c3747.6758 -2073.5781 3747.2266 -2073.3848 3746.7109 -2073.1211 C3746.1504 -2071.2285 3747.2715 -2067.7109 3747.498 -2065.8896 c3748.3496 -2059.0625 3749.4805 -2052.3252 3750.6738 -2045.5303 c3751.8271 -2038.957 3752.3945 -2032.2822 3753.0264 -2025.6445 c3753.7588 -2017.9463 3755.2529 -2010.293 3755.2529 -2002.5674 c3755.2529 -1986.9434 3755.5674 -1971.2832 3755.0703 -1955.666 c3754.5449 -1939.1904 3752.8506 -1922.7783 3752.7832 -1906.2832 c3752.7451 -1896.9063 3750.3047 -1886.335 3754.3652 -1877.4648 c3757.8281 -1869.9004 3746.626 -1863.2891 3743.1406 -1870.9043 c3737.2002 -1883.8789 3739.5889 -1898.3809 3739.8525 -1912.209 c3740.167 -1928.6904 3741.9072 -1945.1094 3742.2217 -1961.5928 c3742.3682 -1969.2783 3742.2529 -1976.9766 3742.2529 -1984.6641 c3742.2529 -1992.0547 3743.3506 -2000.4102 3742.1768 -2007.709 c3739.9102 -2021.8047 3739.7002 -2036.2354 3736.9063 -2050.2344 c3735.668 -2056.4424 3734.8779 -2062.4844 3734.0957 -2068.7617 c3733.4199 -2074.1836 3733.8906 -2079.1943 3737.6777 -2082.623 c3740.9043 -2085.5449 3745.7383 -2086.7939 3749.9072 -2087.6152 c3750.9756 -2087.8262 3752.0645 -2087.9346 3753.1455 -2088.0635 c3750.0273 -2087.6924 3755.2471 -2089.5146 3755.4355 -2089.6016 c3758.9844 -2091.2373 3762.627 -2092.6797 3766.3057 -2093.9932 c3780.0938 -2098.918 3794.8594 -2101.584 3809.0879 -2104.9326 c3821.4951 -2107.8525 3833.9658 -2111.71 3846.5664 -2113.6475 c3859.9199 -2115.7012 3883.3643 -2117.2295 3890.167 -2102.1563 c3893.5869 -2094.5801 3882.3867 -2087.9648 3878.9424 -2095.5957 cf0 D3746.7559 -2073.3145 m3746.7441 -2073.2842 3746.7432 -2073.2441 3746.7324 -2073.2129 C3748.1748 -2074.3965 3747.8252 -2076.1426 3746.7559 -2073.3145 cf*U*u1 D1867.2705 -322.0049 m1859.9614 -321.5605 1855.2451 -313.606 1849.7246 -309.8081 c1843.9346 -305.8252 1837.0801 -298.8853 1836.7339 -291.4678 c1836.686 -290.4443 1836.4468 -289.5474 1836.0674 -288.7739 C1837.9648 -287.668 1839.8809 -286.5806 1841.8315 -285.5342 c1844.4878 -284.1099 1846.5522 -281.9678 1849.0908 -280.3335 c1851.5952 -278.7212 1854.3125 -277.4248 1856.9712 -276.0928 c1862.8477 -273.1484 1868.4092 -270.0166 1873.0146 -265.2446 c1881.9297 -256.0088 1887.2939 -242.2041 1878.2354 -231.2998 c1876.5137 -229.2271 1874.5898 -227.3569 1872.5229 -225.6626 C1872.689 -225.6016 1872.854 -225.5503 1873.021 -225.4756 c1887.4795 -219.0088 1901.5723 -211.7788 1915.7559 -204.7393 c1922.5469 -201.3682 1929.374 -198.0708 1936.2686 -194.915 c1942.6787 -191.9805 1949.3477 -189.8662 1955.6143 -186.5566 c1961.3037 -183.5522 1966.5117 -179.7778 1971.5342 -175.7803 c1976.4639 -171.8579 1982.0176 -167.3823 1984.5811 -161.4663 c1988.7295 -151.8877 1982.4414 -144.8452 1973.6289 -141.7847 c1964.0313 -138.4517 1952.8535 -139.2329 1942.8906 -139.3311 c1928.1973 -139.4761 1913.3525 -140.4907 1899.2246 -144.7856 c1886.7256 -148.5854 1874.2788 -154.9912 1863.0591 -161.6318 c1852.4302 -167.9229 1842.5957 -175.6118 1833.6914 -184.1553 c1825.7549 -191.77 1818.77 -200.3164 1812.2754 -209.1748 c1807.3105 -215.9473 1818.5996 -222.4219 1823.501 -215.7363 c1837.9346 -196.0483 1855.8652 -179.9541 1877.4385 -168.4673 c1889.1675 -162.2217 1901.4688 -156.8887 1914.5703 -154.4292 c1927.9434 -151.9185 1942.0059 -152.1055 1955.5625 -152.3076 c1959.5137 -152.3667 1963.4385 -152.6953 1967.3027 -153.5317 c1968.8965 -153.877 1970.4912 -154.3223 1971.9482 -155.0601 c1972.5176 -155.3486 1972.8848 -155.8301 1973.0078 -155.6914 C1972.5391 -159.0835 1965.9932 -163.522 1963.6318 -165.5269 c1958.7617 -169.6636 1953.3115 -173.083 1947.6719 -176.061 c1941.8906 -179.1143 1935.6465 -181.0015 1929.707 -183.6899 c1922.7998 -186.8164 1915.9888 -190.1523 1909.1943 -193.5142 c1895.001 -200.5356 1880.9194 -207.7832 1866.4595 -214.25 c1865.4785 -214.689 1864.7358 -215.2573 1864.1968 -215.9053 C1861.6289 -216.2046 1859.0649 -216.5386 1856.5034 -216.8916 C1852.5288 -215.522 1848.4175 -214.5679 1844.3237 -214.019 c1841.2764 -213.6104 1838.2461 -213.3984 1835.1719 -213.3628 c1830.4834 -213.3086 1828.4214 -217.3467 1828.9756 -220.9365 C1819.5703 -222.21 1810.1353 -223.1797 1800.604 -223.2393 c1797.5098 -223.2588 1795.5605 -225.0449 1794.751 -227.2861 C1790.0034 -225.0166 1786.5474 -218.939 1784.3286 -214.7676 c1782.0723 -210.5249 1777.1787 -206.999 1773.833 -203.561 c1769.9111 -199.5308 1766.1323 -195.3706 1762.5366 -191.0464 c1759.3735 -187.2417 1756.5137 -183.8267 1752.6758 -180.666 c1748.8013 -177.4751 1744.833 -174.4609 1741.334 -170.8438 c1738.395 -167.8052 1736.5293 -163.8613 1733.9233 -160.5308 c1731.5244 -157.4648 1728.3662 -154.4434 1727.0303 -150.7061 c1725.0586 -145.189 1746.5732 -147.0825 1749.1045 -147.2173 c1753.8813 -147.4717 1758.665 -147.2861 1763.4424 -147.5679 c1769.2598 -147.9106 1773.7036 -150.5181 1779.123 -152.0566 c1793.4082 -156.1123 1814.4443 -159.292 1822.1523 -173.7607 c1826.0947 -181.1616 1837.3164 -174.5942 1833.377 -167.1992 c1822.8877 -147.5083 1797.8457 -145.2183 1779.1875 -137.9751 c1767.5596 -133.4614 1754.9629 -134.5068 1742.7305 -133.8667 c1731.9624 -133.3032 1718.0845 -134.4028 1714.2461 -146.498 c1710.9272 -156.9561 1722.3364 -164.7222 1726.5938 -172.6694 c1732.2881 -183.2988 1744.0146 -188.3247 1751.2129 -197.5884 c1755.0034 -202.4668 1759.1768 -207.0361 1763.4365 -211.5044 c1767.5029 -215.769 1771.8916 -219.5044 1774.9331 -224.5469 c1776.373 -226.9341 1778.0225 -229.2422 1779.8687 -231.3501 C1776.4209 -234.5786 1772.4443 -237.7466 1768.3955 -241 C1766.0361 -241 L1762.5322 -241 1759.4839 -243.7183 1759.5361 -247.2617 c1759.5415 -247.6211 1759.561 -247.9775 1759.5713 -248.3359 C1754.5986 -252.7305 1750.0479 -257.4434 1746.8359 -262.7729 C1746.6543 -262.7598 1746.4736 -262.7456 1746.2832 -262.7456 c1739.9648 -262.7407 1731.8843 -263.4097 1727.9429 -257.4331 c1723.3818 -250.5176 1725.4849 -242.4346 1725.6226 -234.6777 c1725.7715 -226.29 1712.771 -226.3042 1712.6226 -234.6777 c1712.417 -246.2642 1710.8164 -256.7329 1718.5366 -266.5269 c1724.4199 -273.9912 1733.4111 -275.4375 1742.3013 -275.6929 C1742.1309 -277.2036 1742.0659 -278.7578 1742.1333 -280.3662 c1742.6597 -292.9263 1751.7344 -302.3296 1762.6187 -307.6084 c1773.2578 -312.7686 1785.4224 -311.2153 1796.5801 -308.0894 C1796.5693 -308.3047 1796.5645 -308.5239 1796.5732 -308.752 c1796.9253 -317.75 1802.5967 -325.8096 1807.9683 -332.6255 c1813.3384 -339.4399 1821.0879 -346.8857 1830.2339 -347.3506 c1838.6162 -347.7769 1838.5752 -334.7744 1830.2339 -334.3506 c1826.4258 -334.1572 1820.814 -327.7676 1817.9355 -324.3804 c1814.4946 -320.3306 1809.7637 -313.6191 1809.5732 -308.752 c1809.499 -306.8564 1808.7686 -305.394 1807.6934 -304.3564 C1813.5098 -301.9663 1818.9355 -298.9644 1824.291 -295.8018 C1826.1816 -304.9106 1832.4561 -312.4849 1839.6318 -318.3511 c1848.0776 -325.2559 1855.6221 -334.2969 1867.2705 -335.0049 c1875.6475 -335.5142 1875.5981 -322.5112 1867.2705 -322.0049 cf0 D1770.1904 -296.7783 m1761.293 -293.8213 1754.5254 -286.271 1755.1797 -276.8018 c1755.5 -272.1587 1758.4771 -267.9102 1761.9199 -264.2471 C1762.3662 -265.8154 1762.8696 -267.3735 1763.459 -268.917 c1764.481 -271.5918 1766.5669 -274.1289 1767.4307 -276.7437 c1768.1758 -279 1768.915 -281.2251 1769.7246 -283.4595 c1771.5322 -288.4473 1773.877 -293.8374 1777.2852 -298.0308 C1774.8643 -297.918 1772.4829 -297.54 1770.1904 -296.7783 cf1802.3965 -292.5732 m1800.2334 -293.3711 1797.9531 -294.186 1795.6069 -294.9399 C1794.5654 -293.5298 1792.9424 -292.5112 1790.7275 -292.3823 c1785.5352 -292.0796 1782.4937 -280.7529 1781.1631 -276.8608 c1779.7559 -272.7456 1777.8311 -269.2241 1775.9805 -265.2983 c1774.332 -261.8022 1773.4336 -258.0098 1772.9697 -254.1689 C1778.8198 -249.2866 1784.8906 -244.668 1790.3379 -239.3188 C1792.7451 -240.3652 1795.3384 -241.0337 1798.1348 -241.1777 c1801.8193 -241.3677 1803.875 -238.9604 1804.3145 -236.1675 C1821.335 -235.6563 1838.0552 -232.4932 1854.8843 -230.1167 C1857.8809 -231.3735 1860.7344 -232.9805 1863.3613 -235.0098 c1866.8472 -237.7031 1870.9019 -240.9111 1869.9482 -245.7202 c1868.9429 -250.7876 1864.7256 -255.938 1860.709 -259.0054 c1856.7871 -262 1852.0996 -264.002 1847.7236 -266.2217 c1843.2661 -268.4829 1839.6235 -272.0771 1835.2705 -274.3091 c1824.0767 -280.0483 1814.2715 -288.1938 1802.3965 -292.5732 cf*U1744.4883 -214.1128 m1742.8687 -211.3477 1738.4106 -209.6133 1735.5952 -211.7808 c1720.1274 -223.6904 1738.373 -261.4336 1756.9712 -247.6978 c1763.6357 -242.7754 1757.1631 -231.4844 1750.4097 -236.4722 c1749.7422 -236.9658 1749.3125 -237.2876 1748.7417 -237.5146 C1748.7388 -237.4614 1748.3428 -237.4312 1747.9429 -237.1899 c1746.7949 -236.4985 1745.4722 -234.0249 1744.6802 -232.4277 c1743.7646 -230.5806 1743.1328 -228.1777 1742.9141 -226.1763 c1742.8354 -225.4604 1742.8711 -222.998 1742.833 -223.2354 c1742.9258 -222.6563 1743.0181 -222.3521 1743.0439 -222.2344 C1745.2466 -220.0884 1746.2314 -217.0879 1744.4883 -214.1128 cf3089.3789 -198.7349 m3095.374 -195.3906 3101.3066 -191.9243 3107.8877 -189.8584 c3113.6279 -188.0562 3117.8184 -192.3403 3121.9736 -195.564 c3127.6523 -199.9697 3132.002 -205.7046 3136.6035 -211.1875 c3141.4844 -217.0015 3147.0693 -222.1514 3151.627 -228.2363 c3159.918 -239.3052 3166.5313 -251.5313 3176.2559 -261.4961 c3180.875 -266.2305 3185.7813 -270.5166 3190.1504 -275.5381 c3194.8486 -280.9385 3199.3008 -286.5454 3204.042 -291.9106 c3210.6582 -299.3975 3218.2764 -305.9707 3225.3223 -313.0493 c3233.0479 -320.811 3240.7041 -328.6406 3248.1758 -336.6479 c3254.8115 -343.7598 3261.1133 -351.145 3267.877 -358.1318 c3271.4746 -361.8486 3274.9492 -365.7129 3277.9883 -369.9033 C3278.1328 -368.3438 3278.2607 -368.5913 3278.3711 -370.647 C3278.5088 -371.3926 3278.6943 -372.1265 3278.9268 -372.8486 C3278.9902 -373.0728 3279.0664 -373.3008 3279.1465 -373.5303 C3267.667 -384.207 3255.9619 -394.5923 3245.1084 -405.9712 c3230.6836 -421.0952 3216.3604 -435.5278 3200.0205 -448.6001 c3191.2754 -455.5962 3182.5303 -462.5918 3173.7852 -469.5879 c3166.4756 -475.436 3161.4473 -482.5498 3151.9629 -485.2002 c3143.9004 -487.4526 3147.3291 -499.9961 3155.418 -497.7354 c3169.3604 -493.8398 3178.2715 -482.5454 3189.1504 -473.8418 c3201.6035 -463.8794 3214.5703 -454.3198 3226.3643 -443.5786 c3237.542 -433.3994 3247.6416 -422.0728 3258.1104 -411.1851 c3267.2432 -401.687 3277.042 -392.937 3286.7646 -384.0669 C3290.3047 -384.4648 3293.9463 -382.4209 3293.5234 -377.8877 c3293.5205 -377.856 3293.5156 -377.8213 3293.5137 -377.7896 C3302.7363 -368.8936 3311.21 -359.3193 3320.1436 -350.1084 c3325 -345.1016 3329.8408 -340.0825 3334.543 -334.9307 c3339.8672 -329.0986 3344.5098 -322.7305 3349.707 -316.8091 c3360.0391 -305.0356 3370.8154 -293.6543 3380.7578 -281.5415 c3385.2412 -276.0786 3389.5059 -270.4282 3393.4805 -264.5854 c3397.2832 -258.998 3400.792 -253.5474 3405.71 -248.8442 c3412.5488 -242.3037 3431.1348 -234.938 3434.2773 -248.1064 c3435.3281 -252.5054 3435.9033 -257.0127 3436.5449 -261.4839 c3437.0654 -265.1143 3438.5371 -269.1924 3438.5518 -272.7998 c3438.5762 -278.6465 3438.3652 -285.9063 3441.2051 -291.1948 c3444.7461 -297.7886 3452.3379 -298.8374 3458.6416 -296.1621 c3464.8799 -293.5151 3467.8467 -286.2495 3471.3408 -281.0146 c3473.7979 -277.333 3476.3164 -273.7446 3479.2598 -270.4326 c3481.873 -267.4927 3486.2891 -265.4067 3488.0654 -261.9321 c3489.3076 -259.5015 3491.752 -254.6201 3494.6494 -251.479 C3495.2588 -255.5957 3495.8164 -259.8188 3497.5693 -263.8867 c3499.0771 -267.3882 3502.2031 -270.2144 3505.7617 -271.4951 c3510.7646 -273.2959 3514.7803 -271.1421 3519.6162 -270.3809 c3522.5645 -269.917 3525.3613 -267.1167 3527.4219 -265.1885 c3529.958 -262.8169 3532.4834 -260.5151 3535.1592 -258.2979 c3540.0078 -254.2803 3544.0166 -248.5786 3547.2021 -243.1772 c3548.4414 -241.0757 3549.5166 -238.8867 3550.8301 -236.8281 c3550.4199 -237.4717 3552.1465 -236.6641 3551.3896 -236.521 c3553.4365 -236.9077 3555.7578 -240.9189 3557.0977 -243.1606 c3561.4619 -250.4639 3565.1729 -257.7725 3570.0127 -264.8037 c3577.7676 -276.0688 3587.001 -286.2358 3596.4609 -296.0737 c3605.7051 -305.6865 3615.2129 -315.0425 3623.8789 -325.1929 c3632.6582 -335.4741 3639.0293 -346.4761 3643.9648 -359.042 c3649.2217 -372.4214 3653.4805 -386.2358 3660.6016 -398.7979 c3664.2129 -405.1685 3669.1973 -410.0942 3673.5566 -415.8535 c3678.4268 -422.2876 3681.3984 -429.8423 3683.7695 -437.4824 c3685.9746 -444.5854 3687.5518 -451.8745 3689.4092 -459.0723 c3691.5381 -467.3193 3694.8984 -475.187 3697.9541 -483.1221 c3701.0771 -491.2319 3703.9063 -499.4385 3705.4473 -508.0107 c3707.1299 -517.374 3707.6816 -526.3901 3707.6846 -535.9121 c3707.6875 -544.2954 3720.6875 -544.2954 3720.6846 -535.9121 c3720.6797 -520.2969 3719.1396 -505.2637 3714.3379 -490.3325 c3709.7451 -476.0493 3703.6328 -462.5747 3700.0215 -447.96 c3696.8096 -434.9609 3693.2393 -421.8813 3685.7246 -410.6191 c3682.2715 -405.4438 3677.6543 -401.2578 3674.1865 -396.0747 c3670.5869 -390.6929 3667.7588 -384.7598 3665.292 -378.7881 c3660.3164 -366.7383 3656.4199 -354.2935 3650.9258 -342.4502 c3645.2891 -330.2988 3636.7188 -319.9072 3627.8145 -310.0063 c3618.873 -300.0645 3609.2295 -290.7773 3600.0879 -281.0225 c3595.6182 -276.2534 3591.3125 -271.3379 3587.2061 -266.2524 c3582.9404 -260.9692 3579.7988 -254.4258 3575.2383 -249.4731 c3576.2266 -250.5464 3574.9355 -248.9067 3574.8457 -248.7622 c3574.29 -247.8662 3573.8027 -246.9253 3573.3086 -245.9946 c3572.2734 -244.0479 3571.2969 -242.0708 3570.2725 -240.1182 c3567.9707 -235.731 3565.3242 -231.29 3561.6699 -227.8867 c3557.9063 -224.3804 3553.5059 -223.1714 3548.4912 -223.939 c3542.417 -224.8687 3539.3066 -230.5986 3536.6582 -235.4092 c3533.2695 -241.5649 3528.8477 -246.7305 3523.4551 -251.1831 c3520.4258 -253.6846 3513.6523 -261.0103 3510.1338 -259.3066 c3509.7148 -259.1035 3509.2959 -258.5718 3508.8555 -257.4082 c3508.1563 -255.5581 3507.8008 -253.5728 3507.4668 -251.6309 c3506.834 -247.9512 3506.751 -244.0137 3505.6367 -240.3569 c3504.8389 -237.7368 3502.2793 -235.3696 3499.3691 -235.585 c3488.5605 -236.3843 3481.5254 -246.5757 3476.8398 -255.3711 c3477.9863 -253.2192 3475.2412 -256.3828 3474.8223 -256.7358 c3473.5625 -257.7988 3472.3672 -258.8926 3471.1934 -260.0508 c3468.8496 -262.3628 3466.8682 -265.0293 3464.875 -267.6387 c3461.3867 -272.2041 3458.8105 -277.2817 3455.4912 -281.9302 c3454.9199 -282.7295 3454.1191 -283.418 3453.415 -284.0938 c3453.2607 -284.2422 3452.8408 -284.4204 3452.5137 -284.5645 C3452.3438 -283.916 3452.2305 -283.2451 3452.1074 -282.5991 c3451.3203 -278.4775 3452.2832 -274.0381 3451.3164 -269.9868 c3449.7305 -263.3398 3448.9609 -256.5791 3447.8447 -249.8477 c3446.8105 -243.6108 3444.6602 -238.4707 3440.5186 -233.6582 c3433.8955 -225.9634 3420.7969 -227.4482 3412.1299 -230.1675 c3400.7734 -233.7314 3392.6533 -242.8091 3386.041 -252.252 c3377.3672 -264.6382 3368.4756 -276.3369 3358.4023 -287.6528 c3353.3271 -293.3535 3348.1816 -298.9902 3343.1055 -304.689 c3337.7832 -310.6636 3333.0156 -317.0908 3327.7207 -323.0986 c3321.5693 -330.0786 3315.0273 -336.7075 3308.5547 -343.3872 c3302.0898 -350.0601 3296.0576 -357.1953 3289.458 -363.7251 C3289.377 -363.5967 3289.2969 -363.4639 3289.2139 -363.3423 c3285.0645 -357.3027 3279.9863 -351.9028 3274.8721 -346.6836 c3264.6123 -336.2124 3255.1592 -324.9336 3244.9219 -314.4116 c3234.5205 -303.7222 3223.1973 -293.793 3213.2344 -282.7178 c3204.0283 -272.4839 3195.9912 -261.272 3185.4473 -252.3037 c3180.5293 -248.1196 3176.7969 -242.0767 3173.2002 -236.79 c3169.1445 -230.8271 3165.2598 -224.7607 3160.8535 -219.0444 c3156.5752 -213.4941 3151.5537 -208.6733 3146.9766 -203.3838 c3141.9512 -197.5776 3137.3926 -190.6265 3131.0215 -186.2197 c3126.6182 -183.1738 3123.0938 -179.8174 3118.0801 -177.7144 c3111.4277 -174.9224 3104.5234 -176.96 3098.249 -179.6094 c3087.3184 -184.2261 3077.5469 -191.0425 3066.4629 -195.3438 c3056.3174 -199.2817 3045.3037 -204.2725 3034.25 -204.374 c3033.2627 -204.3828 3032.6064 -204.3125 3031.7813 -204.1333 c3031.5801 -204.0898 3031.0645 -203.8779 3030.8379 -203.8237 C3030.6895 -203.2109 3030.6416 -202.583 3030.6982 -201.939 C3030.6035 -199.3999 3031.1416 -196.8315 3031.4482 -194.3232 c3032.2705 -187.6006 3032.9395 -180.271 3031.9805 -173.5552 c3031.4951 -170.1553 3030.3877 -166.8467 3028.1094 -164.2095 c3025.2041 -160.8481 3021.2637 -161.2202 3017.4385 -162.6133 c3010.9551 -164.9741 3006.4766 -170.1704 3000.5684 -173.1211 c2993.749 -176.5269 2986.3154 -179.8755 2978.4668 -178.6172 c2976.8955 -178.3652 2975.373 -177.8975 2973.8711 -177.3867 c2973.2422 -177.1733 2972.8545 -176.8872 2972.623 -176.6846 C2973.3359 -173.3906 2977.7168 -168.8281 2979.0557 -166.3535 c2982.2979 -160.3638 2975.9512 -154.6816 2970.1621 -157.46 c2966.4463 -159.2441 2962.5557 -160.4863 2958.5215 -161.3188 c2953.6553 -162.3232 2948.1729 -161.5137 2943.1963 -162.0015 c2932.0977 -163.0889 2920.8838 -166.7544 2910.0234 -169.292 c2899.1494 -171.833 2888.2852 -174.4185 2877.3994 -176.9106 c2871.5508 -178.2495 2866.1895 -179.7705 2860.6045 -181.9702 c2855.1074 -184.1357 2849.5635 -186.1685 2843.9385 -187.979 c2838.6113 -189.6929 2833.0391 -190.5776 2827.8398 -192.606 c2822.9199 -194.5254 2817.9355 -196.2734 2812.9199 -197.9253 c2802.8574 -201.2388 2792.5098 -203.311 2782.5088 -206.7827 c2772.9434 -210.103 2763.4023 -213.5259 2753.5059 -215.7427 c2748.8633 -216.7827 2744.6758 -220.0322 2740.1221 -221.6528 c2735.1299 -223.4297 2729.9365 -224.6553 2724.8027 -225.9409 c2716.6738 -227.9761 2720.123 -240.5132 2728.2578 -238.4761 c2733.4082 -237.187 2738.5391 -235.8682 2743.5781 -234.1885 c2745.7061 -233.479 2747.8086 -232.6367 2749.8574 -231.7241 c2752.0986 -230.7256 2754.5742 -228.7754 2756.9619 -228.2783 c2766.8652 -226.2168 2776.4336 -222.6357 2785.9648 -219.3184 c2795.9609 -215.8389 2806.293 -213.7065 2816.375 -210.4609 c2821.4023 -208.8428 2826.3662 -207.0322 2831.2959 -205.1416 c2836.5 -203.1455 2842.0527 -202.1641 2847.3945 -200.5146 c2853.0361 -198.772 2858.5615 -196.6499 2864.0605 -194.5059 c2869.6523 -192.3262 2875.0039 -190.7798 2880.8555 -189.4463 c2891.7432 -186.9648 2902.6064 -184.3735 2913.4795 -181.8276 c2924.375 -179.2764 2935.7393 -175.4736 2946.9004 -174.6899 c2951.3262 -174.3794 2955.6885 -174.5884 2960.0762 -174.1084 C2959.2188 -177.1895 2959.3047 -180.3525 2961.2646 -183.5522 c2965.0293 -189.6963 2974.2197 -191.6104 2980.8516 -191.7949 c2990.3662 -192.0601 2998.7871 -188.481 3007.1299 -184.3462 c3011.167 -182.3452 3015.0361 -177.5088 3019.4512 -175.4492 C3020.0557 -178.6426 3019.2949 -182.9053 3019.1045 -185.3721 c3018.6797 -190.8789 3017.8691 -196.4302 3017.6982 -201.939 c3017.3525 -213.0996 3026.2188 -217.7383 3036.126 -217.3257 c3045.3789 -216.9404 3054.5117 -213.6914 3063.1074 -210.499 c3072.1787 -207.1299 3080.9023 -203.4624 3089.3789 -198.7349 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF